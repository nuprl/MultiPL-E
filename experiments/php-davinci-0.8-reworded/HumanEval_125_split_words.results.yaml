language: php
name: HumanEval_125_split_words
results:
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if(strpos($txt, ' ') !== false)\
    \ {\n        return explode(' ', $txt);\n    } elseif(strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $odd = [];\n  \
    \      for($i = 0; $i < strlen($txt); $i++) {\n            if(ord($txt[$i]) %\
    \ 2 != 0) {\n                $odd[] = $txt[$i];\n            }\n        }\n  \
    \      return count($odd);\n    }\n}\n\n$test1 = split_words(\"Hello world!\"\
    );\n$test2 = split_words(\"Hello,world!\");\n$test3 = split_words(\"abcdef\");\n\
    echo \"Test 1: \" . json_encode($test1) . \"\\n\";\necho \"Test 2: \" . json_encode($test2)\
    \ . \"\\n\";\necho \"Test 3: \" . json_encode($test3) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Test 1: [\"Hello\",\"world!\"]\nTest 2: [\"Hello\",\"world!\"]\nTest 3:\
    \ 3\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb5ggvk_q.php:44\n\
    Stack trace:\n#0 /tmp/tmpb5ggvk_q.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpb5ggvk_q.php\
    \ on line 44\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    // Your code here\n}\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq9bbt_mr.php:20\n\
    Stack trace:\n#0 /tmp/tmpq9bbt_mr.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpq9bbt_mr.php\
    \ on line 20\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if(strpos($txt, ' ') !== false)\
    \ {\n        return explode(' ', $txt);\n    }\n    if(strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    }\n    $count = 0;\n    for($i =\
    \ 0; $i < strlen($txt); $i++) {\n        if($i % 2 === 0 && ord($txt[$i]) % 2\
    \ === 1) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n\
    function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0mgcdyov.php:39\n\
    Stack trace:\n#0 /tmp/tmp0mgcdyov.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp0mgcdyov.php\
    \ on line 39\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if(str_word_count($txt)==0){\n\
    \        if(substr_count($txt, ',')==0){\n            $result = 0;\n         \
    \   for($i=0; $i<strlen($txt); $i++){\n                if($i%2==0) $result++;\n\
    \            }\n            return $result;\n        }else{\n            return\
    \ explode(',', $txt);\n        }\n    }else{\n        return explode(' ', $txt);\n\
    \    }\n}\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpurd3tpc6.php:33\n\
    Stack trace:\n#0 /tmp/tmpurd3tpc6.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpurd3tpc6.php\
    \ on line 33\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n  if (preg_match('/[\\s]/', $txt))\
    \ {\n    return explode(' ', $txt);\n  } elseif (preg_match('/[,]/', $txt)) {\n\
    \    return explode(',', $txt);\n  } else {\n    return count(preg_grep('/[a-z]/',\
    \ str_split($txt)));\n  }\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzgu7x4nv.php:31\n\
    Stack trace:\n#0 /tmp/tmpzgu7x4nv.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpzgu7x4nv.php\
    \ on line 31\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n  // your code here\n}\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphxq1szo1.php:20\n\
    Stack trace:\n#0 /tmp/tmphxq1szo1.php(30): test()\n#1 {main}\n  thrown in /tmp/tmphxq1szo1.php\
    \ on line 20\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') != FALSE)\
    \ {\n        return explode(' ', $txt);\n    }\n    if (strpos($txt, ',') != FALSE)\
    \ {\n        return explode(',', $txt);\n    }\n    return split_count($txt);\n\
    }\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\"\
    , \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function split_count()\
    \ in /tmp/tmpq64brqj7.php:19\nStack trace:\n#0 /tmp/tmpq64brqj7.php(23): split_words('abcdef')\n\
    #1 /tmp/tmpq64brqj7.php(31): candidate('abcdef')\n#2 /tmp/tmpq64brqj7.php(37):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpq64brqj7.php on line 19\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = preg_split('/[\\s,]+/',\
    \ $txt);\n    if (count($arr) == 1) {\n        $arr = str_split($txt);\n     \
    \   $odds = 0;\n        foreach ($arr as $a) {\n            if (ord($a) % 2 ==\
    \ 1) {\n                $odds++;\n            }\n        }\n        return $odds;\n\
    \    }\n    return $arr;\n}\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvbdnkk5z.php:33\n\
    Stack trace:\n#0 /tmp/tmpvbdnkk5z.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpvbdnkk5z.php\
    \ on line 33\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if (preg_match('/[\\s,]/',\
    \ $txt)) {\n        return preg_split('/[\\s,]/', $txt);\n    }\n    $odds = [];\n\
    \    for ($i = 0; $i < strlen($txt); $i++) {\n        if (ord($txt[$i]) % 2 ==\
    \ 1) {\n            $odds[] = $txt[$i];\n        }\n    }\n    return count($odds);\n\
    }\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\"\
    , \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4jngoy1_.php:32\n\
    Stack trace:\n#0 /tmp/tmp4jngoy1_.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp4jngoy1_.php\
    \ on line 32\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    // Your code here\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpouh7pm_y.php:21\n\
    Stack trace:\n#0 /tmp/tmpouh7pm_y.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpouh7pm_y.php\
    \ on line 21\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') == false)\
    \ {\n        if (strpos($txt, ',') == false) {\n            $result = 0;\n   \
    \         for ($i = 0; $i < strlen($txt); $i++) {\n                if (ord($txt[$i])\
    \ % 2 == 1) {\n                    $result++;\n                }\n           \
    \ }\n            return $result;\n        } else {\n            return explode(',',\
    \ $txt);\n        }\n    } else {\n        return explode(' ', $txt);\n    }\n\
    }\necho '<pre>';\nprint_r(split_words('Hello world!'));\nprint_r(split_words('Hello,world!'));\n\
    print_r(split_words('abcdef'));\necho '</pre>';\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => Hello\n    [1] => world!\n)\nArray\n(\n    [0]\
    \ => Hello\n    [1] => world!\n)\n3</pre>\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpsojhjp9c.php:44\nStack trace:\n#0 /tmp/tmpsojhjp9c.php(49):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpsojhjp9c.php on line 44\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false)\
    \ {\n        return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 == 1) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\n\n$txt = 'Hello,world!';\nvar_dump(split_words($txt));\n\
    function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "array(2) {\n  [0]=>\n  string(5) \"Hello\"\n  [1]=>\n  string(6) \"world!\"\
    \n}\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpryog04tk.php:40\n\
    Stack trace:\n#0 /tmp/tmpryog04tk.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpryog04tk.php\
    \ on line 40\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n\t$str = $txt;\n\t$len = strlen($str);\n\
    \t$arr = [];\n\tif (strpos($str, ' ') !== false) {\n\t\t$arr = explode(' ', $str);\n\
    \t} else if (strpos($str, ',') !== false) {\n\t\t$arr = explode(',', $str);\n\t\
    } else {\n\t\t$cnt = 0;\n\t\tfor ($i = 0; $i < $len; $i++) {\n\t\t\tif (ord($str[$i])\
    \ % 2 == 1) {\n\t\t\t\t$cnt++;\n\t\t\t}\n\t\t}\n\t\t$arr = $cnt;\n\t}\n\treturn\
    \ $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4qzqx58y.php:42\n\
    Stack trace:\n#0 /tmp/tmp4qzqx58y.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp4qzqx58y.php\
    \ on line 42\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n  $count = strlen($txt);\n  $x\
    \ = \"\";\n  $arr = [];\n  for ($i = 0; $i < $count; $i++) {\n    if ($txt[$i]\
    \ == \" \") {\n      array_push($arr, $x);\n      $x = \"\";\n    } else if ($txt[$i]\
    \ == \",\") {\n      array_push($arr, $x);\n      $x = \"\";\n    } else {\n \
    \     $x .= $txt[$i];\n    }\n  }\n  array_push($arr, $x);\n  if (count($arr)\
    \ > 1) {\n    return $arr;\n  } else {\n    $letterCount = 0;\n    for ($i = 0;\
    \ $i < count($arr[0]); $i++) {\n      if (ord($arr[0][$i]) % 2 != 0) {\n     \
    \   $letterCount++;\n      }\n    }\n    return $letterCount;\n  }\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw7qsk_1q.php:48\n\
    Stack trace:\n#0 /tmp/tmpw7qsk_1q.php(56): test()\n#1 {main}\n  thrown in /tmp/tmpw7qsk_1q.php\
    \ on line 48\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = [];\n    if (strpos($txt,\
    \ ' ') !== false) {\n        $arr = explode(' ', $txt);\n    } else if (strpos($txt,\
    \ ',') !== false) {\n        $arr = explode(',', $txt);\n    } else {\n      \
    \  $odd = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n            if\
    \ (ord($txt[$i]) % 2 != 0) {\n                $odd++;\n            }\n       \
    \ }\n        return $odd;\n    }\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsi845bdc.php:40\n\
    Stack trace:\n#0 /tmp/tmpsi845bdc.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpsi845bdc.php\
    \ on line 40\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n\tif (strpos($txt, ' ') !== false)\
    \ {\n\t\treturn explode(' ', $txt);\n\t}\n\tif (strpos($txt, ',') !== false) {\n\
    \t\treturn explode(',', $txt);\n\t}\n\t$odd = '';\n\t$alpha = 'abcdefghijklmnopqrstuvwxyz';\n\
    \tfor ($i = 0; $i < strlen($alpha); $i++) {\n\t\tif ($i % 2 === 0) {\n\t\t\t$odd\
    \ .= $alpha[$i];\n\t\t}\n\t}\n\treturn strlen(str_replace(str_split($odd), '',\
    \ $txt));\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_3_4v73g.php:40\n\
    Stack trace:\n#0 /tmp/tmp_3_4v73g.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp_3_4v73g.php\
    \ on line 40\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    // Write your code here\n \
    \   // To print results to the standard output you can use print\n    // Example:\
    \ print \"Hello world!\";\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzl65nto6.php:23\n\
    Stack trace:\n#0 /tmp/tmpzl65nto6.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpzl65nto6.php\
    \ on line 23\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n\t$i = 0;\n\tforeach (str_split($txt)\
    \ as $c) {\n\t\tif (ord($c) >= ord('a') && ord($c) <= ord('z')) {\n\t\t\tif ($i\
    \ % 2 == 0) {\n\t\t\t\t$i++;\n\t\t\t}\n\t\t}\n\t}\n\tif ($i > 0) {\n\t\treturn\
    \ $i;\n\t}\n\t$arr = explode(',', $txt);\n\tif (count($arr) > 1) {\n\t\treturn\
    \ $arr;\n\t}\n\treturn explode(' ', $txt);\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpffnif2x5.php:36\n\
    Stack trace:\n#0 /tmp/tmpffnif2x5.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpffnif2x5.php\
    \ on line 36\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = str_replace('!', ' ',\
    \ $txt);\n    $txt = str_replace('?', ' ', $txt);\n    $txt = str_replace('.',\
    \ ' ', $txt);\n    $txt = str_replace(',', ' ', $txt);\n    $txt = str_replace('\"\
    ', ' ', $txt);\n    $txt = str_replace(\"'\", ' ', $txt);\n    $txt = str_replace(';',\
    \ ' ', $txt);\n    $txt = str_replace(':', ' ', $txt);\n    $txt = str_replace('(',\
    \ ' ', $txt);\n    $txt = str_replace(')', ' ', $txt);\n    $str = explode(' ',\
    \ $txt);\n    if (count($str) == 1) {\n        $arr = str_split($txt);\n     \
    \   $count = 0;\n        for ($i = 0; $i < count($arr); $i++) {\n            if\
    \ (ord($arr[$i]) % 2 !== 0) {\n                $count++;\n            }\n    \
    \    }\n        return $count;\n    } else {\n        return $str;\n    }\n}\n\
    \nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb8t3a51j.php:43\n\
    Stack trace:\n#0 /tmp/tmpb8t3a51j.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpb8t3a51j.php\
    \ on line 43\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n  $result = array();\n  if (strpos($txt,\
    \ ' ') !== false) {\n    $result = explode(' ', $txt);\n  } elseif (strpos($txt,\
    \ ',') !== false) {\n    $result = explode(',', $txt);\n  } else {\n    $i = 0;\n\
    \    $odd = array();\n    while ($i < strlen($txt)) {\n      if (ord($txt[$i])\
    \ % 2 !== 0) {\n        $odd[] = $txt[$i];\n      }\n      $i++;\n    }\n    $result\
    \ = count($odd);\n  }\n  return $result;\n}\nfunction candidate(...$args) {\n\
    \    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt7nsypz8.php:41\n\
    Stack trace:\n#0 /tmp/tmpt7nsypz8.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpt7nsypz8.php\
    \ on line 41\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n  $words = [];\n  if (strpos($txt,\
    \ ' ') !== false) {\n    $words = explode(' ', $txt);\n  } elseif (strpos($txt,\
    \ ',') !== false) {\n    $words = explode(',', $txt);\n  } else {\n    $regex\
    \ = '/[a-z]/';\n    preg_match_all($regex, $txt, $matches);\n    $matches = $matches[0];\n\
    \    $total = 0;\n    foreach ($matches as $letter) {\n      $total += ord($letter)\
    \ % 2;\n    }\n    $words = $total;\n  }\n  return $words;\n}\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeey9fd7q.php:40\n\
    Stack trace:\n#0 /tmp/tmpeey9fd7q.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpeey9fd7q.php\
    \ on line 40\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n\t$txt2 = str_replace(array(' ',\
    \ ','), array('-', ''), $txt);\n\tif (strpos($txt2, '-') === false && strpos($txt2,\
    \ ',') === false) {\n\t\t$ret = 0;\n\t\tfor ($i = 0; $i < strlen($txt2); $i++)\
    \ {\n\t\t\tif (ord($txt2[$i]) % 2) {\n\t\t\t\t$ret++;\n\t\t\t}\n\t\t}\n\t\treturn\
    \ $ret;\n\t} else if (strpos($txt2, '-') === false) {\n\t\treturn explode(',',\
    \ $txt);\n\t} else {\n\t\treturn explode(' ', $txt);\n\t}\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppoi7q_w3.php:35\n\
    Stack trace:\n#0 /tmp/tmppoi7q_w3.php(44): test()\n#1 {main}\n  thrown in /tmp/tmppoi7q_w3.php\
    \ on line 35\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n\t$words = explode(\" \", $txt);\n\
    \tif(count($words) == 1) {\n\t\t$words = explode(\",\", $txt);\n\t\tif(count($words)\
    \ == 1) {\n\t\t\t$sum = 0;\n\t\t\tfor($i = 0; $i < strlen($txt); $i++) {\n\t\t\
    \t\tif($i % 2 == 0) {\n\t\t\t\t\t$sum += ord($txt[$i]) - ord('a');\n\t\t\t\t}\n\
    \t\t\t}\n\t\t\treturn $sum;\n\t\t}\n\t}\n\treturn $words;\n}\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsn6prchz.php:37\n\
    Stack trace:\n#0 /tmp/tmpsn6prchz.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpsn6prchz.php\
    \ on line 37\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n\t$words = preg_split('/[\\s,]+/',\
    \ $txt);\n\tif (count($words) == 1) {\n\t\t$letters = preg_split('//', $txt, null,\
    \ PREG_SPLIT_NO_EMPTY);\n\t\tif (count($letters) == 1) {\n\t\t\treturn $letters[0];\n\
    \t\t}\n\t\t$chars = range('a', 'z');\n\t\t$index = array_search($letters[0], $chars);\n\
    \t\treturn $index;\n\t}\n\treturn $words;\n}\nfunction candidate(...$args) {\n\
    \    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpepzhb0t_.php:32\n\
    Stack trace:\n#0 /tmp/tmpepzhb0t_.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpepzhb0t_.php\
    \ on line 32\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    // your code here\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdly2tf0m.php:21\n\
    Stack trace:\n#0 /tmp/tmpdly2tf0m.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpdly2tf0m.php\
    \ on line 21\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $out = [];\n    if (strpos($txt,\
    \ ' ') !== false) {\n        $out = explode(' ', $txt);\n    } elseif (strpos($txt,\
    \ ',') !== false) {\n        $out = explode(',', $txt);\n    } else {\n      \
    \  $out = ord(strtolower($txt[0])) % 2;\n    }\n    return $out;\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt3ir5ygm.php:33\n\
    Stack trace:\n#0 /tmp/tmpt3ir5ygm.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpt3ir5ygm.php\
    \ on line 33\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false)\
    \ {\n        return explode(' ', $txt);\n    }\n    if (strpos($txt, ',') !==\
    \ false) {\n        return explode(',', $txt);\n    }\n    $res = 0;\n    for\
    \ ($i = 0; $i < strlen($txt); $i++) {\n        if (ord($txt[$i]) % 2 != 0) {\n\
    \            $res++;\n        }\n    }\n    return $res;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxy8zad_3.php:38\n\
    Stack trace:\n#0 /tmp/tmpxy8zad_3.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpxy8zad_3.php\
    \ on line 38\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n\t$white = false;\n\t$comma = false;\n\
    \tfor ($i = 0; $i < strlen($txt); $i++) {\n\t\tif (ctype_space($txt[$i])) {\n\t\
    \t\t$white = true;\n\t\t}\n\t\tif ($txt[$i] == ',') {\n\t\t\t$comma = true;\n\t\
    \t}\n\t}\n\tif ($white == true) {\n\t\treturn explode(' ', $txt);\n\t}\n\tif ($comma\
    \ == true) {\n\t\treturn explode(',', $txt);\n\t}\n\t$count = 0;\n\tfor ($i =\
    \ 0; $i < strlen($txt); $i++) {\n\t\tif (ord($txt[$i]) % 2 == 1) {\n\t\t\t$count\
    \ += 1;\n\t\t}\n\t}\n\treturn $count;\n}\nfunction candidate(...$args) {\n   \
    \ return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsbv_vf74.php:47\n\
    Stack trace:\n#0 /tmp/tmpsbv_vf74.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpsbv_vf74.php\
    \ on line 47\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    // Split on commas\n    $txt\
    \ = explode(',', $txt);\n    if (count($txt) > 1) {\n        return $txt;\n  \
    \  }\n    // Split on whitespace\n    $txt = explode(' ', $txt[0]);\n    if (count($txt)\
    \ > 1) {\n        return $txt;\n    }\n    // Calculate the number of lower-case\
    \ letters with odd order in the alphabet\n    $tmp = 0;\n    for ($i = 0; $i <\
    \ strlen($txt[0]); $i++) {\n        if (ord($txt[0][$i]) % 2 == 1) {\n       \
    \     $tmp++;\n        }\n    }\n    return $tmp;\n}\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7nc1kvmi.php:39\n\
    Stack trace:\n#0 /tmp/tmp7nc1kvmi.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp7nc1kvmi.php\
    \ on line 39\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n\t$final = [];\n\t$words = explode('\
    \ ', $txt);\n\tif(count($words) == 1) {\n\t\t$words = explode(',', $txt);\n\t\t\
    if(count($words) == 1) {\n\t\t\t$words = [];\n\t\t\tfor($i = 0; $i < strlen($txt);\
    \ $i++) {\n\t\t\t\t$words[] = $txt[$i];\n\t\t\t}\n\t\t\t$final = count($words);\n\
    \t\t} else {\n\t\t\t$final = $words;\n\t\t}\n\t} else {\n\t\t$final = $words;\n\
    \t}\n\treturn $final;\n}\n\nvar_dump(split_words(\"Hello world!\"));\nvar_dump(split_words(\"\
    Hello,world!\"));\nvar_dump(split_words(\"abcdef\"));\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "array(2) {\n  [0]=>\n  string(5) \"Hello\"\n  [1]=>\n  string(6) \"world!\"\
    \n}\narray(2) {\n  [0]=>\n  string(5) \"Hello\"\n  [1]=>\n  string(6) \"world!\"\
    \n}\nint(6)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdr6vs2cx.php:44\n\
    Stack trace:\n#0 /tmp/tmpdr6vs2cx.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpdr6vs2cx.php\
    \ on line 44\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n// Write code here\n}\necho json_encode(split_words(\"\
    Hello world!\"));\necho json_encode(split_words(\"Hello,world!\"));\necho json_encode(split_words(\"\
    abcdef\"));\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "nullnullnull\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv5c6tlg2.php:23\n\
    Stack trace:\n#0 /tmp/tmpv5c6tlg2.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpv5c6tlg2.php\
    \ on line 23\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n  $arr = array();\n  $arr2 = array();\n\
    \  $arr3 = array();\n  $arr4 = array();\n  $arr5 = array();\n  $arr6 = array();\n\
    \  $whitespace = \" \";\n  $comma = \",\";\n  $arr = str_split($txt);\n  for ($i\
    \ = 0; $i < count($arr); $i++) {\n    if ($arr[$i] === $whitespace) {\n      array_push($arr2,\
    \ $i);\n    }\n    if ($arr[$i] === $comma) {\n      array_push($arr3, $i);\n\
    \    }\n  }\n  if (count($arr2) > 0) {\n    array_push($arr4, implode(array_slice($arr,\
    \ 0, $arr2[0])));\n    for ($i = 0; $i < count($arr2) - 1; $i++) {\n      array_push($arr4,\
    \ implode(array_slice($arr, $arr2[$i] + 1, $arr2[$i + 1] - $arr2[$i] - 1)));\n\
    \    }\n    array_push($arr4, implode(array_slice($arr, $arr2[count($arr2) - 1]\
    \ + 1)));\n    return $arr4;\n  }\n  if (count($arr3) > 0) {\n    array_push($arr5,\
    \ implode(array_slice($arr, 0, $arr3[0])));\n    for ($i = 0; $i < count($arr3)\
    \ - 1; $i++) {\n      array_push($arr5, implode(array_slice($arr, $arr3[$i] +\
    \ 1, $arr3[$i + 1] - $arr3[$i] - 1)));\n    }\n    array_push($arr5, implode(array_slice($arr,\
    \ $arr3[count($arr3) - 1] + 1)));\n    return $arr5;\n  }\n  for ($i = 0; $i <\
    \ count($arr); $i++) {\n    if ($arr[$i] >= 'a'\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpnpiw4mx4.php
    on line 48

    '
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n\t$splitOnWhitespace = preg_split('/\\\
    s+/', $txt);\n\t$splitOnCommas = preg_split('/,/', $txt);\n\tif (count($splitOnWhitespace)\
    \ == 1) {\n\t\tif (count($splitOnCommas) == 1) {\n\t\t\t$oddOrderLetters = 0;\n\
    \t\t\tfor ($i = 0; $i < strlen($txt); $i++) {\n\t\t\t\tif (ord($txt[$i]) % 2 ==\
    \ 1) {\n\t\t\t\t\t$oddOrderLetters++;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn $oddOrderLetters;\n\
    \t\t} else {\n\t\t\treturn $splitOnCommas;\n\t\t}\n\t} else {\n\t\treturn $splitOnWhitespace;\n\
    \t}\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt6oa1x81.php:42\n\
    Stack trace:\n#0 /tmp/tmpt6oa1x81.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpt6oa1x81.php\
    \ on line 42\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $whitespace = preg_match('/\\\
    s/', $txt);\n    $comma = preg_match('/,/', $txt);\n    if ($whitespace > 0) {\n\
    \        return preg_split('/\\s/', $txt);\n    } elseif ($comma > 0) {\n    \
    \    return preg_split('/,/', $txt);\n    } else {\n        $arr = str_split($txt);\n\
    \        $count = 0;\n        foreach ($arr as $a) {\n            if (ord($a)\
    \ % 2 == 1) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5ggeiysz.php:40\n\
    Stack trace:\n#0 /tmp/tmp5ggeiysz.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp5ggeiysz.php\
    \ on line 40\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = str_replace(',', ' ',\
    \ $txt);\n    $arr = explode(' ', $txt);\n    if(count($arr) > 1) {\n        return\
    \ $arr;\n    } else {\n        $counter = 0;\n        for($i = 0; $i < 26; $i\
    \ += 2) {\n            if(strpos($txt, chr($i + 97)) !== false) {\n          \
    \      $counter++;\n            }\n        }\n        return $counter;\n    }\n\
    }\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\"\
    , \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnp7gw1so.php:35\n\
    Stack trace:\n#0 /tmp/tmpnp7gw1so.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpnp7gw1so.php\
    \ on line 35\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/[\\s,]+/',\
    \ $txt);\n    if (count($words) == 1) {\n        return strlen(preg_replace('/[^a-z]/',\
    \ '', $txt));\n    }\n    return $words;\n}\n\nclass TestSplitWords extends PHPUnit_Framework_TestCase\
    \ {\n    protected function setUp() {\n        $this->test = new Test();\n   \
    \ }\n\n    public function test_1() {\n        $this->assertEquals(array('Hello',\
    \ 'world!'), split_words('Hello world!'));\n    }\n\n    public function test_2()\
    \ {\n        $this->assertEquals(array('Hello', 'world!'), split_words('Hello,world!'));\n\
    \    }\n\n    public function test_3() {\n        $this->assertEquals(3, split_words('abcdef'));\n\
    \    }\n}\n\n$test = new TestSplitWords();\n$test->test_1();\n$test->test_2();\n\
    $test->test_3();\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Class \"PHPUnit_Framework_TestCase\" not\
    \ found in /tmp/tmpv6nou3gj.php:20\nStack trace:\n#0 {main}\n  thrown in /tmp/tmpv6nou3gj.php\
    \ on line 20\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprjj6a7gu.php:21\n\
    Stack trace:\n#0 /tmp/tmprjj6a7gu.php(31): test()\n#1 {main}\n  thrown in /tmp/tmprjj6a7gu.php\
    \ on line 21\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if (preg_match(\"/[,]/\", $txt)){\n\
    \        return preg_split(\"/[,]/\", $txt);\n    } elseif (preg_match(\"/[\\\
    s]/\", $txt)){\n        return preg_split(\"/[\\s]/\", $txt);\n    } else {\n\
    \        $arrTxt = str_split($txt);\n        $count = 0;\n        foreach ($arrTxt\
    \ as $char){\n            if ((ord($char) % 2) == 1){\n                $count++;\n\
    \            }\n        }\n        return $count;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxuvlvw5l.php:36\n\
    Stack trace:\n#0 /tmp/tmpxuvlvw5l.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpxuvlvw5l.php\
    \ on line 36\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n  $pattern_only_lowercase = \"\
    /^[a-z]+$/\";\n  $pattern_only_lowercase_no_commas = \"/^[a-z]+,[a-z]+$/\";\n\
    \  $pattern_only_lowercase_no_whitespaces = \"/^[a-z]+,\\s+[a-z]+$/\";\n  if (preg_match($pattern_only_lowercase,\
    \ $txt)) {\n    $sorted_txt = \"\";\n    for ($i = 0; $i < strlen($txt); $i++)\
    \ {\n      if ($i % 2 == 0) {\n        $sorted_txt .= $txt[$i];\n      }\n   \
    \ }\n    return $sorted_txt;\n  } else if (preg_match($pattern_only_lowercase_no_commas,\
    \ $txt)) {\n    $pieces = explode(\",\", $txt);\n    return $pieces;\n  } else\
    \ if (preg_match($pattern_only_lowercase_no_whitespaces, $txt)) {\n    $pieces\
    \ = explode(\" \", $txt);\n    return $pieces;\n  } else {\n    return \"Input\
    \ was not a string\";\n  }\n}\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp89asnqbn.php:39\n\
    Stack trace:\n#0 /tmp/tmp89asnqbn.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp89asnqbn.php\
    \ on line 39\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n  // Your code here...\n}\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcko769od.php:20\n\
    Stack trace:\n#0 /tmp/tmpcko769od.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpcko769od.php\
    \ on line 20\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n  $spaces = strpos($txt, ' ');\n\
    \  $commas = strpos($txt, ',');\n  if ($spaces !== false) {\n    return explode('\
    \ ', $txt);\n  } elseif ($commas !== false) {\n    return explode(',', $txt);\n\
    \  } else {\n    return (int) substr_count($txt, 'a') +\n        (int) substr_count($txt,\
    \ 'c') +\n        (int) substr_count($txt, 'e') +\n        (int) substr_count($txt,\
    \ 'g') +\n        (int) substr_count($txt, 'i') +\n        (int) substr_count($txt,\
    \ 'k') +\n        (int) substr_count($txt, 'm') +\n        (int) substr_count($txt,\
    \ 'o') +\n        (int) substr_count($txt, 'q') +\n        (int) substr_count($txt,\
    \ 's') +\n        (int) substr_count($txt, 'u') +\n        (int) substr_count($txt,\
    \ 'w') +\n        (int) substr_count($txt, 'y');\n  }\n}\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3jx8b8k4.php:45\n\
    Stack trace:\n#0 /tmp/tmp3jx8b8k4.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp3jx8b8k4.php\
    \ on line 45\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $r = str_split($txt);\n   \
    \ $arr = array();\n    $word = \"\";\n    $length = 0;\n    $res = 0;\n    $pos\
    \ = 0;\n    foreach ($r as $char) {\n        if ($char == \" \") {\n         \
    \   $arr[$pos] = $word;\n            $word = \"\";\n            $pos += 1;\n \
    \       } else if ($char == \",\") {\n            $arr[$pos] = $word;\n      \
    \      $word = \"\";\n            $pos += 1;\n        } else {\n            $word\
    \ .= $char;\n        }\n    }\n    if ($pos == 0) {\n        foreach ($r as $letter)\
    \ {\n            if (ord($letter) % 2 == 1) {\n                $res += 1;\n  \
    \          }\n        }\n        return $res;\n    } else {\n        return $arr;\n\
    \    }\n}\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1pg9wj2k.php:48\n\
    Stack trace:\n#0 /tmp/tmp1pg9wj2k.php(58): test()\n#1 {main}\n  thrown in /tmp/tmp1pg9wj2k.php\
    \ on line 48\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false)\
    \ {\n        return explode(' ', $txt);\n    } else if (strpos($txt, ',') !==\
    \ false) {\n        return explode(',', $txt);\n    } else {\n        $res = 0;\n\
    \        for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 !== 0) {\n                $res++;\n            }\n        }\n        return\
    \ $res;\n    }\n}\n\nvar_dump(split_words(\"Hello world!\"));\nvar_dump(split_words(\"\
    Hello,world!\"));\nvar_dump(split_words(\"abcdef\"));\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "array(2) {\n  [0]=>\n  string(5) \"Hello\"\n  [1]=>\n  string(6) \"world!\"\
    \n}\narray(2) {\n  [0]=>\n  string(5) \"Hello\"\n  [1]=>\n  string(6) \"world!\"\
    \n}\nint(3)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp07yw_z6n.php:41\n\
    Stack trace:\n#0 /tmp/tmp07yw_z6n.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp07yw_z6n.php\
    \ on line 41\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n  $result = array();\n  if(strpos($txt,\
    \ ' ') === false) {\n    if(strpos($txt, ',') === false) {\n      $result = substr_count($txt,\
    \ 'a') + substr_count($txt, 'c') + substr_count($txt, 'e') + substr_count($txt,\
    \ 'g') + substr_count($txt, 'i') + substr_count($txt, 'k') + substr_count($txt,\
    \ 'm') + substr_count($txt, 'o') + substr_count($txt, 'q') + substr_count($txt,\
    \ 's') + substr_count($txt, 'u') + substr_count($txt, 'w') + substr_count($txt,\
    \ 'y');\n    } else {\n      $result = explode(',', $txt);\n    }\n  } else {\n\
    \    $result = explode(' ', $txt);\n  }\n  return $result;\n}\nprint_r(split_words(\"\
    Hello world!\") . \"\\n\");\nprint_r(split_words(\"Hello,world!\") . \"\\n\");\n\
    print_r(split_words(\"abcdef\") . \"\\n\");\nfunction candidate(...$args) {\n\
    \    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Array to string conversion in /tmp/tmptrw2sp_x.php on line 25\n\
    Array\n\nWarning: Array to string conversion in /tmp/tmptrw2sp_x.php on line 26\n\
    Array\n3\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptrw2sp_x.php:38\n\
    Stack trace:\n#0 /tmp/tmptrw2sp_x.php(43): test()\n#1 {main}\n  thrown in /tmp/tmptrw2sp_x.php\
    \ on line 38\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = str_replace(\",\", \"\
    \ \", $txt);\n    $txt = preg_replace(\"/\\s+/\", \" \", $txt);\n    $txt = str_replace(\"\
    \ \", \",\", $txt);\n    $my_array = explode(\",\", $txt);\n    if (strstr($txt,\
    \ \" \")) {\n        return $my_array;\n    } elseif (strstr($txt, \",\")) {\n\
    \        return $my_array;\n    } else {\n        return count(str_split($txt));\n\
    \    }\n}\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_edob_4z.php:32\n\
    Stack trace:\n#0 /tmp/tmp_edob_4z.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_edob_4z.php\
    \ on line 32\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $wArr = preg_split('/[\\s,]+/',\
    \ $txt);\n    if (count($wArr) < 2) {\n        $wArr = preg_split('/[a-z]+/',\
    \ $txt);\n        return count($wArr) - 2;\n    }\n    return $wArr;\n}\n\necho\
    \ \"<pre>\";\nprint_r(split_words(\"Hello world!\"));\nprint_r(split_words(\"\
    Hello,world!\"));\nprint_r(split_words(\"abcdex\"));\necho \"</pre>\";\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => Hello\n    [1] => world!\n)\nArray\n(\n    [0]\
    \ => Hello\n    [1] => world!\n)\n0</pre>\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpvlvl9wav.php:33\nStack trace:\n#0 /tmp/tmpvlvl9wav.php(41):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpvlvl9wav.php on line 33\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n\t$result = array();\n\t$tmp =\
    \ \"\";\n\tfor ($i = 0; $i < strlen($txt); $i++) {\n\t\tif ($txt[$i] != \" \"\
    \ && $txt[$i] != \",\") {\n\t\t\t$tmp .= $txt[$i];\n\t\t} else {\n\t\t\tif ($tmp\
    \ != \"\") {\n\t\t\t\tarray_push($result, $tmp);\n\t\t\t\t$tmp = \"\";\n\t\t\t\
    }\n\t\t}\n\t}\n\tif ($tmp != \"\") {\n\t\tarray_push($result, $tmp);\n\t}\n\t\
    if (count($result) > 0) {\n\t\treturn $result;\n\t} else {\n\t\t$count = 0;\n\t\
    \tfor ($i = 0; $i < strlen($txt); $i++) {\n\t\t\tif (ord($txt[$i]) % 2 == 1) {\n\
    \t\t\t\t$count++;\n\t\t\t}\n\t\t}\n\t\treturn $count;\n\t}\n}\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuqb_zp4_.php:47\n\
    Stack trace:\n#0 /tmp/tmpuqb_zp4_.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpuqb_zp4_.php\
    \ on line 47\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if (str_word_count($txt) >\
    \ 1) {\n        return explode(\" \", $txt);\n    } else if (preg_match('/,/',\
    \ $txt)) {\n        return explode(\",\", $txt);\n    } else {\n        $chars\
    \ = str_split($txt);\n        $count = 0;\n        foreach ($chars as $char) {\n\
    \            if (ord($char) % 2 != 0) {\n                $count++;\n         \
    \   }\n        }\n        return $count;\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpslgilhbt.php:34\n\
    Stack trace:\n#0 /tmp/tmpslgilhbt.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpslgilhbt.php\
    \ on line 34\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false)\
    \ {\n        return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $result = 0;\n\
    \        for ($i = 0; $i < strlen($txt); $i += 2) {\n            $result += ord($txt[$i])\
    \ - ord('a');\n        }\n        return $result;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpswyuyy90.php:35\n\
    Stack trace:\n#0 /tmp/tmpswyuyy90.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpswyuyy90.php\
    \ on line 35\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $len = strlen($txt);\n    $split\
    \ = [];\n    for ($i = 0; $i < $len; $i++) {\n        $char = substr($txt, $i,\
    \ 1);\n        if (preg_match('/[a-z]/', $char)) {\n            $split[] = $char;\n\
    \        }\n    }\n    return $split;\n}\n$txt = \"Hello world!\";\n$split = split_words($txt);\n\
    var_dump($split);\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "array(9) {\n  [0]=>\n  string(1) \"e\"\n  [1]=>\n  string(1) \"l\"\n  [2]=>\n\
    \  string(1) \"l\"\n  [3]=>\n  string(1) \"o\"\n  [4]=>\n  string(1) \"w\"\n \
    \ [5]=>\n  string(1) \"o\"\n  [6]=>\n  string(1) \"r\"\n  [7]=>\n  string(1) \"\
    l\"\n  [8]=>\n  string(1) \"d\"\n}\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp20ytt_n3.php:31\nStack trace:\n#0 /tmp/tmp20ytt_n3.php(41): test()\n\
    #1 {main}\n  thrown in /tmp/tmp20ytt_n3.php on line 31\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n  $str = $txt;\n  $arr = array();\n\
    \  if(strpos($str, ' ') !== false) {\n    $arr = explode(' ', $str);\n  } else\
    \ if(strpos($str, ',') !== false) {\n    $arr = explode(',', $str);\n  } else\
    \ {\n    for($i = 0; $i < strlen($str); $i++) {\n      if(ord($str[$i]) % 2 !=\
    \ 0) {\n        $arr[] = $str[$i];\n      }\n    }\n  }\n  return $arr;\n}\n\n\
    echo implode(split_words(\"Hello world!\"), \" <br> \");\necho \"<br>\";\necho\
    \ implode(split_words(\"Hello,world!\"), \" <br> \");\necho \"<br>\";\necho implode(split_words(\"\
    abcdef\"), \" <br> \");\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: implode(): Argument #2 ($array) must\
    \ be of type ?array, string given in /tmp/tmp7b1gp970.php:29\nStack trace:\n#0\
    \ /tmp/tmp7b1gp970.php(29): implode(Array, ' <br> ')\n#1 {main}\n  thrown in /tmp/tmp7b1gp970.php\
    \ on line 29\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = [];\n    if (strpos($txt,\
    \ ' ') !== false) {\n        $arr = explode(' ', $txt);\n    } else if (strpos($txt,\
    \ ',') !== false) {\n        $arr = explode(',', $txt);\n    } else {\n      \
    \  $count = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n            if\
    \ (ord($txt[$i]) % 2 != 0) {\n                $count++;\n            }\n     \
    \   }\n        return $count;\n    }\n    return $arr;\n}\n\necho '<pre>';\nprint_r(split_words('Hello\
    \ world!'));\necho '</pre>';\necho '<br>';\necho '<pre>';\nprint_r(split_words('Hello,world!'));\n\
    echo '</pre>';\necho '<br>';\necho '<pre>';\nprint_r(split_words('abcdef'));\n\
    echo '</pre>';\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => Hello\n    [1] => world!\n)\n</pre><br><pre>Array\n\
    (\n    [0] => Hello\n    [1] => world!\n)\n</pre><br><pre>3</pre>\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpc854uau_.php:51\nStack trace:\n\
    #0 /tmp/tmpc854uau_.php(56): test()\n#1 {main}\n  thrown in /tmp/tmpc854uau_.php\
    \ on line 51\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n\t$regex_space = '/\\s/';\n\t$regex_comma\
    \ = '/,/';\n\t$regex_letter = '/\\b[a-z]/';\n\t$clean_txt = strtolower($txt);\n\
    \t$result = preg_split($regex_space, $clean_txt);\n\tif (empty($result[0])) {\n\
    \t\t$result = preg_split($regex_comma, $clean_txt);\n\t\tif (empty($result[0]))\
    \ {\n\t\t\tpreg_match_all($regex_letter, $clean_txt, $matches);\n\t\t\t$result\
    \ = count(array_filter($matches[0], function($index) {\n\t\t\t\treturn $index\
    \ % 2 == 1;\n\t\t\t}, ARRAY_FILTER_USE_KEY));\n\t\t}\n\t}\n\treturn $result;\n\
    }\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphsmt936z.php:34\n\
    Stack trace:\n#0 /tmp/tmphsmt936z.php(44): test()\n#1 {main}\n  thrown in /tmp/tmphsmt936z.php\
    \ on line 34\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n\tif(strpos($txt, ' ') !== false)\
    \ {\n\t\treturn explode(' ', $txt);\n\t} elseif(strpos($txt, ',') !== false) {\n\
    \t\treturn explode(',', $txt);\n\t} else {\n\t\t$strlen = strlen($txt);\n\t\t\
    $return = 0;\n\t\tfor($i = 0; $i < $strlen; $i++) {\n\t\t\tif(ord($txt[$i]) %\
    \ 2 != 0) {\n\t\t\t\t$return++;\n\t\t\t}\n\t\t}\n\t\treturn $return;\n\t}\n}\n\
    function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0hqvv7z2.php:38\n\
    Stack trace:\n#0 /tmp/tmp0hqvv7z2.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp0hqvv7z2.php\
    \ on line 38\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n  // TODO: Implement me!\n  return\
    \ $txt;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3fxz1_lh.php:22\n\
    Stack trace:\n#0 /tmp/tmp3fxz1_lh.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp3fxz1_lh.php\
    \ on line 22\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt_arr = [];\n    if(strpos($txt,\
    \ ' ') !== false) {\n        $txt_arr = explode(' ', $txt);\n    } elseif(strpos($txt,\
    \ ',') !== false) {\n        $txt_arr = explode(',', $txt);\n    } else {\n  \
    \      for($i = 0; $i < strlen($txt); $i++) {\n            if(ord($txt[$i]) %\
    \ 2 == 1) {\n                $txt_arr[] = $txt[$i];\n            }\n        }\n\
    \    }\n    return $txt_arr;\n}\n\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkhxte8i1.php:37\n\
    Stack trace:\n#0 /tmp/tmpkhxte8i1.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpkhxte8i1.php\
    \ on line 37\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n\tif (strpos($txt, ' ') !== false)\
    \ {\n\t\treturn explode(' ', $txt);\n\t}\n\tif (strpos($txt, ',') !== false) {\n\
    \t\treturn explode(',', $txt);\n\t}\n\t$count = 0;\n\tfor ($i = 0; $i < strlen($txt);\
    \ $i++) {\n\t\tif (ord($txt[$i]) % 2 == 1) {\n\t\t\t$count++;\n\t\t}\n\t}\n\t\
    return $count;\n}\necho '<h3>Split words</h3>';\n$text = \"Hello world!\";\n$out\
    \ = split_words($text);\necho $text . '<br>';\nvar_dump($out);\n$text = \"Hello,world!\"\
    ;\n$out = split_words($text);\necho $text . '<br>';\nvar_dump($out);\n$text =\
    \ \"abcdef\";\n$out = split_words($text);\necho $text . '<br>';\nvar_dump($out);\n\
    $text = \"Hello world! Welcome to programming! This year we learn PHP and C++,\
    \ so if you have any problems with these languages feel free to ask. PS: be nice,\
    \ we won't bite you.\";\n$out = split_words($text);\necho $text . '<br>';\nvar_dump($out);\n\
    function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<h3>Split words</h3>Hello world!<br>array(2) {\n  [0]=>\n  string(5) \"\
    Hello\"\n  [1]=>\n  string(6) \"world!\"\n}\nHello,world!<br>array(2) {\n  [0]=>\n\
    \  string(5) \"Hello\"\n  [1]=>\n  string(6) \"world!\"\n}\nabcdef<br>int(3)\n\
    Hello world! Welcome to programming! This year we learn PHP and C++, so if you\
    \ have any problems with these languages feel free to ask. PS: be nice, we won't\
    \ bite you.<br>array(32) {\n  [0]=>\n  string(5) \"Hello\"\n  [1]=>\n  string(6)\
    \ \"world!\"\n  [2]=>\n  string(7) \"Welcome\"\n  [3]=>\n  string(2) \"to\"\n\
    \  [4]=>\n  string(12) \"programming!\"\n  [5]=>\n  string(4) \"This\"\n  [6]=>\n\
    \  string(4) \"year\"\n  [7]=>\n  string(2) \"we\"\n  [8]=>\n  string(5) \"learn\"\
    \n  [9]=>\n  string(3) \"PHP\"\n  [10]=>\n  string(3) \"and\"\n  [11]=>\n  string(4)\
    \ \"C++,\"\n  [12]=>\n  string(2) \"so\"\n  [13]=>\n  string(2) \"if\"\n  [14]=>\n\
    \  string(3) \"you\"\n  [15]=>\n  string(4) \"have\"\n  [16]=>\n  string(3) \"\
    any\"\n  [17]=>\n  string(8) \"problems\"\n  [18]=>\n  string(4) \"with\"\n  [19]=>\n\
    \  string(5) \"these\"\n  [20]=>\n  string(9) \"languages\"\n  [21]=>\n  string(4)\
    \ \"feel\"\n  [22]=>\n  string(4) \"free\"\n  [23]=>\n  string(2) \"to\"\n  [24]=>\n\
    \  string(4) \"ask.\"\n  [25]=>\n  string(3) \"PS:\"\n  [26]=>\n  string(2) \"\
    be\"\n  [27]=>\n  string(5) \"nice,\"\n  [28]=>\n  string(2) \"we\"\n  [29]=>\n\
    \  string(5) \"won't\"\n  [30]=>\n  string(4) \"bite\"\n  [31]=>\n  string(4)\
    \ \"you.\"\n}\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo2gbb5hh.php:54\n\
    Stack trace:\n#0 /tmp/tmpo2gbb5hh.php(59): test()\n#1 {main}\n  thrown in /tmp/tmpo2gbb5hh.php\
    \ on line 54\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n  $words = preg_split('/[\\s,]+/',\
    \ $txt);\n  $length = count($words);\n  if ($length === 1) {\n    return count(odd_letters($words[0]));\n\
    \  }\n  return $words;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqmtm1nbj.php:28\n\
    Stack trace:\n#0 /tmp/tmpqmtm1nbj.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpqmtm1nbj.php\
    \ on line 28\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n  $string = \"\";\n  $array = [];\n\
    \  $count = 0;\n  $res = [];\n  if(strpos($txt, \" \") !== false){\n    $array\
    \ = explode(\" \", $txt);\n    return $array;\n  }else if(strpos($txt, \",\")\
    \ !== false){\n    $array = explode(\",\", $txt);\n    return $array;\n  }else{\n\
    \    for($i = 0; $i < strlen($txt); $i++){\n      $string = $txt[$i];\n      if(ord($string)\
    \ % 2 !== 0){\n        $count++;\n      }\n    }\n    return $count;\n  }\n}\n\
    function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8118z477.php:43\n\
    Stack trace:\n#0 /tmp/tmp8118z477.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp8118z477.php\
    \ on line 43\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n  if (strpos($txt, ' ') !== false)\
    \ {\n    return explode(' ', $txt);\n  } elseif (strpos($txt, ',') !== false)\
    \ {\n    return explode(',', $txt);\n  } else {\n    $result = [];\n    for ($i\
    \ = 0; $i < strlen($txt); $i++) {\n      if (ord($txt[$i]) % 2 != 0) {\n     \
    \   $result[] = $txt[$i];\n      }\n    }\n    return count($result);\n  }\n}\n\
    \n$result = split_words(\"Hello world!\");\nprint_r($result);\necho '<br>';\n\
    $result = split_words(\"Hello,world!\");\nprint_r($result);\necho '<br>';\n$result\
    \ = split_words(\"abcdef\");\nprint_r($result);\necho '<br>';\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => Hello\n    [1] => world!\n)\n<br>Array\n(\n    [0]\
    \ => Hello\n    [1] => world!\n)\n<br>3<br>\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmphvjjjsm2.php:47\nStack trace:\n#0 /tmp/tmphvjjjsm2.php(52):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmphvjjjsm2.php on line 47\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if(strpos($txt, ' ') !== false)\
    \ {\n        return explode(' ', $txt);\n    } elseif(strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for($i = 0; $i < strlen($txt); $i++) {\n            if(ord($txt[$i]) %\
    \ 2 !== 0) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\necho \"<pre>\";\nprint_r(split_words(\"Hello world!\"));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(split_words(\"Hello,world!\"));\necho\
    \ \"</pre>\";\necho \"<pre>\";\nprint_r(split_words(\"abcdef\"));\necho \"</pre>\"\
    ;\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>Array\n\
    (\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>3</pre>\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp6n37kqup.php:46\nStack trace:\n#0 /tmp/tmp6n37kqup.php(51):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp6n37kqup.php on line 46\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n  $arrWords = [];\n  $txt = str_replace(array(\"\
    \\r\\n\", \"\\r\", \"\\n\"), ' ', $txt);\n  if(strpos($txt, ' ') !== false) {\n\
    \    $arrWords = explode(' ', $txt);\n  } else if(strpos($txt, ',') !== false)\
    \ {\n    $arrWords = explode(',', $txt);\n  } else {\n    $odds = \"bdfhjlnprtvxzBDFHJLNPRTVXZ\"\
    ;\n    $arrWords = count_chars($odds, 1);\n  }\n  return $arrWords;\n}\n\nprint_r(split_words(\"\
    abcdef\"));\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [66] => 1\n    [68] => 1\n    [70] => 1\n    [72] => 1\n\
    \    [74] => 1\n    [76] => 1\n    [78] => 1\n    [80] => 1\n    [82] => 1\n \
    \   [84] => 1\n    [86] => 1\n    [88] => 1\n    [90] => 1\n    [98] => 1\n  \
    \  [100] => 1\n    [102] => 1\n    [104] => 1\n    [106] => 1\n    [108] => 1\n\
    \    [110] => 1\n    [112] => 1\n    [114] => 1\n    [116] => 1\n    [118] =>\
    \ 1\n    [120] => 1\n    [122] => 1\n)\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpgtw9btiw.php:36\nStack trace:\n#0 /tmp/tmpgtw9btiw.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpgtw9btiw.php on line 36\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n  $words = preg_split('/\\s+/',\
    \ $txt);\n  if (count($words) == 1) {\n    $words = preg_split('/,/', $txt);\n\
    \    if (count($words) == 1) {\n      return 0;\n    }\n  }\n  return $words;\n\
    }\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\"\
    , \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpki1nehpi.php:32\n\
    Stack trace:\n#0 /tmp/tmpki1nehpi.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpki1nehpi.php\
    \ on line 32\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = preg_split('/[\\s,]+/',\
    \ $txt);\n    if(count($words) > 1) return $words;\n    return preg_match_all('/[a-z]/',\
    \ $txt, $array) ? count($array[0]) : 0;\n}\nfunction candidate(...$args) {\n \
    \   return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmswuho1z.php:24\n\
    Stack trace:\n#0 /tmp/tmpmswuho1z.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpmswuho1z.php\
    \ on line 24\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if (str_word_count($txt) >\
    \ 1) {\n        return str_word_count($txt, 1);\n    } else if (str_word_count($txt,\
    \ 1, ',') > 1) {\n        return str_word_count($txt, 1, ',');\n    } else {\n\
    \        $count = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n      \
    \      if ($i % 2 == 0) {\n                $count++;\n            }\n        }\n\
    \        return $count;\n    }\n}\n\necho '<pre>';\nprint_r(split_words(\"Hello\
    \ world!\"));\necho '</pre>';\n\necho '<pre>';\nprint_r(split_words(\"Hello,world!\"\
    ));\necho '</pre>';\n\necho '<pre>';\nprint_r(split_words(\"abcdef\"));\necho\
    \ '</pre>';\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => Hello\n    [1] => world\n)\n</pre><pre>Array\n\
    (\n    [0] => Hello\n    [1] => world\n)\n</pre><pre>Array\n(\n    [0] => abcdef\n\
    )\n</pre>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ljlv9zx.php:44\n\
    Stack trace:\n#0 /tmp/tmp8ljlv9zx.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp8ljlv9zx.php\
    \ on line 44\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false)\
    \ {\n        return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $odd = 0;\n   \
    \     for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i]) %\
    \ 2 !== 0) {\n                $odd++;\n            }\n        }\n        return\
    \ $odd;\n    }\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgv4w941m.php:38\n\
    Stack trace:\n#0 /tmp/tmpgv4w941m.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpgv4w941m.php\
    \ on line 38\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n//  return $txt;\n}\n$unit_test_cases\
    \ = array(\n    array(\"Hello world!\", array(\"Hello\", \"world!\")),\n    array(\"\
    Hello,world!\", array(\"Hello\", \"world!\")),\n    array(\"abcdef\", 3),\n  \
    \  array(\"abcdef,ghijkl\", array(\"abcdef\", \"ghijkl\")),\n    array(\"abcdef,ghijkl,mnopqr\"\
    , array(\"abcdef\", \"ghijkl\", \"mnopqr\")),\n    array(\"abcdef,ghijkl,mnopqr,\"\
    , array(\"abcdef\", \"ghijkl\", \"mnopqr\")),\n    array(\"abcdef,ghijkl,mnopqr,stuvwx\"\
    , array(\"abcdef\", \"ghijkl\", \"mnopqr\", \"stuvwx\")),\n    array(\"abcdef,ghijkl,mnopqr,stuvwx,\"\
    , array(\"abcdef\", \"ghijkl\", \"mnopqr\", \"stuvwx\")),\n    array(\"abcdef,ghijkl,mnopqr,stuvwx,yz\"\
    , array(\"abcdef\", \"ghijkl\", \"mnopqr\", \"stuvwx\", \"yz\")),\n    array(\"\
    abcdef,ghijkl,mnopqr,stuvwx,yz,\", array(\"abcdef\", \"ghijkl\", \"mnopqr\", \"\
    stuvwx\", \"yz\")),\n    array(\"abcdef,ghijkl,mnopqr,stuvwx,yz,ABCDEF\", array(\"\
    abcdef\", \"ghijkl\", \"mnopqr\", \"stuvwx\", \"yz\", \"ABCDEF\")),\n    array(\"\
    abcdef,ghijkl,mnopqr,stuvwx,yz,ABCDEF,\", array(\"abcdef\", \"ghijkl\", \"mnopqr\"\
    , \"stuvwx\", \"yz\", \"ABCDEF\")),\n    array(\"abcdef,ghijkl,mnopqr,stuvwx,yz,ABCDEF,GHIJKL\"\
    , array(\"abcdef\", \"ghijkl\", \"mnopqr\", \"stuvwx\", \"yz\", \"ABCDEF\", \"\
    GHIJKL\")),\n    array(\"abcdef,ghijkl\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "Hello", expecting ")" in /tmp/tmpzs7j7fuu.php
    on line 35

    '
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false)\
    \ {\n        return explode(' ', $txt);\n    }\n    if (strpos($txt, ',') !==\
    \ false) {\n        return explode(',', $txt);\n    }\n    $r = str_split($txt);\n\
    \    return array_filter($r, function($v) { return ord($v) % 2; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn90us5iv.php:32\n\
    Stack trace:\n#0 /tmp/tmpn90us5iv.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpn90us5iv.php\
    \ on line 32\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if(strpos($txt, ' ') !== false)\
    \ {\n        return explode(' ', $txt);\n    }\n    if(strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    }\n    $count = 0;\n    for($i =\
    \ 0; $i < strlen($txt); $i++) {\n        if($i % 2 === 0 && ord($txt[$i]) >= 97\
    \ && ord($txt[$i]) <= 122) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeh0xygr4.php:37\n\
    Stack trace:\n#0 /tmp/tmpeh0xygr4.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpeh0xygr4.php\
    \ on line 37\n"
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $s = str_split($txt);\n   \
    \ $c = 0;\n    for ($i = 0; $i < count($s); $i++) {\n        if (($s[$i] >= 'a'\
    \ && $s[$i] <= 'z') && ($i % 2 != 0)) {\n            $c++;\n        }\n    }\n\
    \    if (strpos($txt, ' ') !== false) {\n        return explode(' ', $txt);\n\
    \    } elseif (strpos($txt, ',') !== false) {\n        return explode(',', $txt);\n\
    \    } else {\n        return $c;\n    }\n}\n\nfunction candidate(...$args) {\n\
    \    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $splitStr = preg_split('/\\\
    s+/', $txt);\n    if (count($splitStr) === 1) {\n        $splitStr = preg_split('/,/',\
    \ $txt);\n        if (count($splitStr) === 1) {\n            $splitStr = preg_split('//',\
    \ $txt);\n            return (ord($splitStr[0]) % 2 === 0) ? ord($splitStr[0])\
    \ : ord($splitStr[1]);\n        }\n    }\n    return $splitStr;\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk2353gv3.php:33\n\
    Stack trace:\n#0 /tmp/tmpk2353gv3.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpk2353gv3.php\
    \ on line 33\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n  $result = [];\n  if(strpos($txt,\
    \ ' ') !== false) {\n    $result = explode(' ', $txt);\n  } else if(strpos($txt,\
    \ ',') !== false) {\n    $result = explode(',', $txt);\n  } else {\n    $num =\
    \ 0;\n    for($i = 0; $i < strlen($txt); $i++) {\n      if(ord($txt[$i]) % 2 ===\
    \ 1) {\n        $num++;\n      }\n    }\n    $result = $num;\n  }\n  return $result;\n\
    }\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0ncaulj1.php:39\n\
    Stack trace:\n#0 /tmp/tmp0ncaulj1.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp0ncaulj1.php\
    \ on line 39\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = str_split($txt);\n \
    \   $ret = [];\n    $inWord = false;\n    $word = '';\n    foreach ($arr as $c)\
    \ {\n        if (ctype_alnum($c)) {\n            if (!$inWord) {\n           \
    \     $inWord = true;\n            }\n            $word .= $c;\n        } else\
    \ {\n            if ($inWord) {\n                $ret[] = $word;\n           \
    \     $word = '';\n                $inWord = false;\n            }\n        }\n\
    \    }\n    if ($inWord) {\n        $ret[] = $word;\n    }\n    if (count($ret)\
    \ > 0) {\n        return $ret;\n    }\n    $sum = 0;\n    foreach ($arr as $c)\
    \ {\n        $ord = ord($c);\n        if ($ord >= ord('a') && $ord <= ord('z'))\
    \ {\n            $sum += ($ord - ord('a')) % 2 === 0 ? 0 : 1;\n        }\n   \
    \ }\n    return $sum;\n}\n\n$tests = [];\n$tests[] = ['input' => 'Hello world!',\
    \ 'expected' => ['Hello', 'world!']];\n$tests[] = ['input' => 'Hello,world!',\
    \ 'expected' => ['Hello', 'world!']];\n$tests[] = ['input' => 'abcdef', 'expected'\
    \ => 3];\n\nforeach ($tests as $test) {\n    $result = split_words($test['input']);\n\
    \    if ($result === $test['expected']) {\n        echo \"Test passed\" . PHP_EOL;\n\
    \    } else {\n        echo \"Test failed:\" . PHP_EOL;\n        echo \"Input:\
    \ {$test['input']}\" . PHP_EOL;\n        echo \"Result: \" . var_export($result,\
    \ true) . PHP_EOL;\n        echo \"Expected: \" . var_export($test['expected'],\
    \ true) . PHP_EOL;\n    }\n}\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Test failed:\nInput: Hello world!\nResult: array (\n  0 => 'Hello',\n \
    \ 1 => 'world',\n)\nExpected: array (\n  0 => 'Hello',\n  1 => 'world!',\n)\n\
    Test failed:\nInput: Hello,world!\nResult: array (\n  0 => 'Hello',\n  1 => 'world',\n\
    )\nExpected: array (\n  0 => 'Hello',\n  1 => 'world!',\n)\nTest failed:\nInput:\
    \ abcdef\nResult: array (\n  0 => 'abcdef',\n)\nExpected: 3\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpvfiov02m.php:68\nStack trace:\n#0 /tmp/tmpvfiov02m.php(78):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpvfiov02m.php on line 68\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    //$regex1 = '/[^a-z]+(?=[a-z])/';\n\
    \    //$regex2 = '/[^a-z]+/';\n    $regex1 = '/\\s/';\n    $regex2 = '/,/';\n\
    \    $regex3 = '/[a-z]/';\n    $regex4 = '/[a-z]+/';\n    if (preg_match($regex1,\
    \ $txt)) {\n        return explode(' ', $txt);\n    } elseif (preg_match($regex2,\
    \ $txt)) {\n        return explode(',', $txt);\n    } elseif (preg_match($regex3,\
    \ $txt)) {\n        $str = preg_replace($regex4, '', $txt);\n        return strlen($str);\n\
    \    }\n}\n\n$ans = split_words(\"abcdef\");\nvar_dump($ans);\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "int(0)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsmb1w0ky.php:40\n\
    Stack trace:\n#0 /tmp/tmpsmb1w0ky.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpsmb1w0ky.php\
    \ on line 40\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n\t// TODO: Your code here\n}\n\
    function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppbep064u.php:20\n\
    Stack trace:\n#0 /tmp/tmppbep064u.php(30): test()\n#1 {main}\n  thrown in /tmp/tmppbep064u.php\
    \ on line 20\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = [];\n    if(stristr($txt,\
    \ ' ')) {\n        $words = explode(' ', $txt);\n    } elseif(stristr($txt, ','))\
    \ {\n        $words = explode(',', $txt);\n    } else {\n        $letters = str_split($txt);\n\
    \        $total = 0;\n        foreach($letters as $letter) {\n            $ascii\
    \ = ord($letter);\n            if($ascii % 2 == 1) {\n                $total++;\n\
    \            }\n        }\n        return $total;\n    }\n    return $words;\n\
    }\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp28ud9wqr.php:41\n\
    Stack trace:\n#0 /tmp/tmp28ud9wqr.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp28ud9wqr.php\
    \ on line 41\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $len = strlen($txt);\n    if($len\
    \ < 2) return $len;\n    $out = explode(\" \", $txt);\n    if(count($out) > 1)\
    \ return $out;\n    $out = explode(\",\", $txt);\n    if(count($out) > 1) return\
    \ $out;\n    $cnt = 0;\n    for($i = 0; $i < $len; $i++) {\n        $idx = ord($txt[$i])\
    \ - ord('a');\n        if($idx >= 0 && $idx < 26 && $idx % 2 == 0) $cnt++;\n \
    \   }\n    return $cnt;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqlq9entx.php:37\n\
    Stack trace:\n#0 /tmp/tmpqlq9entx.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpqlq9entx.php\
    \ on line 37\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $odd_order = array();\n   \
    \ $i = 0;\n    $arr = preg_split('/[\\s,]+/', $txt);\n    if (count($arr) > 1)\
    \ {\n        return $arr;\n    } else {\n        $words = str_split($txt);\n \
    \       foreach ($words as $word) {\n            if ($i % 2 != 0) {\n        \
    \        array_push($odd_order, $word);\n            }\n            $i++;\n  \
    \      }\n        return count($odd_order);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq4xg9ar0.php:37\n\
    Stack trace:\n#0 /tmp/tmpq4xg9ar0.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpq4xg9ar0.php\
    \ on line 37\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n\tif (preg_match(\"/\\s/\", $txt))\
    \ {\n\t\t$txt = preg_split(\"/\\s/\", $txt);\n\t} elseif (preg_match(\"/,/\",\
    \ $txt)) {\n\t\t$txt = preg_split(\"/,/\", $txt);\n\t} else {\n\t\t$num = 0;\n\
    \t\t$arr = str_split($txt);\n\t\tforeach ($arr as $letter) {\n\t\t\tif (ord($letter)\
    \ % 2 == 1) {\n\t\t\t\t$num++;\n\t\t\t}\n\t\t}\n\t\t$txt = $num;\n\t}\n\treturn\
    \ $txt;\n}\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx_zvwz5t.php:39\n\
    Stack trace:\n#0 /tmp/tmpx_zvwz5t.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpx_zvwz5t.php\
    \ on line 39\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n\treturn preg_split('/[\\s,]+/',\
    \ $txt);\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz6y8wncp.php:23\n\
    Stack trace:\n#0 /tmp/tmpz6y8wncp.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpz6y8wncp.php\
    \ on line 23\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n  if (strpos($txt, ' ') !== false)\
    \ {\n    return explode(' ', $txt);\n  } elseif (strpos($txt, ',') !== false)\
    \ {\n    return explode(',', $txt);\n  } else {\n    return substr_count($txt,\
    \ 'a') + substr_count($txt, 'c') + substr_count($txt, 'e') + substr_count($txt,\
    \ 'g') + substr_count($txt, 'i') + substr_count($txt, 'k') + substr_count($txt,\
    \ 'm') + substr_count($txt, 'o') + substr_count($txt, 'q') + substr_count($txt,\
    \ 's') + substr_count($txt, 'u') + substr_count($txt, 'w') + substr_count($txt,\
    \ 'y');\n  }\n}\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr_orczg_.php:31\n\
    Stack trace:\n#0 /tmp/tmpr_orczg_.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpr_orczg_.php\
    \ on line 31\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n  $txt = $txt.split(' ');\n  if(txt.length\
    \ == 1){\n    $txt = $txt.split(',');\n    if(txt.length == 1){\n      $txt =\
    \ $txt.split('');\n      return txt.length;\n    }\n    return txt;\n  }\n  return\
    \ txt;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function split() in /tmp/tmpygltc2xh.php:13\n\
    Stack trace:\n#0 /tmp/tmpygltc2xh.php(26): split_words('Hello world!')\n#1 /tmp/tmpygltc2xh.php(30):\
    \ candidate('Hello world!')\n#2 /tmp/tmpygltc2xh.php(40): test()\n#3 {main}\n\
    \  thrown in /tmp/tmpygltc2xh.php on line 13\n"
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $letters = [\n        'a',\
    \ 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q',\
    \ 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'\n    ];\n    if (strpos($txt, '\
    \ ') !== false) {\n        return explode(' ', $txt);\n    } else if (strpos($txt,\
    \ ',') !== false) {\n        return explode(',', $txt);\n    } else {\n      \
    \  $t = str_split($txt);\n        $odd = [];\n        foreach ($t as $k => $v)\
    \ {\n            $o = array_search($v, $letters);\n            if ($o % 2 !==\
    \ 0) {\n                $odd[] = $v;\n            }\n        }\n        return\
    \ count($odd);\n    }\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    // YOUR CODE HERE\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp324fuc3z.php:21\n\
    Stack trace:\n#0 /tmp/tmp324fuc3z.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp324fuc3z.php\
    \ on line 21\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n\tif (preg_match(\"/ /\", $txt))\
    \ {\n\t\treturn explode(\" \", $txt);\n\t} else if (preg_match(\"/,/\", $txt))\
    \ {\n\t\treturn explode(\",\", $txt);\n\t} else {\n\t\t$txt = strtolower($txt);\n\
    \t\t$letters = count_chars($txt, 1);\n\t\t$sum = 0;\n\t\tforeach ($letters as\
    \ $key => $value) {\n\t\t\tif ($key % 2 == 1) {\n\t\t\t\t$sum += $value;\n\t\t\
    \t}\n\t\t}\n\t\treturn $sum;\n\t}\n}\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3opil9fe.php:39\n\
    Stack trace:\n#0 /tmp/tmp3opil9fe.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp3opil9fe.php\
    \ on line 39\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n\t$a = preg_split('/[\\s,]+/',\
    \ $txt);\n\tif (count($a) == 1) {\n\t\t$b = str_split($txt);\n\t\t$c = 0;\n\t\t\
    foreach ($b as $e) {\n\t\t\tif (ord($e) % 2 == 1) {\n\t\t\t\t$c += 1;\n\t\t\t\
    }\n\t\t}\n\t\treturn $c;\n\t}\n\treturn $a;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk2ki8fw6.php:34\n\
    Stack trace:\n#0 /tmp/tmpk2ki8fw6.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpk2ki8fw6.php\
    \ on line 34\n"
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $result=array();\n    $odd_alphabet_count=0;\n\
    \    $alphabet=\"abcdefghijklmnopqrstuvwxyz\";\n    $has_whitespace=false;\n \
    \   $has_comma=false;\n    for($i=0;$i<strlen($txt);$i++){\n        if($txt[$i]==\"\
    \ \"){\n            $has_whitespace=true;\n            break;\n        }\n   \
    \ }\n    if($has_whitespace==true){\n        $result=explode(\" \",$txt);\n  \
    \  }\n    else{\n        for($i=0;$i<strlen($txt);$i++){\n            if($txt[$i]==\"\
    ,\"){\n                $has_comma=true;\n                break;\n            }\n\
    \        }\n        if($has_comma==true){\n            $result=explode(\",\",$txt);\n\
    \        }\n        else{\n            for($i=0;$i<strlen($txt);$i++){\n     \
    \           for($j=0;$j<strlen($alphabet);$j++){\n                    if($txt[$i]==$alphabet[$j]){\n\
    \                        if($j%2==1){\n                            $odd_alphabet_count++;\n\
    \                        }\n                    }\n                }\n       \
    \     }\n            $result=$odd_alphabet_count;\n        }\n    }\n    return\
    \ $result;\n}\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if(preg_match(\"/[\\s,]/\"\
    , $txt)) {\n        return preg_split(\"/[\\s,]/\", $txt);\n    } else {\n   \
    \     $count = 0;\n        $length = strlen($txt);\n        for($i = 0; $i < $length;\
    \ $i++) {\n            if($i % 2 != 0 && ord($txt[$i]) % 2 != 0) {\n         \
    \       $count++;\n            }\n        }\n        return $count;\n    }\n}\n\
    \n$myArray = split_words(\"abcde\");\nprint_r($myArray);\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1b_o_5t3.php:37\n\
    Stack trace:\n#0 /tmp/tmp1b_o_5t3.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp1b_o_5t3.php\
    \ on line 37\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $len = strlen($txt);\n    $result\
    \ = array();\n    $word = \"\";\n    for ($i = 0; $i < $len; $i++) {\n       \
    \ if ($txt[$i] != \" \" && $txt[$i] != \",\") {\n            $word .= $txt[$i];\n\
    \        } else {\n            if (strlen($word) > 0) {\n                array_push($result,\
    \ $word);\n                $word = \"\";\n            }\n        }\n    }\n  \
    \  if (strlen($word) > 0) {\n        array_push($result, $word);\n    }\n    if\
    \ (count($result) == 0) {\n        $result = 0;\n        for ($i = 0; $i < $len;\
    \ $i++) {\n            if (ord($txt[$i]) % 2 == 1) {\n                $result++;\n\
    \            }\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpukpfxlun.php:46\n\
    Stack trace:\n#0 /tmp/tmpukpfxlun.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpukpfxlun.php\
    \ on line 46\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n  if (preg_match('/[\\s]/', $txt))\
    \ {\n    return preg_split('/[\\s]/', $txt);\n  } elseif (preg_match('/[,]/',\
    \ $txt)) {\n    return preg_split('/[,]/', $txt);\n  } else {\n    $length = strlen($txt);\n\
    \    $odds = [];\n    for ($i = 0; $i < $length; $i++) {\n      if (ord($txt[$i])\
    \ % 2 === 1) {\n        $odds[] = $txt[$i];\n      }\n    }\n    return count($odds);\n\
    \  }\n}\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\"\
    , \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe1hojfec.php:38\n\
    Stack trace:\n#0 /tmp/tmpe1hojfec.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpe1hojfec.php\
    \ on line 38\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n  if(strpos($txt, ' ') !== false)\
    \ {\n    return explode(' ', $txt);\n  } elseif(strpos($txt, ',') !== false) {\n\
    \    return explode(',', $txt);\n  } else {\n    $count = 0;\n    for($i = 0;\
    \ $i < strlen($txt); $i++) {\n      if(ord($txt[$i]) % 2 == 1) {\n        $count++;\n\
    \      }\n    }\n    return $count;\n  }\n}\n\nfunction candidate(...$args) {\n\
    \    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplzkhceqm.php:38\n\
    Stack trace:\n#0 /tmp/tmplzkhceqm.php(43): test()\n#1 {main}\n  thrown in /tmp/tmplzkhceqm.php\
    \ on line 38\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false)\
    \ {\n        return explode(' ', $txt);\n    }\n    if (strpos($txt, ',') !==\
    \ false) {\n        return explode(',', $txt);\n    }\n    $array = str_split($txt);\n\
    \    $count = 0;\n    foreach ($array as $key => $value) {\n        if ($key %\
    \ 2 == 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n\
    function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8g825upf.php:39\n\
    Stack trace:\n#0 /tmp/tmp8g825upf.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp8g825upf.php\
    \ on line 39\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $string = \"\";\n    for ($i\
    \ = 0; $i < strlen($txt); $i++) {\n        if ((ord($txt[$i]) >= 97 && ord($txt[$i])\
    \ <= 122) ||\n            (ord($txt[$i]) >= 65 && ord($txt[$i]) <= 90)) {\n  \
    \          $string .= $txt[$i];\n        }\n    }\n    $count = 0;\n    $ordString\
    \ = \"\";\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ((ord($string[$i])\
    \ - ord('a')) % 2 != 0) {\n            $count++;\n        }\n    }\n    if ($count\
    \ == 0) {\n        $txt = str_replace(\" \", \",\", $txt);\n        $arr = explode(\"\
    ,\", $txt);\n        return $arr;\n    } else {\n        return $count;\n    }\n\
    }\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\"\
    , \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl53an7vq.php:41\n\
    Stack trace:\n#0 /tmp/tmpl53an7vq.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpl53an7vq.php\
    \ on line 41\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(\" \", $txt);\n\
    \    if(count($words) == 1) {\n        $words = explode(\",\", $txt);\n      \
    \  if(count($words) == 1) {\n            $count = 0;\n            $letters = str_split($txt);\n\
    \            for($i = 0; $i < count($letters); $i++) {\n                if($i\
    \ % 2 == 0) {\n                    $count++;\n                }\n            }\n\
    \            return $count;\n        }\n    }\n    return $words;\n}\n\n$test\
    \ = split_words(\"Hello world!\");\nvar_dump($test);\necho \"<br>\";\n$test =\
    \ split_words(\"Hello,world!\");\nvar_dump($test);\necho \"<br>\";\n$test = split_words(\"\
    abcdef\");\nvar_dump($test);\necho \"<br>\";\n$test = split_words(\"Hello, world!\"\
    );\nvar_dump($test);\necho \"<br>\";\n$test = split_words(\"this is a test\");\n\
    var_dump($test);\necho \"<br>\";\n$test = split_words(\"a2b2c2d2\");\nvar_dump($test);\n\
    echo \"<br>\";\n$test = split_words(\"abcd\");\nvar_dump($test);\necho \"<br>\"\
    ;\n$test = split_words(\"nothing to see here\");\nvar_dump($test);\necho \"<br>\"\
    ;\n$test = split_words(\"Hello, world!\");\nvar_dump($test);\necho \"<br>\";\n\
    $test = split_words(\"abcdef\");\nvar_dump($test);\necho \"<br>\";\n$test = split_words(\"\
    apple, pear, peach, plum\");\nvar_dump($test);\necho \"<br>\";\n$test = split_words(\"\
    red, green, blue\");\nvar_dump($test);\necho \"<br>\";\n$test = split_words(\"\
    0,1,2,3,4,5,6,7,8,9\");\nvar_dump($test);\necho \"<br>\";\n$test = split_words(\"\
    abcdefghijklmnopqrstuvwxyz\");\nvar_dump($test);\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "array(2) {\n  [0]=>\n  string(5) \"Hello\"\n  [1]=>\n  string(6) \"world!\"\
    \n}\n<br>array(2) {\n  [0]=>\n  string(5) \"Hello\"\n  [1]=>\n  string(6) \"world!\"\
    \n}\n<br>int(3)\n<br>array(2) {\n  [0]=>\n  string(6) \"Hello,\"\n  [1]=>\n  string(6)\
    \ \"world!\"\n}\n<br>array(4) {\n  [0]=>\n  string(4) \"this\"\n  [1]=>\n  string(2)\
    \ \"is\"\n  [2]=>\n  string(1) \"a\"\n  [3]=>\n  string(4) \"test\"\n}\n<br>int(4)\n\
    <br>int(2)\n<br>array(4) {\n  [0]=>\n  string(7) \"nothing\"\n  [1]=>\n  string(2)\
    \ \"to\"\n  [2]=>\n  string(3) \"see\"\n  [3]=>\n  string(4) \"here\"\n}\n<br>array(2)\
    \ {\n  [0]=>\n  string(6) \"Hello,\"\n  [1]=>\n  string(6) \"world!\"\n}\n<br>int(3)\n\
    <br>array(4) {\n  [0]=>\n  string(6) \"apple,\"\n  [1]=>\n  string(5) \"pear,\"\
    \n  [2]=>\n  string(6) \"peach,\"\n  [3]=>\n  string(4) \"plum\"\n}\n<br>array(3)\
    \ {\n  [0]=>\n  string(4) \"red,\"\n  [1]=>\n  string(6) \"green,\"\n  [2]=>\n\
    \  string(4) \"blue\"\n}\n<br>array(10) {\n  [0]=>\n  string(1) \"0\"\n  [1]=>\n\
    \  string(1) \"1\"\n  [2]=>\n  string(1) \"2\"\n  [3]=>\n  string(1) \"3\"\n \
    \ [4]=>\n  string(1) \"4\"\n  [5]=>\n  string(1) \"5\"\n  [6]=>\n  string(1) \"\
    6\"\n  [7]=>\n  string(1) \"7\"\n  [8]=>\n  string(1) \"8\"\n  [9]=>\n  string(1)\
    \ \"9\"\n}\n<br>int(13)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1_dwr85f.php:82\n\
    Stack trace:\n#0 /tmp/tmp1_dwr85f.php(87): test()\n#1 {main}\n  thrown in /tmp/tmp1_dwr85f.php\
    \ on line 82\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $res = [];\n    $i = 0;\n \
    \   $res[$i] = \"\";\n    for ($j = 0; $j < strlen($txt); $j++) {\n        if\
    \ ($txt[$j] == \" \") {\n            $i++;\n            $res[$i] = \"\";\n   \
    \     } else if ($txt[$j] == \",\") {\n            $i++;\n            $res[$i]\
    \ = \"\";\n        } else {\n            $res[$i] .= $txt[$j];\n        }\n  \
    \  }\n    if (strpos($txt, \" \") === false && strpos($txt, \",\") === false)\
    \ {\n        $cnt = 0;\n        for ($i = 0; $i < count($res); $i++) {\n     \
    \       if (ord($res[$i]) % 2) {\n                $cnt++;\n            }\n   \
    \     }\n        return $cnt;\n    }\n    return $res;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp72hq8ukt.php:46\n\
    Stack trace:\n#0 /tmp/tmp72hq8ukt.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp72hq8ukt.php\
    \ on line 46\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if (strstr($txt, ' ')) {\n\
    \        return explode(' ', $txt);\n    } else if (strstr($txt, ',')) {\n   \
    \     return explode(',', $txt);\n    } else {\n        $odd = 0;\n        for\
    \ ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i]) % 2 !== 0)\
    \ {\n                $odd++;\n            }\n        }\n        return $odd;\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpllosl27o.php:38\n\
    Stack trace:\n#0 /tmp/tmpllosl27o.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpllosl27o.php\
    \ on line 38\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false)\
    \ {\n        return explode(' ', $txt);\n    }\n    if (strpos($txt, ',') !==\
    \ false) {\n        return explode(',', $txt);\n    }\n    return (strlen($txt)\
    \ - count_chars($txt, 1)[ord('a')] - count_chars($txt, 1)[ord('z')]) / 2;\n}\n\
    function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 122 in /tmp/tmpcmgvv7wc.php on line 19\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcmgvv7wc.php:30\nStack\
    \ trace:\n#0 /tmp/tmpcmgvv7wc.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpcmgvv7wc.php\
    \ on line 30\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false)\
    \ {\n        return explode(' ', $txt);\n    } else if (strpos($txt, ',') !==\
    \ false) {\n        return explode(',', $txt);\n    } else {\n        $count =\
    \ 0;\n        $letters = str_split($txt);\n        foreach ($letters as $letter)\
    \ {\n            if ((ord($letter) % 2) == 1) {\n                $count++;\n \
    \           }\n        }\n        return $count;\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphy3mi5to.php:38\n\
    Stack trace:\n#0 /tmp/tmphy3mi5to.php(43): test()\n#1 {main}\n  thrown in /tmp/tmphy3mi5to.php\
    \ on line 38\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $chars = str_split($txt);\n\
    \    $whitespace = [];\n    foreach ($chars as $key => $value) {\n        if ($value\
    \ == ' ') {\n            $whitespace[] = $key;\n        }\n    }\n    if (count($whitespace)\
    \ > 0) {\n        $return = [];\n        for ($i = 0; $i < count($whitespace);\
    \ $i++) {\n            if ($i == 0) {\n                $return[] = substr($txt,\
    \ 0, $whitespace[$i]);\n            } else {\n                $return[] = substr($txt,\
    \ $whitespace[$i - 1] + 1, $whitespace[$i] - $whitespace[$i - 1] - 1);\n     \
    \       }\n        }\n        if ($whitespace[count($whitespace) - 1] < strlen($txt)\
    \ - 1) {\n            $return[] = substr($txt, $whitespace[count($whitespace)\
    \ - 1] + 1);\n        }\n        return $return;\n    }\n    $commas = [];\n \
    \   foreach ($chars as $key => $value) {\n        if ($value == ',') {\n     \
    \       $commas[] = $key;\n        }\n    }\n    if (count($commas) > 0) {\n \
    \       $return = [];\n        for ($i = 0; $i < count($commas); $i++) {\n   \
    \         if ($i == 0) {\n                $return[] = substr($txt, 0, $commas[$i]);\n\
    \            } else {\n                $return[] = substr($txt, $commas[$i - 1]\
    \ + 1, $commas[$i] - $commas[$i - 1] - 1);\n            }\n        }\n       \
    \ if ($commas[count($commas) - 1] < strlen($txt) - 1) {\n            $return[]\
    \ = substr($txt, $commas[count($commas) - 1] + 1);\n        }\n        return\
    \ $return;\n    }\n    $lower = 'abcdefghijklmnopqrstuvwxyz';\n    $lower = str_\n\
    function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpskm77kw6.php
    on line 56

    '
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $myarray = str_split($txt);\n\
    \    if(strpos($txt, ' ') == true){\n        $myarray = explode(' ', $txt);\n\
    \    }elseif(strpos($txt, ',') == true){\n        $myarray = explode(',', $txt);\n\
    \    }else{\n        $alpha = 'abcdefghijklmnopqrstuvwxyz';\n        $myarray\
    \ = str_split($alpha);\n        $odd_array = [];\n        for($i = 0; $i < count($myarray);\
    \ $i++){\n            if($i % 2 !== 0){\n                array_push($odd_array,\
    \ $myarray[$i]);\n            }\n        }\n        $myarray = count($odd_array);\n\
    \    }\n    return $myarray;\n}\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdnqv7wk4.php:40\n\
    Stack trace:\n#0 /tmp/tmpdnqv7wk4.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpdnqv7wk4.php\
    \ on line 40\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n\t$result = $txt;\n\t$spaces =\
    \ str_split($txt);\n\t$commas = str_split($txt);\n\t$lowerCase = str_split($txt);\n\
    \t$txt = strtolower($txt);\n\t$oddOrder = [];\n\t$temp = [];\n\t$temp2 = [];\n\
    \t$temp3 = [];\n\t$x = 0;\n\tfor ($i = 0; $i < count($spaces); $i++) {\n\t\tif\
    \ ($spaces[$i] == \" \") {\n\t\t\t$temp[] = $i;\n\t\t}\n\t}\n\tif (count($temp)\
    \ != 0) {\n\t\t$result = [];\n\t\tfor ($i = 0; $i < count($temp); $i++) {\n\t\t\
    \t$result[] = str_split($txt, $temp[$i]);\n\t\t}\n\t\t$result = $result[count($result)\
    \ - 1];\n\t\t$result = $result[count($result) - 1];\n\t\treturn explode(\" \"\
    , $result);\n\t} else {\n\t\tfor ($i = 0; $i < count($commas); $i++) {\n\t\t\t\
    if ($commas[$i] == \",\") {\n\t\t\t\t$temp2[] = $i;\n\t\t\t}\n\t\t}\n\t\tif (count($temp2)\
    \ != 0) {\n\t\t\t$result = [];\n\t\t\tfor ($i = 0; $i < count($temp2); $i++) {\n\
    \t\t\t\t$result[] = str_split($txt, $temp2[$i]);\n\t\t\t}\n\t\t\t$result = $result[count($result)\
    \ - 1];\n\t\t\t$result = $result[count($result) - 1];\n\t\t\treturn explode(\"\
    ,\", $result);\n\t\t} else {\n\t\t\tfor ($i = 0; $i < count($lowerCase); $i++)\
    \ {\n\t\t\t\tif (ord($lowerCase[$i]) % 2 == 1) {\n\t\t\t\t\t$temp3[] = $i;\n\t\
    \t\t\t}\n\t\t\t}\n\t\t\t$result =\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpvsjdmj4d.php on line 57

    '
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n  if (strpos($txt, ' ') === false)\
    \ {\n    if (strpos($txt, ',') === false) {\n      $ret = 0;\n      for ($i =\
    \ 0; $i < strlen($txt); $i++) {\n        if (ord($txt[$i]) % 2 == 1) $ret++;\n\
    \      }\n      return $ret;\n    } else {\n      return explode(',', $txt);\n\
    \    }\n  } else {\n    return explode(' ', $txt);\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8kdetxgw.php:38\n\
    Stack trace:\n#0 /tmp/tmp8kdetxgw.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp8kdetxgw.php\
    \ on line 38\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $result = [];\n    $no_comma\
    \ = preg_replace('/,/', ' ', $txt);\n    $no_white_space = preg_replace('/\\s+/',\
    \ ',', $no_comma);\n    if ($no_white_space != $txt) {\n        $result = explode('\
    \ ', $txt);\n    } elseif ($no_comma != $txt) {\n        $result = explode(',',\
    \ $no_comma);\n    } else {\n        for ($i = 0; $i < strlen($txt); $i++) {\n\
    \            if ($i % 2 != 0) {\n                $result++;\n            }\n \
    \       }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n   \
    \ return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiuhjzntk.php:35\n\
    Stack trace:\n#0 /tmp/tmpiuhjzntk.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpiuhjzntk.php\
    \ on line 35\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n\n}\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1kzxgyzf.php:20\n\
    Stack trace:\n#0 /tmp/tmp1kzxgyzf.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp1kzxgyzf.php\
    \ on line 20\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n  // Your code here\n}\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3mf_lvp1.php:20\n\
    Stack trace:\n#0 /tmp/tmp3mf_lvp1.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp3mf_lvp1.php\
    \ on line 20\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n\tif(!empty($txt)){\n\t\tif(!preg_match('/\\\
    s/', $txt)){\n\t\t\tif(!preg_match('/,/', $txt)){\n\t\t\t\t$count = 0;\n\t\t\t\
    \tfor($i = 0; $i < strlen($txt); $i++) {\n\t\t\t\t\tif(ord($txt[$i]) % 2 != 0){\n\
    \t\t\t\t\t\t$count++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn $count;\n\t\t\t\
    }\n\t\t\telse{\n\t\t\t\treturn explode(',', $txt);\n\t\t\t}\n\t\t}\n\t\telse{\n\
    \t\t\treturn explode(' ', $txt);\n\t\t}\n\t}\n\telse{\n\t\treturn 'Empty';\n\t\
    }\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\"\
    , \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwtek7wmd.php:47\n\
    Stack trace:\n#0 /tmp/tmpwtek7wmd.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpwtek7wmd.php\
    \ on line 47\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    // TODO\n}\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxpougfvz.php:20\n\
    Stack trace:\n#0 /tmp/tmpxpougfvz.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpxpougfvz.php\
    \ on line 20\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') === false)\
    \ {\n        if (strpos($txt, ',') === false) {\n            return (ord($txt[0])\
    \ - ord('a')) % 2 == 0 ? strlen($txt) - 1 : strlen($txt);\n        } else {\n\
    \            return explode(',', $txt);\n        }\n    } else {\n        return\
    \ explode(' ', $txt);\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw4m7w78t.php:33\n\
    Stack trace:\n#0 /tmp/tmpw4m7w78t.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpw4m7w78t.php\
    \ on line 33\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n// BEGIN (write your solution here)\n\
    $temp_arr = explode(' ', $txt);\n$count_temp_arr = count($temp_arr);\nif ($count_temp_arr\
    \ > 1) {\n    return $temp_arr;\n} else {\n    $temp_arr = explode(',', $txt);\n\
    \    $count_temp_arr = count($temp_arr);\n    if ($count_temp_arr > 1) {\n   \
    \     return $temp_arr;\n    } else {\n        $letter = mb_strtolower($txt);\n\
    \        $letter_ord = [];\n        for ($i = 0; $i < mb_strlen($letter); $i++)\
    \ {\n            $ord = ord($letter[$i]);\n            $letter_ord[] = $ord;\n\
    \        }\n        $count_odd = 0;\n        for ($i = 0; $i < count($letter_ord);\
    \ $i++) {\n            if ($letter_ord[$i] % 2 != 0) {\n                $count_odd++;\n\
    \            }\n        }\n        return $count_odd;\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 12 in /tmp/tmpg9e2pvm_.php on line 54

    '
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n  if (strpos($txt, ' ') != FALSE)\
    \ {\n    return explode(' ', $txt);\n  }\n  elseif (strpos($txt, ',') != FALSE)\
    \ {\n    return explode(',', $txt);\n  }\n  else {\n    $number = 0;\n    for\
    \ ($i = 0; $i < strlen($txt); $i++) {\n      if (ord($txt[$i]) % 2 == 1) {\n \
    \       $number++;\n      }\n    }\n    return $number;\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxfg69dxs.php:40\n\
    Stack trace:\n#0 /tmp/tmpxfg69dxs.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpxfg69dxs.php\
    \ on line 40\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $split = '';\n    if (strpos($txt,\
    \ ' ') !== false) {\n        $split = explode(' ', $txt);\n    } elseif (strpos($txt,\
    \ ',') !== false) {\n        $split = explode(',', $txt);\n    } else {\n    \
    \    $split = count($txt);\n    }\n    return $split;\n}\n\necho \"<pre>\";\n\
    print_r(split_words(\"Hello world!\"));\necho \"</pre>\";\n\necho \"<pre>\";\n\
    print_r(split_words(\"Hello,world!\"));\necho \"</pre>\";\n\necho \"<pre>\";\n\
    print_r(split_words(\"abcdef\"));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>Array\n\
    (\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>\nFatal error: Uncaught\
    \ TypeError: count(): Argument #1 ($value) must be of type Countable|array, string\
    \ given in /tmp/tmpxs2yxv1t.php:19\nStack trace:\n#0 /tmp/tmpxs2yxv1t.php(33):\
    \ split_words('abcdef')\n#1 {main}\n  thrown in /tmp/tmpxs2yxv1t.php on line 19\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false)\
    \ {\n        return explode(' ', $txt);\n    }\n    if (strpos($txt, ',') !==\
    \ false) {\n        return explode(',', $txt);\n    }\n    return count(\n   \
    \     array_filter(\n            str_split($txt),\n            function ($num)\
    \ {\n                return ord($num) % 2 == 1;\n            }\n        )\n  \
    \  );\n}\n\nvar_dump(split_words(\"Hello world!\")); // array(\"Hello\", \"world!\"\
    )\nvar_dump(split_words(\"Hello,world!\")); // array(\"Hello\", \"world!\")\n\
    var_dump(split_words(\"abcdef\")); // 3\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "array(2) {\n  [0]=>\n  string(5) \"Hello\"\n  [1]=>\n  string(6) \"world!\"\
    \n}\narray(2) {\n  [0]=>\n  string(5) \"Hello\"\n  [1]=>\n  string(6) \"world!\"\
    \n}\nint(3)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvq4vzc4m.php:42\n\
    Stack trace:\n#0 /tmp/tmpvq4vzc4m.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpvq4vzc4m.php\
    \ on line 42\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    if\
    \ (strpos($txt, ' ') !== false) {\n        return explode(' ', $txt);\n    }\n\
    \    if (strpos($txt, ',') !== false) {\n        return explode(',', $txt);\n\
    \    }\n    if (strlen($txt) > 1) {\n        $count = 0;\n        for ($i = 0;\
    \ $i < strlen($txt); $i++) {\n            if (ord($txt[$i]) % 2 == 1) {\n    \
    \            $count++;\n            }\n        }\n        return $count;\n   \
    \ }\n    return $txt;\n}\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpicmt5mpq.php:41\n\
    Stack trace:\n#0 /tmp/tmpicmt5mpq.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpicmt5mpq.php\
    \ on line 41\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = [];\n    $str = '';\n\
    \    for ($i = 0; $i < strlen($txt); $i++) {\n        if (($txt[$i] != ' ') &&\
    \ ($txt[$i] != ',')) {\n            $str .= $txt[$i];\n        } else {\n    \
    \        $arr[] = $str;\n            $str = '';\n        }\n    }\n    if ($str\
    \ != '') {\n        $arr[] = $str;\n    }\n    if (count($arr) == 0) {\n     \
    \   $r = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n            if ((ord($txt[$i])\
    \ - ord('a')) % 2 != 0) {\n                $r++;\n            }\n        }\n \
    \       return $r;\n    }\n    return $arr;\n}\n\n$txt = 'Hello world!';\necho\
    \ $txt . '<br>';\nprint_r(split_words($txt));\necho '<br>';\n$txt = 'Hello,world!';\n\
    echo $txt . '<br>';\nprint_r(split_words($txt));\necho '<br>';\n$txt = 'abcdef';\n\
    echo $txt . '<br>';\nprint_r(split_words($txt));\necho '<br>';\n$txt = 'abcdef';\n\
    echo $txt . '<br>';\nprint_r(split_words($txt));\necho '<br>';\n$txt = 'abcdefghijklmnopqrstuvwxyz';\n\
    echo $txt . '<br>';\nprint_r(split_words($txt));\necho '<br>';\n$txt = 'Hello,world!';\n\
    echo $txt . '<br>';\nprint_r(split_words($txt));\necho '<br>';\n$txt = 'Hello,\
    \ world!';\necho $txt . '<br>';\nprint_r(split_words($txt));\necho '<br>';\n$txt\
    \ = 'Hello,world!,';\necho $txt . '<br>';\nprint_r(split_words($txt\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmppepgft98.php
    on line 69

    '
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n  $txt = preg_replace('/[^a-zA-Z,]/',\
    \ '', $txt);\n  if (strpos($txt, ',') !== false) {\n    return explode(',', $txt);\n\
    \  }\n  $count = 0;\n  for ($i = 0; $i < strlen($txt); $i++) {\n    if (ord($txt[$i])\
    \ % 2 === 1) {\n      $count++;\n    }\n  }\n  return $count;\n}\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnvhhf1xb.php:30\n\
    Stack trace:\n#0 /tmp/tmpnvhhf1xb.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpnvhhf1xb.php\
    \ on line 30\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n  if (str_word_count($txt, 0) >\
    \ 1) {\n    return explode(\" \", $txt);\n  } elseif (strpos($txt, \",\") > 0)\
    \ {\n    return explode(\",\", $txt);\n  } else {\n    return getOddLettersCount($txt);\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjsx9gtef.php:28\n\
    Stack trace:\n#0 /tmp/tmpjsx9gtef.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpjsx9gtef.php\
    \ on line 28\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $i = 0;\n    $result = array();\n\
    \    $length = strlen($txt);\n    while ($i < $length) {\n        if ($txt[$i]\
    \ == ' ') {\n            array_push($result, substr($txt, 0, $i));\n         \
    \   $txt = substr($txt, $i + 1);\n            $length = strlen($txt);\n      \
    \      $i = 0;\n        } else if ($txt[$i] == ',') {\n            array_push($result,\
    \ substr($txt, 0, $i));\n            $txt = substr($txt, $i + 1);\n          \
    \  $length = strlen($txt);\n            $i = 0;\n        } else {\n          \
    \  $i++;\n        }\n    }\n    array_push($result, $txt);\n    if (count($result)\
    \ > 1) {\n        return $result;\n    } else {\n        $result = 0;\n      \
    \  for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i]) % 2\
    \ == 1) {\n                $result++;\n            }\n        }\n        return\
    \ $result;\n    }\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsq3f6xoi.php:52\n\
    Stack trace:\n#0 /tmp/tmpsq3f6xoi.php(60): test()\n#1 {main}\n  thrown in /tmp/tmpsq3f6xoi.php\
    \ on line 52\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    $white\
    \ = ' ';\n    $comma = ',';\n    if (strpos($txt, $white) !== false) {\n     \
    \   return explode($white, $txt);\n    } else if (strpos($txt, $comma) !== false)\
    \ {\n        return explode($comma, $txt);\n    } else {\n        $count = 0;\n\
    \        $len = strlen($txt);\n        for ($i = 0; $i < $len; $i += 2) {\n  \
    \          if (ord($txt[$i]) % 2 == 1) {\n                $count++;\n        \
    \    }\n        }\n        return $count;\n    }\n}\n\necho '<pre>';\nprint_r(split_words(\"\
    Hello world!\"));\necho '</pre>';\n\necho '<pre>';\nprint_r(split_words(\"Hello,world!\"\
    ));\necho '</pre>';\n\necho '<pre>';\nprint_r(split_words(\"abcdef\"));\necho\
    \ '</pre>';\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>Array\n\
    (\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>3</pre>\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp39g_u98u.php:54\nStack trace:\n#0 /tmp/tmp39g_u98u.php(58):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp39g_u98u.php on line 54\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n\tif (preg_match('/\\s/', $txt))\
    \ {\n\t\treturn explode(' ', $txt);\n\t} else if (preg_match('/,/', $txt)) {\n\
    \t\treturn explode(',', $txt);\n\t} else {\n\t\t$count = 0;\n\t\tfor ($i = 0;\
    \ $i < strlen($txt); $i++) {\n\t\t\tif ($i % 2 == 0 && ord($txt[$i]) >= ord('a')\
    \ && ord($txt[$i]) <= ord('z')) {\n\t\t\t\t$count++;\n\t\t\t}\n\t\t}\n\t\treturn\
    \ $count;\n\t}\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwe0uz69l.php:38\n\
    Stack trace:\n#0 /tmp/tmpwe0uz69l.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpwe0uz69l.php\
    \ on line 38\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n\t$txt = trim($txt);\n\tif (strpos($txt,\
    \ ' ') !== false) {\n\t\treturn explode(' ', $txt);\n\t}\n\tif (strpos($txt, ',')\
    \ !== false) {\n\t\treturn explode(',', $txt);\n\t}\n\t$count = 0;\n\tfor ($i\
    \ = 0; $i < strlen($txt); $i++) {\n\t\tif (ord($txt[$i]) % 2 == 1) {\n\t\t\t$count++;\n\
    \t\t}\n\t}\n\treturn $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsdtinrao.php:39\n\
    Stack trace:\n#0 /tmp/tmpsdtinrao.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpsdtinrao.php\
    \ on line 39\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $split_on_whitespace = preg_split('/\\\
    s+/', $txt);\n    if (count($split_on_whitespace) > 1) {\n        return $split_on_whitespace;\n\
    \    }\n    $split_on_comma = preg_split('/,/', $txt);\n    if (count($split_on_comma)\
    \ > 1) {\n        return $split_on_comma;\n    }\n    $odd_ord = \"\";\n    for\
    \ ($i = 0; $i < strlen($txt); $i++) {\n        if ($i % 2 === 1) {\n         \
    \   $odd_ord .= $txt[$i];\n        }\n    }\n    return strlen($odd_ord);\n}\n\
    \nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg3tqelpr.php:41\n\
    Stack trace:\n#0 /tmp/tmpg3tqelpr.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpg3tqelpr.php\
    \ on line 41\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $split_txt = explode(\" \"\
    , $txt);\n    $text = \"\";\n    $count = 0;\n    for ($i = 0; $i < count($split_txt);\
    \ $i++) {\n        if (strlen($split_txt[$i]) > 1) {\n            $text .= $split_txt[$i]\
    \ . \" \";\n        } else {\n            $count++;\n        }\n    }\n    $text\
    \ = rtrim($text);\n    if ($text == \"\") {\n        $split_txt = explode(\",\"\
    , $txt);\n        $text = \"\";\n        $count = 0;\n        for ($i = 0; $i\
    \ < count($split_txt); $i++) {\n            if (strlen($split_txt[$i]) > 1) {\n\
    \                $text .= $split_txt[$i] . \" \";\n            } else {\n    \
    \            $count++;\n            }\n        }\n        $text = rtrim($text);\n\
    \        if ($text == \"\") {\n            for ($i = 0; $i < strlen($txt); $i++)\
    \ {\n                if (ord($txt[$i]) % 2 == 1) {\n                    $count++;\n\
    \                }\n            }\n            return $count;\n        } else\
    \ {\n            return explode(\" \", $text);\n        }\n    } else {\n    \
    \    return explode(\" \", $text);\n    }\n}\nfunction candidate(...$args) {\n\
    \    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxp0gdjcm.php:56\n\
    Stack trace:\n#0 /tmp/tmpxp0gdjcm.php(65): test()\n#1 {main}\n  thrown in /tmp/tmpxp0gdjcm.php\
    \ on line 56\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $spaced_array = explode(\"\
    \ \", $txt);\n    $comma_array = explode(\",\", $txt);\n    if(count($spaced_array)\
    \ > 1) {\n        return $spaced_array;\n    } elseif(count($comma_array) > 1)\
    \ {\n        return $comma_array;\n    } else {\n        $count = 0;\n       \
    \ for($i = 0; $i < strlen($txt); $i++) {\n            if(ord($txt[$i]) % 2 ==\
    \ 1) {\n                $count++;\n            }\n        }\n        return $count;\n\
    \    }\n}\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpphrbyw0a.php:39\n\
    Stack trace:\n#0 /tmp/tmpphrbyw0a.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpphrbyw0a.php\
    \ on line 39\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n\t// Your code goes here\n}\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyrq1pdc2.php:20\n\
    Stack trace:\n#0 /tmp/tmpyrq1pdc2.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpyrq1pdc2.php\
    \ on line 20\n"
  timestamp: 1660028761
- exit_code: 0
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if (preg_match(\"/\\s/\", $txt))\
    \ {\n        return preg_split(\"/\\s/\", $txt);\n    } else if (preg_match(\"\
    /,/\", $txt)) {\n        return preg_split(\"/,/\", $txt);\n    } else {\n   \
    \     return preg_match_all(\"/[a-z]/\", $txt, $res) - preg_match_all(\"/[acegikmoqsuwy]/\"\
    , $txt, $res);\n    }\n}\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txtArr = str_split($txt);\n\
    \    $words = [];\n    $count = 0;\n    foreach ($txtArr as $letter) {\n     \
    \   if ($letter === ' ') {\n            $words[] = substr($txt, $count);\n   \
    \         $txt = substr($txt, 0, $count);\n            $count = 0;\n        }\
    \ else if ($letter === ',') {\n            $words[] = substr($txt, $count);\n\
    \            $txt = substr($txt, 0, $count);\n            $count = 0;\n      \
    \  } else {\n            $count++;\n        }\n    }\n    if (is_numeric($txt))\
    \ {\n        return array_map('intval', $words);\n    } else {\n        return\
    \ $words;\n    }\n}\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoi3h3ha0.php:40\n\
    Stack trace:\n#0 /tmp/tmpoi3h3ha0.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpoi3h3ha0.php\
    \ on line 40\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if(strpos($txt,\" \")===FALSE)\
    \ {\n        if(strpos($txt,\",\")===FALSE) {\n            $len = strlen($txt);\n\
    \            $sum = 0;\n            for($i=0;$i<$len;$i++){\n                if(ord($txt[$i])%2==1)\
    \ $sum++;\n            }\n            return $sum;\n        } else return explode(\"\
    ,\",$txt);\n    } else return explode(\" \",$txt);\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwox6jx1e.php:35\n\
    Stack trace:\n#0 /tmp/tmpwox6jx1e.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpwox6jx1e.php\
    \ on line 35\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = preg_replace('/\\s+/',\
    \ ',', $txt);\n    if (strstr($txt, ',')) {\n        return explode(',', $txt);\n\
    \    } else {\n        $temp = 0;\n        for ($i = 0; $i < strlen($txt); $i++)\
    \ {\n            if ($i % 2 == 0) {\n                $temp += ord($txt[$i]);\n\
    \            }\n        }\n        return $temp;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp46b6vje7.php:34\n\
    Stack trace:\n#0 /tmp/tmp46b6vje7.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp46b6vje7.php\
    \ on line 34\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = preg_split('/[\\s,]+/',\
    \ $txt);\n    if (count($arr) === 1) {\n        $arr = str_split($txt);\n    \
    \    $counter = 0;\n        foreach ($arr as $letter) {\n            if (ord($letter)\
    \ % 2 === 1) {\n                $counter++;\n            }\n        }\n      \
    \  return $counter;\n    }\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2qnysypp.php:34\n\
    Stack trace:\n#0 /tmp/tmp2qnysypp.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp2qnysypp.php\
    \ on line 34\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n  $spacer = array(' ', ',');\n\
    \  $words = str_split($txt);\n  foreach ($spacer as $s) {\n    if (strstr($txt,\
    \ $s)) {\n      return explode($s, $txt);\n    }\n  }\n  $count = 0;\n  foreach\
    \ ($words as $w) {\n    if ($count % 2 == 0) {\n      if (strtolower($w) == $w)\
    \ {\n        $count++;\n      }\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpif4fmnup.php:40\n\
    Stack trace:\n#0 /tmp/tmpif4fmnup.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpif4fmnup.php\
    \ on line 40\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false)\
    \ {\n        return explode(' ', $txt);\n    } else if (strpos($txt, ',') !==\
    \ false) {\n        return explode(',', $txt);\n    } else {\n        $count =\
    \ 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n            if ($i % 2\
    \ == 0 && ord($txt[$i]) >= ord('a') && ord($txt[$i]) <= ord('z')) {\n        \
    \        $count++;\n            }\n        }\n        return $count;\n    }\n\
    }\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd22ie7n_.php:37\n\
    Stack trace:\n#0 /tmp/tmpd22ie7n_.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpd22ie7n_.php\
    \ on line 37\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n  // Write your code here\n}\n\
    function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptajgp178.php:20\n\
    Stack trace:\n#0 /tmp/tmptajgp178.php(30): test()\n#1 {main}\n  thrown in /tmp/tmptajgp178.php\
    \ on line 20\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n  if (strpos($txt, ' ') !== false)\
    \ {\n    return array(explode(' ', $txt));\n  } elseif (strpos($txt, ',') !==\
    \ false) {\n    return array(explode(',', $txt));\n  } else {\n    return count(array_filter(range(0,25),\
    \ function($i) use ($txt) {\n      return $i % 2 !== 0 && strpos($txt, chr($i\
    \ + ord('a'))) !== false;\n    }));\n  }\n}\n\nfunction candidate(...$args) {\n\
    \    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjwiw78m8.php:29\n\
    Stack trace:\n#0 /tmp/tmpjwiw78m8.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpjwiw78m8.php\
    \ on line 29\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false)\
    \ {\n        return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        return count_odd_letters($txt);\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_odd_letters()\
    \ in /tmp/tmpt5ikagj9.php:18\nStack trace:\n#0 /tmp/tmpt5ikagj9.php(23): split_words('abcdef')\n\
    #1 /tmp/tmpt5ikagj9.php(31): candidate('abcdef')\n#2 /tmp/tmpt5ikagj9.php(37):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpt5ikagj9.php on line 18\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if(strpos($txt, ' ') !== false)\
    \ {\n        return explode(' ', $txt);\n    } elseif(strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for($i = 0; $i < strlen($txt); $i++) {\n            if(ord($txt[$i]) %\
    \ 2 != 0) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\necho '<p>' . split_words(\"Hello world!\") . '</p>';\necho\
    \ '<p>' . split_words(\"Hello,world!\") . '</p>';\necho '<p>' . split_words(\"\
    abcdef\") . '</p>';\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Array to string conversion in /tmp/tmpohvqlmr8.php on line 27\n\
    <p>Array</p>\nWarning: Array to string conversion in /tmp/tmpohvqlmr8.php on line\
    \ 28\n<p>Array</p><p>3</p>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpohvqlmr8.php:40\n\
    Stack trace:\n#0 /tmp/tmpohvqlmr8.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpohvqlmr8.php\
    \ on line 40\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n\
    \    if (count($words) > 1) return $words;\n    $words = explode(',', $txt);\n\
    \    if (count($words) > 1) return $words;\n    $cnt = 0;\n    for ($i = 0; $i\
    \ < strlen($txt); $i++) {\n        if (ord($txt[$i]) % 2 == 1) $cnt++;\n    }\n\
    \    return $cnt;\n}\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg07tpb7k.php:33\n\
    Stack trace:\n#0 /tmp/tmpg07tpb7k.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpg07tpb7k.php\
    \ on line 33\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $result = [];\n    $split_arr\
    \ = [];\n    $split_arr = explode(\" \", $txt);\n    if (count($split_arr) > 1)\
    \ {\n        return $split_arr;\n    } else {\n        $split_arr = explode(\"\
    ,\", $txt);\n        if (count($split_arr) > 1) {\n            return $split_arr;\n\
    \        } else {\n            for ($i = 0; $i < strlen($txt); $i++) {\n     \
    \           if (ord($txt[$i]) % 2 == 1) {\n                    $result[] = $txt[$i];\n\
    \                }\n            }\n            return count($result);\n      \
    \  }\n    }\n}\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7xi8gz1e.php:42\n\
    Stack trace:\n#0 /tmp/tmp7xi8gz1e.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp7xi8gz1e.php\
    \ on line 42\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n\tif (empty($txt)) {\n\t\treturn\
    \ [];\n\t}\n\tif (strpos($txt, ' ') !== false) {\n\t\treturn explode(' ', $txt);\n\
    \t}\n\tif (strpos($txt, ',') !== false) {\n\t\treturn explode(',', $txt);\n\t\
    }\n\t$count = 0;\n\tfor ($i = 0; $i < strlen($txt); $i++) {\n\t\tif (ord($txt[$i])\
    \ % 2 == 1) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwm82fzw3.php:41\n\
    Stack trace:\n#0 /tmp/tmpwm82fzw3.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpwm82fzw3.php\
    \ on line 41\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $res = 0;\n    if (!preg_match(\"\
    /\\w/\", $txt)) return $res;\n    $arr = preg_split(\"/[\\s,]+/\", $txt);\n  \
    \  if (!preg_match(\"/\\d/\", $arr[0])) return $arr;\n    foreach ($arr as $s)\
    \ {\n        if (strlen($s) % 2 == 1) $res++;\n    }\n    return $res;\n}\n\n\
    function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvxm48ncc.php:30\n\
    Stack trace:\n#0 /tmp/tmpvxm48ncc.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpvxm48ncc.php\
    \ on line 30\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n\t$chars = str_split($txt);\n\t\
    $whitespace = array(\" \", \"\\t\", \"\\n\", \"\\r\", \"\\0\", \"\\x0B\");\n\t\
    $non_ws_chars = array();\n\t$ws_positions = array();\n\t$non_ws_positions = array();\n\
    \t$ws_count = 0;\n\tfor ($i = 0; $i < count($chars); $i++) {\n\t\tif (in_array($chars[$i],\
    \ $whitespace)) {\n\t\t\t$ws_positions[] = $i;\n\t\t\t$ws_count++;\n\t\t} else\
    \ {\n\t\t\t$non_ws_positions[] = $i;\n\t\t\t$non_ws_chars[] = $chars[$i];\n\t\t\
    }\n\t}\n\tif ($ws_count > 0) {\n\t\t$ws_positions[] = count($chars);\n\t\t$words\
    \ = array();\n\t\tfor ($i = 0; $i < count($ws_positions) - 1; $i++) {\n\t\t\t\
    $sub_array = array_slice($chars, $ws_positions[$i] + 1, $ws_positions[$i + 1]\
    \ - $ws_positions[$i] - 1);\n\t\t\t$words[] = implode(\"\", $sub_array);\n\t\t\
    }\n\t\treturn $words;\n\t} else {\n\t\tif (count($non_ws_chars) > 0) {\n\t\t\t\
    $chars = array_unique($non_ws_chars);\n\t\t\t$odd_count = 0;\n\t\t\tfor ($i =\
    \ 0; $i < count($chars); $i++) {\n\t\t\t\t$count = substr_count($txt, $chars[$i]);\n\
    \t\t\t\tif ($count % 2 != 0) {\n\t\t\t\t\t$odd_count++;\n\t\t\t\t}\n\t\t\t}\n\t\
    \t\treturn $odd_count;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n}\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_sicbexe.php:57\n\
    Stack trace:\n#0 /tmp/tmp_sicbexe.php(67): test()\n#1 {main}\n  thrown in /tmp/tmp_sicbexe.php\
    \ on line 57\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = str_replace('!', '',\
    \ $txt);\n    $txt = str_replace('?', '', $txt);\n    $txt = str_replace('.',\
    \ '', $txt);\n    $txt = str_replace(',', '', $txt);\n    $txt = str_replace(';',\
    \ '', $txt);\n    $txt = str_replace(':', '', $txt);\n    $txt = str_replace('(',\
    \ '', $txt);\n    $txt = str_replace(')', '', $txt);\n    $txt = str_replace('\"\
    ', '', $txt);\n    $txt = str_replace(\"'\", '', $txt);\n    $txt = str_replace('/',\
    \ '', $txt);\n    $txt = str_replace('\\\\', '', $txt);\n    $txt = str_replace('-',\
    \ '', $txt);\n    $txt = str_replace('_', '', $txt);\n    $txt = str_replace('[',\
    \ '', $txt);\n    $txt = str_replace(']', '', $txt);\n    $txt = str_replace('{',\
    \ '', $txt);\n    $txt = str_replace('}', '', $txt);\n    $txt = str_replace('\
    \ ', '', $txt);\n    if (strpos($txt, ' ') !== false) {\n        $arr = preg_split('/\\\
    s+/', $txt);\n        return $arr;\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        $arr = preg_split('/,+/', $txt);\n        return $arr;\n    } else\
    \ {\n        $arr = str_split($txt);\n        $arrOdd = array();\n        foreach\
    \ ($arr as $key => $val) {\n            if ($key % 2 === 0) {\n              \
    \  $arrOdd[] = $val;\n            }\n        }\n        return count($arrOdd);\n\
    \    }\n}\nprint_r(split_words(\"foo,bar,baz\"));\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwj7szl67.php:55\n\
    Stack trace:\n#0 /tmp/tmpwj7szl67.php(65): test()\n#1 {main}\n  thrown in /tmp/tmpwj7szl67.php\
    \ on line 55\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $len = strlen($txt);\n    $str\
    \ = '';\n    $array = [];\n    for ($i = 0; $i < $len; $i++) {\n        if ($txt[$i]\
    \ == ' ') {\n            if ($str != '') {\n                array_push($array,\
    \ $str);\n                $str = '';\n            }\n        } elseif ($txt[$i]\
    \ == ',') {\n            if ($str != '') {\n                array_push($array,\
    \ $str);\n                $str = '';\n            }\n        } else {\n      \
    \      $str .= $txt[$i];\n        }\n    }\n    if ($str != '') {\n        array_push($array,\
    \ $str);\n    }\n    if (count($array) == 0) {\n        $number = 0;\n       \
    \ for ($i = 0; $i < $len; $i++) {\n            if (ord($txt[$i]) % 2 == 1) {\n\
    \                $number++;\n            }\n        }\n        return $number;\n\
    \    }\n    return $array;\n}\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj3k4p147.php:52\n\
    Stack trace:\n#0 /tmp/tmpj3k4p147.php(60): test()\n#1 {main}\n  thrown in /tmp/tmpj3k4p147.php\
    \ on line 52\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $parts = [];\n    if(strpos($txt,\
    \ ' ') !== false) {\n        $parts = explode(' ', $txt);\n    } elseif(strpos($txt,\
    \ ',') !== false) {\n        $parts = explode(',', $txt);\n    } else {\n    \
    \    $parts = [];\n        $sum = 0;\n        for($i = 0; $i < strlen($txt); $i++)\
    \ {\n            $l = ord($txt[$i]);\n            if($l % 2 == 1) {\n        \
    \        $sum++;\n            }\n        }\n        return $sum;\n    }\n    return\
    \ $parts;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxz0lts65.php:42\n\
    Stack trace:\n#0 /tmp/tmpxz0lts65.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpxz0lts65.php\
    \ on line 42\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n  $i = 0;\n  $arr = array();\n\
    \  $split_chars = array();\n  $txt_len = strlen($txt);\n  for ($i=0; $i < $txt_len;\
    \ $i++) {\n    $t = $txt[$i];\n    if ($t == ' ' || $t == ',') {\n      $split_chars[]\
    \ = $i;\n    }\n  }\n  $prev_index = 0;\n  foreach ($split_chars as $index) {\n\
    \    $str = substr($txt, $prev_index, $index - $prev_index);\n    $arr[] = $str;\n\
    \    $prev_index = $index + 1;\n  }\n  if ($prev_index != $txt_len) {\n    $str\
    \ = substr($txt, $prev_index, $txt_len - $prev_index);\n    $arr[] = $str;\n \
    \ }\n  if (empty($arr)) {\n    $sum = 0;\n    for ($i=0; $i < $txt_len; $i++)\
    \ {\n      $ord = ord($txt[$i]);\n      if ($ord >= ord('a') && $ord <= ord('z'))\
    \ {\n        if ($i % 2 == 0) {\n          $sum += $ord;\n        }\n      }\n\
    \    }\n    return $sum;\n  }\n  return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo_7qks7b.php:55\n\
    Stack trace:\n#0 /tmp/tmpo_7qks7b.php(63): test()\n#1 {main}\n  thrown in /tmp/tmpo_7qks7b.php\
    \ on line 55\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    // TODO: Implement Me\n}\n\
    function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppzass2iu.php:20\n\
    Stack trace:\n#0 /tmp/tmppzass2iu.php(30): test()\n#1 {main}\n  thrown in /tmp/tmppzass2iu.php\
    \ on line 20\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n\t$arr = str_split($txt);\n\t$sp\
    \ = false;\n\t$com = false;\n\tforeach ($arr as $a) {\n\t\tif($a == \" \") $sp\
    \ = true;\n\t\tif($a == \",\") $com = true;\n\t}\n\tif($sp) return explode(\"\
    \ \", $txt);\n\tif($com) return explode(\",\", $txt);\n\t$letters = str_split('abcdefghijklmnopqrstuvwxyz');\n\
    \t$odds = 0;\n\tforeach ($letters as $l) {\n\t\tif(substr_count($txt, $l) % 2)\
    \ $odds++;\n\t}\n\treturn $odds;\n}\n\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkubqkwgb.php:39\n\
    Stack trace:\n#0 /tmp/tmpkubqkwgb.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpkubqkwgb.php\
    \ on line 39\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if(str_word_count($txt) ===\
    \ 1) {\n        $data = str_split($txt);\n        $count = 0;\n        foreach($data\
    \ as $v) {\n            if(ord($v) % 2 !== 0) {\n                $count++;\n \
    \           }\n        }\n        return $count;\n    }\n\n    if(strpos($txt,\
    \ ' ') === false) {\n        return explode(',', $txt);\n    }\n    return explode('\
    \ ', $txt);\n}\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjrnc_rcm.php:39\n\
    Stack trace:\n#0 /tmp/tmpjrnc_rcm.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpjrnc_rcm.php\
    \ on line 39\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if(preg_match(\"/\\s/\", $txt))\
    \ {\n        return explode(\" \", $txt);\n    } elseif(preg_match(\"/,/\", $txt))\
    \ {\n        return explode(\",\", $txt);\n    } else {\n        $count = 0;\n\
    \        for($i = 0; $i < strlen($txt); $i++) {\n            if($i % 2 == 0) {\n\
    \                $count++;\n            }\n        }\n        return $count;\n\
    \    }\n}\necho json_encode(split_words(\"Hello world!\"));\necho json_encode(split_words(\"\
    Hello,world!\"));\necho json_encode(split_words(\"abcdef\"));\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "[\"Hello\",\"world!\"][\"Hello\",\"world!\"]3\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpcnd3j_32.php:40\nStack trace:\n#0 /tmp/tmpcnd3j_32.php(45):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpcnd3j_32.php on line 40\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $whitespace = str_split(\"\
    \ \\n\\t\\r\");\n    $punctuation = str_split(\",.;:!?\");\n    $result = [];\n\
    \    $cur_word = \"\";\n    for ($i = 0; $i < strlen($txt); $i++) {\n        $c\
    \ = $txt[$i];\n        if (in_array($c, $whitespace)) {\n            if (strlen($cur_word)\
    \ > 0) {\n                array_push($result, $cur_word);\n                $cur_word\
    \ = \"\";\n            }\n        } else if (in_array($c, $punctuation)) {\n \
    \           if (strlen($cur_word) > 0) {\n                array_push($result,\
    \ $cur_word);\n                $cur_word = \"\";\n            }\n            array_push($result,\
    \ $c);\n        } else {\n            $cur_word .= $c;\n        }\n    }\n   \
    \ if (strlen($cur_word) > 0) {\n        array_push($result, $cur_word);\n    }\n\
    \    return count($result) > 0 ? $result : ord(\"a\") + count($txt) % 2;\n}\n\
    function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuac_f3j1.php:44\n\
    Stack trace:\n#0 /tmp/tmpuac_f3j1.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpuac_f3j1.php\
    \ on line 44\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    // Write your code here!\n\
    }\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\"\
    , \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1_neyyuk.php:21\n\
    Stack trace:\n#0 /tmp/tmp1_neyyuk.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp1_neyyuk.php\
    \ on line 21\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = explode(\" \", $txt);\n\
    \    if (count($arr) == 1) {\n        $arr = explode(\",\", $txt);\n        if\
    \ (count($arr) == 1) {\n            return count(get_odd_char($txt));\n      \
    \  }\n    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function get_odd_char()\
    \ in /tmp/tmpy2ublcwa.php:17\nStack trace:\n#0 /tmp/tmpy2ublcwa.php(24): split_words('abcdef')\n\
    #1 /tmp/tmpy2ublcwa.php(32): candidate('abcdef')\n#2 /tmp/tmpy2ublcwa.php(38):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpy2ublcwa.php on line 17\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = str_replace(',', ' ',\
    \ $txt);\n    $txt = str_replace('.', ' ', $txt);\n    $txt = str_replace('  ',\
    \ ' ', $txt);\n    $txt = str_replace('  ', ' ', $txt);\n    $txt = str_replace('\
    \  ', ' ', $txt);\n    $txt = str_replace('  ', ' ', $txt);\n    $txt = str_replace('\
    \  ', ' ', $txt);\n    $txt = str_replace('  ', ' ', $txt);\n    $txt = str_replace('\
    \  ', ' ', $txt);\n    $txt = str_replace('  ', ' ', $txt);\n    $txt = str_replace('\
    \  ', ' ', $txt);\n    $txt = str_replace('  ', ' ', $txt);\n    $txt = str_replace('\
    \  ', ' ', $txt);\n    $txt = str_replace('  ', ' ', $txt);\n    $txt = str_replace('\
    \  ', ' ', $txt);\n    $txt = str_replace('  ', ' ', $txt);\n    $txt = str_replace('\
    \  ', ' ', $txt);\n    $txt = str_replace('  ', ' ', $txt);\n    $txt = str_replace('\
    \  ', ' ', $txt);\n    $txt = str_replace('  ', ' ', $txt);\n    $txt = str_replace('\
    \  ', ' ', $txt);\n    $txt = str_replace('  ', ' ', $txt);\n    $txt = str_replace('\
    \  ', ' ', $txt);\n    $txt = str_replace('  ', ' ', $txt);\n    $txt = str_replace('\
    \  ', ' ', $txt);\n    $txt = str_replace('  ', ' ', $txt);\n    $txt = str_replace('\
    \  ', ' ', $txt);\n    $txt = str_replace('  ', ' ', $txt);\n    $txt = str_replace('\
    \  ', ' ', $txt);\n    $txt = str_replace('  ', ' ', $txt);\n    $txt = str_replace('\
    \  ', ' ', $txt);\n    $txt = str_replace('  ', ' ', $txt);\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 12 in /tmp/tmpbfemhez6.php on line 60

    '
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n  $parts = preg_split('/[\\s,]+/',\
    \ $txt);\n  return count($parts) === 1 ? leet(strlen($parts[0])) : $parts;\n}\n\
    \nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbj3dm_qy.php:24\n\
    Stack trace:\n#0 /tmp/tmpbj3dm_qy.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpbj3dm_qy.php\
    \ on line 24\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $array = explode(\" \", $txt);\n\
    \    if (count($array) > 1) {\n        return $array;\n    } else {\n        $array\
    \ = explode(\",\", $txt);\n        if (count($array) > 1) {\n            return\
    \ $array;\n        } else {\n            $odds = 0;\n            $chars = str_split($txt);\n\
    \            foreach ($chars as $letter) {\n                $value = ord($letter);\n\
    \                if ($value % 2 != 0) {\n                    $odds++;\n      \
    \          }\n            }\n            return $odds;\n        }\n    }\n}\n\n\
    function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphs45ca2r.php:44\n\
    Stack trace:\n#0 /tmp/tmphs45ca2r.php(49): test()\n#1 {main}\n  thrown in /tmp/tmphs45ca2r.php\
    \ on line 44\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if(strpos($txt, ' ') === false)\
    \ {\n        if(strpos($txt, ',') === false) {\n            return count_odd_letters($txt);\n\
    \        } else {\n            return explode(',', $txt);\n        }\n    } else\
    \ {\n        return explode(' ', $txt);\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_odd_letters()\
    \ in /tmp/tmp1y3mlf4p.php:15\nStack trace:\n#0 /tmp/tmp1y3mlf4p.php(24): split_words('abcdef')\n\
    #1 /tmp/tmp1y3mlf4p.php(32): candidate('abcdef')\n#2 /tmp/tmp1y3mlf4p.php(38):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmp1y3mlf4p.php on line 15\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false)\
    \ {\n        return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $total = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i += 2) {\n            $total += ord($txt[$i])\
    \ - 97;\n        }\n        return $total;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9cb_7s3q.php:35\n\
    Stack trace:\n#0 /tmp/tmp9cb_7s3q.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp9cb_7s3q.php\
    \ on line 35\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if (empty($txt)) return array();\n\
    \    $a = explode(' ', $txt);\n    if (count($a) == 1) {\n        $a = explode(',',\
    \ $txt);\n        if (count($a) == 1) {\n            $a = array();\n         \
    \   for ($i = 0; $i < strlen($txt); $i++) {\n                if ($i % 2 == 0)\
    \ {\n                    $a[] = substr($txt, $i, 1);\n                }\n    \
    \        }\n        }\n    }\n    return $a;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpda7y26jr.php:38\n\
    Stack trace:\n#0 /tmp/tmpda7y26jr.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpda7y26jr.php\
    \ on line 38\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if(strpos($txt,\" \") !== FALSE)\
    \ {\n        return explode(\" \",$txt);\n    }\n    if(strpos($txt,\",\") !==\
    \ FALSE) {\n        return explode(\",\",$txt);\n    }\n    $count = 0;\n    for($i\
    \ = 0; $i < strlen($txt); $i++) {\n        if($i % 2 == 0 && ord($txt[$i]) % 2\
    \ == 1) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n\
    print_r(split_words(\"Hello world!\"));\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => Hello\n    [1] => world!\n)\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpne4hoi7k.php:40\nStack trace:\n#0 /tmp/tmpne4hoi7k.php(44):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpne4hoi7k.php on line 40\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $re = \"/\\s+/\";\n    if (preg_match($re,\
    \ $txt)) {\n        $arr = preg_split($re, $txt);\n        return $arr;\n    }\
    \ else {\n        $re = \"/,+/\";\n        if (preg_match($re, $txt)) {\n    \
    \        $arr = preg_split($re, $txt);\n            return $arr;\n        } else\
    \ {\n            return 0;\n        }\n    }\n}\n\n$a = split_words(\"Hello world!\"\
    );\nprint_r($a);\necho '<br>';\n$b = split_words(\"Hello,world!\");\nprint_r($b);\n\
    echo '<br>';\n$c = split_words(\"abcdef\");\nprint_r($c);\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => Hello\n    [1] => world!\n)\n<br>Array\n(\n    [0]\
    \ => Hello\n    [1] => world!\n)\n<br>0\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpnj0usr7b.php:45\nStack trace:\n#0 /tmp/tmpnj0usr7b.php(51):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpnj0usr7b.php on line 45\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') === false)\
    \ {\n        if (strpos($txt, ',') === false) {\n            return strlen($txt)\
    \ % 2;\n        }\n        return explode(',', $txt);\n    }\n    return explode('\
    \ ', $txt);\n}\necho '<pre>';\nprint_r(split_words(\"Hello world!\"));\nprint_r(split_words(\"\
    Hello,world!\"));\nprint_r(split_words(\"abcdef\"));\necho '</pre>';\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => Hello\n    [1] => world!\n)\nArray\n(\n    [0]\
    \ => Hello\n    [1] => world!\n)\n0</pre>\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpx2no0i9x.php:36\nStack trace:\n#0 /tmp/tmpx2no0i9x.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpx2no0i9x.php on line 36\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $check = explode(' ', $txt);\n\
    \    if(count($check) == 1) {\n        $check = explode(',', $txt);\n        if(count($check)\
    \ == 1) {\n            $check = 0;\n            $txt = strtolower($txt);\n   \
    \         for($i = 0; $i < strlen($txt); $i++) {\n                if($i % 2 ==\
    \ 1) {\n                    $check++;\n                }\n            }\n    \
    \        return $check;\n        }\n        return $check;\n    }\n    return\
    \ $check;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9mtkrcy9.php:42\n\
    Stack trace:\n#0 /tmp/tmp9mtkrcy9.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp9mtkrcy9.php\
    \ on line 42\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n  $txt = trim($txt);\n  $txt =\
    \ str_replace(\",\", \" \", $txt);\n  $txt = str_replace(\".\", \" \", $txt);\n\
    \  $txt = str_replace(\"/\", \" \", $txt);\n  $txt = str_replace(\"?\", \" \"\
    , $txt);\n  $txt = str_replace(\"!\", \" \", $txt);\n  $arr = explode(\" \", $txt);\n\
    \  if(count($arr) == 1) {\n    $count = 0;\n    $chars = str_split($txt);\n  \
    \  foreach($chars as $char) {\n      if(ord($char) % 2 != 0) {\n        $count++;\n\
    \      }\n    }\n    return $count;\n  }\n  return $arr;\n}\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn12sy8iy.php:37\n\
    Stack trace:\n#0 /tmp/tmpn12sy8iy.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpn12sy8iy.php\
    \ on line 37\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $splitStr = preg_split('/\\\
    s+/', $txt);\n    $splitStr = str_replace(' ', '', $splitStr);\n    $splitStr\
    \ = str_replace(',', '', $splitStr);\n    $splitStr = str_replace('!', '', $splitStr);\n\
    \    $splitStr = str_replace('?', '', $splitStr);\n    $splitStr = str_replace('.',\
    \ '', $splitStr);\n    $splitStr = str_replace('\\'', '', $splitStr);\n    $length\
    \ = strlen($splitStr);\n    $result = 0;\n    for ($i = 0; $i < $length; $i++)\
    \ {\n        if (ord($splitStr[$i]) % 2 !== 0) {\n            $result++;\n   \
    \     }\n    }\n    return $result;\n}\n\n$test1 = \"Hello world!\";\n$test2 =\
    \ \"Hello,world!\";\n$test3 = \"abcdef\";\n$test4 = \"zyxvwutsrqponmlkjihgfedcba\"\
    ;\n$test5 = \"Now try it with a few odd letters.\";\n\necho split_words($test1);\n\
    echo split_words($test2);\necho split_words($test3);\necho split_words($test4);\n\
    echo split_words($test5);\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: strlen(): Argument #1 ($str) must be\
    \ of type string, array given in /tmp/tmp8eizrni2.php:20\nStack trace:\n#0 /tmp/tmp8eizrni2.php(36):\
    \ split_words('Hello world!')\n#1 {main}\n  thrown in /tmp/tmp8eizrni2.php on\
    \ line 20\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $text = str_split($txt);\n\
    \    $keys = \"abcdefghijklmnopqrstuvwxyz\";\n    $result = array();\n    $count\
    \ = 0;\n    $letter = 0;\n    $string = \"\";\n    for ($i = 0; $i < count($text);\
    \ $i++) {\n        if ($text[$i] == \" \" || $text[$i] == \",\") {\n         \
    \   if ($count % 2 != 0) {\n                $result[] = $string;\n           \
    \ }\n            $count = 0;\n            $string = \"\";\n        } else if ($text[$i]\
    \ == strtolower($text[$i])) {\n            $string .= $text[$i];\n           \
    \ $letter = ord($text[$i]);\n            $count += strpos($keys, $text[$i]);\n\
    \        }\n    }\n    if ($count % 2 != 0) {\n        $result[] = $string;\n\
    \    }\n    if ($count % 2 == 0 && $letter == 0) {\n        return $count;\n \
    \   }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwgflm7ee.php:46\n\
    Stack trace:\n#0 /tmp/tmpwgflm7ee.php(56): test()\n#1 {main}\n  thrown in /tmp/tmpwgflm7ee.php\
    \ on line 46\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n  if (strpos($txt, ' ') != false)\
    \ {\n    return explode(' ', $txt);\n  } elseif (strpos($txt, ',') != false) {\n\
    \    return explode(',', $txt);\n  } else {\n    $count = 0;\n    for ($i = 0;\
    \ $i < strlen($txt); $i += 2) {\n      if ($txt[$i] != $txt[$i+1]) {\n       \
    \ $count++;\n      }\n    }\n    return $count;\n  }\n}\necho split_words(\"Hello\
    \ world!\")[0] . PHP_EOL;\necho split_words(\"Hello world!\")[1] . PHP_EOL;\n\
    echo split_words(\"Hello,world!\")[0] . PHP_EOL;\necho split_words(\"Hello,world!\"\
    )[1] . PHP_EOL;\necho split_words(\"abcdef\") . PHP_EOL;\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Hello\nworld!\nHello\nworld!\n3\n\nWarning: Uninitialized string offset\
    \ 5 in /tmp/tmpsnwrp7x_.php on line 20\n\nWarning: Uninitialized string offset\
    \ 5 in /tmp/tmpsnwrp7x_.php on line 20\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpsnwrp7x_.php:44\nStack trace:\n#0 /tmp/tmpsnwrp7x_.php(48):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpsnwrp7x_.php on line 44\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    // TODO\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8n5e8971.php:21\n\
    Stack trace:\n#0 /tmp/tmp8n5e8971.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp8n5e8971.php\
    \ on line 21\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $a = str_split(preg_replace('/\\\
    s+/', '', $txt));\n    $res = [];\n    $cnt = 0;\n    foreach ($a as $i => $c)\
    \ {\n        if (ord($c) % 2 == 0) $cnt++;\n    }\n    if ($cnt == count($a))\
    \ return $cnt;\n    $txt = preg_replace('/[^\\w\\s]/', '', $txt);\n    $a = explode('\
    \ ', $txt);\n    if (count($a) > 1) return $a;\n    $a = explode(',', $txt);\n\
    \    if (count($a) > 1) return $a;\n    return $cnt;\n}\n\n$tests = [];\n$tests[]\
    \ = [\n    'input' => \"Hello world!\",\n    'expected' => [\"Hello\", \"world!\"\
    ]\n];\n$tests[] = [\n    'input' => \"Hello,world!\",\n    'expected' => [\"Hello\"\
    , \"world!\"]\n];\n$tests[] = [\n    'input' => \"abcdef\",\n    'expected' =>\
    \ 3\n];\n$tests[] = [\n    'input' => \"abcde,f\",\n    'expected' => [\"abcde\"\
    , \"f\"]\n];\n$tests[] = [\n    'input' => \"1,2,3,4,5,6,7,8,9,10\",\n    'expected'\
    \ => [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\"]\n\
    ];\n$tests[] = [\n    'input' => \"1 2 3 4 5 6 7 8 9 10\",\n    'expected' =>\
    \ [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\"]\n];\n\
    $tests[] = [\n    'input' => \"1 2 3,4 5 6,7 8 9,10\",\n    'expected' => [\"\
    1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\"]\n];\n$tests[]\
    \ = [\n    'input'\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting "]" in /tmp/tmp4876krwy.php
    on line 59

    '
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $re = [];\n    if (!preg_match('/\\\
    s+/', $txt)) {\n        if (!preg_match('/,/', $txt)) {\n            $count =\
    \ 0;\n            for ($i = 0; $i < strlen($txt); $i++) {\n                if\
    \ (ord($txt[$i]) % 2 != 0) {\n                    $count++;\n                }\n\
    \            }\n            return $count;\n        } else {\n            $re\
    \ = explode(',', $txt);\n        }\n    } else {\n        $re = explode(' ', $txt);\n\
    \    }\n    return $re;\n}\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx2zdrd1a.php:41\n\
    Stack trace:\n#0 /tmp/tmpx2zdrd1a.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpx2zdrd1a.php\
    \ on line 41\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false)\
    \ {\n        return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $low_letters =\
    \ range('a', 'z');\n        $letter_nums = array_map('ord', $low_letters);\n \
    \       $odd_nums = array_filter($letter_nums, function ($num) {\n           \
    \ return $num % 2 === 1;\n        });\n        $odd_letters = array_map('chr',\
    \ $odd_nums);\n        $char_nums = array_map('ord', str_split($txt));\n     \
    \   $odd_num_count = 0;\n        foreach ($char_nums as $char_num) {\n       \
    \     if (in_array($char_num, $odd_nums)) {\n                $odd_num_count++;\n\
    \            }\n        }\n        return $odd_num_count;\n    }\n}\n\nvar_dump(split_words(\"\
    Hello world!\"));\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "array(2) {\n  [0]=>\n  string(5) \"Hello\"\n  [1]=>\n  string(6) \"world!\"\
    \n}\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa836jrsl.php:46\n\
    Stack trace:\n#0 /tmp/tmpa836jrsl.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpa836jrsl.php\
    \ on line 46\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $whitespace = array(\" \");\n\
    \    $comma = array(\",\");\n    $num = 0;\n    $txt = str_replace($whitespace,\
    \ \",\", $txt);\n    $txt = str_replace($comma, \"\", $txt);\n    $txt = strtolower($txt);\n\
    \    $txtArray = str_split($txt);\n    $alphabet = range('a', 'z');\n    $i =\
    \ 0;\n    while($i < count($txtArray)) {\n        if(ord($txtArray[$i]) % 2 ==\
    \ 1) {\n            $num++;\n        }\n        $i++;\n    }\n    if(strpos($txt,\
    \ \",\") === false) {\n        return $num;\n    }\n    return explode(\",\",\
    \ $txt);\n}\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqje6ro67.php:38\n\
    Stack trace:\n#0 /tmp/tmpqje6ro67.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpqje6ro67.php\
    \ on line 38\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false)\
    \ {\n        return explode(' ', $txt);\n    }\n    if (strpos($txt, ',') !==\
    \ false) {\n        return explode(',', $txt);\n    }\n    return count(array_filter(str_split($txt),\
    \ function($item) {\n        return ord($item) % 2 == 1;\n    }));\n}\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps3lheuwk.php:33\n\
    Stack trace:\n#0 /tmp/tmps3lheuwk.php(38): test()\n#1 {main}\n  thrown in /tmp/tmps3lheuwk.php\
    \ on line 33\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n  $return = str_split($txt);\n\
    \  if(strpos($txt, ' ') !== false) {\n    $return = explode(' ', $txt);\n  }\n\
    \  if(strpos($txt, ',') !== false) {\n    $return = explode(',', $txt);\n  }\n\
    \  foreach($return as $k => $v) {\n    if(!ctype_alpha($v)) {\n      unset($return[$k]);\n\
    \    }\n  }\n  if(count($return) === 0) {\n    $return = 0;\n    foreach(str_split($txt)\
    \ as $char) {\n      if(ord($char) % 2 != 0) {\n        $return++;\n      }\n\
    \    }\n  }\n  return $return;\n}\n\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcb1inmkb.php:41\n\
    Stack trace:\n#0 /tmp/tmpcb1inmkb.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpcb1inmkb.php\
    \ on line 41\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $return_array = [];\n    if(strpos($txt,\
    \ ' ') !== false) {\n        $return_array = explode(' ', $txt);\n    } elseif(strpos($txt,\
    \ ',') !== false) {\n        $return_array = explode(',', $txt);\n    } else {\n\
    \        $return_array = 0;\n        $chars = str_split($txt);\n        foreach($chars\
    \ as $char) {\n            if(ord($char) % 2 != 0) {\n                $return_array++;\n\
    \            }\n        }\n    }\n    return $return_array;\n}\n\n$txt = 'Hello\
    \ world!';\necho \"String: $txt\\n\";\n$answer = split_words($txt);\necho \"My\
    \ answer:\\n\";\nprint_r($answer);\necho \"Correct answer:\\n\";\nprint_r(array(\"\
    Hello\", \"world!\"));\n\n$txt = 'Hello,world!';\necho \"String: $txt\\n\";\n\
    $answer = split_words($txt);\necho \"My answer:\\n\";\nprint_r($answer);\necho\
    \ \"Correct answer:\\n\";\nprint_r(array(\"Hello\", \"world!\"));\n\n$txt = 'abcdef';\n\
    echo \"String: $txt\\n\";\n$answer = split_words($txt);\necho \"My answer:\\n\"\
    ;\nprint_r($answer);\necho \"Correct answer:\\n\";\nprint_r(3);\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "String: Hello world!\nMy answer:\nArray\n(\n    [0] => Hello\n    [1] =>\
    \ world!\n)\nCorrect answer:\nArray\n(\n    [0] => Hello\n    [1] => world!\n\
    )\nString: Hello,world!\nMy answer:\nArray\n(\n    [0] => Hello\n    [1] => world!\n\
    )\nCorrect answer:\nArray\n(\n    [0] => Hello\n    [1] => world!\n)\nString:\
    \ abcdef\nMy answer:\n3Correct answer:\n3\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpaphicgsr.php:63\nStack trace:\n#0 /tmp/tmpaphicgsr.php(68):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpaphicgsr.php on line 63\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n  $arr = [];\n  $arr2 = [];\n \
    \ if(strpos($txt, ' ') !== false) {\n    $arr = explode(' ', $txt);\n    return\
    \ $arr;\n  }\n  elseif(strpos($txt, ',') !== false) {\n    $arr = explode(',',\
    \ $txt);\n    return $arr;\n  }\n  else {\n    $arr = str_split($txt);\n    foreach($arr\
    \ as $val) {\n      $val = ord($val);\n      if($val % 2 == 1) {\n        $arr2[]\
    \ = $val;\n      }\n    }\n    return count($arr2);\n  }\n}\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplcfejoz4.php:44\n\
    Stack trace:\n#0 /tmp/tmplcfejoz4.php(49): test()\n#1 {main}\n  thrown in /tmp/tmplcfejoz4.php\
    \ on line 44\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $i = 0;\n    $txt = trim($txt);\n\
    \    $length = strlen($txt);\n    $arr = [];\n    while($i < $length) {\n    \
    \    $temp = \"\";\n        if(ctype_alpha($txt[$i])) {\n            while(ctype_alpha($txt[$i]))\
    \ {\n                $temp .= $txt[$i];\n                $i++;\n            }\n\
    \            $arr[] = $temp;\n        } else {\n            $i++;\n        }\n\
    \    }\n    if(count($arr) === 0) {\n        $count = 0;\n        for($i = 0;\
    \ $i < strlen($txt); $i++) {\n            if(ord($txt[$i]) % 2 == 1) {\n     \
    \           $count++;\n            }\n        }\n        return $count;\n    }\n\
    \    return $arr;\n}\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa0apb_jt.php:45\n\
    Stack trace:\n#0 /tmp/tmpa0apb_jt.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpa0apb_jt.php\
    \ on line 45\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $r = [];\n    // array_reduce($input_array,\
    \ callable $callback [, mixed $initial = NULL ]) : mixed\n    // array_reduce()\
    \ returns a single value after iterating through the entire array. If the optional\
    \ initial is available,\n    // it will be used at the beginning of the process,\
    \ or the next call. If initial is not given, the first entry of input\n    //\
    \ will be used and skipped.\n    // The callable $callback will be called for\
    \ every item of the array, and will receive the carry value as first argument,\n\
    \    // and the array item value as second argument.\n    //\n    // EXAMPLE:\n\
    \    // $var = ['a', 'b', 'c'];\n    // $c = array_reduce($var, function($carry,\
    \ $item) { return $carry . $item; } );\n    // var_dump($c);\n    // // $c contains\
    \ \"abc\"\n    //\n    // $c = array_reduce($var, function($carry, $item) { return\
    \ $carry . $item; }, \"z\");\n    // var_dump($c);\n    // // $c contains \"zabc\"\
    \n    //\n    // $c = array_reduce([0, 1, 2, 3, 4], function($carry, $item) {\
    \ return $carry + $item; });\n    // var_dump($c);\n    // // $c contains 10\n\
    \    //\n    // $c = array_reduce([0, 1, 2, 3, 4], function($carry, $item) { return\
    \ $carry + $item; }, \"No data to reduce\");\n    // var_dump($c);\n    // //\
    \ $c contains \"No data to reduce\"\n    //\n    // var_dump(array_reduce([],\
    \ function() {}, \"No data to reduce\"));\n    // // var_dump produces:\n    //\
    \ // string(15) \"No data to reduce\"\n    //\n    // var_dump(array_reduce([],\
    \ function() {}));\n    // // var_dump produces:\n    // // NULL\n    //\n   \
    \ // var_dump(array_reduce([[1, 2], [3, 4]], function($carry, $item) {\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 12 in /tmp/tmpr1xyi63c.php on line 64

    '
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    // Write your code here\n \
    \   // To print results to the standard output you can use print\n    // Example:\
    \ print \"Hello world!\";\n}\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpngwb0vnq.php:22\n\
    Stack trace:\n#0 /tmp/tmpngwb0vnq.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpngwb0vnq.php\
    \ on line 22\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n  // split on whitespace\n  $words\
    \ = preg_split('/\\s+/', $txt);\n  if (count($words) > 1) {\n    return $words;\n\
    \  }\n  // split on commas\n  $words = preg_split('/,/', $txt);\n  if (count($words)\
    \ > 1) {\n    return $words;\n  }\n  // count odd letters\n  $letters = 0;\n \
    \ for ($i = 0; $i < strlen($txt); $i++) {\n    $code = ord($txt[$i]);\n    if\
    \ ($code >= ord('a') && $code <= ord('z')) {\n      if ($i % 2 == 0) {\n     \
    \   $letters++;\n      }\n    }\n  }\n  return $letters;\n}\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp05lek06f.php:45\n\
    Stack trace:\n#0 /tmp/tmp05lek06f.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp05lek06f.php\
    \ on line 45\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n\t$spl = array();\n\t$spl = explode(\"\
    \ \", $txt);\n\t\n\tif(count($spl) > 1) {\n\t\treturn $spl;\n\t}\n\n\t$spl = explode(\"\
    ,\", $txt);\n\tif(count($spl) > 1) {\n\t\treturn $spl;\n\t}\n\n\t$sum = 0;\n\t\
    for($i = 0; $i < strlen($txt); $i++) {\n\t\tif(ord($txt[$i]) % 2 != 0) {\n\t\t\
    \t$sum++;\n\t\t}\n\t}\n\treturn $sum;\n}\nfunction candidate(...$args) {\n   \
    \ return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptil493qk.php:43\n\
    Stack trace:\n#0 /tmp/tmptil493qk.php(48): test()\n#1 {main}\n  thrown in /tmp/tmptil493qk.php\
    \ on line 43\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    $arr\
    \ = str_split($txt);\n    $result = array();\n    $n = 1;\n    for ($i = 0; $i\
    \ < count($arr); $i++) {\n        if (preg_match('/[a-z]/', $arr[$i])) {\n   \
    \         if (ord($arr[$i]) % 2 == 1) {\n                $n++;\n            }\n\
    \        } else {\n            if (preg_match('/[A-Z]/', $arr[$i])) {\n      \
    \          if (ord($arr[$i]) % 2 == 0) {\n                    $n++;\n        \
    \        }\n            } else {\n                if (preg_match('/[,]/', $arr[$i]))\
    \ {\n                    $result[] = $n;\n                    $n = 1;\n      \
    \          } else {\n                    if (preg_match('/[ ]/', $arr[$i])) {\n\
    \                        $result[] = $n;\n                        $n = 1;\n  \
    \                  }\n                }\n            }\n        }\n    }\n   \
    \ $result[] = $n;\n    $count = 0;\n    for ($i = 0; $i < count($result); $i++)\
    \ {\n        if ($result[$i] == 1) {\n            $count++;\n        }\n    }\n\
    \    if ($count == count($result)) {\n        return count($result);\n    } else\
    \ {\n        return $result;\n    }\n}\n\nprint_r(split_words(\"Hello world!\"\
    ));\nprint_r(split_words(\"Hello,world!\"));\nprint_r(split_words(\"abcdef\"));\n\
    function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 4\n    [1] => 3\n)\nArray\n(\n    [0] => 4\n    [1]\
    \ => 3\n)\nArray\n(\n    [0] => 4\n)\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp9xys332g.php:62\nStack trace:\n#0 /tmp/tmp9xys332g.php(72):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp9xys332g.php on line 62\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt_array = array();\n   \
    \ $txt_array = preg_split('/[\\s,]+/', $txt);\n    if(preg_match('/[\\s,]+/',\
    \ $txt)) {\n        return $txt_array;\n    }\n    else {\n        $count = 0;\n\
    \        for($i = 0; $i < strlen($txt); $i++) {\n            if($i % 2 != 0) {\n\
    \                $count++;\n            }\n        }\n        return $count;\n\
    \    }\n}\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfr76bs91.php:35\n\
    Stack trace:\n#0 /tmp/tmpfr76bs91.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpfr76bs91.php\
    \ on line 35\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n\t$txt = preg_replace('/[^a-zA-Z]/',\
    \ '', $txt);\n\t$result = 0;\n\tif ($txt == '') {\n\t\treturn $result;\n\t}\n\t\
    $chars = str_split($txt);\n\tforeach ($chars as $idx => $char) {\n\t\tif (ord($char)\
    \ % 2 == 0) {\n\t\t\t$result++;\n\t\t}\n\t}\n\treturn $result;\n}\n$txt = \"Hello\
    \ world!\";\n$ret = split_words($txt);\necho \"$ret\\n\";\n$txt = \"Hello,world!\"\
    ;\n$ret = split_words($txt);\necho \"$ret\\n\";\n$txt = \"abcdef\";\n$ret = split_words($txt);\n\
    echo \"$ret\\n\";\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6\n6\n3\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0ugo3tk9.php:41\n\
    Stack trace:\n#0 /tmp/tmp0ugo3tk9.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp0ugo3tk9.php\
    \ on line 41\n"
  timestamp: 1660028761
- exit_code: 0
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $words = explode(\" \", $txt);\n\
    \    if (sizeof($words) == 1) {\n        $words = explode(\",\", $txt);\n    \
    \    if (sizeof($words) == 1) {\n            $result = 0;\n            for ($i\
    \ = 0; $i < strlen($txt); $i++) {\n                if ((ord($txt[$i]) - ord('a'))\
    \ % 2 == 1) {\n                    $result++;\n                }\n           \
    \ }\n            return $result;\n        }\n    }\n    return $words;\n}\n\n\
    $result = split_words(\"Hello world!\");\nprint_r($result);\n\n$result = split_words(\"\
    Hello,world!\");\nprint_r($result);\n\n$result = split_words(\"abcdef\");\necho\
    \ $result;\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => Hello\n    [1] => world!\n)\nArray\n(\n    [0] =>\
    \ Hello\n    [1] => world!\n)\n3"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n\t$split = preg_split('/\\s+/',\
    \ $txt);\n\tif (count($split) == 1) {\n\t\t$split = preg_split('/,/', $txt);\n\
    \t\tif (count($split) == 1) {\n\t\t\treturn ord(strtolower($txt)) % 2 == 0 ? \"\
    even\" : \"odd\";\n\t\t}\n\t}\n\treturn $split;\n}\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6vq1g8qb.php:31\n\
    Stack trace:\n#0 /tmp/tmp6vq1g8qb.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp6vq1g8qb.php\
    \ on line 31\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = str_replace(' ', ',',\
    \ $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpnb4tgzav.php
    on line 44

    '
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n  if(empty($txt)) return null;\n\
    \  if(strpos($txt, ' ') !== false) return explode(' ', $txt);\n  if(strpos($txt,\
    \ ',') !== false) return explode(',', $txt);\n  return strlen(preg_replace('/[aeiouy]/',\
    \ '', $txt));\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8a72aey7.php:28\n\
    Stack trace:\n#0 /tmp/tmp8a72aey7.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp8a72aey7.php\
    \ on line 28\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n  if (strpos($txt, ' ') !== false)\
    \ {\n    return explode(' ', $txt);\n  }\n  if (strpos($txt, ',') !== false) {\n\
    \    return explode(',', $txt);\n  }\n  $letters = str_split($txt);\n  $count\
    \ = 0;\n  foreach ($letters as $letter) {\n    if (ord($letter) % 2 == 1) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n$txt = \"Hello world!\";\n\
    $result = split_words($txt);\nvar_dump($result);\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "array(2) {\n  [0]=>\n  string(5) \"Hello\"\n  [1]=>\n  string(6) \"world!\"\
    \n}\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1se1mnex.php:42\n\
    Stack trace:\n#0 /tmp/tmp1se1mnex.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp1se1mnex.php\
    \ on line 42\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $result = array();\n    if\
    \ (!preg_match('/[a-zA-Z]/', $txt)) {\n        $result = explode(',', $txt);\n\
    \    } elseif (!preg_match('/[a-zA-Z],/', $txt)) {\n        $result = explode('\
    \ ', $txt);\n    } else {\n        $result = count_odd($txt);\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_odd() in\
    \ /tmp/tmpvxufn2wy.php:19\nStack trace:\n#0 /tmp/tmpvxufn2wy.php(25): split_words('Hello,world!')\n\
    #1 /tmp/tmpvxufn2wy.php(30): candidate('Hello,world!')\n#2 /tmp/tmpvxufn2wy.php(39):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpvxufn2wy.php on line 19\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false)\
    \ {\n        return explode(' ', $txt);\n    }\n    if (strpos($txt, ',') !==\
    \ false) {\n        return explode(',', $txt);\n    }\n    $counter = 0;\n   \
    \ for ($i = 0; $i < strlen($txt); $i += 2) {\n        if (strpos('abcdefghijklmnopqrstuvwxyz',\
    \ $txt[$i]) !== false) {\n            $counter++;\n        }\n    }\n    return\
    \ $counter;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1p_bllci.php:38\n\
    Stack trace:\n#0 /tmp/tmp1p_bllci.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp1p_bllci.php\
    \ on line 38\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    // make an array of characters\n\
    \    $array_letters = str_split($txt);\n    // loop through each letter\n    foreach\
    \ ($array_letters as $letter) {\n        // if it is a space, then split the string\
    \ into an array\n        if ($letter == \" \") {\n            $array_words = explode(\"\
    \ \", $txt);\n            return $array_words;\n        }\n        // if it is\
    \ a comma, then split the string into an array\n        elseif ($letter == \"\
    ,\") {\n            $array_words = explode(\",\", $txt);\n            return $array_words;\n\
    \        }\n        // otherwise, return the number of lower-case letters with\
    \ odd order in the alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n \
    \       else {\n            return strlen($txt);\n        }\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjlrko82w.php:39\n\
    Stack trace:\n#0 /tmp/tmpjlrko82w.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpjlrko82w.php\
    \ on line 39\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = str_split($txt);\n \
    \   $total = 0;\n    $res = array();\n    $isNumber = false;\n    $str = \"\"\
    ;\n    foreach ($arr as $i => $v) {\n        if ($isNumber) {\n            if\
    \ ($v == \",\") {\n                $isNumber = false;\n                $res[]\
    \ = $str;\n                $str = \"\";\n            } else {\n              \
    \  $str .= $v;\n            }\n        } else {\n            if ($v == \" \")\
    \ {\n                $res[] = $str;\n                $str = \"\";\n          \
    \  } else if ($v == \",\") {\n                $res[] = $str;\n               \
    \ $str = \"\";\n            } else {\n                $str .= $v;\n          \
    \  }\n        }\n    }\n    $res[] = $str;\n    $res = array_filter($res);\n \
    \   if (count($res) == 0) {\n        foreach ($arr as $i => $v) {\n          \
    \  if (ord($v) % 2 != 0) {\n                $total++;\n            }\n       \
    \ }\n        return $total;\n    } else {\n        return $res;\n    }\n}\n\n\
    function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbgua5sdz.php:60\n\
    Stack trace:\n#0 /tmp/tmpbgua5sdz.php(68): test()\n#1 {main}\n  thrown in /tmp/tmpbgua5sdz.php\
    \ on line 60\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if (preg_match('/[a-z]+/',\
    \ $txt)) {\n        $arr = str_split($txt);\n        $odd = 0;\n        foreach\
    \ ($arr as $key => $value) {\n            if ($key % 2 == 0) {\n             \
    \   $odd++;\n            }\n        }\n        return $odd;\n    }\n    if (preg_match('/\\\
    ,/', $txt)) {\n        $arr = explode(',', $txt);\n        return $arr;\n    }\n\
    \    if (preg_match('/ /', $txt)) {\n        $arr = explode(' ', $txt);\n    \
    \    return $arr;\n    }\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_tv73yet.php:38\n\
    Stack trace:\n#0 /tmp/tmp_tv73yet.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp_tv73yet.php\
    \ on line 38\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n\t$whitespace = strpos($txt, \"\
    \ \");\n\t$comma = strpos($txt, \",\");\n\tif ($whitespace === false) {\n\t\t\
    if ($comma === false) {\n\t\t\t$count = 0;\n\t\t\tfor ($i = 0; $i < strlen($txt);\
    \ $i += 2) {\n\t\t\t\tif (ord($txt[$i]) % 2 == 1) {\n\t\t\t\t\t$count++;\n\t\t\
    \t\t}\n\t\t\t}\n\t\t\treturn $count;\n\t\t} else {\n\t\t\treturn explode(\",\"\
    , $txt);\n\t\t}\n\t} else {\n\t\treturn explode(\" \", $txt);\n\t}\n}\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1cie_2fm.php:42\n\
    Stack trace:\n#0 /tmp/tmp1cie_2fm.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp1cie_2fm.php\
    \ on line 42\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    $txt\
    \ = preg_replace('/[^a-zA-Z0-9,]/', '', $txt);\n    $txt = strtolower($txt);\n\
    \    $arr = explode(' ', $txt);\n    if (sizeof($arr) == 1) {\n        $arr =\
    \ explode(',', $txt);\n        if (sizeof($arr) == 1) {\n            $n = 0;\n\
    \            for ($i = 0; $i < strlen($txt); $i++) {\n                if ($i %\
    \ 2 == 0) {\n                    $n++;\n                }\n            }\n   \
    \         return $n;\n        }\n    }\n    return $arr;\n}\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm52x6oov.php:36\n\
    Stack trace:\n#0 /tmp/tmpm52x6oov.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpm52x6oov.php\
    \ on line 36\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n\t// your code here\n\t$res = array();\n\
    \tif (preg_match('/\\s/', $txt)) {\n\t\t$res = preg_split('/\\s/', $txt);\n\t\
    } else if (preg_match('/,/', $txt)) {\n\t\t$res = preg_split('/,/', $txt);\n\t\
    } else {\n\t\t$res = -1;\n\t\tfor ($i = 0; $i < strlen($txt); $i++) {\n\t\t\t\
    if (ord($txt[$i])%2 != 0) {\n\t\t\t\t$res++;\n\t\t\t}\n\t\t}\n\t}\n\treturn $res;\n\
    }\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmvgmtmdx.php:38\n\
    Stack trace:\n#0 /tmp/tmpmvgmtmdx.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpmvgmtmdx.php\
    \ on line 38\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $list=[];\n    if (preg_match('/[\\\
    ,]/',$txt)){\n        $list=explode(',',$txt);\n    }\n    elseif (preg_match('/[\\\
    s]/',$txt)){\n        $list=explode(' ',$txt);\n    }\n    else{\n        $letters=str_split($txt);\n\
    \        foreach ($letters as $letter){\n            if (ord($letter)%2!=0){\n\
    \                $list[]=$letter;\n            }\n        }\n    }\n    return\
    \ $list;\n}\nvar_dump(split_words(\"abcdef\"));\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "array(3) {\n  [0]=>\n  string(1) \"a\"\n  [1]=>\n  string(1) \"c\"\n  [2]=>\n\
    \  string(1) \"e\"\n}\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0ag8_8sv.php:38\n\
    Stack trace:\n#0 /tmp/tmp0ag8_8sv.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp0ag8_8sv.php\
    \ on line 38\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false)\
    \ {\n        return explode(' ', $txt);\n    }\n    if (strpos($txt, ',') !==\
    \ false) {\n        return explode(',', $txt);\n    }\n    return strlen(preg_replace('/[^aeiou]/i',\
    \ '', $txt));\n}\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplqvyra9f.php:30\n\
    Stack trace:\n#0 /tmp/tmplqvyra9f.php(36): test()\n#1 {main}\n  thrown in /tmp/tmplqvyra9f.php\
    \ on line 30\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $result = str_split($txt);\n\
    \    $final_result = array();\n    $temp = '';\n    $letter_count = 0;\n    $flag\
    \ = 0;\n    for($i = 0; $i < count($result); $i++) {\n        if(ord($result[$i])\
    \ >= 97 && ord($result[$i]) <= 122) {\n            $temp .= $result[$i];\n   \
    \         $letter_count++;\n        } else {\n            if($flag == 0) {\n \
    \               $flag = 1;\n            }\n            if($temp != '') {\n   \
    \             array_push($final_result, $temp);\n                $temp = '';\n\
    \            }\n        }\n    }\n    if($temp != '') {\n        array_push($final_result,\
    \ $temp);\n    }\n    if($flag == 0) {\n        return $letter_count;\n    } else\
    \ {\n        return $final_result;\n    }\n}\nfunction candidate(...$args) {\n\
    \    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyp0_ksrh.php:46\n\
    Stack trace:\n#0 /tmp/tmpyp0_ksrh.php(56): test()\n#1 {main}\n  thrown in /tmp/tmpyp0_ksrh.php\
    \ on line 46\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n// Your code here\n}\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp74bchi88.php:20\n\
    Stack trace:\n#0 /tmp/tmp74bchi88.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp74bchi88.php\
    \ on line 20\n"
  timestamp: 1660028761
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n  $ord = array_fill(0, 26, 0);\n\
    \  for ($i = 0; $i < strlen($txt); $i++) {\n    $ord[ord($txt[$i]) - ord('a')]++;\n\
    \  }\n  $odd = 0;\n  for ($i = 0; $i < 26; $i++) {\n    if ($ord[$i] % 2 == 1)\
    \ {\n      $odd++;\n    }\n  }\n  if ($odd == 0) {\n    return array();\n  }\n\
    \  for ($i = 0; $i < strlen($txt); $i++) {\n    if ($txt[$i] == ' ') {\n     \
    \ return explode(' ', $txt);\n    }\n  }\n  for ($i = 0; $i < strlen($txt); $i++)\
    \ {\n    if ($txt[$i] == ',') {\n      return explode(',', $txt);\n    }\n  }\n\
    \  return $odd;\n}\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key -25 in /tmp/tmpwzs3hfzh.php on line 15\n\
    \nWarning: Undefined array key -65 in /tmp/tmpwzs3hfzh.php on line 15\n\nWarning:\
    \ Undefined array key -64 in /tmp/tmpwzs3hfzh.php on line 15\n\nWarning: Undefined\
    \ array key -25 in /tmp/tmpwzs3hfzh.php on line 15\n\nWarning: Undefined array\
    \ key -53 in /tmp/tmpwzs3hfzh.php on line 15\n\nWarning: Undefined array key -64\
    \ in /tmp/tmpwzs3hfzh.php on line 15\n\nWarning: Undefined array key -25 in /tmp/tmpwzs3hfzh.php\
    \ on line 15\n\nWarning: Undefined array key -65 in /tmp/tmpwzs3hfzh.php on line\
    \ 15\n\nWarning: Undefined array key -53 in /tmp/tmpwzs3hfzh.php on line 15\n\n\
    Warning: Undefined array key -64 in /tmp/tmpwzs3hfzh.php on line 15\n\nWarning:\
    \ Undefined array key -25 in /tmp/tmpwzs3hfzh.php on line 15\n\nWarning: Undefined\
    \ array key -53 in /tmp/tmpwzs3hfzh.php on line 15\n\nWarning: Undefined array\
    \ key -65 in /tmp/tmpwzs3hfzh.php on line 15\n\nWarning: Undefined array key -64\
    \ in /tmp/tmpwzs3hfzh.php on line 15\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpwzs3hfzh.php:47\nStack trace:\n#0 /tmp/tmpwzs3hfzh.php(53):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpwzs3hfzh.php on line 47\n"
  timestamp: 1660028761

language: php
name: HumanEval_125_split_words
results:
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if(strpos($txt, ' ') !== false)\
    \ {\n        return explode(' ', $txt);\n    } elseif(strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $odd = [];\n  \
    \      for($i = 0; $i < strlen($txt); $i++) {\n            if(ord($txt[$i]) %\
    \ 2 != 0) {\n                $odd[] = $txt[$i];\n            }\n        }\n  \
    \      return count($odd);\n    }\n}\n\n$test1 = split_words(\"Hello world!\"\
    );\n$test2 = split_words(\"Hello,world!\");\n$test3 = split_words(\"abcdef\");\n\
    echo \"Test 1: \" . json_encode($test1) . \"\\n\";\necho \"Test 2: \" . json_encode($test2)\
    \ . \"\\n\";\necho \"Test 3: \" . json_encode($test3) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Test 1: [\"Hello\",\"world!\"]\nTest 2: [\"Hello\",\"world!\"]\nTest 3:\
    \ 3\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb5ggvk_q.php:44\n\
    Stack trace:\n#0 /tmp/tmpb5ggvk_q.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpb5ggvk_q.php\
    \ on line 44\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    // Your code here\n}\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq9bbt_mr.php:20\n\
    Stack trace:\n#0 /tmp/tmpq9bbt_mr.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpq9bbt_mr.php\
    \ on line 20\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if(strpos($txt, ' ') !== false)\
    \ {\n        return explode(' ', $txt);\n    }\n    if(strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    }\n    $count = 0;\n    for($i =\
    \ 0; $i < strlen($txt); $i++) {\n        if($i % 2 === 0 && ord($txt[$i]) % 2\
    \ === 1) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n\
    function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0mgcdyov.php:39\n\
    Stack trace:\n#0 /tmp/tmp0mgcdyov.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp0mgcdyov.php\
    \ on line 39\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if(str_word_count($txt)==0){\n\
    \        if(substr_count($txt, ',')==0){\n            $result = 0;\n         \
    \   for($i=0; $i<strlen($txt); $i++){\n                if($i%2==0) $result++;\n\
    \            }\n            return $result;\n        }else{\n            return\
    \ explode(',', $txt);\n        }\n    }else{\n        return explode(' ', $txt);\n\
    \    }\n}\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpurd3tpc6.php:33\n\
    Stack trace:\n#0 /tmp/tmpurd3tpc6.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpurd3tpc6.php\
    \ on line 33\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n  if (preg_match('/[\\s]/', $txt))\
    \ {\n    return explode(' ', $txt);\n  } elseif (preg_match('/[,]/', $txt)) {\n\
    \    return explode(',', $txt);\n  } else {\n    return count(preg_grep('/[a-z]/',\
    \ str_split($txt)));\n  }\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzgu7x4nv.php:31\n\
    Stack trace:\n#0 /tmp/tmpzgu7x4nv.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpzgu7x4nv.php\
    \ on line 31\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n  // your code here\n}\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphxq1szo1.php:20\n\
    Stack trace:\n#0 /tmp/tmphxq1szo1.php(30): test()\n#1 {main}\n  thrown in /tmp/tmphxq1szo1.php\
    \ on line 20\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') != FALSE)\
    \ {\n        return explode(' ', $txt);\n    }\n    if (strpos($txt, ',') != FALSE)\
    \ {\n        return explode(',', $txt);\n    }\n    return split_count($txt);\n\
    }\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\"\
    , \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function split_count()\
    \ in /tmp/tmpq64brqj7.php:19\nStack trace:\n#0 /tmp/tmpq64brqj7.php(23): split_words('abcdef')\n\
    #1 /tmp/tmpq64brqj7.php(31): candidate('abcdef')\n#2 /tmp/tmpq64brqj7.php(37):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpq64brqj7.php on line 19\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = preg_split('/[\\s,]+/',\
    \ $txt);\n    if (count($arr) == 1) {\n        $arr = str_split($txt);\n     \
    \   $odds = 0;\n        foreach ($arr as $a) {\n            if (ord($a) % 2 ==\
    \ 1) {\n                $odds++;\n            }\n        }\n        return $odds;\n\
    \    }\n    return $arr;\n}\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvbdnkk5z.php:33\n\
    Stack trace:\n#0 /tmp/tmpvbdnkk5z.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpvbdnkk5z.php\
    \ on line 33\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if (preg_match('/[\\s,]/',\
    \ $txt)) {\n        return preg_split('/[\\s,]/', $txt);\n    }\n    $odds = [];\n\
    \    for ($i = 0; $i < strlen($txt); $i++) {\n        if (ord($txt[$i]) % 2 ==\
    \ 1) {\n            $odds[] = $txt[$i];\n        }\n    }\n    return count($odds);\n\
    }\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\"\
    , \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4jngoy1_.php:32\n\
    Stack trace:\n#0 /tmp/tmp4jngoy1_.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp4jngoy1_.php\
    \ on line 32\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    // Your code here\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpouh7pm_y.php:21\n\
    Stack trace:\n#0 /tmp/tmpouh7pm_y.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpouh7pm_y.php\
    \ on line 21\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') == false)\
    \ {\n        if (strpos($txt, ',') == false) {\n            $result = 0;\n   \
    \         for ($i = 0; $i < strlen($txt); $i++) {\n                if (ord($txt[$i])\
    \ % 2 == 1) {\n                    $result++;\n                }\n           \
    \ }\n            return $result;\n        } else {\n            return explode(',',\
    \ $txt);\n        }\n    } else {\n        return explode(' ', $txt);\n    }\n\
    }\necho '<pre>';\nprint_r(split_words('Hello world!'));\nprint_r(split_words('Hello,world!'));\n\
    print_r(split_words('abcdef'));\necho '</pre>';\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => Hello\n    [1] => world!\n)\nArray\n(\n    [0]\
    \ => Hello\n    [1] => world!\n)\n3</pre>\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpsojhjp9c.php:44\nStack trace:\n#0 /tmp/tmpsojhjp9c.php(49):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpsojhjp9c.php on line 44\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false)\
    \ {\n        return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 == 1) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\n\n$txt = 'Hello,world!';\nvar_dump(split_words($txt));\n\
    function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "array(2) {\n  [0]=>\n  string(5) \"Hello\"\n  [1]=>\n  string(6) \"world!\"\
    \n}\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpryog04tk.php:40\n\
    Stack trace:\n#0 /tmp/tmpryog04tk.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpryog04tk.php\
    \ on line 40\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n\t$str = $txt;\n\t$len = strlen($str);\n\
    \t$arr = [];\n\tif (strpos($str, ' ') !== false) {\n\t\t$arr = explode(' ', $str);\n\
    \t} else if (strpos($str, ',') !== false) {\n\t\t$arr = explode(',', $str);\n\t\
    } else {\n\t\t$cnt = 0;\n\t\tfor ($i = 0; $i < $len; $i++) {\n\t\t\tif (ord($str[$i])\
    \ % 2 == 1) {\n\t\t\t\t$cnt++;\n\t\t\t}\n\t\t}\n\t\t$arr = $cnt;\n\t}\n\treturn\
    \ $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4qzqx58y.php:42\n\
    Stack trace:\n#0 /tmp/tmp4qzqx58y.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp4qzqx58y.php\
    \ on line 42\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n  $count = strlen($txt);\n  $x\
    \ = \"\";\n  $arr = [];\n  for ($i = 0; $i < $count; $i++) {\n    if ($txt[$i]\
    \ == \" \") {\n      array_push($arr, $x);\n      $x = \"\";\n    } else if ($txt[$i]\
    \ == \",\") {\n      array_push($arr, $x);\n      $x = \"\";\n    } else {\n \
    \     $x .= $txt[$i];\n    }\n  }\n  array_push($arr, $x);\n  if (count($arr)\
    \ > 1) {\n    return $arr;\n  } else {\n    $letterCount = 0;\n    for ($i = 0;\
    \ $i < count($arr[0]); $i++) {\n      if (ord($arr[0][$i]) % 2 != 0) {\n     \
    \   $letterCount++;\n      }\n    }\n    return $letterCount;\n  }\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw7qsk_1q.php:48\n\
    Stack trace:\n#0 /tmp/tmpw7qsk_1q.php(56): test()\n#1 {main}\n  thrown in /tmp/tmpw7qsk_1q.php\
    \ on line 48\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $arr = [];\n    if (strpos($txt,\
    \ ' ') !== false) {\n        $arr = explode(' ', $txt);\n    } else if (strpos($txt,\
    \ ',') !== false) {\n        $arr = explode(',', $txt);\n    } else {\n      \
    \  $odd = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n            if\
    \ (ord($txt[$i]) % 2 != 0) {\n                $odd++;\n            }\n       \
    \ }\n        return $odd;\n    }\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsi845bdc.php:40\n\
    Stack trace:\n#0 /tmp/tmpsi845bdc.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpsi845bdc.php\
    \ on line 40\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n\tif (strpos($txt, ' ') !== false)\
    \ {\n\t\treturn explode(' ', $txt);\n\t}\n\tif (strpos($txt, ',') !== false) {\n\
    \t\treturn explode(',', $txt);\n\t}\n\t$odd = '';\n\t$alpha = 'abcdefghijklmnopqrstuvwxyz';\n\
    \tfor ($i = 0; $i < strlen($alpha); $i++) {\n\t\tif ($i % 2 === 0) {\n\t\t\t$odd\
    \ .= $alpha[$i];\n\t\t}\n\t}\n\treturn strlen(str_replace(str_split($odd), '',\
    \ $txt));\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_3_4v73g.php:40\n\
    Stack trace:\n#0 /tmp/tmp_3_4v73g.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp_3_4v73g.php\
    \ on line 40\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    // Write your code here\n \
    \   // To print results to the standard output you can use print\n    // Example:\
    \ print \"Hello world!\";\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzl65nto6.php:23\n\
    Stack trace:\n#0 /tmp/tmpzl65nto6.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpzl65nto6.php\
    \ on line 23\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n\t$i = 0;\n\tforeach (str_split($txt)\
    \ as $c) {\n\t\tif (ord($c) >= ord('a') && ord($c) <= ord('z')) {\n\t\t\tif ($i\
    \ % 2 == 0) {\n\t\t\t\t$i++;\n\t\t\t}\n\t\t}\n\t}\n\tif ($i > 0) {\n\t\treturn\
    \ $i;\n\t}\n\t$arr = explode(',', $txt);\n\tif (count($arr) > 1) {\n\t\treturn\
    \ $arr;\n\t}\n\treturn explode(' ', $txt);\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpffnif2x5.php:36\n\
    Stack trace:\n#0 /tmp/tmpffnif2x5.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpffnif2x5.php\
    \ on line 36\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n    $txt = str_replace('!', ' ',\
    \ $txt);\n    $txt = str_replace('?', ' ', $txt);\n    $txt = str_replace('.',\
    \ ' ', $txt);\n    $txt = str_replace(',', ' ', $txt);\n    $txt = str_replace('\"\
    ', ' ', $txt);\n    $txt = str_replace(\"'\", ' ', $txt);\n    $txt = str_replace(';',\
    \ ' ', $txt);\n    $txt = str_replace(':', ' ', $txt);\n    $txt = str_replace('(',\
    \ ' ', $txt);\n    $txt = str_replace(')', ' ', $txt);\n    $str = explode(' ',\
    \ $txt);\n    if (count($str) == 1) {\n        $arr = str_split($txt);\n     \
    \   $count = 0;\n        for ($i = 0; $i < count($arr); $i++) {\n            if\
    \ (ord($arr[$i]) % 2 !== 0) {\n                $count++;\n            }\n    \
    \    }\n        return $count;\n    } else {\n        return $str;\n    }\n}\n\
    \nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb8t3a51j.php:43\n\
    Stack trace:\n#0 /tmp/tmpb8t3a51j.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpb8t3a51j.php\
    \ on line 43\n"
  timestamp: 1659824266
- exit_code: 255
  program: "<?php\n// Given a string of words, return an array of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // >>> split_words(\"Hello world!\")\n// array(\"Hello\", \"world!\")\n// >>>\
    \ split_words(\"Hello,world!\")\n// array(\"Hello\", \"world!\")\n// >>> split_words(\"\
    abcdef\")\n// 3\nfunction split_words($txt) {\n  $result = array();\n  if (strpos($txt,\
    \ ' ') !== false) {\n    $result = explode(' ', $txt);\n  } elseif (strpos($txt,\
    \ ',') !== false) {\n    $result = explode(',', $txt);\n  } else {\n    $i = 0;\n\
    \    $odd = array();\n    while ($i < strlen($txt)) {\n      if (ord($txt[$i])\
    \ % 2 !== 0) {\n        $odd[] = $txt[$i];\n      }\n      $i++;\n    }\n    $result\
    \ = count($odd);\n  }\n  return $result;\n}\nfunction candidate(...$args) {\n\
    \    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt7nsypz8.php:41\n\
    Stack trace:\n#0 /tmp/tmpt7nsypz8.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpt7nsypz8.php\
    \ on line 41\n"
  timestamp: 1659824266

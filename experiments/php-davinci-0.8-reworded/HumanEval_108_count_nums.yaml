name: HumanEval_108_count_nums
language: php
prompt: "<?php\n// Write a function count_nums which takes an array of integers and\
  \ returns\n// the number of elements which has a sum of digits > 0.\n// If a number\
  \ is negative, then its first signed digit will be negative:\n// e.g. -123 has signed\
  \ digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>> count_nums(array(-1,\
  \ 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n// 3\nfunction count_nums($arr)\
  \ {\n"
tests: "function candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
  \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0, 1,\
  \ 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
  \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
  \ (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"Test\
  \ failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
  Test failed!\"); }\n}\n\ntest();"
completions: ["    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n\
    \        $sign = 1;\n        if ($num < 0) {\n            $sign = -1;\n      \
    \      $num = $num * -1;\n        }\n        while ($num > 0) {\n            $sum\
    \ += $num % 10;\n            $num = floor($num / 10);\n        }\n        if ($sum\
    \ * $sign > 0) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\necho count_nums(array(1, 1, 2)) . PHP_EOL;\necho count_nums(array(-1, 11, -11))\
    \ . PHP_EOL;\necho count_nums(array()) . PHP_EOL;", "  $count = 0;\n  for ($i\
    \ = 0; $i < count($arr); $i++) {\n    $sum = 0;\n    if ($arr[$i] < 0) {\n   \
    \   $arr[$i] = -1 * $arr[$i];\n    }\n    while ($arr[$i] > 0) {\n      $sum +=\
    \ $arr[$i] % 10;\n      $arr[$i] = (int)($arr[$i] / 10);\n    }\n    if ($sum\
    \ > 0) {\n      $count++;\n    }\n  }\n  return $count;\n}", "\t$res = 0;\n\t\
    $len = count($arr);\n\tfor ($i = 0; $i < $len; $i++) {\n\t\t$sd = 0;\n\t\t$num\
    \ = $arr[$i];\n\t\twhile ($num != 0) {\n\t\t\t$sd += $num % 10;\n\t\t\t$num =\
    \ (int)($num / 10);\n\t\t}\n\t\tif ($sd > 0) {\n\t\t\t$res++;\n\t\t}\n\t}\n\t\
    return $res;\n}", "    $count = 0;\n    foreach ($arr as $item) {\n        $digits\
    \ = abs($item);\n        $digits_sum = 0;\n        while ($digits) {\n       \
    \     $digits_sum += $digits % 10;\n            $digits = (int)($digits / 10);\n\
    \        }\n        if ($digits_sum > 0) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}", "  $count = 0;\n  foreach ($arr as $key => $value)\
    \ {\n    if ($value < 0) {\n      $count += 1;\n    } else {\n      $count +=\
    \ count_digits($value);\n    }\n  }\n  return $count;\n}\n", "  $count = 0;\n\
    \  foreach ($arr as $v) {\n    if ($v < 0) {\n      $v = -$v;\n    }\n    while\
    \ ($v) {\n      $count += $v % 10;\n      $v /= 10;\n    }\n  }\n  return $count;\n\
    }\n", "    $cnt = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  while ($num != 0) {\n            $digit = $num % 10;\n            $sum += $digit;\n\
    \            $num = $num / 10;\n        }\n        if ($sum > 0) {\n         \
    \   $cnt += 1;\n        }\n    }\n    return $cnt;\n}\n", "  // BEGIN\n  $count\
    \ = 0;\n  foreach ($arr as $value) {\n    $sum = 0;\n    foreach (str_split($value)\
    \ as $digit) {\n      $sum += abs($digit);\n    }\n    if ($sum > 0) {\n     \
    \ $count++;\n    }\n  }\n  return $count;\n  // END\n}\n", "  // TODO: implement\
    \ this function\n}\n", "    $result = 0;\n    for ($i = 0; $i < count($arr); $i++)\
    \ {\n        $sum = 0;\n        $num = $arr[$i];\n        if ($num < 0) {\n  \
    \          $num = $num * -1;\n        }\n        while ($num > 0) {\n        \
    \    $sum += $num % 10;\n            $num = floor($num / 10);\n        }\n   \
    \     if ($sum > 0) {\n            $result++;\n        }\n    }\n    return $result;\n\
    }\n", "  // YOUR CODE HERE\n}", "    $num = 0;\n    foreach ($arr as $i) {\n \
    \       $sum = 0;\n        if ($i < 0) {\n            $sum = $i - $i - $i;\n \
    \       } else {\n            $sum = $i;\n        }\n        while ($sum >= 10)\
    \ {\n            $sum = 0;\n            while ($sum >= 10) {\n               \
    \ $sum = $sum % 10 + ($sum - $sum % 10) / 10;\n            }\n        }\n    \
    \    if ($sum > 0) {\n            $num = $num + 1;\n        }\n    }\n    return\
    \ $num;\n}\nprint count_nums(array(1, 1, 2)) . \"\\n\";\nprint count_nums(array(1,\
    \ 1, -2)) . \"\\n\";\nprint count_nums(array(1, 1, -12)) . \"\\n\";\nprint count_nums(array(1,\
    \ 1, -21)) . \"\\n\";\nprint count_nums(array(1, 1, -31)) . \"\\n\";\nprint count_nums(array(1,\
    \ 1, -41)) . \"\\n\";\nprint count_nums(array(1, 1, -51)) . \"\\n\";\nprint count_nums(array(1,\
    \ 1, -61)) . \"\\n\";\nprint count_nums(array(1, 1, -71)) . \"\\n\";\nprint count_nums(array(1,\
    \ 1, -81)) . \"\\n\";\nprint count_nums(array(1, 1, -91)) . \"\\n\";\nprint count_nums(array(1,\
    \ 1, -101)) . \"\\n\";\nprint count_nums(array(1, 1, -111)) . \"\\n\";\nprint\
    \ count_nums(array(1, 1, -121)) . \"\\n\";\nprint count_nums(array(1, 1, -131))\
    \ . \"\\n\";\nprint count_nums(array(1, 1, -141)) . \"\\n\";\nprint count_nums(array(1,\
    \ 1, -151)) . \"\\n\";\nprint count_nums(array(1, 1, -161)) . \"\\n\";\nprint\
    \ count_", "    $result = 0;\n    foreach ($arr as $val) {\n        $sum = 0;\n\
    \        if ($val < 0) {\n            $sum += substr($val, 0, 1);\n          \
    \  $val = substr($val, 1);\n        }\n        for ($i = 0; $i < strlen($val);\
    \ $i++) {\n            $sum += $val[$i];\n        }\n        if ($sum > 0) {\n\
    \            $result++;\n        }\n    }\n    return $result;\n}", "  $count\
    \ = 0;\n  for ($i = 0; $i < count($arr); $i++) {\n    $sum = 0;\n    $num = abs($arr[$i]);\n\
    \    while ($num > 0) {\n      $digit = $num % 10;\n      $sum += $digit;\n  \
    \    $num = (int)($num / 10);\n    }\n    if ($sum > 0) {\n      $count++;\n \
    \   }\n  }\n  return $count;\n}", "    if (count($arr) === 0) {\n        return\
    \ 0;\n    }\n    $arr2 = array_map(function($a) {\n        return str_split($a);\n\
    \    }, $arr);\n    $arr3 = array_map(function($a) {\n        return array_sum($a);\n\
    \    }, $arr2);\n    return count(array_filter($arr3, function($a) {\n       \
    \ return $a > 0;\n    }));\n}", "    $count = 0;\n    foreach ($arr as $elem)\
    \ {\n        $sum = 0;\n        $temp = $elem;\n        if ($elem < 0) {\n   \
    \         $temp = $elem * -1;\n        }\n        for ($i = 0; $i < strlen($temp);\
    \ $i++) {\n            $sum += $temp[$i];\n        }\n        if ($sum > 0) {\n\
    \            $count++;\n        }\n    }\n    return $count;\n}", "    $count\
    \ = 0;\n    foreach ($arr as $value) {\n        if ($value < 0) {\n          \
    \  $value = -$value;\n        }\n        $sum = 0;\n        while ($value > 0)\
    \ {\n            $sum += $value % 10;\n            $value = floor($value / 10);\n\
    \        }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}\n\nprint_r(count_nums(array()));\necho \"\\n\";\nprint_r(count_nums(array(-1,\
    \ 11, -11)));\necho \"\\n\";\nprint_r(count_nums(array(1, 1, 2)));\necho \"\\\
    n\";", "\t$total = 0;\n\tforeach ($arr as $value) {\n\t\tif ($value >= 0) {\n\t\
    \t\t$sum = array_sum(str_split($value));\n\t\t} else {\n\t\t\t$spl = str_split($value);\n\
    \t\t\t$negs = abs($spl[0]);\n\t\t\t$spl[0] = 0;\n\t\t\t$sum = $negs + array_sum($spl);\n\
    \t\t}\n\t\tif ($sum > 0) {\n\t\t\t$total += 1;\n\t\t}\n\t}\n\treturn $total;\n\
    }\n", "    return count(array_filter($arr, function($a) {\n        return array_sum(str_split(abs($a)))\
    \ > 0;\n    }));\n}\n", "  $count = 0;\n  foreach ($arr as $el) {\n    $sum =\
    \ 0;\n    foreach (str_split(abs($el)) as $digit) {\n      $sum += $digit;\n \
    \   }\n    if ($sum > 0) {\n      $count++;\n    }\n  }\n  return $count;\n}",
  "    $result = 0;\n    foreach ($arr as $item) {\n        $result += count_signed_digits($item);\n\
    \    }\n    return $result;\n}", "\t$count = 0;\n\tforeach ($arr as $value) {\n\
    \t\t$sum = 0;\n\t\t$abs_val = abs($value);\n\t\twhile ($abs_val != 0) {\n\t\t\t\
    $sum += $abs_val % 10;\n\t\t\t$abs_val = (int)($abs_val / 10);\n\t\t}\n\t\tif\
    \ ($sum > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n", "\t$count\
    \ = 0;\n\tforeach ($arr as $x) {\n\t\t$digits = explode('', $x);\n\t\t$sum = 0;\n\
    \t\tforeach ($digits as $digit) {\n\t\t\t$sum += $digit;\n\t\t}\n\t\tif ($sum\
    \ > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}", "  $result = 0;\n\
    \  foreach ($arr as $value) {\n    $digits = [];\n    if ($value < 0) {\n    \
    \  $digits[] = abs($value % 10);\n      $value = floor(abs($value) / 10);\n  \
    \  }\n    while ($value > 0) {\n      $digits[] = $value % 10;\n      $value =\
    \ floor($value / 10);\n    }\n    $sum = array_sum($digits);\n    if ($sum > 0)\
    \ {\n      $result++;\n    }\n  }\n  return $result;\n}", "    if (empty($arr))\
    \ {\n        return 0;\n    }\n    $count = 0;\n    foreach ($arr as $key => $value)\
    \ {\n        $sum = 0;\n        if ($value < 0) {\n            $sum += substr($value,\
    \ 0, 1);\n            $value = substr($value, 1);\n        }\n        for ($i\
    \ = 0; $i < strlen($value); $i++) {\n            $sum += substr($value, $i, 1);\n\
    \        }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}", "    $count = 0;\n    foreach ($arr as $num) {\n    \
    \    if (array_sum(str_split(abs($num))) > 0) {\n            $count++;\n     \
    \   }\n    }\n    return $count;\n}", "\tif (!count($arr)) {\n\t\treturn 0;\n\t\
    }\n\t\n\t$count = 0;\n\tforeach ($arr as $num) {\n\t\t$sum = 0;\n\t\t\n\t\tif\
    \ ($num < 0) {\n\t\t\t$sum += abs($num);\n\t\t} else {\n\t\t\t$sum += $num;\n\t\
    \t}\n\t\t\n\t\twhile ($sum > 0) {\n\t\t\t$count++;\n\t\t\t$sum -= $sum % 10;\n\
    \t\t\t$sum /= 10;\n\t\t}\n\t}\n\t\n\treturn $count;\n}\n\necho count_nums(array())\
    \ . \"\\n\";\necho count_nums(array(-1, 11, -11)) . \"\\n\";\necho count_nums(array(1,\
    \ 1, 2)) . \"\\n\";", "  $count = 0;\n  foreach ($arr as $value) {\n    $sum =\
    \ 0;\n    while ($value != 0) {\n      $sum += abs($value % 10);\n      $value\
    \ = intval($value / 10);\n    }\n    if ($sum > 0) {\n      $count++;\n    }\n\
    \  }\n  return $count;\n}\n", "\treturn array_reduce($arr, function($carry, $item)\
    \ {\n\t\treturn $carry + ($item < 0 ? -1 : 1) * array_sum(str_split(abs($item)));\n\
    \t}, 0);\n}\n\necho count_nums(array(1, 1, 2));", "\t$count = 0;\n\tfor ($i =\
    \ 0; $i < count($arr); $i++) {\n\t\t$sum = 0;\n\t\tif ($arr[$i] < 0) {\n\t\t\t\
    $arr[$i] = $arr[$i] * -1;\n\t\t}\n\t\twhile ($arr[$i] > 0) {\n\t\t\t$sum += $arr[$i]\
    \ % 10;\n\t\t\t$arr[$i] = floor($arr[$i] / 10);\n\t\t}\n\t\tif ($sum > 0) {\n\t\
    \t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n", "    if (empty($arr)) {\n \
    \       return 0;\n    }\n    $sum = 0;\n    foreach ($arr as $value) {\n    \
    \    $str = (string)$value;\n        if ($value < 0) {\n            $str = substr($str,\
    \ 1);\n        }\n        $sum += array_sum(str_split($str));\n    }\n    return\
    \ $sum;\n}\n$arr = array(-1, -11, 1, 1, 2);\necho count_nums($arr);", "    $sum\
    \ = 0;\n    foreach ($arr as $number) {\n        $str = (string)$number;\n   \
    \     $sum += intval($str[0]);\n        $sum += intval($str[1]);\n        $sum\
    \ += intval($str[2]);\n    }\n    return $sum;\n}\n\n$arr = [-1, 11, -11];\necho\
    \ count_nums($arr);", "  $count = 0;\n  foreach ($arr as $num) {\n    $total =\
    \ 0;\n    if ($num < 0) {\n      $total += -1 * ($num % 10);\n      $num = -1\
    \ * $num / 10;\n    } else {\n      $total += $num % 10;\n      $num = $num /\
    \ 10;\n    }\n    while (intval($num) != 0) {\n      $total += $num % 10;\n  \
    \    $num = $num / 10;\n    }\n    if ($total > 0) {\n      $count++;\n    }\n\
    \  }\n  return $count;\n}\necho count_nums(array()) . PHP_EOL;\necho count_nums(array(-1,\
    \ 11, -11)) . PHP_EOL;\necho count_nums(array(1, 1, 2)) . PHP_EOL;\n", "\t$count\
    \ = 0;\n\tforeach ($arr as $n) {\n\t\t$digits = str_split(abs($n));\n\t\t$sum\
    \ = array_sum($digits);\n\t\tif ($sum > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\t\
    return $count;\n}", "  $counter = 0;\n  foreach ($arr as $int) {\n    if ($int\
    \ < 0) {\n      $int = -$int;\n    }\n    if ($int > 0) {\n      $counter++;\n\
    \    }\n  }\n  return $counter;\n}\n\necho count_nums(array());\necho count_nums(array(-1,\
    \ 11, -11));\necho count_nums(array(1, 1, 2));", "    $count = 0;\n    foreach\
    \ ($arr as $item) {\n        $sum = sum_of_digit($item);\n        if ($sum > 0)\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}\n", "    $count\
    \ = 0;\n    foreach ($arr as $num) {\n        $digit_sum = 0;\n        $abs_num\
    \ = abs($num);\n        while ($abs_num > 0) {\n            $digit_sum += $abs_num\
    \ % 10;\n            $abs_num = floor($abs_num / 10);\n        }\n        if ($digit_sum\
    \ > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\necho\
    \ count_nums(array()) . PHP_EOL;\necho count_nums(array(-1, 11, -11)) . PHP_EOL;\n\
    echo count_nums(array(1, 1, 2)) . PHP_EOL;\n", "\t$count = 0;\n\tforeach ($arr\
    \ as $num) {\n\t\t$sum = 0;\n\t\tif ($num < 0) {\n\t\t\t$num = $num * -1;\n\t\t\
    }\n\t\twhile ($num != 0) {\n\t\t\t$sum += $num % 10;\n\t\t\t$num = floor($num\
    \ / 10);\n\t\t}\n\t\tif ($sum > 0) {\n\t\t\t$count += 1;\n\t\t}\n\t}\n\treturn\
    \ $count;\n}\n", "    $sum = 0;\n    foreach ($arr as $number) {\n        $number\
    \ = abs($number);\n        while ($number > 0) {\n            $sum += $number\
    \ % 10;\n            $number = (int)($number / 10);\n        }\n    }\n    return\
    \ $sum;\n}", "  $count = 0;\n  foreach ($arr as $val) {\n    $sum = 0;\n    $val\
    \ = $val < 0 ? -$val : $val;\n    while ($val > 0) {\n      $sum += $val % 10;\n\
    \      $val = (int)($val / 10);\n    }\n    if ($sum > 0) {\n      $count++;\n\
    \    }\n  }\n  return $count;\n}", "    $arr_size = count($arr);\n    $counter\
    \ = 0;\n    for ($i = 0; $i < $arr_size; $i++) {\n        $digits_sum = 0;\n \
    \       if ($arr[$i] < 0) {\n            $digits_sum += abs($arr[$i]) % 10;\n\
    \            $arr[$i] = (int)(abs($arr[$i]) / 10);\n        }\n        while ($arr[$i]\
    \ > 0) {\n            $digits_sum += $arr[$i] % 10;\n            $arr[$i] = (int)($arr[$i]\
    \ / 10);\n        }\n        if ($digits_sum > 0) {\n            $counter++;\n\
    \        }\n    }\n    return $counter;\n}\n", "  $count = 0;\n  foreach ($arr\
    \ as $number) {\n    $digits = str_split(abs($number));\n    $sum = 0;\n    foreach\
    \ ($digits as $digit) {\n      $sum += $digit;\n    }\n    if ($sum > 0) {\n \
    \     $count++;\n    }\n  }\n  return $count;\n}", "  $count = 0;\n  $count_multi\
    \ = 0;\n  $numbers = str_split($arr);\n  foreach ($numbers as $number) {\n   \
    \ if ($number > 0) {\n      $count = $count + 1;\n    }\n  }\n  return $count;\n\
    }", "    $total = 0;\n    foreach ($arr as $number) {\n        if ($number < 0)\
    \ {\n            $number = $number * -1;\n        }\n        $tots = 0;\n    \
    \    for ($i = 0; $i < strlen($number); $i++) {\n            $tots += substr($number,\
    \ $i, 1);\n        }\n        if ($tots > 0) {\n            $total++;\n      \
    \  }\n    }\n    return $total;\n}\n\necho \"TESTING count_nums():\\n\";\n$tests\
    \ = array(\n    array(),\n    array(-1, 11, -11),\n    array(1, 1, 2),\n);\n\n\
    foreach ($tests as $test) {\n    printf(\"%s == %d\\n\", var_export($test, true),\
    \ count_nums($test));\n}\n", "    $sum = 0;\n    foreach ($arr as $num) {\n  \
    \      if ($num < 0) {\n            $num = -1 * $num;\n        }\n        $sum\
    \ += $num;\n    }\n    return $sum;\n}\n", "    $count = 0;\n    foreach ($arr\
    \ as $value) {\n        if ($value < 0) {\n            $value = $value * -1;\n\
    \        }\n        $count += sum_digits($value);\n    }\n    return $count;\n\
    }", "    $count = 0;\n    foreach ($arr as $item) {\n        $count += has_positive_digit_sum($item);\n\
    \    }\n    return $count;\n}\n", "  $positiveNumbers = array_filter($arr, function($num)\
    \ {\n    $sumOfDigits = 0;\n    $num = abs($num);\n    while ($num > 0) {\n  \
    \    $sumOfDigits += $num % 10;\n      $num = (int)($num / 10);\n    }\n    return\
    \ $sumOfDigits > 0;\n  });\n  return count($positiveNumbers);\n}\n", "    $sum\
    \ = 0;\n    $count = 0;\n    foreach ($arr as $x) {\n        if ($x < 0) {\n \
    \           $x = -1 * $x;\n        }\n        $sum = sum_digits($x);\n       \
    \ if ($sum > 0) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n", "    $count = 0;\n    foreach ($arr as $int) {\n        $int = abs($int);\n\
    \        while ($int > 0) {\n            $count += $int % 10;\n            $int\
    \ = floor($int / 10);\n        }\n    }\n    return $count;\n}", "\tif(empty($arr))\
    \ {\n\t\treturn 0;\n\t}\n\t$count = 0;\n\tforeach($arr as $value) {\n\t\t$sum\
    \ = 0;\n\t\t$num = $value;\n\t\tif($num < 0) {\n\t\t\t$num = $num * -1;\n\t\t\
    }\n\t\twhile($num >= 10) {\n\t\t\t$sum += $num % 10;\n\t\t\t$num = $num / 10;\n\
    \t\t}\n\t\t$sum += $num;\n\t\tif($sum > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\t\
    return $count;\n}\n$arr = array(1, 1, 2);\necho count_nums($arr) . \"\\n\";",
  "  $total = 0;\n  foreach ($arr as $num) {\n    $num = abs($num);\n    $sum = 0;\n\
    \    while ($num > 0) {\n      $sum += $num % 10;\n      $num = floor($num / 10);\n\
    \    }\n    if ($sum > 0) {\n      $total++;\n    }\n  }\n  return $total;\n}\n",
  "\t$count = 0;\n\tforeach ($arr as $number) {\n\t\tif ($number < 0) {\n\t\t\t$number\
    \ = $number*-1;\n\t\t}\n\t\t$sum = 0;\n\t\twhile ($number != 0) {\n\t\t\t$sum\
    \ += $number % 10;\n\t\t\t$number = $number / 10;\n\t\t}\n\t\tif ($sum > 0) {\n\
    \t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}", "\treturn array_reduce($arr,\
    \ function($carry, $n) {\n\t\t$digits = array_sum(array_map(function($i) {\n\t\
    \t\treturn abs($i);\n\t\t}, str_split($n)));\n\t\tif ($digits > 0) $carry++;\n\
    \t\treturn $carry;\n\t}, 0);\n}", "    $count = 0;\n    foreach ($arr as $key\
    \ => $value) {\n        $digitsum = 0;\n        while ($value != 0) {\n      \
    \      $digitsum += $value % 10;\n            $value = intval($value / 10);\n\
    \        }\n        if ($digitsum > 0) {\n            $count++;\n        }\n \
    \   }\n    return $count;\n}", "    $i = 0;\n    foreach ($arr as $key => $value)\
    \ {\n        $digits = str_split(abs($value));\n        $total = 0;\n        foreach\
    \ ($digits as $digit) {\n            $total += $digit;\n        }\n        if\
    \ ($total > 0) {\n            $i++;\n        }\n    }\n    return $i;\n}", " \
    \   // Write your code here\n    $count = 0;\n    foreach ($arr as $num) {\n \
    \       $num = abs($num);\n        $sum = 0;\n        while ($num > 0) {\n   \
    \         $sum += $num % 10;\n            $num = (int)($num / 10);\n        }\n\
    \        if ($sum > 0) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}\n", "\tif (empty($arr)) {\n\t\treturn 0;\n\t}\n\t$count = 0;\n\t\
    foreach ($arr as $val) {\n\t\t$digits = get_digits($val);\n\t\t$digits_sum = sum_digits($digits);\n\
    \t\tif ($digits_sum > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n",
  "    $count = 0;\n    $non_zero_sum = false;\n    foreach ($arr as $number) {\n\
    \        if ($number < 0) {\n            $number = -$number;\n        }\n    \
    \    while ($number > 0) {\n            $count += $number % 10;\n            $number\
    \ = (int)($number / 10);\n        }\n        if ($count > 0) {\n            $non_zero_sum\
    \ = true;\n        }\n        $count = 0;\n    }\n    if ($non_zero_sum) {\n \
    \       return 1;\n    }\n    return 0;\n}\necho 'count_nums([1,1,2]): ' . count_nums([1,1,2])\
    \ . \"\\n\";\necho 'count_nums([1,1,1]): ' . count_nums([1,1,1]) . \"\\n\";\n\
    echo 'count_nums([-1,1,1]): ' . count_nums([-1,1,1]) . \"\\n\";\necho 'count_nums([-1,0,1]):\
    \ ' . count_nums([-1,0,1]) . \"\\n\";\necho 'count_nums([-1,11,-11]): ' . count_nums([-1,11,-11])\
    \ . \"\\n\";\necho 'count_nums([-1,-1,-1]): ' . count_nums([-1,-1,-1]) . \"\\\
    n\";\necho 'count_nums([]): ' . count_nums([]) . \"\\n\";\necho 'count_nums([0]):\
    \ ' . count_nums([0]) . \"\\n\";\necho 'count_nums([-1]): ' . count_nums([-1])\
    \ . \"\\n\";", "    // $sum = 0;\n    // for ($i = 0; $i < count($arr); $i++)\
    \ {\n    //     $sum += array_sum(str_split($arr[$i]));\n    // }\n    // return\
    \ $sum;\n    $sum = array_sum(str_split($arr));\n    return $sum;\n}\necho count_nums(array(-1,\
    \ 11, -11)) . \"\\n\";\necho count_nums(array(1, 1, 2)) . \"\\n\";\n", "    $count\
    \ = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        $sum = 0;\n      \
    \  $num = $arr[$i];\n        if ($num < 0) {\n            $num = $num * -1;\n\
    \        }\n        for ($j = 0; $j < strlen($num); $j++) {\n            $sum\
    \ += intval($num[$j]);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nprint(count_nums(array()).\"\\n\"\
    );\nprint(count_nums(array(-1, 11, -11)).\"\\n\");\nprint(count_nums(array(1,\
    \ 1, 2)).\"\\n\");", "  $count = 0;\n  foreach ($arr as $key => $value) {\n  \
    \  if ($value < 0) {\n      $sign = -1;\n    } else {\n      $sign = 1;\n    }\n\
    \    $value = $value * $sign;\n    $sum = 0;\n    while ($value > 0) {\n     \
    \ $sum += $value % 10;\n      $value = intval($value / 10);\n    }\n    if ($sum\
    \ > 0) {\n      $count++;\n    }\n  }\n  return $count;\n}\n\necho count_nums(array(1,\
    \ 1, 2));", "\t$result = 0;\n\tforeach ($arr as $n) {\n\t\t$digits_sum = 0;\n\t\
    \tif ($n < 0) {\n\t\t\t$digits_sum -= $n % 10;\n\t\t\t$n = $n / -10;\n\t\t}\n\t\
    \twhile ($n) {\n\t\t\t$digits_sum += $n % 10;\n\t\t\t$n = $n / 10;\n\t\t}\n\t\t\
    if ($digits_sum > 0)\n\t\t\t$result++;\n\t}\n\treturn $result;\n}\n\n$arr = array();\n\
    echo count_nums($arr) . \"\\n\";\n$arr = array(-1, 11, -11);\necho count_nums($arr)\
    \ . \"\\n\";\n$arr = array(1, 1, 2);\necho count_nums($arr) . \"\\n\";", "   \
    \ $count = 0;\n    foreach ($arr as $int) {\n        $count += array_sum(str_split(abs($int)));\n\
    \    }\n    return $count;\n}\n", "    $count = 0;\n    foreach ($arr as $num)\
    \ {\n        if ($num < 0) {\n            $num = -$num;\n        }\n        $sum\
    \ = 0;\n        while ($num) {\n            $sum += $num % 10;\n            $num\
    \ = intval($num / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n", "\t// write your solution here\n\t\
    $counter = 0;\n\tforeach ($arr as $elem) {\n\t\tif ($elem > 0) {\n\t\t\t$digits\
    \ = array_map('intval', str_split($elem));\n\t\t\t$total = array_sum($digits);\n\
    \t\t\tif ($total > 0) {\n\t\t\t\t$counter++;\n\t\t\t}\n\t\t} else {\n\t\t\t$digits\
    \ = array_map('intval', str_split($elem * -1));\n\t\t\t$total = array_sum($digits);\n\
    \t\t\tif ($total > 0) {\n\t\t\t\t$counter++;\n\t\t\t}\n\t\t}\n\t}\n\treturn $counter;\n\
    }", "  $result = 0;\n  foreach ($arr as $value) {\n    $sum = 0;\n    if ($value\
    \ < 0) {\n      $sum += $value % 10;\n      $value = $value / 10;\n    }\n   \
    \ while ($value > 0) {\n      $sum += $value % 10;\n      $value = $value / 10;\n\
    \    }\n    if ($sum > 0) {\n      $result++;\n    }\n  }\n  return $result;\n\
    }", "    $count = 0;\n    foreach ($arr as $int) {\n        if ($int < 0) {\n\
    \            $int = 0 - $int;\n        }\n        $nums = str_split($int);\n \
    \       $total = 0;\n        foreach ($nums as $num) {\n            $total +=\
    \ $num;\n        }\n        if ($total > 0) {\n            $count++;\n       \
    \ }\n    }\n    return $count;\n}\n", "  $count = 0;\n  $total = 0;\n  foreach\
    \ ($arr as $elem) {\n    $total = 0;\n    while ($elem > 0) {\n      $total +=\
    \ $elem % 10;\n      $elem = intval($elem / 10);\n    }\n    while ($elem < 0)\
    \ {\n      $total += abs($elem % 10);\n      $elem = intval($elem / 10);\n   \
    \ }\n    if ($total > 0) {\n      $count++;\n    }\n  }\n  return $count;\n}",
  "    // Your code here\n}\n", "\t$count = 0;\n\tforeach ($arr as $value) {\n\t\t\
    $sum = 0;\n\t\t$num = abs($value);\n\t\twhile ($num != 0) {\n\t\t\t$sum += $num\
    \ % 10;\n\t\t\t$num = (int)($num / 10);\n\t\t}\n\t\tif ($sum > 0) {\n\t\t\t$count++;\n\
    \t\t}\n\t}\n\treturn $count;\n}\n\necho count_nums(array()).\"\\n\";\necho count_nums(array(-1,\
    \ 11, -11)).\"\\n\";\necho count_nums(array(1, 1, 2)).\"\\n\";\n", "\t$count =\
    \ 0;\n\tforeach ($arr as $item) {\n\t\t$strArr = str_split($item);\n\t\t$sum =\
    \ 0;\n\t\tforeach ($strArr as $strNum) {\n\t\t\t$sum += (int)$strNum;\n\t\t}\n\
    \t\tif ($sum != 0) $count++;\n\t}\n\treturn $count;\n}\n", "    $sum = 0;\n  \
    \  $arr_count = count($arr);\n    for ($i = 0; $i < $arr_count; $i++) {\n    \
    \    $arr[$i] = (string) $arr[$i];\n        if ($arr[$i][0] == '-') {\n      \
    \      $arr[$i] = substr($arr[$i], 1);\n        }\n        $arr[$i] = str_split($arr[$i]);\n\
    \        $arr[$i] = array_sum($arr[$i]);\n        if ($arr[$i] > 0) {\n      \
    \      $sum++;\n        }\n    }\n    return $sum;\n}\nprint count_nums(array())\
    \ . PHP_EOL;\nprint count_nums(array(-1, 11, -11)) . PHP_EOL;\nprint count_nums(array(1,\
    \ 1, 2)) . PHP_EOL;\n", "    $nums = array();\n    $digits = array();\n    foreach\
    \ ($arr as $value) {\n        if ($value < 0) {\n            $value = abs($value);\n\
    \            $temp_value = 0;\n            while ($value > 0) {\n            \
    \    $temp_value += $value % 10;\n                $value = floor($value / 10);\n\
    \            }\n            $temp_value = -$temp_value;\n        } else {\n  \
    \          $temp_value = $value;\n        }\n        $temp_value = strval($temp_value);\n\
    \        $digits = str_split($temp_value);\n        if (array_sum($digits) > 0)\
    \ {\n            $nums[] = $temp_value;\n        }\n    }\n    return count($nums);\n\
    }\n\nprint_r(count_nums(array()));\nprint_r(count_nums(array(-1, 11, -11)));\n\
    print_r(count_nums(array(1, 1, 2)));", "    return sizeof(array_filter($arr, function($x)\
    \ {\n        return array_sum(str_split(abs($x))) > 0;\n    }));\n}", "    $result\
    \ = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        $num = $arr[$i];\n\
    \        $num = (int)abs($num);\n        $sum = 0;\n        while ($num > 0) {\n\
    \            $sum += $num % 10;\n            $num = (int)($num / 10);\n      \
    \  }\n        if ($sum > 0) {\n            $result++;\n        }\n    }\n    return\
    \ $result;\n}\n", "  $count = 0;\n  foreach ($arr as $int) {\n    $count += (sum_of_digits($int)\
    \ > 0) ? 1 : 0;\n  }\n  return $count;\n}\n", "    $count = 0;\n    foreach ($arr\
    \ as $x) {\n        if ($x < 0) {\n            $x = -$x;\n        }\n        $sum\
    \ = 0;\n        while ($x != 0) {\n            $sum += $x % 10;\n            $x\
    \ = (int)($x / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\necho \"1 \";\necho count_nums(array(1,\
    \ 2, 3)) . \"\\n\";\necho \"3 \";\necho count_nums(array(1, 1, 2)) . \"\\n\";\n\
    echo \"0 \";\necho count_nums(array()) . \"\\n\";\necho \"1 \";\necho count_nums(array(-1,\
    \ 11, -11)) . \"\\n\";", "  $total = 0;\n  foreach ($arr as $element) {\n    $digits_sum\
    \ = 0;\n    if ($element < 0) {\n      $digits_sum += $element;\n      $element\
    \ = abs($element);\n    }\n    while ($element > 0) {\n      $digit = $element\
    \ % 10;\n      $digits_sum += $digit;\n      $element /= 10;\n    }\n    if ($digits_sum\
    \ > 0) {\n      $total++;\n    }\n  }\n  return $total;\n}\n", "\t$count = 0;\n\
    \tfor ($i = 0; $i < count($arr); $i++) {\n\t\t$num = $arr[$i];\n\t\t$sum = 0;\n\
    \t\twhile ($num != 0) {\n\t\t\t$digit = $num % 10;\n\t\t\t$sum += $digit;\n\t\t\
    \t$num = (int)($num / 10);\n\t\t}\n\t\tif ($sum > 0) {\n\t\t\t$count++;\n\t\t\
    }\n\t}\n\treturn $count;\n}\n", "    $count = 0;\n    foreach ($arr as $number)\
    \ {\n        if (sum_digits($number) > 0) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}\n", "    $count = 0;\n    foreach ($arr as $num)\
    \ {\n        $num_str = strval($num);\n        $num_sum = 0;\n        if ($num_str[0]\
    \ == '-') {\n            $num_sum += intval($num_str[1]);\n        }\n       \
    \ $num_sum += array_sum(str_split($num_str));\n        if ($num_sum > 0) {\n \
    \           $count++;\n        }\n    }\n    return $count;\n}\necho count_nums(array());\
    \ // 0\necho count_nums(array(-1, 11, -11)); // 1\necho count_nums(array(1, 1,\
    \ 2)); // 3\n\necho \"\\n\\n\\n\";\n", "\t$count = 0;\n\tforeach ($arr as $val)\
    \ {\n\t\t$sum = 0;\n\t\t$num = $val;\n\t\twhile ($num) {\n\t\t\t$sum += abs($num\
    \ % 10);\n\t\t\t$num = intval($num / 10);\n\t\t}\n\t\tif ($sum > 0)\n\t\t\t$count++;\n\
    \t}\n\treturn $count;\n}\n", "\t$arr = array_map('abs', $arr);\n\t$count = 0;\n\
    \tforeach ($arr as $num) {\n\t\t$arr2 = str_split($num);\n\t\t$sum = array_sum($arr2);\n\
    \t\tif ($sum > 0) {\n\t\t\t$count += 1;\n\t\t}\n\t}\n\treturn $count;\n}\n\necho\
    \ count_nums(array(1, 2, 3)) . \"\\n\";\necho count_nums(array(1, 1, 1)) . \"\\\
    n\";\necho count_nums(array(1, -1, 1)) . \"\\n\";\necho count_nums(array(1, -1,\
    \ 1, -1)) . \"\\n\";\necho count_nums(array(1, 1, 2)) . \"\\n\";\necho count_nums(array(1,\
    \ 1, 1, 2)) . \"\\n\";\necho count_nums(array(10, 10, 10, 1)) . \"\\n\";\necho\
    \ count_nums(array(-1, 11, -11)) . \"\\n\";\necho count_nums(array()) . \"\\n\"\
    ;", "    $result = 0;\n    foreach ($arr as $num) {\n        if ($num != 0) {\n\
    \            $result++;\n        }\n    }\n    return $result;\n}\necho count_nums(array(-1,\
    \ 11, -11));\necho \"<br>\";\necho count_nums(array(1, 1, 2));\necho \"<br>\"\
    ;\necho count_nums(array());\necho \"<br>\";\n", "  // BEGIN\n  $count = 0;\n\
    \  foreach ($arr as $value) {\n    $count += sum($value) > 0 ? 1 : 0;\n  }\n \
    \ return $count;\n  // END\n}\n", "    $non_zero_counter = 0;\n    foreach ($arr\
    \ as $int) {\n        $count = 0;\n        if ($int < 0) {\n            $count\
    \ -= $int % 10;\n            $int = (-1) * ($int / 10);\n        }\n        while\
    \ ($int != 0) {\n            $count += $int % 10;\n            $int = $int / 10;\n\
    \        }\n        if ($count != 0) {\n            $non_zero_counter++;\n   \
    \     }\n    }\n    return $non_zero_counter;\n}\n", '}', "    $count = 0;\n \
    \   foreach ($arr as $num) {\n        if (sum_of_digit($num) > 0) {\n        \
    \    $count++;\n        }\n    }\n    return $count;\n}\n", "  $count = 0;\n \
    \ foreach ($arr as $item) {\n    $count += sum_digits($item);\n  }\n  return $count;\n\
    }\n", "  $num = 0;\n  for ($i = 0; $i < count($arr); $i++) {\n    $num = $num\
    \ + abs($arr[$i]);\n  }\n  return $num;\n}", "    $count = 0;\n    foreach ($arr\
    \ as $number) {\n        if ($number >= 0) {\n            $sum = array_sum(str_split($number));\n\
    \        } else {\n            $sum = array_sum(str_split($number)) * -1;\n  \
    \      }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n \
    \   return $count;\n}\n", "    $count = 0;\n    for ($i = 0; $i < count($arr);\
    \ $i++) {\n        $num = abs($arr[$i]);\n        $digitSum = 0;\n        while\
    \ ($num > 0) {\n            $digitSum += $num % 10;\n            $num = floor($num\
    \ / 10);\n        }\n        if ($digitSum > 0) {\n            $count++;\n   \
    \     }\n    }\n    return $count;\n}\n", "  $count = 0;\n  foreach ($arr as $item)\
    \ {\n    if ($item == 0) {\n      $count += 1;\n    } else {\n      $item = abs($item);\n\
    \      $sum = 0;\n      while ($item != 0) {\n        $sum += $item % 10;\n  \
    \      $item = intval($item / 10);\n      }\n      if ($sum > 0) {\n        $count\
    \ += 1;\n      }\n    }\n  }\n  return $count;\n}\n", "}\n", "    $counter = 0;\n\
    \    foreach ($arr as $key => $value) {\n        $sum = 0;\n        if($value\
    \ < 0) {\n            $value = abs($value);\n            $sum += substr($value,\
    \ 0, 1);\n            $value = substr($value, 1);\n        }\n        while($value\
    \ != 0) {\n            $sum += $value % 10;\n            $value = intval($value\
    \ / 10);\n        }\n        if($sum > 0) {\n            $counter++;\n       \
    \ }\n    }\n    return $counter;\n}", "  $sum = 0;\n  foreach ($arr as $num) {\n\
    \    if ($num > 0) {\n      $sum += array_sum(str_split($num));\n    } else {\n\
    \      $sum += array_sum(str_split($num * -1)) * -1;\n    }\n  }\n  return $sum;\n\
    }", "    $total = 0;\n    foreach ($arr as $val) {\n        $nums = array();\n\
    \        while ($val != 0) {\n            array_push($nums, $val % 10);\n    \
    \        $val = (int)($val / 10);\n        }\n        if (array_sum($nums) > 0)\
    \ {\n            $total += 1;\n        }\n    }\n    return $total;\n}", "  $count\
    \ = 0;\n  foreach ($arr as $value) {\n    $signed_digits = str_split(strval(abs($value)));\n\
    \    $signed_sum = array_sum($signed_digits);\n    if ($signed_sum > 0) {\n  \
    \    $count++;\n    }\n  }\n  return $count;\n}\n", "\tforeach ($arr as $k =>\
    \ $v) {\n\t\tif ($v < 0) {\n\t\t\t$v = $v * -1;\n\t\t}\n\t\twhile ($v > 0) {\n\
    \t\t\t$sum += $v % 10;\n\t\t\t$v = floor($v / 10);\n\t\t}\n\t\tif ($sum > 0) {\n\
    \t\t\t$count++;\n\t\t}\n\t\t$sum = 0;\n\t}\n\treturn $count;\n}\n", "    $arr_count\
    \ = count($arr);\n    $count = 0;\n    for ($i = 0; $i < $arr_count; $i++) {\n\
    \        $x = $arr[$i];\n        if ($x < 0) {\n            $x = ($x * -1);\n\
    \        }\n        $digits = str_split($x);\n        $digit_count = count($digits);\n\
    \        $digit_sum = 0;\n        for ($j = 0; $j < $digit_count; $j++) {\n  \
    \          $digit_sum += $digits[$j];\n        }\n        if ($digit_sum > 0)\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}", "  return\
    \ count(array_filter($arr, 'hasSumOfDigitsGreaterThanZero'));\n}\n", "    $count\
    \ = 0;\n    foreach ($arr as $elem) {\n        $sum = 0;\n        if ($elem <\
    \ 0) {\n            $sum += $elem * -1;\n        } else {\n            $sum +=\
    \ $elem;\n        }\n        if ($sum > 0) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}\n\n$arr = array();\n$arr2 = array(-1, 11, -11);\n\
    $arr3 = array(1, 1, 2);\n\necho count_nums($arr);\necho \"\\n\";\necho count_nums($arr2);\n\
    echo \"\\n\";\necho count_nums($arr3);", "  $sum = 0;\n  foreach ($arr as $a)\
    \ {\n    if ($a < 0) {\n      $sum += abs($a % 10);\n    } else {\n      $sum\
    \ += $a % 10;\n    }\n  }\n  return $sum;\n}\n", "    $count = 0;\n    foreach\
    \ ($arr as $number) {\n        $sum = 0;\n        $number = str_split(abs($number));\n\
    \        foreach ($number as $num) {\n            $sum += $num;\n        }\n \
    \       if ($sum > 0) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }", "  $cnt = 0;\n  foreach ($arr as $val) {\n    $sum = 0;\n    if ($val < 0)\
    \ {\n      $sum += $val * -1;\n    } else {\n      $sum += $val;\n    }\n    $sum\
    \ = array_sum(str_split($sum));\n    if ($sum > 0) {\n      $cnt++;\n    }\n \
    \ }\n  return $cnt;\n}\n", "\t$num = 0;\n\tforeach ($arr as $a) {\n\t\t$sum =\
    \ 0;\n\t\tif ($a < 0) {\n\t\t\t$sum += $a%10;\n\t\t\t$a = ($a-$a%10)/10;\n\t\t\
    }\n\t\twhile ($a > 0) {\n\t\t\t$sum += $a%10;\n\t\t\t$a = ($a-$a%10)/10;\n\t\t\
    }\n\t\tif ($sum > 0) {\n\t\t\t$num++;\n\t\t}\n\t}\n\treturn $num;\n}\necho count_nums(array(-1,\
    \ 11, -11)).\"\\n\";\necho count_nums(array(1, 1, 2)).\"\\n\";", "  return array_reduce($arr,\
    \ function($c, $n) {\n    return $c + ($n >= 0 ? (int) ($n > 0) : (int) ($n <\
    \ 0));\n  }, 0);\n}\n", "    $result = 0;\n    foreach ($arr as $num) {\n    \
    \    $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n      \
    \      $sum += $num % 10;\n            $num = intval($num / 10);\n        }\n\
    \        if ($sum > 0) {\n            $result++;\n        }\n    }\n    return\
    \ $result;\n}\n", "  $result = 0;\n  foreach ($arr as $value) {\n    if (array_sum(str_split($value))\
    \ > 0) {\n      $result++;\n    }\n  }\n  return $result;\n}\n", "\t// Fill in\
    \ the missing code\n\t$count = 0;\n\tforeach ($arr as $num) {\n\t\t$sum = 0;\n\
    \t\tif ($num < 0) {\n\t\t\t$sum += $num * -1;\n\t\t} else {\n\t\t\t$sum += $num;\n\
    \t\t}\n\t\t$count += $sum;\n\t}\n\techo $count;\n}\n\ncount_nums(array());\necho\
    \ \"\\n\";\ncount_nums(array(-1, 11, -11));\necho \"\\n\";\ncount_nums(array(1,\
    \ 1, 2));\necho \"\\n\";", "    if (empty($arr)) {\n        return 0;\n    }\n\
    \    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n        $absNum\
    \ = abs($num);\n        while ($absNum) {\n            $sum += $absNum % 10;\n\
    \            $absNum = (int)($absNum / 10);\n        }\n        if ($sum) {\n\
    \            $count++;\n        }\n    }\n    return $count;\n}\n\n$arr = array(-1,\
    \ 11, -11);\nprint(count_nums($arr));", "    $total_cnt = 0;\n    $arr_cnt = count($arr);\n\
    \    for ($i = 0; $i < $arr_cnt; $i++) {\n        $num = $arr[$i];\n        $num_cnt\
    \ = 0;\n        while ($num != 0) {\n            $digit = $num % 10;\n       \
    \     $num_cnt += $digit;\n            $num = (int)($num / 10);\n        }\n \
    \       if ($num_cnt > 0) {\n            $total_cnt++;\n        }\n    }\n   \
    \ return $total_cnt;\n}", "    $count = 0;\n    for ($i = 0; $i < count($arr);\
    \ $i++) {\n        $sum = 0;\n        $num = $arr[$i];\n        if ($num == 0)\
    \ {\n            $count++;\n        } else if ($num < 0) {\n            $num =\
    \ $num * -1;\n            while ($num != 0) {\n                $sum += $num %\
    \ 10;\n                $num = floor($num / 10);\n            }\n            if\
    \ ($sum > 0) {\n                $count++;\n            }\n        } else {\n \
    \           while ($num != 0) {\n                $sum += $num % 10;\n        \
    \        $num = floor($num / 10);\n            }\n            if ($sum > 0) {\n\
    \                $count++;\n            }\n        }\n    }\n    return $count;\n\
    }", "\t$sum_digits = 0;\n\t$signed_digits = 0;\n\tforeach ($arr as $n) {\n\t\t\
    $sum_digits += sum_digits($n);\n\t\t$signed_digits += abs($n);\n\t}\n\treturn\
    \ $sum_digits + $signed_digits;\n}\n", "  $count = 0;\n  foreach ($arr as $value)\
    \ {\n    $digits = get_signed_digits($value);\n    $sum = array_sum($digits);\n\
    \    if ($sum > 0) {\n      $count++;\n    }\n  }\n  return $count;\n}\n", " \
    \ $sum = 0;\n  foreach ($arr as $value) {\n    $sum += count_digits($value);\n\
    \  }\n  return $sum;\n}", "\n}\n", "    $count = 0;\n    for ($i = 0; $i < count($arr);\
    \ $i++) {\n        $num = abs($arr[$i]);\n        $sum = 0;\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = intval($num / 10);\n\
    \        }\n        if ($sum > 0) $count++;\n    }\n    return $count;\n}\n",
  "  // your solution here\n}", "\t$final_array = array();\n\tforeach ($arr as $value)\
    \ {\n\t\t$final_array[] = abs($value);\n\t}\n\treturn array_sum($final_array);\n\
    }\n$a = array(1, 2, 3, 4, 5);\n$b = array(-1, -2, -3, -4, -5);\n$c = array(5,\
    \ 6, -1, -2, -3, -4, -5);\n\necho count_nums($a);\necho \"<br>\";\necho count_nums($b);\n\
    echo \"<br>\";\necho count_nums($c);\necho \"<br>\";\n", "\t$count = 0;\n\tforeach\
    \ ($arr as $num) {\n\t\tif ($num < 0) {\n\t\t\t$sum += $num;\n\t\t} else {\n\t\
    \t\t$sum = array_sum(str_split($num));\n\t\t}\n\t\tif ($sum > 0) {\n\t\t\t$count++;\n\
    \t\t}\n\t}\n\treturn $count;\n}\n\nprint_r(count_nums(array(1, 1, 2)));", "  \
    \  $count = 0;\n    foreach ($arr as $num) {\n        if ($num < 0) {\n      \
    \      $num = -1 * $num;\n        }\n        $sum = 0;\n        while ($num >\
    \ 0) {\n            $sum += $num % 10;\n            $num = (int)($num / 10);\n\
    \        }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}", "  $output = 0;\n  foreach ($arr as $value) {\n    $digits\
    \ = str_split($value);\n    if ($digits[0] === '-') {\n      $digits[0] = substr($digits[0],\
    \ 1);\n    }\n    $output += array_sum($digits);\n  }\n  return $output;\n}",
  "    $i = 0;\n    $count = 0;\n    while ($i < count($arr)) {\n        $sum = 0;\n\
    \        while ($arr[$i] > 0) {\n            $sum += $arr[$i] % 10;\n        \
    \    $arr[$i] = (int)($arr[$i] / 10);\n        }\n        while ($arr[$i] < 0)\
    \ {\n            $sum += (-1) * ($arr[$i] % 10);\n            $arr[$i] = (int)($arr[$i]\
    \ / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n        }\n\
    \        $i++;\n    }\n    return $count;\n}\n$arr = array(-1, 11, -11);\n$result\
    \ = count_nums($arr);\necho \"$result\";", "    $num_nums = 0;\n    for ($i =\
    \ 0; $i < count($arr); $i++) {\n        $num = $arr[$i];\n        $sum = 0;\n\
    \        if ($num < 0) {\n            $sum = $num % 10;\n            $num = $num\
    \ / -10;\n        }\n        while ($num != 0) {\n            $sum += $num % 10;\n\
    \            $num = $num / 10;\n        }\n        if ($sum > 0) {\n         \
    \   $num_nums++;\n        }\n    }\n    return $num_nums;\n}", "\t$count = 0;\n\
    \tforeach ($arr as $value) {\n\t\t$s = 0;\n\t\tfor ($i = $value; $i > 0; $i =\
    \ intval($i / 10)) {\n\t\t\t$s += $i % 10;\n\t\t}\n\t\tif ($s > 0) {\n\t\t\t$count++;\n\
    \t\t}\n\t}\n\treturn $count;\n}\n", "    $n = count($arr);\n    $count = 0;\n\
    \    for ($i = 0; $i < $n; $i++) {\n        $num = $arr[$i];\n        $sum = 0;\n\
    \        while ($num != 0) {\n            $sum += $num % 10;\n            $num\
    \ = $num / 10;\n        }\n        if ($sum > 0) {\n            $count += 1;\n\
    \        }\n    }\n    return $count;\n}", "    $result = 0;\n    foreach ($arr\
    \ as $value) {\n        $check = $value < 0 ? $value * -1 : $value;\n        $sum\
    \ = 0;\n        while ($check) {\n            $sum += $check % 10;\n         \
    \   $check = floor($check / 10);\n        }\n        if ($sum > 0) {\n       \
    \     $result++;\n        }\n    }\n    return $result;\n}", "    //your code\
    \ here...\n}\n", "  return array_reduce($arr, function($count, $n) {\n    $sd\
    \ = ($n < 0) ? -1 * $n % 10 : $n % 10;\n    if ($sd > 0) {\n      $count++;\n\
    \    }\n    return $count;\n  }, 0);\n}\n", "  $nums_with_sum_gt_0 = array_filter($arr,\
    \ function($val) {\n    if ($val < 0) {\n      $val = substr($val, 1);\n    }\n\
    \    return array_sum(str_split($val)) > 0;\n  });\n  return count($nums_with_sum_gt_0);\n\
    }\n\necho count_nums(array()) . \"\\n\";\necho count_nums(array(-1, 11, -11))\
    \ . \"\\n\";\necho count_nums(array(1, 1, 2)) . \"\\n\";", "  $count = 0;\n  foreach\
    \ ($arr as $num) {\n    $num_abs = abs($num);\n    $sum = 0;\n    while ($num_abs\
    \ > 0) {\n      $sum += $num_abs % 10;\n      $num_abs = intval($num_abs / 10);\n\
    \    }\n    if ($sum > 0) {\n      $count++;\n    }\n  }\n  return $count;\n}",
  "    $count = 0;\n    foreach ($arr as $num) {\n        if ($num < 0) {\n      \
    \      $count += (abs($num) % 10) == 0 ? 1 : 0;\n        } else {\n          \
    \  $count += ($num % 10) == 0 ? 1 : 0;\n        }\n    }\n    return $count;\n\
    }", "    $count = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        $num\
    \ = $arr[$i];\n        if ($num < 0) {\n            $num = 0 - $num;\n       \
    \ }\n        $sum = 0;\n        while ($num > 0) {\n            $sum += $num %\
    \ 10;\n            $num = intval($num / 10);\n        }\n        if ($sum > 0)\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}", "\t$count\
    \ = 0;\n\tforeach ($arr as $value) {\n\t\tif ($value < 0) {\n\t\t\t$num = substr($value,\
    \ 1);\n\t\t} else {\n\t\t\t$num = $value;\n\t\t}\n\t\t$sum = 0;\n\t\tfor ($i =\
    \ 0; $i < strlen($num); $i++) {\n\t\t\t$sum += substr($num, $i, 1);\n\t\t}\n\t\
    \tif ($sum > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\nprint_r(count_nums(array()));\n\
    print_r(count_nums(array(-1, 11, -11)));\nprint_r(count_nums(array(1, 1, 2)));",
  "    $result = 0;\n    $arr_len = count($arr);\n    for ($i = 0; $i < $arr_len;\
    \ $i++) {\n        $num = $arr[$i];\n        $abs_num = abs($num);\n        $has_num\
    \ = FALSE;\n        $digit_sum = 0;\n        while ($abs_num > 0) {\n        \
    \    $digit = $abs_num % 10;\n            $digit_sum += $digit;\n            $abs_num\
    \ = ($abs_num - $digit) / 10;\n        }\n        if ($digit_sum > 0) {\n    \
    \        $result++;\n        }\n    }\n    return $result;\n}", "    $count =\
    \ 0;\n    $sum = 0;\n    foreach ($arr as $key => $val) {\n        if ($val <\
    \ 0) {\n            $sum += $val * -1;\n        } else {\n            $sum +=\
    \ $val;\n        }\n        if ($sum != 0) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}", "    // YOUR CODE HERE\n    return 0;\n}", "\t\
    $count = 0;\n\tforeach ($arr as $num) {\n\t\t$sum = 0;\n\t\t$sign = 1;\n\t\tif\
    \ ($num < 0) {\n\t\t\t$sign = -1;\n\t\t\t$num = -$num;\n\t\t}\n\t\twhile ($num\
    \ > 0) {\n\t\t\t$sum += $num % 10;\n\t\t\t$num = (int)($num / 10);\n\t\t}\n\t\t\
    if ($sum * $sign > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n",
  "\tif (empty($arr)) {\n\t\treturn 0;\n\t}\n\t$count = 0;\n\tforeach ($arr as $value)\
    \ {\n\t\t$sum = 0;\n\t\t$value = abs($value);\n\t\twhile ($value != 0) {\n\t\t\
    \t$sum += $value % 10;\n\t\t\t$value = floor($value / 10);\n\t\t}\n\t\tif ($sum\
    \ != 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n\nvar_dump(count_nums(array()));\n\
    var_dump(count_nums(array(-1, 11, -11)));\nvar_dump(count_nums(array(1, 1, 2)));",
  "\n}", "  $counter = 0;\n  foreach ($arr as $i) {\n    if ($i < 0) {\n      $i =\
    \ (-1 * $i);\n    }\n    $x = $i;\n    $sum = 0;\n    while ($x > 0) {\n     \
    \ $sum += $x % 10;\n      $x = floor($x / 10);\n    }\n    if ($sum > 0) {\n \
    \     $counter++;\n    }\n  }\n  return $counter;\n}\nprint_r(count_nums(array(0,\
    \ -1, 11, -11)));", "\t$count = 0;\n\tfor ($i = 0; $i < count($arr); $i++) {\n\
    \t\t$temp_sum = 0;\n\t\t$temp_arr = str_split($arr[$i]);\n\t\tfor ($j = 0; $j\
    \ < count($temp_arr); $j++) {\n\t\t\t$temp_sum += $temp_arr[$j];\n\t\t}\n\t\t\
    if ($temp_sum > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\necho \"\
    <p>EX1.1</p>\";\necho \"<p>EX1.1.1</p>\";\necho count_nums(array());\necho \"\
    <p>EX1.1.2</p>\";\necho count_nums(array(-1, 11, -11));\necho \"<p>EX1.1.3</p>\"\
    ;\necho count_nums(array(1, 1, 2));\n", "  $num = 0;\n  foreach ($arr as $value)\
    \ {\n    $sum = sum_digits($value);\n    if ($sum > 0) {\n      $num++;\n    }\n\
    \  }\n  return $num;\n}\n", "    $sum = 0;\n    foreach ($arr as $key => $value)\
    \ {\n        if ($value < 0) {\n            $value = -$value;\n        }\n   \
    \     while ($value != 0) {\n            $sum += $value % 10;\n            $value\
    \ = floor($value / 10);\n        }\n    }\n    echo $sum . \"\\n\";\n}\ncount_nums(array());\n\
    count_nums(array(-1, 11, -11));\ncount_nums(array(1, 1, 2));\n", "\t$count = 0;\n\
    \tfor ($i = 0; $i < count($arr); $i++) {\n\t\t$sum = 0;\n\t\t$num = strval($arr[$i]);\n\
    \t\t$len = strlen($num);\n\t\tfor ($j = 0; $j < $len; $j++) {\n\t\t\t$sum += $num[$j];\n\
    \t\t}\n\t\tif ($sum > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n\
    $arr = array(-1, 11, -11);\necho count_nums($arr);", "\tif (count($arr) == 0)\
    \ {\n\t\treturn 0;\n\t} else if (array_sum($arr) > 0) {\n\t\treturn count($arr);\n\
    \t} else {\n\t\treturn 1;\n\t}\n}", "  $count = 0;\n  for ($i = 0; $i < count($arr);\
    \ $i++) {\n    $sum = 0;\n    if ($arr[$i] < 0) {\n      $sum = $sum + $arr[$i]*-1;\n\
    \    } else {\n      $sum = $sum + $arr[$i];\n    }\n    while ($sum >= 10) {\n\
    \      $sum = $sum / 10;\n    }\n    if ($sum != 0) {\n      $count++;\n    }\n\
    \  }\n  return $count;\n}\n", "  $arrResult = array();\n  for ($i = 0; $i < count($arr);\
    \ $i++) {\n    $sum = 0;\n    $number = $arr[$i];\n    while ($number > 0) {\n\
    \      $sum += $number % 10;\n      $number = floor($number / 10);\n    }\n  \
    \  if ($sum > 0) {\n      array_push($arrResult, $arr[$i]);\n    }\n  }\n  return\
    \ count($arrResult);\n}\n$arr = array(1, 1, 2);\n$number = -123;\n$sum = 0;\n\
    while ($number > 0) {\n  $sum += $number % 10;\n  $number = floor($number / 10);\n\
    }\necho 'count_nums('.json_encode($arr).')'. '<br>';\necho 'count_nums('.json_encode($arr).')\
    \ => '. count_nums($arr). '<br>';\necho 'sum_nums('.json_encode($number).') =>\
    \ '. $sum. '<br>';\necho '<br>';", "    $result = 0;\n    foreach ($arr as $value)\
    \ {\n        $sum = 0;\n        $n = abs($value);\n        while ($n > 0) {\n\
    \            $sum += $n % 10;\n            $n = (int)($n / 10);\n        }\n \
    \       if ($sum != 0) {\n            $result++;\n        }\n    }\n    return\
    \ $result;\n}\n", "  $count = 0;\n  foreach ($arr as $number) {\n    if ($number\
    \ >= 0) {\n      $sum = array_sum(str_split($number));\n    } else {\n      $sum\
    \ = array_sum(str_split(abs($number)));\n      $sum = -$sum;\n    }\n    if ($sum\
    \ > 0) {\n      $count++;\n    }\n  }\n  return $count;\n}\necho count_nums(array());\n\
    echo \"\\n\";\necho count_nums(array(-1, 11, -11));\necho \"\\n\";\necho count_nums(array(1,\
    \ 1, 2));\necho \"\\n\";\n", "  $count = 0;\n  foreach ($arr as $v) {\n    $sum\
    \ = 0;\n    $sign = 1;\n    if ($v < 0) {\n      $sign = -1;\n      $v = -$v;\n\
    \    }\n    while ($v != 0) {\n      $sum += $v % 10;\n      $v = intval($v /\
    \ 10);\n    }\n    if ($sum * $sign > 0) {\n      $count++;\n    }\n  }\n  return\
    \ $count;\n}\n", "    $positive = array_filter($arr, function($x) {\n        return\
    \ $x > 0;\n    });\n    $positive_sum = array_map(function($x) {\n        return\
    \ array_sum(str_split($x));\n    }, $positive);\n    $positive_sum = array_filter($positive_sum,\
    \ function($x) {\n        return $x > 0;\n    });\n    return count($positive_sum);\n\
    }\necho '>>> ' . count_nums(array()) . \"\\n\";\necho '>>> ' . count_nums(array(-1,\
    \ 11, -11)) . \"\\n\";\necho '>>> ' . count_nums(array(1, 1, 2)) . \"\\n\";\n\n\
    echo '-' . \"\\n\";\n", "  $array = [];\n  $array = str_split(implode($arr));\n\
    \  return array_sum($array);\n}\n\nvar_dump(count_nums([]));\nvar_dump(count_nums([-1,\
    \ 11, -11]));\nvar_dump(count_nums([1, 1, 2]));", "\t$count = 0;\n\tforeach ($arr\
    \ as $a) {\n\t\t$sum = 0;\n\t\t$a = abs($a);\n\t\twhile ($a > 0) {\n\t\t\t$sum\
    \ += $a % 10;\n\t\t\t$a = (int)($a / 10);\n\t\t}\n\t\tif ($sum > 0) {\n\t\t\t\
    $count++;\n\t\t}\n\t}\n\treturn $count;\n}\n\n$arr = array(-1, 11, -11);\n$count\
    \ = count_nums($arr);\nprint_r($count);\n", "\n}\n", "    $count = 0;\n    foreach\
    \ ($arr as $x) {\n        $sum = 0;\n        while ($x != 0) {\n            $sum\
    \ += $x % 10;\n            $x = intval($x / 10);\n        }\n        if ($sum\
    \ > 0) $count++;\n    }\n    return $count;\n}\n", "    $sum = 0;\n    $positive\
    \ = 0;\n    $negative = 0;\n    foreach ($arr as $number) {\n        if ($number\
    \ < 0) {\n            $negative = substr($number, 1);\n            $sum += substr($number,\
    \ 1);\n        } else {\n            $positive = $number;\n            $sum +=\
    \ $number;\n        }\n    }\n    return $sum;\n}\nvar_dump(count_nums(array()));\n\
    var_dump(count_nums(array(-1, 11, -11)));\nvar_dump(count_nums(array(1, 1, 2)));\n",
  "  $result = 0;\n  foreach ($arr as $value) {\n    $sum = 0;\n    $temp = abs($value);\n\
    \    while ($temp > 0) {\n      $sum += $temp % 10;\n      $temp = intval($temp\
    \ / 10);\n    }\n    if ($sum > 0) {\n      $result++;\n    }\n  }\n  return $result;\n\
    }\n", "  return 0;\n}", "    $count = 0;\n    foreach ($arr as $num) {\n     \
    \   $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n       \
    \     $rem = $num % 10;\n            $sum += $rem;\n            $num = floor($num\
    \ / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}\n", "    $count = 0;\n    foreach ($arr as $val)\
    \ {\n        $temp = array_map('intval', str_split(abs($val)));\n        $sum\
    \ = array_sum($temp);\n        if ($sum > 0) {\n            $count++;\n      \
    \  }\n    }\n    return $count;\n}", "  $count = 0;\n  foreach ($arr as $n) {\n\
    \    if ($n < 0) {\n      $n = $n * -1;\n    }\n    $sum = 0;\n    while ($n >\
    \ 0) {\n      $sum += $n % 10;\n      $n = (int)($n / 10);\n    }\n    if ($sum\
    \ > 0) {\n      $count++;\n    }\n  }\n  return $count;\n}", "    $count = 0;\n\
    \    for ($i = 0; $i < count($arr); $i++) {\n        $sum = 0;\n        if ($arr[$i]\
    \ < 0) {\n            $sum += $arr[$i] * -1;\n        } else {\n            $sum\
    \ += $arr[$i];\n        }\n        while ($sum > 0) {\n            $digit = $sum\
    \ % 10;\n            $sum = floor($sum / 10);\n            $sum += $digit;\n \
    \       }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}\n\necho count_nums(array(1, 1, 2)) . \"<br>\";\necho count_nums(array())\
    \ . \"<br>\";\necho count_nums(array(-1, 11, -11)) . \"<br>\";", "\t\n}\n", " \
    \   if (empty($arr)) {\n        return 0;\n    }\n    $result = 0;\n    for ($i\
    \ = 0; $i < count($arr); $i++) {\n        $tmp = 0;\n        $val = abs($arr[$i]);\n\
    \        while ($val > 0) {\n            $tmp += $val % 10;\n            $val\
    \ = (int)($val / 10);\n        }\n        if ($tmp > 0) {\n            $result++;\n\
    \        }\n    }\n    return $result;\n}\n\n$arr = array(-1, 11, -11);\necho\
    \ count_nums($arr) . \"\\n\";\n$arr = array(1, 1, 2);\necho count_nums($arr) .\
    \ \"\\n\";\n$arr = array();\necho count_nums($arr) . \"\\n\";", "  $count = 0;\n\
    \  foreach ($arr as $number) {\n    $count += strlen(ltrim($number, '-')) > 1\
    \ ? 1 : 0;\n  }\n  return $count;\n}\n\n$input = array(1234, -43, 0, -1, 12, 4);\n\
    echo count_nums($input);", "    if(empty($arr)) {\n        return 0;\n    }\n\n\
    \    $count = 0;\n    foreach($arr as $num) {\n        $sum = sum_digits($num);\n\
    \        if($sum > 0) {\n            $count++;\n        }\n    }\n\n    return\
    \ $count;\n}\n", "    $nums = 0;\n    foreach ($arr as $num) {\n        if ($num\
    \ < 0) {\n            $num = $num * -1;\n        }\n        if ($num > 0) {\n\
    \            $sum = 0;\n            while ($num != 0) {\n                $sum\
    \ += $num % 10;\n                $num = floor($num / 10);\n            }\n   \
    \         if ($sum > 0) {\n                $nums++;\n            }\n        }\n\
    \    }\n    return $nums;\n}", '}', "\t$count = 0;\n\tforeach ($arr as $val) {\n\
    \t\t$sum = 0;\n\t\t$val = abs($val);\n\t\twhile ($val > 0) {\n\t\t\t$digit = $val\
    \ % 10;\n\t\t\t$sum += $digit;\n\t\t\t$val = floor($val / 10);\n\t\t}\n\t\tif\
    \ ($sum > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\necho count_nums(array()).\"\
    \\n\";\necho count_nums(array(-1, 11, -11)).\"\\n\";\necho count_nums(array(1,\
    \ 1, 2)).\"\\n\";", "\n}", '}', "\t$count = 0;\n\tforeach ($arr as $n) {\n\t\t\
    if ($n == 0) {\n\t\t\tcontinue;\n\t\t}\n\t\tif ($n < 0) {\n\t\t\t$n = $n * -1;\n\
    \t\t}\n\t\t$sum = 0;\n\t\twhile ($n != 0) {\n\t\t\t$sum += $n % 10;\n\t\t\t$n\
    \ = $n / 10;\n\t\t}\n\t\tif ($sum > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn\
    \ $count;\n}", "    if (empty($arr)) return 0;\n    $count = 0;\n    foreach ($arr\
    \ as $value) {\n        $sum = 0;\n        if ($value < 0) {\n            $sum\
    \ += $value[0];\n            $value = substr($value, 1);\n        }\n        while\
    \ ($value != 0) {\n            $sum += $value % 10;\n            $value = (int)($value\
    \ / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}\n\nprint count_nums(array()) . \"\\n\";\nprint count_nums(array(-1,\
    \ 11, -11)) . \"\\n\";\nprint count_nums(array(1, 1, 2)) . \"\\n\";", "    $count\
    \ = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n        foreach (str_split($num)\
    \ as $digit) {\n            $sum += $digit;\n        }\n        if ($sum > 0)\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}", "    if\
    \ (empty($arr)) {\n        return 0;\n    }\n    else {\n        $result = 0;\n\
    \        foreach ($arr as $val) {\n            $sum = 0;\n            while ($val\
    \ != 0) {\n                $sum += abs($val % 10);\n                $val = floor($val\
    \ / 10);\n            }\n            if ($sum > 0) {\n                $result++;\n\
    \            }\n        }\n        return $result;\n    }\n}", "    $positiveNums\
    \ = array_filter($arr, function($n) {\n        return $n > 0;\n    });\n    $positiveNums\
    \ = array_map(function($n) {\n        return str_split($n);\n    }, $positiveNums);\n\
    \    $positiveNums = array_map(function($n) {\n        return array_reduce($n,\
    \ function($acc, $curr) {\n            return $acc + $curr;\n        });\n   \
    \ }, $positiveNums);\n    $positiveNums = array_filter($positiveNums, function($n)\
    \ {\n        return $n > 0;\n    });\n    return count($positiveNums);\n}\nprint_r(count_nums(array(1,\
    \ 1, 2)));\n", "    // YOUR CODE HERE\n    return 0;\n}", "  $res = 0;\n  foreach\
    \ ($arr as $num) {\n    $abs = abs($num);\n    while ($abs > 0) {\n      $res\
    \ += $abs % 10;\n      $abs = intval($abs / 10);\n    }\n  }\n  return $res;\n\
    }\n\n$arr = array(1,1,2);\nprint(count_nums($arr));", "\t$count = 0;\n\tforeach\
    \ ($arr as $elem) {\n\t\t$str = strval($elem);\n\t\tif ($str[0] == '-') {\n\t\t\
    \t$str = substr($str, 1);\n\t\t}\n\t\tif (array_sum(str_split($str)) > 0) {\n\t\
    \t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n\necho count_nums(array(1, 2,\
    \ 3)) . \"\\n\";\necho count_nums(array(-1, 11, -11)) . \"\\n\";\necho count_nums(array(1,\
    \ 1, 2)) . \"\\n\";", "  // Your code here\n}\n\nclass TestCountNums extends PHPUnit_Framework_TestCase\
    \ {\n  public function testEmpty() {\n    $this->assertEquals(0, count_nums(array()));\n\
    \  }\n\n  public function testSingleNegative() {\n    $this->assertEquals(1, count_nums(array(-1)));\n\
    \  }\n\n  public function testSinglePositive() {\n    $this->assertEquals(1, count_nums(array(1)));\n\
    \  }\n\n  public function testSingle0() {\n    $this->assertEquals(0, count_nums(array(0)));\n\
    \  }\n\n  public function testMultiple() {\n    $this->assertEquals(1, count_nums(array(-1,\
    \ 11, -11)));\n    $this->assertEquals(3, count_nums(array(1, 1, 2)));\n  }\n}",
  "\t$count = 0;\n\t$sum = 0;\n\tfor ($i = 0; $i < count($arr); $i++) {\n\t\t$num\
    \ = $arr[$i];\n\t\twhile ($num) {\n\t\t\t$lastDigit = $num % 10;\n\t\t\t$sum +=\
    \ $lastDigit;\n\t\t\t$num = floor($num / 10);\n\t\t}\n\t\tif ($sum > 0) {\n\t\t\
    \t$count++;\n\t\t}\n\t\t$sum = 0;\n\t}\n\treturn $count;\n}\n\n$arr = array(1,\
    \ 1, 2);\n$arr1 = array(-1, 11, -11);\n$arr2 = array(0, -1, -11);\n$arr3 = array();\n\
    echo count_nums($arr);\necho '<br>';\necho count_nums($arr1);\necho '<br>';\n\
    echo count_nums($arr2);\necho '<br>';\necho count_nums($arr3);\necho '<br>';",
  "  $c = 0;\n  foreach ($arr as $v) {\n    $s = 0;\n    $v = abs($v);\n    while\
    \ ($v > 0) {\n      $s += $v % 10;\n      $v = (int)($v / 10);\n    }\n    if\
    \ ($s > 0) {\n      $c++;\n    }\n  }\n  return $c;\n}\necho count_nums(array());\n\
    echo count_nums(array(-1, 11, -11));\necho count_nums(array(1, 1, 2));", "\t$num\
    \ = 0;\n\tfor ($i = 0; $i < count($arr); $i++) {\n\t\t$number = $arr[$i];\n\t\t\
    $abs = abs($number);\n\t\t$sum = 0;\n\t\twhile ($abs > 0) {\n\t\t\t$sum += $abs\
    \ % 10;\n\t\t\t$abs = floor($abs / 10);\n\t\t}\n\t\tif ($sum > 0) {\n\t\t\t$num++;\n\
    \t\t}\n\t}\n\treturn $num;\n}\n$arr = array(-1, 11, -11);\necho count_nums($arr);",
  "    if (!is_array($arr)) return null;\n    if (empty($arr)) return 0;\n    $num\
    \ = 0;\n    foreach ($arr as $value) {\n        if (abs($value) < 10) {\n    \
    \        $sum = abs($value);\n        } else {\n            $sum = 0;\n      \
    \      while (abs($value) > 0) {\n                $sum += abs($value) % 10;\n\
    \                $value = abs($value) / 10;\n            }\n        }\n      \
    \  if ($sum > 0) {\n            $num++;\n        }\n    }\n    return $num;\n\
    }\n", "    if(!$arr) {\n        return 0;\n    }\n    $count = 0;\n    foreach($arr\
    \ as $num) {\n        $sum = 0;\n        $num = (string)$num;\n        for($i\
    \ = 0; $i < strlen($num); $i++) {\n            $sum += abs($num[$i]);\n      \
    \  }\n        if($sum) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}\necho count_nums(array(1, 1, 2));", "    $arr1 = [];\n    $c = 0;\n\
    \    foreach ($arr as $k => $v) {\n        $v = (string)$v;\n        if (preg_match('#^-#',\
    \ $v)) {\n            $v = str_replace('-', '', $v);\n            $v = (int)$v\
    \ * -1;\n        }\n        $v = (int)$v;\n        $arr1[] = $v;\n    }\n    $sum\
    \ = array_sum($arr1);\n    return $sum;\n}\n$a = [-10];\necho count_nums($a);",
  "\t// solution goes here\n\t$result = 0;\n\tforeach ($arr as $key => $value) {\n\
    \t\t$sum = 0;\n\t\twhile ($value != 0) {\n\t\t\t$sum += $value % 10;\n\t\t\t$value\
    \ = floor($value / 10);\n\t\t}\n\t\tif ($sum > 0) {\n\t\t\t$result++;\n\t\t}\n\
    \t}\n\treturn $result;\n}\n", "  if (empty($arr)) {\n    return 0;\n  }\n\n  $count\
    \ = 0;\n  foreach ($arr as $item) {\n    $count += sum_digits($item) > 0 ? 1 :\
    \ 0;\n  }\n\n  return $count;\n}\n", "  $count = 0;\n  $arr_len = count($arr);\n\
    \  for ($i = 0; $i < $arr_len; $i++) {\n    $sum = 0;\n    $num = $arr[$i];\n\
    \    while (abs($num) > 0) {\n      $sum += abs($num) % 10;\n      $num = floor(abs($num)\
    \ / 10);\n    }\n    if ($sum > 0) {\n      $count++;\n    }\n  }\n  return $count;\n\
    }", "    if (empty($arr)) return 0;\n    $count = 0;\n    for ($i = 0; $i < count($arr);\
    \ $i++) {\n        $count += abs($arr[$i]) % 10 + count_nums(array_map('intval',\
    \ str_split(abs($arr[$i]) / 10)));\n    }\n    return $count;\n}", "  $count =\
    \ 0;\n  foreach ($arr as $elem) {\n    if (digit_sum($elem) > 0) {\n      $count\
    \ += 1;\n    }\n  }\n  return $count;\n}\n", "  $count = 0;\n  foreach ($arr as\
    \ $num) {\n    $sum = 0;\n    if ($num < 0) {\n      $num = -1 * $num;\n     \
    \ $sum = -1;\n    }\n    while ($num > 0) {\n      $sum += $num % 10;\n      $num\
    \ = floor($num / 10);\n    }\n    if ($sum > 0) {\n      $count++;\n    }\n  }\n\
    \  return $count;\n}\n\n$arr = array(-1, 11, -11);\n$arr2 = array(1, 1, 2);\n\n\
    echo count_nums($arr) . PHP_EOL;\necho count_nums($arr2) . PHP_EOL;", "    $count\
    \ = 0;\n    foreach ($arr as $num) {\n        $num = abs($num);\n        while\
    \ ($num > 0) {\n            $count += $num % 10;\n            $num = (int)($num\
    \ / 10);\n        }\n    }\n    return $count;\n}\n$arr = array(1, 1, 2);\necho\
    \ count_nums($arr);\necho \"\\n\";\n", "  $sum = 0;\n  for ($i = 0; $i < count($arr);\
    \ $i++) {\n    $arr[$i] = abs($arr[$i]);\n    $sum += floor($arr[$i] / 10) + $arr[$i]\
    \ % 10;\n  }\n  return $sum;\n}\n", "\t\n}\n", "  // CODE HERE\n}\n", "\t$count\
    \ = 0;\n\tforeach ($arr as $int) {\n\t\tif ($int < 0) {\n\t\t\t$int = $int * -1;\n\
    \t\t}\n\t\tif (array_sum(str_split($int)) > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\
    \treturn $count;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

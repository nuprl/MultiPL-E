name: HumanEval_108_count_nums
language: php
prompt: "<?php\n// Write a function count_nums which takes an array of integers and\
  \ returns\n// the number of elements which has a sum of digits > 0.\n// If a number\
  \ is negative, then its first signed digit will be negative:\n// e.g. -123 has signed\
  \ digits -1, 2, and 3.\n// >>> count_nums(array())\n// 0\n// >>> count_nums(array(-1,\
  \ 11, -11))\n// 1\n// >>> count_nums(array(1, 1, 2))\n// 3\nfunction count_nums($arr)\
  \ {\n"
tests: "function candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
  \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0, 1,\
  \ 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
  \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
  \ (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"Test\
  \ failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
  Test failed!\"); }\n}\n\ntest();"
completions: ["    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n\
    \        $sign = 1;\n        if ($num < 0) {\n            $sign = -1;\n      \
    \      $num = $num * -1;\n        }\n        while ($num > 0) {\n            $sum\
    \ += $num % 10;\n            $num = floor($num / 10);\n        }\n        if ($sum\
    \ * $sign > 0) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\necho count_nums(array(1, 1, 2)) . PHP_EOL;\necho count_nums(array(-1, 11, -11))\
    \ . PHP_EOL;\necho count_nums(array()) . PHP_EOL;", "  $count = 0;\n  for ($i\
    \ = 0; $i < count($arr); $i++) {\n    $sum = 0;\n    if ($arr[$i] < 0) {\n   \
    \   $arr[$i] = -1 * $arr[$i];\n    }\n    while ($arr[$i] > 0) {\n      $sum +=\
    \ $arr[$i] % 10;\n      $arr[$i] = (int)($arr[$i] / 10);\n    }\n    if ($sum\
    \ > 0) {\n      $count++;\n    }\n  }\n  return $count;\n}", "\t$res = 0;\n\t\
    $len = count($arr);\n\tfor ($i = 0; $i < $len; $i++) {\n\t\t$sd = 0;\n\t\t$num\
    \ = $arr[$i];\n\t\twhile ($num != 0) {\n\t\t\t$sd += $num % 10;\n\t\t\t$num =\
    \ (int)($num / 10);\n\t\t}\n\t\tif ($sd > 0) {\n\t\t\t$res++;\n\t\t}\n\t}\n\t\
    return $res;\n}", "    $count = 0;\n    foreach ($arr as $item) {\n        $digits\
    \ = abs($item);\n        $digits_sum = 0;\n        while ($digits) {\n       \
    \     $digits_sum += $digits % 10;\n            $digits = (int)($digits / 10);\n\
    \        }\n        if ($digits_sum > 0) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}", "  $count = 0;\n  foreach ($arr as $key => $value)\
    \ {\n    if ($value < 0) {\n      $count += 1;\n    } else {\n      $count +=\
    \ count_digits($value);\n    }\n  }\n  return $count;\n}\n", "  $count = 0;\n\
    \  foreach ($arr as $v) {\n    if ($v < 0) {\n      $v = -$v;\n    }\n    while\
    \ ($v) {\n      $count += $v % 10;\n      $v /= 10;\n    }\n  }\n  return $count;\n\
    }\n", "    $cnt = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  while ($num != 0) {\n            $digit = $num % 10;\n            $sum += $digit;\n\
    \            $num = $num / 10;\n        }\n        if ($sum > 0) {\n         \
    \   $cnt += 1;\n        }\n    }\n    return $cnt;\n}\n", "  // BEGIN\n  $count\
    \ = 0;\n  foreach ($arr as $value) {\n    $sum = 0;\n    foreach (str_split($value)\
    \ as $digit) {\n      $sum += abs($digit);\n    }\n    if ($sum > 0) {\n     \
    \ $count++;\n    }\n  }\n  return $count;\n  // END\n}\n", "  // TODO: implement\
    \ this function\n}\n", "    $result = 0;\n    for ($i = 0; $i < count($arr); $i++)\
    \ {\n        $sum = 0;\n        $num = $arr[$i];\n        if ($num < 0) {\n  \
    \          $num = $num * -1;\n        }\n        while ($num > 0) {\n        \
    \    $sum += $num % 10;\n            $num = floor($num / 10);\n        }\n   \
    \     if ($sum > 0) {\n            $result++;\n        }\n    }\n    return $result;\n\
    }\n", "  // YOUR CODE HERE\n}", "    $num = 0;\n    foreach ($arr as $i) {\n \
    \       $sum = 0;\n        if ($i < 0) {\n            $sum = $i - $i - $i;\n \
    \       } else {\n            $sum = $i;\n        }\n        while ($sum >= 10)\
    \ {\n            $sum = 0;\n            while ($sum >= 10) {\n               \
    \ $sum = $sum % 10 + ($sum - $sum % 10) / 10;\n            }\n        }\n    \
    \    if ($sum > 0) {\n            $num = $num + 1;\n        }\n    }\n    return\
    \ $num;\n}\nprint count_nums(array(1, 1, 2)) . \"\\n\";\nprint count_nums(array(1,\
    \ 1, -2)) . \"\\n\";\nprint count_nums(array(1, 1, -12)) . \"\\n\";\nprint count_nums(array(1,\
    \ 1, -21)) . \"\\n\";\nprint count_nums(array(1, 1, -31)) . \"\\n\";\nprint count_nums(array(1,\
    \ 1, -41)) . \"\\n\";\nprint count_nums(array(1, 1, -51)) . \"\\n\";\nprint count_nums(array(1,\
    \ 1, -61)) . \"\\n\";\nprint count_nums(array(1, 1, -71)) . \"\\n\";\nprint count_nums(array(1,\
    \ 1, -81)) . \"\\n\";\nprint count_nums(array(1, 1, -91)) . \"\\n\";\nprint count_nums(array(1,\
    \ 1, -101)) . \"\\n\";\nprint count_nums(array(1, 1, -111)) . \"\\n\";\nprint\
    \ count_nums(array(1, 1, -121)) . \"\\n\";\nprint count_nums(array(1, 1, -131))\
    \ . \"\\n\";\nprint count_nums(array(1, 1, -141)) . \"\\n\";\nprint count_nums(array(1,\
    \ 1, -151)) . \"\\n\";\nprint count_nums(array(1, 1, -161)) . \"\\n\";\nprint\
    \ count_", "    $result = 0;\n    foreach ($arr as $val) {\n        $sum = 0;\n\
    \        if ($val < 0) {\n            $sum += substr($val, 0, 1);\n          \
    \  $val = substr($val, 1);\n        }\n        for ($i = 0; $i < strlen($val);\
    \ $i++) {\n            $sum += $val[$i];\n        }\n        if ($sum > 0) {\n\
    \            $result++;\n        }\n    }\n    return $result;\n}", "  $count\
    \ = 0;\n  for ($i = 0; $i < count($arr); $i++) {\n    $sum = 0;\n    $num = abs($arr[$i]);\n\
    \    while ($num > 0) {\n      $digit = $num % 10;\n      $sum += $digit;\n  \
    \    $num = (int)($num / 10);\n    }\n    if ($sum > 0) {\n      $count++;\n \
    \   }\n  }\n  return $count;\n}", "    if (count($arr) === 0) {\n        return\
    \ 0;\n    }\n    $arr2 = array_map(function($a) {\n        return str_split($a);\n\
    \    }, $arr);\n    $arr3 = array_map(function($a) {\n        return array_sum($a);\n\
    \    }, $arr2);\n    return count(array_filter($arr3, function($a) {\n       \
    \ return $a > 0;\n    }));\n}", "    $count = 0;\n    foreach ($arr as $elem)\
    \ {\n        $sum = 0;\n        $temp = $elem;\n        if ($elem < 0) {\n   \
    \         $temp = $elem * -1;\n        }\n        for ($i = 0; $i < strlen($temp);\
    \ $i++) {\n            $sum += $temp[$i];\n        }\n        if ($sum > 0) {\n\
    \            $count++;\n        }\n    }\n    return $count;\n}", "    $count\
    \ = 0;\n    foreach ($arr as $value) {\n        if ($value < 0) {\n          \
    \  $value = -$value;\n        }\n        $sum = 0;\n        while ($value > 0)\
    \ {\n            $sum += $value % 10;\n            $value = floor($value / 10);\n\
    \        }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}\n\nprint_r(count_nums(array()));\necho \"\\n\";\nprint_r(count_nums(array(-1,\
    \ 11, -11)));\necho \"\\n\";\nprint_r(count_nums(array(1, 1, 2)));\necho \"\\\
    n\";", "\t$total = 0;\n\tforeach ($arr as $value) {\n\t\tif ($value >= 0) {\n\t\
    \t\t$sum = array_sum(str_split($value));\n\t\t} else {\n\t\t\t$spl = str_split($value);\n\
    \t\t\t$negs = abs($spl[0]);\n\t\t\t$spl[0] = 0;\n\t\t\t$sum = $negs + array_sum($spl);\n\
    \t\t}\n\t\tif ($sum > 0) {\n\t\t\t$total += 1;\n\t\t}\n\t}\n\treturn $total;\n\
    }\n", "    return count(array_filter($arr, function($a) {\n        return array_sum(str_split(abs($a)))\
    \ > 0;\n    }));\n}\n", "  $count = 0;\n  foreach ($arr as $el) {\n    $sum =\
    \ 0;\n    foreach (str_split(abs($el)) as $digit) {\n      $sum += $digit;\n \
    \   }\n    if ($sum > 0) {\n      $count++;\n    }\n  }\n  return $count;\n}"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

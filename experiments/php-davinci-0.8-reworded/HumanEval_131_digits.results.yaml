language: php
name: HumanEval_131_digits
results:
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $s = strval($n);\n    $result = 1;\n    for ($i = 0; $i < strlen($s); $i++)\
    \ {\n        if ($s[$i] % 2 !== 0) {\n            $result *= $s[$i];\n       \
    \ }\n    }\n    return $result;\n}\n\necho digits(1) . \"\\n\";\necho digits(4)\
    \ . \"\\n\";\necho digits(235) . \"\\n\";\nfunction candidate(...$args) {\n  \
    \  return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe_x21p4p.php:36\n\
    Stack trace:\n#0 /tmp/tmpe_x21p4p.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpe_x21p4p.php\
    \ on line 36\n"
  timestamp: 1659824145
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ if ($n < 10) {\n        return $n;\n    } else {\n        $digit = $n % 10;\n\
    \        $rest_of_n = intval($n / 10);\n        if ($digit % 2 === 0) {\n    \
    \        return digits($rest_of_n);\n        } else {\n            return digits($rest_of_n)\
    \ * $digit;\n        }\n    }\n}\necho digits(1) . PHP_EOL;\necho digits(4) .\
    \ PHP_EOL;\necho digits(235) . PHP_EOL;\necho digits(57265) . PHP_EOL;\n\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n4\n30\n175\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2vyzdeub.php:40\n\
    Stack trace:\n#0 /tmp/tmp2vyzdeub.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp2vyzdeub.php\
    \ on line 40\n"
  timestamp: 1659824145
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $digits = str_split($n);\n    $product = 1;\n    foreach ($digits as $digit)\
    \ {\n        if ($digit % 2 != 0) {\n            $product *= $digit;\n       \
    \ }\n    }\n    return $product;\n}\necho digits(123);\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuerflgn5.php:33\n\
    Stack trace:\n#0 /tmp/tmpuerflgn5.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpuerflgn5.php\
    \ on line 33\n"
  timestamp: 1659824145
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $return = 0;\n    for ($i = 0; $i < strlen($n); $i++) {\n        if ($n[$i]\
    \ % 2 != 0) {\n            $return = $return * $n[$i];\n        }\n    }\n   \
    \ return $return;\n}\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmplgypg41l.php\
    \ on line 14\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplgypg41l.php:25\n\
    Stack trace:\n#0 /tmp/tmplgypg41l.php(34): test()\n#1 {main}\n  thrown in /tmp/tmplgypg41l.php\
    \ on line 25\n"
  timestamp: 1659824145
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n\t$str\
    \ = (string)$n;\n\t$result = 1;\n\tfor ($i = 0; $i < strlen($str); $i++) {\n\t\
    \tif ($str[$i] % 2 != 0) {\n\t\t\t$result *= $str[$i];\n\t\t}\n\t}\n\treturn $result;\n\
    }\necho digits(1);\necho \"\\n\";\necho digits(4);\necho \"\\n\";\necho digits(235);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq6c5exxb.php:38\n\
    Stack trace:\n#0 /tmp/tmpq6c5exxb.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpq6c5exxb.php\
    \ on line 38\n"
  timestamp: 1659824145
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ if ($n < 0) {\n        return 0;\n    }\n    $product = 1;\n    while ($n >\
    \ 0) {\n        $digit = $n % 10;\n        if ($digit % 2 != 0) {\n          \
    \  $product *= $digit;\n        }\n        $n = (int)($n / 10);\n    }\n    return\
    \ $product;\n}\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcy802lze.php:36\n\
    Stack trace:\n#0 /tmp/tmpcy802lze.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpcy802lze.php\
    \ on line 36\n"
  timestamp: 1659824145
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $count = 0;\n    while ($n > 0) {\n        $rem = $n % 10;\n        if ($rem\
    \ % 2 != 0) {\n            $count *= $rem;\n        }\n        $n = (int)($n /\
    \ 10);\n    }\n    return $count;\n}\nfunction candidate(...$args) {\n    return\
    \ digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(98765) !== 315) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe_5z_36j.php:27\n\
    Stack trace:\n#0 /tmp/tmpe_5z_36j.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpe_5z_36j.php\
    \ on line 27\n"
  timestamp: 1659824145
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n  $string\
    \ = strval($n);\n  $str_length = strlen($string);\n  $i = 0;\n  $product = 1;\n\
    \  while ($i < $str_length) {\n    $current_digit = substr($string, $i, 1);\n\
    \    if ($current_digit % 2 != 0) {\n      $product *= $current_digit;\n    }\n\
    \    $i++;\n  }\n  return $product;\n}\n\necho digits(1) . \"\\n\";\necho digits(4)\
    \ . \"\\n\";\necho digits(235) . \"\\n\";\n\nfunction candidate(...$args) {\n\
    \    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpafxny3h3.php:41\n\
    Stack trace:\n#0 /tmp/tmpafxny3h3.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpafxny3h3.php\
    \ on line 41\n"
  timestamp: 1659824145
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $result = 1;\n    while ($n != 0) {\n        $digit = $n % 10;\n        if ($digit\
    \ % 2 == 1) {\n            $result *= $digit;\n        }\n        $n = (int)($n\
    \ / 10);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n  \
    \  return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6unrpn1l.php:34\n\
    Stack trace:\n#0 /tmp/tmp6unrpn1l.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp6unrpn1l.php\
    \ on line 34\n"
  timestamp: 1659824145
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $digits = str_split($n);\n    $odds = array_filter($digits, function($digit)\
    \ {\n        return $digit % 2 == 1;\n    });\n    return empty($odds) ? 0 : array_product($odds);\n\
    }\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824145
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $sum = 1;\n    $n = (string)$n;\n    for ($i = 0; $i < strlen($n); $i++) {\n\
    \        if ((int)$n[$i] % 2 !== 0) {\n            $sum *= (int)$n[$i];\n    \
    \    }\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(98765) !== 315) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2r0qdq0j.php:33\n\
    Stack trace:\n#0 /tmp/tmp2r0qdq0j.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp2r0qdq0j.php\
    \ on line 33\n"
  timestamp: 1659824145
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n  $result\
    \ = 1;\n  for ($i = 0; $i < strlen($n); $i++) {\n    if ($n[$i] % 2 !== 0) {\n\
    \      $result *= $n[$i];\n    }\n  }\n  return $result == 1 ? 0 : $result;\n\
    }\n\n$n = 1204;\necho digits($n);\nfunction candidate(...$args) {\n    return\
    \ digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(98765) !== 315) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmpl7wv8071.php\
    \ on line 14\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmpl7wv8071.php on line 14\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmpl7wv8071.php on line 14\n\nWarning: Trying to access\
    \ array offset on value of type int in /tmp/tmpl7wv8071.php on line 14\n0\nWarning:\
    \ Trying to access array offset on value of type int in /tmp/tmpl7wv8071.php on\
    \ line 14\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl7wv8071.php:28\n\
    Stack trace:\n#0 /tmp/tmpl7wv8071.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpl7wv8071.php\
    \ on line 28\n"
  timestamp: 1659824145
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $list = str_split($n);\n    $sum = 1;\n    foreach ($list as $number) {\n  \
    \      if ($number % 2 === 1) {\n            $sum *= $number;\n        }\n   \
    \ }\n    return $sum;\n}\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcubtl865.php:32\n\
    Stack trace:\n#0 /tmp/tmpcubtl865.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpcubtl865.php\
    \ on line 32\n"
  timestamp: 1659824145
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n\tif\
    \ ($n < 0) {\n\t\treturn false;\n\t}\n\tif ($n < 10) {\n\t\treturn $n % 2 == 1\
    \ ? $n : 0;\n\t}\n\n\treturn digits($n / 10) * ($n % 10);\n}\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 5.4 to int loses precision\
    \ in /tmp/tmpkb0w76d1.php on line 16\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpkb0w76d1.php:28\nStack trace:\n#0 /tmp/tmpkb0w76d1.php(36):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpkb0w76d1.php on line 28\n"
  timestamp: 1659824145
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n\tif($n\
    \ < 0){\n\t\treturn 'error';\n\t}\n\t$result = 1;\n\t$arr = str_split($n);\n\t\
    foreach($arr as $value){\n\t\tif( ($value % 2) !== 0 ){\n\t\t\t$result *= $value;\n\
    \t\t}\n\t}\n\treturn $result;\n}\necho digits(235);\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy2ey5ahn.php:36\n\
    Stack trace:\n#0 /tmp/tmpy2ey5ahn.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpy2ey5ahn.php\
    \ on line 36\n"
  timestamp: 1659824145
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ if($n < 0) {\n        return 'Please enter a positive integer';\n    }\n   \
    \ $n = (string)$n;\n    $numArr = str_split($n);\n    $result = 1;\n    foreach($numArr\
    \ as $num) {\n        if($num % 2 !== 0) {\n            $result *= $num;\n   \
    \     }\n    }\n    if($result === 1) {\n        return 0;\n    }\n    return\
    \ $result;\n}\necho digits(1).PHP_EOL;\necho digits(235).PHP_EOL;\necho digits(4).PHP_EOL;\n\
    echo digits(-67).PHP_EOL;\necho digits(42342315).PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\n15\n0\nPlease enter a positive integer\n45\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpvvu9r1mq.php:40\nStack trace:\n#0 /tmp/tmpvvu9r1mq.php(47):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpvvu9r1mq.php on line 40\n"
  timestamp: 1659824145
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n\t$result\
    \ = 1;\n\t$nStr = strval($n);\n\tfor ($i = 0; $i < strlen($nStr); $i++) {\n\t\t\
    if ($nStr[$i] % 2 !== 0) {\n\t\t\t$result *= $nStr[$i];\n\t\t}\n\t}\n\tif ($result\
    \ === 1) {\n\t\treturn 0;\n\t}\n\treturn $result;\n}\n\necho digits(1);\necho\
    \ PHP_EOL;\necho digits(4);\necho PHP_EOL;\necho digits(235);\necho PHP_EOL;\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\n0\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0zheufsz.php:38\n\
    Stack trace:\n#0 /tmp/tmp0zheufsz.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp0zheufsz.php\
    \ on line 38\n"
  timestamp: 1659824145
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n  $product\
    \ = 1;\n  for ($i = 0; $i < strlen($n); $i++) {\n    if ($n[$i] % 2 == 1) {\n\
    \      $product *= $n[$i];\n    }\n  }\n  return $product;\n}\necho digits(1);\n\
    echo \"\\n\";\necho digits(4);\necho \"\\n\";\necho digits(235);\necho \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmpvbxr6mun.php\
    \ on line 14\n1\n\nWarning: Trying to access array offset on value of type int\
    \ in /tmp/tmpvbxr6mun.php on line 14\n1\n\nWarning: Trying to access array offset\
    \ on value of type int in /tmp/tmpvbxr6mun.php on line 14\n\nWarning: Trying to\
    \ access array offset on value of type int in /tmp/tmpvbxr6mun.php on line 14\n\
    \nWarning: Trying to access array offset on value of type int in /tmp/tmpvbxr6mun.php\
    \ on line 14\n1\n\nWarning: Trying to access array offset on value of type int\
    \ in /tmp/tmpvbxr6mun.php on line 14\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpvbxr6mun.php:31\nStack trace:\n#0 /tmp/tmpvbxr6mun.php(40):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpvbxr6mun.php on line 31\n"
  timestamp: 1659824145
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n  $even\
    \ = 0;\n  $odd = 1;\n  $array = str_split($n);\n  foreach ($array as $value) {\n\
    \    if ($value % 2 == 0) {\n      $even += $value;\n    } else {\n      $odd\
    \ *= $value;\n    }\n  }\n  if ($even > 0) {\n    return 0;\n  } else {\n    return\
    \ $odd;\n  }\n}\n\necho digits(4);\nfunction candidate(...$args) {\n    return\
    \ digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(98765) !== 315) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphpsvtil6.php:36\n\
    Stack trace:\n#0 /tmp/tmphpsvtil6.php(44): test()\n#1 {main}\n  thrown in /tmp/tmphpsvtil6.php\
    \ on line 36\n"
  timestamp: 1659824145
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n  $str\
    \ = \"$n\";\n  $product = 1;\n  for ($i = 0; $i < strlen($str); $i++) {\n    $digit\
    \ = intval($str[$i]);\n    if ($digit % 2 !== 0) {\n      $product *= $digit;\n\
    \    }\n  }\n  return $product;\n}\nfunction candidate(...$args) {\n    return\
    \ digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(98765) !== 315) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvbo9nr_f.php:33\n\
    Stack trace:\n#0 /tmp/tmpvbo9nr_f.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpvbo9nr_f.php\
    \ on line 33\n"
  timestamp: 1659824145
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n\t$sum\
    \ = 1;\n\t$n = (string)$n;\n\tfor ($i = 0; $i < strlen($n); $i++) {\n\t\tif (is_numeric($n[$i])\
    \ && $n[$i] % 2 != 0) {\n\t\t\t$sum *= $n[$i];\n\t\t}\n\t}\n\treturn $sum;\n}\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1gz4s42c.php:32\n\
    Stack trace:\n#0 /tmp/tmp1gz4s42c.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp1gz4s42c.php\
    \ on line 32\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n  $product\
    \ = 1;\n  while ($n > 0) {\n    $current = $n % 10;\n    if ($current % 2 != 0)\
    \ {\n      $product *= $current;\n    }\n    $n = floor($n / 10);\n  }\n  return\
    \ $product;\n}\necho digits(235) . PHP_EOL;\n\nfunction candidate(...$args) {\n\
    \    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp835c51xs.php:35\n\
    Stack trace:\n#0 /tmp/tmp835c51xs.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp835c51xs.php\
    \ on line 35\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n  $result\
    \ = 1;\n  while ($n != 0) {\n    $digit = $n % 10;\n    if ($digit % 2 != 0) {\n\
    \      $result *= $digit;\n    }\n    $n = ($n - $digit) / 10;\n  }\n  return\
    \ $result;\n}\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo80u79a3.php:33\n\
    Stack trace:\n#0 /tmp/tmpo80u79a3.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpo80u79a3.php\
    \ on line 33\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n  $digits\
    \ = str_split($n);\n  $product = 1;\n  foreach ($digits as $digit) {\n    if ($digit\
    \ % 2 != 0) {\n      $product *= $digit;\n    }\n  }\n  return $product;\n}\n\n\
    echo \"digits(1) === 1\\n\";\necho digits(1) === 1 ? \"PASS\\n\" : \"FAIL\\n\"\
    ;\necho \"digits(4) === 0\\n\";\necho digits(4) === 0 ? \"PASS\\n\" : \"FAIL\\\
    n\";\necho \"digits(235) === 15\\n\";\necho digits(235) === 15 ? \"PASS\\n\" :\
    \ \"FAIL\\n\";\necho \"digits(4829) === 0\\n\";\necho digits(4829) === 0 ? \"\
    PASS\\n\" : \"FAIL\\n\";\necho \"digits(123456) === 120\\n\";\necho digits(123456)\
    \ === 120 ? \"PASS\\n\" : \"FAIL\\n\";\nfunction candidate(...$args) {\n    return\
    \ digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(98765) !== 315) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "digits(1) === 1\nPASS\ndigits(4) === 0\nFAIL\ndigits(235) === 15\nPASS\n\
    digits(4829) === 0\nFAIL\ndigits(123456) === 120\nFAIL\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpn9dllqdc.php:43\nStack trace:\n#0 /tmp/tmpn9dllqdc.php(46):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpn9dllqdc.php on line 43\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n  $total\
    \ = 1;\n  $n = str_split($n);\n  foreach ($n as $x) {\n    if (($x % 2) !== 0)\
    \ {\n      $total *= $x;\n    }\n  }\n  return $total;\n}\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjibgrcs7.php:33\n\
    Stack trace:\n#0 /tmp/tmpjibgrcs7.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpjibgrcs7.php\
    \ on line 33\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n\n}\n\
    \nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0p2tpzef.php:20\n\
    Stack trace:\n#0 /tmp/tmp0p2tpzef.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp0p2tpzef.php\
    \ on line 20\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n  if\
    \ ($n <= 0) {\n    return 0;\n  }\n  $product = 1;\n  while ($n > 0) {\n    $digit\
    \ = $n % 10;\n    if ($digit % 2 !== 0) {\n      $product *= $digit;\n    }\n\
    \    $n = (int)($n / 10);\n  }\n  return $product;\n}\necho digits(1) . \"\\n\"\
    ;\necho digits(4) . \"\\n\";\necho digits(235) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgeygza7r.php:39\n\
    Stack trace:\n#0 /tmp/tmpgeygza7r.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpgeygza7r.php\
    \ on line 39\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n  $output\
    \ = 0;\n  if ($n > 0) {\n    $output = 1;\n    $digits = str_split(strval($n));\n\
    \    foreach ($digits as $digit) {\n      if ($digit % 2 === 1) {\n        $output\
    \ *= $digit;\n      }\n    }\n  }\n  return $output;\n}\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx1mmue2r.php:35\n\
    Stack trace:\n#0 /tmp/tmpx1mmue2r.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpx1mmue2r.php\
    \ on line 35\n"
  timestamp: 1660028576
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $odds = array_filter(str_split($n), function($x) {\n        return $x % 2 !==\
    \ 0;\n    });\n    if (count($odds) === 0) {\n        return 0;\n    }\n    return\
    \ array_product($odds);\n}\n\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n\t$odd\
    \ = 1;\n\t$num = $n;\n\twhile ($num > 0) {\n\t\t$digit = $num % 10;\n\t\tif ($digit\
    \ % 2 != 0) {\n\t\t\t$odd *= $digit;\n\t\t}\n\t\t$num = ($num - $digit) / 10;\n\
    \t}\n\treturn $odd;\n}\necho \"\\n\";\necho digits(235);\necho \"\\n\";\necho\
    \ digits(4);\necho \"\\n\";\necho digits(1);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\n15\n1\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmr983w2y.php:41\n\
    Stack trace:\n#0 /tmp/tmpmr983w2y.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpmr983w2y.php\
    \ on line 41\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $digits = [];\n    $product = 1;\n    while ($n > 0) {\n        $num = $n %\
    \ 10;\n        if ($num % 2 == 1) {\n            $product *= $num;\n        }\n\
    \        $n = floor($n / 10);\n    }\n    return $product;\n}\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgz5c356h.php:34\n\
    Stack trace:\n#0 /tmp/tmpgz5c356h.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpgz5c356h.php\
    \ on line 34\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $odds = 1;\n    $digits = str_split($n);\n    foreach ($digits as $digit) {\n\
    \        if ($digit % 2 === 1) {\n            $odds *= $digit;\n        }\n  \
    \  }\n    return $odds;\n}\n\necho digits(1);\necho \"\\n\";\necho digits(4);\n\
    echo \"\\n\";\necho digits(235);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphct95gcw.php:39\n\
    Stack trace:\n#0 /tmp/tmphct95gcw.php(42): test()\n#1 {main}\n  thrown in /tmp/tmphct95gcw.php\
    \ on line 39\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $arr = array_map(function($v) {\n        return ($v % 2 !== 0) ? $v : 0;\n \
    \   }, str_split($n));\n    return array_product($arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn0se9dqk.php:24\n\
    Stack trace:\n#0 /tmp/tmpn0se9dqk.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpn0se9dqk.php\
    \ on line 24\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $str = (string)$n;\n    $total = 1;\n    for ($i = 0; $i < strlen($str); $i++)\
    \ {\n        if ($str[$i] % 2 != 0) {\n            $total *= $str[$i];\n     \
    \   }\n    }\n    return $total;\n}\n\nfunction candidate(...$args) {\n    return\
    \ digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(98765) !== 315) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpynxue94e.php:33\n\
    Stack trace:\n#0 /tmp/tmpynxue94e.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpynxue94e.php\
    \ on line 33\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ if($n < 0) return 0;\n    $product = 1;\n    while($n) {\n        $remainder\
    \ = $n % 10;\n        if($remainder % 2 !== 0) {\n            $product *= $remainder;\n\
    \        }\n        $n = intval($n / 10);\n    }\n    return $product;\n}\n\n\
    var_dump(digits(1));\nvar_dump(digits(4));\nvar_dump(digits(235314));\nvar_dump(digits(0));\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "int(1)\nint(1)\nint(45)\nint(1)\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp2_ttugn3.php:39\nStack trace:\n#0 /tmp/tmp2_ttugn3.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp2_ttugn3.php on line 39\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n\n}\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4mnyql4g.php:19\n\
    Stack trace:\n#0 /tmp/tmp4mnyql4g.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp4mnyql4g.php\
    \ on line 19\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n  $prod\
    \ = 1;\n  $n = (string)$n;\n  for ($i = 0; $i < strlen($n); $i++) {\n    if ($n[$i]\
    \ % 2 !== 0) {\n      $prod *= $n[$i];\n    }\n  }\n  return $prod;\n}\n\necho\
    \ digits(1) . \"\\n\";\necho digits(4) . \"\\n\";\necho digits(235) . \"\\n\"\
    ;\n\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnk2pyva_.php:37\n\
    Stack trace:\n#0 /tmp/tmpnk2pyva_.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpnk2pyva_.php\
    \ on line 37\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n  $answer\
    \ = $n;\n  while($answer > 10) {\n    $answer = $answer / 10;\n  }\n  return $answer;\n\
    }\n\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpestwxa07.php:25\n\
    Stack trace:\n#0 /tmp/tmpestwxa07.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpestwxa07.php\
    \ on line 25\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $prod = 1;\n    while ($n != 0) {\n        $temp = $n % 10;\n        if ($temp\
    \ % 2 == 1) {\n            $prod *= $temp;\n        }\n        $n = (int)($n /\
    \ 10);\n    }\n    return $prod;\n}\necho digits(1) . \"\\n\";\necho digits(4)\
    \ . \"\\n\";\necho digits(235) . \"\\n\";\nfunction candidate(...$args) {\n  \
    \  return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpffv7frs9.php:36\n\
    Stack trace:\n#0 /tmp/tmpffv7frs9.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpffv7frs9.php\
    \ on line 36\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $product = 1;\n    for ($i = 0; $i < strlen($n); $i++) {\n        if ($n[$i]\
    \ % 2 == 1) {\n            $product *= $n[$i];\n        }\n    }\n    return $product;\n\
    }\necho digits(1);\necho \"\\n\";\necho digits(4);\necho \"\\n\";\necho digits(235);\n\
    echo \"\\n\";\n\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmpxqjc1cl_.php\
    \ on line 14\n1\n\nWarning: Trying to access array offset on value of type int\
    \ in /tmp/tmpxqjc1cl_.php on line 14\n1\n\nWarning: Trying to access array offset\
    \ on value of type int in /tmp/tmpxqjc1cl_.php on line 14\n\nWarning: Trying to\
    \ access array offset on value of type int in /tmp/tmpxqjc1cl_.php on line 14\n\
    \nWarning: Trying to access array offset on value of type int in /tmp/tmpxqjc1cl_.php\
    \ on line 14\n1\n\nWarning: Trying to access array offset on value of type int\
    \ in /tmp/tmpxqjc1cl_.php on line 14\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpxqjc1cl_.php:32\nStack trace:\n#0 /tmp/tmpxqjc1cl_.php(41):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpxqjc1cl_.php on line 32\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $num = str_split($n);\n    foreach ($num as $value) {\n        if ($value %\
    \ 2 !== 0) {\n            $array[] = $value;\n        }\n    }\n    $result =\
    \ array_product($array);\n    return $result;\n}\necho digits(1) . PHP_EOL;\n\
    echo digits(4) . PHP_EOL;\necho digits(235) . PHP_EOL;\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\nWarning: Undefined variable $array in /tmp/tmp3zf4h70p.php on line\
    \ 18\n\nFatal error: Uncaught TypeError: array_product(): Argument #1 ($array)\
    \ must be of type array, null given in /tmp/tmp3zf4h70p.php:18\nStack trace:\n\
    #0 /tmp/tmp3zf4h70p.php(18): array_product(NULL)\n#1 /tmp/tmp3zf4h70p.php(22):\
    \ digits(4)\n#2 {main}\n  thrown in /tmp/tmp3zf4h70p.php on line 18\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n  $product\
    \ = 1;\n  $n_string = strval($n);\n  $n_array = str_split($n_string);\n  foreach\
    \ ($n_array as $value) {\n    if ($value % 2 === 1) {\n      $product *= $value;\n\
    \    }\n  }\n  return $product;\n}\nfunction candidate(...$args) {\n    return\
    \ digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(98765) !== 315) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfy_t7by1.php:33\n\
    Stack trace:\n#0 /tmp/tmpfy_t7by1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpfy_t7by1.php\
    \ on line 33\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n\n}\n\
    \nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0p2tpzef.php:20\n\
    Stack trace:\n#0 /tmp/tmp0p2tpzef.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp0p2tpzef.php\
    \ on line 20\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $res = 1;\n    while ($n > 0) {\n        $x = $n % 10;\n        if ($x % 2 !=\
    \ 0) {\n            $res *= $x;\n        }\n        $n = ($n - $x) / 10;\n   \
    \ }\n    return $res;\n}\necho digits(12356789);\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "945\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkzi2s0ck.php:34\n\
    Stack trace:\n#0 /tmp/tmpkzi2s0ck.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpkzi2s0ck.php\
    \ on line 34\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $odd = 0;\n    $even = 0;\n    if ($n < 10) {\n        if ($n % 2 == 0) {\n\
    \            return 0;\n        } else {\n            return $n;\n        }\n\
    \    }\n    $number = str_split($n);\n    foreach ($number as $i) {\n        if\
    \ ($i % 2 == 0) {\n            $even += $i;\n        } else {\n            $odd\
    \ += $i;\n        }\n    }\n    if ($even > 0) {\n        return 0;\n    } else\
    \ {\n        return $odd;\n    }\n}\nfunction candidate(...$args) {\n    return\
    \ digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(98765) !== 315) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzcjp9b06.php:41\n\
    Stack trace:\n#0 /tmp/tmpzcjp9b06.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpzcjp9b06.php\
    \ on line 41\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n  $digits\
    \ = str_split($n);\n  $prod = 1;\n  foreach ($digits as $d) {\n    if ($d % 2\
    \ != 0) {\n      $prod *= $d;\n    }\n  }\n  return $prod;\n}\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp281mclio.php:32\n\
    Stack trace:\n#0 /tmp/tmp281mclio.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp281mclio.php\
    \ on line 32\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $result = 1;\n    while ($n > 0) {\n        $digit = $n % 10;\n        if ($digit\
    \ % 2 == 1) {\n            $result *= $digit;\n        }\n        $n = floor($n\
    \ / 10);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n  \
    \  return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp20mzxb28.php:34\n\
    Stack trace:\n#0 /tmp/tmp20mzxb28.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp20mzxb28.php\
    \ on line 34\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $product = 1;\n    while ($n > 0) {\n        $digit = $n % 10;\n        if ($digit\
    \ % 2 == 1) {\n            $product *= $digit;\n        }\n        $n = (int)($n\
    \ / 10);\n    }\n    return $product;\n}\nfunction candidate(...$args) {\n   \
    \ return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq7dre8lu.php:33\n\
    Stack trace:\n#0 /tmp/tmpq7dre8lu.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpq7dre8lu.php\
    \ on line 33\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n  $prod\
    \ = 1;\n  $len = strlen($n);\n  for ($i = 0; $i < $len; $i++) {\n    $digit =\
    \ substr($n, $i, 1);\n    if ($digit % 2 == 1) {\n      $prod *= $digit;\n   \
    \ }\n  }\n  return $prod;\n}\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnj2_eesn.php:33\n\
    Stack trace:\n#0 /tmp/tmpnj2_eesn.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpnj2_eesn.php\
    \ on line 33\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $product = 1;\n    $digits = explode(\"\", $n);\n    foreach ($digits as $digit)\
    \ {\n        if ($digit % 2 !== 0) {\n            $product *= $digit;\n      \
    \  }\n    }\n    return $product;\n}\necho digits(1) . PHP_EOL;\necho digits(4)\
    \ . PHP_EOL;\necho digits(235) . PHP_EOL;\n\nfunction candidate(...$args) {\n\
    \    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught ValueError: explode(): Argument #1 ($separator)\
    \ cannot be empty in /tmp/tmpjg78aowh.php:13\nStack trace:\n#0 /tmp/tmpjg78aowh.php(13):\
    \ explode('', '1')\n#1 /tmp/tmpjg78aowh.php(21): digits(1)\n#2 {main}\n  thrown\
    \ in /tmp/tmpjg78aowh.php on line 13\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $odd = 1;\n    while ($n >= 1) {\n        $digit = $n % 10;\n        if ($digit\
    \ % 2 != 0) {\n            $odd *= $digit;\n        }\n        $n = ($n - $digit)\
    \ / 10;\n    }\n    return $odd;\n}\nfunction candidate(...$args) {\n    return\
    \ digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(98765) !== 315) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfclc7_2f.php:33\n\
    Stack trace:\n#0 /tmp/tmpfclc7_2f.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpfclc7_2f.php\
    \ on line 33\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n\t$result\
    \ = 1;\n\t$n = (string)$n;\n\tfor ($i = 0; $i < strlen($n); $i++) {\n\t\tif ($n[$i]\
    \ % 2 === 1) {\n\t\t\t$result *= $n[$i];\n\t\t}\n\t}\n\treturn $result;\n}\necho\
    \ digits(1523);\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp433hrnx5.php:33\n\
    Stack trace:\n#0 /tmp/tmp433hrnx5.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp433hrnx5.php\
    \ on line 33\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $digits = str_split($n);\n    $result = 1;\n    foreach ($digits as $digit)\
    \ {\n        if ($digit % 2 == 1) {\n            $result *= $digit;\n        }\n\
    \    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq9_c_ml4.php:32\n\
    Stack trace:\n#0 /tmp/tmpq9_c_ml4.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpq9_c_ml4.php\
    \ on line 32\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n  if($n\
    \ > 0) {\n    $newN = $n;\n    $arr = [];\n    $odd = 1;\n    while($newN > 0)\
    \ {\n      $remainder = $newN % 10;\n      if($remainder % 2 !== 0) {\n      \
    \  $arr[] = $remainder;\n      } else {\n        $odd = 0;\n      }\n      $newN\
    \ = (int)($newN / 10);\n    }\n    if($odd === 1) {\n      $total = array_product($arr);\n\
    \      return $total;\n    } else {\n      return 0;\n    }\n  } else {\n    return\
    \ 'Please enter a positive integer';\n  }\n}\nfunction candidate(...$args) {\n\
    \    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps4u33q4w.php:41\n\
    Stack trace:\n#0 /tmp/tmps4u33q4w.php(49): test()\n#1 {main}\n  thrown in /tmp/tmps4u33q4w.php\
    \ on line 41\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $n_string = (string)$n;\n    $result = 1;\n    for ($i = 0; $i < strlen($n_string);\
    \ $i++) {\n        if ($n_string[$i] % 2 == 1) {\n            $result *= $n_string[$i];\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7mi5q7qu.php:33\n\
    Stack trace:\n#0 /tmp/tmp7mi5q7qu.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp7mi5q7qu.php\
    \ on line 33\n"
  timestamp: 1660028576
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $numbers = str_split($n);\n    $odds = [];\n    foreach ($numbers as $num) {\n\
    \        if ($num % 2 != 0) {\n            $odds[] = $num;\n        }\n    }\n\
    \    if (count($odds) == 0) {\n        return 0;\n    }\n    return array_product($odds);\n\
    }\necho digits(1) . PHP_EOL;\necho digits(4) . PHP_EOL;\necho digits(235) . PHP_EOL;\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    0

    15

    '
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ // your code here\n}\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp72cdy7ox.php:19\n\
    Stack trace:\n#0 /tmp/tmp72cdy7ox.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp72cdy7ox.php\
    \ on line 19\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n  $x\
    \ = 0;\n  $ans = 1;\n  while ($n > 0) {\n    $x = $n % 10;\n    if ($x % 2 !=\
    \ 0) {\n      $ans *= $x;\n    }\n    $n = (int)($n / 10);\n  }\n  return $ans;\n\
    }\n\necho digits(1) . \"\\n\";\necho digits(4) . \"\\n\";\necho digits(235) .\
    \ \"\\n\";\n\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf5if9kei.php:39\n\
    Stack trace:\n#0 /tmp/tmpf5if9kei.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpf5if9kei.php\
    \ on line 39\n"
  timestamp: 1660028576
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $arr = str_split($n);\n    $odds = array_filter($arr, function($item) {\n  \
    \      return $item % 2 != 0;\n    });\n    if(count($odds) < 1) {\n        return\
    \ 0;\n    }\n    return array_product($odds);\n}\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $n = (string)$n;\n    $result = 1;\n    for ($i = 0; $i < strlen($n); $i++)\
    \ {\n        if ($n[$i] % 2 != 0) {\n            $result *= $n[$i];\n        }\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq5nsdazh.php:33\n\
    Stack trace:\n#0 /tmp/tmpq5nsdazh.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpq5nsdazh.php\
    \ on line 33\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n  $odds\
    \ = 1;\n  for ($i = 0; $i < strlen($n); $i++){\n    if ($n[$i] % 2 != 0){\n  \
    \    $odds *= $n[$i];\n    }\n  }\n  return $odds;\n}\n\necho digits(235);\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmp2nhzl0u4.php\
    \ on line 14\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmp2nhzl0u4.php on line 14\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmp2nhzl0u4.php on line 14\n1\nWarning: Trying to\
    \ access array offset on value of type int in /tmp/tmp2nhzl0u4.php on line 14\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2nhzl0u4.php:27\nStack\
    \ trace:\n#0 /tmp/tmp2nhzl0u4.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp2nhzl0u4.php\
    \ on line 27\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n\t$prod\
    \ = 1;\n\twhile ($n > 0) {\n\t\t$digit = $n % 10;\n\t\tif ($digit % 2 != 0) {\n\
    \t\t\t$prod *= $digit;\n\t\t}\n\t\t$n = floor($n / 10);\n\t}\n\treturn $prod;\n\
    }\n\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaq0fxz4p.php:34\n\
    Stack trace:\n#0 /tmp/tmpaq0fxz4p.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpaq0fxz4p.php\
    \ on line 34\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n\t$str\
    \ = (string)$n;\n\t$len = strlen($str);\n\t$product = 1;\n\tfor ($i = 0; $i <\
    \ $len; $i++) {\n\t\tif ($str[$i] % 2 === 1) {\n\t\t\t$product *= $str[$i];\n\t\
    \t}\n\t}\n\treturn $product;\n}\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2w3zae0e.php:33\n\
    Stack trace:\n#0 /tmp/tmp2w3zae0e.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp2w3zae0e.php\
    \ on line 33\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n  $digits\
    \ = [];\n  $result = 1;\n  while($n > 0) {\n    $digits[] = $n % 10;\n    $n =\
    \ floor($n / 10);\n  }\n  foreach($digits as $digit) {\n    if($digit % 2 != 0)\
    \ {\n      $result *= $digit;\n    }\n  }\n  return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwhkz1886.php:36\n\
    Stack trace:\n#0 /tmp/tmpwhkz1886.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpwhkz1886.php\
    \ on line 36\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n  $product\
    \ = 1;\n  $n_array = str_split($n);\n  foreach ($n_array as $num) {\n    if ($num\
    \ % 2 == 1) {\n      $product *= $num;\n    }\n  }\n  return $product;\n}\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzjbdzqzv.php:32\n\
    Stack trace:\n#0 /tmp/tmpzjbdzqzv.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpzjbdzqzv.php\
    \ on line 32\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $str_n = (string)$n;\n    $len = strlen($str_n);\n    $sum = 1;\n    for ($i\
    \ = 0; $i < $len; $i++) {\n        $n_digit = (int)$str_n[$i];\n        if ($n_digit\
    \ % 2 == 1) {\n            $sum *= $n_digit;\n        }\n    }\n    return $sum;\n\
    }\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp627rsji2.php:34\n\
    Stack trace:\n#0 /tmp/tmp627rsji2.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp627rsji2.php\
    \ on line 34\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n  $n\
    \ = (string)$n;\n  $result = 1;\n  for ($i = 0; $i < strlen($n); $i++) {\n   \
    \ if ((int)$n[$i] % 2 === 1) {\n      $result *= (int)$n[$i];\n    }\n  }\n  return\
    \ $result;\n}\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeqv32kxa.php:32\n\
    Stack trace:\n#0 /tmp/tmpeqv32kxa.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpeqv32kxa.php\
    \ on line 32\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n\t$array\
    \ = str_split($n);\n\t$product = 0;\n\tforeach ($array as $key => $val) {\n\t\t\
    if ($val % 2 == 1) {\n\t\t\tif ($product == 0) {\n\t\t\t\t$product = $val;\n\t\
    \t\t} else {\n\t\t\t\t$product *= $val;\n\t\t\t}\n\t\t}\n\t}\n\treturn $product;\n\
    }\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5tx_2i_y.php:30\n\
    Stack trace:\n#0 /tmp/tmp5tx_2i_y.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp5tx_2i_y.php\
    \ on line 30\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $product = 1;\n    $n = (string)$n;\n    for ($i = 0; $i < strlen($n); $i++){\n\
    \        if ($n[$i] % 2 != 0){\n            $product *= $n[$i];\n        }\n \
    \   }\n    return $product;\n}\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpihc58ooj.php:32\n\
    Stack trace:\n#0 /tmp/tmpihc58ooj.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpihc58ooj.php\
    \ on line 32\n"
  timestamp: 1660028576
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n\t$newarr\
    \ = array();\n\t$numarr = str_split($n);\n\tfor ($i = 0; $i < count($numarr);\
    \ $i++) {\n\t\tif ($numarr[$i] % 2 == 1) {\n\t\t\tarray_push($newarr, $numarr[$i]);\n\
    \t\t}\n\t}\n\tif (count($newarr) == 0) {\n\t\treturn 0;\n\t}\n\t$result = array_product($newarr);\n\
    \treturn $result;\n}\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $str_n = (string)$n;\n    $sum = 1;\n    for ($i = 0; $i < strlen($str_n); $i++)\
    \ {\n        if (intval($str_n[$i]) % 2 == 1) {\n            $sum *= intval($str_n[$i]);\n\
    \        }\n    }\n    return $sum;\n}\n\necho digits(1) . \"\\n\";\necho digits(4)\
    \ . \"\\n\";\necho digits(235) . \"\\n\";\n\nfunction candidate(...$args) {\n\
    \    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp81pq4mku.php:37\n\
    Stack trace:\n#0 /tmp/tmp81pq4mku.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp81pq4mku.php\
    \ on line 37\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $prod = 1;\n    while ($n > 0) {\n        $digit = $n % 10;\n        if ($digit\
    \ % 2 != 0) {\n            $prod *= $digit;\n        }\n        $n = floor($n\
    \ / 10);\n    }\n    return $prod;\n}\nfunction candidate(...$args) {\n    return\
    \ digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(98765) !== 315) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4331f6qv.php:33\n\
    Stack trace:\n#0 /tmp/tmp4331f6qv.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp4331f6qv.php\
    \ on line 33\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $answer = 1;\n    while ($n > 0) {\n        $digit = $n % 10;\n        if ($digit\
    \ % 2 != 0) {\n            $answer *= $digit;\n        }\n        $n = floor($n\
    \ / 10);\n    }\n    return $answer;\n}\nfunction candidate(...$args) {\n    return\
    \ digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(98765) !== 315) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzmpo7wdx.php:33\n\
    Stack trace:\n#0 /tmp/tmpzmpo7wdx.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpzmpo7wdx.php\
    \ on line 33\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n\t$str_num\
    \ = strval($n);\n\t$str_array = str_split($str_num);\n\t$num_array = array_map(function($x)\
    \ { return intval($x); }, $str_array);\n\t$odd_array = array_filter($num_array,\
    \ function($x) { return $x%2 === 1; });\n\t$product = array_product($odd_array);\n\
    \treturn $product;\n}\necho digits(235).\"\\n\";\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4k4snwbp.php:31\n\
    Stack trace:\n#0 /tmp/tmp4k4snwbp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp4k4snwbp.php\
    \ on line 31\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $a = 0;\n    $n = str_split($n);\n    for ($i = 0; $i < count($n); $i++) {\n\
    \        if ($n[$i] % 2 == 1) {\n            $a = $a * $n[$i];\n        }\n  \
    \  }\n    return $a;\n}\necho digits(19);\nfunction candidate(...$args) {\n  \
    \  return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsc5dk6_i.php:27\n\
    Stack trace:\n#0 /tmp/tmpsc5dk6_i.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpsc5dk6_i.php\
    \ on line 27\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n  if\
    \ ($n < 10) {\n    return $n % 2 === 1 ? $n : 0;\n  } else {\n    return ($n %\
    \ 10 % 2 === 1 ? $n % 10 : 0) * digits(floor($n / 10));\n  }\n}\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw6lhys_9.php:24\n\
    Stack trace:\n#0 /tmp/tmpw6lhys_9.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpw6lhys_9.php\
    \ on line 24\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $digits = str_split($n);\n    $oddDigits = array_filter($digits, function($digit)\
    \ {\n        return $digit % 2 != 0;\n    });\n    return array_product($oddDigits);\n\
    }\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5pwp483p.php:29\n\
    Stack trace:\n#0 /tmp/tmp5pwp483p.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp5pwp483p.php\
    \ on line 29\n"
  timestamp: 1660028576
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n  $odd\
    \ = 1;\n  $isOdd = false;\n  $n = (string)$n;\n  for ($i = 0; $i < strlen($n);\
    \ $i++) {\n    if ($n[$i] % 2 == 1) {\n      $odd *= $n[$i];\n      $isOdd = true;\n\
    \    }\n  }\n  if ($isOdd) {\n    return $odd;\n  } else {\n    return 0;\n  }\n\
    }\necho digits(235);\necho \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(98765) !== 315) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '15

    '
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n\t$count\
    \ = 0;\n\tfor ($i = 0; $i < strlen($n); $i++){\n\t\tif ($n[$i] % 2 != 0){\n\t\t\
    \t$count = $count * $n[$i];\n\t\t}\n\t}\n\tif ($count != 0){\n\t\treturn $count;\n\
    \t}\n\telse {\n\t\treturn 0;\n\t}\n}\nfunction candidate(...$args) {\n    return\
    \ digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(98765) !== 315) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmpgxd21o8u.php\
    \ on line 14\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgxd21o8u.php:30\n\
    Stack trace:\n#0 /tmp/tmpgxd21o8u.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpgxd21o8u.php\
    \ on line 30\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ // Your code here\n}\n\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg0_j4i9x.php:20\n\
    Stack trace:\n#0 /tmp/tmpg0_j4i9x.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpg0_j4i9x.php\
    \ on line 20\n"
  timestamp: 1660028576
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n  $odds\
    \ = [];\n  $split = str_split($n);\n  foreach ($split as $digit) {\n    if ($digit\
    \ % 2 !== 0) {\n      $odds[] = $digit;\n    }\n  }\n  if (count($odds) === 0)\
    \ {\n    return 0;\n  }\n  $sum = array_product($odds);\n  return $sum;\n}\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $n = str_split($n);\n    $output = 0;\n    $count = 0;\n    for ($i = 0; $i\
    \ < count($n); $i++) {\n        if ($n[$i] % 2 == 1) {\n            $output +=\
    \ $n[$i];\n            $count++;\n        }\n    }\n    if ($count == 0) {\n \
    \       return 0;\n    } else {\n        return $output;\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpygfa7cuq.php:36\n\
    Stack trace:\n#0 /tmp/tmpygfa7cuq.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpygfa7cuq.php\
    \ on line 36\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   $product\
    \ = 1;\n   $num = $n;\n   while ($num > 0) {\n      $digit = $num % 10;\n    \
    \  if (($digit % 2) != 0) {\n         $product *= $digit;\n      }\n      $num\
    \ = (int)($num / 10);\n   }\n   return $product;\n}\necho digits(1) . \"\\n\"\
    ;\necho digits(4) . \"\\n\";\necho digits(235) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpva9i34p9.php:37\n\
    Stack trace:\n#0 /tmp/tmpva9i34p9.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpva9i34p9.php\
    \ on line 37\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $out = 1;\n    $n = (string)$n;\n    for ($i = 0; $i < strlen($n); $i++) {\n\
    \        if ($n[$i] % 2 !== 0) {\n            $out *= $n[$i];\n        }\n   \
    \ }\n    return $out;\n}\n\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpps9syv61.php:33\n\
    Stack trace:\n#0 /tmp/tmpps9syv61.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpps9syv61.php\
    \ on line 33\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $sum = 0;\n    while ($n >= 1) {\n        $digit = $n % 10;\n        if ($digit\
    \ % 2 != 0) {\n            $sum += $digit;\n        }\n        $n = $n / 10;\n\
    \    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 5.4 to int loses precision\
    \ in /tmp/tmp8vrki8dw.php on line 14\n\nDeprecated: Implicit conversion from float\
    \ 1.2 to int loses precision in /tmp/tmp8vrki8dw.php on line 14\n\nDeprecated:\
    \ Implicit conversion from float 501.4 to int loses precision in /tmp/tmp8vrki8dw.php\
    \ on line 14\n\nDeprecated: Implicit conversion from float 50.14 to int loses\
    \ precision in /tmp/tmp8vrki8dw.php on line 14\n\nDeprecated: Implicit conversion\
    \ from float 5.014 to int loses precision in /tmp/tmp8vrki8dw.php on line 14\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8vrki8dw.php:31\nStack\
    \ trace:\n#0 /tmp/tmp8vrki8dw.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp8vrki8dw.php\
    \ on line 31\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ // your code here\n    $sum = 0;\n    for ($i = $n; $i > 0; $i = floor($i /\
    \ 10)) {\n        $remainder = $i % 10;\n        if ($remainder % 2 != 0) {\n\
    \            $sum += $remainder;\n        }\n    }\n    return $sum;\n}\necho\
    \ digits(235);\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "8\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp15qb6rh8.php:31\n\
    Stack trace:\n#0 /tmp/tmp15qb6rh8.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp15qb6rh8.php\
    \ on line 31\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ // $n = (string)$n;\n    // $digits = str_split($n);\n    // $oddDigits = [];\n\
    \    // $oddProduct = 1;\n    // for ($i = 0; $i < count($digits); $i++) {\n \
    \   //     if ($digits[$i] % 2 != 0) {\n    //         array_push($oddDigits,\
    \ $digits[$i]);\n    //     }\n    // }\n    // if (count($oddDigits) == 0) {\n\
    \    //     return 0;\n    // }\n    // for ($i = 0; $i < count($oddDigits); $i++)\
    \ {\n    //     $oddProduct *= $oddDigits[$i];\n    // }\n    // return $oddProduct;\n\
    \    $n = (string)$n;\n    $digits = str_split($n);\n    $oddProduct = 1;\n  \
    \  for ($i = 0; $i < count($digits); $i++) {\n        if ($digits[$i] % 2 != 0)\
    \ {\n            $oddProduct *= $digits[$i];\n        }\n    }\n    if ($oddProduct\
    \ == 1) {\n        return 0;\n    }\n    return $oddProduct;\n}\necho digits(1);\n\
    echo \"\\n\";\necho digits(4);\necho \"\\n\";\necho digits(235);\necho \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\n0\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm4yvo90x.php:54\n\
    Stack trace:\n#0 /tmp/tmpm4yvo90x.php(61): test()\n#1 {main}\n  thrown in /tmp/tmpm4yvo90x.php\
    \ on line 54\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $result = 1;\n    while ($n > 0) {\n        $lastDigit = $n % 10;\n        if\
    \ ($lastDigit % 2 == 1) {\n            $result *= $lastDigit;\n        }\n   \
    \     $n = intval($n / 10);\n    }\n    return $result;\n}\n\necho digits(1) .\
    \ \"\\n\";\necho digits(4) . \"\\n\";\necho digits(235) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbkd6hzp_.php:37\n\
    Stack trace:\n#0 /tmp/tmpbkd6hzp_.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpbkd6hzp_.php\
    \ on line 37\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $product = 1;\n    if ($n == 0) {\n        return 0;\n    }\n    while ($n >\
    \ 0) {\n        $lastDigit = $n % 10;\n        if ($lastDigit % 2 != 0) {\n  \
    \          $product *= $lastDigit;\n        }\n        $n = ($n - $lastDigit)\
    \ / 10;\n    }\n    return $product;\n}\n$tests = array(1, 4, 235);\nforeach ($tests\
    \ as $test) {\n    echo digits($test), \"\\n\";\n}\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmiz06hyo.php:40\n\
    Stack trace:\n#0 /tmp/tmpmiz06hyo.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmiz06hyo.php\
    \ on line 40\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n\tif($n\
    \ == 0) {\n\t\treturn 0;\n\t}\n\tif($n % 2 != 0) {\n\t\treturn $n % 10 * digits(floor($n\
    \ / 10));\n\t}\n\treturn digits(floor($n / 10));\n}\necho digits(1) . \"\\n\"\
    ;\necho digits(4) . \"\\n\";\necho digits(235) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpajahh5_a.php:28\n\
    Stack trace:\n#0 /tmp/tmpajahh5_a.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpajahh5_a.php\
    \ on line 28\n"
  timestamp: 1660028576
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $split_int = str_split($n);\n    $odd_digits = [];\n    foreach ($split_int\
    \ as $digit) {\n        if ($digit % 2 == 1) {\n            array_push($odd_digits,\
    \ $digit);\n        }\n    }\n    if (empty($odd_digits)) {\n        return 0;\n\
    \    } else {\n        return array_product($odd_digits);\n    }\n}\necho digits(235);\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '15'
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $product = 1;\n    $n_string = (string)$n;\n    for ($i = 0; $i < strlen($n_string);\
    \ $i++) {\n        if ($n_string[$i] % 2 != 0) {\n            $product *= $n_string[$i];\n\
    \        }\n    }\n    return $product;\n}\necho digits(1) . \"\\n\";\necho digits(4)\
    \ . \"\\n\";\necho digits(235) . \"\\n\";\nfunction candidate(...$args) {\n  \
    \  return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfvce1_bv.php:35\n\
    Stack trace:\n#0 /tmp/tmpfvce1_bv.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpfvce1_bv.php\
    \ on line 35\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n  $total\
    \ = 1;\n  $array = str_split($n);\n  foreach ($array as $num) {\n    if ($num\
    \ % 2 === 1) {\n      $total *= $num;\n    }\n  }\n  return $total;\n}\necho \"\
    Input: 85723\\n\";\necho \"Ouput: \" . digits(85723) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Input: 85723\nOuput: 105\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp4yqc4w76.php:34\nStack trace:\n#0 /tmp/tmp4yqc4w76.php(37): test()\n\
    #1 {main}\n  thrown in /tmp/tmp4yqc4w76.php on line 34\n"
  timestamp: 1660028576
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $numbers = array_map('intval', str_split($n));\n    $odd = [];\n    foreach\
    \ ($numbers as $number) {\n        if ($number % 2 !== 0) {\n            $odd[]\
    \ = $number;\n        }\n    }\n    if (empty($odd)) {\n        return 0;\n  \
    \  }\n    return array_product($odd);\n}\nfunction candidate(...$args) {\n   \
    \ return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $str = (string)$n;\n    $arr = str_split($str);\n    $prod = 1;\n    foreach\
    \ ($arr as $value) {\n        if ($value % 2 != 0) {\n            $prod *= $value;\n\
    \        }\n    }\n    if ($prod == 1) {\n        return 0;\n    }\n    return\
    \ $prod;\n}\n\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg3t3pic1.php:33\n\
    Stack trace:\n#0 /tmp/tmpg3t3pic1.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpg3t3pic1.php\
    \ on line 33\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $product = 1;\n    while ($n > 0) {\n        $digit = $n % 10;\n        if ($digit\
    \ % 2 == 1) {\n            $product *= $digit;\n        }\n        $n = (int)($n\
    \ / 10);\n    }\n    return $product;\n}\nfunction candidate(...$args) {\n   \
    \ return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq7dre8lu.php:33\n\
    Stack trace:\n#0 /tmp/tmpq7dre8lu.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpq7dre8lu.php\
    \ on line 33\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n\t$sum\
    \ = 0;\n\t$n = (string)$n;\n\tfor ($i = 0; $i < strlen($n); $i++) {\n\t\tif (intval($n[$i])\
    \ % 2 == 1) {\n\t\t\t$sum += intval($n[$i]);\n\t\t}\n\t}\n\treturn $sum;\n}\n\
    echo digits(1) . \" => \" . (digits(1) == 1 ? \"Correct\" : \"Incorrect\") . \"\
    \\n\";\necho digits(4) . \" => \" . (digits(4) == 0 ? \"Correct\" : \"Incorrect\"\
    ) . \"\\n\";\necho digits(235) . \" => \" . (digits(235) == 15 ? \"Correct\" :\
    \ \"Incorrect\") . \"\\n\";\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1 => Correct\n0 => Correct\n8 => Incorrect\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpvyt0sm6c.php:32\nStack trace:\n#0 /tmp/tmpvyt0sm6c.php(38):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpvyt0sm6c.php on line 32\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $arr = str_split(strval($n));\n    $prod = 1;\n    foreach ($arr as $digit)\
    \ {\n        if ($digit % 2 !== 0) {\n            $prod *= $digit;\n        }\n\
    \    }\n    return $prod;\n}\n\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp39rc94ys.php:33\n\
    Stack trace:\n#0 /tmp/tmp39rc94ys.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp39rc94ys.php\
    \ on line 33\n"
  timestamp: 1660028576
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $digits = str_split($n);\n    $odds = [];\n    foreach ($digits as $digit) {\n\
    \        if ($digit % 2 == 1) {\n            $odds[] = $digit;\n        }\n  \
    \  }\n    if (count($odds) == 0) {\n        return 0;\n    }\n    $product = 1;\n\
    \    foreach ($odds as $odd) {\n        $product *= $odd;\n    }\n    return $product;\n\
    }\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ // Write your code here\n    // To print results to the standard output you\
    \ can use print\n    // Example: print \"Hello world!\";\n}\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_2nr04hk.php:21\n\
    Stack trace:\n#0 /tmp/tmp_2nr04hk.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp_2nr04hk.php\
    \ on line 21\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ if ($n <= 0) return 0;\n    $res = 1;\n    $last_digit = 0;\n    $digits = array();\n\
    \    while ($n > 0) {\n        $last_digit = $n % 10;\n        if ($last_digit\
    \ % 2 == 1) {\n            $res *= $last_digit;\n        }\n        $n = (int)($n\
    \ / 10);\n    }\n    return $res;\n}\n\necho digits(1) . \"\\n\";\necho digits(4)\
    \ . \"\\n\";\necho digits(235) . \"\\n\";\nfunction candidate(...$args) {\n  \
    \  return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk3wvwjlu.php:40\n\
    Stack trace:\n#0 /tmp/tmpk3wvwjlu.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpk3wvwjlu.php\
    \ on line 40\n"
  timestamp: 1660028576
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ // convert the number to a string and split it\n    $split = str_split($n);\n\
    \    // start an empty array\n    $odd = [];\n    // loop through the array\n\
    \    foreach ($split as $value) {\n        // check if the value is odd\n    \
    \    if ($value % 2 !== 0) {\n            // if it is, add it to the empty array\n\
    \            $odd[] = $value;\n        }\n    }\n    // check if the array is\
    \ empty\n    if (empty($odd)) {\n        // if it is, return 0\n        return\
    \ 0;\n    } else {\n        // if it's not, multiply the numbers in the array\
    \ together\n        return array_product($odd);\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ if ($n < 10) {\n        return $n % 2 == 1 ? $n : 0;\n    } else {\n       \
    \ $last_digit = $n % 10;\n        $rest_digits = floor($n / 10);\n        return\
    \ ($last_digit % 2 == 1 ? $last_digit : 0) * digits($rest_digits);\n    }\n}\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq0mau_jo.php:26\n\
    Stack trace:\n#0 /tmp/tmpq0mau_jo.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpq0mau_jo.php\
    \ on line 26\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $arr = str_split($n);\n    $res = 1;\n    foreach ($arr as $a) {\n        if\
    \ ($a % 2 !== 0) {\n            $res *= $a;\n        }\n    }\n    return $res;\n\
    }\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9spcl4ll.php:32\n\
    Stack trace:\n#0 /tmp/tmp9spcl4ll.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp9spcl4ll.php\
    \ on line 32\n"
  timestamp: 1660028576
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $numbers = str_split($n);\n    $oddArray = [];\n    $product = 1;\n    foreach\
    \ ($numbers as $number) {\n        if ($number % 2 === 1) {\n            array_push($oddArray,\
    \ $number);\n        }\n    }\n    if (count($oddArray) > 0) {\n        foreach\
    \ ($oddArray as $odd) {\n            $product *= $odd;\n        }\n        return\
    \ $product;\n    } else {\n        return 0;\n    }\n}\n$answer = digits(235);\n\
    echo $answer;\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '15'
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $newArr = [];\n    $product = 1;\n    while ($n > 0) {\n        $newArr[] =\
    \ $n % 10;\n        $n = (int)($n / 10);\n    }\n    foreach ($newArr as $digit)\
    \ {\n        if ($digit % 2 == 1) {\n            $product *= $digit;\n       \
    \ }\n    }\n    return $product;\n}\necho digits(1) . \"\\n\";\necho digits(4)\
    \ . \"\\n\";\necho digits(235) . \"\\n\";\nfunction candidate(...$args) {\n  \
    \  return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_yty4yrw.php:39\n\
    Stack trace:\n#0 /tmp/tmp_yty4yrw.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp_yty4yrw.php\
    \ on line 39\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n  $odds\
    \ = 0;\n  $evens = 0;\n  while ($n > 0) {\n    $digit = $n % 10;\n    if ($digit\
    \ % 2 == 0) {\n      $evens++;\n    } else {\n      $odds *= $digit;\n    }\n\
    \    $n = (int)($n / 10);\n  }\n  if ($evens == 0) {\n    return $odds;\n  } else\
    \ {\n    return 0;\n  }\n}\n\necho digits(235) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1l9kczrr.php:36\n\
    Stack trace:\n#0 /tmp/tmp1l9kczrr.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp1l9kczrr.php\
    \ on line 36\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n  $total\
    \ = 1;\n  while ($n > 0) {\n    $digit = $n % 10;\n    if ($digit % 2 != 0) {\n\
    \      $total *= $digit;\n    }\n    $n = floor($n / 10);\n  }\n  return $total;\n\
    }\n\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu9tmp_yb.php:34\n\
    Stack trace:\n#0 /tmp/tmpu9tmp_yb.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpu9tmp_yb.php\
    \ on line 34\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ if ($n === 0) {\n        return 0;\n    }\n    $digit = $n % 10;\n    $total\
    \ = 1;\n    if ($digit % 2 == 1) {\n        $total *= $digit;\n    }\n    return\
    \ $total * digits(floor($n / 10));\n}\necho digits(1) . PHP_EOL;\necho digits(4)\
    \ . PHP_EOL;\necho digits(235) . PHP_EOL;\nfunction candidate(...$args) {\n  \
    \  return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    262144 bytes) in /tmp/tmpwjdvgex4.php on line 20

    '
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n  $a\
    \ = [];\n  $product = 1;\n  $s = strval($n);\n  for ($i = 0; $i < strlen($s);\
    \ $i++) {\n    $a[] = intval($s[$i]);\n  }\n  for ($i = 0; $i < count($a); $i++)\
    \ {\n    if ($a[$i] % 2 === 1) {\n      $product *= $a[$i];\n    }\n  }\n  return\
    \ $product;\n}\necho digits(234);\nfunction candidate(...$args) {\n    return\
    \ digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(98765) !== 315) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe6nzagl2.php:37\n\
    Stack trace:\n#0 /tmp/tmpe6nzagl2.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpe6nzagl2.php\
    \ on line 37\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $result = 1;\n    $numbers = array_map('intval', str_split($n));\n    foreach\
    \ ($numbers as $number) {\n        if ($number % 2 !== 0) {\n            $result\
    \ *= $number;\n        }\n    }\n    return $result ? $result : 0;\n}\n\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmuf31ran.php:33\n\
    Stack trace:\n#0 /tmp/tmpmuf31ran.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpmuf31ran.php\
    \ on line 33\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n\t$sum\
    \ = 1;\n\tif($n < 10) {\n\t\tif($n % 2 === 1) {\n\t\t\treturn $n;\n\t\t} else\
    \ {\n\t\t\treturn 0;\n\t\t}\n\t} else {\n\t\t$lastDigit = $n % 10;\n\t\tif($lastDigit\
    \ % 2 === 1) {\n\t\t\t$sum *= $lastDigit;\n\t\t}\n\t\t$sum *= digits(floor($n\
    \ / 10));\n\t\treturn $sum;\n\t}\n}\necho digits(2);\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2fxnvzdg.php:36\n\
    Stack trace:\n#0 /tmp/tmp2fxnvzdg.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp2fxnvzdg.php\
    \ on line 36\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n  $count\
    \ = 0;\n  for ($i = 0; $i < strlen($n); $i++) {\n    if (is_numeric($n[$i]) &&\
    \ $n[$i] % 2 !== 0) {\n      $count *= $n[$i];\n    }\n  }\n  if ($count === 0)\
    \ {\n    return $count;\n  } else {\n    return $count;\n  }\n}\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmphdpg0qz2.php\
    \ on line 14\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphdpg0qz2.php:29\n\
    Stack trace:\n#0 /tmp/tmphdpg0qz2.php(38): test()\n#1 {main}\n  thrown in /tmp/tmphdpg0qz2.php\
    \ on line 29\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $product = 1;\n    while ($n > 0) {\n        $digit = $n % 10;\n        if ($digit\
    \ % 2 == 1) {\n            $product *= $digit;\n        }\n        $n = floor($n\
    \ / 10);\n    }\n    return $product;\n}\necho digits(235);\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk_f1nsls.php:34\n\
    Stack trace:\n#0 /tmp/tmpk_f1nsls.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpk_f1nsls.php\
    \ on line 34\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ if ($n < 10) {\n        return $n;\n    }\n    $output = 0;\n    $i = 1;\n \
    \   while ($n > 0) {\n        $digit = $n % 10;\n        if ($digit % 2 != 0)\
    \ {\n            $output += $digit * $i;\n            $i *= 10;\n        }\n \
    \       $n = (int)($n / 10);\n    }\n    return $output;\n}\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc7hnlh_9.php:35\n\
    Stack trace:\n#0 /tmp/tmpc7hnlh_9.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpc7hnlh_9.php\
    \ on line 35\n"
  timestamp: 1660028576
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $product = 1;\n    $even = true;\n    while ($n > 0) {\n        $digit = $n\
    \ % 10;\n        if ($digit % 2 != 0) {\n            $product *= $digit;\n   \
    \         $even = false;\n        }\n        $n = intval($n / 10);\n    }\n  \
    \  if ($even) {\n        return 0;\n    }\n    return $product;\n}\necho digits(4)\
    \ . \"\\n\";\necho digits(235) . \"\\n\";\nfunction candidate(...$args) {\n  \
    \  return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    15

    '
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n  if\
    \ ($n < 0) {\n    $n = $n * -1;\n  }\n  $odd = 0;\n  for ($i = 0; $i < strlen($n);\
    \ $i++) {\n    if ($n[$i] % 2 == 1) {\n      $odd = $odd * $n[$i];\n    }\n  }\n\
    \  return $odd;\n}\n$answer = digits(235);\necho $answer;\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmp0agaun1l.php\
    \ on line 17\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmp0agaun1l.php on line 17\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmp0agaun1l.php on line 17\n0\nWarning: Trying to\
    \ access array offset on value of type int in /tmp/tmp0agaun1l.php on line 17\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0agaun1l.php:30\nStack\
    \ trace:\n#0 /tmp/tmp0agaun1l.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp0agaun1l.php\
    \ on line 30\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n\t$result\
    \ = 1;\n\t$n_string = strval($n);\n\tfor ($i = 0; $i < strlen($n_string); $i++)\
    \ {\n\t\tif ($n_string[$i] % 2 == 1) {\n\t\t\t$result *= $n_string[$i];\n\t\t\
    }\n\t}\n\treturn $result;\n}\necho digits(1);\necho \"\\n\";\necho digits(4);\n\
    echo \"\\n\";\necho digits(235);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvlfewejk.php:38\n\
    Stack trace:\n#0 /tmp/tmpvlfewejk.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpvlfewejk.php\
    \ on line 38\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n  $arr\
    \ = str_split($n);\n  $prod = 1;\n  for ($i = 0; $i < count($arr); $i++) {\n \
    \   if ($arr[$i] % 2 != 0) {\n      $prod *= $arr[$i];\n    }\n  }\n  return $prod;\n\
    }\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2x6yhl2x.php:32\n\
    Stack trace:\n#0 /tmp/tmp2x6yhl2x.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp2x6yhl2x.php\
    \ on line 32\n"
  timestamp: 1660028576
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $odds = array_filter(str_split($n), function($digit) {\n        return $digit\
    \ % 2 != 0;\n    });\n    if (empty($odds)) {\n        return 0;\n    }\n    return\
    \ array_product($odds);\n}\necho digits(1);\necho PHP_EOL;\necho digits(4);\n\
    echo PHP_EOL;\necho digits(235);\necho PHP_EOL;\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    0

    15

    '
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $strN = strval($n);\n    $product = 1;\n    for ($i = 0; $i < strlen($strN);\
    \ $i++) {\n        if (intval($strN[$i]) % 2 != 0) {\n            $product *=\
    \ intval($strN[$i]);\n        }\n    }\n    return $product;\n}\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn40tpxlx.php:32\n\
    Stack trace:\n#0 /tmp/tmpn40tpxlx.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpn40tpxlx.php\
    \ on line 32\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $odd = 0;\n    $numArray = str_split($n);\n    $numArray = array_reverse($numArray);\n\
    \    foreach ($numArray as $number) {\n        if ($number % 2 === 1) {\n    \
    \        $odd *= $number;\n        }\n    }\n    return $odd;\n}\nprint digits(1)\
    \ . PHP_EOL;\nprint digits(4) . PHP_EOL;\nprint digits(235) . PHP_EOL;\nprint\
    \ digits(123456789) . PHP_EOL;\nprint digits(123456) . PHP_EOL;\nprint digits(123)\
    \ . PHP_EOL;\nprint digits(1234) . PHP_EOL;\nfunction candidate(...$args) {\n\
    \    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\n0\n0\n0\n0\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmputw7stua.php:34\nStack trace:\n#0 /tmp/tmputw7stua.php(43): test()\n\
    #1 {main}\n  thrown in /tmp/tmputw7stua.php on line 34\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $n = str_split($n);\n    $result = 1;\n    foreach ($n as $i) {\n        if\
    \ ($i % 2 !== 0) {\n            $result *= $i;\n        }\n    }\n    return $result;\n\
    }\necho digits(1) . PHP_EOL;\necho digits(4) . PHP_EOL;\necho digits(235) . PHP_EOL;\n\
    \nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwkckw5u6.php:36\n\
    Stack trace:\n#0 /tmp/tmpwkckw5u6.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpwkckw5u6.php\
    \ on line 36\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n  $arr\
    \ = str_split($n);\n  $odd = 1;\n  for ($i = 0; $i < count($arr); $i++) {\n  \
    \  if ($arr[$i] % 2 === 1) {\n      $odd *= $arr[$i];\n    }\n  }\n  if ($odd\
    \ == 1) {\n    return 0;\n  }\n  return $odd;\n}\necho digits(1) . PHP_EOL;\n\
    echo digits(4) . PHP_EOL;\necho digits(235) . PHP_EOL;\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\n0\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxfgrjk01.php:35\n\
    Stack trace:\n#0 /tmp/tmpxfgrjk01.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpxfgrjk01.php\
    \ on line 35\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $total = 1;\n    while ($n > 0) {\n        $digit = $n % 10;\n        if ($digit\
    \ % 2 == 1) {\n            $total *= $digit;\n        }\n        $n = floor($n\
    \ / 10);\n    }\n    return $total;\n}\nfunction candidate(...$args) {\n    return\
    \ digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(98765) !== 315) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv0nrxwi9.php:33\n\
    Stack trace:\n#0 /tmp/tmpv0nrxwi9.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpv0nrxwi9.php\
    \ on line 33\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n  $str\
    \ = strval($n);\n  $strArray = str_split($str);\n  $product = 1;\n  for ($i =\
    \ 0; $i < sizeof($strArray); $i++) {\n    if (intval($strArray[$i]) % 2 != 0)\
    \ {\n      $product *= intval($strArray[$i]);\n    }\n  }\n  return $product;\n\
    }\necho digits(4) . PHP_EOL;\necho digits(235) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9w80_tp9.php:35\n\
    Stack trace:\n#0 /tmp/tmp9w80_tp9.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp9w80_tp9.php\
    \ on line 35\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n\t//\
    \ Solution 1: easiest to understand\n\t// $result = 1;\n\t// $n = str_split($n);\n\
    \t// foreach ($n as $num) {\n\t// \tif ($num % 2 === 1) {\n\t// \t\t$result *=\
    \ $num;\n\t// \t}\n\t// }\n\t// return $result == 1 ? 0 : $result;\n\n\t// Solution\
    \ 2:\n\t// $result = 1;\n\t// $n = str_split($n);\n\t// foreach ($n as $num) {\n\
    \t// \tif ($num % 2 === 1) {\n\t// \t\t$result *= $num;\n\t// \t}\n\t// }\n\t\
    // return $result;\n\n\t// Solution 3: can be improved by skipping the array creation\
    \ and loop\n\t$result = 1;\n\tforeach (str_split($n) as $num) {\n\t\tif ($num\
    \ % 2 === 1) {\n\t\t\t$result *= $num;\n\t\t}\n\t}\n\treturn $result;\n}\necho\
    \ digits(4);\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp951hf9bp.php:53\n\
    Stack trace:\n#0 /tmp/tmp951hf9bp.php(56): test()\n#1 {main}\n  thrown in /tmp/tmp951hf9bp.php\
    \ on line 53\n"
  timestamp: 1660028576
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $digits = str_split(strval($n));\n    $odd_digits = [];\n    foreach ($digits\
    \ as $digit) {\n        if ($digit % 2 !== 0) {\n            $odd_digits[] = $digit;\n\
    \        }\n    }\n    if (empty($odd_digits)) {\n        return 0;\n    }\n \
    \   return array_product($odd_digits);\n}\nfunction candidate(...$args) {\n  \
    \  return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ // div by 10 to remove the last digit\n    $number = $n % 10;\n    if ($n <\
    \ 10) {\n        if ($n % 2 === 1) {\n            return $n;\n        } else {\n\
    \            return 0;\n        }\n    } else {\n        if ($number % 2 === 1)\
    \ {\n            return $number * digits($n / 10);\n        } else {\n       \
    \     return digits($n / 10);\n        }\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 5.4 to int loses precision\
    \ in /tmp/tmp0fsykvub.php on line 13\n\nDeprecated: Implicit conversion from float\
    \ 5.4 to int loses precision in /tmp/tmp0fsykvub.php on line 15\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmp0fsykvub.php:34\nStack trace:\n\
    #0 /tmp/tmp0fsykvub.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp0fsykvub.php\
    \ on line 34\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n\t$odd_product\
    \ = 1;\n\t$digits = str_split($n);\n\tforeach ($digits as $digit) {\n\t\tif ($digit\
    \ % 2 != 0) {\n\t\t\t$odd_product *= $digit;\n\t\t}\n\t}\n\treturn $odd_product;\n\
    }\n\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6g5wem3b.php:33\n\
    Stack trace:\n#0 /tmp/tmp6g5wem3b.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp6g5wem3b.php\
    \ on line 33\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ // Your code here\n    $sum = 0;\n    $numbers = str_split($n);\n    foreach\
    \ ($numbers as $number) {\n        if ($number % 2 != 0) {\n            $sum +=\
    \ $number;\n        }\n    }\n    return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjif6cvvd.php:31\n\
    Stack trace:\n#0 /tmp/tmpjif6cvvd.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpjif6cvvd.php\
    \ on line 31\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n  $product\
    \ = 1;\n  $string = strval($n);\n  for ($i = 0; $i < strlen($string); $i++) {\n\
    \    if ($string[$i] % 2 != 0) {\n      $product *= $string[$i];\n    }\n  }\n\
    \  return $product;\n}\necho digits(235);\nfunction candidate(...$args) {\n  \
    \  return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnlmkpghp.php:33\n\
    Stack trace:\n#0 /tmp/tmpnlmkpghp.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpnlmkpghp.php\
    \ on line 33\n"
  timestamp: 1660028576
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n\t$n\
    \ = str_split($n);\n\t$odds = array();\n\tforeach ($n as $digit) {\n\t\tif ($digit\
    \ % 2 != 0) {\n\t\t\t$odds[] = $digit;\n\t\t}\n\t}\n\tif (count($odds) == 0) {\n\
    \t\treturn 0;\n\t}\n\treturn array_product($odds);\n}\n\necho digits(1) . \"\\\
    n\";\necho digits(4) . \"\\n\";\necho digits(235) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    0

    15

    '
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n  $total\
    \ = 1;\n  $n = (string)$n;\n  for ($i = 0; $i < strlen($n); $i++) {\n    if ((int)$n[$i]\
    \ % 2 != 0) {\n      $total *= (int)$n[$i];\n    }\n  }\n  return $total;\n}\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4d02rt6h.php:32\n\
    Stack trace:\n#0 /tmp/tmp4d02rt6h.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp4d02rt6h.php\
    \ on line 32\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n  $sum\
    \ = 1;\n  for ($i = 0; $i < strlen($n); $i++) {\n    if ($n[$i] % 2 !== 0) {\n\
    \      $sum *= $n[$i];\n    }\n  }\n  return $sum;\n}\n\necho digits(1);\necho\
    \ digits(4);\necho digits(235);\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmp0mvr57a_.php\
    \ on line 14\n1\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmp0mvr57a_.php on line 14\n1\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmp0mvr57a_.php on line 14\n\nWarning: Trying to access\
    \ array offset on value of type int in /tmp/tmp0mvr57a_.php on line 14\n\nWarning:\
    \ Trying to access array offset on value of type int in /tmp/tmp0mvr57a_.php on\
    \ line 14\n1\nWarning: Trying to access array offset on value of type int in /tmp/tmp0mvr57a_.php\
    \ on line 14\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0mvr57a_.php:29\n\
    Stack trace:\n#0 /tmp/tmp0mvr57a_.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp0mvr57a_.php\
    \ on line 29\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n\t$odd\
    \ = $n % 10;\n\twhile ($n) {\n\t\t$n = (int)($n / 10);\n\t\t$odd = $n % 2 ? $odd\
    \ * $n % 10 : $odd;\n\t}\n\treturn $odd;\n}\nfunction candidate(...$args) {\n\
    \    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7rkn9u18.php:25\n\
    Stack trace:\n#0 /tmp/tmp7rkn9u18.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp7rkn9u18.php\
    \ on line 25\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $digits = str_split($n);\n    $result = array_filter($digits, function($v) {\n\
    \        return $v % 2 !== 0;\n    });\n    return array_product($result);\n}\n\
    echo digits(1) . \"\\n\";\necho digits(4) . \"\\n\";\necho digits(235) . \"\\\
    n\";\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp105_q0gu.php:32\n\
    Stack trace:\n#0 /tmp/tmp105_q0gu.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp105_q0gu.php\
    \ on line 32\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $result = 1;\n    $n_str = strval($n);\n    for ($i = 0; $i < strlen($n_str);\
    \ $i++) {\n        $result *= (int)$n_str[$i] % 2 === 1 ? $n_str[$i] : 1;\n  \
    \  }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp95amvymv.php:31\n\
    Stack trace:\n#0 /tmp/tmp95amvymv.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp95amvymv.php\
    \ on line 31\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n  $product\
    \ = 1;\n  $n_string = strval($n);\n  for ($i = 0; $i < strlen($n_string); $i++)\
    \ {\n    if ($n_string[$i] % 2 !== 0) {\n      $product *= $n_string[$i];\n  \
    \  }\n  }\n  return $product;\n}\n\necho \"digits(1): \" . digits(1) . PHP_EOL;\n\
    echo \"digits(4): \" . digits(4) . PHP_EOL;\necho \"digits(235): \" . digits(235)\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "digits(1): 1\ndigits(4): 1\ndigits(235): 15\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp_p42hev_.php:36\nStack trace:\n#0 /tmp/tmp_p42hev_.php(39):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp_p42hev_.php on line 36\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $odds = [];\n    $digits = str_split($n);\n    foreach ($digits as $digit) {\n\
    \        if ($digit % 2 === 1) {\n            $odds[] = $digit;\n        }\n \
    \   }\n    return array_product($odds);\n}\nfunction candidate(...$args) {\n \
    \   return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmj0ms3vg.php:32\n\
    Stack trace:\n#0 /tmp/tmpmj0ms3vg.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpmj0ms3vg.php\
    \ on line 32\n"
  timestamp: 1660028576
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $n = str_split($n);\n    $odd_digits = array_filter($n, function($d) {\n   \
    \     return $d % 2 != 0;\n    });\n    return empty($odd_digits) ? 0 : array_product($odd_digits);\n\
    }\n\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $num = str_split($n);\n    $product = 1;\n    for ($i = 0; $i < count($num);\
    \ $i++) {\n        if ($num[$i] % 2 == 1) {\n            $product *= $num[$i];\n\
    \        }\n    }\n    return $product;\n}\nfunction candidate(...$args) {\n \
    \   return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp80tnavub.php:32\n\
    Stack trace:\n#0 /tmp/tmp80tnavub.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp80tnavub.php\
    \ on line 32\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n\n$number\
    \ = (string)$n;\n$number = str_split($number);\n$product = 1;\n\nforeach ($number\
    \ as $key => $value) {\n\tif($value % 2 !== 0) {\n\t\t$product *= $value;\n\t\
    }\n}\n\nif($product == 1) {\n\t$product = 0;\n}\n\nreturn $product;\n\n}\n\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3kr4g8pj.php:38\n\
    Stack trace:\n#0 /tmp/tmp3kr4g8pj.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp3kr4g8pj.php\
    \ on line 38\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $product = 1;\n    $digits = str_split($n);\n    foreach ($digits as $digit)\
    \ {\n        if ($digit % 2 === 1) {\n            $product *= $digit;\n      \
    \  }\n    }\n    return $product;\n}\nfunction candidate(...$args) {\n    return\
    \ digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(98765) !== 315) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwzkhngjj.php:32\n\
    Stack trace:\n#0 /tmp/tmpwzkhngjj.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpwzkhngjj.php\
    \ on line 32\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n  if\
    \ ($n == 0) {\n    return 0;\n  }\n  if ($n % 2 == 1) {\n    return $n % 10 *\
    \ digits(floor($n / 10));\n  }\n  return digits(floor($n / 10));\n}\n\necho digits(235);\n\
    echo digits(4);\necho digits(0);\necho digits(1);\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0000\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp96bp5_z9.php:31\n\
    Stack trace:\n#0 /tmp/tmp96bp5_z9.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp96bp5_z9.php\
    \ on line 31\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $nstring = (string)$n;\n    $product = 1;\n    for ($i = 0; $i < strlen($nstring);\
    \ $i++) {\n        if ($nstring[$i] % 2 != 0) {\n            $product *= $nstring[$i];\n\
    \        }\n    }\n    if ($product == 1) {\n        return 0;\n    }\n    return\
    \ $product;\n}\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4vzgbnja.php:31\n\
    Stack trace:\n#0 /tmp/tmp4vzgbnja.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4vzgbnja.php\
    \ on line 31\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n\t$oddProduct\
    \ = 1;\n\twhile ($n > 0) {\n\t\t$lastDigit = $n % 10;\n\t\tif ($lastDigit % 2\
    \ != 0) {\n\t\t\t$oddProduct *= $lastDigit;\n\t\t}\n\t\t$n = (int)($n / 10);\n\
    \t}\n\treturn $oddProduct;\n}\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnrbatlk5.php:33\n\
    Stack trace:\n#0 /tmp/tmpnrbatlk5.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpnrbatlk5.php\
    \ on line 33\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n  $num\
    \ = (string)$n;\n  $odds = [];\n  for ($i = 0; $i < strlen($num); $i++) {\n  \
    \  if ($num[$i] % 2 != 0) {\n      array_push($odds, $num[$i]);\n    }\n  }\n\
    \  $product = array_product($odds);\n  return $product;\n}\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc3u6kem6.php:33\n\
    Stack trace:\n#0 /tmp/tmpc3u6kem6.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpc3u6kem6.php\
    \ on line 33\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n\n}\n\
    \nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0p2tpzef.php:20\n\
    Stack trace:\n#0 /tmp/tmp0p2tpzef.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp0p2tpzef.php\
    \ on line 20\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n\t$sum\
    \ = 1;\n\twhile ($n > 0) {\n\t\t$digit = $n % 10;\n\t\tif ($digit % 2 === 1) {\n\
    \t\t\t$sum *= $digit;\n\t\t}\n\t\t$n = intval($n / 10);\n\t}\n\treturn $sum;\n\
    }\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcn37v_un.php:33\n\
    Stack trace:\n#0 /tmp/tmpcn37v_un.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpcn37v_un.php\
    \ on line 33\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n\t$n\
    \ = str_split($n);\n\t$total = 0;\n\tforeach ($n as $digit) {\n\t\tif ($digit\
    \ % 2 == 1) {\n\t\t\t$total += $digit;\n\t\t}\n\t}\n\treturn $total;\n}\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpra2u0f2x.php:29\n\
    Stack trace:\n#0 /tmp/tmpra2u0f2x.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpra2u0f2x.php\
    \ on line 29\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $answer = 1;\n    while ($n > 0) {\n        $digit = $n % 10;\n        if ($digit\
    \ % 2 == 1) {\n            $answer *= $digit;\n        }\n        $n = (int)($n\
    \ / 10);\n    }\n    return $answer;\n}\necho digits(235) . \"\\n\";\n\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw32hx5pn.php:35\n\
    Stack trace:\n#0 /tmp/tmpw32hx5pn.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpw32hx5pn.php\
    \ on line 35\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $product = 1;\n    while ($n > 0) {\n        $digit = $n % 10;\n        if ($digit\
    \ % 2 != 0) {\n            $product *= $digit;\n        }\n        $n = (int)($n\
    \ / 10);\n    }\n    return $product;\n}\nfunction candidate(...$args) {\n   \
    \ return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj5r6x4w7.php:33\n\
    Stack trace:\n#0 /tmp/tmpj5r6x4w7.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpj5r6x4w7.php\
    \ on line 33\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $digits = str_split($n);\n    $odd_digits = array_filter($digits, function($e)\
    \ {\n        return $e % 2 == 1;\n    });\n    if (count($odd_digits) == 0) {\n\
    \        return 0;\n    }\n    $product = array_reduce($odd_digits, function($acc,\
    \ $e) {\n        return $acc * $e;\n    });\n    return $product;\n}\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoew6dqug.php:29\n\
    Stack trace:\n#0 /tmp/tmpoew6dqug.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpoew6dqug.php\
    \ on line 29\n"
  timestamp: 1660028576
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n  $str\
    \ = strval($n);\n  $numArray = str_split($str);\n  $odds = array_filter($numArray,\
    \ function($num) {\n    return $num % 2 != 0;\n  });\n  $odds = array_map(function($num)\
    \ {\n    return (int)$num;\n  }, $odds);\n  if (count($odds) == 0) {\n    return\
    \ 0;\n  }\n  return array_product($odds);\n}\n\nfunction candidate(...$args) {\n\
    \    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $n = str_split($n);\n    $total = 1;\n    foreach ($n as $num) {\n        if\
    \ ($num % 2 != 0) {\n            $total *= $num;\n        }\n    }\n    return\
    \ $total;\n}\n\n$answer = digits(13579);\necho $answer;\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "945\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa0eok1mi.php:36\n\
    Stack trace:\n#0 /tmp/tmpa0eok1mi.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpa0eok1mi.php\
    \ on line 36\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $stringN = strval($n);\n    $oddDigits = 1;\n    for ($i = 0; $i < strlen($stringN);\
    \ $i++) {\n        if (intval($stringN[$i]) % 2 != 0) {\n            $oddDigits\
    \ *= intval($stringN[$i]);\n        }\n    }\n    if ($oddDigits == 1) {\n   \
    \     return 0;\n    }\n    return $oddDigits;\n}\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprt0k5y_j.php:31\n\
    Stack trace:\n#0 /tmp/tmprt0k5y_j.php(38): test()\n#1 {main}\n  thrown in /tmp/tmprt0k5y_j.php\
    \ on line 31\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $num_array = str_split($n);\n    $result = 1;\n    foreach ($num_array as $num)\
    \ {\n        if ($num % 2 != 0) {\n            $result *= $num;\n        }\n \
    \   }\n    return $result;\n}\n\necho digits(1) . \"\\n\";\necho digits(4) . \"\
    \\n\";\necho digits(235) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(98765) !== 315) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0t7s632c.php:36\n\
    Stack trace:\n#0 /tmp/tmp0t7s632c.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp0t7s632c.php\
    \ on line 36\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $num = str_split($n);\n    $sum = 1;\n    foreach ($num as $digit) {\n     \
    \   if ($digit % 2 == 1) {\n            $sum *= $digit;\n        }\n    }\n  \
    \  return $sum;\n}\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ptma34m.php:32\n\
    Stack trace:\n#0 /tmp/tmp8ptma34m.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp8ptma34m.php\
    \ on line 32\n"
  timestamp: 1660028576
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n\t$odd_digits\
    \ = array();\n\t$n_array = str_split($n);\n\t$n_array_length = count($n_array);\n\
    \tfor ($i = 0; $i < $n_array_length; $i++) {\n\t\tif ($n_array[$i] % 2 !== 0)\
    \ {\n\t\t\tarray_push($odd_digits, $n_array[$i]);\n\t\t}\n\t}\n\tif ($odd_digits\
    \ !== []) {\n\t\t$prod = array_product($odd_digits);\n\t\treturn $prod;\n\t} else\
    \ {\n\t\treturn 0;\n\t}\n}\n\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $sum = 0;\n    while ($n != 0) {\n        $digit = $n % 10;\n        if ($digit\
    \ % 2 != 0) {\n            $sum = $sum * $digit;\n        }\n        $n = floor($n\
    \ / 10);\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(98765) !== 315) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpewi0g_jm.php:28\n\
    Stack trace:\n#0 /tmp/tmpewi0g_jm.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpewi0g_jm.php\
    \ on line 28\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $digits = str_split($n);\n    $odd = array_filter($digits, function($num) {\n\
    \        return ($num % 2 == 1);\n    });\n    return array_product($odd);\n}\n\
    \nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgs9zehy7.php:30\n\
    Stack trace:\n#0 /tmp/tmpgs9zehy7.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpgs9zehy7.php\
    \ on line 30\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n  $product\
    \ = 1;\n  $n = str_split($n);\n  foreach ($n as $x) {\n    if ($x % 2 === 1) {\n\
    \      $product *= $x;\n    }\n  }\n  return $product;\n}\necho digits(1) . PHP_EOL;\n\
    echo digits(4) . PHP_EOL;\necho digits(235) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpysk4hr9e.php:35\n\
    Stack trace:\n#0 /tmp/tmpysk4hr9e.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpysk4hr9e.php\
    \ on line 35\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $result = 1;\n    while ($n > 0) {\n        $lastDigit = $n % 10;\n        if\
    \ ($lastDigit % 2 != 0) {\n            $result *= $lastDigit;\n        }\n   \
    \     $n = floor($n / 10);\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppwtv17uj.php:34\n\
    Stack trace:\n#0 /tmp/tmppwtv17uj.php(37): test()\n#1 {main}\n  thrown in /tmp/tmppwtv17uj.php\
    \ on line 34\n"
  timestamp: 1660028576
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $digits_arr = str_split($n);\n    $digits_odd = array_filter($digits_arr, function($n)\
    \ {\n        return $n % 2 !== 0;\n    });\n    if (count($digits_odd) == 0) {\n\
    \        return 0;\n    }\n    return array_product($digits_odd);\n}\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $prod = 1;\n    while ($n) {\n        $digit = $n % 10;\n        if ($digit\
    \ % 2) {\n            $prod *= $digit;\n        }\n        $n /= 10;\n    }\n\
    \    return $prod;\n}\n\necho digits(1);\necho digits(4);\necho digits(235);\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.1 to int loses precision in /tmp/tmpijhtbncs.php
    on line 14


    Deprecated: Implicit conversion from float 0.01 to int loses precision in /tmp/tmpijhtbncs.php
    on line 14


    Deprecated: Implicit conversion from float 0.001 to int loses precision in /tmp/tmpijhtbncs.php
    on line 14


    Deprecated: Implicit conversion from float 0.0001 to int loses precision in /tmp/tmpijhtbncs.php
    on line 14


    Deprecated: Implicit conversion from float 1.0E-5 to int loses precision in /tmp/tmpijhtbncs.php
    on line 14


    Deprecated: Implicit conversion from float 1.0000000000000002E-6 to int loses
    precision in /tmp/tmpijhtbncs.php on line 14


    Deprecated: Implicit conversion from float 1.0000000000000002E-7 to int loses
    precision in /tmp/tmpijhtbncs.php on line 14


    Deprecated: Implicit conversion from float 1.0000000000000002E-8 to int loses
    precision in /tmp/tmpijhtbncs.php on line 14


    Deprecated: Implicit conversion from float 1.0000000000000003E-9 to int loses
    precision in /tmp/tmpijhtbncs.php on line 14


    Deprecated: Implicit conversion from float 1.0000000000000003E-10 to int loses
    precision in /tmp/tmpijhtbncs.php on line 14


    Deprecated: Implicit conversion from float 1.0000000000000003E-11 to int loses
    precision in /tmp/tmpijhtbncs.php on line 14


    Deprecated: Implicit conversion from float 1.0000000000000002E-12 to int loses
    precision in /tmp/tmpijhtbncs.php on line 14


    Deprecated: Implicit conversion from float 1.0000000000000002E-13 to int loses
    precision in /tmp/tmpijhtbncs.php on line 14


    Deprecated: Implicit conversion from float 1.0000000000000002E-14 to int loses
    precision in /tmp/tmpijhtbncs.php on line 14


    Deprecated: Implicit conversion from float 1.0E-15 to int loses precision in /tmp/tmpijhtbncs.php
    on line 14


    Deprecated: Implicit conversion from float 1.0000000000000001E-16 to int loses
    precision in /tmp/tmpijhtbncs.php on line 14


    Deprecated: Implicit conversion from float 1.0E-17 to int loses precision in /tmp/tmpijhtbncs.php
    on line 14


    Deprecated: Implicit conversion from float'
  timestamp: 1660028576
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $odd_digits = array();\n    $string_num = \"$n\";\n    $array_of_numbers = str_split($string_num);\n\
    \    foreach ($array_of_numbers as $number) {\n        if ($number % 2 == 1) {\n\
    \            array_push($odd_digits, $number);\n        }\n    }\n    if (empty($odd_digits))\
    \ {\n        return 0;\n    } else {\n        return array_product($odd_digits);\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n  $product\
    \ = 1;\n  $digits = str_split($n);\n  foreach ($digits as $digit) {\n    if ($digit\
    \ % 2 == 1) {\n      $product *= $digit;\n    }\n  }\n  return $product;\n}\n\
    echo digits(1) . PHP_EOL;\necho digits(4) . PHP_EOL;\necho digits(235) . PHP_EOL;\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpugfmeanr.php:35\n\
    Stack trace:\n#0 /tmp/tmpugfmeanr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpugfmeanr.php\
    \ on line 35\n"
  timestamp: 1660028576
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $odd_digits = array();\n    $digits = str_split($n);\n    foreach ($digits as\
    \ $digit) {\n        if ($digit % 2 !== 0) {\n            $odd_digits[] = $digit;\n\
    \        }\n    }\n    if (empty($odd_digits)) {\n        return 0;\n    }\n \
    \   return array_product($odd_digits);\n}\n\necho digits(235);\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '15'
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $i = 0;\n    $s = 1;\n    while ($n > 0) {\n        $r = $n % 10;\n        if\
    \ ($r % 2 != 0) {\n            $s *= $r;\n        }\n        $n = (int)($n / 10);\n\
    \    }\n    return $s;\n}\necho digits(1) . PHP_EOL;\necho digits(4) . PHP_EOL;\n\
    echo digits(235) . PHP_EOL;\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb5k9qq1d.php:37\n\
    Stack trace:\n#0 /tmp/tmpb5k9qq1d.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpb5k9qq1d.php\
    \ on line 37\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $product = 1;\n    while ($n > 0) {\n        $digit = $n % 10;\n        if ($digit\
    \ % 2 == 1) {\n            $product *= $digit;\n        }\n        $n = ($n -\
    \ $digit) / 10;\n    }\n    return $product;\n}\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl30dzctq.php:33\n\
    Stack trace:\n#0 /tmp/tmpl30dzctq.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpl30dzctq.php\
    \ on line 33\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n\t$str\
    \ = (string)$n;\n\t$strArr = str_split($str);\n\t$output = array();\n\tforeach\
    \ ($strArr as $v) {\n\t\tif ($v % 2 != 0) {\n\t\t\t$output[] = $v;\n\t\t}\n\t\
    }\n\treturn array_product($output);\n}\necho digits(235789);\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "945\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp08899cm1.php:34\n\
    Stack trace:\n#0 /tmp/tmp08899cm1.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp08899cm1.php\
    \ on line 34\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n\n}\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4mnyql4g.php:19\n\
    Stack trace:\n#0 /tmp/tmp4mnyql4g.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp4mnyql4g.php\
    \ on line 19\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ // your code here\n    $sum = 1;\n    $n = (string)$n;\n    $len = strlen($n);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if (($n[$i] % 2) != 0) {\n     \
    \       $sum *= $n[$i];\n        }\n    }\n    return $sum;\n}\necho digits(1)\
    \ . \"\\n\";\necho digits(4) . \"\\n\";\necho digits(235) . \"\\n\";\n\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3uixkrdz.php:38\n\
    Stack trace:\n#0 /tmp/tmp3uixkrdz.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp3uixkrdz.php\
    \ on line 38\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n  //\
    \ input is a positive integer\n  // we want to find the product of all odd numbers\n\
    \  // store a result\n  // start with a count\n  // if a number is odd, multiply\
    \ it by result\n  // if a number is even, pass over it\n  // when count reaches\
    \ the end of the number, stop\n  // output: the result of all odd numbers\n  $result\
    \ = 1;\n  $nStr = (string)$n;\n  $length = strlen($nStr);\n  for ($i = 0; $i <\
    \ $length; $i++) {\n    if ($nStr[$i] % 2 !== 0) {\n      $result *= $nStr[$i];\n\
    \    }\n  }\n  if ($result === 1) {\n    return 0;\n  }\n  return $result;\n}\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpax6l7uo8.php:40\n\
    Stack trace:\n#0 /tmp/tmpax6l7uo8.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpax6l7uo8.php\
    \ on line 40\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n\n}\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4mnyql4g.php:19\n\
    Stack trace:\n#0 /tmp/tmp4mnyql4g.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp4mnyql4g.php\
    \ on line 19\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $result = array_reduce(str_split($n), function($sum, $digit) {\n        return\
    \ $sum + ($digit % 2 == 1 ? $digit : 0);\n    }, 0);\n    return $result == 0\
    \ ? $result : $result * digits($result);\n}\n\nfunction candidate(...$args) {\n\
    \    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    262144 bytes) in /tmp/tmp6uyxs8n4.php on line 14

    '
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $digits = str_split($n);\n    $result = 1;\n    foreach ($digits as $digit)\
    \ {\n        if ($digit % 2 == 1) {\n            $result *= $digit;\n        }\n\
    \    }\n    return $result;\n}\necho digits(1);\necho \"\\n\";\necho digits(4);\n\
    echo \"\\n\";\necho digits(235);\necho \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_tme7g7m.php:39\n\
    Stack trace:\n#0 /tmp/tmp_tme7g7m.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp_tme7g7m.php\
    \ on line 39\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n\tif($n\
    \ < 0) return 'Invalid input';\n\tif($n == 0) return 0;\n\t$arr = str_split($n);\n\
    \t$result = 1;\n\tforeach($arr as $a) {\n\t\tif($a % 2 == 1) {\n\t\t\t$result\
    \ *= $a;\n\t\t}\n\t}\n\treturn $result;\n}\nprint_r(digits(1));\necho '<br>';\n\
    print_r(digits(4));\necho '<br>';\nprint_r(digits(235));\necho '<br>';\nprint_r(digits(-1234));\n\
    echo '<br>';\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1<br>1<br>15<br>Invalid input<br>\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp008bl_k3.php:42\nStack trace:\n#0 /tmp/tmp008bl_k3.php(45):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp008bl_k3.php on line 42\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n\t$n\
    \ = (string)$n;\n\t$sum = 1;\n\t$product = 0;\n\tfor ($i = 0; $i < strlen($n);\
    \ $i++) {\n\t\tif ($n[$i] % 2 != 0) {\n\t\t\t$product = $product + $n[$i];\n\t\
    \t}\n\t}\n\techo $product;\n}\ndigits(235);\nfunction candidate(...$args) {\n\
    \    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "85\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7b_12n38.php:28\n\
    Stack trace:\n#0 /tmp/tmp7b_12n38.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp7b_12n38.php\
    \ on line 28\n"
  timestamp: 1660028576
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n  $n\
    \ = str_split($n);\n  $odds = [];\n  foreach ($n as $number) {\n    if ($number\
    \ % 2 === 1) {\n      $odds[] = $number;\n    }\n  }\n  if (empty($odds)) {\n\
    \    return 0;\n  }\n  return array_product($odds);\n}\n\necho digits(235);\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '15'
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n  $product\
    \ = 1;\n  while ($n > 0) {\n    $digit = $n % 10;\n    if ($digit % 2 != 0) {\n\
    \      $product *= $digit;\n    }\n    $n = (int)($n / 10);\n  }\n  return $product;\n\
    }\n$n = 12345;\necho digits($n);\necho \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe6wx8pw0.php:37\n\
    Stack trace:\n#0 /tmp/tmpe6wx8pw0.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpe6wx8pw0.php\
    \ on line 37\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n  $total\
    \ = 1;\n  if ($n == 0) {\n    return 0;\n  } else {\n    while ($n != 0) {\n \
    \     $digit = $n % 10;\n      if ($digit % 2 != 0) {\n        $total *= $digit;\n\
    \      }\n      $n = $n / 10;\n    }\n    return $total;\n  }\n}\n\necho digits(1).\"\
    \\n\";\necho digits(4).\"\\n\";\necho digits(235).\"\\n\";\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.1 to int loses precision in /tmp/tmp8uj24x47.php
    on line 17


    Deprecated: Implicit conversion from float 0.01 to int loses precision in /tmp/tmp8uj24x47.php
    on line 17


    Deprecated: Implicit conversion from float 0.001 to int loses precision in /tmp/tmp8uj24x47.php
    on line 17


    Deprecated: Implicit conversion from float 0.0001 to int loses precision in /tmp/tmp8uj24x47.php
    on line 17


    Deprecated: Implicit conversion from float 1.0E-5 to int loses precision in /tmp/tmp8uj24x47.php
    on line 17


    Deprecated: Implicit conversion from float 1.0000000000000002E-6 to int loses
    precision in /tmp/tmp8uj24x47.php on line 17


    Deprecated: Implicit conversion from float 1.0000000000000002E-7 to int loses
    precision in /tmp/tmp8uj24x47.php on line 17


    Deprecated: Implicit conversion from float 1.0000000000000002E-8 to int loses
    precision in /tmp/tmp8uj24x47.php on line 17


    Deprecated: Implicit conversion from float 1.0000000000000003E-9 to int loses
    precision in /tmp/tmp8uj24x47.php on line 17


    Deprecated: Implicit conversion from float 1.0000000000000003E-10 to int loses
    precision in /tmp/tmp8uj24x47.php on line 17


    Deprecated: Implicit conversion from float 1.0000000000000003E-11 to int loses
    precision in /tmp/tmp8uj24x47.php on line 17


    Deprecated: Implicit conversion from float 1.0000000000000002E-12 to int loses
    precision in /tmp/tmp8uj24x47.php on line 17


    Deprecated: Implicit conversion from float 1.0000000000000002E-13 to int loses
    precision in /tmp/tmp8uj24x47.php on line 17


    Deprecated: Implicit conversion from float 1.0000000000000002E-14 to int loses
    precision in /tmp/tmp8uj24x47.php on line 17


    Deprecated: Implicit conversion from float 1.0E-15 to int loses precision in /tmp/tmp8uj24x47.php
    on line 17


    Deprecated: Implicit conversion from float 1.0000000000000001E-16 to int loses
    precision in /tmp/tmp8uj24x47.php on line 17


    Deprecated: Implicit conversion from float 1.0E-17 to int loses precision in /tmp/tmp8uj24x47.php
    on line 17


    Deprecated: Implicit conversion from float'
  timestamp: 1660028576
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $digits = str_split($n);\n    $odd_digits = array_filter($digits, function($digit)\
    \ {\n        return ($digit % 2 === 1);\n    });\n    if (empty($odd_digits))\
    \ {\n        return 0;\n    }\n    return array_product($odd_digits);\n}\n\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $str = strval($n);\n    $arr = str_split($str);\n    $len = count($arr);\n \
    \   $total = 1;\n    for ($i = 0; $i < $len; $i++) {\n        if ($arr[$i] % 2\
    \ == 1) {\n            $total *= $arr[$i];\n        }\n    }\n    return $total;\n\
    }\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwkyggsd5.php:34\n\
    Stack trace:\n#0 /tmp/tmpwkyggsd5.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpwkyggsd5.php\
    \ on line 34\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n\t$product\
    \ = 1;\n\t$num = str_split($n);\n\tforeach ($num as $key => $value) {\n\t\tif\
    \ ($value % 2 != 0) {\n\t\t\t$product *= $value;\n\t\t}\n\t}\n\treturn $product;\n\
    }\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp38jh7uqh.php:32\n\
    Stack trace:\n#0 /tmp/tmp38jh7uqh.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp38jh7uqh.php\
    \ on line 32\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n  $num\
    \ = 0;\n  while ($n > 0) {\n    $digit = $n % 10;\n    if ($digit % 2 != 0) {\n\
    \      $num = $num * 10 + $digit;\n    }\n    $n = $n / 10;\n  }\n  $result =\
    \ 0;\n  while ($num > 0) {\n    $digit = $num % 10;\n    $result = $result * 10\
    \ + $digit;\n    $num = $num / 10;\n  }\n  return $result;\n}\n\nif (digits(4)\
    \ == 0) {\n  echo \"Test 1 passed.\\n\";\n} else {\n  echo \"Test 1 failed.\\\
    n\";\n}\n\nif (digits(235) == 15) {\n  echo \"Test 2 passed.\\n\";\n} else {\n\
    \  echo \"Test 2 failed.\\n\";\n}\n\nif (digits(45) == 5) {\n  echo \"Test 3 passed.\\\
    n\";\n} else {\n  echo \"Test 3 failed.\\n\";\n}\n\nif (digits(141) == 1) {\n\
    \  echo \"Test 4 passed.\\n\";\n} else {\n  echo \"Test 4 failed.\\n\";\n}\n\n\
    if (digits(455) == 25) {\n  echo \"Test 5 passed.\\n\";\n} else {\n  echo \"Test\
    \ 5 failed.\\n\";\n}\n\nif (digits(34534) == 35) {\n  echo \"Test 6 passed.\\\
    n\";\n} else {\n  echo \"Test 6 failed.\\n\";\n}\n\nif (digits(111111) == 7) {\n\
    \  echo \"Test 7 passed.\\n\";\n} else {\n  echo \"Test 7 failed.\\n\";\n}\n\n\
    if (digits(2) == 0) {\n  echo \"Test 8 passed.\\n\";\n} else {\n  echo \"Test\
    \ 8 failed.\\n\";\n}\n\nif (digits(0) == 0) {\n  echo \"Test 9 passed.\\n\";\n\
    } else {\n  echo \"Test 9 failed.\\n\";\n}\n\nif (digits(100001) == 1) {\n\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 83 in /tmp/tmppu36wzyi.php on line 99

    '
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $odds = 0;\n    $evens = 0;\n    $odds = $n % 10;\n    if ($odds % 2 === 0)\
    \ {\n        $evens += $odds;\n    } else {\n        $odds += $odds;\n    }\n\
    \    return $odds;\n}\n\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd702v8jb.php:28\n\
    Stack trace:\n#0 /tmp/tmpd702v8jb.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpd702v8jb.php\
    \ on line 28\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n  $split_int\
    \ = str_split($n);\n  $product = 1;\n  foreach ($split_int as $value) {\n    if\
    \ ($value % 2 == 1) {\n      $product *= $value;\n    }\n  }\n  if ($product ==\
    \ 1) {\n    return 0;\n  } else {\n    return $product;\n  }\n}\necho digits(2358).PHP_EOL;\n\
    \nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk1mb787h.php:34\n\
    Stack trace:\n#0 /tmp/tmpk1mb787h.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpk1mb787h.php\
    \ on line 34\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $result = 1;\n    $n = (string)$n;\n    for ($i = 0; $i < strlen($n); $i++)\
    \ {\n        if ((int)$n[$i] % 2 == 1) {\n            $result *= (int)$n[$i];\n\
    \        }\n    }\n    return $result;\n}\necho digits(135) . \"\\n\";\necho digits(4)\
    \ . \"\\n\";\necho digits(235) . \"\\n\";\nfunction candidate(...$args) {\n  \
    \  return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppu9qckym.php:35\n\
    Stack trace:\n#0 /tmp/tmppu9qckym.php(38): test()\n#1 {main}\n  thrown in /tmp/tmppu9qckym.php\
    \ on line 35\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $digits = str_split($n);\n    $product = 1;\n    foreach ($digits as $digit)\
    \ {\n        if ($digit % 2 != 0) {\n            $product *= $digit;\n       \
    \ }\n    }\n    return $product;\n}\nfunction candidate(...$args) {\n    return\
    \ digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(98765) !== 315) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa3fvuscv.php:32\n\
    Stack trace:\n#0 /tmp/tmpa3fvuscv.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpa3fvuscv.php\
    \ on line 32\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n  $num\
    \ = str_split($n);\n  $total = 1;\n  foreach ($num as $num) {\n    if ($num %\
    \ 2 !== 0) {\n      $total *= $num;\n    }\n  }\n  return $total == 1 ? 0 : $total;\n\
    }\necho digits(1) . PHP_EOL;\necho digits(4) . PHP_EOL;\necho digits(235) . PHP_EOL;\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\n0\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpluzqpedd.php:31\n\
    Stack trace:\n#0 /tmp/tmpluzqpedd.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpluzqpedd.php\
    \ on line 31\n"
  timestamp: 1660028576
- exit_code: 0
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n\t//\
    \ convert $n to string\n\t$str = strval($n);\n\t// convert $str to array\n\t$arr\
    \ = str_split($str);\n\t// create variable $num_count to hold the value of 0\n\
    \t$num_count = 0;\n\t// create variable $answer to hold the value of 1\n\t$answer\
    \ = 1;\n\t// for each loop to go through each value in $arr\n\tforeach ($arr as\
    \ $value) {\n\t\t// convert $value to integer\n\t\t$value = intval($value);\n\t\
    \t// compare $value to 0 to check if it is odd\n\t\tif ($value % 2 !== 0) {\n\t\
    \t\t// if it is odd\n\t\t\t// add 1 to $num_count\n\t\t\t$num_count += 1;\n\t\t\
    \t// multiply $answer by $value\n\t\t\t$answer *= $value;\n\t\t}\n\t}\n\t// compare\
    \ $num_count to 0 to check if there is any odd number in the array\n\tif ($num_count\
    \ === 0) {\n\t\t// if there is no odd number\n\t\t// return 0\n\t\treturn 0;\n\
    \t} else {\n\t\t// if there is at least one odd number\n\t\t// return $answer\n\
    \t\treturn $answer;\n\t}\n}\n\n$number = 235;\necho digits($number);\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '15'
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n\t$result\
    \ = 1;\n\t$n = (string)$n;\n\t$n = str_split($n);\n\tfor ($i=0; $i < count($n);\
    \ $i++) { \n\t\tif ($n[$i] % 2 != 0) {\n\t\t\t$result *= $n[$i];\n\t\t}\n\t}\n\
    \treturn $result;\n}\n\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprb3_lh6e.php:34\n\
    Stack trace:\n#0 /tmp/tmprb3_lh6e.php(37): test()\n#1 {main}\n  thrown in /tmp/tmprb3_lh6e.php\
    \ on line 34\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $product = 1;\n    while ($n > 0) {\n        $remainder = $n % 10;\n       \
    \ if ($remainder % 2 != 0) {\n            $product *= $remainder;\n        }\n\
    \        $n = floor($n / 10);\n    }\n    return $product;\n}\necho digits(1).\"\
    \\n\";\necho digits(4).\"\\n\";\necho digits(235).\"\\n\";\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4saa2fh8.php:36\n\
    Stack trace:\n#0 /tmp/tmp4saa2fh8.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp4saa2fh8.php\
    \ on line 36\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ // Enter code here.\n}\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9_funr22.php:19\n\
    Stack trace:\n#0 /tmp/tmp9_funr22.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp9_funr22.php\
    \ on line 19\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $numbers = str_split($n);\n    $result = 0;\n    foreach ($numbers as $value)\
    \ {\n        if ($value % 2 == 1) {\n            $result *= $value;\n        }\n\
    \    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp82en6fsq.php:26\n\
    Stack trace:\n#0 /tmp/tmp82en6fsq.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp82en6fsq.php\
    \ on line 26\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $prod = 1;\n    $digits = str_split($n);\n    foreach ($digits as $digit) {\n\
    \        if ($digit % 2 != 0) {\n            $prod *= $digit;\n        }\n   \
    \ }\n    return $prod;\n}\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprc6kg0zu.php:32\n\
    Stack trace:\n#0 /tmp/tmprc6kg0zu.php(35): test()\n#1 {main}\n  thrown in /tmp/tmprc6kg0zu.php\
    \ on line 32\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n   \
    \ $num = $n;\n    $odd = 0;\n    while ($num > 0) {\n        $curr_digit = $num\
    \ % 10;\n        if ($curr_digit % 2 != 0) {\n            $odd *= $curr_digit;\n\
    \        }\n        $num = ($num - $curr_digit) / 10;\n    }\n    return $odd;\n\
    }\n\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgthgog3d.php:29\n\
    Stack trace:\n#0 /tmp/tmpgthgog3d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpgthgog3d.php\
    \ on line 29\n"
  timestamp: 1660028576
- exit_code: 255
  program: "<?php\n// Given a positive integer n, return the product of the odd digits.\n\
    // Return 0 if all digits are even.\n// For example:\n// >>> digits(1)\n// 1\n\
    // >>> digits(4)\n// 0\n// >>> digits(235)\n// 15\nfunction digits($n) {\n  $product\
    \ = 1;\n  while ($n > 0) {\n    $last_digit = $n % 10;\n    if ($last_digit %\
    \ 2 != 0) {\n      $product *= $last_digit;\n    }\n    $n = (int)($n / 10);\n\
    \  }\n  return $product;\n}\necho digits(1);\necho digits(4);\necho digits(235);\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1115\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppv4l965k.php:36\n\
    Stack trace:\n#0 /tmp/tmppv4l965k.php(39): test()\n#1 {main}\n  thrown in /tmp/tmppv4l965k.php\
    \ on line 36\n"
  timestamp: 1660028576

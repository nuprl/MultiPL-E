language: php
name: HumanEval_34_unique
results:
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_keys(array_flip($l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_7p0o0ne.php:14\n\
    Stack trace:\n#0 /tmp/tmp_7p0o0ne.php(17): test()\n#1 {main}\n  thrown in /tmp/tmp_7p0o0ne.php\
    \ on line 14\n"
  timestamp: 1659824326
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_unique($l);\n}\n\nfunction candidate(...$args) {\n    return\
    \ unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3nu9vlm6.php:14\n\
    Stack trace:\n#0 /tmp/tmp3nu9vlm6.php(17): test()\n#1 {main}\n  thrown in /tmp/tmp3nu9vlm6.php\
    \ on line 14\n"
  timestamp: 1659824326
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\treturn array_unique($l);\n}\nfunction candidate(...$args) {\n    return\
    \ unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpadpyr_7i.php:13\n\
    Stack trace:\n#0 /tmp/tmpadpyr_7i.php(16): test()\n#1 {main}\n  thrown in /tmp/tmpadpyr_7i.php\
    \ on line 13\n"
  timestamp: 1659824326
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\treturn array_unique($l);\n}\n\nfunction candidate(...$args) {\n    return\
    \ unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpezewzii6.php:14\n\
    Stack trace:\n#0 /tmp/tmpezewzii6.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpezewzii6.php\
    \ on line 14\n"
  timestamp: 1659824326
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824326
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $r = array();\n    foreach ($l as $v)\n        if (!in_array($v, $r))\n\
    \            $r[] = $v;\n    sort($r);\n    return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824326
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\treturn array_keys(array_flip($l));\n}\n\nfunction candidate(...$args) {\n\
    \    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbl4ob37t.php:14\n\
    Stack trace:\n#0 /tmp/tmpbl4ob37t.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpbl4ob37t.php\
    \ on line 14\n"
  timestamp: 1659824326
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$u = array();\n\tforeach ($l as $v) {\n\t\tif (!in_array($v, $u)) {\n\t\
    \t\t$u[] = $v;\n\t\t}\n\t}\n\tsort($u);\n\treturn $u;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824326
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$u = array();\n\tforeach ($l as $e) {\n\t\tif (!in_array($e, $u)) {\n\t\
    \t\t$u[] = $e;\n\t\t}\n\t}\n\treturn $u;\n}\n\nfunction candidate(...$args) {\n\
    \    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgy6i77tr.php:20\n\
    Stack trace:\n#0 /tmp/tmpgy6i77tr.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpgy6i77tr.php\
    \ on line 20\n"
  timestamp: 1659824326
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $k = [];\n    foreach ($l as $e) {\n        if (!in_array($e, $k)) {\n\
    \            $k[] = $e;\n        }\n    }\n    sort($k);\n    return $k;\n}\n\n\
    function candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2,\
    \ 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824326
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    sort($l);\n    return array_merge(array_diff_assoc($l, array_unique($l)),\
    \ array_unique($l));\n}\n\nfunction candidate(...$args) {\n    return unique(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0,\
    \ 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp40xzaxpe.php:15\n\
    Stack trace:\n#0 /tmp/tmp40xzaxpe.php(18): test()\n#1 {main}\n  thrown in /tmp/tmp40xzaxpe.php\
    \ on line 15\n"
  timestamp: 1659824326
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $a = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $a))\
    \ {\n            $a[] = $e;\n        }\n    }\n    sort($a);\n    return $a;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824326
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_values(array_unique($l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb4ywqucw.php:14\n\
    Stack trace:\n#0 /tmp/tmpb4ywqucw.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpb4ywqucw.php\
    \ on line 14\n"
  timestamp: 1659824326
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_values(array_unique($l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb4ywqucw.php:14\n\
    Stack trace:\n#0 /tmp/tmpb4ywqucw.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpb4ywqucw.php\
    \ on line 14\n"
  timestamp: 1659824326
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$r = array();\n\tforeach ($l as $a) {\n\t\t$r[$a] = 1;\n\t}\n\tksort($r);\n\
    \treturn array_keys($r);\n}\n\nfunction candidate(...$args) {\n    return unique(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0,\
    \ 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824326
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_unique($l);\n}\nfunction candidate(...$args) {\n    return\
    \ unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvkwj_rg9.php:13\n\
    Stack trace:\n#0 /tmp/tmpvkwj_rg9.php(16): test()\n#1 {main}\n  thrown in /tmp/tmpvkwj_rg9.php\
    \ on line 13\n"
  timestamp: 1659824326
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_unique($l);\n}\nfunction candidate(...$args) {\n    return\
    \ unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvkwj_rg9.php:13\n\
    Stack trace:\n#0 /tmp/tmpvkwj_rg9.php(16): test()\n#1 {main}\n  thrown in /tmp/tmpvkwj_rg9.php\
    \ on line 13\n"
  timestamp: 1659824326
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\treturn array_unique($l);\n}\n\nfunction candidate(...$args) {\n    return\
    \ unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpezewzii6.php:14\n\
    Stack trace:\n#0 /tmp/tmpezewzii6.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpezewzii6.php\
    \ on line 14\n"
  timestamp: 1659824326
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $ret = array();\n    foreach ($l as $k) {\n        if (!in_array($k,\
    \ $ret)) {\n            $ret[] = $k;\n        }\n    }\n    sort($ret);\n    return\
    \ $ret;\n}\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\
    \ !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824326
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    if (count($l) === 0) {\n        return array();\n    } else {\n     \
    \   sort($l);\n        $res = array($l[0]);\n        for ($i = 1; $i < count($l);\
    \ $i++) {\n            if ($l[$i] !== $l[$i - 1]) {\n                $res[] =\
    \ $l[$i];\n            }\n        }\n        return $res;\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3,\
    \ 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824326
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $s = [];\n    foreach ($l as $v) {\n        $s[$v] = 1;\n    }\n    ksort($s);\n\
    \    return array_keys($s);\n}\nfunction candidate(...$args) {\n    return unique(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0,\
    \ 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660008977
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $s = array();\n    foreach ($l as $k) {\n        $s[$k] = $k;\n    }\n\
    \    sort($s);\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return\
    \ unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660008977
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $l = array_flip($l);\n    $l = array_keys($l);\n    sort($l);\n    return\
    \ $l;\n}\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\
    \ !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660008977
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$s = array();\n\t$t = array();\n\tforeach ($l as $i) {\n\t\tif (!in_array($i,\
    \ $s)) {\n\t\t\t$s[] = $i;\n\t\t\t$t[] = $i;\n\t\t}\n\t}\n\treturn $t;\n}\n\n\
    function candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2,\
    \ 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj24cqq2n.php:22\n\
    Stack trace:\n#0 /tmp/tmpj24cqq2n.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpj24cqq2n.php\
    \ on line 22\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\treturn array_unique($l);\n}\n\nfunction candidate(...$args) {\n    return\
    \ unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpezewzii6.php:14\n\
    Stack trace:\n#0 /tmp/tmpezewzii6.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpezewzii6.php\
    \ on line 14\n"
  timestamp: 1659824326
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_unique($l);\n}\nfunction candidate(...$args) {\n    return\
    \ unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvkwj_rg9.php:13\n\
    Stack trace:\n#0 /tmp/tmpvkwj_rg9.php(16): test()\n#1 {main}\n  thrown in /tmp/tmpvkwj_rg9.php\
    \ on line 13\n"
  timestamp: 1659824326
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return(array_values(array_unique($l)));\n}\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbrq8jjas.php:13\n\
    Stack trace:\n#0 /tmp/tmpbrq8jjas.php(16): test()\n#1 {main}\n  thrown in /tmp/tmpbrq8jjas.php\
    \ on line 13\n"
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    sort($l);\n    return array_reduce($l, function($result, $element) {\n\
    \        if (end($result) !== $element)\n            $result[] = $element;\n \
    \       return $result;\n    }, array());\n}\nfunction candidate(...$args) {\n\
    \    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\treturn array_values(array_unique($l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkrvmp0t2.php:14\n\
    Stack trace:\n#0 /tmp/tmpkrvmp0t2.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpkrvmp0t2.php\
    \ on line 14\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_values(array_unique($l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb4ywqucw.php:14\n\
    Stack trace:\n#0 /tmp/tmpb4ywqucw.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpb4ywqucw.php\
    \ on line 14\n"
  timestamp: 1659824326
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    if (count($l) === 0) {\n        return $l;\n    }\n    $n = array($l[0]);\n\
    \    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i] !== $l[$i - 1])\
    \ {\n            $n[] = $l[$i];\n        }\n    }\n    return $n;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3,\
    \ 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7n7bmnef.php:23\n\
    Stack trace:\n#0 /tmp/tmp7n7bmnef.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp7n7bmnef.php\
    \ on line 23\n"
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $m = array();\n    foreach ($l as $x) {\n        $m[$x] = True;\n   \
    \ }\n    ksort($m);\n    return array_keys($m);\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    sort($l);\n    return array_values(array_unique($l));\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3,\
    \ 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $l = array_unique($l);\n    sort($l);\n    return $l;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3,\
    \ 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $l = array_values($l);\n    sort($l);\n    $ll = count($l);\n    for\
    \ ($i = 1; $i < $ll; ++$i) {\n        while ($i < $ll && $l[$i] == $l[$i - 1])\
    \ {\n            $i++;\n        }\n        if ($i < $ll) {\n            $l[$i\
    \ - 1] = $l[$i];\n        }\n    }\n    $l = array_slice($l, 0, $i);\n    return\
    \ $l;\n}\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\
    \ !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6cukiva6.php:26\n\
    Stack trace:\n#0 /tmp/tmp6cukiva6.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp6cukiva6.php\
    \ on line 26\n"
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$u = array();\n\tforeach ($l as $v)\n\t\tif (!in_array($v, $u))\n\t\t\t\
    $u[] = $v;\n\tsort($u);\n\treturn $u;\n}\n\nfunction candidate(...$args) {\n \
    \   return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $result = array();\n    foreach ($l as $item) {\n        if (!in_array($item,\
    \ $result)) {\n            $result[] = $item;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return unique(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0,\
    \ 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    if (!is_array($l)) {\n        die(\"unique() requires an array as the\
    \ first argument.\");\n    }\n    $l = array_values($l);\n    sort($l);\n    $n\
    \ = count($l);\n    $out = array();\n    for ($i = 0; $i < $n; $i++) {\n     \
    \   if ($i + 1 < $n && $l[$i] == $l[$i + 1]) {\n            continue;\n      \
    \  }\n        $out[] = $l[$i];\n    }\n    return $out;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return $l ? array_merge(unique(array_slice($l, 1)), array_slice($l, 0,\
    \ 1)) : array();\n}\nfunction candidate(...$args) {\n    return unique(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0,\
    \ 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps25uc8op.php:13\n\
    Stack trace:\n#0 /tmp/tmps25uc8op.php(16): test()\n#1 {main}\n  thrown in /tmp/tmps25uc8op.php\
    \ on line 13\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    // Naive solution\n    return array_unique($l);\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn96p9rc.php:15\n\
    Stack trace:\n#0 /tmp/tmpmn96p9rc.php(18): test()\n#1 {main}\n  thrown in /tmp/tmpmn96p9rc.php\
    \ on line 15\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$l = array_map('trim', $l);\n\treturn array_keys(array_flip($l));\n}\n\n\
    function candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2,\
    \ 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptba4vtf_.php:15\n\
    Stack trace:\n#0 /tmp/tmptba4vtf_.php(18): test()\n#1 {main}\n  thrown in /tmp/tmptba4vtf_.php\
    \ on line 15\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    if (count($l) === 0) {\n        return array();\n    }\n    return array_values(array_unique($l));\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpox6dpa2i.php:17\n\
    Stack trace:\n#0 /tmp/tmpox6dpa2i.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpox6dpa2i.php\
    \ on line 17\n"
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $l = array_unique($l);\n    sort($l);\n    return $l;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3,\
    \ 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    sort($l);\n    return array_values(array_unique($l));\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3,\
    \ 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    sort($l);\n    $filtered = array_unique($l);\n    return array_values($filtered);\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $result = array();\n    foreach ($l as $e) {\n        if (!in_array($e,\
    \ $result)) {\n            $result[] = $e;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\n$t = array(\n    array(\n        'in' => array(1, 1,\
    \ 2, 3, 3, 4, 5, 5, 6, 7, 7, 8, 9, 10, 10),\n        'out' => array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10),\n    ),\n    array(\n        'in' => array(5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123),\n        'out' => array(0, 2, 3, 5, 9, 123),\n    ),\n);\n\n\
    foreach ($t as $test) {\n    $out = unique($test['in']);\n    if ($out != $test['out'])\
    \ {\n        printf(\"Failed.  Expected %s, got %s\\n\", implode(',', $test['out']),\
    \ implode(',', $out));\n    }\n}\nfunction candidate(...$args) {\n    return unique(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0,\
    \ 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $n = [];\n    foreach ($l as $i)\n        if (!in_array($i, $n))\n  \
    \          $n[] = $i;\n    sort($n);\n    return $n;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824326
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    if (!count($l)) return array();\n    sort($l);\n    $u = array($l[0]);\n\
    \    for ($i = 1; $i < count($l); $i++)\n        if ($l[$i-1] != $l[$i])\n   \
    \         $u[] = $l[$i];\n    return $u;\n}\n\nfunction candidate(...$args) {\n\
    \    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$l = array_flip($l);\n\treturn array_keys($l);\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp20m23ten.php:15\n\
    Stack trace:\n#0 /tmp/tmp20m23ten.php(18): test()\n#1 {main}\n  thrown in /tmp/tmp20m23ten.php\
    \ on line 15\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$u = array();\n\tforeach ($l as $v) {\n\t\tif (!in_array($v, $u)) $u[]\
    \ = $v;\n\t}\n\treturn $u;\n}\n\nfunction candidate(...$args) {\n    return unique(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0,\
    \ 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxb5xpf_9.php:18\n\
    Stack trace:\n#0 /tmp/tmpxb5xpf_9.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpxb5xpf_9.php\
    \ on line 18\n"
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $n = array();\n    foreach ($l as $i) {\n        if (!in_array($i, $n))\
    \ {\n            $n[] = $i;\n        }\n    }\n    sort($n);\n    return $n;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    sort($l);\n    $s = array();\n    $size = count($l);\n    for ($i = 0;\
    \ $i < $size; $i++) {\n        if (!isset($l[$i+1]) || $l[$i] != $l[$i+1]) {\n\
    \            $s[] = $l[$i];\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$l = array_unique($l);\n\tnatsort($l);\n\treturn $l;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpje5y0xpt.php:16\n\
    Stack trace:\n#0 /tmp/tmpje5y0xpt.php(19): test()\n#1 {main}\n  thrown in /tmp/tmpje5y0xpt.php\
    \ on line 16\n"
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$r = array();\n\tforeach ($l as $value) {\n\t\tif (!in_array($value, $r))\
    \ {\n\t\t\t$r[] = $value;\n\t\t}\n\t}\n\tsort($r);\n\treturn $r;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3,\
    \ 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    if (!is_array($l)) {\n        return $l;\n    }\n    $uniques = array();\n\
    \    foreach ($l as $e) {\n        if (is_array($e)) {\n            $uniques[]\
    \ = $e;\n        } else {\n            $uniques[$e] = $e;\n        }\n    }\n\
    \    ksort($uniques);\n    return array_values($uniques);\n}\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$l = array_values($l);\n\tfor ($i = 0; $i < count($l); $i++) {\n\t\t$k\
    \ = $l[$i];\n\t\tfor ($j = $i + 1; $j < count($l); $j++) {\n\t\t\tif ($l[$j] ==\
    \ $k) {\n\t\t\t\tarray_splice($l, $j, 1);\n\t\t\t\t$j--;\n\t\t\t}\n\t\t}\n\t}\n\
    \tsort($l);\n\treturn $l;\n}\n\nfunction candidate(...$args) {\n    return unique(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0,\
    \ 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$l = array_unique($l);\n\tsort($l);\n\treturn $l;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$r = array();\n\tforeach ($l as $i)\n\t\tif (!in_array($i, $r)) $r[] =\
    \ $i;\n\tsort($r);\n\treturn $r;\n}\n\nfunction candidate(...$args) {\n    return\
    \ unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_unique($l);\n}\n\nfunction candidate(...$args) {\n    return\
    \ unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3nu9vlm6.php:14\n\
    Stack trace:\n#0 /tmp/tmp3nu9vlm6.php(17): test()\n#1 {main}\n  thrown in /tmp/tmp3nu9vlm6.php\
    \ on line 14\n"
  timestamp: 1659824326
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_unique($l);\n}\n\nfunction candidate(...$args) {\n    return\
    \ unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3nu9vlm6.php:14\n\
    Stack trace:\n#0 /tmp/tmp3nu9vlm6.php(17): test()\n#1 {main}\n  thrown in /tmp/tmp3nu9vlm6.php\
    \ on line 14\n"
  timestamp: 1659824326
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$unique = array();\n\t$i = 0;\n\t$j = 0;\n\twhile ($i < count($l)) {\n\t\
    \tif ($j == 0 || $unique[$j - 1] != $l[$i]) {\n\t\t\t$unique[$j] = $l[$i];\n\t\
    \t\t$j++;\n\t\t}\n\t\t$i++;\n\t}\n\tsort($unique);\n\treturn $unique;\n}\nfunction\
    \ candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3,\
    \ 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyfhjbqpg.php:24\n\
    Stack trace:\n#0 /tmp/tmpyfhjbqpg.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpyfhjbqpg.php\
    \ on line 24\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\treturn array_keys(array_flip($l));\n}\n\nfunction candidate(...$args) {\n\
    \    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbl4ob37t.php:14\n\
    Stack trace:\n#0 /tmp/tmpbl4ob37t.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpbl4ob37t.php\
    \ on line 14\n"
  timestamp: 1659824326
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    sort($l);\n    $unique_list = array();\n    $previous = null;\n    foreach\
    \ ($l as $current) {\n        if ($current != $previous) {\n            $unique_list[]\
    \ = $current;\n        }\n        $previous = $current;\n    }\n    return $unique_list;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiifuste5.php:23\n\
    Stack trace:\n#0 /tmp/tmpiifuste5.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpiifuste5.php\
    \ on line 23\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_values(array_unique($l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb4ywqucw.php:14\n\
    Stack trace:\n#0 /tmp/tmpb4ywqucw.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpb4ywqucw.php\
    \ on line 14\n"
  timestamp: 1659824326
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_keys(array_flip($l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_7p0o0ne.php:14\n\
    Stack trace:\n#0 /tmp/tmp_7p0o0ne.php(17): test()\n#1 {main}\n  thrown in /tmp/tmp_7p0o0ne.php\
    \ on line 14\n"
  timestamp: 1659824326
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_values(array_unique($l));\n}\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb6cw43ua.php:13\n\
    Stack trace:\n#0 /tmp/tmpb6cw43ua.php(16): test()\n#1 {main}\n  thrown in /tmp/tmpb6cw43ua.php\
    \ on line 13\n"
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$r = array();\n\tforeach ($l as $i) {\n\t\tif (!in_array($i, $r)) {\n\t\
    \t\t$r[] = $i;\n\t\t}\n\t}\n\tsort($r);\n\treturn $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\treturn array_values(array_unique($l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkrvmp0t2.php:14\n\
    Stack trace:\n#0 /tmp/tmpkrvmp0t2.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpkrvmp0t2.php\
    \ on line 14\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$r = array();\n\t$m = max($l);\n\t$b = array_fill(0, $m+1, false);\n\t\
    foreach ($l as $x)\n\t\tif (!$b[$x]) {\n\t\t\t$b[$x] = true;\n\t\t\t$r[] = $x;\n\
    \t\t}\n\treturn $r;\n}\n\nfunction candidate(...$args) {\n    return unique(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0,\
    \ 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph55_mz0w.php:22\n\
    Stack trace:\n#0 /tmp/tmph55_mz0w.php(25): test()\n#1 {main}\n  thrown in /tmp/tmph55_mz0w.php\
    \ on line 22\n"
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    if (empty($l)) return array();\n    sort($l);\n    $s = array($l[0]);\n\
    \    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i] != $l[$i-1]) {\n\
    \            $s[] = $l[$i];\n        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t//$l = array_unique($l);\n\t//sort($l);\n\t//return $l;\n\tasort($l);\n\
    \treset($l);\n\t$last_key = null;\n\t$new = array();\n\tforeach ($l as $key =>\
    \ $val) {\n\t\tif ($key === $last_key)\n\t\t\tcontinue;\n\t\t$new[$key] = $val;\n\
    \t\t$last_key = $key;\n\t}\n\treturn $new;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe47y8r06.php:27\n\
    Stack trace:\n#0 /tmp/tmpe47y8r06.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpe47y8r06.php\
    \ on line 27\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $s = sort($l);\n    $l = array_unique($l);\n    if ($s) {\n        $l\
    \ = array_reverse($l);\n    }\n    return $l;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpis4ipdtm.php:19\n\
    Stack trace:\n#0 /tmp/tmpis4ipdtm.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpis4ipdtm.php\
    \ on line 19\n"
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$ret = array();\n\tforeach ($l as $x) {\n\t\tif (!in_array($x, $ret)) {\n\
    \t\t\t$ret[] = $x;\n\t\t}\n\t}\n\tsort($ret);\n\treturn $ret;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$s = array();\n\tforeach ($l as $e) {\n\t\tif (!in_array($e, $s))\n\t\t\
    \t$s[] = $e;\n\t}\n\tsort($s);\n\treturn $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    if (!$l) {\n        return $l;\n    }\n    return array_unique($l);\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjf_gdr1o.php:17\n\
    Stack trace:\n#0 /tmp/tmpjf_gdr1o.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpjf_gdr1o.php\
    \ on line 17\n"
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $s = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $s))\
    \ {\n            $s[] = $e;\n        }\n    }\n    sort($s);\n    return $s;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$u = array();\n\tforeach ($l as $value) {\n\t\tif (!in_array($value, $u))\
    \ {\n\t\t\t$u[] = $value;\n\t\t}\n\t}\n\treturn $u;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpltndpfe1.php:20\n\
    Stack trace:\n#0 /tmp/tmpltndpfe1.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpltndpfe1.php\
    \ on line 20\n"
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$t = [];\n\tforeach ($l as $v)\n\t\tif (!in_array($v, $t))\n\t\t\t$t[]\
    \ = $v;\n\tsort($t);\n\treturn $t;\n}\n\nfunction candidate(...$args) {\n    return\
    \ unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_keys(array_flip($l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_7p0o0ne.php:14\n\
    Stack trace:\n#0 /tmp/tmp_7p0o0ne.php(17): test()\n#1 {main}\n  thrown in /tmp/tmp_7p0o0ne.php\
    \ on line 14\n"
  timestamp: 1659824326
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$r = array();\n\tforeach ($l as $e) {\n\t\tif (!in_array($e, $r)) {\n\t\
    \t\t$r[] = $e;\n\t\t}\n\t}\n\treturn $r;\n}\nfunction candidate(...$args) {\n\
    \    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6u_0bras.php:19\n\
    Stack trace:\n#0 /tmp/tmp6u_0bras.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp6u_0bras.php\
    \ on line 19\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_keys(array_flip($l));\n}\nfunction candidate(...$args) {\n\
    \    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpplzekgxo.php:13\n\
    Stack trace:\n#0 /tmp/tmpplzekgxo.php(16): test()\n#1 {main}\n  thrown in /tmp/tmpplzekgxo.php\
    \ on line 13\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    sort($l);\n    return array_unique($l);\n}\n\n$list = array(5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123);\n$list = unique($list);\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpapa84w25.php:18\n\
    Stack trace:\n#0 /tmp/tmpapa84w25.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpapa84w25.php\
    \ on line 18\n"
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $found = array();\n    foreach ($l as $k => $v) {\n        if (!in_array($v,\
    \ $found)) {\n            $found[] = $v;\n        }\n    }\n    sort($found);\n\
    \    return $found;\n}\n\nfunction candidate(...$args) {\n    return unique(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0,\
    \ 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_unique($l);\n}\n\nfunction candidate(...$args) {\n    return\
    \ unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3nu9vlm6.php:14\n\
    Stack trace:\n#0 /tmp/tmp3nu9vlm6.php(17): test()\n#1 {main}\n  thrown in /tmp/tmp3nu9vlm6.php\
    \ on line 14\n"
  timestamp: 1659824326
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$s = array();\n\tforeach ($l as $k)\n\t\t$s[$k] = $k;\n\treturn array_values($s);\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk9h8eo7c.php:17\n\
    Stack trace:\n#0 /tmp/tmpk9h8eo7c.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpk9h8eo7c.php\
    \ on line 17\n"
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    if (count($l) == 0) {\n        return $l;\n    }\n    sort($l);\n   \
    \ $head = $l[0];\n    $tail = array_slice($l, 1);\n    $tail = unique($tail);\n\
    \    if ($head == $tail[0]) {\n        return $tail;\n    } else {\n        return\
    \ array_merge(array($head), $tail);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 0 in /tmp/tmpmi3q__vk.php on line 13

    '
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    sort($l);\n    return array_merge(array_unique($l), array_fill_keys(array_keys($l,\
    \ null), null));\n}\n\nfunction candidate(...$args) {\n    return unique(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0,\
    \ 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7e1x1ud6.php:15\n\
    Stack trace:\n#0 /tmp/tmp7e1x1ud6.php(18): test()\n#1 {main}\n  thrown in /tmp/tmp7e1x1ud6.php\
    \ on line 15\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $key => $val) {\n        if (!in_array($val,\
    \ $u)) {\n            $u[] = $val;\n        }\n    }\n    return $u;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3,\
    \ 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_dtibdb2.php:20\n\
    Stack trace:\n#0 /tmp/tmp_dtibdb2.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp_dtibdb2.php\
    \ on line 20\n"
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_values(array_unique($l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb4ywqucw.php:14\n\
    Stack trace:\n#0 /tmp/tmpb4ywqucw.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpb4ywqucw.php\
    \ on line 14\n"
  timestamp: 1659824326
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    sort($l);\n    return array_values(array_unique($l));\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3,\
    \ 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$l=array_unique($l);\n\tsort($l);\n\treturn $l;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$s = array();\n\tforeach ($l as $x) {\n\t\tif (!in_array($x, $s)) {\n\t\
    \t\t$s[] = $x;\n\t\t}\n\t}\n\tsort($s);\n\treturn $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$r = array();\n\tforeach ($l as $v) {\n\t\tif (!in_array($v, $r)) {\n\t\
    \t\t$r[] = $v;\n\t\t}\n\t}\n\tsort($r);\n\treturn $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $l = array_unique($l);\n    sort($l);\n    return $l;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3,\
    \ 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    sort($l);\n    $result = array();\n    $prev = null;\n    foreach ($l\
    \ as $item) {\n        if ($item != $prev) {\n            $result[] = $item;\n\
    \        }\n        $prev = $item;\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3,\
    \ 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjel_ygnq.php:23\n\
    Stack trace:\n#0 /tmp/tmpjel_ygnq.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpjel_ygnq.php\
    \ on line 23\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_unique($l);\n}\nfunction candidate(...$args) {\n    return\
    \ unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvkwj_rg9.php:13\n\
    Stack trace:\n#0 /tmp/tmpvkwj_rg9.php(16): test()\n#1 {main}\n  thrown in /tmp/tmpvkwj_rg9.php\
    \ on line 13\n"
  timestamp: 1659824326
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_unique($l);\n}\n\nfunction candidate(...$args) {\n    return\
    \ unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3nu9vlm6.php:14\n\
    Stack trace:\n#0 /tmp/tmp3nu9vlm6.php(17): test()\n#1 {main}\n  thrown in /tmp/tmp3nu9vlm6.php\
    \ on line 14\n"
  timestamp: 1659824326
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_unique($l);\n}\n\nfunction candidate(...$args) {\n    return\
    \ unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3nu9vlm6.php:14\n\
    Stack trace:\n#0 /tmp/tmp3nu9vlm6.php(17): test()\n#1 {main}\n  thrown in /tmp/tmp3nu9vlm6.php\
    \ on line 14\n"
  timestamp: 1659824326
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$l = sort($l);\n\t$uniq_l = array();\n\t$last = null;\n\tforeach ($l as\
    \ $element) {\n\t\tif ($element != $last) {\n\t\t\t$uniq_l[] = $element;\n\t\t\
    }\n\t\t$last = $element;\n\t}\n\treturn $uniq_l;\n}\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: foreach() argument must be of type array|object, bool given\
    \ in /tmp/tmp22eaywby.php on line 9\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp22eaywby.php:22\nStack trace:\n#0 /tmp/tmp22eaywby.php(25): test()\n\
    #1 {main}\n  thrown in /tmp/tmp22eaywby.php on line 22\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$s = array();\n\tforeach ($l as $e) {\n\t\tif (!isset($s[$e])) {\n\t\t\t\
    $s[$e] = $e;\n\t\t}\n\t}\n\treturn array_values($s);\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2ceujtt4.php:20\n\
    Stack trace:\n#0 /tmp/tmp2ceujtt4.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp2ceujtt4.php\
    \ on line 20\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_keys(array_flip($l));\n}\nfunction candidate(...$args) {\n\
    \    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpplzekgxo.php:13\n\
    Stack trace:\n#0 /tmp/tmpplzekgxo.php(16): test()\n#1 {main}\n  thrown in /tmp/tmpplzekgxo.php\
    \ on line 13\n"
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    sort($l);\n    $s = array();\n    foreach ($l as $x) {\n        if (count($s)\
    \ == 0 || $s[count($s) - 1] != $x) {\n            $s[] = $x;\n        }\n    }\n\
    \    return $s;\n}\n\nfunction candidate(...$args) {\n    return unique(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0,\
    \ 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $s = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $s))\
    \ {\n            $s[] = $e;\n        }\n    }\n    sort($s);\n    return $s;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $x) {\n        if (in_array($x, $u))\
    \ {\n            continue;\n        }\n        $u[] = $x;\n    }\n    sort($u);\n\
    \    return $u;\n}\n\nfunction candidate(...$args) {\n    return unique(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0,\
    \ 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_values(array_unique($l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb4ywqucw.php:14\n\
    Stack trace:\n#0 /tmp/tmpb4ywqucw.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpb4ywqucw.php\
    \ on line 14\n"
  timestamp: 1659824326
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $r = array();\n    $s = array();\n    foreach ($l as $x) {\n        if\
    \ (!in_array($x, $s)) {\n            $r[] = $x;\n            $s[] = $x;\n    \
    \    }\n    }\n    return $r;\n}\n\nfunction candidate(...$args) {\n    return\
    \ unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3mjow6zw.php:22\n\
    Stack trace:\n#0 /tmp/tmp3mjow6zw.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp3mjow6zw.php\
    \ on line 22\n"
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$u = array();\n\tforeach ($l as $v) {\n\t\tif (!in_array($v, $u)) $u[]\
    \ = $v;\n\t}\n\tsort($u);\n\treturn $u;\n}\n\nfunction candidate(...$args) {\n\
    \    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$u = array();\n\tforeach ($l as $e) {\n\t\tif (! in_array($e, $u))\n\t\t\
    \t$u[] = $e;\n\t}\n\tsort($u);\n\treturn $u;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$u = array();\n\tforeach ($l as $k => $v) {\n\t\tif (!isset($u[$v])) {\n\
    \t\t\t$u[$v] = $v;\n\t\t}\n\t}\n\tksort($u);\n\treturn array_values($u);\n}\n\n\
    function candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2,\
    \ 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $unique = array();\n    foreach ($l as $value) {\n        if (!in_array($value,\
    \ $unique)) {\n            $unique[] = $value;\n        }\n    }\n    sort($unique);\n\
    \    return $unique;\n}\n\nfunction candidate(...$args) {\n    return unique(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0,\
    \ 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$u = array();\n\tforeach ($l as $v) {\n\t\tif (!in_array($v, $u)) {\n\t\
    \t\t$u[] = $v;\n\t\t}\n\t}\n\treturn $u;\n}\n\nfunction candidate(...$args) {\n\
    \    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprs82m9rh.php:20\n\
    Stack trace:\n#0 /tmp/tmprs82m9rh.php(23): test()\n#1 {main}\n  thrown in /tmp/tmprs82m9rh.php\
    \ on line 20\n"
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $i) {\n        if (!isset($u[$i]))\
    \ $u[$i] = 1;\n    }\n    ksort($u);\n    return array_keys($u);\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3,\
    \ 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    sort($l);\n    $u = array();\n    foreach ($l as $e) {\n        if (!(count($u)\
    \ > 0 && $u[count($u) - 1] == $e)) {\n            $u[] = $e;\n        }\n    }\n\
    \    return $u;\n}\n\nfunction candidate(...$args) {\n    return unique(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0,\
    \ 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    sort($l);\n    return array_values(array_unique($l));\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3,\
    \ 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $s = array();\n    foreach ($l as $i) {\n        if (!array_key_exists($i,\
    \ $s)) {\n            $s[$i] = $i;\n        }\n    }\n    sort($s);\n    return\
    \ $s;\n}\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\
    \ !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $l = array_map('serialize', $l);\n    $l = array_unique($l);\n    $l\
    \ = array_map('unserialize', $l);\n    return $l;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmkbww9n_.php:17\n\
    Stack trace:\n#0 /tmp/tmpmkbww9n_.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpmkbww9n_.php\
    \ on line 17\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_keys(array_flip($l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_7p0o0ne.php:14\n\
    Stack trace:\n#0 /tmp/tmp_7p0o0ne.php(17): test()\n#1 {main}\n  thrown in /tmp/tmp_7p0o0ne.php\
    \ on line 14\n"
  timestamp: 1659824326
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$r = array();\n\tforeach ($l as $v) {\n\t\tif (!in_array($v, $r)) $r[]\
    \ = $v;\n\t}\n\tsort($r);\n\treturn $r;\n}\n\nfunction candidate(...$args) {\n\
    \    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    sort($l);\n    return array_merge(array_diff_assoc($l, array_unique($l)),\
    \ array_unique($l));\n}\n\nfunction candidate(...$args) {\n    return unique(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0,\
    \ 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp40xzaxpe.php:15\n\
    Stack trace:\n#0 /tmp/tmp40xzaxpe.php(18): test()\n#1 {main}\n  thrown in /tmp/tmp40xzaxpe.php\
    \ on line 15\n"
  timestamp: 1659824326
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $s = array();\n    foreach ($l as $x) {\n        if (!in_array($x, $s))\
    \ {\n            $s[] = $x;\n        }\n    }\n    sort($s);\n    return $s;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\tsort($l);\n\t$z = array();\n\tforeach ($l as $v) {\n\t\tif (end($z) !=\
    \ $v) {\n\t\t\t$z[] = $v;\n\t\t}\n\t}\n\treturn $z;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxk7aj3pz.php:21\n\
    Stack trace:\n#0 /tmp/tmpxk7aj3pz.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpxk7aj3pz.php\
    \ on line 21\n"
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$u = array();\n\tforeach ($l as $v) {\n\t\tif (!in_array($v, $u)) $u[]\
    \ = $v;\n\t}\n\tsort($u);\n\treturn $u;\n}\n\nfunction candidate(...$args) {\n\
    \    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $l = array_unique($l);\n    sort($l);\n    return $l;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3,\
    \ 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $t = array();\n    for ($i = 0; $i < count($l); $i++) {\n        $t[$l[$i]]\
    \ = True;\n    }\n    $u = array();\n    foreach ($t as $k => $v) {\n        $u[]\
    \ = $k;\n    }\n    sort($u);\n    return $u;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    sort($l);\n    return array_reduce($l, function($carry, $item) {\n  \
    \      if (empty($carry) || end($carry) != $item) {\n            $carry[] = $item;\n\
    \        }\n        return $carry;\n    }, array());\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return(array_unique($l));\n}\n\nfunction candidate(...$args) {\n    return\
    \ unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp906gmkvy.php:14\n\
    Stack trace:\n#0 /tmp/tmp906gmkvy.php(17): test()\n#1 {main}\n  thrown in /tmp/tmp906gmkvy.php\
    \ on line 14\n"
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $r = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $r))\
    \ $r[] = $v;\n    }\n    sort($r);\n    return $r;\n}\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\treturn array_keys(array_flip($l));\n}\n\nfunction candidate(...$args) {\n\
    \    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbl4ob37t.php:14\n\
    Stack trace:\n#0 /tmp/tmpbl4ob37t.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpbl4ob37t.php\
    \ on line 14\n"
  timestamp: 1659824326
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $l = array_flip($l);\n    ksort($l);\n    return array_keys($l);\n}\n\
    \nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$u = array();\n\tforeach ($l as $i) {\n\t\tif (!in_array($i, $u))\n\t\t\
    \t$u[] = $i;\n\t}\n\tsort($u);\n\treturn $u;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!isset($u[$v]))\
    \ {\n            $u[$v] = $v;\n        }\n    }\n    ksort($u);\n    return array_values($u);\n\
    }\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    sort($l);\n    $n = array();\n    $p = null;\n    foreach ($l as $i)\
    \ {\n        if ($i != $p) {\n            $n[] = $i;\n        }\n        $p =\
    \ $i;\n    }\n    return $n;\n}\n\nfunction candidate(...$args) {\n    return\
    \ unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2wl1ui68.php:23\n\
    Stack trace:\n#0 /tmp/tmp2wl1ui68.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp2wl1ui68.php\
    \ on line 23\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\treturn array_values(array_unique($l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkrvmp0t2.php:14\n\
    Stack trace:\n#0 /tmp/tmpkrvmp0t2.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpkrvmp0t2.php\
    \ on line 14\n"
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$n = array();\n\tforeach ($l as $v) {\n\t\tif (!in_array($v, $n))\n\t\t\
    \t$n[] = $v;\n\t}\n\tsort($n);\n\treturn $n;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    sort($l);\n    $last = null;\n    $result = array();\n    foreach ($l\
    \ as $v) {\n        if ($v != $last) {\n            $result[] = $v;\n        }\n\
    \        $last = $v;\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpte5xm1zl.php:22\n\
    Stack trace:\n#0 /tmp/tmpte5xm1zl.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpte5xm1zl.php\
    \ on line 22\n"
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    if (!$l) return $l;\n    sort($l);\n    $res = array($l[0]);\n    $prev\
    \ = $l[0];\n    foreach ($l as $v) {\n        if ($v != $prev) $res[] = $v;\n\
    \        $prev = $v;\n    }\n    return $res;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $n = [];\n    foreach ($l as $item) {\n        if (!in_array($item, $n))\
    \ {\n            $n[] = $item;\n        }\n    }\n    sort($n);\n    return $n;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$s = array();\n\tforeach ($l as $x) {\n\t\tif (!in_array($x, $s))\n\t\t\
    \t$s[] = $x;\n\t}\n\tsort($s);\n\treturn $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    sort($l);\n    return array_merge(array_diff_assoc($l, array_unique($l)),\
    \ array_unique($l));\n}\n\nfunction candidate(...$args) {\n    return unique(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0,\
    \ 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp40xzaxpe.php:15\n\
    Stack trace:\n#0 /tmp/tmp40xzaxpe.php(18): test()\n#1 {main}\n  thrown in /tmp/tmp40xzaxpe.php\
    \ on line 15\n"
  timestamp: 1659824326
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $l = array_unique($l);\n    sort($l);\n    return $l;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3,\
    \ 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $l = array_unique($l);\n    sort($l);\n    return $l;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3,\
    \ 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $s = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $s))\
    \ {\n            $s[] = $e;\n        }\n    }\n    sort($s);\n    return $s;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_unique($l);\n}\n\nfunction candidate(...$args) {\n    return\
    \ unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3nu9vlm6.php:14\n\
    Stack trace:\n#0 /tmp/tmp3nu9vlm6.php(17): test()\n#1 {main}\n  thrown in /tmp/tmp3nu9vlm6.php\
    \ on line 14\n"
  timestamp: 1659824326
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_merge(array_unique($l));\n}\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdv80tvlj.php:13\n\
    Stack trace:\n#0 /tmp/tmpdv80tvlj.php(16): test()\n#1 {main}\n  thrown in /tmp/tmpdv80tvlj.php\
    \ on line 13\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\tsort($l);\n\t$ret = array();\n\t$last = null;\n\tforeach ($l as $v) {\n\
    \t\tif ($v != $last) {\n\t\t\t$ret[] = $v;\n\t\t\t$last = $v;\n\t\t}\n\t}\n\t\
    return $ret;\n}\n\nfunction candidate(...$args) {\n    return unique(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0,\
    \ 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpunx_wfxf.php:23\n\
    Stack trace:\n#0 /tmp/tmpunx_wfxf.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpunx_wfxf.php\
    \ on line 23\n"
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824326
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$prev = null;\n\t$f = function($x) use (&$prev, &$f) {\n\t\treturn $x !=\
    \ $prev && ($prev = $x) ? true : false;\n\t};\n\treturn array_filter(sort($l),\
    \ $f);\n}\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\
    \ !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #1 ($array)\
    \ must be of type array, bool given in /tmp/tmp1iu57muo.php:10\nStack trace:\n\
    #0 /tmp/tmp1iu57muo.php(10): array_filter(true, Object(Closure))\n#1 /tmp/tmp1iu57muo.php(14):\
    \ unique(Array)\n#2 /tmp/tmp1iu57muo.php(18): candidate(Array)\n#3 /tmp/tmp1iu57muo.php(21):\
    \ test()\n#4 {main}\n  thrown in /tmp/tmp1iu57muo.php on line 10\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$unique = array();\n\tforeach ($l as $e) {\n\t\tif (!in_array($e, $unique))\
    \ {\n\t\t\t$unique[] = $e;\n\t\t}\n\t}\n\tsort($unique);\n\treturn $unique;\n\
    }\n\n$pst = '';\n$headers = '';\n$errors = array();\n\nif (!empty($_POST)) {\n\
    \t$pst = htmlspecialchars(print_r($_POST, true));\n\t$headers = htmlspecialchars(print_r(getallheaders(),\
    \ true));\n\t$headers .= \"<br>\";\n\t$errors = array();\n\t\n\tif (!isset($_POST['timestamp'])\
    \ || !ctype_digit($_POST['timestamp'])) {\n\t\t$errors[] = 'Missing timestamp';\n\
    \t}\n\t\n\tif (!isset($_POST['timezone']) || !ctype_digit($_POST['timezone']))\
    \ {\n\t\t$errors[] = 'Missing timezone';\n\t}\n\t\n\tif (!isset($_POST['elements'])\
    \ || !is_array($_POST['elements'])) {\n\t\t$errors[] = 'Missing elements';\n\t\
    }\n\t\n\tif (!isset($_POST['data']) || !is_array($_POST['data'])) {\n\t\t$errors[]\
    \ = 'Missing data';\n\t}\n\t\n\tif (!isset($_POST['info']) || !is_array($_POST['info']))\
    \ {\n\t\t$errors[] = 'Missing info';\n\t}\n\t\n\tif (!isset($_POST['version'])\
    \ || !ctype_digit($_POST['version'])) {\n\t\t$errors[] = 'Missing version';\n\t\
    }\n\t\n\tif (!isset($_POST['device']) || !is_array($_POST['device'])) {\n\t\t\
    $errors[] = 'Missing device';\n\t}\n\t\n\tif (!isset($_POST['db']) || !is_array($_POST['db']))\
    \ {\n\t\t$errors[] = 'Missing db';\n\t}\n\t\n\tif (!isset($_POST['db'\nfunction\
    \ candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3,\
    \ 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting "]" in /tmp/tmplvggrrxj.php
    on line 59

    '
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_unique($l);\n}\n\nfunction candidate(...$args) {\n    return\
    \ unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3nu9vlm6.php:14\n\
    Stack trace:\n#0 /tmp/tmp3nu9vlm6.php(17): test()\n#1 {main}\n  thrown in /tmp/tmp3nu9vlm6.php\
    \ on line 14\n"
  timestamp: 1659824326
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$u = array();\n\tforeach ($l as $e) {\n\t\tif (!in_array($e, $u))\n\t\t\
    \t$u[] = $e;\n\t}\n\treturn $u;\n}\n\nfunction candidate(...$args) {\n    return\
    \ unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_dcxytb2.php:19\n\
    Stack trace:\n#0 /tmp/tmp_dcxytb2.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp_dcxytb2.php\
    \ on line 19\n"
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    sort($l);\n    $unique = array_unique($l);\n    return array_values($unique);\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_values(array_unique($l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb4ywqucw.php:14\n\
    Stack trace:\n#0 /tmp/tmpb4ywqucw.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpb4ywqucw.php\
    \ on line 14\n"
  timestamp: 1659824326
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$m = array();\n\tforeach ($l as $e) {\n\t\t$m[$e] = 1;\n\t}\n\tksort($m);\n\
    \treturn array_keys($m);\n}\n\nfunction candidate(...$args) {\n    return unique(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0,\
    \ 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824326
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $e) {\n        if (!in_array($e, $u))\
    \ {\n            $u[] = $e;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_values(array_unique($l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb4ywqucw.php:14\n\
    Stack trace:\n#0 /tmp/tmpb4ywqucw.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpb4ywqucw.php\
    \ on line 14\n"
  timestamp: 1659824326
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$a = [];\n\tforeach ($l as $v) {\n\t\tif (!in_array($v, $a)) {\n\t\t\t\
    $a[] = $v;\n\t\t}\n\t}\n\tsort($a);\n\treturn $a;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_values(array_unique($l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb4ywqucw.php:14\n\
    Stack trace:\n#0 /tmp/tmpb4ywqucw.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpb4ywqucw.php\
    \ on line 14\n"
  timestamp: 1659824326
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    if (empty($l)) {\n        return $l;\n    }\n    sort($l);\n    $return\
    \ = array($l[0]);\n    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i]\
    \ != $l[$i - 1]) {\n            $return[] = $l[$i];\n        }\n    }\n    return\
    \ $return;\n}\n\nfunction candidate(...$args) {\n    return unique(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0,\
    \ 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $item) {\n        if (!in_array($item,\
    \ $u)) {\n            $u[] = $item;\n        }\n    }\n    sort($u);\n    return\
    \ $u;\n}\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\
    \ !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_values(array_unique($l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb4ywqucw.php:14\n\
    Stack trace:\n#0 /tmp/tmpb4ywqucw.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpb4ywqucw.php\
    \ on line 14\n"
  timestamp: 1659824326
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $res = array();\n    foreach ($l as $e) {\n        if (!in_array($e,\
    \ $res)) {\n            $res[] = $e;\n        }\n    }\n    sort($res);\n    return\
    \ $res;\n}\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\
    \ !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_keys(array_flip($l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_7p0o0ne.php:14\n\
    Stack trace:\n#0 /tmp/tmp_7p0o0ne.php(17): test()\n#1 {main}\n  thrown in /tmp/tmp_7p0o0ne.php\
    \ on line 14\n"
  timestamp: 1659824326
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$r = array();\n\tforeach ($l as $v) {\n\t\tif (!in_array($v, $r)) {\n\t\
    \t\t$r[] = $v;\n\t\t}\n\t}\n\tsort($r);\n\treturn $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\tif (!is_array($l)) { return $l; }\n\t$ret = array();\n\tforeach ($l as\
    \ $e) {\n\t\tif (!in_array($e, $ret)) { $ret[] = $e; }\n\t}\n\tsort($ret);\n\t\
    return $ret;\n}\n\nfunction candidate(...$args) {\n    return unique(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0,\
    \ 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$ul = array();\n\tforeach ($l as $element) {\n\t\tif (!in_array($element,\
    \ $ul)) {\n\t\t\t$ul[] = $element;\n\t\t}\n\t}\n\tsort($ul);\n\treturn $ul;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $h = array();\n    foreach ($l as $n) {\n        $h[$n] = $n;\n    }\n\
    \    ksort($h);\n    return array_values($h);\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\treturn array_flip(array_flip($l));\n}\n\nfunction candidate(...$args) {\n\
    \    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6gqrj8h2.php:14\n\
    Stack trace:\n#0 /tmp/tmp6gqrj8h2.php(17): test()\n#1 {main}\n  thrown in /tmp/tmp6gqrj8h2.php\
    \ on line 14\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $result = array();\n    if (!is_array($l)) {\n        return $result;\n\
    \    }\n    $result[] = $l[0];\n    sort($l);\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] != $l[$i - 1]) {\n            $result[] = $l[$i];\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfyju8ypx.php:25\n\
    Stack trace:\n#0 /tmp/tmpfyju8ypx.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpfyju8ypx.php\
    \ on line 25\n"
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t// TODO: implement sort_unique for objects, but for now just return the\
    \ input as-is\n\tif (is_array($l) && sizeof($l) > 0 && !is_array($l[0])) {\n\t\
    \t// sort array\n\t\t$copy = $l;\n\t\tsort($copy);\n\t\t// create empty array\
    \ for unique values\n\t\t$result = array();\n\t\t// loop through $copy, checking\
    \ if each element is the same as the previous\n\t\t// if the element is different\
    \ from the previous, we append it to the result\n\t\t$prev = $copy[0];\n\t\t$result[]\
    \ = $prev;\n\t\tfor ($i = 1; $i < sizeof($copy); $i++) {\n\t\t\tif ($copy[$i]\
    \ != $prev) {\n\t\t\t\t$result[] = $copy[$i];\n\t\t\t}\n\t\t\t$prev = $copy[$i];\n\
    \t\t}\n\t\treturn $result;\n\t} else {\n\t\treturn $l;\n\t}\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824326
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $result = array();\n    foreach ($l as $e) {\n        if (!in_array($e,\
    \ $result)) {\n            $result[] = $e;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return unique(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0,\
    \ 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$s = array();\n\tforeach ($l as $x) {\n\t\tif (!in_array($x, $s)) {\n\t\
    \t\t$s[] = $x;\n\t\t}\n\t}\n\tsort($s);\n\treturn $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_unique($l);\n}\n\nfunction candidate(...$args) {\n    return\
    \ unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3nu9vlm6.php:14\n\
    Stack trace:\n#0 /tmp/tmp3nu9vlm6.php(17): test()\n#1 {main}\n  thrown in /tmp/tmp3nu9vlm6.php\
    \ on line 14\n"
  timestamp: 1659824326
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$a = array();\n\tforeach ($l as $x) {\n\t\tif (!in_array($x, $a)) {\n\t\
    \t\t$a[] = $x;\n\t\t}\n\t}\n\tsort($a);\n\treturn $a;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\treturn array_values(array_unique($l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkrvmp0t2.php:14\n\
    Stack trace:\n#0 /tmp/tmpkrvmp0t2.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpkrvmp0t2.php\
    \ on line 14\n"
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $s = array();\n    foreach ($l as $e)\n        if (!in_array($e, $s))\n\
    \            $s[] = $e;\n    sort($s);\n    return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824326
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    sort($l);\n    $n = array();\n    $p = null;\n    foreach ($l as $i)\
    \ {\n        if ($i != $p) {\n            $n[] = $i;\n        }\n        $p =\
    \ $i;\n    }\n    return $n;\n}\nfunction candidate(...$args) {\n    return unique(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0,\
    \ 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxvl0tgit.php:22\n\
    Stack trace:\n#0 /tmp/tmpxvl0tgit.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpxvl0tgit.php\
    \ on line 22\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$u = array();\n\tforeach ($l as $k => $e)\n\t\tif (! in_array($e, $u))\n\
    \t\t\t$u[] = $e;\n\treturn $u;\n}\n\n$lines = file('php://stdin');\nforeach ($lines\
    \ as $line) {\n\t$constraints = preg_split('/[\\s]+/', $line);\n\t$numbers = range(0,\
    \ 9);\n\tforeach ($constraints as $constraint) {\n\t\tif (preg_match('/([01]?[0-9]):([01]?[0-9])/',\
    \ $constraint, $match)) {\n\t\t\t$numbers = array_diff($numbers, range($match[1],\
    \ $match[2]));\n\t\t}\n\t}\n\t$numbers = unique($numbers);\n\tsort($numbers);\n\
    \tif (count($numbers) == 0)\n\t\techo \"-\\n\";\n\telse\n\t\techo implode(' ',\
    \ $numbers) . \"\\n\";\n}\nfunction candidate(...$args) {\n    return unique(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0,\
    \ 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzxu07ty5.php:34\n\
    Stack trace:\n#0 /tmp/tmpzxu07ty5.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpzxu07ty5.php\
    \ on line 34\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_keys(array_flip($l));\n}\nfunction candidate(...$args) {\n\
    \    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpplzekgxo.php:13\n\
    Stack trace:\n#0 /tmp/tmpplzekgxo.php(16): test()\n#1 {main}\n  thrown in /tmp/tmpplzekgxo.php\
    \ on line 13\n"
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $u))\
    \ {\n            $u[] = $v;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824326
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $n = [];\n    foreach ($l as $i) {\n        if (!in_array($i, $n)) {\n\
    \            $n[] = $i;\n        }\n    }\n    sort($n);\n    return $n;\n}\n\n\
    function candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2,\
    \ 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    sort($l);\n    $nl = [];\n    foreach ($l as $i) {\n        if (!in_array($i,\
    \ $nl)) {\n            $nl[] = $i;\n        }\n    }\n    return $nl;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3,\
    \ 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    return array_values(array_unique($l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb4ywqucw.php:14\n\
    Stack trace:\n#0 /tmp/tmpb4ywqucw.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpb4ywqucw.php\
    \ on line 14\n"
  timestamp: 1659824326
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    // $l is your sorted array\n    $n = array();\n    $o = null;\n    foreach\
    \ ($l as $v) {\n        if ($v !== $o) {\n            $n[] = $v;\n           \
    \ $o = $v;\n        }\n    }\n    return $n;\n}\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppstt2riy.php:22\n\
    Stack trace:\n#0 /tmp/tmppstt2riy.php(25): test()\n#1 {main}\n  thrown in /tmp/tmppstt2riy.php\
    \ on line 22\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    if (!is_array($l))\n        return $l;\n    $ul = array();\n    foreach\
    \ ($l as $v) {\n        if (!in_array($v, $ul))\n            $ul[] = $v;\n   \
    \ }\n    return $ul;\n}\n\nfunction candidate(...$args) {\n    return unique(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0,\
    \ 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqidnrhnv.php:21\n\
    Stack trace:\n#0 /tmp/tmpqidnrhnv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpqidnrhnv.php\
    \ on line 21\n"
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $result = array();\n    foreach ($l as $x) {\n        if (!in_array($x,\
    \ $result)) {\n            $result[] = $x;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return unique(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0,\
    \ 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    sort($l);\n    return array_merge(array_diff_assoc($l, array_unique($l)),\
    \ array_unique($l));\n}\n\n/**\n * Takes two sorted arrays, and merges them together.\n\
    \ *\n * @param array $array1 The first array to merge.\n * @param array $array2\
    \ The second array to merge.\n * @return array The merged array.\n */\nfunction\
    \ candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3,\
    \ 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa7w20i9_.php:22\n\
    Stack trace:\n#0 /tmp/tmpa7w20i9_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpa7w20i9_.php\
    \ on line 22\n"
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\t$r = array();\n\tforeach ($l as $x) {\n\t\tif (!in_array($x, $r)) {\n\t\
    \t\t$r[] = $x;\n\t\t}\n\t}\n\tsort($r);\n\treturn $r;\n}\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n\treturn array_values(array_unique($l));\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkrvmp0t2.php:14\n\
    Stack trace:\n#0 /tmp/tmpkrvmp0t2.php(17): test()\n#1 {main}\n  thrown in /tmp/tmpkrvmp0t2.php\
    \ on line 14\n"
  timestamp: 1660028760
- exit_code: 255
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $s = array();\n    foreach ($l as $e)\n        if (!isset($s[$e]))\n\
    \            $s[$e] = null;\n    return array_keys($s);\n}\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp39yss0fj.php:17\n\
    Stack trace:\n#0 /tmp/tmp39yss0fj.php(20): test()\n#1 {main}\n  thrown in /tmp/tmp39yss0fj.php\
    \ on line 17\n"
  timestamp: 1660028761
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $x) {\n        if (!in_array($x, $u))\
    \ {\n            $u[] = $x;\n        }\n    }\n    sort($u);\n    return $u;\n\
    }\n\n\n\nfunction candidate(...$args) {\n    return unique(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0,\
    \ 2, 3, 5, 9, 123)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760
- exit_code: 0
  program: "<?php\n// Return sorted unique elements in an array\n// >>> unique(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))\n// array(0, 2, 3, 5, 9, 123)\nfunction unique($l)\
    \ {\n    $u = array();\n    foreach ($l as $v) {\n        if (! in_array($v, $u))\n\
    \            $u[] = $v;\n    }\n    sort($u);\n    return $u;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028760

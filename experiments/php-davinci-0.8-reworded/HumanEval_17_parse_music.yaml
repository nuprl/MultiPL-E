name: HumanEval_17_parse_music
language: php
prompt: "<?php\n// Input to this function is a string representing musical notes in\
  \ a special ASCII format.\n// Your task is to parse this string and return array\
  \ of integers corresponding to how many beats does each\n// not last.\n// Here is\
  \ a legend:\n// 'o' - whole note, lasts four beats\n// 'o|' - half note, lasts two\
  \ beats\n// '.|' - quater note, lasts one beat\n// >>> parse_music(\"o o| .| o|\
  \ o| .| .| .| .| o o\")\n// array(4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4)\nfunction parse_music($music_string)\
  \ {\n"
tests: "function candidate(...$args) {\n    return parse_music(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"o o o o\") !== array(4, 4, 4, 4)) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\".| .| .| .|\") !== array(1,\
  \ 1, 1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"o| o|\
  \ .| .| o o o o\") !== array(2, 2, 1, 1, 4, 4, 4, 4)) { throw new Exception(\"Test\
  \ failed!\"); }\n    if (candidate(\"o| .| o| .| o o| o o|\") !== array(2, 1, 2,\
  \ 1, 4, 2, 4, 2)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["\t$notes = [];\n\t$length = 0;\n\tfor ($i = 0; $i < strlen($music_string);\
    \ $i++) {\n\t\tif ($music_string[$i] == 'o') {\n\t\t\t$length += 4;\n\t\t} elseif\
    \ ($music_string[$i] == '|') {\n\t\t\t$notes[] = $length;\n\t\t\t$length = 0;\n\
    \t\t}\n\t}\n\t$notes[] = $length;\n\treturn $notes;\n}", "  $music_array = explode('\
    \ ', $music_string);\n  $result = [];\n  foreach ($music_array as $m) {\n    switch\
    \ ($m) {\n      case 'o':\n        $result[] = 4;\n        break;\n      case\
    \ 'o|':\n        $result[] = 2;\n        break;\n      case '.|':\n        $result[]\
    \ = 1;\n        break;\n    }\n  }\n  return $result;\n}\n", "\t$arr = str_split($music_string);\n\
    \t$tunes = array();\n\t$tune = '';\n\tforeach ($arr as $char) {\n\t\tif ($char\
    \ != ' ') {\n\t\t\t$tune .= $char;\n\t\t} else {\n\t\t\t$tunes[] = $tune;\n\t\t\
    \t$tune = '';\n\t\t}\n\t}\n\t$tunes[] = $tune;\n\t$arr = array();\n\tforeach ($tunes\
    \ as $tune) {\n\t\tif ($tune == 'o') {\n\t\t\t$arr[] = 4;\n\t\t} elseif ($tune\
    \ == 'o|') {\n\t\t\t$arr[] = 2;\n\t\t} elseif ($tune == '.|') {\n\t\t\t$arr[]\
    \ = 1;\n\t\t}\n\t}\n\treturn $arr;\n}\n", "\t$music_string = preg_replace('/\\\
    s+/', '', $music_string);\n\t$notes = preg_split('/\\|/', $music_string);\n\t\
    $beats = array();\n\tforeach ($notes as $note) {\n\t\tif (strpos($note, 'o') !==\
    \ false) {\n\t\t\t$note_type = strlen($note);\n\t\t\t$beats[] = $note_type;\n\t\
    \t} else {\n\t\t\t$beats[] = 1;\n\t\t}\n\t}\n\treturn $beats;\n}", "\t$oneBeat\
    \ = ['.','|'];\n\t$twoBeat = ['o','|'];\n\t$fourBeat = ['o'];\n\t$results = [];\n\
    \t$index = 0;\n\t$strLength = strlen($music_string);\n\t\n\twhile($index < $strLength)\
    \ {\n\t\t$tmp = substr($music_string, $index, 2);\n\t\tif(in_array($tmp[0], $fourBeat)\
    \ && $tmp[1] == ' ') {\n\t\t\t$results[] = 4;\n\t\t\t$index += 2;\n\t\t} else\
    \ if(in_array($tmp[0], $twoBeat) && $tmp[1] == '|') {\n\t\t\t$results[] = 2;\n\
    \t\t\t$index += 2;\n\t\t} else if(in_array($tmp[0], $oneBeat) && $tmp[1] == '|')\
    \ {\n\t\t\t$results[] = 1;\n\t\t\t$index += 2;\n\t\t} else {\n\t\t\t$results[]\
    \ = 4;\n\t\t\t$index += 1;\n\t\t}\n\t}\n\treturn $results;\n}\n\n$str = \"o o|\
    \ .| o| o| .| .| .| .| o o\";\nprint_r(parse_music($str));\n", "    $music_string\
    \ = trim($music_string);\n    $notes = explode(' ', $music_string);\n    $result\
    \ = [];\n    foreach ($notes as $note) {\n        switch (substr($note, 0, 1))\
    \ {\n            case 'o':\n                $result[] = substr($note, 1) == '|'\
    \ ? 2 : 4;\n                break;\n            case '.':\n                $result[]\
    \ = 1;\n                break;\n        }\n    }\n    return $result;\n}\n", " \
    \   $result = array();\n    $notes = explode(' ', $music_string);\n    foreach\
    \ ($notes as $note) {\n        switch ($note) {\n            case 'o':\n     \
    \           $result[] = 4;\n                break;\n            case 'o|':\n \
    \               $result[] = 2;\n                break;\n            case '.|':\n\
    \                $result[] = 1;\n                break;\n        }\n    }\n  \
    \  return $result;\n}", "    $note_value = array(4, 2, 1);\n    $notes = str_split($music_string);\n\
    \    $notes_beats = array();\n    $i = 0;\n    foreach ($notes as $note) {\n \
    \       if ($note == 'o') {\n            $notes_beats[] = $note_value[$i];\n \
    \           $i = 0;\n        } elseif ($note == '|') {\n            $i++;\n  \
    \      }\n    }\n    return $notes_beats;\n}\n", "\t$ret = [];\n\t$music_string\
    \ = str_replace('o|', 'o| ', $music_string);\n\t$music_string = str_replace('|.',\
    \ '| .', $music_string);\n\t$music_string = str_replace(' o', ' o ', $music_string);\n\
    \t$array = explode(' ', $music_string);\n\tfor ($i = 0; $i < count($array); $i++)\
    \ {\n\t\tif ($array[$i] == 'o') {\n\t\t\t$ret[] = 4;\n\t\t} else if ($array[$i]\
    \ == 'o|') {\n\t\t\t$ret[] = 2;\n\t\t} else if ($array[$i] == '|.') {\n\t\t\t\
    $ret[] = 1;\n\t\t}\n\t}\n\treturn $ret;\n}\n", "\t$music_string = str_replace('o',\
    \ 'o', $music_string);\n\t$music_string = str_replace('o|', 'o1', $music_string);\n\
    \t$music_string = str_replace('.|', 'o0', $music_string);\n\t$music_string = str_replace('\
    \ ', '', $music_string);\n\t$x = str_split($music_string);\n\t$result = array();\n\
    \tforeach ($x as $value) {\n\t\tif ($value == 'o') {\n\t\t\t$result[] = 4;\n\t\
    \t} elseif ($value == 'o1') {\n\t\t\t$result[] = 2;\n\t\t} elseif ($value == 'o0')\
    \ {\n\t\t\t$result[] = 1;\n\t\t}\n\t}\n\treturn $result;\n}\n", "    $timeArray\
    \ = array();\n    $valueArray = array(\"o\" => 4, \"o|\" => 2, \".|\" => 1);\n\
    \    $tokenArray = explode(\" \", $music_string);\n    foreach ($tokenArray as\
    \ $token) {\n        $timeArray[] = $valueArray[$token];\n    }\n    return $timeArray;\n\
    }\n", "\t$notes = str_split($music_string);\n\t$beats = [];\n\tfor ($i = 0; $i\
    \ < count($notes); $i++) {\n\t\tswitch ($notes[$i]) {\n\t\t\tcase 'o':\n\t\t\t\
    \tif ($notes[$i + 1] === '|') {\n\t\t\t\t\t$beats[] = 2;\n\t\t\t\t\t$i++;\n\t\t\
    \t\t} else {\n\t\t\t\t\t$beats[] = 4;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase '.':\n\
    \t\t\t\tif ($notes[$i + 1] === '|') {\n\t\t\t\t\t$beats[] = 1;\n\t\t\t\t\t$i++;\n\
    \t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t}\n\treturn $beats;\n}\n", "    $array = explode('\
    \ ', $music_string);\n    $out = [];\n    foreach ($array as $symbol) {\n    \
    \    switch ($symbol) {\n            case 'o':\n                $out[] = 4;\n\
    \                break;\n            case 'o|':\n                $out[] = 2;\n\
    \                break;\n            case '.|':\n                $out[] = 1;\n\
    \                break;\n        }\n    }\n    return $out;\n}", "  $beat = 4;\n\
    \  $result = [];\n  $parts = explode(' ', $music_string);\n  foreach ($parts as\
    \ $part) {\n    if ($part === 'o') {\n      $result[] = $beat;\n    } elseif ($part\
    \ === 'o|') {\n      $result[] = $beat / 2;\n    } elseif ($part === '.|') {\n\
    \      $result[] = $beat / 4;\n    }\n  }\n  return $result;\n}\n", "    // CODE\
    \ HERE\n    $arr = array();\n    $music_string_arr = explode(\" \", $music_string);\n\
    \    foreach ($music_string_arr as $value) {\n        if ($value == \"o\") {\n\
    \            $arr[] = 4;\n        } elseif ($value == \"o|\") {\n            $arr[]\
    \ = 2;\n        } elseif ($value == \".|\") {\n            $arr[] = 1;\n     \
    \   }\n    }\n    return $arr;\n}", "    $length = strlen($music_string);\n  \
    \  $result = array();\n    $beat = 4;\n    for ($i = 0; $i < $length; $i++) {\n\
    \        if ($music_string[$i] == 'o') {\n            $result[] = $beat;\n   \
    \     } else if ($music_string[$i] == '.') {\n            $result[] = $beat /\
    \ 2;\n        }\n        if ($music_string[$i] == '|') {\n            $beat =\
    \ $beat / 2;\n        }\n    }\n    return $result;\n}\n", "    $notes = str_split($music_string);\n\
    \    $rhythm = array();\n    $count = 0;\n    foreach ($notes as $note) {\n  \
    \      if ($note == 'o') {\n            $count++;\n        } elseif ($note ==\
    \ '|') {\n            if ($count == 2) {\n                $rhythm[] = 2;\n   \
    \         } elseif ($count == 4) {\n                $rhythm[] = 4;\n         \
    \   }\n            $count = 0;\n        } elseif ($note == '.') {\n          \
    \  $rhythm[] = 1;\n        }\n    }\n    return $rhythm;\n}", "    $notes = array(\n\
    \        \"o\" => 4,\n        \"o|\" => 2,\n        \".|\" => 1\n    );\n    $notes_order\
    \ = array_keys($notes);\n    $notes_count = count($notes_order);\n    $music_array\
    \ = explode(\" \", $music_string);\n    $result = array();\n    foreach ($music_array\
    \ as $music_string) {\n        for ($i = 0; $i < $notes_count; $i++) {\n     \
    \       if (strpos($music_string, $notes_order[$i]) !== false) {\n           \
    \     $result[] = $notes[$notes_order[$i]];\n                break;\n        \
    \    }\n        }\n    }\n    return $result;\n}\n", "  $music_string = explode('\
    \ ', $music_string);\n  $beat = array();\n  foreach ($music_string as $key =>\
    \ $value) {\n    if ($value == 'o') {\n      $beat[] = 4;\n    } elseif ($value\
    \ == 'o|') {\n      $beat[] = 2;\n    } elseif ($value == '.|') {\n      $beat[]\
    \ = 1;\n    }\n  }\n  return $beat;\n}\n\n$test = array(\n  'o o| .| o| o| .|\
    \ .| .| .| o o',\n  'o| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .|\
    \ .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .|\
    \ .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .|\
    \ .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .|\
    \ .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .|\
    \ .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .|\
    \ .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .| .|\
    \ .| .| .| .| .| .| .| .| .|", "    $notes = explode(' ', $music_string);\n  \
    \  $beats = [];\n    foreach ($notes as $note) {\n        if (strlen($note) ==\
    \ 1) {\n            $beats[] = 4;\n        } else {\n            $beats[] = 2;\n\
    \        }\n    }\n    return $beats;\n}\n\necho '<pre>';\nprint_r(parse_music(\"\
    o o| .| o| o| .| .| .| .| o o\"));\necho '</pre>';", "\t$output_arr = array();\n\
    \t$input_arr = explode(\" \", $music_string);\n\tfor ($i = 0; $i < count($input_arr);\
    \ $i++) {\n\t\tif ($input_arr[$i] == \"o\") {\n\t\t\t$output_arr[] = 4;\n\t\t\
    } elseif ($input_arr[$i] == \"o|\") {\n\t\t\t$output_arr[] = 2;\n\t\t} elseif\
    \ ($input_arr[$i] == \".|\") {\n\t\t\t$output_arr[] = 1;\n\t\t}\n\t}\n\treturn\
    \ $output_arr;\n}", "    $i = 0;\n    $cur = '';\n    $result = [];\n    while($i\
    \ < strlen($music_string)) {\n        if($music_string[$i] === ' ') {\n      \
    \      if($cur === 'o') {\n                $result[] = 4;\n            } elseif($cur\
    \ === 'o|') {\n                $result[] = 2;\n            } elseif($cur === '.|')\
    \ {\n                $result[] = 1;\n            }\n            $cur = '';\n \
    \       } else {\n            $cur .= $music_string[$i];\n        }\n        $i++;\n\
    \    }\n    return $result;\n}\n\nvar_dump(parse_music(\"o o| .| o| o| .| .| .|\
    \ .| o o\"));", "    $notes = str_split($music_string);\n    $beats = array();\n\
    \    $note_length = 4;\n    foreach ($notes as $note) {\n        if ($note ==\
    \ ' ') {\n            $note_length = 4;\n        } else if ($note == 'o') {\n\
    \            array_push($beats, $note_length);\n            $note_length = 4;\n\
    \        } else if ($note == '|') {\n            $note_length /= 2;\n        }\
    \ else if ($note == '.') {\n            array_push($beats, $note_length);\n  \
    \          $note_length = 4;\n        }\n    }\n    return $beats;\n}\n", "  $music_string\
    \ = str_replace(\" \", \"\", $music_string);\n  $arr = str_split($music_string);\n\
    \  $result = [];\n  foreach ($arr as $el) {\n    if ($el == 'o') {\n      $result[]\
    \ = 4;\n    } else if ($el == '|') {\n      $result[] = 1;\n    }\n  }\n  return\
    \ $result;\n}", "\t$notes = explode(' ', $music_string);\n\t$output = array();\n\
    \tforeach ($notes as $note) {\n\t\tswitch($note) {\n\t\t\tcase 'o':\n\t\t\t\t\
    $output[] = 4;\n\t\t\t\tbreak;\n\t\t\tcase 'o|':\n\t\t\t\t$output[] = 2;\n\t\t\
    \t\tbreak;\n\t\t\tcase '.|':\n\t\t\t\t$output[] = 1;\n\t\t\t\tbreak;\n\t\t}\n\t\
    }\n\treturn $output;\n}\n", "    $a = str_split($music_string);\n    $result =\
    \ [];\n    $j = 0;\n    $z = 0;\n    foreach ($a as $i => $b) {\n        if ($b\
    \ == 'o') {\n            $result[$j] = 4;\n            $j++;\n        } elseif\
    \ ($b == '.') {\n            $result[$j] = 1;\n            $j++;\n        } elseif\
    \ ($b == '|') {\n            $z++;\n            if ($z == 2) {\n             \
    \   $result[$j - 1] = 2;\n                $z = 0;\n            }\n        }\n\
    \    }\n    return $result;\n}\n", "    $fractions = [\n        'o' => 4,\n  \
    \      'o|' => 2,\n        '.|' => 1\n    ];\n    $notes = explode(' ', $music_string);\n\
    \    $result = [];\n    foreach ($notes as $note) {\n        $result[] = $fractions[$note];\n\
    \    }\n    return $result;\n}\n\necho parse_music(\"o o| .| o| o| .| .| .| .|\
    \ o o\");", "  $notes = str_split($music_string);\n  $output = [];\n  $count =\
    \ 0;\n  foreach ($notes as $note) {\n    if (isset($last_note) && $note == $last_note)\
    \ {\n      $count += 1;\n    } elseif ($note == '|') {\n      $count = 1;\n  \
    \  } else {\n      if ($count > 0) {\n        $output[] = $count;\n      }\n \
    \     $count = 1;\n    }\n    $last_note = $note;\n  }\n  if ($count > 0) {\n\
    \    $output[] = $count;\n  }\n  return $output;\n}\n\nprint_r(parse_music(\"\
    o o| .| o| o| .| .| .| .| o o\"));", "    $notes = explode(' ', $music_string);\n\
    \    $result = [];\n    foreach ($notes as $note) {\n        $length = 4;\n  \
    \      if (substr($note, -1) === '|') {\n            $length /= 2;\n        }\n\
    \        if (substr($note, 0, 1) === '.') {\n            $length /= 2;\n     \
    \   }\n        $result[] = $length;\n    }\n    return $result;\n}", "    $result\
    \ = [];\n    $notes = explode(' ', $music_string);\n    $notesCount = count($notes);\n\
    \    for ($i = 0; $i < $notesCount; $i++) {\n        $note = $notes[$i];\n   \
    \     $firstChar = substr($note, 0, 1);\n        $secondChar = substr($note, 1,\
    \ 1);\n        switch ($firstChar) {\n            case 'o':\n                switch\
    \ ($secondChar) {\n                    case '|':\n                        $result[]\
    \ = 2;\n                        break;\n                    default:\n       \
    \                 $result[] = 4;\n                        break;\n           \
    \     }\n                break;\n            case '.':\n                switch\
    \ ($secondChar) {\n                    case '|':\n                        $result[]\
    \ = 1;\n                        break;\n                    default:\n       \
    \                 break;\n                }\n                break;\n        \
    \    default:\n                break;\n        }\n    }\n    return $result;\n\
    }\necho '<pre>';\nprint_r(parse_music(\"o o| .| o| o| .| .| .| .| o o\"));\necho\
    \ '</pre>';", "    $a = explode(' ', $music_string);\n    $b = array();\n    foreach\
    \ ($a as $v) {\n        if ($v == 'o') $b[] = 4;\n        else $b[] = 2;\n   \
    \ }\n    return $b;\n}", "  $music_array = str_split($music_string);\n  $beat_count\
    \ = 0;\n  $output_array = array();\n  $beat_count = 0;\n  foreach ($music_array\
    \ as $note) {\n    if ($note == 'o') {\n      $beat_count = 4;\n    } elseif ($note\
    \ == '|') {\n      $beat_count = $beat_count / 2;\n    } elseif ($note == '.')\
    \ {\n      $beat_count = $beat_count - 1;\n    }\n    if ($beat_count > 0) {\n\
    \      $output_array[] = $beat_count;\n    }\n  }\n  return $output_array;\n}",
  "\t$beats=0;\n\t$music_array=preg_split('//', $music_string, -1, PREG_SPLIT_NO_EMPTY);\n\
    \tforeach ($music_array as $beat){\n\t\tif ($beat == \"o\"){\n\t\t\t$beats=$beats+4;\n\
    \t\t}\n\t\telseif ($beat == \"|\"){\n\t\t\t$beats=$beats+1;\n\t\t}\n\t\telseif\
    \ ($beat == \".\"){\n\t\t\t$beats=$beats+1;\n\t\t}\n\t\telseif ($beat == \" \"\
    ){\n\t\t\t$beats=$beats+0;\n\t\t}\n\t}\n\treturn $beats;\n}", "    $r = preg_match_all('/o\
    \ o| o\\||\\.\\|/', $music_string, $match);\n    $result = [];\n    if($r) {\n\
    \        foreach($match[0] as $item) {\n            switch($item) {\n        \
    \        case 'o o':\n                    $result[] = 4;\n                   \
    \ break;\n                case ' o|':\n                    $result[] = 2;\n  \
    \                  break;\n                case '.|':\n                    $result[]\
    \ = 1;\n                    break;\n            }\n        }\n    }\n    return\
    \ $result;\n}", "  // Your code here...\n}\necho implode(\", \", parse_music(\"\
    o o| .| o| o| .| .| .| .| o o\"));", "  $notes = [\n    \"o\" => 4,\n    \"o|\"\
    \ => 2,\n    \".|\" => 1\n  ];\n  $music_array = explode(\" \", $music_string);\n\
    \  $music_notes = [];\n  foreach ($music_array as $value) {\n    $music_notes[]\
    \ = $notes[$value];\n  }\n  return $music_notes;\n}\n", "    $notes = array_map(function($note)\
    \ {\n        switch ($note) {\n            case 'o':\n                return 4;\n\
    \            case 'o|':\n                return 2;\n            case '.|':\n \
    \               return 1;\n        }\n    }, explode(' ', $music_string));\n \
    \   return $notes;\n}\n", "    $result = array();\n    $music_array = explode(\"\
    \ \", $music_string);\n    foreach ($music_array as $music_element) {\n      \
    \  if ($music_element == \"o\") {\n            $result[] = 4;\n        } elseif\
    \ ($music_element == \"o|\") {\n            $result[] = 2;\n        } elseif ($music_element\
    \ == \".|\") {\n            $result[] = 1;\n        }\n    }\n    return $result;\n\
    }", "    $music_arr = explode(' ', $music_string);\n    $res = [];\n    foreach\
    \ ($music_arr as $elem) {\n        switch ($elem) {\n            case 'o':\n \
    \               $res[] = 4;\n                break;\n            case 'o|':\n\
    \                $res[] = 2;\n                break;\n            case '.|':\n\
    \                $res[] = 1;\n                break;\n        }\n    }\n    return\
    \ $res;\n}", "  $outputArray = array();\n  $splitArray = str_split($music_string);\n\
    \  $bars = array_count_values($splitArray);\n  $bars['.'] = $bars['.']/2;\n  $bars['|']\
    \ = $bars['|']/2;\n  $bars[' '] = $bars[' ']/2;\n  $bars['o'] = $bars['o']*4;\n\
    \  return $bars;\n}\n$result = parse_music(\"o o| .| o| o| .| .| .| .| o o\");\n\
    print_r($result);", "    // Your code here\n}\n", "    $notes = array_flip(array('o','o|','.|'));\n\
    \n    $music_notes = explode(' ', $music_string);\n    foreach ($music_notes as\
    \ $note) {\n        $notes_list[] = $notes[$note];\n    }\n\n    return $notes_list;\n\
    }\n", "  $music_string_arr = str_split($music_string);\n  $music_string_count\
    \ = count($music_string_arr);\n  $music_string_count_arr = range(0, $music_string_count\
    \ - 1);\n  $beat_count_arr = array();\n  $beat_count = 0;\n  foreach ($music_string_count_arr\
    \ as $i) {\n    if ($music_string_arr[$i] == 'o') {\n      $beat_count = 4;\n\
    \    } elseif ($music_string_arr[$i] == 'o' && $music_string_arr[$i + 1] == '|')\
    \ {\n      $beat_count = 2;\n    } elseif ($music_string_arr[$i] == '.' && $music_string_arr[$i\
    \ + 1] == '|') {\n      $beat_count = 1;\n    }\n    $beat_count_arr[] = $beat_count;\n\
    \  }\n  return $beat_count_arr;\n}\n\necho '<pre>';\nprint_r(parse_music(\"o o|\
    \ .| o| o| .| .| .| .| o o\"));\necho '</pre>';\n", "    $notes = str_split($music_string);\n\
    \    $result = [];\n    $current = '';\n    foreach ($notes as $note) {\n    \
    \    if ($note == ' ') {\n            $result[] = get_note_length($current);\n\
    \            $current = '';\n        } else {\n            $current .= $note;\n\
    \        }\n    }\n    $result[] = get_note_length($current);\n    return $result;\n\
    }\n", "\t$regex = \"/[o.|]/\";\n\tpreg_match_all($regex, $music_string, $matches);\n\
    \t//print_r($matches);\n\t$result = array();\n\t$len = count($matches[0]);\n\t\
    for ($i = 0; $i < $len; $i++) {\n\t\tif ($matches[0][$i] == 'o') {\n\t\t\t$result[]\
    \ = 4;\n\t\t} else if ($matches[0][$i] == 'o|') {\n\t\t\t$result[] = 2;\n\t\t\
    } else if ($matches[0][$i] == '.|') {\n\t\t\t$result[] = 1;\n\t\t}\n\t}\n\t//print_r($result);\n\
    \treturn $result;\n}\n", "  $result = [];\n  $beats = ['o' => 4, 'o|' => 2, '.|'\
    \ => 1];\n  $string_array = str_split($music_string);\n  $current_note = '';\n\
    \  foreach ($string_array as $item) {\n    if (isset($beats[$current_note . $item]))\
    \ {\n      $current_note .= $item;\n    } else {\n      $result[] = $beats[$current_note];\n\
    \      $current_note = $item;\n    }\n  }\n  $result[] = $beats[$current_note];\n\
    \  return $result;\n}\n", "    $result = array();\n    $notes = str_split($music_string);\n\
    \    $length = count($notes);\n    $chord = array();\n    $i = 0;\n    $w = 0;\n\
    \    $h = 0;\n    $q = 0;\n    while ($i < $length) {\n        if ($notes[$i]\
    \ == 'o') {\n            $w = 4;\n            $chord[] = $w;\n            $i++;\n\
    \        } elseif ($notes[$i] == 'o' && $notes[$i + 1] == '|') {\n           \
    \ $h = 2;\n            $chord[] = $h;\n            $i = $i + 2;\n        } elseif\
    \ ($notes[$i] == '.' && $notes[$i + 1] == '|') {\n            $q = 1;\n      \
    \      $chord[] = $q;\n            $i = $i + 2;\n        } else {\n          \
    \  $i++;\n        }\n    }\n    return $chord;\n}", "    $music_array = str_split($music_string);\n\
    \    $count = 0;\n    $result = [];\n    foreach ($music_array as $symbol) {\n\
    \        switch ($symbol) {\n            case 'o':\n                $count +=\
    \ 4;\n                break;\n            case 'o|':\n                $count +=\
    \ 2;\n                break;\n            case '.|':\n                $count +=\
    \ 1;\n                break;\n            case ' ':\n                $result[]\
    \ = $count;\n                $count = 0;\n                break;\n        }\n\
    \    }\n    $result[] = $count;\n    return $result;\n}\n\necho implode(', ',\
    \ parse_music(\"o o| .| o| o| .| .| .| .| o o\")) . PHP_EOL;", "    $beat = array(\n\
    \        'o' => 4,\n        'o|' => 2,\n        '.|' => 1\n    );\n    $music_array\
    \ = explode(' ', $music_string);\n    $arr = array();\n    foreach ($music_array\
    \ as $key => $value) {\n        $arr[] = $beat[$value];\n    }\n    return $arr;\n\
    }\nprint_r(parse_music(\"o o| .| o| o| .| .| .| .| o o\"));\n", "    $notes =\
    \ array(\n        'o' => 4,\n        'o|' => 2,\n        '.|' => 1\n    );\n \
    \   $array_music = explode(' ', $music_string);\n    $result = array();\n    foreach\
    \ ($array_music as $m) {\n        $result[] = $notes[$m];\n    }\n    return $result;\n\
    }\nprint_r(parse_music(\"o o| .| o| o| .| .| .| .| o o\"));", "    // your code\
    \ here\n}\n```\n\n```php\n<?php", "    $notes = str_split($music_string);\n  \
    \  $result = [];\n    foreach ($notes as $note) {\n        if ($note == 'o') {\n\
    \            $result[] = 4;\n        } elseif ($note == '.') {\n            $result[]\
    \ = 1;\n        } elseif ($note == '|') {\n            $result[] = 2;\n      \
    \  }\n    }\n    return $result;\n}\n\n$result = parse_music(\"o o| .| o| o| .|\
    \ .| .| .| o o\");\nvar_dump($result);", "    $bars_string = explode(' ', $music_string);\n\
    \    $result = [];\n    foreach ($bars_string as $bar) {\n        $beat = 4;\n\
    \        if (strpos($bar, '|') !== false) {\n            $beat = 1;\n        }\n\
    \        if (strpos($bar, '.') !== false) {\n            $beat = 2;\n        }\n\
    \        $result[] = $beat;\n    }\n    return $result;\n}", "  $result = [];\n\
    \  $notes = explode(' ', $music_string);\n  foreach ($notes as $note) {\n    switch\
    \ ($note) {\n      case 'o':\n        $result[] = 4;\n        break;\n      case\
    \ 'o|':\n        $result[] = 2;\n        break;\n      case '.|':\n        $result[]\
    \ = 1;\n        break;\n    }\n  }\n  return $result;\n}\n", "  $tock_length =\
    \ [\n    'o' => 4,\n    'o|' => 2,\n    '.|' => 1\n  ];\n  $tock = [];\n  preg_match_all('/o|o\\\
    ||\\.\\|/', $music_string, $tock);\n  $tock = $tock[0];\n  $result = [];\n  foreach\
    \ ($tock as $key => $value) {\n    $result[] = $tock_length[$value];\n  }\n  return\
    \ $result;\n}", "    $keys = explode(' ', $music_string);\n    $result = [];\n\
    \    foreach ($keys as $key) {\n        switch ($key) {\n            case 'o':\n\
    \                $result[] = 4;\n                break;\n            case 'o|':\n\
    \                $result[] = 2;\n                break;\n            case '.|':\n\
    \                $result[] = 1;\n                break;\n        }\n    }\n  \
    \  return $result;\n}\n\necho '<pre>';\nvar_dump(parse_music(\"o o| .| o| o| .|\
    \ .| .| .| o o\"));\necho '</pre>';", "    $arr = str_split($music_string);\n\
    \    $ar = [];\n    $flag = 0;\n    foreach ($arr as $value) {\n        if ($value\
    \ === 'o') {\n            $ar[] = 4;\n        } elseif ($value === '.') {\n  \
    \          $ar[] = 1;\n        } elseif ($value === '|') {\n            $flag++;\n\
    \            if ($flag == 2) {\n                $ar[] = 2;\n                $flag\
    \ = 0;\n            }\n        }\n    }\n    return $ar;\n}\n\nvar_dump(parse_music(\"\
    o o| .| o| o| .| .| .| .| o o\"));", "    $music_string_arr = str_split($music_string);\n\
    \    $result = [];\n    $temp = 0;\n    foreach ($music_string_arr as $key =>\
    \ $value) {\n        if($value == 'o') {\n            $temp++;\n        }\n  \
    \      if($value == '|') {\n            $result[] = $temp;\n            $temp\
    \ = 0;\n        }\n    }\n    return $result;\n}\n\nvar_dump(parse_music(\"o o|\
    \ .| o| o| .| .| .| .| o o\"));", "\t$octopus = [];\n\t$music_string = str_replace('o',\
    \ 'o|o|o|o|', $music_string);\n\t$music_string = str_replace('|', ' ', $music_string);\n\
    \t$octopus = explode(' ', $music_string);\n\t$octopus = array_map('strlen', $octopus);\n\
    \t\n\treturn $octopus;\n}\n", "\t$notes = str_split($music_string);\n\t$whole_note\
    \ = 'o';\n\t$half_note = 'o|';\n\t$quarter_note = '.|';\n\t$four_beats = '4';\n\
    \t$two_beats = '2';\n\t$one_beat = '1';\n\t$beat_arr = array();\n\tforeach ($notes\
    \ as $note) {\n\t\tif ($note == $whole_note) {\n\t\t\t$beat_arr[] = $four_beats;\n\
    \t\t} elseif ($note == $half_note) {\n\t\t\t$beat_arr[] = $two_beats;\n\t\t} elseif\
    \ ($note == $quarter_note) {\n\t\t\t$beat_arr[] = $one_beat;\n\t\t}\n\t}\n\treturn\
    \ $beat_arr;\n}\n", '}', "\n}\n\nprint_r(parse_music(\"o o| .| o| o| .| .| .|\
    \ .| o o\"));", "  $array = explode(\" \", $music_string);\n  $length = count($array);\n\
    \  $result = array();\n  for ($i = 0; $i < $length; $i++) {\n    if ($array[$i]\
    \ == \"o\") {\n      array_push($result, 4);\n    } elseif ($array[$i] == \"o|\"\
    ) {\n      array_push($result, 2);\n    } elseif ($array[$i] == \".|\") {\n  \
    \    array_push($result, 1);\n    }\n  }\n  return $result;\n}", "\t$music_string\
    \ = trim($music_string);\n\t$notes = explode(' ', $music_string);\n\t$dur = array();\n\
    \tforeach ($notes as $note) {\n\t\tif ($note == 'o') {\n\t\t\t$dur[] = 4;\n\t\t\
    } elseif ($note == 'o|') {\n\t\t\t$dur[] = 2;\n\t\t} elseif ($note == '.|') {\n\
    \t\t\t$dur[] = 1;\n\t\t}\n\t}\n\treturn $dur;\n}", "    // TODO: Implement parse_music\
    \ function.\n    $count = 0;\n    $result = [];\n    $music_arr = explode(' ',\
    \ $music_string);\n    for ($i = 0; $i < count($music_arr); $i++) {\n        if\
    \ ($music_arr[$i] == 'o') {\n            $result[$count] = 4;\n            $count++;\n\
    \        } else if ($music_arr[$i] == 'o|') {\n            $result[$count] = 2;\n\
    \            $count++;\n        } else if ($music_arr[$i] == '.|') {\n       \
    \     $result[$count] = 1;\n            $count++;\n        }\n    }\n    return\
    \ $result;\n}\n", "    $music_arr = str_split($music_string);\n    $result = [];\n\
    \    $part = '';\n    $music_arr_count = count($music_arr);\n    foreach ($music_arr\
    \ as $i => $char) {\n        if ($char === ' ') {\n            if ($part === 'o')\
    \ {\n                $result[] = 4;\n            } elseif ($part === 'o|') {\n\
    \                $result[] = 2;\n            } elseif ($part === '.|') {\n   \
    \             $result[] = 1;\n            }\n            $part = '';\n       \
    \ } else {\n            $part .= $char;\n            if ($i === $music_arr_count\
    \ - 1) {\n                if ($part === 'o') {\n                    $result[]\
    \ = 4;\n                } elseif ($part === 'o|') {\n                    $result[]\
    \ = 2;\n                } elseif ($part === '.|') {\n                    $result[]\
    \ = 1;\n                }\n            }\n        }\n    }\n    return $result;\n\
    }\n\n$music_string = 'o o| .| o| o| .| .| .| .| o o';\nprint_r(parse_music($music_string));",
  "  $return_array = array();\n  $parsed_notes = explode(\" \", $music_string);\n\
    \  foreach ($parsed_notes as $note) {\n    switch ($note) {\n      case 'o':\n\
    \        $return_array[] = 4;\n        break;\n      case 'o|':\n        $return_array[]\
    \ = 2;\n        break;\n      case '.|':\n        $return_array[] = 1;\n     \
    \   break;\n    }\n  }\n  return $return_array;\n}\n", '}', "\t$beatArray = array();\n\
    \t$beatString = \"\";\n\tfor ($i = 0; $i < strlen($music_string); $i++) {\n\t\t\
    if ($music_string[$i] == \"o\") {\n\t\t\tif ($music_string[$i + 1] == \" \") {\n\
    \t\t\t\t$beatString .= \"4\";\n\t\t\t} else if ($music_string[$i + 1] == \"|\"\
    ) {\n\t\t\t\t$beatString .= \"2\";\n\t\t\t}\n\t\t} else if ($music_string[$i]\
    \ == \".\") {\n\t\t\t$beatString .= \"1\";\n\t\t}\n\t}\n\t$beatArray = explode(\"\
    \ \", $beatString);\n\treturn $beatArray;\n}", "\t$beats = array(\n\t\t'o' =>\
    \ 4,\n\t\t'o|' => 2,\n\t\t'.|' => 1\n\t);\n\t$pattern = '/o|o\\||\\.\\|/';\n\t\
    preg_match_all($pattern, $music_string, $matches);\n\t$result = array();\n\tforeach\
    \ ($matches[0] as $match) {\n\t\t$result[] = $beats[$match];\n\t}\n\treturn $result;\n\
    }\n\necho \"<pre>\";\necho print_r(parse_music(\"o o| .| o| o| .| .| .| .| o o\"\
    ));\necho \"</pre>\";\n", "\n}", "  $results = array();\n  $notes = explode('\
    \ ', $music_string);\n  foreach ($notes as $note) {\n    switch ($note) {\n  \
    \    case 'o':\n        $results[] = 4;\n        break;\n      case 'o|':\n  \
    \      $results[] = 2;\n        break;\n      case '.|':\n        $results[] =\
    \ 1;\n        break;\n    }\n  }\n  return $results;\n}\n\necho '<pre>';\nprint_r(parse_music(\"\
    o o| .| o| o| .| .| .| .| o o\"));\necho '</pre>';\n", "    $notes = str_split($music_string);\n\
    \    $beats = array();\n    $bars = 0;\n    foreach ($notes as $note) {\n    \
    \    switch ($note) {\n            case 'o':\n                $beats[] = 4;\n\
    \                break;\n            case 'o|':\n                $beats[] = 2;\n\
    \                break;\n            case '.|':\n                $beats[] = 1;\n\
    \                break;\n            case '|':\n                $bars++;\n   \
    \             break;\n        }\n    }\n    return $beats;\n}\n\necho \"<pre>\"\
    ;\nprint_r(parse_music(\"o o| .| o| o| .| .| .| .| o o\"));\necho \"</pre>\";",
  "  $notes = array();\n  $len = strlen($music_string);\n  $count = 0;\n  $sum = 0;\n\
    \  while($count < $len) {\n    $note = $music_string[$count];\n    if ($note ==\
    \ 'o') {\n      $sum += 4;\n      $notes[] = 4;\n    } else if ($note == '.')\
    \ {\n      $notes[] = 1;\n      $sum += 1;\n    }\n    if ($music_string[$count\
    \ + 1] == '|') {\n      $notes[] = $sum;\n      $sum = 0;\n    }\n    $count +=\
    \ 2;\n  }\n  return $notes;\n}\n", '}', "    $note_map = [\n        'o' => 4,\n\
    \        'o|' => 2,\n        '.|' => 1\n    ];\n    $notes = explode(' ', $music_string);\n\
    \    $result = [];\n    foreach ($notes as $note) {\n        $result[] = $note_map[$note];\n\
    \    }\n    return $result;\n}\n", "\t$music_array = str_split($music_string);\n\
    \t$music_array_chunked = array_chunk($music_array, 2);\n\t$music_array_chunked_flipped\
    \ = array_flip($music_array_chunked);\n\t$music_array_chunked_flipped_keys = array_keys($music_array_chunked_flipped);\n\
    \tforeach ($music_array_chunked_flipped_keys as $key => $value) {\n\t\tif ($value\
    \ == 'o ') {\n\t\t\t$music_array_chunked_flipped_keys[$key] = 4;\n\t\t} elseif\
    \ ($value == 'o|') {\n\t\t\t$music_array_chunked_flipped_keys[$key] = 2;\n\t\t\
    } elseif ($value == '.|') {\n\t\t\t$music_array_chunked_flipped_keys[$key] = 1;\n\
    \t\t}\n\t}\n\treturn $music_array_chunked_flipped_keys;\n}\n", "}\n", "    $music_string\
    \ = explode(' ', $music_string);\n    $to_return = [];\n    foreach ($music_string\
    \ as $note) {\n        if ($note === 'o') {\n            $to_return[] = 4;\n \
    \       } elseif ($note === 'o|') {\n            $to_return[] = 2;\n        }\
    \ elseif ($note === '.|') {\n            $to_return[] = 1;\n        }\n    }\n\
    \    return $to_return;\n}\n", "  $result = [];\n  $music_string = explode(' ',\
    \ $music_string);\n  foreach ($music_string as $music_string_value) {\n    if\
    \ ($music_string_value == 'o') {\n      $result[] = 4;\n    } else if ($music_string_value\
    \ == 'o|') {\n      $result[] = 2;\n    } else if ($music_string_value == '.|')\
    \ {\n      $result[] = 1;\n    }\n  }\n  return $result;\n}\n\nprint_r(parse_music(\"\
    o o| .| o| o| .| .| .| .| o o\"));\nprint_r(parse_music(\"o.|..|.o.|..|.o.|..|.o.|..|.o.|..|.o.|..|.o.|..|.o.|..|.o.|..|.o.|..|.o.|..|.o.|..|.o.|..|.o.|..|.o.|..|.o.|..|.o.|..|.o.|..|.o.|..|.o.|..|.o.|..|.o.|..|.o.|..|.o.|..|.o.|..|.o.|..|.o.|..|.o.|..|.o.|..|.o.|..|.o.|..|.o.|..|.o.|..|.o.|..|.o.|..|.o.|..|.o.|..|.o.|..|.o.|..|.o.|..|.o.|..|.o.|..|.o.|..|.o.|..|.o.|..|.o.|..|.o.|..|.o.|..|.o.|..|.o.|..|.o.|..|.o.|..|.o.|..|.o.|..|.o.|..|.o.|..|.o.|..|.o.|..|.o",
  "\t// Complete this function\n}", "    $result = [];\n    $notes = explode(' ',\
    \ $music_string);\n    foreach ($notes as $note) {\n        $beats = 0;\n    \
    \    switch ($note) {\n            case 'o':\n                $beats = 4;\n  \
    \              break;\n            case 'o|':\n                $beats = 2;\n \
    \               break;\n            case '.|':\n                $beats = 1;\n\
    \                break;\n        }\n        $result[] = $beats;\n    }\n    return\
    \ $result;\n}\n\n$music_string = 'o o| .| o| o| .| .| .| .| o o';\n$beats = parse_music($music_string);\n\
    echo implode(', ', $beats);", "  $chars = str_split($music_string);\n  $res =\
    \ [];\n  foreach ($chars as $char) {\n    if (ctype_alpha($char)) {\n      $res[]\
    \ = 4;\n    } elseif ($char == '|') {\n      if (is_numeric($res[count($res) -\
    \ 1])) {\n        $res[count($res) - 1] *= 2;\n      } else {\n        $res[]\
    \ = 2;\n      }\n    } elseif ($char == '.') {\n      $res[] = 1;\n    }\n  }\n\
    \  return $res;\n}\n\n$music = \"o o| .| o| o| .| .| .| .| o o\";\nvar_dump(parse_music($music));",
  "    $array_notes = str_split($music_string);\n\n    //array of notes, where key\
    \ is note and value is duration of the note\n    $notes = array();\n    $temp_note\
    \ = '';\n\n    foreach ($array_notes as $note) {\n        $temp_note .= $note;\n\
    \        //make sure that it's not 'o|' as it is half note\n        if($note ==\
    \ 'o' && strlen($temp_note) == 2) {\n            $notes[] = array('note' => $temp_note,\
    \ 'duration' => 4);\n            $temp_note = '';\n        }\n        elseif($note\
    \ == '|') {\n            $notes[] = array('note' => $temp_note, 'duration' =>\
    \ 2);\n            $temp_note = '';\n        }\n        elseif($note == '.') {\n\
    \            $notes[] = array('note' => $temp_note, 'duration' => 1);\n      \
    \      $temp_note = '';\n        }\n    }\n\n    //array of durations\n    $durations\
    \ = array();\n    foreach ($notes as $note) {\n        $durations[] = $note['duration'];\n\
    \    }\n\n    return $durations;\n}\n", "\t$music_string = trim($music_string);\n\
    \t$notes = explode(' ', $music_string);\n\t$output = array();\n\tforeach ($notes\
    \ as $note) {\n\t\tif ($note == 'o') {\n\t\t\t$output[] = 4;\n\t\t} elseif ($note\
    \ == 'o|') {\n\t\t\t$output[] = 2;\n\t\t} elseif ($note == '.|') {\n\t\t\t$output[]\
    \ = 1;\n\t\t}\n\t}\n\treturn $output;\n}\n", "    $note_lengths = [];\n    $temp_array\
    \ = explode(\" \", $music_string);\n    for ($i = 0; $i < count($temp_array);\
    \ $i++) {\n        if ($temp_array[$i] == \"o\") {\n            array_push($note_lengths,\
    \ 4);\n        } elseif ($temp_array[$i] == \"o|\") {\n            array_push($note_lengths,\
    \ 2);\n        } elseif ($temp_array[$i] == \".|\") {\n            array_push($note_lengths,\
    \ 1);\n        }\n    }\n    return $note_lengths;\n}\n", "  $result = [];\n \
    \ $notes = str_split($music_string);\n  foreach ($notes as $note) {\n    if ($note\
    \ == 'o') {\n      $result[] = 4;\n    } elseif ($note == 'o' && $note == '|')\
    \ {\n      $result[] = 2;\n    } elseif ($note == '.' && $note == '|') {\n   \
    \   $result[] = 1;\n    }\n  }\n  return $result;\n}\nvar_dump(parse_music(\"\
    o o| .| o| o| .| .| .| .| o o\"));", '}', "    $music_string = trim($music_string);\n\
    \    $notes = explode(' ', $music_string);\n    $result = [];\n    foreach ($notes\
    \ as $note) {\n        if ($note == 'o') {\n            $result[] = 4;\n     \
    \   } else if ($note == 'o|') {\n            $result[] = 2;\n        } else if\
    \ ($note == '.|') {\n            $result[] = 1;\n        }\n    }\n    return\
    \ $result;\n}\n", "    $notes = explode(' ', $music_string);\n    $result = [];\n\
    \    foreach ($notes as $note) {\n        if ($note === 'o') {\n            $result[]\
    \ = 4;\n        } elseif ($note === 'o|') {\n            $result[] = 2;\n    \
    \    } elseif ($note === '.|') {\n            $result[] = 1;\n        }\n    }\n\
    \    return $result;\n}\n\n$a = parse_music(\"o o| .| o| o| .| .| .| .| o o\"\
    );\nprint_r($a);", "\t$music_string = preg_replace(\"#\\s+#\", \"\", $music_string);\n\
    \t$music_string = preg_replace(\"#(o|\\.\\|)#\", \"$1|\", $music_string);\n\t\
    $split_music = explode(\"|\", $music_string);\n\t\n\t$return_array = array();\n\
    \t\n\tforeach($split_music as $music_part) {\n\t\tif ($music_part == \"o\") {\n\
    \t\t\t$return_array[] = 4;\n\t\t} else if ($music_part == \"o|\") {\n\t\t\t$return_array[]\
    \ = 2;\n\t\t} else if ($music_part == \".|\") {\n\t\t\t$return_array[] = 1;\n\t\
    \t}\n\t}\n\t\n\treturn $return_array;\n}", "    //...\n}", "  $music_string =\
    \ preg_replace('/o/', 'o|o|o|o|', $music_string);\n  $music_string = preg_replace('/o\\\
    |o\\|o\\|o\\|/', 'o', $music_string);\n  $music_string = preg_replace('/\\.\\\
    |/', '1', $music_string);\n  $music_string = preg_replace('/o\\|/', '2', $music_string);\n\
    \  $music_array = explode(' ', $music_string);\n  return $music_array;\n}\n\n\
    echo \"<pre>\";\nprint_r(parse_music(\"o o| .| o| o| .| .| .| .| o o\"));\necho\
    \ \"</pre>\";", "  // Write your code here\n}\n", "\t$arr = str_split($music_string);\n\
    \t$notes = [];\n\t$current = 1;\n\tfor ($i = 0; $i < count($arr); $i++) {\n\t\t\
    if ($arr[$i] == 'o') {\n\t\t\tif ($i < count($arr) - 1 && $arr[$i + 1] == ' ')\
    \ {\n\t\t\t\t$notes[] = 4;\n\t\t\t\t$current = 1;\n\t\t\t} else {\n\t\t\t\t$current\
    \ *= 2;\n\t\t\t}\n\t\t} else if ($arr[$i] == '|') {\n\t\t\t$notes[] = $current;\n\
    \t\t\t$current = 1;\n\t\t} else if ($arr[$i] == '.') {\n\t\t\t$current /= 2;\n\
    \t\t}\n\t}\n\treturn $notes;\n}\n\necho implode(', ', parse_music(\"o o| .| o|\
    \ o| .| .| .| .| o o\"));", "    $input = str_split($music_string);\n    $array\
    \ = array();\n    $len = count($input);\n    $i = 0;\n    while ($i < $len) {\n\
    \        if ($input[$i] == 'o') {\n            if ($input[$i + 1] == '|') {\n\
    \                $array[] = 2;\n                $i += 2;\n            } else {\n\
    \                $array[] = 4;\n                $i++;\n            }\n       \
    \ } elseif ($input[$i] == '.') {\n            $array[] = 1;\n            $i +=\
    \ 2;\n        }\n    }\n    return $array;\n}\n", "\n}\n", "    $music_string\
    \ = str_replace(\"o\",\"1111\",$music_string);\n    $music_string = str_replace(\"\
    o|\",\"1100\",$music_string);\n    $music_string = str_replace(\".|\",\"1000\"\
    ,$music_string);\n    $music_string = str_replace(\" \",\"\",$music_string);\n\
    \    $music_array = str_split($music_string);\n    foreach ($music_array as $key\
    \ => $value) {\n        $array_result[] = substr_count($value,\"1\");\n    }\n\
    \    return $array_result;\n}\nprint_r(parse_music(\"o o| .| o| o| .| .| .| .|\
    \ o o\"));", "\t$answ = [];\n\t$music_string = str_replace(\"|\", \"\", $music_string);\n\
    \t$music_array = explode(\" \", $music_string);\n\tfor ($i = 0; $i < count($music_array);\
    \ $i++) {\n\t\tif ($music_array[$i] == \"o\") {\n\t\t\t$answ[] = 4;\n\t\t} elseif\
    \ ($music_array[$i] == \".\") {\n\t\t\t$answ[] = 1;\n\t\t}\n\t}\n\treturn $answ;\n\
    }\n", "    $notas = explode(' ', $music_string);\n    foreach ($notas as $nota)\
    \ {\n        switch ($nota) {\n            case 'o':\n                $int[] =\
    \ 4;\n                break;\n            case 'o|':\n                $int[] =\
    \ 2;\n                break;\n            case '.|':\n                $int[] =\
    \ 1;\n                break;\n        }\n    }\n    return $int;\n}\n", "\t$notes\
    \ = str_split($music_string);\n\t$output = array();\n\t$note_buffer = null;\n\t\
    foreach ($notes as $note) {\n\t\tswitch ($note) {\n\t\t\tcase 'o':\n\t\t\t\tif\
    \ ($note_buffer !== null) {\n\t\t\t\t\t$output[] = $note_buffer;\n\t\t\t\t}\n\t\
    \t\t\t$note_buffer = 4;\n\t\t\t\tbreak;\n\t\t\tcase '|':\n\t\t\t\tif ($note_buffer\
    \ !== null) {\n\t\t\t\t\t$note_buffer--;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase\
    \ '.':\n\t\t\t\tif ($note_buffer !== null) {\n\t\t\t\t\t$output[] = $note_buffer;\n\
    \t\t\t\t\t$note_buffer = null;\n\t\t\t\t}\n\t\t\t\t$output[] = 1;\n\t\t\t\tbreak;\n\
    \t\t\tcase ' ':\n\t\t\t\tif ($note_buffer !== null) {\n\t\t\t\t\t$output[] = $note_buffer;\n\
    \t\t\t\t\t$note_buffer = null;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t}\n\treturn\
    \ $output;\n}\n", "    $notes = str_split($music_string);\n    $index = 0;\n \
    \   $count = count($notes);\n    $result = [];\n    while ($index < $count) {\n\
    \        $note = $notes[$index];\n        if ($note === 'o') {\n            $next\
    \ = $notes[$index + 1];\n            if ($next === '|') {\n                $result[]\
    \ = 2;\n                $index += 2;\n            } else {\n                $result[]\
    \ = 4;\n                $index++;\n            }\n        } else {\n         \
    \   $result[] = 1;\n            $index += 2;\n        }\n    }\n    return $result;\n\
    }\n\n$test = parse_music(\"o o| .| o| o| .| .| .| .| o o\");\nprint_r($test);",
  "    $count = [];\n    $notes = explode(' ', $music_string);\n    foreach ($notes\
    \ as $note) {\n        if (strpos($note, 'o|') !== false) {\n            $count[]\
    \ = 2;\n        } elseif (strpos($note, '.') !== false) {\n            $count[]\
    \ = 1;\n        } else {\n            $count[] = 4;\n        }\n    }\n    return\
    \ $count;\n}\n", "    $notes = [\n        'o' => 4,\n        'o|' => 2,\n    \
    \    '.|' => 1\n    ];\n    $result = [];\n    foreach ($notes as $note => $duration)\
    \ {\n        $music_string = str_replace($note, $duration, $music_string);\n \
    \   }\n    $music_string = explode(' ', $music_string);\n    foreach ($music_string\
    \ as $note) {\n        $result[] = intval($note);\n    }\n    return $result;\n\
    }\nvar_dump(parse_music(\"o o| .| o| o| .| .| .| .| o o\"));", "\t// replace oo\
    \ and o|o| with oo|\n\t$music_string = preg_replace('/((o|\\.)\\|?){2}/', '$1|',\
    \ $music_string);\n\t// replace o|oo and o|.|o| with o|o\n\t$music_string = preg_replace('/(o|\\\
    .)\\|(o|\\.){2}/', '$1|$2', $music_string);\n\t// replace o.|.o| with o.|o|\n\t\
    $music_string = preg_replace('/o\\.(\\|\\.)*o\\|/', 'o.$1o|', $music_string);\n\
    \t// replace .o.|.o| with .o.|o|\n\t$music_string = preg_replace('/\\.o\\.(\\\
    |\\.)*o\\|/', '.o.$1o|', $music_string);\n\t// replace o.|.o with o.|o\n\t$music_string\
    \ = preg_replace('/o\\.(\\|\\.)*o/', 'o.$1o', $music_string);\n\t// replace .o.|.o\
    \ with .o.|o\n\t$music_string = preg_replace('/\\.o\\.(\\|\\.)*o/', '.o.$1o',\
    \ $music_string);\n\t// count beats\n\t$beats = array();\n\tforeach (explode('\
    \ ', $music_string) as $note) {\n\t\t$beats[] = substr_count($note, '|') + 1;\n\
    \t}\n\treturn $beats;\n}\n\nprint_r(parse_music(\"o o| .| o| o| .| .| .| .| o\
    \ o\"));\nprint_r(parse_music(\"o o| o.| o.| o.| o.| o.| o.| o.| o o\"));\nprint_r(parse_music(\"\
    o o| o.| o.| o.| o.| o.| o.| o.| o o| o o| o o| o o| o o| o o| o o| o o| o", " \
    \   // regex for whole note\n    $regex_pattern_whole = '/o/';\n    // regex for\
    \ half note\n    $regex_pattern_half = '/o\\|/';\n    // regex for quarter note\n\
    \    $regex_pattern_quarter = '/\\.\\|/';\n    // array for matched whole notes\n\
    \    $whole_note_array = [];\n    // array for matched half notes\n    $half_note_array\
    \ = [];\n    // array for matched quarter notes\n    $quarter_note_array = [];\n\
    \    // size of whole note array\n    $size_whole_note_array = 0;\n    // size\
    \ of half note array\n    $size_half_note_array = 0;\n    // size of quarter note\
    \ array\n    $size_quarter_note_array = 0;\n    // array of the final result\n\
    \    $parse_music_result = [];\n    // get how many whole notes in the array\n\
    \    $size_whole_note_array = preg_match_all($regex_pattern_whole, $music_string,\
    \ $whole_note_array);\n    // get how many half notes in the array\n    $size_half_note_array\
    \ = preg_match_all($regex_pattern_half, $music_string, $half_note_array);\n  \
    \  // get how many quarter notes in the array\n    $size_quarter_note_array =\
    \ preg_match_all($regex_pattern_quarter, $music_string, $quarter_note_array);\n\
    \    // loop through the whole note array and add 4 to the parse_music_result\
    \ array\n    for ($i = 0; $i < $size_whole_note_array; $i++) {\n        array_push($parse_music_result,\
    \ 4);\n    }\n    // loop through the half note array and add 2 to the parse_music_result\
    \ array\n    for ($i = 0; $i < $size_half_note_array; $i++) {\n        array_push($parse_music_result,\
    \ 2);\n    }\n    // loop through the quarter note array and add 1 to the parse_music_result\
    \ array\n    for ($i = 0; $i < $size_quarter_note", "\t$music_array = explode(\"\
    \ \", $music_string);\n\t$output_array = array();\n\tforeach ($music_array as\
    \ $key => $value) {\n\t\tif ($value === \"o\") {\n\t\t\t$output_array[] = 4;\n\
    \t\t} elseif ($value === \"o|\") {\n\t\t\t$output_array[] = 2;\n\t\t} elseif ($value\
    \ === \".|\") {\n\t\t\t$output_array[] = 1;\n\t\t}\n\t}\n\treturn $output_array;\n\
    }", "    // Write your code here\n    $arr = explode(\" \", $music_string);\n\
    \    $newArr = [];\n    foreach ($arr as $value) {\n        if ($value == \"o\"\
    )\n            $newArr[] = 4;\n        else if ($value == \"o|\")\n          \
    \  $newArr[] = 2;\n        else if ($value == \".|\")\n            $newArr[] =\
    \ 1;\n    }\n    return $newArr;\n}\n\necho \"<pre>\";\nprint_r(parse_music(\"\
    o o| .| o| o| .| .| .| .| o o\"));\necho \"</pre>\";", "\t$arrMusic = str_split($music_string);\n\
    \t$arrBeat = [];\n\t$beat = 0;\n\tforeach ($arrMusic as $strMusic) {\n\t\tif (strpos($strMusic,\
    \ 'o') !== false) {\n\t\t\t$arrBeat[] = 4;\n\t\t} elseif (strpos($strMusic, '.')\
    \ !== false) {\n\t\t\t$arrBeat[] = 1;\n\t\t} elseif (strpos($strMusic, '|') !==\
    \ false) {\n\t\t\t$arrBeat[] = 2;\n\t\t}\n\t}\n\treturn $arrBeat;\n}\n", "  //\
    \ parse the string and return array of integers\n  // the result array should\
    \ correspond to how many beats does each note last\n  // you can assume the input\
    \ string is always in the right format\n  // you can assume the input string is\
    \ valid\n  // you can assume the input string always contains at least one note\n\
    \n  // Your solution here.\n  $result = array();\n  $music_list = explode(\" \"\
    , $music_string);\n  foreach ($music_list as $key => $value) {\n    if($value\
    \ == \"o\") {\n      $result[] = 4;\n    }\n    elseif ($value == \"o|\") {\n\
    \      $result[] = 2;\n    }\n    elseif ($value == \".|\") {\n      $result[]\
    \ = 1;\n    }\n  }\n  return $result;\n}\n", "    $music_array = str_split($music_string);\n\
    \    $music_notes = array_keys($music_array, 'o');\n    $music_notes_with_bars\
    \ = array_keys($music_array, 'o|');\n    $music_notes_with_points = array_keys($music_array,\
    \ '.|');\n    $music_notes_count = count($music_notes);\n    $music_notes_with_bars_count\
    \ = count($music_notes_with_bars);\n    $music_notes_with_points_count = count($music_notes_with_points);\n\
    \    $music_array_output = array();\n    for ($i = 0; $i < $music_notes_count;\
    \ $i++) {\n        $music_array_output[] = 4;\n    }\n    for ($i = 0; $i < $music_notes_with_bars_count;\
    \ $i++) {\n        $music_array_output[] = 2;\n    }\n    for ($i = 0; $i < $music_notes_with_points_count;\
    \ $i++) {\n        $music_array_output[] = 1;\n    }\n    return $music_array_output;\n\
    }\n\nparse_music(\"o o| .| o| o| .| .| .| .| o o\");", "  return \"\";\n}\n",
  "\t//$arr = explode(\" \", $music_string);\n\t$arr = preg_split(\"/\\s/\", $music_string);\n\
    \t$arr_of_results = array();\n\tforeach ($arr as $note) {\n\t\t$arr_of_results[]\
    \ = strlen($note) - substr_count($note, \"|\");\n\t}\n\treturn $arr_of_results;\n\
    }\n\n$music_string = \"o o| .| o| o| .| .| .| .| o o\";\n$result = parse_music($music_string);\n\
    echo \"Input: $music_string<br>\";\necho \"Output: \";\nprint_r($result);", " \
    \ $notes = [\n    'o' => 4,\n    'o|' => 2,\n    '.|' => 1\n  ];\n  $result =\
    \ [];\n  foreach(explode(' ', $music_string) as $note) {\n    $result[] = $notes[$note];\n\
    \  }\n  return $result;\n}", "\t$note_beat = array(\n\t\t\"o\" => 4,\n\t\t\"o|\"\
    \ => 2,\n\t\t\".|\" => 1\n\t);\n\t$note_string = preg_split(\"/\\s+/\", $music_string);\n\
    \t$note_value = array();\n\tfor ($i = 0; $i < count($note_string); $i++) {\n\t\
    \t$note_value[] = $note_beat[$note_string[$i]];\n\t}\n\treturn $note_value;\n\
    }\n", "  $num_beats = strlen($music_string);\n  $current_beat = 0;\n  $beat_array\
    \ = array();\n  while ($current_beat < $num_beats) {\n    $note = $music_string[$current_beat];\n\
    \    if ($note == 'o') {\n      $next_note = $music_string[$current_beat + 1];\n\
    \      if ($next_note == '|') {\n        $beat_array[] = 2;\n        $current_beat\
    \ += 2;\n      } else {\n        $beat_array[] = 4;\n        $current_beat +=\
    \ 1;\n      }\n    } else {\n      $beat_array[] = 1;\n      $current_beat +=\
    \ 2;\n    }\n  }\n  return $beat_array;\n}\n\necho \"<pre>\";\nvar_dump(parse_music(\"\
    o o| .| o| o| .| .| .| .| o o\"));\necho \"</pre>\";\n", "    $music_string =\
    \ str_replace(\"o|\", \"o/\", $music_string);\n    $array = explode(\" \", $music_string);\n\
    \    for ($i = 0; $i < count($array); $i++) {\n        switch ($array[$i]) {\n\
    \            case 'o':\n                $array[$i] = 4;\n                break;\n\
    \            case 'o/':\n                $array[$i] = 2;\n                break;\n\
    \            case '.|':\n                $array[$i] = 1;\n                break;\n\
    \        }\n    }\n    return $array;\n}", "    $regex = '#([.]+\\|)|([o]+\\|)|([o]+)#';\n\
    \    preg_match_all($regex, $music_string, $matches);\n    $res = [];\n    foreach\
    \ ($matches[0] as $match) {\n        if ($match[0] == '.') {\n            $res[]\
    \ = strlen($match);\n        } else {\n            $res[] = strlen($match) + (strlen($match)\
    \ % 2);\n        }\n    }\n    return $res;\n}\n$res = parse_music(\"o o| .| o|\
    \ o| .| .| .| .| o o\");\nprint_r($res);\necho \"\\n\";\n$res = parse_music(\"\
    o | o o| o o o o o o o o o o o o o o o o o o o o o o o o| o o o o o o o o o o\
    \ o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o\
    \ o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o\
    \ o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o\
    \ o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o\
    \ o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o\
    \ o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o\
    \ o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o\
    \ o o o o o o o o o o o o o o o o o o o o o o o o o o", '}', "    $str = str_replace(\"\
    \\r\", \"\", $music_string);\n    $notes = preg_split(\"/\\n/\", $str);\n    $music\
    \ = [];\n    foreach ($notes as $note) {\n        $music[] = explode(\" \", $note);\n\
    \    }\n    $beats = [];\n    foreach ($music as $measure) {\n        foreach\
    \ ($measure as $note) {\n            if ($note == \"o\") {\n                $beats[]\
    \ = 4;\n            } elseif ($note == \"o|\") {\n                $beats[] = 2;\n\
    \            } elseif ($note == \".|\") {\n                $beats[] = 1;\n   \
    \         }\n        }\n    }\n    return $beats;\n}", "  $music_beats = [];\n\
    \  $music_arr = str_split($music_string);\n  foreach ($music_arr as $value) {\n\
    \    switch ($value) {\n      case 'o':\n        $music_beats[] = 4;\n       \
    \ break;\n      case 'o|':\n        $music_beats[] = 2;\n        break;\n    \
    \  case '.|':\n        $music_beats[] = 1;\n        break;\n    }\n  }\n  return\
    \ $music_beats;\n}", "    $music_string_arr = explode(' ', $music_string);\n \
    \   $result = [];\n    foreach ($music_string_arr as $music_symbol) {\n      \
    \  if ($music_symbol === 'o') {\n            $result[] = 4;\n        } elseif\
    \ ($music_symbol === 'o|') {\n            $result[] = 2;\n        } elseif ($music_symbol\
    \ === '.|') {\n            $result[] = 1;\n        }\n    }\n    return $result;\n\
    }", "    $music_array = str_split($music_string);\n    $parsed_music = [];\n \
    \   $current_beat = 0;\n    for ($i = 0; $i < count($music_array); $i++) {\n \
    \       if ($music_array[$i] == 'o') {\n            if ($music_array[$i + 1] ==\
    \ '|') {\n                array_push($parsed_music, 2);\n                $i++;\n\
    \            } else {\n                array_push($parsed_music, 4);\n       \
    \     }\n        } elseif ($music_array[$i] == '.') {\n            array_push($parsed_music,\
    \ 1);\n            $i++;\n        }\n    }\n    return $parsed_music;\n}", '}',
  "  // break the music string into an array of characters\n  $music_array = str_split($music_string);\n\
    \  // create a blank return array\n  $return_array = array();\n  // create a var\
    \ to keep track of note count\n  $last_count = 4;\n  // loop through the music\
    \ array\n  foreach ($music_array as $note) {\n    //if the current note is a '.',\
    \ push a 1 to the return array and reset the note count\n    if ($note == '.')\
    \ {\n      array_push($return_array, 1);\n      $last_count = 1;\n    }\n    //if\
    \ the current note is a 'o', push the last note count to the return array and\
    \ reset the note count\n    if ($note == 'o') {\n      array_push($return_array,\
    \ $last_count);\n      $last_count = 4;\n    }\n    //if the current note is a\
    \ '|', push the last note count to the return array and reset the note count\n\
    \    if ($note == '|') {\n      array_push($return_array, $last_count);\n    \
    \  $last_count = 2;\n    }\n  }\n  // return the return array\n  return $return_array;\n\
    }\n", "  $return_array = array();\n  $music_array = str_split($music_string);\n\
    \  foreach ($music_array as $note) {\n    switch ($note) {\n      case 'o':\n\
    \        $return_array[] = 4;\n        break;\n      case '|':\n        $return_array[]\
    \ = 2;\n        break;\n      case '.':\n        $return_array[] = 1;\n      \
    \  break;\n      default:\n        // Skip non-note characters\n        break;\n\
    \    }\n  }\n  return $return_array;\n}\n", "\t// your code here\n}\n\necho '<pre>';\n\
    print_r(parse_music(\"o o| .| o| o| .| .| .| .| o o\"));\nprint_r(parse_music(\"\
    o o| o| o| o| o| o| o| o| o o\"));\nprint_r(parse_music(\"o o| o| o| o| o| o|\
    \ o| o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o|\
    \ o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o\
    \ o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o|\
    \ o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o\
    \ o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o|\
    \ o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o\
    \ o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o|\
    \ o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o\
    \ o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o", "\t\
    $noteLengths = array('o' => 4, 'o|' => 2, '.|' => 1);\n\t$noteLength = 1;\n\t\
    $lengths = array();\n\t\n\t$notes = str_split($music_string);\n\tforeach ($notes\
    \ as $note) {\n\t\tif (array_key_exists($noteLength . $note, $noteLengths)) {\n\
    \t\t\t$lengths[] = $noteLengths[$noteLength . $note];\n\t\t\t$noteLength = 1;\n\
    \t\t} else {\n\t\t\t$noteLength .= $note;\n\t\t}\n\t}\n\t\n\treturn $lengths;\n\
    }", "  $music_array = str_split($music_string);\n  $parsed_array = [];\n  $music_item\
    \ = \"\";\n  foreach ($music_array as $char) {\n    if (preg_match(\"/[o|.]/\"\
    , $char)) {\n      $music_item .= $char;\n    }\n    if (preg_match(\"/\\s/\"\
    , $char)) {\n      $parsed_array[] = beat_count($music_item);\n      $music_item\
    \ = \"\";\n    }\n  }\n  return $parsed_array;\n}\n", "  $music_string = str_replace(\"\
    |\", \" \", $music_string);\n  $music_string = preg_replace(\"/\\s+/\", \" \"\
    , $music_string);\n  $music_string = trim($music_string);\n  $music_string = explode(\"\
    \ \", $music_string);\n  foreach ($music_string as $value) {\n    switch ($value)\
    \ {\n      case 'o':\n        $music_array[] = 4;\n        break;\n      case\
    \ '.':\n        $music_array[] = 1;\n        break;\n    }\n  }\n  return $music_array;\n\
    }", "  $music_length = strlen($music_string);\n  for ($i = 0; $i < $music_length;\
    \ $i++) {\n    switch ($music_string[$i]) {\n      case 'o':\n        $result[]\
    \ = 4;\n        break;\n      case 'o|':\n        $result[] = 2;\n        break;\n\
    \      case '.|':\n        $result[] = 1;\n        break;\n    }\n  }\n  return\
    \ $result;\n}\n\n$music_string = 'o o| .| o| o| .| .| .| .| o o';\nvar_dump(parse_music($music_string));",
  "\t$result = array();\n\t$notes = explode(' ', $music_string);\n\t$notes_beat =\
    \ array(\n\t\t'o' => 4,\n\t\t'o|' => 2,\n\t\t'.|' => 1\n\t);\n\tforeach ($notes\
    \ as $note) {\n\t\tarray_push($result, $notes_beat[$note]);\n\t}\n\treturn $result;\n\
    }\n\n$music_string = \"o o| .| o| o| .| .| .| .| o o\";\necho json_encode(parse_music($music_string));",
  "    $beat_per_note = array(\n        'o' => 4,\n        'o|' => 2,\n        '.|'\
    \ => 1\n    );\n    $notes = explode(' ', $music_string);\n    $beat_array = array();\n\
    \    foreach ($notes as $note) {\n        $beat_array[] = $beat_per_note[$note];\n\
    \    }\n    return $beat_array;\n}\n", "  $music_array = [];\n  $temp_array =\
    \ str_split($music_string);\n  $temp_music_string = \"\";\n  $temp_count = 0;\n\
    \  foreach ($temp_array as $key => $value) {\n    if ($value == \" \") {\n   \
    \   if ($temp_music_string == \"o|\") {\n        $music_array[] = 2;\n      }\
    \ elseif ($temp_music_string == \".|\") {\n        $music_array[] = 1;\n     \
    \ } elseif ($temp_music_string == \"o\") {\n        $music_array[] = 4;\n    \
    \  }\n      $temp_music_string = \"\";\n    } else {\n      $temp_music_string\
    \ .= $value;\n    }\n  }\n  if ($temp_music_string == \"o|\") {\n    $music_array[]\
    \ = 2;\n  } elseif ($temp_music_string == \".|\") {\n    $music_array[] = 1;\n\
    \  } elseif ($temp_music_string == \"o\") {\n    $music_array[] = 4;\n  }\n  return\
    \ $music_array;\n}", "    $arr = explode(' ', $music_string);\n    $res = [];\n\
    \    foreach ($arr as $item) {\n        switch ($item) {\n            case 'o':\n\
    \                $res[] = 4;\n                break;\n            case 'o|':\n\
    \                $res[] = 2;\n                break;\n            case '.|':\n\
    \                $res[] = 1;\n                break;\n        }\n    }\n    return\
    \ $res;\n}\n", "  return array();\n}\n", "    $notes = explode(' ', $music_string);\n\
    \    $beats = [];\n    foreach ($notes as $note) {\n        switch ($note) {\n\
    \            case 'o':\n                $beats[] = 4;\n                break;\n\
    \            case 'o|':\n                $beats[] = 2;\n                break;\n\
    \            case '.|':\n                $beats[] = 1;\n                break;\n\
    \        }\n    }\n    return $beats;\n}\n\n$music_notes = 'o o| .| o| o| .| .|\
    \ .| .| o o';\nvar_dump(parse_music($music_notes));", "  $music_string = trim($music_string);\n\
    \  $result = explode(' ', $music_string);\n  $result_count = count($result);\n\
    \  $result_str = \"\";\n  for ($i = 0; $i < $result_count; $i++) {\n    $result_str\
    \ .= $result[$i] . \" \";\n  }\n  $result_str = trim($result_str);\n  $result_str\
    \ = str_replace(\"|\", \"\", $result_str);\n  $result_str = str_replace(\".\"\
    , \"1\", $result_str);\n  $result_str = str_replace(\"o\", \"4\", $result_str);\n\
    \  $result_str = trim($result_str);\n  $result = explode(' ', $result_str);\n\
    \  $result_count = count($result);\n  $result_int = array();\n  for ($i = 0; $i\
    \ < $result_count; $i++) {\n    $result_int[$i] = intval($result[$i]);\n  }\n\
    \  return $result_int;\n}", "    $note_times = [\n        'o' => 4,\n        'o|'\
    \ => 2,\n        '.|' => 1\n    ];\n    $notes = explode(' ', $music_string);\n\
    \    return array_map(function($note) use ($note_times) {\n        return $note_times[$note];\n\
    \    }, $notes);\n}\n", "    // >>> parse_music(\"o o| .| o| o| .| .| .| .| o\
    \ o\")\n    // array(4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4)\n    $notes = str_split($music_string);\n\
    \    $parsed_notes = [];\n    $note_map = [\n        'o' => 4,\n        '|' =>\
    \ 2,\n        '.' => 1\n    ];\n    $current_note = '';\n    foreach ($notes as\
    \ $note) {\n        if ($note === ' ' || $note === '|') {\n            $parsed_notes[]\
    \ = $note_map[$current_note];\n            $current_note = '';\n        } else\
    \ {\n            $current_note .= $note;\n        }\n    }\n    if ($current_note\
    \ !== '') {\n        $parsed_notes[] = $note_map[$current_note];\n    }\n    return\
    \ $parsed_notes;\n}\n\n$music_string = \"o o| .| o| o| .| .| .| .| o o\";\nvar_dump(parse_music($music_string));",
  "    $look_up = array(\n        'o' => 4,\n        'o|' => 2,\n        '.|' => 1\n\
    \    );\n    $music_array = explode(' ', $music_string);\n    $result = array();\n\
    \    foreach ($music_array as $note) {\n        $result[] = $look_up[$note];\n\
    \    }\n    return $result;\n}\n\n$music_string = \"o o| .| o| o| .| .| .| .|\
    \ o o\";\n$result = parse_music($music_string);\nprint_r($result);", "    $result\
    \ = array();\n    $notes = explode(' ', $music_string);\n    foreach ($notes as\
    \ $note) {\n        if($note == 'o') {\n            $result[] = 4;\n        }\
    \ elseif($note == 'o|') {\n            $result[] = 2;\n        } elseif($note\
    \ == '.|') {\n            $result[] = 1;\n        }\n    }\n    return $result;\n\
    }\n", "    $notes = str_split($music_string);\n    $result = [];\n    foreach\
    \ ($notes as $note) {\n        if ($note == 'o') {\n            $result[] = 4;\n\
    \        } elseif ($note == '.') {\n            $result[] = 1;\n        } elseif\
    \ ($note == '|') {\n            $result[] = 2;\n        }\n    }\n    return $result;\n\
    }", "\n}\n", "\t// For now, return an array of random integers\n\t$music_array\
    \ = explode(\" \", $music_string);\n\t$beat_array = array();\n\tforeach ($music_array\
    \ as $beat) {\n\t\tswitch ($beat) {\n\t\t\tcase \"o\":\n\t\t\t\t$beat_array[]\
    \ = 4;\n\t\t\t\tbreak;\n\t\t\tcase \"o|\":\n\t\t\t\t$beat_array[] = 2;\n\t\t\t\
    \tbreak;\n\t\t\tcase \".|\":\n\t\t\t\t$beat_array[] = 1;\n\t\t\t\tbreak;\n\t\t\
    }\n\t}\n\treturn $beat_array;\n}", "  $result = [];\n  $notes = str_split($music_string);\n\
    \  for ($i = 0; $i < count($notes); $i++) {\n    if ($notes[$i] == 'o') {\n  \
    \    if ($notes[$i + 1] == ' ') {\n        $result[] = 4;\n      } else if ($notes[$i\
    \ + 1] == '|') {\n        $result[] = 2;\n        $i++;\n      }\n    } else if\
    \ ($notes[$i] == '.') {\n      $result[] = 1;\n      $i++;\n    }\n  }\n  return\
    \ $result;\n}", "  $music_arr = str_split($music_string);\n  $notes = array();\n\
    \  $i = 0;\n  $note = '';\n  foreach ($music_arr as $key => $value) {\n    if\
    \ ($value == 'o') {\n      $note .= $value;\n    } elseif ($value == '|') {\n\
    \      $note .= $value;\n    } elseif ($value == ' ') {\n      switch ($note)\
    \ {\n        case 'o':\n          $notes[$i] = 4;\n          $i++;\n         \
    \ break;\n        case 'o|':\n          $notes[$i] = 2;\n          $i++;\n   \
    \       break;\n        case '.|':\n          $notes[$i] = 1;\n          $i++;\n\
    \          break;\n      }\n      $note = '';\n    }\n  }\n  switch ($note) {\n\
    \    case 'o':\n      $notes[$i] = 4;\n      $i++;\n      break;\n    case 'o|':\n\
    \      $notes[$i] = 2;\n      $i++;\n      break;\n    case '.|':\n      $notes[$i]\
    \ = 1;\n      $i++;\n      break;\n  }\n  return $notes;\n}\n\nparse_music(\"\
    o o| .| o| o| .| .| .| .| o o\");", "    $output = [];\n    $string_array = str_split($music_string);\n\
    \    foreach ($string_array as $value) {\n        if ($value == 'o') {\n     \
    \       $output[] = 4;\n        } elseif ($value == '.') {\n            $output[]\
    \ = 1;\n        } elseif ($value == '|') {\n            $output[] = 2;\n     \
    \   }\n    }\n    return $output;\n}\n\necho json_encode(parse_music(\"o o| .|\
    \ o| o| .| .| .| .| o o\")) . \"\\n\";\necho json_encode(parse_music(\"o o| o|\
    \ o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o\
    \ o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o|\
    \ o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o\
    \ o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o|\
    \ o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o\
    \ o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o|\
    \ o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o o| o\
    \ o| o o| o o| o o| o o| o o| o o| o o| o o| o o|", "  $n = 0;\n  $music_array\
    \ = str_split($music_string);\n  foreach ($music_array as $value) {\n    if ($value\
    \ == 'o'){\n      $n++;\n    }\n    elseif ($value == 'o|'){\n      $n = $n +\
    \ 2;\n    }\n    elseif ($value == '.|'){\n      $n++;\n    }\n  }\n  return $n;\n\
    }\n", "\t// You implementation goes here\n\t$music_notes = str_split($music_string);\n\
    \t$result = array();\n\t$beat = 0;\n\tforeach ($music_notes as $m_note) {\n\t\t\
    switch ($m_note) {\n\t\t\tcase 'o':\n\t\t\t\t$beat = 4;\n\t\t\t\tbreak;\n\t\t\t\
    case 'o|':\n\t\t\t\t$beat = 2;\n\t\t\t\tbreak;\n\t\t\tcase '.|':\n\t\t\t\t$beat\
    \ = 1;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t$beat = 0;\n\t\t\t\tbreak;\n\t\
    \t}\n\t\tarray_push($result, $beat);\n\t}\n\treturn $result;\n}\n", "    $splitted_string\
    \ = str_split($music_string);\n    $is_dot = false;\n    $nums = [];\n    $temp\
    \ = 0;\n    foreach ($splitted_string as $char) {\n        if ($char === 'o')\
    \ {\n            if ($is_dot) {\n                $temp = 1;\n                $is_dot\
    \ = false;\n            } else {\n                $temp = 4;\n            }\n\
    \        } elseif ($char === '|') {\n            if ($is_dot) {\n            \
    \    $temp = 1;\n                $is_dot = false;\n            } else {\n    \
    \            $temp = 2;\n            }\n        } elseif ($char === '.') {\n \
    \           $is_dot = true;\n        }\n        if ($temp > 0) {\n           \
    \ $nums[] = $temp;\n            $temp = 0;\n        }\n    }\n    return $nums;\n\
    }\n", "    $tokens = str_split($music_string);\n    $ret = array();\n    $pos\
    \ = 0;\n    while ($pos < count($tokens)) {\n        if ($tokens[$pos] == 'o')\
    \ {\n            $ret[] = 4;\n            $pos += 1;\n        } else if ($tokens[$pos]\
    \ == '.') {\n            $ret[] = 1;\n            $pos += 3;\n        }\n    }\n\
    \    return $ret;\n}", "  // Implement function here\n}", "\t\n}\n", "    // Write\
    \ your implementation here\n}", "    $notes = [];\n    foreach (explode(' ', $music_string)\
    \ as $note) {\n        switch ($note) {\n            case 'o':\n             \
    \   $notes[] = 4;\n                break;\n            case 'o|':\n          \
    \      $notes[] = 2;\n                break;\n            case '.|':\n       \
    \         $notes[] = 1;\n                break;\n        }\n    }\n    return\
    \ $notes;\n}\n", "}\n", "    $result = array();\n    $cursor = -1;\n    for ($i\
    \ = 0; $i < strlen($music_string); $i++) {\n        $cursor++;\n        if ($music_string[$i]\
    \ == 'o') {\n            if ($music_string[$i + 1] == '|') {\n               \
    \ $result[$cursor] = 2;\n                $i++;\n            } else {\n       \
    \         $result[$cursor] = 4;\n            }\n        } else {\n           \
    \ $result[$cursor] = 1;\n            $i++;\n        }\n    }\n    return $result;\n\
    }\n", "  $notes_string = explode(' ', $music_string);\n  $notes_length = count($notes_string);\n\
    \  $notes_array = array();\n  for ($i = 0; $i < $notes_length; $i++) {\n    $note\
    \ = $notes_string[$i];\n    if ($note == 'o') {\n      $notes_array[] = 4;\n \
    \   } elseif ($note == 'o|') {\n      $notes_array[] = 2;\n    } elseif ($note\
    \ == '.|') {\n      $notes_array[] = 1;\n    }\n  }\n  return $notes_array;\n}",
  "    $music = str_split($music_string);\n    $beat = 0;\n    $beats = [];\n    for\
    \ ($i = 0; $i < count($music); $i++) {\n        if ($music[$i] == 'o') {\n   \
    \         $beat += 4;\n            $beats[] = $beat;\n            $beat = 0;\n\
    \        } elseif ($music[$i] == 'o' && $music[$i + 1] == '|') {\n           \
    \ $beat += 2;\n            $beats[] = $beat;\n            $beat = 0;\n       \
    \ } elseif ($music[$i] == '.' && $music[$i + 1] == '|') {\n            $beat +=\
    \ 1;\n            $beats[] = $beat;\n            $beat = 0;\n        }\n    }\n\
    \    return $beats;\n}", "    $beats = [\n        'o' => 4,\n        'o|' => 2,\n\
    \        '.|' => 1\n    ];\n    $notes = explode(' ', $music_string);\n    $beats_array\
    \ = [];\n    foreach ($notes as $note) {\n        $beats_array[] = $beats[$note];\n\
    \    }\n    return $beats_array;\n}\n", "  $music_array = str_split($music_string);\n\
    \  foreach ($music_array as $key => $char) {\n    if ($char === 'o') {\n     \
    \ $music_array[$key] = 4;\n    } elseif ($char === '.') {\n      $music_array[$key]\
    \ = 1;\n    } elseif ($char === '|') {\n      $music_array[$key] = 2;\n    }\n\
    \  }\n  return $music_array;\n}\n\n$music_array = parse_music(\"o o| .| o| o|\
    \ .| .| .| .| o o\");\nprint_r($music_array);\n", "  $count = 0;\n  $result =\
    \ [];\n  for ($i = 0; $i < strlen($music_string); $i++) {\n    $ch = $music_string[$i];\n\
    \    switch ($ch) {\n      case 'o':\n        $count += 4;\n        break;\n \
    \     case '|':\n        if ($music_string[$i - 1] == 'o') {\n          $count\
    \ += 2;\n        } else {\n          $count += 1;\n        }\n        break;\n\
    \      case ' ':\n        $result[] = $count;\n        $count = 0;\n        break;\n\
    \    }\n  }\n  $result[] = $count;\n  return $result;\n}\n\nvar_dump(parse_music(\"\
    o o| .| o| o| .| .| .| .| o o\"));\n\n/*\n* Here is a legend:\n* 'o' - whole note,\
    \ lasts four beats\n* 'o|' - half note, lasts two beats\n* '.|' - quater note,\
    \ lasts one beat\n* >>> parse_music(\"o o| .| o| o| .| .| .| .| o o\")\n* array(4,\
    \ 2, 1, 2, 2, 1, 1, 1, 1, 4, 4)\n*/", "    $music_array = explode(' ', $music_string);\n\
    \    $music_beats = [];\n    foreach ($music_array as $key => $note) {\n     \
    \   $length = strlen($note);\n        if ($length === 1) {\n            array_push($music_beats,\
    \ 4);\n        } else {\n            array_push($music_beats, $length - 1);\n\
    \        }\n    }\n    return $music_beats;\n}\n", "\tpreg_match_all('/\\.?\\\
    |?/', $music_string, $matches);\n\t$notes = $matches[0];\n\t$lengths = array();\n\
    \tforeach ($notes as $note) {\n\t\tswitch ($note) {\n\t\t\tcase '':\n\t\t\t\t\
    $lengths[] = 4;\n\t\t\t\tbreak;\n\t\t\tcase '|':\n\t\t\t\t$lengths[] = 2;\n\t\t\
    \t\tbreak;\n\t\t\tcase '.|':\n\t\t\t\t$lengths[] = 1;\n\t\t\t\tbreak;\n\t\t}\n\
    \t}\n\treturn $lengths;\n}\n", "    // your code goes here\n}\n", "    $ar = explode('\
    \ ', $music_string);\n    $ar2 = array();\n    $ar3 = array();\n    foreach ($ar\
    \ as $key) {\n        if ($key == 'o') {\n            $ar2[] = 4;\n        } elseif\
    \ ($key == 'o|') {\n            $ar2[] = 2;\n        } elseif ($key == '.|') {\n\
    \            $ar2[] = 1;\n        }\n    }\n    $ar3 = array_values($ar2);\n \
    \   return $ar3;\n}\necho \"<pre>\";\nprint_r(parse_music(\"o o| .| o| o| .| .|\
    \ .| .| o o\"));\necho \"</pre>\";\n", "    // your code here\n}", "    $music_array\
    \ = array();\n    $notes = explode(\" \", $music_string);\n    foreach ($notes\
    \ as $note) {\n        if ($note == \"o\") {\n            $note = 4;\n       \
    \ } else if ($note == \"o|\") {\n            $note = 2;\n        } else if ($note\
    \ == \".|\") {\n            $note = 1;\n        }\n        array_push($music_array,\
    \ $note);\n    }\n    return $music_array;\n}\n", "  $music_arr = explode(' ',\
    \ $music_string);\n  $music_len = count($music_arr);\n  $music_beats = array();\n\
    \  for ($i = 0; $i < $music_len; $i++) {\n    $note = $music_arr[$i];\n    if\
    \ (strlen($note) == 1) {\n      $music_beats[] = 4;\n    } else {\n      $music_beats[]\
    \ = 2;\n    }\n  }\n  return $music_beats;\n}\n\n$music_string = \"o o| .| o|\
    \ o| .| .| .| .| o o\";\necho '<pre>';\nprint_r(parse_music($music_string));\n\
    echo '</pre>';", "    $music_notes = str_split($music_string);\n    $result =\
    \ [];\n    foreach ($music_notes as $music_note) {\n        switch ($music_note)\
    \ {\n            case 'o':\n                $result[] = 4;\n                break;\n\
    \            case 'o|':\n                $result[] = 2;\n                break;\n\
    \            case '.|':\n                $result[] = 1;\n                break;\n\
    \        }\n    }\n    return $result;\n}\n", "    $duration_map = [\n       \
    \ 'o' => 4,\n        'o|' => 2,\n        '.|' => 1\n    ];\n    $notes = explode('\
    \ ', $music_string);\n    $duration = [];\n    foreach ($notes as $note) {\n \
    \       $duration[] = $duration_map[$note];\n    }\n    return $duration;\n}\n",
  "}\n", "    $array = str_split($music_string);\n    $sum = 0;\n    $num_of_musical_notes\
    \ = 0;\n    $musical_notes = array();\n    foreach ($array as $key => $value)\
    \ {\n        if ($value == '|') {\n            $sum++;\n        } else if ($value\
    \ == 'o') {\n            $sum += 4;\n        } else if ($value == '.') {\n   \
    \         $sum += 1;\n        } else if ($value == ' ') {\n            $musical_notes[$num_of_musical_notes]\
    \ = $sum;\n            $num_of_musical_notes++;\n            $sum = 0;\n     \
    \   }\n    }\n    $musical_notes[$num_of_musical_notes] = $sum;\n    return $musical_notes;\n\
    }", "    $pattern = '/((o)|(o\\|)|(\\|))/';\n    preg_match_all($pattern, $music_string,\
    \ $matches);\n    foreach ($matches[0] as $match) {\n        if ($match == 'o')\
    \ {\n            $result[] = 4;\n        } elseif ($match == 'o|') {\n       \
    \     $result[] = 2;\n        } elseif ($match == '|') {\n            $result[]\
    \ = 1;\n        }\n    }\n    return $result;\n}\n\necho json_encode(parse_music(\"\
    o o| .| o| o| .| .| .| .| o o\"));", "\n}\n", "\t$notes = str_split($music_string);\n\
    \t\n\t$out = array();\n\t$note_count = 0;\n\tforeach($notes as $note) {\n\t\t\
    if ($note == '.') {\n\t\t\tcontinue;\n\t\t} elseif ($note == 'o') {\n\t\t\t$note_count++;\n\
    \t\t} elseif ($note == '|') {\n\t\t\t$out[] = $note_count;\n\t\t\t$note_count\
    \ = 0;\n\t\t}\n\t}\n\t\n\treturn $out;\n}\n", "    $result = [];\n    $note =\
    \ [\n        'o' => 4,\n        'o|' => 2,\n        '.|' => 1\n    ];\n    $music_string\
    \ = explode(' ', $music_string);\n    foreach ($music_string as $item) {\n   \
    \     $result[] = $note[$item];\n    }\n    return $result;\n}\n\n$result = parse_music(\"\
    o o| .| o| o| .| .| .| .| o o\");\necho '<pre>';\nprint_r($result);\necho '</pre>';",
  "    $count=0;\n    $arr=array();\n    $music_string=explode(\" \",$music_string);\n\
    \    foreach($music_string as $value){\n      $arr[]=substr_count($value, \"|\"\
    )+1;\n    }\n    return $arr;\n}", "  $notes = ['o' => 4, 'o|' => 2, '.|' => 1];\n\
    \  $beats = [];\n  foreach (explode(' ', $music_string) as $note) {\n    $beats[]\
    \ = $notes[$note];\n  }\n  return $beats;\n}", "    $result = [];\n    $string\
    \ = str_replace(' ', '', $music_string);\n    $notes = explode('|', $string);\n\
    \    foreach ($notes as $note) {\n        if ($note == 'o') {\n            $result[]\
    \ = 4;\n        } elseif ($note == 'o.') {\n            $result[] = 2;\n     \
    \   } elseif ($note == '.o') {\n            $result[] = 1;\n        }\n    }\n\
    \    return $result;\n}\n\necho '<pre>';\nvar_dump(parse_music(\"o o| .| o| o|\
    \ .| .| .| .| o o\"));", "    $elements = array('o' => 4, 'o|' => 2, '.|' => 1);\n\
    \    $notes = str_split($music_string);\n    $musical_notes = array();\n    $cnt\
    \ = 0;\n    for ($i = 0; $i < count($notes); $i++) {\n        if ($notes[$i] !=\
    \ ' ') {\n            $cnt++;\n        } else {\n            $musical_notes[]\
    \ = $elements[substr($music_string, $i - $cnt, $cnt)];\n            $cnt = 0;\n\
    \        }\n    }\n    $musical_notes[] = $elements[substr($music_string, $i -\
    \ $cnt, $cnt)];\n    return $musical_notes;\n}\n", "\t$music_string = preg_replace(\"\
    /\\s+/\", \"\", $music_string);\n\t$arr1 = explode(\"o\", $music_string);\n\t\
    $result = array();\n\tforeach ($arr1 as $item) {\n\t\tif ($item === '') {\n\t\t\
    \tarray_push($result, 4);\n\t\t} else {\n\t\t\t$arr2 = explode(\"|\", $item);\n\
    \t\t\tforeach ($arr2 as $item2) {\n\t\t\t\tif ($item2 === '') {\n\t\t\t\t\tarray_push($result,\
    \ 2);\n\t\t\t\t} else {\n\t\t\t\t\tarray_push($result, 1);\n\t\t\t\t}\n\t\t\t\
    }\n\t\t}\n\t}\n\treturn $result;\n}\n", "  $arr = str_split($music_string);\n\
    \  $new_arr = [];\n  foreach ($arr as $value) {\n    if ($value == '.') {\n  \
    \    $new_arr[] = 1;\n    } elseif ($value == 'o') {\n      $new_arr[] = 4;\n\
    \    } elseif ($value == '|') {\n      $new_arr[] = 2;\n    }\n  }\n  return $new_arr;\n\
    }\n\necho \"<pre>\";\nprint_r(parse_music(\"o o| .| o| o| .| .| .| .| o o\"));\n\
    echo \"</pre>\";", "    // TODO: implement this function\n}", "}\nvar_dump(parse_music(\"\
    o o| .| o| o| .| .| .| .| o o\"));", "    $notes = [\n        'o' => 4,\n    \
    \    'o|' => 2,\n        '.|' => 1\n    ];\n    $beats = [];\n    foreach (explode('\
    \ ', $music_string) as $note) {\n        $beats[] = $notes[$note];\n    }\n  \
    \  return $beats;\n}\n", "    $music_split = explode(' ', $music_string);\n  \
    \  $notes = array();\n    foreach ($music_split as $note) {\n        if ($note\
    \ == 'o') {\n            $notes[] = 4;\n        } elseif ($note == 'o|') {\n \
    \           $notes[] = 2;\n        } elseif ($note == '.|') {\n            $notes[]\
    \ = 1;\n        }\n    }\n    return $notes;\n}\necho '<pre>';\nprint_r(parse_music(\"\
    o o| .| o| o| .| .| .| .| o o\"));\necho '</pre>';\n", "\t$chars = str_split($music_string);\n\
    \t$result = [];\n\t$prev = \"\";\n\tforeach ($chars as $char) {\n\t\tif ($char\
    \ === \"|\") {\n\t\t\tif ($prev === \".\") {\n\t\t\t\t$result[] = 1;\n\t\t\t}\
    \ elseif ($prev === \"o\") {\n\t\t\t\t$result[] = 2;\n\t\t\t}\n\t\t} elseif ($char\
    \ === \" \") {\n\t\t\tif ($prev === \"o\") {\n\t\t\t\t$result[] = 4;\n\t\t\t}\n\
    \t\t}\n\t\t$prev = $char;\n\t}\n\treturn $result;\n}", "    $notes = ['o' => 4,\
    \ 'o|' => 2, '.|' => 1];\n    $chars = str_split($music_string);\n    $notes_array\
    \ = [];\n    $note = '';\n    for ($i = 0; $i < count($chars); $i++) {\n     \
    \   $note .= $chars[$i];\n        if (array_key_exists($note, $notes)) {\n   \
    \         $notes_array[] = $notes[$note];\n            $note = '';\n        }\n\
    \    }\n    return $notes_array;\n}\nvar_dump(parse_music(\"o o| .| o| o| .| .|\
    \ .| .| o o\"));", "    $beats = array();\n    $currentNote = \"\";\n    for ($i\
    \ = 0; $i < strlen($music_string); $i++) {\n        $currentChar = $music_string[$i];\n\
    \        if ($currentChar == \" \") {\n            if ($currentNote != \"\") {\n\
    \                array_push($beats, strlen($currentNote));\n                $currentNote\
    \ = \"\";\n            }\n        } else if ($currentChar == \"|\") {\n      \
    \      if ($music_string[$i - 1] == \"o\") {\n                $currentNote .=\
    \ \"o\";\n            }\n        } else {\n            $currentNote .= $currentChar;\n\
    \        }\n    }\n    if ($currentNote != \"\") {\n        array_push($beats,\
    \ strlen($currentNote));\n    }\n    return $beats;\n}\n", "    $result = [];\n\
    \    // Write your code here\n    return $result;\n}", "  $notes = str_split($music_string);\n\
    \  $parsed_notes = [];\n  foreach ($notes as $key => $note) {\n    if (isset($notes[$key+1]))\
    \ {\n      if ($note === 'o' && $notes[$key+1] === ' ') {\n        $parsed_notes[]\
    \ = 4;\n      } elseif ($note === 'o' && $notes[$key+1] === '|') {\n        $parsed_notes[]\
    \ = 2;\n      } elseif ($note === '.' && $notes[$key+1] === '|') {\n        $parsed_notes[]\
    \ = 1;\n      }\n    }\n  }\n  return $parsed_notes;\n}\n", "  $parsed_string\
    \ = str_replace(array('o|','o'), array('!','.|'), $music_string);\n  $parsed_array\
    \ = explode(' ', $parsed_string);\n  $result = array();\n  foreach ($parsed_array\
    \ as $i) {\n    if ($i == '.') {\n      $result[] = 1;\n    } elseif ($i == '|')\
    \ {\n      $result[] = 2;\n    } elseif ($i == '!') {\n      $result[] = 4;\n\
    \    } elseif ($i == 'o') {\n      $result[] = 8;\n    }\n  }\n  return $result;\n\
    }\nprint_r(parse_music(\"o o| .| o| o| .| .| .| .| o o\"));\n", "  $music_string_array\
    \ = explode(\" \", $music_string);\n  $notes_array = array();\n  $i = 0;\n  $m\
    \ = count($music_string_array);\n  while ($i < $m) {\n    $current_note = $music_string_array[$i];\n\
    \    $note_length = strlen($current_note);\n    if ($note_length == 1) {\n   \
    \   $notes_array[] = 4;\n    } else {\n      $notes_array[] = ($current_note[$note_length\
    \ - 1] == \"|\") ? 2 : 1;\n    }\n    $i++;\n  }\n  return $notes_array;\n}\n",
  "\n}\n", "    $notes = str_split($music_string);\n    $result = [];\n    foreach\
    \ ($notes as $note) {\n        if ($note == 'o') {\n            $result[] = 4;\n\
    \        } elseif ($note == 'o|') {\n            $result[] = 2;\n        } elseif\
    \ ($note == '.|') {\n            $result[] = 1;\n        }\n    }\n    return\
    \ $result;\n}", "\t$music_array = array();\n\t$music_array = str_split($music_string);\n\
    \t$music_string_replaced = preg_replace('/[\\s+]/', '', $music_string);\n\n\t\
    $music_string_cleaned = preg_replace('/[^a-zA-Z0-9\\s+]/', '', $music_string_replaced);\n\
    \t$music_string_split = str_split($music_string_cleaned);\n\t$final_array = array();\n\
    \tfor ($i = 0; $i < count($music_string_split); $i++) {\n\t\tif ($music_string_split[$i]\
    \ == 'o') {\n\t\t\t$final_array[] = 4;\n\t\t} elseif ($music_string_split[$i]\
    \ == 'o|') {\n\t\t\t$final_array[] = 2;\n\t\t} elseif ($music_string_split[$i]\
    \ == '.|') {\n\t\t\t$final_array[] = 1;\n\t\t}\n\t}\n\treturn $final_array;\n\
    }\n$test_music = 'o o| .| o| o| .| .| .| .| o o';\nprint_r(parse_music($test_music));\n\
    echo \"<br>\";", "    $whole_note = 4;\n    $half_note = 2;\n    $quater_note\
    \ = 1;\n    $notes = explode(' ', $music_string);\n    $result = [];\n    foreach\
    \ ($notes as $note) {\n        if ($note == 'o') {\n            $result[] = $whole_note;\n\
    \        } else if ($note == 'o|') {\n            $result[] = $half_note;\n  \
    \      } else if ($note == '.|') {\n            $result[] = $quater_note;\n  \
    \      }\n    }\n    return $result;\n}", "\t$notes = preg_split('/\\s+/', $music_string);\n\
    \t$result = array();\n\tforeach ($notes as $note) {\n\t\tswitch ($note) {\n\t\t\
    \tcase 'o':\n\t\t\t\t$result[] = 4;\n\t\t\t\tbreak;\n\t\t\tcase 'o|':\n\t\t\t\t\
    $result[] = 2;\n\t\t\t\tbreak;\n\t\t\tcase '.|':\n\t\t\t\t$result[] = 1;\n\t\t\
    \t\tbreak;\n\t\t}\n\t}\n\treturn $result;\n}"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

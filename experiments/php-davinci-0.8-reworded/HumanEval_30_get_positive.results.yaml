language: php
name: HumanEval_30_get_positive
results:
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $new_l = array();\n    foreach ($l as $v) {\n        if ($v > 0) {\n\
    \            $new_l[] = $v;\n        }\n    }\n    return $new_l;\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823359
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positives = array();\n    foreach ($l as $item) {\n        if ($item\
    \ > 0) {\n            $positives[] = $item;\n        }\n    }\n    return $positives;\n\
    }\n\n$arr = array(-1, 2, -4, 5, 6);\nvar_dump(get_positive($arr));\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "array(3) {\n  [0]=>\n  int(2)\n  [1]=>\n  int(5)\n  [2]=>\n  int(6)\n}\n"
  timestamp: 1659823359
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($x) {\n        return $x > 0;\n    });\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6rjzio0s.php:18\n\
    Stack trace:\n#0 /tmp/tmp6rjzio0s.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp6rjzio0s.php\
    \ on line 18\n"
  timestamp: 1659823359
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t$o = array();\n\tforeach ($l as $e) {\n\t\tif ($e > 0) {\n\t\t\t$o[] =\
    \ $e;\n\t\t}\n\t}\n\treturn $o;\n}\n\nfunction candidate(...$args) {\n    return\
    \ get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823359
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t$p_list = array();\n\tforeach ($l as $i) {\n\t\tif ($i > 0) {\n\t\t\tarray_push($p_list,\
    \ $i);\n\t\t}\n\t}\n\treturn $p_list;\n}\nfunction candidate(...$args) {\n   \
    \ return get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823359
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t$r = array();\n\tforeach ($l as $i) {\n\t\tif ($i > 0) {\n\t\t\t$r[] =\
    \ $i;\n\t\t}\n\t}\n\treturn $r;\n}\n\nfunction candidate(...$args) {\n    return\
    \ get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823359
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $res = array();\n    foreach ($l as $e) {\n        if ($e > 0) {\n  \
    \          $res[] = $e;\n        }\n    }\n    return $res;\n}\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823359
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t$ret = array();\n\tforeach ($l as $v) {\n\t\tif ($v > 0) {\n\t\t\t$ret[]\
    \ = $v;\n\t\t}\n\t}\n\treturn $ret;\n}\n\nfunction candidate(...$args) {\n   \
    \ return get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823359
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t$ret = array();\n\t$i = 0;\n\tforeach ($l as $item) {\n\t\tif ($item >\
    \ 0) {\n\t\t\t$ret[$i] = $item;\n\t\t\t$i++;\n\t\t}\n\t}\n\treturn $ret;\n}\n\n\
    function candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823359
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t$p = array();\n\tforeach ($l as $x) {\n\t\tif ($x > 0) {\n\t\t\t$p[] =\
    \ $x;\n\t\t}\n\t}\n\treturn $p;\n}\nfunction candidate(...$args) {\n    return\
    \ get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823359
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $k = array();\n    foreach ($l as $v) {\n        if ($v > 0) {\n    \
    \        $k[] = $v;\n        }\n    }\n    return $k;\n}\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823359
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $l = array_filter($l, function($a) {\n        return $a > 0;\n    });\n\
    \    return $l;\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9gh3bj7.php:19\n\
    Stack trace:\n#0 /tmp/tmpc9gh3bj7.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpc9gh3bj7.php\
    \ on line 19\n"
  timestamp: 1659823359
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t$new_array = array();\n\tforeach ($l as $key => $value) {\n\t\tif ($value\
    \ > 0) {\n\t\t\t$new_array[] = $value;\n\t\t}\n\t}\n\tprint_r($new_array);\n}\n\
    get_positive(array(-1, 2, -4, 5, 6));\necho \"<br>\";\nget_positive(array(5, 3,\
    \ -5, 2, -3, 3, 9, 0, 123, 1, -10));\n\necho \"<br>\";\necho \"<br>\";\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 2\n    [1] => 5\n    [2] => 6\n)\n<br>Array\n(\n \
    \   [0] => 5\n    [1] => 3\n    [2] => 2\n    [3] => 3\n    [4] => 9\n    [5]\
    \ => 123\n    [6] => 1\n)\n<br><br>Array\n(\n    [0] => 4\n    [1] => 5\n    [2]\
    \ => 6\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2ivh2173.php:28\n\
    Stack trace:\n#0 /tmp/tmp2ivh2173.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp2ivh2173.php\
    \ on line 28\n"
  timestamp: 1659823359
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t$arr = array();\n\tforeach ($l as $k => $v) {\n\t\tif ($v > 0) {\n\t\t\t\
    $arr[] = $v;\n\t\t}\n\t}\n\treturn $arr;\n}\n\nfunction candidate(...$args) {\n\
    \    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823359
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $result = array();\n    foreach ($l as $i) {\n        if ($i > 0) {\n\
    \            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823359
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfc_wyt5_.php:16\n\
    Stack trace:\n#0 /tmp/tmpfc_wyt5_.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpfc_wyt5_.php\
    \ on line 16\n"
  timestamp: 1659823359
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $res = array();\n  foreach ($l as $v) {\n    if ($v > 0) {\n      $res[]\
    \ = $v;\n    }\n  }\n  return $res;\n}\n\nfunction candidate(...$args) {\n   \
    \ return get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823359
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\treturn array_filter($l, function($n) { return $n > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyzyatt9b.php:16\n\
    Stack trace:\n#0 /tmp/tmpyzyatt9b.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpyzyatt9b.php\
    \ on line 16\n"
  timestamp: 1659823359
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $result = array();\n    foreach ($l as $number) {\n        if ($number\
    \ > 0) {\n            $result[] = $number;\n        }\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823359
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $pos = [];\n    foreach ($l as $v) {\n        if ($v > 0) {\n       \
    \     $pos[] = $v;\n        }\n    }\n    return $pos;\n}\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823359
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $r = array();\n  foreach ($l as $value) {\n    if ($value > 0) {\n    \
    \  $r[] = $value;\n    }\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $ret = array();\n  foreach ($l as $val) {\n    if ($val > 0) {\n      $ret[]\
    \ = $val;\n    }\n  }\n  return $ret;\n}\n\nfunction candidate(...$args) {\n \
    \   return get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t// Your code here.\n\t$res = array();\n\tforeach ($l as $val) {\n\t\tif\
    \ ($val > 0) {\n\t\t\t$res[] = $val;\n\t\t}\n\t}\n\treturn $res;\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    // $r = array();\n    // foreach ($l as $e) {\n    //     if ($e > 0)\
    \ {\n    //         $r[] = $e;\n    //     }\n    // }\n    // return $r;\n  \
    \  return array_filter($l, function($e) {\n        return $e > 0;\n    });\n}\n\
    \nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzic581sg.php:25\n\
    Stack trace:\n#0 /tmp/tmpzic581sg.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpzic581sg.php\
    \ on line 25\n"
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t$l = array_filter($l, function($e){\n\t\treturn $e > 0;\n\t});\n\treturn\
    \ $l;\n}\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmrcjwe6e.php:18\n\
    Stack trace:\n#0 /tmp/tmpmrcjwe6e.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpmrcjwe6e.php\
    \ on line 18\n"
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $new = array();\n    foreach ($l as $n) {\n        if ($n > 0) {\n  \
    \          $new[] = $n;\n        }\n    }\n    return $new;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $a = array();\n    foreach ($l as $v) {\n        if ($v > 0) {\n    \
    \        $a[] = $v;\n        }\n    }\n    return $a;\n}\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\treturn array_filter($l, function($num) {\n\t\treturn $num > 0;\n\t});\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp01ezhxbv.php:18\n\
    Stack trace:\n#0 /tmp/tmp01ezhxbv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp01ezhxbv.php\
    \ on line 18\n"
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $r = array();\n    foreach ($l as $v) {\n        if ($v > 0) {\n    \
    \        $r[] = $v;\n        }\n    }\n    return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($i) {\n        return $i > 0;\n    });\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7a2wc_2x.php:18\n\
    Stack trace:\n#0 /tmp/tmp7a2wc_2x.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp7a2wc_2x.php\
    \ on line 18\n"
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t$a = [];\n\tforeach ($l as $i) {\n\t\tif ($i > 0) {\n\t\t\t$a[] = $i;\n\
    \t\t}\n\t}\n\treturn $a;\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $p = array();\n    foreach ($l as $i) {\n        if ($i > 0)\n      \
    \      $p[] = $i;\n    }\n    return $p;\n}\n\nfunction candidate(...$args) {\n\
    \    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\treturn array_filter($l, function($v) {\n\t\treturn $v > 0;\n\t});\n}\n\n\
    function candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppjum0_hv.php:18\n\
    Stack trace:\n#0 /tmp/tmppjum0_hv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmppjum0_hv.php\
    \ on line 18\n"
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  // your code here\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpahk4qjgl.php:16\n\
    Stack trace:\n#0 /tmp/tmpahk4qjgl.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpahk4qjgl.php\
    \ on line 16\n"
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $res = array();\n    foreach ($l as $x) {\n        if ($x > 0) {\n  \
    \          $res[] = $x;\n        }\n    }\n    return $res;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  foreach ($l as $num) {\n    if ($num > 0) {\n      $r[] = $num;\n    }\n\
    \  }\n  return $r;\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $r in /tmp/tmpcbrwb1ny.php on line 13\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpcbrwb1ny.php:23\nStack\
    \ trace:\n#0 /tmp/tmpcbrwb1ny.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpcbrwb1ny.php\
    \ on line 23\n"
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t$pos = [];\n\tforeach ($l as $value) {\n\t\tif ($value > 0) {\n\t\t\t$pos[]\
    \ = $value;\n\t\t}\n\t}\n\treturn $pos;\n}\n\necho \"\\n\\n\" . implode(\",\"\
    , get_positive([-1, 2, -4, 5, 6])) . \"\\n\\n\";\necho \"\\n\\n\" . implode(\"\
    ,\", get_positive([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])) . \"\\n\\n\";\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '


    2,5,6




    5,3,2,3,9,123,1


    '
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  return array_filter($l, function($n) {\n    return $n > 0;\n  });\n}\n\n\
    function candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnoarvjy_.php:18\n\
    Stack trace:\n#0 /tmp/tmpnoarvjy_.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpnoarvjy_.php\
    \ on line 18\n"
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t$r = array();\n\tforeach ($l as $v) {\n\t\tif ($v > 0) {\n\t\t\t$r[] =\
    \ $v;\n\t\t}\n\t}\n\treturn $r;\n}\n\nfunction candidate(...$args) {\n    return\
    \ get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $e = [];\n    for ($i = 0; $i < count($l); $i++) {\n        if ($l[$i]\
    \ > 0) {\n            array_push($e, $l[$i]);\n        }\n    }\n    return $e;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $p = array();\n    foreach ($l as $x) {\n        if ($x > 0) {\n    \
    \        $p[] = $x;\n        }\n    }\n    return $p;\n}\n$l = array(-1, 2, -4,\
    \ 5, 6);\nprint_r(get_positive($l));\n$l = array(5, 3, -5, 2, -3, 3, 9, 0, 123,\
    \ 1, -10);\nprint_r(get_positive($l));\n\nfunction candidate(...$args) {\n   \
    \ return get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 2\n    [1] => 5\n    [2] => 6\n)\nArray\n(\n    [0]\
    \ => 5\n    [1] => 3\n    [2] => 2\n    [3] => 3\n    [4] => 9\n    [5] => 123\n\
    \    [6] => 1\n)\n"
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $res = array();\n  foreach ($l as $val) {\n    if ($val > 0) {\n      $res[]\
    \ = $val;\n    }\n  }\n  return $res;\n}\n\nfunction candidate(...$args) {\n \
    \   return get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t$r = array();\n\tforeach ($l as $n) {\n\t\tif ($n > 0) {\n\t\t\t$r[] =\
    \ $n;\n\t\t}\n\t}\n\treturn $r;\n}\n\nfunction candidate(...$args) {\n    return\
    \ get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  // Your code here...\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwocg7_38.php:16\n\
    Stack trace:\n#0 /tmp/tmpwocg7_38.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpwocg7_38.php\
    \ on line 16\n"
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($x) { return $x > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9cp9pbkr.php:16\n\
    Stack trace:\n#0 /tmp/tmp9cp9pbkr.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp9cp9pbkr.php\
    \ on line 16\n"
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t$res = array();\n\tforeach ($l as $e) {\n\t\tif ($e > 0)\n\t\t\t$res[]\
    \ = $e;\n\t}\n\treturn $res;\n}\n\nfunction candidate(...$args) {\n    return\
    \ get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $r = array();\n  foreach ($l as $key => $val) {\n    if ($val > 0)\n  \
    \    $r[] = $val;\n  }\n  return $r;\n}\n\nfunction candidate(...$args) {\n  \
    \  return get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  return array_filter($l, function($x) { return $x > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl31em6h4.php:16\n\
    Stack trace:\n#0 /tmp/tmpl31em6h4.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpl31em6h4.php\
    \ on line 16\n"
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\treturn array_filter($l, function($a) { return $a > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi6268xiy.php:16\n\
    Stack trace:\n#0 /tmp/tmpi6268xiy.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpi6268xiy.php\
    \ on line 16\n"
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $ret = array();\n    foreach ($l as $e) {\n        if ($e > 0) {\n  \
    \          $ret[] = $e;\n        }\n    }\n    return $ret;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t$ret = array();\n\tforeach ($l as $v) {\n\t\tif ($v > 0) {\n\t\t\t$ret[]\
    \ = $v;\n\t\t}\n\t}\n\treturn $ret;\n}\n\nfunction candidate(...$args) {\n   \
    \ return get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823359
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($i) {\n        return $i > 0;\n    });\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7a2wc_2x.php:18\n\
    Stack trace:\n#0 /tmp/tmp7a2wc_2x.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp7a2wc_2x.php\
    \ on line 18\n"
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\treturn array_filter($l, function($e) {\n\t\treturn $e > 0;\n\t});\n}\n\n\
    function candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7zs2prls.php:18\n\
    Stack trace:\n#0 /tmp/tmp7zs2prls.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp7zs2prls.php\
    \ on line 18\n"
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t// TODO: implement this\n\treturn array_values(array_filter($l, function($v)\
    \ { return $v >= 0; }));\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwwwcr19f.php:18\n\
    Stack trace:\n#0 /tmp/tmpwwwcr19f.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpwwwcr19f.php\
    \ on line 18\n"
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t$new_array = array();\n\tforeach ($l as $key => $value) {\n\t\tif ($value\
    \ >= 0) {\n\t\t\t$new_array[] = $value;\n\t\t}\n\t}\n\treturn $new_array;\n}\n\
    print_r(get_positive(array(-1, 2, -4, 5, 6)));\nprint_r(get_positive(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10)));\nfunction candidate(...$args) {\n   \
    \ return get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 2\n    [1] => 5\n    [2] => 6\n)\nArray\n(\n    [0]\
    \ => 5\n    [1] => 3\n    [2] => 2\n    [3] => 3\n    [4] => 9\n    [5] => 0\n\
    \    [6] => 123\n    [7] => 1\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpg1s76bla.php:24\nStack trace:\n#0 /tmp/tmpg1s76bla.php(29): test()\n\
    #1 {main}\n  thrown in /tmp/tmpg1s76bla.php on line 24\n"
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  return array_filter($l, function($n) { return $n > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt6s4l8ec.php:16\n\
    Stack trace:\n#0 /tmp/tmpt6s4l8ec.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpt6s4l8ec.php\
    \ on line 16\n"
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\tforeach ($l as $i => $element) {\n\t\tif ($element < 0) {\n\t\t\tunset($l[$i]);\n\
    \t\t}\n\t}\n\treturn $l;\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmfyv9snt.php:21\n\
    Stack trace:\n#0 /tmp/tmpmfyv9snt.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpmfyv9snt.php\
    \ on line 21\n"
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  return array_filter($l, function($i) { return $i > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2cphvbmp.php:16\n\
    Stack trace:\n#0 /tmp/tmp2cphvbmp.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp2cphvbmp.php\
    \ on line 16\n"
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t$result = array();\n\tfor ($i = 0; $i < count($l); $i++) {\n\t\tif ($l[$i]\
    \ > 0) {\n\t\t\tarray_push($result, $l[$i]);\n\t\t}\n\t}\n\treturn $result;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $r = array();\n  foreach ($l as $e) {\n    if ($e > 0) {\n      $r[] =\
    \ $e;\n    }\n  }\n  return $r;\n}\n\nfunction candidate(...$args) {\n    return\
    \ get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $result = array();\n  for ($i = 0; $i < count($l); $i++) {\n    if ($l[$i]\
    \ > 0) {\n      array_push($result, $l[$i]);\n    }\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $result = array();\n  for ($i = 0; $i < count($l); $i++) {\n    if ($l[$i]\
    \ > 0) {\n      array_push($result, $l[$i]);\n    }\n  }\n  return $result;\n\
    }\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $r = array();\n    foreach ($l as $i) {\n        if ($i > 0) {\n    \
    \        $r[] = $i;\n        }\n    }\n    return $r;\n}\nprint_r(get_positive(array(-1,\
    \ 2, -4, 5, 6)));\nprint_r(get_positive(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10)));\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 2\n    [1] => 5\n    [2] => 6\n)\nArray\n(\n    [0]\
    \ => 5\n    [1] => 3\n    [2] => 2\n    [3] => 3\n    [4] => 9\n    [5] => 123\n\
    \    [6] => 1\n)\n"
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t$n=array();\n\tfor($i=0;$i<count($l);$i++) {\n\t\tif($l[$i]>0) {\n\t\t\t\
    $n[]=$l[$i];\n\t\t}\n\t}\n\treturn $n;\n}\n\nfunction candidate(...$args) {\n\
    \    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t$n = array();\n\tforeach ($l as $k => $v) {\n\t\tif ($v > 0) {\n\t\t\t\
    $n[] = $v;\n\t\t}\n\t}\n\treturn $n;\n}\n\nfunction candidate(...$args) {\n  \
    \  return get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxahzz1j4.php:15\n\
    Stack trace:\n#0 /tmp/tmpxahzz1j4.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpxahzz1j4.php\
    \ on line 15\n"
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\treturn array_filter($l, function($x) {\n\t\treturn $x > 0;\n\t});\n}\n\n\
    function candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8z94a6hi.php:18\n\
    Stack trace:\n#0 /tmp/tmp8z94a6hi.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp8z94a6hi.php\
    \ on line 18\n"
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $ret = array();\n  foreach ($l as $v) {\n    if ($v > 0) {\n      $ret[]\
    \ = $v;\n    }\n  }\n  return $ret;\n}\n\nfunction candidate(...$args) {\n   \
    \ return get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $output = array();\n  for ($i = 0; $i < count($l); $i++) {\n    if ($l[$i]\
    \ > 0) {\n      array_push($output, $l[$i]);\n    }\n  }\n  return $output;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $r = array();\n    foreach ($l as $v) {\n        if ($v > 0) {\n    \
    \        $r[] = $v;\n        }\n    }\n    return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\treturn array_filter($l, function($num) { return $num > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwrxosx0b.php:16\n\
    Stack trace:\n#0 /tmp/tmpwrxosx0b.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpwrxosx0b.php\
    \ on line 16\n"
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t$pos = array();\n\tforeach ($l as $i) {\n\t\tif ($i > 0) {\n\t\t\t$pos[]\
    \ = $i;\n\t\t}\n\t}\n\treturn $pos;\n}\n\nfunction candidate(...$args) {\n   \
    \ return get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, \"filter_positive\");\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"filter_positive\" not found or\
    \ invalid function name in /tmp/tmpoatg3hy5.php:8\nStack trace:\n#0 /tmp/tmpoatg3hy5.php(8):\
    \ array_filter(Array, 'filter_positive')\n#1 /tmp/tmpoatg3hy5.php(12): get_positive(Array)\n\
    #2 /tmp/tmpoatg3hy5.php(16): candidate(Array)\n#3 /tmp/tmpoatg3hy5.php(22): test()\n\
    #4 {main}\n  thrown in /tmp/tmpoatg3hy5.php on line 8\n"
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $r = array();\n    foreach ($l as $v) {\n        if ($v > 0) {\n    \
    \        $r[] = $v;\n        }\n    }\n    return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $res = array();\n    foreach ($l as $item) {\n        if ($item > 0)\
    \ {\n            $res[] = $item;\n        }\n    }\n    return $res;\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  // TODO: Handle wrong input.\n  $result = array();\n  foreach ($l as $val)\
    \ {\n    if ($val > 0) {\n      $result[] = $val;\n    }\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  return array_filter($l, function($a) {\n    return $a > 0;\n  });\n}\n\n\
    function candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe6rwwm82.php:18\n\
    Stack trace:\n#0 /tmp/tmpe6rwwm82.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpe6rwwm82.php\
    \ on line 18\n"
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\tforeach ($l as $i) {\n\t\tif ($i > 0) {\n\t\t\t$result[] = $i;\n\t\t}\n\
    \t}\n\treturn $result;\n}\n$num = array(-1, 2, -4, 5, 6);\n$pos = get_positive($num);\n\
    var_dump($pos);\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "array(3) {\n  [0]=>\n  int(2)\n  [1]=>\n  int(5)\n  [2]=>\n  int(6)\n}\n\
    \nWarning: Undefined variable $result in /tmp/tmp6np1fayt.php on line 13\n\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmp6np1fayt.php:26\nStack trace:\n\
    #0 /tmp/tmp6np1fayt.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp6np1fayt.php\
    \ on line 26\n"
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $lp = array();\n  foreach ($l as $num) {\n    if ($num > 0) {\n      array_push($lp,\
    \ $num);\n    }\n  }\n  return $lp;\n}\n\nfunction candidate(...$args) {\n   \
    \ return get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $ret = array();\n    foreach ($l as $e) {\n        if ($e > 0)\n    \
    \        $ret[] = $e;\n    }\n    return $ret;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $r = array();\n  foreach ($l as $e) {\n    if ($e > 0)\n      $r[] = $e;\n\
    \  }\n  return $r;\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $res = array();\n    foreach ($l as $k => $v) {\n        if ($v > 0)\
    \ {\n            $res[] = $v;\n        }\n    }\n    return $res;\n}\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $result = array();\n    foreach ($l as $v) {\n        if ($v > 0) {\n\
    \            $result[] = $v;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxahzz1j4.php:15\n\
    Stack trace:\n#0 /tmp/tmpxahzz1j4.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpxahzz1j4.php\
    \ on line 15\n"
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t$result = array();\n\tforeach ($l as $value) {\n\t\tif ($value > 0) {\n\
    \t\t\tarray_push($result, $value);\n\t\t}\n\t}\n\treturn $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($x) { return $x > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9cp9pbkr.php:16\n\
    Stack trace:\n#0 /tmp/tmp9cp9pbkr.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp9cp9pbkr.php\
    \ on line 16\n"
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, \"is_positive\");\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_positive\" not found or invalid\
    \ function name in /tmp/tmpc0e3cqmz.php:8\nStack trace:\n#0 /tmp/tmpc0e3cqmz.php(8):\
    \ array_filter(Array, 'is_positive')\n#1 /tmp/tmpc0e3cqmz.php(12): get_positive(Array)\n\
    #2 /tmp/tmpc0e3cqmz.php(16): candidate(Array)\n#3 /tmp/tmpc0e3cqmz.php(22): test()\n\
    #4 {main}\n  thrown in /tmp/tmpc0e3cqmz.php on line 8\n"
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, \"is_positive\");\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_positive\" not found or invalid\
    \ function name in /tmp/tmpc0e3cqmz.php:8\nStack trace:\n#0 /tmp/tmpc0e3cqmz.php(8):\
    \ array_filter(Array, 'is_positive')\n#1 /tmp/tmpc0e3cqmz.php(12): get_positive(Array)\n\
    #2 /tmp/tmpc0e3cqmz.php(16): candidate(Array)\n#3 /tmp/tmpc0e3cqmz.php(22): test()\n\
    #4 {main}\n  thrown in /tmp/tmpc0e3cqmz.php on line 8\n"
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6knr50lo.php:15\n\
    Stack trace:\n#0 /tmp/tmp6knr50lo.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp6knr50lo.php\
    \ on line 15\n"
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($x) { return $x > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9cp9pbkr.php:16\n\
    Stack trace:\n#0 /tmp/tmp9cp9pbkr.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp9cp9pbkr.php\
    \ on line 16\n"
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($n) {\n        return $n > 0;\n    });\n\
    }\n\n$test = [\n    'test 1' => array(-1, 2, -4, 5, 6),\n    'test 2' => array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10),\n];\n\necho '<pre>';\nforeach ($test as\
    \ $label => $input) {\n    $t = get_positive($input);\n    echo $label . ' : '\
    \ . print_r($t, true) . '<br>';\n}\necho '</pre>';\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>test 1 : Array\n(\n    [1] => 2\n    [3] => 5\n    [4] => 6\n)\n<br>test\
    \ 2 : Array\n(\n    [0] => 5\n    [1] => 3\n    [3] => 2\n    [5] => 3\n    [6]\
    \ => 9\n    [8] => 123\n    [9] => 1\n)\n<br></pre>\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpwtmzk9_u.php:29\nStack trace:\n#0 /tmp/tmpwtmzk9_u.php(35):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpwtmzk9_u.php on line 29\n"
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    // Your code goes here...\n}\n\nfunction candidate(...$args) {\n    return\
    \ get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoxrzgq03.php:16\n\
    Stack trace:\n#0 /tmp/tmpoxrzgq03.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpoxrzgq03.php\
    \ on line 16\n"
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  return array_filter($l, function($x) {\n    return $x > 0;\n  });\n}\n\n\
    var_dump(get_positive(array(-1, 2, -4, 5, 6)));\nvar_dump(get_positive(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10)));\nfunction candidate(...$args) {\n   \
    \ return get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "array(3) {\n  [1]=>\n  int(2)\n  [3]=>\n  int(5)\n  [4]=>\n  int(6)\n}\n\
    array(7) {\n  [0]=>\n  int(5)\n  [1]=>\n  int(3)\n  [3]=>\n  int(2)\n  [5]=>\n\
    \  int(3)\n  [6]=>\n  int(9)\n  [8]=>\n  int(123)\n  [9]=>\n  int(1)\n}\n\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmpp597uef9.php:20\nStack trace:\n\
    #0 /tmp/tmpp597uef9.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpp597uef9.php\
    \ on line 20\n"
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  //$res = array();\n  //$res = array_filter($l, function($x) {return $x\
    \ > 0;});\n  //$res = array_filter($l, \"is_positive\");\n  //return $res;\n \
    \ return array_filter($l, \"is_positive\");\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_positive\" not found or invalid\
    \ function name in /tmp/tmpzu_9sxef.php:12\nStack trace:\n#0 /tmp/tmpzu_9sxef.php(12):\
    \ array_filter(Array, 'is_positive')\n#1 /tmp/tmpzu_9sxef.php(16): get_positive(Array)\n\
    #2 /tmp/tmpzu_9sxef.php(20): candidate(Array)\n#3 /tmp/tmpzu_9sxef.php(26): test()\n\
    #4 {main}\n  thrown in /tmp/tmpzu_9sxef.php on line 12\n"
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t$result = array();\n\tforeach ($l as $item) {\n\t\tif ($item > 0) {\n\t\
    \t\t$result[] = $item;\n\t\t}\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $a = array();\n    foreach ($l as $n) {\n        if ($n > 0) {\n    \
    \        $a[] = $n;\n        }\n    }\n    return $a;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxahzz1j4.php:15\n\
    Stack trace:\n#0 /tmp/tmpxahzz1j4.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpxahzz1j4.php\
    \ on line 15\n"
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $r = array();\n    foreach ($l as $i) {\n        if ($i > 0) {\n    \
    \        $r[] = $i;\n        }\n    }\n    return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($x) {\n        return $x > 0;\n    });\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6rjzio0s.php:18\n\
    Stack trace:\n#0 /tmp/tmp6rjzio0s.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp6rjzio0s.php\
    \ on line 18\n"
  timestamp: 1659823359
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $result = array();\n    for ($i = 0; $i < count($l); $i++) {\n      \
    \  if ($l[$i] > 0) {\n            array_push($result, $l[$i]);\n        }\n  \
    \  }\n    return $result;\n}\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  return array_filter($l, function($x) { return $x > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl31em6h4.php:16\n\
    Stack trace:\n#0 /tmp/tmpl31em6h4.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpl31em6h4.php\
    \ on line 16\n"
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t// YOUR CODE HERE\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppbqf1bv6.php:16\n\
    Stack trace:\n#0 /tmp/tmppbqf1bv6.php(22): test()\n#1 {main}\n  thrown in /tmp/tmppbqf1bv6.php\
    \ on line 16\n"
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    // Fill in your code here\n    return $l;\n}\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2_jj7oy5.php:16\n\
    Stack trace:\n#0 /tmp/tmp2_jj7oy5.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp2_jj7oy5.php\
    \ on line 16\n"
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($i) { return $i > 0; });\n}\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj_fk32v4.php:15\n\
    Stack trace:\n#0 /tmp/tmpj_fk32v4.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpj_fk32v4.php\
    \ on line 15\n"
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($i) { return $i > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphqqys6s_.php:16\n\
    Stack trace:\n#0 /tmp/tmphqqys6s_.php(22): test()\n#1 {main}\n  thrown in /tmp/tmphqqys6s_.php\
    \ on line 16\n"
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($e) {\n        return $e > 0;\n    });\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp46xse_ut.php:18\n\
    Stack trace:\n#0 /tmp/tmp46xse_ut.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp46xse_ut.php\
    \ on line 18\n"
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    if (count($l) == 0) {\n        return [];\n    }\n    else {\n      \
    \  $res = [];\n        foreach ($l as $val) {\n            if ($val > 0) {\n \
    \               $res[] = $val;\n            }\n        }\n        return $res;\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t$res = array();\n\tfor ($i = 0; $i < count($l); $i++) {\n\t\tif ($l[$i]\
    \ > 0) {\n\t\t\tarray_push($res, $l[$i]);\n\t\t}\n\t}\n\treturn $res;\n}\n\necho\
    \ json_encode(get_positive(array(-1, 2, -4, 5, 6)));\necho '<br>';\necho json_encode(get_positive(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10)));\necho '<br>';\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '[2,5,6]<br>[5,3,2,3,9,123,1]<br>'
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t$ret = array();\n\tforeach ($l as $item) {\n\t\tif ($item > 0) {\n\t\t\t\
    $ret[] = $item;\n\t\t}\n\t}\n\treturn $ret;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  return array_filter($l, function($a) {\n    return $a > 0;\n  });\n}\n\
    print_r(get_positive(array(-1, 2, -4, 5, 6)));\nprint_r(get_positive(array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10)));\n\nfunction candidate(...$args) {\n \
    \   return get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [1] => 2\n    [3] => 5\n    [4] => 6\n)\nArray\n(\n    [0]\
    \ => 5\n    [1] => 3\n    [3] => 2\n    [5] => 3\n    [6] => 9\n    [8] => 123\n\
    \    [9] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpktyiswwq.php:20\n\
    Stack trace:\n#0 /tmp/tmpktyiswwq.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpktyiswwq.php\
    \ on line 20\n"
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t$a = array();\n\tfor ($i = 0; $i < count($l); $i++) {\n\t\tif ($l[$i] >\
    \ 0) {\n\t\t\tarray_push($a, $l[$i]);\n\t\t}\n\t}\n\treturn $a;\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t$r = array();\n\t$i = 0;\n\twhile ($i < count($l)) {\n\t\tif ($l[$i] >\
    \ 0) {\n\t\t\t$r[] = $l[$i];\n\t\t}\n\t\t$i = $i + 1;\n\t}\n\treturn $r;\n}\n\
    echo \"<pre>\";\nprint_r(get_positive(array(-1, 2, -4, 5, 6)));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(get_positive(array(5, 3, -5, 2, -3, 3, 9, 0, 123,\
    \ 1, -10)));\necho \"</pre>\";\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 2\n    [1] => 5\n    [2] => 6\n)\n</pre><pre>Array\n\
    (\n    [0] => 5\n    [1] => 3\n    [2] => 2\n    [3] => 3\n    [4] => 9\n    [5]\
    \ => 123\n    [6] => 1\n)\n</pre>"
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $out = array();\n    foreach ($l as $value) {\n        if ($value > 0)\
    \ {\n            $out[] = $value;\n        }\n    }\n    return $out;\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $ret = array();\n  foreach ($l as $v) {\n    if ($v > 0) {\n      $ret[]\
    \ = $v;\n    }\n  }\n  return $ret;\n}\nprint_r(get_positive(array(-1, 2, -4,\
    \ 5, 6)));\necho \"\\n\";\nprint_r(get_positive(array(5, 3, -5, 2, -3, 3, 9, 0,\
    \ 123, 1, -10)));\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return\
    \ get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 2\n    [1] => 5\n    [2] => 6\n)\n\nArray\n(\n   \
    \ [0] => 5\n    [1] => 3\n    [2] => 2\n    [3] => 3\n    [4] => 9\n    [5] =>\
    \ 123\n    [6] => 1\n)\n\n"
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t$ret = array();\n\tforeach ($l as $number) {\n\t\tif ($number > 0) {\n\t\
    \t\t$ret[] = $number;\n\t\t}\n\t}\n\treturn $ret;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\treturn array_filter($l, function($n) {\n\t\treturn $n > 0;\n\t});\n}\n\n\
    function candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyfl3ma4x.php:18\n\
    Stack trace:\n#0 /tmp/tmpyfl3ma4x.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpyfl3ma4x.php\
    \ on line 18\n"
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t$new_list = array();\n\tforeach ($l as $item) {\n\t\tif ($item > 0) {\n\
    \t\t\tarray_push($new_list, $item);\n\t\t}\n\t}\n\treturn $new_list;\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $res = array();\n  foreach ($l as $v) {\n    if ($v > 0) {\n      $res[]\
    \ = $v;\n    }\n  }\n  return $res;\n}\n\nfunction candidate(...$args) {\n   \
    \ return get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823359
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t$out = array();\n\tforeach ($l as $item) {\n\t\tif ($item > 0) {\n\t\t\t\
    $out[] = $item;\n\t\t}\n\t}\n\treturn $out;\n}\nfunction candidate(...$args) {\n\
    \    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $result = array();\n  foreach ($l as $i) {\n    if ($i > 0) {\n      $result[]\
    \ = $i;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t$res = array();\n\tforeach ($l as $v) {\n\t\tif ($v > 0) {\n\t\t\t$res[]\
    \ = $v;\n\t\t}\n\t}\n\treturn $res;\n}\nfunction candidate(...$args) {\n    return\
    \ get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t$result = array();\n\tforeach ($l as $i) {\n\t\tif ($i > 0) {\n\t\t\t$result[]\
    \ = $i;\n\t\t}\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $result = array();\n  foreach ($l as $val) {\n    if ($val > 0) {\n   \
    \   $result[] = $val;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\treturn array_filter($l, function($x) {\n\t\treturn $x > 0;\n\t});\n}\n\n\
    function candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8z94a6hi.php:18\n\
    Stack trace:\n#0 /tmp/tmp8z94a6hi.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp8z94a6hi.php\
    \ on line 18\n"
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  return array_filter($l, function($n) {\n    return $n > 0;\n  });\n}\n\n\
    function candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnoarvjy_.php:18\n\
    Stack trace:\n#0 /tmp/tmpnoarvjy_.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpnoarvjy_.php\
    \ on line 18\n"
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t$a = array();\n\tforeach ($l as $x) {\n\t\tif ($x > 0) {\n\t\t\t$a[] =\
    \ $x;\n\t\t}\n\t}\n\treturn $a;\n}\n\nfunction candidate(...$args) {\n    return\
    \ get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t$result = array();\n\tforeach ($l as $v) {\n\t\tif ($v > 0) {\n\t\t\t$result[]\
    \ = $v;\n\t\t}\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t$res = array();\n\tforeach ($l as $val) {\n\t\tif ($val > 0) {\n\t\t\t\
    $res[] = $val;\n\t\t}\n\t}\n\treturn $res;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  return array_filter($l, function($x) {\n    return $x > 0;\n  });\n}\n\n\
    function candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphfttb784.php:18\n\
    Stack trace:\n#0 /tmp/tmphfttb784.php(24): test()\n#1 {main}\n  thrown in /tmp/tmphfttb784.php\
    \ on line 18\n"
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t$positive_array = array();\n\tforeach ($l as $value) {\n\t\tif ($value\
    \ > 0) {\n\t\t\tarray_push($positive_array, $value);\n\t\t}\n\t}\n\treturn $positive_array;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $result = array();\n    foreach ($l as $value) {\n        if ($value\
    \ > 0) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t$result = array();\n\tforeach ($l as $value) {\n\t\tif ($value > 0)\n\t\
    \t\t$result[] = $value;\n\t}\n\treturn $result;\n}\n\necho implode(', ', get_positive(array(-1,\
    \ 2, -4, 5, 6)));\necho \"\\n\";\necho implode(', ', get_positive(array(5, 3,\
    \ -5, 2, -3, 3, 9, 0, 123, 1, -10)));\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '2, 5, 6

    5, 3, 2, 3, 9, 123, 1

    '
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  return array_filter($l, function($a) { return $a >= 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz2f2a8ay.php:16\n\
    Stack trace:\n#0 /tmp/tmpz2f2a8ay.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpz2f2a8ay.php\
    \ on line 16\n"
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    // Your code here.\n    $positive = [];\n    foreach ($l as $value) {\n\
    \        if ($value > 0) {\n            array_push($positive, $value);\n     \
    \   }\n    }\n    return $positive;\n}\n\nfunction candidate(...$args) {\n   \
    \ return get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $positive = array();\n  foreach ($l as $x) {\n    if ($x > 0) {\n     \
    \ $positive[] = $x;\n    }\n  }\n  return $positive;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $result = array();\n    foreach ($l as $num) {\n        if ($num > 0)\
    \ {\n            $result[] = $num;\n        }\n    }\n    return $result;\n}\n\
    $l = array(-1, 2, -4, 5, 6);\n$res = get_positive($l);\nvar_dump($res);\necho\
    \ \"<br>\";\n$l = array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10);\n$res = get_positive($l);\n\
    var_dump($res);\necho \"<br>\";\n\nfunction candidate(...$args) {\n    return\
    \ get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "array(3) {\n  [0]=>\n  int(2)\n  [1]=>\n  int(5)\n  [2]=>\n  int(6)\n}\n\
    <br>array(7) {\n  [0]=>\n  int(5)\n  [1]=>\n  int(3)\n  [2]=>\n  int(2)\n  [3]=>\n\
    \  int(3)\n  [4]=>\n  int(9)\n  [5]=>\n  int(123)\n  [6]=>\n  int(1)\n}\n<br>"
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $result = array();\n  foreach ($l as $v) {\n    if ($v > 0) {\n      $result[]\
    \ = $v;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t// Write your code here ...\n}\n\nfunction candidate(...$args) {\n    return\
    \ get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa951v8el.php:16\n\
    Stack trace:\n#0 /tmp/tmpa951v8el.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpa951v8el.php\
    \ on line 16\n"
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    // you code here\n    $result = array();\n    foreach ($l as $item) {\n\
    \        if ($item > 0) {\n            $result[] = $item;\n        }\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($v) {\n        return $v > 0;\n    });\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1b5jfutb.php:18\n\
    Stack trace:\n#0 /tmp/tmp1b5jfutb.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp1b5jfutb.php\
    \ on line 18\n"
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $i = 0;\n    $l2 = array();\n    while ($i < count($l)) {\n        if\
    \ ($l[$i] > 0) {\n            $l2[] = $l[$i];\n        }\n        $i = $i + 1;\n\
    \    }\n    return $l2;\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t$result = array();\n\tforeach ($l as $val) {\n\t\tif ($val > 0) {\n\t\t\
    \t$result[] = $val;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$arr = array(-1, 2, -4,\
    \ 5, 6);\necho implode(', ', get_positive($arr)) . '<br>';\n\n$arr = array(5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10);\necho implode(', ', get_positive($arr))\
    \ . '<br>';\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 2, 5, 6<br>5, 3, 2, 3, 9, 123, 1<br>
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $result = array();\n    foreach ($l as $element) {\n        if ($element\
    \ > 0) {\n            $result[] = $element;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t$new_l = array();\n\tforeach ($l as $e) {\n\t\tif ($e > 0) {\n\t\t\t$new_l[]\
    \ = $e;\n\t\t}\n\t}\n\treturn $new_l;\n}\n\nfunction candidate(...$args) {\n \
    \   return get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $out = array();\n  foreach ($l as $v) {\n    if ($v > 0) {\n      $out[]\
    \ = $v;\n    }\n  }\n  return $out;\n}\n\nfunction candidate(...$args) {\n   \
    \ return get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t$result = array();\n\tforeach ($l as $e) {\n\t\tif ($e > 0) {\n\t\t\t$result[]\
    \ = $e;\n\t\t}\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($n) { return $n > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6x4isjoy.php:16\n\
    Stack trace:\n#0 /tmp/tmp6x4isjoy.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp6x4isjoy.php\
    \ on line 16\n"
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t$g = array();\n\tforeach ($l as $v) {\n\t\tif ($v >= 0) {\n\t\t\t$g[] =\
    \ $v;\n\t\t}\n\t}\n\treturn $g;\n}\n\nfunction candidate(...$args) {\n    return\
    \ get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnt8eqg3i.php:23\n\
    Stack trace:\n#0 /tmp/tmpnt8eqg3i.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpnt8eqg3i.php\
    \ on line 23\n"
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($x) {\n        return $x > 0;\n    });\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6rjzio0s.php:18\n\
    Stack trace:\n#0 /tmp/tmp6rjzio0s.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp6rjzio0s.php\
    \ on line 18\n"
  timestamp: 1659823359
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $result = array();\n  foreach ($l as $number) {\n    if ($number > 0) {\n\
    \      $result[] = $number;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  return array_filter($l, function($n) {\n    return $n > 0;\n  });\n}\n\n\
    function candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnoarvjy_.php:18\n\
    Stack trace:\n#0 /tmp/tmpnoarvjy_.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpnoarvjy_.php\
    \ on line 18\n"
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t$result = array();\n\tforeach ($l as $val) {\n\t\tif ($val > 0) {\n\t\t\
    \t$result[] = $val;\n\t\t}\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  return array_filter($l, function($n) {\n    return $n > 0;\n  });\n}\n\n\
    function candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnoarvjy_.php:18\n\
    Stack trace:\n#0 /tmp/tmpnoarvjy_.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpnoarvjy_.php\
    \ on line 18\n"
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\treturn array_filter($l, function($x) {\n\t\treturn $x > 0;\n\t});\n}\n\n\
    function candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8z94a6hi.php:18\n\
    Stack trace:\n#0 /tmp/tmp8z94a6hi.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp8z94a6hi.php\
    \ on line 18\n"
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  return array_filter($l, function($n) {\n    return $n > 0;\n  });\n}\n\n\
    function candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnoarvjy_.php:18\n\
    Stack trace:\n#0 /tmp/tmpnoarvjy_.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpnoarvjy_.php\
    \ on line 18\n"
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t$a = array();\n\tforeach ($l as $e) {\n\t\tif ($e > 0) {\n\t\t\t$a[] =\
    \ $e;\n\t\t}\n\t}\n\treturn $a;\n}\n\nfunction candidate(...$args) {\n    return\
    \ get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    // Fill me in!\n    return $l;\n}\n\nfunction candidate(...$args) {\n\
    \    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp673si8r8.php:17\n\
    Stack trace:\n#0 /tmp/tmp673si8r8.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp673si8r8.php\
    \ on line 17\n"
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t$arr = array();\n\tforeach ($l as $num) {\n\t\tif ($num > 0) {\n\t\t\t\
    array_push($arr, $num);\n\t\t}\n\t}\n\treturn $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $list = [];\n  foreach ($l as $el) {\n    if ($el > 0) {\n      $list[]\
    \ = $el;\n    }\n  }\n  return $list;\n}\n\nfunction candidate(...$args) {\n \
    \   return get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($value) {\n        return $value > 0;\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx89l47qo.php:18\n\
    Stack trace:\n#0 /tmp/tmpx89l47qo.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpx89l47qo.php\
    \ on line 18\n"
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positiveNums = array();\n    $index = 0;\n    foreach ($l as $num) {\n\
    \        if ($num > 0) {\n            $positiveNums[$index] = $num;\n        \
    \    $index++;\n        }\n    }\n    return $positiveNums;\n}\n$l = array(-1,\
    \ 2, -4, 5, 6);\n$l2 = array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10);\nprint_r(get_positive($l));\n\
    print_r(get_positive($l2));\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 2\n    [1] => 5\n    [2] => 6\n)\nArray\n(\n    [0]\
    \ => 5\n    [1] => 3\n    [2] => 2\n    [3] => 3\n    [4] => 9\n    [5] => 123\n\
    \    [6] => 1\n)\n"
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $positive = array();\n    foreach ($l as $value) {\n        if ($value\
    \ > 0) {\n            array_push($positive, $value);\n        }\n    }\n    return\
    \ $positive;\n}\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($x) {\n        return $x > 0;\n    });\n\
    }\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg41k_5ez.php:17\n\
    Stack trace:\n#0 /tmp/tmpg41k_5ez.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpg41k_5ez.php\
    \ on line 17\n"
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\treturn array_filter($l, function($v) {\n\t\treturn $v > 0;\n\t});\n}\n\n\
    function candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppjum0_hv.php:18\n\
    Stack trace:\n#0 /tmp/tmppjum0_hv.php(24): test()\n#1 {main}\n  thrown in /tmp/tmppjum0_hv.php\
    \ on line 18\n"
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  // TODO\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsfklenfi.php:16\n\
    Stack trace:\n#0 /tmp/tmpsfklenfi.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpsfklenfi.php\
    \ on line 16\n"
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $l = array_filter($l, function($x) { return $x > 0; });\n  return $l;\n\
    }\n\n$l = array(-1, 2, -4, 5, 6);\nprint_r(get_positive($l));\necho \"\\n\";\n\
    \n$l = array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10);\nprint_r(get_positive($l));\n\
    echo \"\\n\";\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [1] => 2\n    [3] => 5\n    [4] => 6\n)\n\nArray\n(\n   \
    \ [0] => 5\n    [1] => 3\n    [3] => 2\n    [5] => 3\n    [6] => 9\n    [8] =>\
    \ 123\n    [9] => 1\n)\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8c19h6il.php:25\n\
    Stack trace:\n#0 /tmp/tmp8c19h6il.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp8c19h6il.php\
    \ on line 25\n"
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($v) { return $v > 0; });\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_n87rj0g.php:16\n\
    Stack trace:\n#0 /tmp/tmp_n87rj0g.php(22): test()\n#1 {main}\n  thrown in /tmp/tmp_n87rj0g.php\
    \ on line 16\n"
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t$result = array();\n\tforeach ($l as $num) {\n\t\tif ($num > 0) {\n\t\t\
    \tarray_push($result, $num);\n\t\t}\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($x) {\n        return $x > 0;\n    });\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6rjzio0s.php:18\n\
    Stack trace:\n#0 /tmp/tmp6rjzio0s.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp6rjzio0s.php\
    \ on line 18\n"
  timestamp: 1659823359
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t$p = array();\n\tforeach ($l as $v) {\n\t\tif ($v > 0)\n\t\t\t$p[] = $v;\n\
    \t}\n\treturn $p;\n}\n\n$a = array(-1, 2, -4, 5, 6);\nprint_r(get_positive($a));\n\
    \n$b = array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10);\nprint_r(get_positive($b));\n\
    function candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 2\n    [1] => 5\n    [2] => 6\n)\nArray\n(\n    [0]\
    \ => 5\n    [1] => 3\n    [2] => 2\n    [3] => 3\n    [4] => 9\n    [5] => 123\n\
    \    [6] => 1\n)\n"
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t$l = array_map(function($n) {\n\t\treturn $n > 0 ? $n : null;\n\t}, $l);\n\
    \treturn array_filter($l);\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5yma59iq.php:19\n\
    Stack trace:\n#0 /tmp/tmp5yma59iq.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp5yma59iq.php\
    \ on line 19\n"
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $l = array_filter($l, function($v) {\n    return $v > 0;\n  });\n  return\
    \ $l;\n}\n$numbers = array(-1, 2, -4, 5, 6);\n$p_numbers = get_positive($numbers);\n\
    function candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2rjzyylq.php:20\n\
    Stack trace:\n#0 /tmp/tmp2rjzyylq.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp2rjzyylq.php\
    \ on line 20\n"
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $ret = array();\n    foreach ($l as $val) {\n        if ($val > 0) {\n\
    \            $ret[] = $val;\n        }\n    }\n    return $ret;\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n}\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvs12i28p.php:14\n\
    Stack trace:\n#0 /tmp/tmpvs12i28p.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpvs12i28p.php\
    \ on line 14\n"
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  return array_filter($l, function($n) {\n    return $n > 0;\n  });\n}\n\n\
    function candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnoarvjy_.php:18\n\
    Stack trace:\n#0 /tmp/tmpnoarvjy_.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpnoarvjy_.php\
    \ on line 18\n"
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $result = array();\n    foreach ($l as $n) {\n        if ($n > 0) {\n\
    \            $result[] = $n;\n        }\n    }\n    return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t$r = array();\n\tforeach ($l as $n) {\n\t\tif ($n > 0)\n\t\t\t$r[] = $n;\n\
    \t}\n\treturn $r;\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t// Your code here...\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxaime236.php:16\n\
    Stack trace:\n#0 /tmp/tmpxaime236.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpxaime236.php\
    \ on line 16\n"
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $res = array();\n    foreach ($l as $item) {\n        if ($item > 0)\
    \ {\n            $res[] = $item;\n        }\n    }\n    return $res;\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t$n_list = array();\n\tforeach ($l as $num) {\n\t\tif ($num > 0) {\n\t\t\
    \tarray_push($n_list, $num);\n\t\t}\n\t}\n\treturn $n_list;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $r = array();\n    foreach ($l as $v) {\n        if ($v > 0) {\n    \
    \        $r[] = $v;\n        }\n    }\n    return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $new = array();\n    foreach ($l as $i) {\n        if ($i > 0)\n    \
    \        $new[] = $i;\n    }\n    return $new;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t$retval = array();\n\tforeach ($l as $value) {\n\t\tif ($value > 0) {\n\
    \t\t\t$retval[] = $value;\n\t\t}\n\t}\n\treturn $retval;\n}\n\n$a = array(-1,\
    \ 2, -4, 5, 6);\n$b = array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10);\nprint_r(get_positive($a));\n\
    print_r(get_positive($b));\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 2\n    [1] => 5\n    [2] => 6\n)\nArray\n(\n    [0]\
    \ => 5\n    [1] => 3\n    [2] => 2\n    [3] => 3\n    [4] => 9\n    [5] => 123\n\
    \    [6] => 1\n)\n"
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $list = array();\n  foreach ($l as $item) {\n    if ($item > 0) {\n   \
    \   array_push($list, $item);\n    }\n  }\n  return $list;\n}\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n}\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvs12i28p.php:14\n\
    Stack trace:\n#0 /tmp/tmpvs12i28p.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpvs12i28p.php\
    \ on line 14\n"
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $numbers = array();\n    foreach ($l as $n) {\n        if ($n > 0) {\n\
    \            $numbers[] = $n;\n        }\n    }\n    return $numbers;\n}\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t$new_array = array();\n\tfor ($i = 0; $i < count($l); $i++) {\n\t\tif ($l[$i]\
    \ > 0) {\n\t\t\tarray_push($new_array, $l[$i]);\n\t\t}\n\t}\n\treturn $new_array;\n\
    }\n\n$l = array(-1, 2, -4, 5, 6);\nprint_r(get_positive($l));\n\necho \"<br><br>\"\
    ;\n\n$l = array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10);\nprint_r(get_positive($l));\n\
    function candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5,\
    \ 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 2\n    [1] => 5\n    [2] => 6\n)\n<br><br>Array\n\
    (\n    [0] => 5\n    [1] => 3\n    [2] => 2\n    [3] => 3\n    [4] => 9\n    [5]\
    \ => 123\n    [6] => 1\n)\n"
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $n = array();\n  foreach ($l as $v) {\n    if ($v > 0) {\n      $n[] =\
    \ $v;\n    }\n  }\n  return $n;\n}\n\nfunction candidate(...$args) {\n    return\
    \ get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $result = array();\n    foreach ($l as $i) {\n        if ($i > 0) {\n\
    \            $result[] = $i;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_positive(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3,\
    \ 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823359
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($item) {\n        return $item > 0;\n\
    \    });\n}\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp23rfiehg.php:17\n\
    Stack trace:\n#0 /tmp/tmp23rfiehg.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp23rfiehg.php\
    \ on line 17\n"
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    return array_filter($l, function($a) {\n        return $a > 0;\n    });\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpayz8ihrj.php:18\n\
    Stack trace:\n#0 /tmp/tmpayz8ihrj.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpayz8ihrj.php\
    \ on line 18\n"
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t$res = array();\n\tforeach ($l as $i) {\n\t\tif ($i > 0) $res[] = $i;\n\
    \t}\n\treturn $res;\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t$out = array();\n\tforeach ($l as $x) {\n\t\tif ($x > 0) {\n\t\t\t$out[]\
    \ = $x;\n\t\t}\n\t}\n\treturn $out;\n}\n\nfunction candidate(...$args) {\n   \
    \ return get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 255
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  return array_filter($l,function($n){return $n>0;});\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpok3gv6rh.php:16\n\
    Stack trace:\n#0 /tmp/tmpok3gv6rh.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpok3gv6rh.php\
    \ on line 16\n"
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t$ret = array();\n\tfor ($i = 0; $i < count($l); $i += 1) {\n\t\tif ($l[$i]\
    \ > 0) {\n\t\t\t$ret[] = $l[$i];\n\t\t}\n\t}\n\treturn $ret;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_positive(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10))\
    \ !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2)) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t$s = [];\n\tforeach ($l as $i) {\n\t\tif ($i > 0) $s[] = $i;\n\t}\n\treturn\
    \ $s;\n}\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n  $d = array();\n  foreach ($l as $k => $v) {\n    if ($v > 0) {\n      $d[]\
    \ = $v;\n    }\n  }\n  return $d;\n}\n\nfunction candidate(...$args) {\n    return\
    \ get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t$res = array();\n\tforeach ($l as $i) {\n\t\tif ($i > 0)\n\t\t\t$res[]\
    \ = $i;\n\t}\n\treturn $res;\n}\n\nfunction candidate(...$args) {\n    return\
    \ get_positive(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(-1,\
    \ -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3,\
    \ 2, 3, 3, 9, 123, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n\t$new_list = array();\n\tfor ($i = 0; $i < count($l); $i++) {\n\t\tif ($l[$i]\
    \ > 0) {\n\t\t\tarray_push($new_list, $l[$i]);\n\t\t}\n\t}\n\treturn $new_list;\n\
    }\n\nfunction candidate(...$args) {\n    return get_positive(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141
- exit_code: 0
  program: "<?php\n// Return only positive numbers in the array.\n// >>> get_positive(array(-1,\
    \ 2, -4, 5, 6))\n// array(2, 5, 6)\n// >>> get_positive(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10))\n// array(5, 3, 2, 3, 9, 123, 1)\nfunction get_positive($l)\
    \ {\n    $new_l = array();\n    foreach ($l as $value) {\n        if ($value >\
    \ 0) {\n            array_push($new_l, $value);\n        }\n    }\n    return\
    \ $new_l;\n}\nfunction candidate(...$args) {\n    return get_positive(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4,\
    \ 5, 6)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1, -2)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978141

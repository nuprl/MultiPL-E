language: php
name: HumanEval_147_get_max_triples
results:
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = range(1, $n);\n    $res = [];\n    for ($i = 0; $i < $n; $i++) {\n       \
    \ for ($j = $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $res[] = [$a[$i], $a[$j], $a[$k]];\n                }\n            }\n\
    \        }\n    }\n    return count($res);\n}\nfunction candidate(...$args) {\n\
    \    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6i3lxawt.php:31\n\
    Stack trace:\n#0 /tmp/tmp6i3lxawt.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp6i3lxawt.php\
    \ on line 31\n"
  timestamp: 1659823842
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result\
    \ = 0;\n    for ($i = 1; $i < $n - 1; $i++) {\n        for ($j = $i + 1; $j <\
    \ $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n             \
    \   if (($i*$i - $i + 1 + $j*$j - $j + 1 + $k*$k - $k + 1) % 3 == 0) {\n     \
    \               $result++;\n                }\n            }\n        }\n    }\n\
    \    return $result;\n}\n\necho get_max_triples(5);\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1659823842
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    //\
    \ your code goes here\n    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n    \
    \    $a[] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for ($i = 0; $i <\
    \ $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n          \
    \  for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j] +\
    \ $a[$k]) % 3 == 0) {\n                    $result++;\n                }\n   \
    \         }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823842
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $result = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $result++;\n                }\n            }\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823842
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n - 1; $i++) {\n        for ($j = $i + 1; $j <\
    \ $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n             \
    \   if ((($i * $i - $i + 1) + ($j * $j - $j + 1) + ($k * $k - $k + 1)) % 3 ==\
    \ 0) {\n                    $count++;\n                }\n            }\n    \
    \    }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823842
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $triples\
    \ = 0;\n    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = ($i *\
    \ $i) - $i + 1;\n    }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i\
    \ + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n    \
    \            if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $triples++;\n\
    \                }\n            }\n        }\n    }\n    return $triples;\n}\n\
    \n$tests = [\n    [1, 0],\n    [5, 1],\n    [10, 3],\n    [15, 6],\n    [20, 10],\n\
    \    [25, 15],\n    [30, 21],\n    [35, 28],\n    [40, 36],\n    [45, 45],\n \
    \   [50, 55],\n    [55, 66],\n    [60, 78],\n    [65, 91],\n    [70, 105],\n \
    \   [75, 120],\n    [80, 136],\n    [85, 153],\n    [90, 171],\n    [95, 190],\n\
    \    [100, 210],\n    [105, 231],\n    [110, 253],\n    [115, 276],\n    [120,\
    \ 300],\n    [125, 325],\n    [130, 351],\n    [135, 378],\n    [140, 406],\n\
    \    [145, 435],\n    [150, 465],\n    [155, 496],\n    [160, 528],\n    [165,\
    \ 561],\n    [170, 595],\n    [175, 630],\n    [180, 666],\n    [185, 703],\n\
    \    [190, 741],\n    [195, 780],\n    [200, 820],\n    [205, 861],\n    [210,\
    \ 903],\n    [215, 946],\n    [220, 990],\n    [225, 1035],\n    [\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpycq3h63h.php on line 78

    '
  timestamp: 1659823842
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i\
    \ + 1;\n    }\n    return get_max_triples_arr($a);\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function get_max_triples_arr()\
    \ in /tmp/tmpc7_gl_ro.php:17\nStack trace:\n#0 /tmp/tmpc7_gl_ro.php(21): get_max_triples(5)\n\
    #1 /tmp/tmpc7_gl_ro.php(25): candidate(5)\n#2 /tmp/tmpc7_gl_ro.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmpc7_gl_ro.php on line 17\n"
  timestamp: 1659823842
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $sum\
    \ = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n;\
    \ $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if\
    \ (($i + 1) * ($i + 1) - ($i + 1) + 1 + ($j + 1) * ($j + 1) - ($j + 1) + 1 + ($k\
    \ + 1) * ($k + 1) - ($k + 1) + 1) % 3 == 0) {\n                    $sum++;\n \
    \               }\n            }\n        }\n    }\n    return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "%" in /tmp/tmp_3e1327d.php on line
    17

    '
  timestamp: 1659823842
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n  $tot\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    for ($j = $i + 1; $j < $n; $j++)\
    \ {\n      for ($k = $j + 1; $k < $n; $k++) {\n        if ((($i * $i - $i + 1)\
    \ + ($j * $j - $j + 1) + ($k * $k - $k + 1)) % 3 == 0) {\n          $tot++;\n\
    \        }\n      }\n    }\n  }\n  return $tot;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1wcv157j.php:32\n\
    Stack trace:\n#0 /tmp/tmp1wcv157j.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp1wcv157j.php\
    \ on line 32\n"
  timestamp: 1659823842
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n  if ($n\
    \ < 3) {\n    return 0;\n  }\n  $result = 0;\n  $a = [];\n  for ($i = 1; $i <=\
    \ $n; $i++) {\n    $a[] = $i * $i - $i + 1;\n  }\n  for ($i = 0; $i < $n - 2;\
    \ $i++) {\n    for ($j = $i + 1; $j < $n - 1; $j++) {\n      for ($k = $j + 1;\
    \ $k < $n; $k++) {\n        if (($a[$i] + $a[$j] + $a[$k]) % 3 === 0) {\n    \
    \      $result++;\n        }\n      }\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823842
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $i\
    \ = 1;\n    $a = [];\n    while ($i <= $n) {\n        $a[] = $i * $i - $i + 1;\n\
    \        $i++;\n    }\n    return check_triples($a);\n}\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function check_triples()\
    \ in /tmp/tmp852wr3na.php:19\nStack trace:\n#0 /tmp/tmp852wr3na.php(22): get_max_triples(5)\n\
    #1 /tmp/tmp852wr3na.php(26): candidate(5)\n#2 /tmp/tmp852wr3na.php(32): test()\n\
    #3 {main}\n  thrown in /tmp/tmp852wr3na.php on line 19\n"
  timestamp: 1659823842
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $total\
    \ = 0;\n    $arr = [];\n    $count = 0;\n    for ($i = 1; $i <= $n; $i++) {\n\
    \        $arr[] = $i * $i - $i + 1;\n    }\n    for ($i = 0; $i < count($arr);\
    \ $i++) {\n        for ($j = $i + 1; $j < count($arr); $j++) {\n            if\
    \ (($arr[$i] + $arr[$j]) % 3 === 0) {\n                $num = $arr[$i] + $arr[$j];\n\
    \                for ($k = $j + 1; $k < count($arr); $k++) {\n               \
    \     if (($num + $arr[$k]) % 3 === 0) {\n                        $total += 1;\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return $total;\n}\necho get_max_triples(5);\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwyf4srql.php:39\n\
    Stack trace:\n#0 /tmp/tmpwyf4srql.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpwyf4srql.php\
    \ on line 39\n"
  timestamp: 1659823842
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result\
    \ = 0;\n    $array = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $array[]\
    \ = $i * $i - $i + 1;\n    }\n    for ($i = 0; $i < count($array); $i++) {\n \
    \       for ($j = $i + 1; $j < count($array); $j++) {\n            for ($k = $j\
    \ + 1; $k < count($array); $k++) {\n                if (($array[$i] + $array[$j]\
    \ + $array[$k]) % 3 == 0) $result++;\n            }\n        }\n    }\n    return\
    \ $result;\n}\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823842
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $result = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $result++;\n                }\n            }\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823842
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5);\nfunction candidate(...$args) {\n    return\
    \ get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1659823842
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $array\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $array[] = $i * $i - $i +\
    \ 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < count($array); $i++) {\n \
    \       for ($j = $i + 1; $j < count($array); $j++) {\n            for ($k = $j\
    \ + 1; $k < count($array); $k++) {\n                if (($array[$i] + $array[$j]\
    \ + $array[$k]) % 3 == 0) {\n                    $count++;\n                }\n\
    \            }\n        }\n    }\n    return $count;\n}\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823842
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = range(1, $n);\n    $a = array_map(function($n) {\n        return $n * $n -\
    \ $n + 1;\n    }, $a);\n    $cnt = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n\
    \        for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1;\
    \ $k < $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n\
    \                    $cnt++;\n                }\n            }\n        }\n  \
    \  }\n    return $cnt;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823842
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n  $triples\
    \ = [];\n  for ($i = 1; $i <= $n; $i++) {\n    $a[] = $i * $i - $i + 1;\n  }\n\
    \  foreach ($a as $x) {\n    foreach ($a as $y) {\n      foreach ($a as $z) {\n\
    \        if ($x == $y || $x == $z || $y == $z) continue;\n        if ($x < $y\
    \ && $y < $z && ($x + $y + $z) % 3 == 0) {\n          $triples[] = [$x, $y, $z];\n\
    \        }\n      }\n    }\n  }\n  return count($triples);\n}\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823842
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i\
    \ + 1;\n    }\n    $counter = 0;\n    for ($i = 0; $i < count($a); $i++) {\n \
    \       for ($j = $i + 1; $j < count($a); $j++) {\n            for ($k = $j +\
    \ 1; $k < count($a); $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) %\
    \ 3 == 0) {\n                    $counter++;\n                }\n            }\n\
    \        }\n    }\n    return $counter;\n}\n\nfunction candidate(...$args) {\n\
    \    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823842
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    $triples = [];\n    for ($i = 0; $i < $n - 2; $i++)\
    \ {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j\
    \ + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 ==\
    \ 0) {\n                    $count++;\n                    $triples[] = [$a[$i],\
    \ $a[$j], $a[$k]];\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823842
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $count\
    \ = 0;\n    $arr = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[] = $i\
    \ * $i - $i + 1;\n    }\n    for ($i = 0; $i < count($arr); $i++) {\n        for\
    \ ($j = $i + 1; $j < count($arr); $j++) {\n            for ($k = $j + 1; $k <\
    \ count($arr); $k++) {\n                if (($arr[$i] + $arr[$j] + $arr[$k]) %\
    \ 3 == 0) {\n                    $count++;\n                }\n            }\n\
    \        }\n    }\n    return $count;\n}\necho get_max_triples(5);\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $arr\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($arr[$i] + $arr[$j] + $arr[$k]) % 3 == 0) {\n      \
    \              $count++;\n                }\n            }\n        }\n    }\n\
    \    return $count;\n}\necho get_max_triples(5);\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = range(1, $n);\n    return count_triples($a);\n}\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_triples()\
    \ in /tmp/tmpg1_f7gnv.php:14\nStack trace:\n#0 /tmp/tmpg1_f7gnv.php(17): get_max_triples(5)\n\
    #1 /tmp/tmpg1_f7gnv.php(21): candidate(5)\n#2 /tmp/tmpg1_f7gnv.php(27): test()\n\
    #3 {main}\n  thrown in /tmp/tmpg1_f7gnv.php on line 14\n"
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i\
    \ + 1;\n    }\n    $result = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n     \
    \   for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k <\
    \ $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n  \
    \                  $result++;\n                }\n            }\n        }\n \
    \   }\n    return $result;\n}\necho get_max_triples(5);\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $arr\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        for\
    \ ($j = $i + 1; $j < count($arr); $j++) {\n            for ($k = $j + 1; $k <\
    \ count($arr); $k++) {\n                if (($arr[$i] + $arr[$j] + $arr[$k]) %\
    \ 3 == 0) {\n                    $count++;\n                }\n            }\n\
    \        }\n    }\n    return $count;\n}\nfunction candidate(...$args) {\n   \
    \ return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    if\
    \ ($n < 3) return 0;\n    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n     \
    \   $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n\
    \ - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n            for\
    \ ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k])\
    \ % 3 == 0) {\n                    $count++;\n                }\n            }\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    if\
    \ ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n        return 0;\n\
    \    }\n    if ($n == 3) {\n        return 1;\n    }\n    $a = [1, 3, 7, 13, 21];\n\
    \    $size = count($a);\n    for ($i = $size; $i < $n; $i++) {\n        $a[$i]\
    \ = $a[$i - 1] + (2 * $i) - 1;\n    }\n    $triples = 0;\n    for ($i = 0; $i\
    \ < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n        \
    \    for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j]\
    \ + $a[$k]) % 3 == 0) {\n                    $triples++;\n                }\n\
    \            }\n        }\n    }\n    return $triples;\n}\n$n = 4;\necho get_max_triples($n)\
    \ . PHP_EOL;\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp66u9bgt_.php:48\n\
    Stack trace:\n#0 /tmp/tmp66u9bgt_.php(53): test()\n#1 {main}\n  thrown in /tmp/tmp66u9bgt_.php\
    \ on line 48\n"
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    //\
    \ create array with first n numbers\n    $arr = range(1, $n);\n    // calculate\
    \ all triples\n    $triples = get_all_triples($arr);\n    // filter out triples\
    \ where a[i] + a[j] + a[k] is not a multiple of 3\n    $triples = array_filter($triples,\
    \ function($x) {\n        return $x[0] + $x[1] + $x[2] % 3 === 0;\n    });\n \
    \   // get count of triples that are divisible by 3\n    return count($triples);\n\
    }\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function get_all_triples()\
    \ in /tmp/tmphxc9y2na.php:16\nStack trace:\n#0 /tmp/tmphxc9y2na.php(26): get_max_triples(5)\n\
    #1 /tmp/tmphxc9y2na.php(30): candidate(5)\n#2 /tmp/tmphxc9y2na.php(36): test()\n\
    #3 {main}\n  thrown in /tmp/tmphxc9y2na.php on line 16\n"
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $maxTriples\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n;\
    \ $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if\
    \ ( ($i + $j + $k) % 3 == 0) {\n                    $maxTriples++;\n         \
    \       }\n            }\n        }\n    }\n    return $maxTriples;\n}\nfunction\
    \ candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpab75k8ld.php:30\n\
    Stack trace:\n#0 /tmp/tmpab75k8ld.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpab75k8ld.php\
    \ on line 30\n"
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n;\
    \ $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if\
    \ (($i * $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n    \
    \                $result++;\n                }\n            }\n        }\n   \
    \ }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf3m5pn7y.php:32\n\
    Stack trace:\n#0 /tmp/tmpf3m5pn7y.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpf3m5pn7y.php\
    \ on line 32\n"
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    for ($j = $i + 1; $j < $n; $j++)\
    \ {\n      for ($k = $j + 1; $k < $n; $k++) {\n        if (($i * $i - $i + 1 +\
    \ $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n          $count++;\n    \
    \    }\n      }\n    }\n  }\n  return $count;\n}\necho get_max_triples(5) . \"\
    \\n\";\necho get_max_triples(3) . \"\\n\";\necho get_max_triples(8) . \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n0\n10\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsyv7jvcu.php:34\n\
    Stack trace:\n#0 /tmp/tmpsyv7jvcu.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpsyv7jvcu.php\
    \ on line 34\n"
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    \n\
    }\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpve1y6wqy.php:21\n\
    Stack trace:\n#0 /tmp/tmpve1y6wqy.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpve1y6wqy.php\
    \ on line 21\n"
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n \
    \               if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                 \
    \   $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $arr\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[] = $i * $i - $i + 1;\n\
    \    }\n    $max = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        for\
    \ ($j = $i + 1; $j < count($arr); $j++) {\n            for ($k = $j + 1; $k <\
    \ count($arr); $k++) {\n                if (($arr[$i] + $arr[$j] + $arr[$k]) %\
    \ 3 == 0) {\n                    $max++;\n                }\n            }\n \
    \       }\n    }\n    return $max;\n}\nfunction candidate(...$args) {\n    return\
    \ get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $triples\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n;\
    \ $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if\
    \ ((($i * $i - $i + 1) + ($j * $j - $j + 1) + ($k * $k - $k + 1)) % 3 == 0) {\n\
    \                    $triples++;\n                }\n            }\n        }\n\
    \    }\n    return $triples;\n}\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4p0akuwd.php:31\n\
    Stack trace:\n#0 /tmp/tmp4p0akuwd.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp4p0akuwd.php\
    \ on line 31\n"
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $result = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $result++;\n                }\n            }\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823842
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $triples\
    \ = 0;\n    $arr = [];\n    $arr[0] = 0;\n    for ($i = 1; $i <= $n; $i++) {\n\
    \        $arr[$i] = $i * $i - $i + 1;\n    }\n    $triples = 0;\n    for ($i =\
    \ 1; $i < $n - 1; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n      \
    \      for ($k = $j + 1; $k <= $n; $k++) {\n                if (($arr[$i] + $arr[$j]\
    \ + $arr[$k]) % 3 == 0) {\n                    $triples++;\n                }\n\
    \            }\n        }\n    }\n    return $triples;\n}\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $t\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n;\
    \ $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if\
    \ (($i * $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n    \
    \                $t++;\n                }\n            }\n        }\n    }\n \
    \   return $t;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy48bz6ff.php:32\n\
    Stack trace:\n#0 /tmp/tmpy48bz6ff.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpy48bz6ff.php\
    \ on line 32\n"
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $triples = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $triples++;\n                }\n            }\n        }\n    }\n   \
    \ return $triples;\n}\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $res\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n;\
    \ $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if\
    \ (($i * $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n    \
    \                $res++;\n                }\n            }\n        }\n    }\n\
    \    return $res;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyfx0cjnk.php:32\n\
    Stack trace:\n#0 /tmp/tmpyfx0cjnk.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpyfx0cjnk.php\
    \ on line 32\n"
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $counter = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $counter++;\n                }\n            }\n        }\n    }\n    return\
    \ $counter;\n}\necho get_max_triples(2);\nfunction candidate(...$args) {\n   \
    \ return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0'
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n  $arr\
    \ = [];\n  for ($i = 1; $i <= $n; $i++) {\n    $arr[] = $i * $i - $i + 1;\n  }\n\
    \  $count = 0;\n  for ($i = 0; $i < count($arr); $i++) {\n    for ($j = $i + 1;\
    \ $j < count($arr); $j++) {\n      for ($k = $j + 1; $k < count($arr); $k++) {\n\
    \        if (($arr[$i] + $arr[$j] + $arr[$k]) % 3 === 0) {\n          $count++;\n\
    \        }\n      }\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n  // Write\
    \ your code here\n  // To print results to the standard output you can use print\n\
    \  // Example: print \"Hello world!\";\n}\nfunction candidate(...$args) {\n  \
    \  return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5adjjns6.php:22\n\
    Stack trace:\n#0 /tmp/tmp5adjjns6.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp5adjjns6.php\
    \ on line 22\n"
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $triples\
    \ = 0;\n    for ($i = 1; $i < $n - 1; $i++) {\n        for ($j = $i + 1; $j <\
    \ $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n             \
    \   if (($i*$i - $i + 1 + $j*$j - $j + 1 + $k*$k - $k + 1) % 3 == 0)\n       \
    \             $triples++;\n            }\n        }\n    }\n    return $triples;\n\
    }\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $arr=[];\n\
    \    for($i=1;$i<=$n;$i++){\n        $arr[]=$i*$i-$i+1;\n    }\n    $sum=0;\n\
    \    for($i=0;$i<count($arr);$i++){\n        for($j=$i+1;$j<count($arr);$j++){\n\
    \            for($k=$j+1;$k<count($arr);$k++){\n                if(($arr[$i]+$arr[$j]+$arr[$k])%3==0){\n\
    \                    $sum++;\n                }\n            }\n        }\n  \
    \  }\n    return $sum;\n}\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $p\
    \ = array_fill(0, $n, 0);\n    for ($i = 0; $i < $n; $i++) {\n        $p[$i] =\
    \ $i * $i - $i + 1;\n    }\n    $m = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n\
    \        for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1;\
    \ $k < $n; $k++) {\n                if (($p[$i] + $p[$j] + $p[$k]) % 3 == 0) {\n\
    \                    $m++;\n                }\n            }\n        }\n    }\n\
    \    return $m;\n}\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb8uq1rl5.php:34\n\
    Stack trace:\n#0 /tmp/tmpb8uq1rl5.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpb8uq1rl5.php\
    \ on line 34\n"
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $res = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $res++;\n                }\n            }\n        }\n    }\n    return\
    \ $res;\n}\necho get_max_triples(5) . PHP_EOL;\nfunction candidate(...$args) {\n\
    \    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    '
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n\t$a=array();\n\
    \tfor($i=1;$i<=$n;$i++){\n\t\t$a[$i]=$i*$i-$i+1;\n\t}\n\t$count=0;\n\tfor($i=1;$i<=$n;$i++){\n\
    \t\tfor($j=$i+1;$j<=$n;$j++){\n\t\t\tfor($k=$j+1;$k<=$n;$k++){\n\t\t\t\tif(($a[$i]+$a[$j]+$a[$k])%3==0){\n\
    \t\t\t\t\t$count++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn $count;\n}\n$n=5;\n\
    print_r(get_max_triples($n));\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $sum\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n;\
    \ $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if\
    \ (($i * $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n    \
    \                $sum += 1;\n                }\n            }\n        }\n   \
    \ }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_j5sj59y.php:32\n\
    Stack trace:\n#0 /tmp/tmp_j5sj59y.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp_j5sj59y.php\
    \ on line 32\n"
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n  $num\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    for ($j = $i + 1; $j < $n; $j++)\
    \ {\n      for ($k = $j + 1; $k < $n; $k++) {\n        if (($i * $i - $i + 1 +\
    \ $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n          $num++;\n      \
    \  }\n      }\n    }\n  }\n  return $num;\n}\necho get_max_triples(5);\nfunction\
    \ candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcg4esfp_.php:32\n\
    Stack trace:\n#0 /tmp/tmpcg4esfp_.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpcg4esfp_.php\
    \ on line 32\n"
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n \
    \               if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                 \
    \   $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $arr\
    \ = [0];\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[] = $i * $i - $i +\
    \ 1;\n    }\n    $count = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        for\
    \ ($j = $i + 1; $j <= $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++)\
    \ {\n                if (($arr[$i] + $arr[$j] + $arr[$k]) % 3 == 0) {\n      \
    \              $count++;\n                }\n            }\n        }\n    }\n\
    \    return $count;\n}\necho get_max_triples(5) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    '
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = pow($i, 2) - $i +\
    \ 1;\n    }\n    $total = 0;\n    $length = count($a);\n    for ($i = 0; $i <\
    \ $length; $i++) {\n        for ($j = $i + 1; $j < $length; $j++) {\n        \
    \    for ($k = $j + 1; $k < $length; $k++) {\n                if (($a[$i] + $a[$j]\
    \ + $a[$k]) % 3 === 0) {\n                    $total++;\n                }\n \
    \           }\n        }\n    }\n    return $total;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    // var_dump($a);\n    $cnt = 0;\n    for ($i = 0; $i < $n - 2; $i++)\
    \ {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j\
    \ + 1; $k < $n; $k++) {\n                // echo \"i=$i j=$j k=$k\\n\";\n    \
    \            if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $cnt++;\n\
    \                }\n            }\n        }\n    }\n    return $cnt;\n}\nfunction\
    \ candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $answer = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $answer++;\n                }\n            }\n        }\n    }\n    return\
    \ $answer;\n}\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    //\
    \ Write your code here\n    // To print results to the standard output you can\
    \ use print\n    // Example: print \"Hello world!\";\n    $t = 0;\n    for ($i\
    \ = 1; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n        \
    \    for ($k = $j + 1; $k < $n; $k++) {\n                if (($i * $i - $i + 1\
    \ + $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n                    $t +=\
    \ 1;\n                }\n            }\n        }\n    }\n    print $t;\n}\n\n\
    $n = intval(fgets(STDIN));\nget_max_triples($n);\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "01\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp30mf7n16.php:36\n\
    Stack trace:\n#0 /tmp/tmp30mf7n16.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp30mf7n16.php\
    \ on line 36\n"
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = range(1, $n);\n    $a = array_map(function($e) { return $e * $e - $e + 1;\
    \ }, $a);\n    $total = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $total++;\n                }\n            }\n        }\n    }\n    return\
    \ $total;\n}\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $total\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n;\
    \ $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if\
    \ (($i * $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n    \
    \                $total++;\n                }\n            }\n        }\n    }\n\
    \    return $total;\n}\necho get_max_triples(5) . \"<br>\";\necho get_max_triples(6)\
    \ . \"<br>\";\necho get_max_triples(7) . \"<br>\";\n\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1<br>1<br>4<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp03542drp.php:35\n\
    Stack trace:\n#0 /tmp/tmp03542drp.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp03542drp.php\
    \ on line 35\n"
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $res\
    \ = array();\n    for ($i = 1; $i <= $n; $i++) {\n        array_push($res, $i\
    \ * $i - $i + 1);\n    }\n    $count = 0;\n    $len = count($res);\n    for ($i\
    \ = 0; $i < $len - 2; $i++) {\n        for ($j = $i + 1; $j < $len - 1; $j++)\
    \ {\n            for ($k = $j + 1; $k < $len; $k++) {\n                if (($res[$i]\
    \ + $res[$j] + $res[$k]) % 3 == 0) {\n                    $count++;\n        \
    \        }\n            }\n        }\n    }\n    return $count;\n}\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $result = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $result++;\n                }\n            }\n        }\n    }\n    return\
    \ $result;\n}\n$tests = [\n    [5, 1],\n    [7, 3],\n    [100, 856]\n];\nforeach\
    \ ($tests as $test) {\n    $result = get_max_triples($test[0]);\n    if ($result\
    \ === $test[1]) {\n        echo \"Test PASSED\\n\";\n    } else {\n        echo\
    \ \"Test FAILED!\\n\";\n    }\n}\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'Test PASSED

    Test FAILED!

    Test FAILED!

    '
  timestamp: 1660028361
- exit_code: -1
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $max = 0;\n    $ans = 0;\n    for ($i = 0; $i < $n; $i++) {\n    \
    \    for ($j = $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n;\
    \ $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n      \
    \              $ans++;\n                }\n            }\n        }\n    }\n \
    \   return $ans;\n}\necho get_max_triples(5) . \"\\n\";\necho get_max_triples(10)\
    \ . \"\\n\";\necho get_max_triples(100) . \"\\n\";\necho get_max_triples(1000)\
    \ . \"\\n\";\necho get_max_triples(10000) . \"\\n\";\necho get_max_triples(100000)\
    \ . \"\\n\";\necho get_max_triples(1000000) . \"\\n\";\necho get_max_triples(10000000)\
    \ . \"\\n\";\necho get_max_triples(100000000) . \"\\n\";\necho get_max_triples(1000000000)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: '1

    36

    53361

    '
  timestamp: 1660028366
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $counter\
    \ = 0;\n    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i *\
    \ $i - $i + 1;\n    }\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $counter++;\n                }\n            }\n        }\n    }\n   \
    \ return $counter;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $i\
    \ = $j = $k = 0;\n    $s = 0;\n    $count = 0;\n    for ($i = 1; $i <= $n; $i++)\
    \ {\n        for ($j = $i + 1; $j <= $n; $j++) {\n            for ($k = $j + 1;\
    \ $k <= $n; $k++) {\n                $s = $i + $j + $k;\n                if (($s\
    \ % 3) == 0) {\n                    $count++;\n                }\n           \
    \ }\n        }\n    }\n    return $count;\n}\nfunction candidate(...$args) {\n\
    \    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7wzmrbj9.php:33\n\
    Stack trace:\n#0 /tmp/tmp7wzmrbj9.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp7wzmrbj9.php\
    \ on line 33\n"
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n  $count\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    for ($j = $i + 1; $j < $n; $j++)\
    \ {\n      for ($k = $j + 1; $k < $n; $k++) {\n        if (($i * $i - $i + 1 +\
    \ $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n          $count++;\n    \
    \    }\n      }\n    }\n  }\n  return $count;\n}\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu6_e9w3c.php:31\n\
    Stack trace:\n#0 /tmp/tmpu6_e9w3c.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpu6_e9w3c.php\
    \ on line 31\n"
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n  $a =\
    \ [];\n  for ($i = 1; $i <= $n; $i++) {\n    $a[] = $i * $i - $i + 1;\n  }\n \
    \ $count = 0;\n  for ($i = 0; $i < $n; $i++) {\n    for ($j = $i + 1; $j < $n;\
    \ $j++) {\n      for ($k = $j + 1; $k < $n; $k++) {\n        if (($a[$i] + $a[$j]\
    \ + $a[$k]) % 3 === 0) {\n          $count++;\n        }\n      }\n    }\n  }\n\
    \  return $count;\n}\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $triples\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n;\
    \ $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if\
    \ ((($i * $i - $i + 1) + ($j * $j - $j + 1) + ($k * $k - $k + 1)) % 3 == 0)\n\
    \                    $triples++;\n            }\n        }\n    }\n    return\
    \ $triples;\n}\n\nprint_r(get_max_triples(100));\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "51216\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7ujb3ufx.php:32\n\
    Stack trace:\n#0 /tmp/tmp7ujb3ufx.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp7ujb3ufx.php\
    \ on line 32\n"
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n$n = 5;\necho get_max_triples($n);\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $array\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $array[] = $i * $i - $i +\
    \ 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < count($array); $i++) {\n \
    \       for ($j = $i + 1; $j < count($array); $j++) {\n            for ($k = $j\
    \ + 1; $k < count($array); $k++) {\n                if (($array[$i] + $array[$j]\
    \ + $array[$k]) % 3 == 0) {\n                    $count++;\n                }\n\
    \            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n  $a =\
    \ array();\n  for ($i = 1; $i <= $n; $i++) {\n    $a[] = $i * $i - $i + 1;\n \
    \ }\n  $ans = 0;\n  for ($i = 0; $i < $n; $i++) {\n    for ($j = $i + 1; $j <\
    \ $n; $j++) {\n      for ($k = $j + 1; $k < $n; $k++) {\n        if (($a[$i] +\
    \ $a[$j] + $a[$k]) % 3 == 0) {\n          $ans++;\n        }\n      }\n    }\n\
    \  }\n  return $ans;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n \
    \               if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                 \
    \   $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5);\nfunction candidate(...$args) {\n    return\
    \ get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n - 1; $i++) {\n        for ($j = $i + 1; $j <\
    \ $n; $j++) {\n            $a = $i * $i - $i + 1;\n            $b = $j * $j -\
    \ $j + 1;\n            $c = ($i + $j) * ($i + $j) - ($i + $j) + 1;\n         \
    \   if (($a + $b + $c) % 3 == 0) {\n                $count++;\n            }\n\
    \        }\n    }\n    return $count;\n}\necho get_max_triples(5);\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf0apkeyc.php:32\n\
    Stack trace:\n#0 /tmp/tmpf0apkeyc.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpf0apkeyc.php\
    \ on line 32\n"
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $res = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $res++;\n                }\n            }\n        }\n    }\n    return\
    \ $res;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $arr\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[] = $i * $i - $i + 1;\n\
    \    }\n    $result = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n       \
    \ for ($j = $i + 1; $j < count($arr); $j++) {\n            for ($k = $j + 1; $k\
    \ < count($arr); $k++) {\n                if (($arr[$i] + $arr[$j] + $arr[$k])\
    \ % 3 == 0) {\n                    $result++;\n                }\n           \
    \ }\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n\
    \    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n  // Write\
    \ your code here\n  // To print results to the standard output you can use print\n\
    \  // Example: print \"Hello world!\";\n  if( $n < 3 ) {\n    return 0;\n  }\n\
    \  $triples = 0;\n  for( $i = 1; $i < $n - 1; $i++ ) {\n    for( $j = $i + 1;\
    \ $j < $n; $j++ ) {\n      for( $k = $j + 1; $k <= $n; $k++ ) {\n        if( $i\
    \ * $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1 % 3 == 0 ) {\n         \
    \ $triples++;\n        }\n      }\n    }\n  }\n  return $triples;\n}\n\n$n = 5;\n\
    echo get_max_triples($n);\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv69hhgol.php:39\n\
    Stack trace:\n#0 /tmp/tmpv69hhgol.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpv69hhgol.php\
    \ on line 39\n"
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    if\
    \ ($n <= 2) {\n        return 0;\n    }\n    $count = 0;\n    for ($i = 1; $i\
    \ < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n            for ($k\
    \ = $j + 1; $k < $n; $k++) {\n                if ((($i * $i - $i + 1) + ($j *\
    \ $j - $j + 1) + ($k * $k - $k + 1)) % 3 == 0) {\n                    $count++;\n\
    \                }\n            }\n        }\n    }\n    return $count;\n}\necho\
    \ get_max_triples(6);\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvd647m82.php:35\n\
    Stack trace:\n#0 /tmp/tmpvd647m82.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpvd647m82.php\
    \ on line 35\n"
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $tripleCount\
    \ = 0;\n    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = ($i *\
    \ $i) - $i + 1;\n    }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i\
    \ + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n    \
    \            if (isMultipleOfThree($a[$i], $a[$j], $a[$k])) {\n              \
    \      $tripleCount++;\n                }\n            }\n        }\n    }\n \
    \   return $tripleCount;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function isMultipleOfThree()\
    \ in /tmp/tmpmo8kg2q2.php:21\nStack trace:\n#0 /tmp/tmpmo8kg2q2.php(31): get_max_triples(5)\n\
    #1 /tmp/tmpmo8kg2q2.php(35): candidate(5)\n#2 /tmp/tmpmo8kg2q2.php(41): test()\n\
    #3 {main}\n  thrown in /tmp/tmpmo8kg2q2.php on line 21\n"
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n  $c =\
    \ 0;\n  for ($i = 1; $i < $n; $i++) {\n    for ($j = $i + 1; $j < $n; $j++) {\n\
    \      for ($k = $j + 1; $k < $n; $k++) {\n        if (($i * $i - $i + 1 + $j\
    \ * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n          $c++;\n        }\n\
    \      }\n    }\n  }\n  return $c;\n}\necho get_max_triples(5);\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfarajgxu.php:32\n\
    Stack trace:\n#0 /tmp/tmpfarajgxu.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpfarajgxu.php\
    \ on line 32\n"
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $arr\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[] = $i * $i - $i + 1;\n\
    \    }\n    $result = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n       \
    \ for ($j = $i + 1; $j < count($arr); $j++) {\n            for ($k = $j + 1; $k\
    \ < count($arr); $k++) {\n                if (($arr[$i] + $arr[$j] + $arr[$k])\
    \ % 3 == 0) {\n                    $result++;\n                }\n           \
    \ }\n        }\n    }\n    return $result;\n}\necho get_max_triples(5);\nfunction\
    \ candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    \n\
    }\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_pwgn1sq.php:20\n\
    Stack trace:\n#0 /tmp/tmp_pwgn1sq.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp_pwgn1sq.php\
    \ on line 20\n"
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $count\
    \ = 0;\n    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i *\
    \ $i - $i + 1;\n    }\n    for ($i = 0; $i < count($a); $i++) {\n        for ($j\
    \ = $i + 1; $j < count($a); $j++) {\n            for ($k = $j + 1; $k < count($a);\
    \ $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n      \
    \              $count++;\n                }\n            }\n        }\n    }\n\
    \    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028361
- exit_code: -1
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $arr\
    \ = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[] = ($i * $i) -\
    \ $i + 1;\n    }\n    $result = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n  \
    \      for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k\
    \ < $n; $k++) {\n                if (($arr[$i] + $arr[$j] + $arr[$k]) % 3 == 0)\
    \ {\n                    $result++;\n                }\n            }\n      \
    \  }\n    }\n    return $result;\n}\n\necho get_max_triples(1) . \"\\n\";\necho\
    \ get_max_triples(5) . \"\\n\";\necho get_max_triples(10) . \"\\n\";\necho get_max_triples(50)\
    \ . \"\\n\";\necho get_max_triples(100) . \"\\n\";\necho get_max_triples(1000)\
    \ . \"\\n\";\necho get_max_triples(5000) . \"\\n\";\necho get_max_triples(10000)\
    \ . \"\\n\";\necho get_max_triples(50000) . \"\\n\";\necho get_max_triples(100000)\
    \ . \"\\n\";\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: '0

    1

    36

    6136

    53361

    '
  timestamp: 1660028366
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $sums\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $sums[] = $i * $i - $i +\
    \ 1;\n    }\n    $triples = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n      \
    \  for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k <\
    \ $n; $k++) {\n                if (($sums[$i] + $sums[$j] + $sums[$k]) % 3 ===\
    \ 0) {\n                    $triples++;\n                }\n            }\n  \
    \      }\n    }\n    return $triples;\n}\n\nfunction candidate(...$args) {\n \
    \   return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $multiples\
    \ = array(0,0,0);\n    for ($i = 1; $i <= $n; $i++) {\n        $a = $i * $i -\
    \ $i + 1;\n        $multiples[$a % 3]++;\n    }\n    return min($multiples[1],\
    \ $multiples[2]) * $multiples[0] +\n        ($multiples[0] * ($multiples[0] -\
    \ 1) * ($multiples[0] - 2)) / 6 +\n        ($multiples[1] * ($multiples[1] - 1)\
    \ * ($multiples[1] - 2)) / 6 +\n        ($multiples[2] * ($multiples[2] - 1) *\
    \ ($multiples[2] - 2)) / 6;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result\
    \ = 0;\n    $arr = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[] = $i\
    \ * $i - $i + 1;\n    }\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($arr[$i] + $arr[$j] + $arr[$k]) % 3 == 0) {\n      \
    \              $result++;\n                }\n            }\n        }\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n  $a =\
    \ [];\n  for ($i = 1; $i <= $n; $i++) {\n    $a[] = $i * $i - $i + 1;\n  }\n \
    \ $result = 0;\n  for ($i = 0; $i < $n - 2; $i++) {\n    for ($j = $i + 1; $j\
    \ < $n - 1; $j++) {\n      for ($k = $j + 1; $k < $n; $k++) {\n        if (($a[$i]\
    \ + $a[$j] + $a[$k]) % 3 === 0) {\n          $result++;\n        }\n      }\n\
    \    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = range(1, $n);\n    foreach ($a as $i => $value) {\n        $a[$i] = $value\
    \ * $value - $value + 1;\n    }\n    $c = 0;\n    for ($i = 0; $i < $n - 2; $i++)\
    \ {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j\
    \ + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 ==\
    \ 0) {\n                    $c++;\n                }\n            }\n        }\n\
    \    }\n    return $c;\n}\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n   \
    \ $n = $_POST['n'];\n    echo get_max_triples($n);\n}\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key "REQUEST_METHOD" in /tmp/tmp873_s07v.php on line
    30

    '
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $res = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $res++;\n                }\n            }\n        }\n    }\n    return\
    \ $res;\n}\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n;\
    \ $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if\
    \ (($i * $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n    \
    \                $result++;\n                }\n            }\n        }\n   \
    \ }\n    return $result;\n}\n\necho get_max_triples(5);\n\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5_87mq9_.php:34\n\
    Stack trace:\n#0 /tmp/tmp5_87mq9_.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp5_87mq9_.php\
    \ on line 34\n"
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $count\
    \ = 0;\n    $arr = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[] = ($i\
    \ * $i) - $i + 1;\n    }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n \
    \               if (($arr[$i] + $arr[$j] + $arr[$k]) % 3 == 0) {\n           \
    \         $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n$n = 5;\necho(get_max_triples($n));\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $cnt\
    \ = 0;\n    for ($i = 1; $i < $n - 1; $i++) {\n        for ($j = $i + 1; $j <\
    \ $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n             \
    \   if (($i * $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n\
    \                    $cnt++;\n                }\n            }\n        }\n  \
    \  }\n    return $cnt;\n}\n$res = get_max_triples(5);\nvar_dump($res);\nfunction\
    \ candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'int(1)

    '
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $arr\
    \ = range(1, $n);\n    $i = 0;\n    $res = [];\n    while ($i < count($arr)) {\n\
    \        $j = $i + 1;\n        while ($j < count($arr)) {\n            $k = $j\
    \ + 1;\n            while ($k < count($arr)) {\n                if (($arr[$i]\
    \ + $arr[$j] + $arr[$k]) % 3 == 0) {\n                    $res[] = \"{$arr[$i]},\
    \ {$arr[$j]}, {$arr[$k]}\";\n                }\n                $k++;\n      \
    \      }\n            $j++;\n        }\n        $i++;\n    }\n    return count($res);\n\
    }\n\necho get_max_triples(5);\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpogtppfo1.php:40\n\
    Stack trace:\n#0 /tmp/tmpogtppfo1.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpogtppfo1.php\
    \ on line 40\n"
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    //\
    \ $a = [];\n    // for ($i = 1; $i <= $n; $i++) {\n    //     $a[] = $i * $i -\
    \ $i + 1;\n    // }\n    // $count = 0;\n    // for ($i = 0; $i < $n - 2; $i++)\
    \ {\n    //     for ($j = $i + 1; $j < $n - 1; $j++) {\n    //         for ($k\
    \ = $j + 1; $k < $n; $k++) {\n    //             if (($a[$i] + $a[$j] + $a[$k])\
    \ % 3 == 0) {\n    //                 $count++;\n    //             }\n    //\
    \         }\n    //     }\n    // }\n    // return $count;\n    // your code here\n\
    \    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i\
    \ + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n      \
    \  for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k <\
    \ $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n  \
    \                  $count++;\n                }\n            }\n        }\n  \
    \  }\n    return $count;\n}\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = range(1, $n);\n    $ans = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $ans++;\n                }\n            }\n        }\n    }\n    return\
    \ $ans;\n}\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp57900j1u.php:31\n\
    Stack trace:\n#0 /tmp/tmp57900j1u.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp57900j1u.php\
    \ on line 31\n"
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    \n\
    }\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpve1y6wqy.php:21\n\
    Stack trace:\n#0 /tmp/tmpve1y6wqy.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpve1y6wqy.php\
    \ on line 21\n"
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n  $a =\
    \ range(1, $n);\n  for ($i = 0; $i < $n; $i++) {\n    $a[$i] = $a[$i] * $a[$i]\
    \ - $a[$i] + 1;\n  }\n  $count = 0;\n  for ($i = 0; $i < $n - 2; $i++) {\n   \
    \ for ($j = $i + 1; $j < $n - 1; $j++) {\n      for ($k = $j + 1; $k < $n; $k++)\
    \ {\n        if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n          $count++;\n\
    \        }\n      }\n    }\n  }\n  return $count;\n}\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n\t$a =\
    \ $j = $k = array();\n\t$sum = 0;\n\tfor ($i = 1; $i <= $n; $i++) {\n\t\t$a[$i]\
    \ = $i * $i - $i + 1;\n\t}\n\tfor ($i = 1; $i <= $n; $i++) {\n\t\tfor ($j = $i+1;\
    \ $j <= $n; $j++) {\n\t\t\t$sum = $a[$i] + $a[$j];\n\t\t\tfor ($k = $j+1; $k <=\
    \ $n; $k++) {\n\t\t\t\tif (($sum + $a[$k]) % 3 == 0) {\n\t\t\t\t\techo \"$a[$i],\
    \ $a[$j], $a[$k]<br>\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1, 7, 13<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplu291gn8.php:34\n\
    Stack trace:\n#0 /tmp/tmplu291gn8.php(40): test()\n#1 {main}\n  thrown in /tmp/tmplu291gn8.php\
    \ on line 34\n"
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $triples = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $triples++;\n                }\n            }\n        }\n    }\n   \
    \ return $triples;\n}\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result\
    \ = 0;\n    $sum = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = $i\
    \ + 1; $j <= $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n  \
    \              $sum = $i * $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1;\n\
    \                if ($sum % 3 == 0) {\n                    $result += 1;\n   \
    \             }\n            }\n        }\n    }\n    return $result;\n}\necho\
    \ get_max_triples(5);\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $sum\
    \ = 0;\n    for ($i = 1; $i < $n - 1; $i++) {\n        $sum += $i;\n    }\n  \
    \  return $sum;\n}\n\n$n = 5;\nvar_dump(get_max_triples($n));\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "int(6)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprvths8bg.php:27\n\
    Stack trace:\n#0 /tmp/tmprvths8bg.php(33): test()\n#1 {main}\n  thrown in /tmp/tmprvths8bg.php\
    \ on line 27\n"
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n\t$results\
    \ = 0;\n\tfor ($i = 1; $i < $n - 1; $i++) {\n\t\tfor ($j = $i + 1; $j < $n; $j++)\
    \ {\n\t\t\tfor ($k = $j + 1; $k <= $n; $k++) {\n\t\t\t\tif ((($i * $i - $i + 1)\
    \ + ($j * $j - $j + 1) + ($k * $k - $k + 1)) % 3 == 0) {\n\t\t\t\t\t$results++;\n\
    \t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn $results;\n}\necho get_max_triples(5)\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    '
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n  $triples\
    \ = 0;\n  $count = $n;\n  $i = 0;\n  while ($count > 0) {\n    $a[$i] = $i * $i\
    \ - $i + 1;\n    $count--;\n    $i++;\n  }\n  for ($i = 0; $i < count($a); $i++)\
    \ {\n    for ($j = $i + 1; $j < count($a); $j++) {\n      for ($k = $j + 1; $k\
    \ < count($a); $k++) {\n        if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n \
    \         $triples++;\n        }\n      }\n    }\n  }\n  return $triples;\n}\n\
    \necho get_max_triples(5);\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr8uo98ht.php:39\n\
    Stack trace:\n#0 /tmp/tmpr8uo98ht.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpr8uo98ht.php\
    \ on line 39\n"
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n  if ($n\
    \ < 3) {\n    return 0;\n  }\n  $count = 0;\n  for ($i = 1; $i < $n; $i++) {\n\
    \    for ($j = $i + 1; $j < $n; $j++) {\n      for ($k = $j + 1; $k < $n; $k++)\
    \ {\n        if (($i * $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3\
    \ == 0) {\n          $count++;\n        }\n      }\n    }\n  }\n  return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgqb65bj2.php:35\n\
    Stack trace:\n#0 /tmp/tmpgqb65bj2.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpgqb65bj2.php\
    \ on line 35\n"
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $array\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $array[] = $i * $i - $i +\
    \ 1;\n    }\n    return count(get_triples($array));\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function get_triples()\
    \ in /tmp/tmpfxj61bcj.php:17\nStack trace:\n#0 /tmp/tmpfxj61bcj.php(21): get_max_triples(5)\n\
    #1 /tmp/tmpfxj61bcj.php(25): candidate(5)\n#2 /tmp/tmpfxj61bcj.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmpfxj61bcj.php on line 17\n"
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n;\
    \ $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if\
    \ (($i * $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n    \
    \                $count++;\n                }\n            }\n        }\n    }\n\
    \    return $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnt_kxtiq.php:32\n\
    Stack trace:\n#0 /tmp/tmpnt_kxtiq.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpnt_kxtiq.php\
    \ on line 32\n"
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $counter = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $counter++;\n                }\n            }\n        }\n    }\n   \
    \ return $counter;\n}\necho get_max_triples(5) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    '
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $result = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $result++;\n                }\n            }\n        }\n    }\n    return\
    \ $result;\n}\n$n = 5;\necho get_max_triples($n);\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i\
    \ + 1;\n    }\n    $result = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n     \
    \   for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k <\
    \ $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n  \
    \                  $result++;\n                }\n            }\n        }\n \
    \   }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i\
    \ + 1;\n    }\n    $sum = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $sum++;\n                }\n            }\n        }\n    }\n    return $sum;\n\
    }\n\necho get_max_triples(5);\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $counter\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n;\
    \ $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if\
    \ (($i * $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n    \
    \                $counter++;\n                }\n            }\n        }\n  \
    \  }\n    return $counter;\n}\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyv2v8o6y.php:31\n\
    Stack trace:\n#0 /tmp/tmpyv2v8o6y.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpyv2v8o6y.php\
    \ on line 31\n"
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $arr\
    \ = range(1, $n);\n    for ($i = 0; $i < $n; $i++) {\n        $arr[$i] = pow($i\
    \ + 1, 2) - $i - 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++)\
    \ {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j\
    \ + 1; $k < $n; $k++) {\n                if (($arr[$i] + $arr[$j] + $arr[$k])\
    \ % 3 == 0) {\n                    $count++;\n                }\n            }\n\
    \        }\n    }\n    return $count;\n}\nfunction candidate(...$args) {\n   \
    \ return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $sum\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n;\
    \ $j++) {\n            $t = ($i * $i - $i + 1) + ($j * $j - $j + 1);\n       \
    \     for ($k = $j + 1; $k < $n; $k++) {\n                if (($t + ($k * $k -\
    \ $k + 1)) % 3 == 0) {\n                    $sum++;\n                }\n     \
    \       }\n        }\n    }\n    return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_6fx_a16.php:32\n\
    Stack trace:\n#0 /tmp/tmp_6fx_a16.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp_6fx_a16.php\
    \ on line 32\n"
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $triples = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $triples++;\n                }\n            }\n        }\n    }\n   \
    \ return $triples;\n}\necho get_max_triples(5) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    '
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n;\
    \ $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if\
    \ (($i * $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n    \
    \                $result++;\n                }\n            }\n        }\n   \
    \ }\n    return $result;\n}\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppv6jf7jr.php:31\n\
    Stack trace:\n#0 /tmp/tmppv6jf7jr.php(36): test()\n#1 {main}\n  thrown in /tmp/tmppv6jf7jr.php\
    \ on line 31\n"
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $total\
    \ = $triples = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        $total += $i *\
    \ $i - $i + 1;\n        if ($total % 3 == 0) {\n            $triples++;\n    \
    \    }\n    }\n    return $triples;\n}\necho get_max_triples(5);\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1_iwb60r.php:28\n\
    Stack trace:\n#0 /tmp/tmp1_iwb60r.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp1_iwb60r.php\
    \ on line 28\n"
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n - 1; $i++) {\n        for ($j = $i + 1; $j <\
    \ $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n             \
    \   if (($i * $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n\
    \                    $count++;\n                }\n            }\n        }\n\
    \    }\n    return $count;\n}\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n \
    \               if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                 \
    \   $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    \n\
    }\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_pwgn1sq.php:20\n\
    Stack trace:\n#0 /tmp/tmp_pwgn1sq.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp_pwgn1sq.php\
    \ on line 20\n"
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = range(1, $n);\n    for ($i = 0; $i < $n; $i++) {\n        $a[$i] = $a[$i]\
    \ * $a[$i] - $a[$i] + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2;\
    \ $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k\
    \ = $j + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) %\
    \ 3 == 0) {\n                    $count++;\n                }\n            }\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    if\
    \ ($n <= 1) {\n        return 0;\n    }\n    $a = [];\n    for ($i = 1; $i <=\
    \ $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $t_count = 0;\n  \
    \  for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++)\
    \ {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i]\
    \ + $a[$j] + $a[$k]) % 3 == 0) {\n                    $t_count++;\n          \
    \      }\n            }\n        }\n    }\n    return $t_count;\n}\n\n$res = get_max_triples(5);\n\
    print_r($res);\necho PHP_EOL;\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    '
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $max = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $max++;\n                }\n            }\n        }\n    }\n    return\
    \ $max;\n}\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $count\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n;\
    \ $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if\
    \ (is_multiple_of_3($i, $j, $k)) {\n                    $count++;\n          \
    \      }\n            }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_multiple_of_3()\
    \ in /tmp/tmp6ajwerxk.php:17\nStack trace:\n#0 /tmp/tmp6ajwerxk.php(27): get_max_triples(5)\n\
    #1 /tmp/tmp6ajwerxk.php(31): candidate(5)\n#2 /tmp/tmp6ajwerxk.php(37): test()\n\
    #3 {main}\n  thrown in /tmp/tmp6ajwerxk.php on line 17\n"
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = range(1, $n);\n    for ($i = 0; $i < $n; $i++) {\n        $a[$i] = $a[$i]\
    \ * $a[$i] - $a[$i] + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2;\
    \ $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k\
    \ = $j + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) %\
    \ 3 == 0) {\n                    $count++;\n                }\n            }\n\
    \        }\n    }\n    return $count;\n}\nfunction candidate(...$args) {\n   \
    \ return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $triple_count\
    \ = 0;\n    $i = 1;\n    $j = 2;\n    $k = 3;\n    while ($i < $n - 2) {\n   \
    \     $sum = $i + $j + $k;\n        if ($sum % 3 == 0) {\n            $triple_count++;\n\
    \        }\n        $k++;\n        if ($k > $n) {\n            $j++;\n       \
    \     $k = $j + 1;\n        }\n        if ($j > $n - 1) {\n            $i++;\n\
    \            $j = $i + 1;\n            $k = $j + 1;\n        }\n    }\n    return\
    \ $triple_count;\n}\necho get_max_triples(5);\nfunction candidate(...$args) {\n\
    \    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnu4axv4_.php:41\n\
    Stack trace:\n#0 /tmp/tmpnu4axv4_.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpnu4axv4_.php\
    \ on line 41\n"
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $arr\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[] = $i * $i - $i + 1;\n\
    \    }\n    $res = 0;\n    $l = count($arr);\n    for ($i = 0; $i < $l - 2; $i++)\
    \ {\n        for ($j = $i + 1; $j < $l - 1; $j++) {\n            for ($k = $j\
    \ + 1; $k < $l; $k++) {\n                if (($arr[$i] + $arr[$j] + $arr[$k])\
    \ % 3 == 0) {\n                    $res++;\n                }\n            }\n\
    \        }\n    }\n    return $res;\n}\n\nfunction candidate(...$args) {\n   \
    \ return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $count\
    \ = 0;\n    $arr = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[] = $i\
    \ * $i - $i + 1;\n    }\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if ($arr[$i] + $arr[$j] + $arr[$k] % 3 == 0) {\n        \
    \            $count++;\n                }\n            }\n        }\n    }\n \
    \   return $count;\n}\necho get_max_triples(5);\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj364a12z.php:35\n\
    Stack trace:\n#0 /tmp/tmpj364a12z.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpj364a12z.php\
    \ on line 35\n"
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n \
    \               if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                 \
    \   $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\necho get_max_triples(6);\nfunction candidate(...$args) {\n   \
    \ return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '4'
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = range(1, $n);\n    $max = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n; $j++) {\n            if ($a[$i] + $a[$j] > $a[$n - 1])\
    \ break;\n            $sum = $a[$i] + $a[$j];\n            $l = $j + 1;\n    \
    \        $r = $n - 1;\n            while ($l <= $r) {\n                $m = intval(($l\
    \ + $r) / 2);\n                if ($a[$m] == $sum) {\n                    $max++;\n\
    \                    break;\n                } else if ($a[$m] < $sum) {\n   \
    \                 $l = $m + 1;\n                } else {\n                   \
    \ $r = $m - 1;\n                }\n            }\n        }\n    }\n    return\
    \ $max;\n}\n\necho get_max_triples(5) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "4\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgdfrk70h.php:43\n\
    Stack trace:\n#0 /tmp/tmpgdfrk70h.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpgdfrk70h.php\
    \ on line 43\n"
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $sum\
    \ = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j <\
    \ $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n          \
    \      if ((($i + 1) * ($i + 1) - ($i + 1) + 1) + (($j + 1) * ($j + 1) - ($j +\
    \ 1) + 1) + (($k + 1) * ($k + 1) - ($k + 1) + 1) % 3 == 0) {\n               \
    \     $sum++;\n                }\n            }\n        }\n    }\n    return\
    \ $sum;\n}\necho get_max_triples(5);\nfunction candidate(...$args) {\n    return\
    \ get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr5578r00.php:31\n\
    Stack trace:\n#0 /tmp/tmpr5578r00.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpr5578r00.php\
    \ on line 31\n"
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    //\
    \ Find the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    //\
    \ and a[i] + a[j] + a[k] is a multiple of 3.\n    $triples = 0;\n    $a = [];\n\
    \    // Go through the array and populate it with the formula.\n    for ($i =\
    \ 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    // For the\
    \ 3 numbers, find the sum of those numbers and test if its a multiple of 3.\n\
    \    for ($i = 0; $i < count($a); $i++) {\n        for ($j = $i + 1; $j < count($a);\
    \ $j++) {\n            for ($k = $j + 1; $k < count($a); $k++) {\n           \
    \     $sum = $a[$i] + $a[$j] + $a[$k];\n                if ($sum % 3 == 0) {\n\
    \                    $triples++;\n                }\n            }\n        }\n\
    \    }\n    return $triples;\n}\n\nfunction candidate(...$args) {\n    return\
    \ get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $sum\
    \ = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n;\
    \ $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if\
    \ (($i + 1) * ($i + 1) - ($i + 1) + 1 + ($j + 1) * ($j + 1) - ($j + 1) + 1 + ($k\
    \ + 1) * ($k + 1) - ($k + 1) + 1 % 3 == 0) {\n                    $sum++;\n  \
    \              }\n            }\n        }\n    }\n    return $sum;\n}\necho get_max_triples(5);\n\
    function candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx68iucud.php:31\n\
    Stack trace:\n#0 /tmp/tmpx68iucud.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpx68iucud.php\
    \ on line 31\n"
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $cnt\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n;\
    \ $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if\
    \ (($i * $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n    \
    \                $cnt++;\n                }\n            }\n        }\n    }\n\
    \    return $cnt;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm13vc5kw.php:32\n\
    Stack trace:\n#0 /tmp/tmpm13vc5kw.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpm13vc5kw.php\
    \ on line 32\n"
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $myarray\
    \ = [1];\n    for ($i = 1; $i < $n; $i++) {\n        $myarray[] = $i * $i - $i\
    \ + 1;\n    }\n    $myarray[count($myarray)] = $n * $n - $n + 1;\n    $count =\
    \ 0;\n    for ($i = 0; $i < count($myarray); $i++) {\n        for ($j = $i+1;\
    \ $j < count($myarray); $j++) {\n            for ($k = $j+1; $k < count($myarray);\
    \ $k++) {\n                if (($myarray[$i] + $myarray[$j] + $myarray[$k]) %\
    \ 3 == 0) {\n                    $count += 1;\n                }\n           \
    \ }\n        }\n    }\n    return $count;\n}\nfunction candidate(...$args) {\n\
    \    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp49dgklkg.php:35\n\
    Stack trace:\n#0 /tmp/tmp49dgklkg.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp49dgklkg.php\
    \ on line 35\n"
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $arr\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($arr[$i] + $arr[$j] + $arr[$k]) % 3 == 0) {\n      \
    \              $count++;\n                }\n            }\n        }\n    }\n\
    \    return $count;\n}\n\n$n = 5;\nprint_r(get_max_triples($n));\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n;\
    \ $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if\
    \ (($i * $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n    \
    \                $result++;\n                }\n            }\n        }\n   \
    \ }\n    return $result;\n}\necho get_max_triples(5);\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp216cp9a_.php:32\n\
    Stack trace:\n#0 /tmp/tmp216cp9a_.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp216cp9a_.php\
    \ on line 32\n"
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n \
    \               if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                 \
    \   $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    if\
    \ ($n === 0) {\n        return 0;\n    }\n    $result = 0;\n    $arr = [];\n \
    \   for ($i = 1; $i <= $n; $i++) {\n        $arr[] = $i * $i - $i + 1;\n    }\n\
    \    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1;\
    \ $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if\
    \ ($arr[$i] + $arr[$j] + $arr[$k] % 3 === 0) {\n                    $result++;\n\
    \                }\n            }\n        }\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf8tpvqlx.php:38\n\
    Stack trace:\n#0 /tmp/tmpf8tpvqlx.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpf8tpvqlx.php\
    \ on line 38\n"
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n \
    \               if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                 \
    \   $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\necho get_max_triples(5);\nfunction candidate(...$args) {\n   \
    \ return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    //\
    \ \u8BA1\u7B97a[i]\n    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n       \
    \ $a[] = $i * $i - $i + 1;\n    }\n    // \u904D\u5386\uFF0C\u5224\u65ADa[i] +\
    \ a[j] + a[k]\u662F\u5426\u662F3\u7684\u500D\u6570\n    $max = 0;\n    for ($i\
    \ = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n        \
    \    for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j]\
    \ + $a[$k]) % 3 == 0) {\n                    $max++;\n                }\n    \
    \        }\n        }\n    }\n    return $max;\n}\necho get_max_triples(5);\n\
    function candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    \n\
    }\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_pwgn1sq.php:20\n\
    Stack trace:\n#0 /tmp/tmp_pwgn1sq.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp_pwgn1sq.php\
    \ on line 20\n"
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n\t$triples\
    \ = 0;\n\tfor ($i = 1; $i < $n; $i++) {\n\t\tfor ($j = $i + 1; $j < $n; $j++)\
    \ {\n\t\t\tfor ($k = $j + 1; $k < $n; $k++) {\n\t\t\t\tif (($i * $i - $i + 1 +\
    \ $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n\t\t\t\t\t$triples++;\n\t\t\
    \t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn $triples;\n}\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu0swlqn8.php:31\n\
    Stack trace:\n#0 /tmp/tmpu0swlqn8.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpu0swlqn8.php\
    \ on line 31\n"
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    $n = count($a);\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        for ($j = $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1;\
    \ $k < $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n\
    \                    $count++;\n                }\n            }\n        }\n\
    \    }\n    return $count;\n}\n\necho get_max_triples(5);\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $res = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $res++;\n                }\n            }\n        }\n    }\n    return\
    \ $res;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = range(1, $n);\n    $l = count($a);\n    $count = 0;\n    for ($i = 0; $i <\
    \ $l; $i++) {\n        for ($j = $i + 1; $j < $l; $j++) {\n            for ($k\
    \ = $j + 1; $k < $l; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) %\
    \ 3 == 0) {\n                    $count++;\n                }\n            }\n\
    \        }\n    }\n    return $count;\n}\n$res = get_max_triples(5);\necho $res;\n\
    function candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgsshudbj.php:34\n\
    Stack trace:\n#0 /tmp/tmpgsshudbj.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpgsshudbj.php\
    \ on line 34\n"
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n  //\n\
    }\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxjl8gw4w.php:20\n\
    Stack trace:\n#0 /tmp/tmpxjl8gw4w.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpxjl8gw4w.php\
    \ on line 20\n"
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $num\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n;\
    \ $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if\
    \ (($i * $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n    \
    \                $num++;\n                }\n            }\n        }\n    }\n\
    \    return $num;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp21a6_dke.php:32\n\
    Stack trace:\n#0 /tmp/tmp21a6_dke.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp21a6_dke.php\
    \ on line 32\n"
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = range(1, $n);\n    $count = 0;\n    for ($i = 0; $i < count($a); $i++) {\n\
    \        for ($j = $i + 1; $j < count($a); $j++) {\n            for ($k = $j +\
    \ 1; $k < count($a); $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) %\
    \ 3 == 0) {\n                    $count++;\n                }\n            }\n\
    \        }\n    }\n    return $count;\n}\nfunction candidate(...$args) {\n   \
    \ return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqcp7i2q8.php:31\n\
    Stack trace:\n#0 /tmp/tmpqcp7i2q8.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpqcp7i2q8.php\
    \ on line 31\n"
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $array\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $array[] = $i * $i - $i +\
    \ 1;\n    }\n    $triples = 0;\n    $size = count($array);\n    for ($i = 0; $i\
    \ < $size; $i++) {\n        for ($j = $i + 1; $j < $size; $j++) {\n          \
    \  for ($k = $j + 1; $k < $size; $k++) {\n                if (($array[$i] + $array[$j]\
    \ + $array[$k]) % 3 == 0) {\n                    $triples++;\n               \
    \ }\n            }\n        }\n    }\n    return $triples;\n}\n\nprint_r(get_max_triples(5));\n\
    function candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $output\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $array[] = $i * $i - $i +\
    \ 1;\n    }\n    for ($i = 0; $i < count($array); $i++) {\n        for ($j = 0;\
    \ $j < count($array); $j++) {\n            for ($k = 0; $k < count($array); $k++)\
    \ {\n                if (($array[$i] + $array[$j] + $array[$k]) % 3 == 0 && $i\
    \ < $j && $j < $k) {\n                    $output[] = array($array[$i], $array[$j],\
    \ $array[$k]);\n                }\n            }\n        }\n    }\n    return\
    \ count($output);\n}\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $triples = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $triples++;\n                }\n            }\n        }\n    }\n   \
    \ return $triples;\n}\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $result = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $result++;\n                }\n            }\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823842
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $tr\
    \ = 0;\n    $ar = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $ar[] = $i\
    \ * $i - $i + 1;\n    }\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($ar[$i] + $ar[$j] + $ar[$k]) % 3 == 0) {\n         \
    \           $tr++;\n                }\n            }\n        }\n    }\n    return\
    \ $tr;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $ar\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $ar[] = $i * $i - $i + 1;\n\
    \    }\n    $sum = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($ar[$i] + $ar[$j] + $ar[$k]) % 3 == 0) {\n         \
    \           $sum++;\n                }\n            }\n        }\n    }\n    return\
    \ $sum;\n}\necho get_max_triples(5);\nfunction candidate(...$args) {\n    return\
    \ get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n\t$a =\
    \ [1];\n\tfor ($i = 1; $i < $n; $i++) {\n\t\t$a[] = $i * $i - $i + 1;\n\t}\n\t\
    $result = 0;\n\tfor ($i = 0; $i < $n - 2; $i++) {\n\t\tfor ($j = $i + 1; $j <\
    \ $n - 1; $j++) {\n\t\t\tfor ($k = $j + 1; $k < $n; $k++) {\n\t\t\t\tif (($a[$i]\
    \ + $a[$j] + $a[$k]) % 3 == 0) {\n\t\t\t\t\t$result++;\n\t\t\t\t}\n\t\t\t}\n\t\
    \t}\n\t}\n\treturn $result;\n}\necho get_max_triples(5);\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_iu6jiaz.php:35\n\
    Stack trace:\n#0 /tmp/tmp_iu6jiaz.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp_iu6jiaz.php\
    \ on line 35\n"
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $count\
    \ = 0;\n    $arr = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[] = $i\
    \ * $i - $i + 1;\n    }\n    for ($i = 0; $i < count($arr); $i++) {\n        for\
    \ ($j = $i + 1; $j < count($arr); $j++) {\n            for ($k = $j + 1; $k <\
    \ count($arr); $k++) {\n                if(($arr[$i] + $arr[$j] + $arr[$k]) %\
    \ 3 == 0) {\n                    $count++;\n                }\n            }\n\
    \        }\n    }\n    return $count;\n}\nfunction candidate(...$args) {\n   \
    \ return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $arr\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[] = $i * $i - $i + 1;\n\
    \    }\n    $res = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($arr[$i] + $arr[$j] + $arr[$k]) % 3 == 0) {\n      \
    \              $res++;\n                }\n            }\n        }\n    }\n \
    \   return $res;\n}\necho get_max_triples(5) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    '
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n  $triples\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    for ($j = $i + 1; $j < $n; $j++)\
    \ {\n      for ($k = $j + 1; $k < $n; $k++) {\n        if (($i * $i - $i + 1 +\
    \ $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n          $triples++;\n  \
    \      }\n      }\n    }\n  }\n  return $triples;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5wx6h0kn.php:32\n\
    Stack trace:\n#0 /tmp/tmp5wx6h0kn.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp5wx6h0kn.php\
    \ on line 32\n"
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $cnt = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n              \
    \      $cnt++;\n                }\n            }\n        }\n    }\n    return\
    \ $cnt;\n}\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsd4khy2l.php:34\n\
    Stack trace:\n#0 /tmp/tmpsd4khy2l.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpsd4khy2l.php\
    \ on line 34\n"
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    \n\
    }\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpve1y6wqy.php:21\n\
    Stack trace:\n#0 /tmp/tmpve1y6wqy.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpve1y6wqy.php\
    \ on line 21\n"
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $counter\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n;\
    \ $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if\
    \ (($i * $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n    \
    \                $counter++;\n                }\n            }\n        }\n  \
    \  }\n    return $counter;\n}\necho get_max_triples(5);\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwh29nv1a.php:32\n\
    Stack trace:\n#0 /tmp/tmpwh29nv1a.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpwh29nv1a.php\
    \ on line 32\n"
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $triples\
    \ = 0;\n    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i *\
    \ $i - $i + 1;\n    }\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $triples++;\n                }\n            }\n        }\n    }\n   \
    \ return $triples;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    return get_count_triples($a);\n}\n\nfunction candidate(...$args) {\n\
    \    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function get_count_triples()\
    \ in /tmp/tmpepv8himl.php:17\nStack trace:\n#0 /tmp/tmpepv8himl.php(21): get_max_triples(5)\n\
    #1 /tmp/tmpepv8himl.php(25): candidate(5)\n#2 /tmp/tmpepv8himl.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmpepv8himl.php on line 17\n"
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = range(1, $n);\n    $a = array_map(function($x) {\n        return $x * $x -\
    \ $x + 1;\n    }, $a);\n    $cnt = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n\
    \        for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1;\
    \ $k < $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n\
    \                    $cnt++;\n                }\n            }\n        }\n  \
    \  }\n    return $cnt;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppdj1vttv.php:35\n\
    Stack trace:\n#0 /tmp/tmppdj1vttv.php(41): test()\n#1 {main}\n  thrown in /tmp/tmppdj1vttv.php\
    \ on line 35\n"
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    \n\
    }\n\nprint_r(get_max_triples(5));\nfunction candidate(...$args) {\n    return\
    \ get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuspmie1r.php:22\n\
    Stack trace:\n#0 /tmp/tmpuspmie1r.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpuspmie1r.php\
    \ on line 22\n"
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $triples\
    \ = 0;\n    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i *\
    \ $i - $i + 1;\n    }\n    // var_dump($a);\n    $n = count($a);\n    for ($i\
    \ = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n        \
    \    for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j]\
    \ + $a[$k]) % 3 == 0) {\n                    $triples++;\n                }\n\
    \            }\n        }\n    }\n    return $triples;\n}\necho get_max_triples(5);\n\
    function candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i\
    \ + 1;\n    }\n    $s = $a[0] + $a[1] + $a[2];\n    $n = 0;\n    for ($i = 0;\
    \ $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n     \
    \       for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j]\
    \ + $a[$k]) % 3 == 0) {\n                    $n++;\n                }\n      \
    \      }\n        }\n    }\n    return $n;\n}\necho get_max_triples(5);\nfunction\
    \ candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwew9m3zw.php:36\n\
    Stack trace:\n#0 /tmp/tmpwew9m3zw.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpwew9m3zw.php\
    \ on line 36\n"
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $sum\
    \ = 0;\n    for ($i = 1; $i < $n - 1; $i++) {\n        for ($j = $i + 1; $j <\
    \ $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n             \
    \   if (($i * $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n\
    \                    $sum++;\n                }\n            }\n        }\n  \
    \  }\n    return $sum;\n}\n\necho get_max_triples(5) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    '
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    \n\
    }\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_pwgn1sq.php:20\n\
    Stack trace:\n#0 /tmp/tmp_pwgn1sq.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp_pwgn1sq.php\
    \ on line 20\n"
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    if\
    \ ($n < 3) return 0;\n    $a = [1];\n    for ($i = 1; $i < $n; $i++) {\n     \
    \   $a[] = $i * $i - $i + 1;\n    }\n    // print_r($a);\n    $count = 0;\n  \
    \  for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n\
    \            for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i] +\
    \ $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n              \
    \  }\n            }\n        }\n    }\n    return $count;\n}\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp42jlwqt.php:36\n\
    Stack trace:\n#0 /tmp/tmpp42jlwqt.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpp42jlwqt.php\
    \ on line 36\n"
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    $result = [];\n    for ($i = 0; $i < count($a); $i++)\
    \ {\n        for ($j = $i + 1; $j < count($a); $j++) {\n            for ($k =\
    \ $j + 1; $k < count($a); $k++) {\n                if (($a[$i] + $a[$j] + $a[$k])\
    \ % 3 == 0) {\n                    $count++;\n                    $result[] =\
    \ [$a[$i], $a[$j], $a[$k]];\n                }\n            }\n        }\n   \
    \ }\n    print_r($result);\n    return $count;\n}\n\n$n = 5;\necho get_max_triples($n);\n\
    function candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => Array\n        (\n            [0] => 1\n         \
    \   [1] => 7\n            [2] => 13\n        )\n\n)\n1Array\n(\n    [0] => Array\n\
    \        (\n            [0] => 1\n            [1] => 7\n            [2] => 13\n\
    \        )\n\n)\nArray\n(\n    [0] => Array\n        (\n            [0] => 1\n\
    \            [1] => 7\n            [2] => 13\n        )\n\n    [1] => Array\n\
    \        (\n            [0] => 1\n            [1] => 7\n            [2] => 31\n\
    \        )\n\n    [2] => Array\n        (\n            [0] => 1\n            [1]\
    \ => 13\n            [2] => 31\n        )\n\n    [3] => Array\n        (\n   \
    \         [0] => 7\n            [1] => 13\n            [2] => 31\n        )\n\n\
    )\nArray\n(\n    [0] => Array\n        (\n            [0] => 1\n            [1]\
    \ => 7\n            [2] => 13\n        )\n\n    [1] => Array\n        (\n    \
    \        [0] => 1\n            [1] => 7\n            [2] => 31\n        )\n\n\
    \    [2] => Array\n        (\n            [0] => 1\n            [1] => 7\n   \
    \         [2] => 43\n        )\n\n    [3] => Array\n        (\n            [0]\
    \ => 1\n            [1] => 7\n            [2] => 73\n        )\n\n    [4] => Array\n\
    \        (\n            [0] => 1\n            [1] => 7\n            [2] => 91\n\
    \        )\n\n    [5] => Array\n        (\n            [0] => 1\n            [1]\
    \ => 13\n            [2] => 31\n        )\n\n    [6] => Array\n        (\n   \
    \         [0] => 1\n            [1] => 13\n            [2] => 43\n        )\n\n\
    \    [7] => Array\n        (\n            [0] => 1\n            [1] => 13\n  \
    \          [2] => 73\n        )\n\n    [8] => Array\n        (\n            [0]\
    \ => 1\n            [1] => 13\n            [2] => 91\n        )\n\n    [9] =>\
    \ Array\n        (\n            [0] => 1\n            [1] => 31\n            [2]\
    \ => 43\n        )\n\n    [10] => Array\n        (\n            [0] => 1\n   \
    \         [1] => 31\n            [2] => 73\n        )\n\n    [11] => Array\n \
    \       (\n            [0] => 1\n            [1] => 31\n            [2] => 91\n\
    \        )\n\n    [12] => Array\n        (\n            [0] => 1\n           \
    \ [1] => 43\n            [2] => 73\n        )\n\n    [13] => Array\n        (\n\
    \            [0] => 1\n         "
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n  $arr\
    \ = range(1, $n);\n  $arr = array_map(function($x) {\n    return $x * $x - $x\
    \ + 1;\n  }, $arr);\n  $result = 0;\n  for ($i = 0; $i < $n - 2; $i++) {\n   \
    \ for ($j = $i + 1; $j < $n - 1; $j++) {\n      for ($k = $j + 1; $k < $n; $k++)\
    \ {\n        if (($arr[$i] + $arr[$j] + $arr[$k]) % 3 === 0) {\n          $result++;\n\
    \        }\n      }\n    }\n  }\n  return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    //\
    \ if ($n < 3) {\n    //     return 0;\n    // }\n    // $i = 1;\n    // $result\
    \ = 0;\n    // while ($i < $n - 1) {\n    //     $j = $i + 1;\n    //     while\
    \ ($j < $n) {\n    //         $k = $j + 1;\n    //         while ($k <= $n) {\n\
    \    //             if ($i * $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1\
    \ % 3 == 0) {\n    //                 $result++;\n    //             }\n    //\
    \             $k++;\n    //         }\n    //         $j++;\n    //     }\n  \
    \  //     $i++;\n    // }\n    // return $result;\n    $a = [];\n    $result =\
    \ 0;\n    for ($i = 1; $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n\
    \    }\n    for ($i = 1; $i < $n - 1; $i++) {\n        for ($j = $i + 1; $j <\
    \ $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n             \
    \   if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $result++;\n\
    \                }\n            }\n        }\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $nums\
    \ = range(1, $n);\n    for ($i = 0; $i < $n; $i++) {\n        $nums[$i] = $nums[$i]\
    \ * $nums[$i] - $nums[$i] + 1;\n    }\n    $triples = 0;\n    for ($i = 0; $i\
    \ < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n        \
    \    for ($k = $j + 1; $k < $n; $k++) {\n                if (($nums[$i] + $nums[$j]\
    \ + $nums[$k]) % 3 == 0) {\n                    $triples++;\n                }\n\
    \            }\n        }\n    }\n    return $triples;\n}\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n  $triples\
    \ = 0;\n  $values = array();\n  for ($i = 1; $i <= $n; $i++) {\n    $values[]\
    \ = $i * $i - $i + 1;\n  }\n  $length = count($values);\n  for ($i = 0; $i < $length;\
    \ $i++) {\n    for ($j = $i + 1; $j < $length; $j++) {\n      for ($k = $j + 1;\
    \ $k < $length; $k++) {\n        if (($values[$i] + $values[$j] + $values[$k])\
    \ % 3 == 0) {\n          $triples++;\n        }\n      }\n    }\n  }\n  return\
    \ $triples;\n}\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = range(1, $n);\n    $count = 0;\n    foreach ($a as $i => $a1) {\n        for\
    \ ($j = $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a1 + $a[$j] + $a[$k]) % 3 == 0) {\n               \
    \     $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n$n = 5;\necho get_max_triples($n);\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkjj7ugsz.php:33\n\
    Stack trace:\n#0 /tmp/tmpkjj7ugsz.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpkjj7ugsz.php\
    \ on line 33\n"
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $count\
    \ = 0;\n    $arr = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[]\
    \ = $i * $i - $i + 1;\n    }\n    for ($i = 0; $i < count($arr); $i++) {\n   \
    \     for ($j = $i + 1; $j < count($arr); $j++) {\n            for ($k = $j +\
    \ 1; $k < count($arr); $k++) {\n                if (($arr[$i] + $arr[$j] + $arr[$k])\
    \ % 3 == 0) {\n                    $count++;\n                }\n            }\n\
    \        }\n    }\n    return $count;\n}\necho \"<pre>\";\necho get_max_triples(5);\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: <pre>1</pre>
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n\necho get_max_triples(5) . PHP_EOL;\necho get_max_triples(7) .\
    \ PHP_EOL;\necho get_max_triples(12) . PHP_EOL;\n\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    10

    60

    '
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $count\
    \ = 0;\n    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i *\
    \ $i - $i + 1;\n    }\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) $count++;\n    \
    \        }\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n  if ($n\
    \ < 3) {\n    return 0;\n  }\n  $arr = [];\n  for ($i = 1; $i <= $n; $i++) {\n\
    \    $arr[] = $i * $i - $i + 1;\n  }\n  $result = 0;\n  for ($i = 0; $i < $n -\
    \ 2; $i++) {\n    for ($j = $i + 1; $j < $n - 1; $j++) {\n      for ($k = $j +\
    \ 1; $k < $n; $k++) {\n        if (($arr[$i] + $arr[$j] + $arr[$k]) % 3 === 0)\
    \ {\n          $result++;\n        }\n      }\n    }\n  }\n  return $result;\n\
    }\necho get_max_triples(5);\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n\t$triple_count\
    \ = 0;\n\tfor ($i = 1; $i < $n - 1; $i++) {\n\t\tfor ($j = $i + 1; $j < $n; $j++)\
    \ {\n\t\t\tfor ($k = $j + 1; $k <= $n; $k++) {\n\t\t\t\tif (($i * $i - $i + 1)\
    \ + ($j * $j - $j + 1) + ($k * $k - $k + 1) % 3 == 0) {\n\t\t\t\t\t$triple_count++;\n\
    \t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn $triple_count;\n}\necho get_max_triples(5);\n\
    function candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_wg8e8qn.php:31\n\
    Stack trace:\n#0 /tmp/tmp_wg8e8qn.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp_wg8e8qn.php\
    \ on line 31\n"
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $result = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $result++;\n                }\n            }\n        }\n    }\n    return\
    \ $result;\n}\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    if($n\
    \ < 3) return 0;\n    $res = 0;\n    for($i = 0; $i < $n; $i++) {\n        for($j\
    \ = $i + 1; $j < $n; $j++) {\n            for($k = $j + 1; $k < $n; $k++) {\n\
    \                if(($i * $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) %\
    \ 3 == 0) {\n                    $res++;\n                }\n            }\n \
    \       }\n    }\n    return $res;\n}\necho(get_max_triples(5));\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpme6gr5v5.php:32\n\
    Stack trace:\n#0 /tmp/tmpme6gr5v5.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpme6gr5v5.php\
    \ on line 32\n"
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $arr\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[] = $i * $i - $i + 1;\n\
    \    }\n    $cnt = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($arr[$i] + $arr[$j] + $arr[$k]) % 3 == 0) {\n      \
    \              $cnt++;\n                }\n            }\n        }\n    }\n \
    \   return $cnt;\n}\necho get_max_triples(5);\nfunction candidate(...$args) {\n\
    \    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $sum\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n;\
    \ $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if\
    \ (($i * $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n    \
    \                $sum++;\n                }\n            }\n        }\n    }\n\
    \    return $sum;\n}\n\necho get_max_triples(5) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppvpf05nr.php:33\n\
    Stack trace:\n#0 /tmp/tmppvpf05nr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmppvpf05nr.php\
    \ on line 33\n"
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $count\
    \ = 0;\n    $a = range(1, $n);\n    for ($i = 0; $i < $n; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5);\nfunction candidate(...$args) {\n    return\
    \ get_max_triples(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 36)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkcs_krhy.php:32\n\
    Stack trace:\n#0 /tmp/tmpkcs_krhy.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpkcs_krhy.php\
    \ on line 32\n"
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $result\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n;\
    \ $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if\
    \ (($i * $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n    \
    \                $result++;\n                }\n            }\n        }\n   \
    \ }\n    return $result;\n}\n\necho get_max_triples(5);\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp99hq61t.php:33\n\
    Stack trace:\n#0 /tmp/tmpp99hq61t.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpp99hq61t.php\
    \ on line 33\n"
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $trs\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n;\
    \ $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if\
    \ (($i * $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n    \
    \                $trs++;\n                }\n            }\n        }\n    }\n\
    \    return $trs;\n}\n$n = 5;\necho get_max_triples($n);\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeup96rc2.php:33\n\
    Stack trace:\n#0 /tmp/tmpeup96rc2.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpeup96rc2.php\
    \ on line 33\n"
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [1];\n    for ($i = 1; $i < $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $sum = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n              \
    \      $sum++;\n                }\n            }\n        }\n    }\n    return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpadbybrjt.php:34\n\
    Stack trace:\n#0 /tmp/tmpadbybrjt.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpadbybrjt.php\
    \ on line 34\n"
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n\n}\n\
    function candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfqjtxwjn.php:20\n\
    Stack trace:\n#0 /tmp/tmpfqjtxwjn.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpfqjtxwjn.php\
    \ on line 20\n"
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $num\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $num[] = $i * $i - $i + 1;\n\
    \    }\n    $result = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($num[$i] + $num[$j] + $num[$k]) % 3 == 0) {\n      \
    \              $result++;\n                }\n            }\n        }\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    \n\
    }\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_pwgn1sq.php:20\n\
    Stack trace:\n#0 /tmp/tmp_pwgn1sq.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp_pwgn1sq.php\
    \ on line 20\n"
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = range(1, $n);\n    $res = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $res++;\n                }\n            }\n        }\n    }\n    return\
    \ $res;\n}\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn11o9ri1.php:31\n\
    Stack trace:\n#0 /tmp/tmpn11o9ri1.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpn11o9ri1.php\
    \ on line 31\n"
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n  $result\
    \ = 0;\n  $arr = array();\n  for ($i = 1; $i <= $n; $i++) {\n    $arr[] = $i *\
    \ $i - $i + 1;\n  }\n  for ($i = 0; $i < $n - 2; $i++) {\n    for ($j = $i + 1;\
    \ $j < $n - 1; $j++) {\n      for ($k = $j + 1; $k < $n; $k++) {\n        if (($arr[$i]\
    \ + $arr[$j] + $arr[$k]) % 3 == 0) $result++;\n      }\n    }\n  }\n  return $result;\n\
    }\necho get_max_triples(5);\nfunction candidate(...$args) {\n    return get_max_triples(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n  $result\
    \ = 0;\n  for ($i = 1; $i < $n - 1; $i++) {\n    for ($j = $i + 1; $j < $n; $j++)\
    \ {\n      for ($k = $j + 1; $k <= $n; $k++) {\n        if (($i * $i - $i + 1\
    \ + $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n          $result++;\n \
    \       }\n      }\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    //\
    \ Write your code here\n    // To print results to the standard output you can\
    \ use print\n    // Example: print \"Hello world!\";\n}\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprt8q_nc5.php:22\n\
    Stack trace:\n#0 /tmp/tmprt8q_nc5.php(28): test()\n#1 {main}\n  thrown in /tmp/tmprt8q_nc5.php\
    \ on line 22\n"
  timestamp: 1660028361
- exit_code: 0
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $cnt = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) $cnt++;\n      \
    \      }\n        }\n    }\n    return $cnt;\n}\n\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028361
- exit_code: 255
  program: "<?php\n// You are given a positive integer n. You have to create an integer\
    \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n//\
    \ >>> get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n//\
    \ The only valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $triples = 0;\n    $k = 1;\n    while ($k < $n - 1) {\n        $j\
    \ = $k + 1;\n        while ($j < $n) {\n            if (($a[$k] + $a[$j]) % 3\
    \ === 0) {\n                $triples++;\n            }\n            $j++;\n  \
    \      }\n        $k++;\n    }\n    return $triples;\n}\nfunction candidate(...$args)\
    \ {\n    return get_max_triples(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(5) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 36) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 53361)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplyxdrutn.php:37\n\
    Stack trace:\n#0 /tmp/tmplyxdrutn.php(42): test()\n#1 {main}\n  thrown in /tmp/tmplyxdrutn.php\
    \ on line 37\n"
  timestamp: 1660028361

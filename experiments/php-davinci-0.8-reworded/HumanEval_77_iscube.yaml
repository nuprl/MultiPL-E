name: HumanEval_77_iscube
language: php
prompt: "<?php\n// Write a function that takes an integer a and returns true \n//\
  \ if this ingeger is a cube of some integer number.\n// Note: you may assume the\
  \ input is always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n\
  // false\n// >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n\
  // true\n// >>> iscube(180)\n// false\nfunction iscube($a) {\n"
tests: "function candidate(...$args) {\n    return iscube(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(1) !== true) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(2) !== false) { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(-1) !== true) { throw new Exception(\"Test failed!\"); }\n  \
  \  if (candidate(64) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
  \ (candidate(180) !== false) { throw new Exception(\"Test failed!\"); }\n    if\
  \ (candidate(1000) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
  \ (candidate(0) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1729)\
  \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    return (pow($a, 1/3) - floor(pow($a, 1/3)) == 0);\n}\necho iscube(180);",
  "    $x = sqrt($a);\n    return $x * $x * $x == $a;\n}", "\tif($a == 0 || $a ==\
    \ 1 || $a == -1)\n\t\treturn \"true\";\n\telse {\n\t\t$root = pow($a, 1/3);\n\t\
    \tif($root - floor($root) == 0)\n\t\t\treturn \"true\";\n\t\telse \n\t\t\treturn\
    \ \"false\";\n\t}\n}\necho iscube(4);", "  if ($a == 0) {\n    return true;\n\
    \  }\n  elseif ($a < 0) {\n    $a = -$a;\n  }\n  for ($i = 1; $i < $a; $i++) {\n\
    \    if ($i * $i * $i == $a) {\n      return true;\n    }\n  }\n  return false;\n\
    }\n\nif (iscube(1)) {\n  echo \"true\";\n}\nelse {\n  echo \"false\";\n}", " \
    \   return $a == round(pow($a, 1/3));\n}\nfor ($i = -100; $i < 100; $i++) {\n\
    \    if (iscube($i)) {\n        echo \"$i\\n\";\n    }\n}", "\treturn ($a == (int)pow(pow($a,\
    \ 1/3), 3));\n}\n\necho iscube(1);\necho \"\\n\";\necho iscube(2);\necho \"\\\
    n\";\necho iscube(-1);\necho \"\\n\";\necho iscube(64);\necho \"\\n\";\necho iscube(0);\n\
    echo \"\\n\";\necho iscube(180);\necho \"\\n\";", "    // TODO\n}", "  $i = 1;\n\
    \  while ( $i * $i * $i < $a) {\n    $i = $i + 1;\n  }\n  if ($i * $i * $i ==\
    \ $a) {\n    return true;\n  } else {\n    return false;\n  }\n}\necho iscube(1)\
    \ . \"\\n\";\necho iscube(2) . \"\\n\";\necho iscube(-1) . \"\\n\";\necho iscube(64)\
    \ . \"\\n\";\necho iscube(0) . \"\\n\";\necho iscube(180) . \"\\n\";", "\treturn\
    \ ((int) pow($a, 1/3) == pow($a, 1/3));\n}\n", "    if ($a === 0) return true;\n\
    \    if ($a < 0) return iscube(-1 * $a);\n    $root = 0;\n    $absA = abs($a);\n\
    \    while ($root * $root * $root < $absA) {\n        $root++;\n    }\n    return\
    \ $root * $root * $root === $absA;\n}\n", "    if ($a == 0) {\n        return\
    \ true;\n    }\n    if ($a < 0) {\n        $a = -$a;\n    }\n    $root = round(pow($a,\
    \ 1 / 3));\n    return $root * $root * $root == $a;\n}\necho iscube(1) . PHP_EOL;\n\
    echo iscube(2) . PHP_EOL;\necho iscube(-1) . PHP_EOL;\necho iscube(64) . PHP_EOL;\n\
    echo iscube(0) . PHP_EOL;\necho iscube(180) . PHP_EOL;", "\t$num = (int) pow($a,\
    \ (1/3));\n\tif ($num * $num * $num == $a) {\n\t\treturn \"true\";\n\t} else {\n\
    \t\treturn \"false\";\n\t}\n}\n\necho iscube(1) . \"<br>\";\necho iscube(2) .\
    \ \"<br>\";\necho iscube(-1) . \"<br>\";\necho iscube(64) . \"<br>\";\necho iscube(0)\
    \ . \"<br>\";\necho iscube(180) . \"<br>\";", "\t$root = sqrt($a);\n\tif ($root\
    \ % 1 != 0) {\n\t\treturn false;\n\t} else {\n\t\treturn true;\n\t}\n}\n\necho\
    \ \"iscube(1) = \" . iscube(1) . \"\\n\";\necho \"iscube(2) = \" . iscube(2) .\
    \ \"\\n\";\necho \"iscube(-1) = \" . iscube(-1) . \"\\n\";\necho \"iscube(64)\
    \ = \" . iscube(64) . \"\\n\";\necho \"iscube(0) = \" . iscube(0) . \"\\n\";\n\
    echo \"iscube(180) = \" . iscube(180) . \"\\n\";\n", "\t$result = false;\n\t$x\
    \ = 0;\n\twhile($x * $x * $x <= $a) {\n\t\tif ($x * $x * $x == $a) {\n\t\t\t$result\
    \ = true;\n\t\t\tbreak;\n\t\t}\n\t\t$x++;\n\t}\n\treturn $result;\n}\n", "   \
    \ $temp = $a;\n    if ($a<0) {\n        $temp = -$a;\n    }\n    $root = pow($temp,\
    \ 1/3);\n    if (round($root, 0) == $root) {\n        return true;\n    } else\
    \ {\n        return false;\n    }\n}\n", "\t// convert $a to a string and compare\
    \ it with it's cubed root\n\t$a = (string)$a;\n\t$cubed = $a[0];\n\tfor ($i =\
    \ 1; $i < strlen($a); $i++) {\n\t\t$cubed = $cubed.\"0\";\n\t}\n\t$cubed = (int)$cubed;\n\
    \t$cubed = $cubed * $cubed * $cubed;\n\tif ($cubed == $a) {\n\t\treturn \"true\"\
    ;\n\t} else {\n\t\treturn \"false\";\n\t}\n}\necho iscube(1);\necho iscube(2);\n\
    echo iscube(-1);\necho iscube(64);\necho iscube(0);\necho iscube(180);", "\treturn\
    \ is_int(cbrt($a));\n}\n", "\t// WRITE YOUR CODE HERE\n}", "\tfor ($i = 0; $i\
    \ <= $a; $i++) {\n\t\tif ($i*$i*$i == $a) {\n\t\t\treturn true;\n\t\t}\n\t}\n\t\
    return false;\n}\necho iscube(0);", "\t$base = pow($a, 1/3);\n\treturn $base ==\
    \ floor($base);\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

language: php
name: HumanEval_161_solve
results:
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $r = '';\n    $key = 0;\n    $result = array();\n    $l = strlen($s);\n\
    \    if ($l < 1) return $s;\n    for ($i = 0; $i < $l; $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $key = 1;\n            $result[$i] = strtoupper($s[$i]) == $s[$i]\
    \ ? strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n            $result[$i]\
    \ = $s[$i];\n        }\n    }\n    if ($key === 0) {\n        $result = array_reverse($result);\n\
    \    }\n    foreach ($result as $v) {\n        $r .= $v;\n    }\n    return $r;\n\
    }\n$s = readline(\"Enter a string: \");\nprint_r(solve($s));\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function readline() in\
    \ /tmp/tmpljep977m.php:36\nStack trace:\n#0 {main}\n  thrown in /tmp/tmpljep977m.php\
    \ on line 36\n"
  timestamp: 1659823359
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    if (!preg_match(\"/[a-zA-Z]/\", $s)) {\n        return strrev($s);\n\
    \    }\n    $a = str_split($s);\n    $b = [];\n    foreach ($a as $v) {\n    \
    \    if (ord($v) < 97) {\n            $b[] = chr(ord($v) + 32);\n        } else\
    \ {\n            $b[] = chr(ord($v) - 32);\n        }\n    }\n    return implode(\"\
    \", $b);\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\") !==\
    \ \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#AsdfW^45\"\
    ) !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #$a^D\") !== \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3u56yd6v.php:38\n\
    Stack trace:\n#0 /tmp/tmp3u56yd6v.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp3u56yd6v.php\
    \ on line 38\n"
  timestamp: 1659823359
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $result = \"\";\n    $letters = [\"a\", \"b\", \"c\", \"d\"\
    , \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\"\
    , \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    ];\n    $vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    $consonants = [\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n    $len\
    \ = strlen($s);\n    for ($i = 0; $i < $len; $i++) {\n        if (in_array($s[$i],\
    \ $letters)) {\n            if (in_array($s[$i], $vowels)) {\n               \
    \ $result .= strtoupper($s[$i]);\n            } else {\n                $result\
    \ .= strtolower($s[$i]);\n            }\n        } else {\n            $result\
    \ .= $s[$i];\n        }\n    }\n    return $result;\n}\necho solve(\"ab\") . PHP_EOL;\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Ab\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpek7km5z7.php:39\n\
    Stack trace:\n#0 /tmp/tmpek7km5z7.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpek7km5z7.php\
    \ on line 39\n"
  timestamp: 1659823359
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $res = '';\n    $count = strlen($s);\n    for ($i = 0; $i <\
    \ $count; $i++) {\n        if (preg_match('/[a-zA-Z]/', $s[$i])) {\n         \
    \   $res .= (ctype_upper($s[$i])) ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \        } else {\n            $res .= $s[$i];\n        }\n    }\n    return (preg_match('/[a-zA-Z]/',\
    \ $s)) ? $res : strrev($s);\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined variable $a in /tmp/tmpa10273ue.php on line 38


    Warning: Undefined variable $A in /tmp/tmpa10273ue.php on line 38

    '
  timestamp: 1659823359
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    // if (!is_string($s)) return '';\n    // $strlen = strlen($s);\n\
    \    // $temp = '';\n    // for ($i = 0; $i < $strlen; $i++) {\n    //     if\
    \ (ctype_alpha($s[$i])) {\n    //         $temp .= ($s[$i] === strtoupper($s[$i]))\
    \ ? strtolower($s[$i]) : strtoupper($s[$i]);\n    //     } else {\n    //    \
    \     $temp .= $s[$i];\n    //     }\n    // }\n    // return strrev($temp);\n\
    \    \n    if (!is_string($s)) return '';\n    $strlen = strlen($s);\n    $temp\
    \ = '';\n    for ($i = 0; $i < $strlen; $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $temp .= ($s[$i] === strtoupper($s[$i])) ? strtolower($s[$i])\
    \ : strtoupper($s[$i]);\n        } else {\n            $temp .= $s[$i];\n    \
    \    }\n    }\n    return strrev($temp);\n}\n\nfunction candidate(...$args) {\n\
    \    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpem_q6ype.php:45\n\
    Stack trace:\n#0 /tmp/tmpem_q6ype.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpem_q6ype.php\
    \ on line 45\n"
  timestamp: 1659823359
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $reversed = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n\
    \        if (ctype_alpha($s[$i])) {\n            $reversed .= strtoupper($s[$i])\
    \ == $s[$i] ? strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n   \
    \         $reversed .= $s[$i];\n        }\n    }\n    return $reversed;\n}\n$s\
    \ = \"ab\";\necho solve($s);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "AB\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnsfz3646.php:33\n\
    Stack trace:\n#0 /tmp/tmpnsfz3646.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpnsfz3646.php\
    \ on line 33\n"
  timestamp: 1659823359
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $str = strtolower($s);\n    if ($str == $s) {\n        $str\
    \ = strtoupper($s);\n    }\n    return $str;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk63wkh9_.php:26\n\
    Stack trace:\n#0 /tmp/tmpk63wkh9_.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpk63wkh9_.php\
    \ on line 26\n"
  timestamp: 1659823359
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    if (preg_match(\"/[a-zA-Z]/\", $s)) {\n        return strtolower($s)\
    \ ^ strtoupper($s) ^ $s;\n    }\n    return strrev($s);\n}\necho solve(\"123\"\
    );\necho \"<br>\";\necho solve(\"ab\");\necho \"<br>\";\necho solve(\"#a@C\");\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '321<br>AB<br>#A@c

    Warning: Undefined variable $a in /tmp/tmpso0vrq28.php on line 36


    Warning: Undefined variable $A in /tmp/tmpso0vrq28.php on line 36

    '
  timestamp: 1659823359
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n\t$letters = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n\t$a = str_split($s);\n\t$result = \"\";\n\t$has_letters = false;\n\tforeach\
    \ ($a as $k => $v) {\n\t\tif (strpos($letters, $v) !== false) {\n\t\t\t$has_letters\
    \ = true;\n\t\t\tif (ctype_lower($v)) {\n\t\t\t\t$result .= strtoupper($v);\n\t\
    \t\t} else {\n\t\t\t\t$result .= strtolower($v);\n\t\t\t}\n\t\t} else {\n\t\t\t\
    $result .= $v;\n\t\t}\n\t}\n\tif ($has_letters == false) {\n\t\treturn strrev($s);\n\
    \t}\n\treturn $result;\n}\necho \"<pre>\";\necho solve(\"#a@C\") . \"\\n\";\n\
    echo solve(\"1234\") . \"\\n\";\necho solve(\"@ab\") . \"\\n\";\necho solve(\"\
    12#abc\") . \"\\n\";\necho solve(\"abc#12\") . \"\\n\";\necho solve(\"\") . \"\
    \\n\";\necho \"</pre>\";\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '<pre>#A@c

    4321

    @AB

    12#ABC

    ABC#12


    </pre>

    Warning: Undefined variable $a in /tmp/tmp7lztv58i.php on line 55


    Warning: Undefined variable $A in /tmp/tmp7lztv58i.php on line 55

    '
  timestamp: 1659823359
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    if(preg_match('/[A-Za-z]/', $s)) {\n        return strtolower($s)\
    \ ^ strtoupper($s) ^ $s;\n    }\n    return strrev($s);\n}\n\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined variable $a in /tmp/tmppf7n6z_m.php on line 32


    Warning: Undefined variable $A in /tmp/tmppf7n6z_m.php on line 32

    '
  timestamp: 1659823359
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n\t$len = strlen($s);\n\t$r = '';\n\t$rv = '';\n\tfor ($i = 0; $i\
    \ < $len; $i++) {\n\t\tif ($s[$i] == strtoupper($s[$i])) {\n\t\t\t$rv .= strtolower($s[$i]);\n\
    \t\t} else if ($s[$i] == strtolower($s[$i])) {\n\t\t\t$rv .= strtoupper($s[$i]);\n\
    \t\t} else {\n\t\t\t$rv .= $s[$i];\n\t\t}\n\t}\n\treturn $rv;\n}\necho solve('ab');\n\
    echo solve('#a@C');\necho solve('1234');\n\nfunction candidate(...$args) {\n \
    \   return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "AB#A@c1234\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn71k_5g4.php:39\n\
    Stack trace:\n#0 /tmp/tmpn71k_5g4.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpn71k_5g4.php\
    \ on line 39\n"
  timestamp: 1659823359
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    if (preg_match('/[a-zA-Z]/', $s)) {\n        return strtolower($s)\
    \ ^ strtoupper($s) ^ $s;\n    } else {\n        return strrev($s);\n    }\n}\n\
    \nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined variable $a in /tmp/tmpr0f0p3pt.php on line 33


    Warning: Undefined variable $A in /tmp/tmpr0f0p3pt.php on line 33

    '
  timestamp: 1659823359
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n  $res = '';\n  for ($i = 0; $i < strlen($s); $i++) {\n    if (ctype_alpha($s[$i]))\
    \ {\n      $res .= ctype_upper($s[$i]) ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \    } else {\n      $res .= $s[$i];\n    }\n  }\n  return empty($res) ? strrev($s)\
    \ : $res;\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjpyrf27q.php:32\n\
    Stack trace:\n#0 /tmp/tmpjpyrf27q.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpjpyrf27q.php\
    \ on line 32\n"
  timestamp: 1659823359
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n  $arr = str_split($s);\n  $string = '';\n  for ($i=0; $i < count($arr);\
    \ $i++) { \n    if (ctype_alpha($arr[$i])) {\n      $string .= ctype_upper($arr[$i])\
    \ ? strtolower($arr[$i]) : strtoupper($arr[$i]);\n    } else {\n      $string\
    \ .= $arr[$i];\n    }\n  }\n  return $string;\n}\necho solve(\"aBc\");\necho solve(\"\
    a\");\necho solve(\"#a@C\");\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "AbCA#A@c\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyumi2c_o.php:35\n\
    Stack trace:\n#0 /tmp/tmpyumi2c_o.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpyumi2c_o.php\
    \ on line 35\n"
  timestamp: 1659823359
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $chars = str_split($s);\n    $i = 0;\n    while ($i < count($chars))\
    \ {\n        if (preg_match('/[a-zA-Z]/', $chars[$i])) {\n            $chars[$i]\
    \ = strtolower($chars[$i]) === $chars[$i] ? strtoupper($chars[$i]) : strtolower($chars[$i]);\n\
    \        }\n        $i++;\n    }\n    return implode($chars);\n}\n$s = \"ab\"\
    ;\n$res = solve($s);\necho($res);\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AsDf\")\
    \ !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "AB\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxbuuelsh.php:34\n\
    Stack trace:\n#0 /tmp/tmpxbuuelsh.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpxbuuelsh.php\
    \ on line 34\n"
  timestamp: 1659823359
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $result = '';\n    $is_letter = false;\n    for ($i = 0; $i\
    \ < strlen($s); $i++) {\n        if (preg_match('/[a-zA-Z]/', $s[$i])) {\n   \
    \         $is_letter = true;\n            if (ctype_lower($s[$i])) {\n       \
    \         $result .= strtoupper($s[$i]);\n            } else {\n             \
    \   $result .= strtolower($s[$i]);\n            }\n        } else {\n        \
    \    $result .= $s[$i];\n        }\n    }\n    if (!$is_letter) {\n        $result\
    \ = strrev($result);\n    }\n    return $result;\n}\n\nprint solve(\"1234\") .\
    \ \"\\n\";\nprint solve(\"ab\") . \"\\n\";\nprint solve(\"#a@C\") . \"\\n\";\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '4321

    AB

    #A@c


    Warning: Undefined variable $a in /tmp/tmppzqxazlw.php on line 49


    Warning: Undefined variable $A in /tmp/tmppzqxazlw.php on line 49

    '
  timestamp: 1659823359
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n  $res = '';\n  $len = strlen($s);\n  for ($i = 0; $i < $len; $i++)\
    \ {\n    if (ctype_alpha($s[$i])) {\n      $res .= $s[$i] === strtoupper($s[$i])\
    \ ? strtolower($s[$i]) : strtoupper($s[$i]);\n    } else {\n      $res .= $s[$i];\n\
    \    }\n  }\n  return $res ? $res : strrev($s);\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplvi0wngu.php:32\n\
    Stack trace:\n#0 /tmp/tmplvi0wngu.php(41): test()\n#1 {main}\n  thrown in /tmp/tmplvi0wngu.php\
    \ on line 32\n"
  timestamp: 1659823359
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    if (preg_match(\"/[a-zA-Z]/\", $s)) {\n        $result = '';\n\
    \        for ($i = 0; $i < strlen($s); $i++) {\n            if (ord($s[$i]) >=\
    \ 65 && ord($s[$i]) <= 90) {\n                $result .= chr(ord($s[$i]) + 32);\n\
    \            } else if (ord($s[$i]) >= 97 && ord($s[$i]) <= 122) {\n         \
    \       $result .= chr(ord($s[$i]) - 32);\n            } else {\n            \
    \    $result .= $s[$i];\n            }\n        }\n        return $result;\n \
    \   } else {\n        return strrev($s);\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined variable $a in /tmp/tmpoyudrhgk.php on line 42


    Warning: Undefined variable $A in /tmp/tmpoyudrhgk.php on line 42

    '
  timestamp: 1659823359
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $result = \"\";\n    if(!preg_match(\"/^[A-Za-z]+$/\", $s))\
    \ {\n        return strrev($s);\n    }\n    else {\n        for($i = 0; $i < strlen($s);\
    \ $i++) {\n            if(ctype_upper($s[$i])) {\n                $result .= strtolower($s[$i]);\n\
    \            }\n            else {\n                $result .= strtoupper($s[$i]);\n\
    \            }\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm2uhyycz.php:39\n\
    Stack trace:\n#0 /tmp/tmpm2uhyycz.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpm2uhyycz.php\
    \ on line 39\n"
  timestamp: 1659823359
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n\tif (strlen($s) == 0) {\n\t\treturn $s;\n\t}\n\n\t$s_arr = str_split($s);\n\
    \t$s_arr_len = count($s_arr);\n\t$result = '';\n\tfor ($i = 0; $i < $s_arr_len;\
    \ $i++) {\n\t\tif (ctype_alpha($s_arr[$i])) {\n\t\t\tif (ctype_upper($s_arr[$i]))\
    \ {\n\t\t\t\t$result .= strtolower($s_arr[$i]);\n\t\t\t} else if (ctype_lower($s_arr[$i]))\
    \ {\n\t\t\t\t$result .= strtoupper($s_arr[$i]);\n\t\t\t}\n\t\t} else {\n\t\t\t\
    $result .= $s_arr[$i];\n\t\t}\n\t}\n\n\treturn $result;\n}\n\nvar_dump(solve(\"\
    ab\"));\nvar_dump(solve(\"1234\"));\nvar_dump(solve(\"#a@C\"));\nvar_dump(solve(\"\
    \"));\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string(2) \"AB\"\nstring(4) \"1234\"\nstring(4) \"#A@c\"\nstring(0) \"\"\
    \n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp2g2cf6n.php:47\n\
    Stack trace:\n#0 /tmp/tmpp2g2cf6n.php(56): test()\n#1 {main}\n  thrown in /tmp/tmpp2g2cf6n.php\
    \ on line 47\n"
  timestamp: 1659823359
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $letters = preg_split('/[^a-zA-Z]/', $s, -1, PREG_SPLIT_NO_EMPTY);\n\
    \    $s = str_split($s);\n    foreach ($s as $key => $value) {\n        if (ctype_alpha($value))\
    \ {\n            $s[$key] = strtolower($value) == $value ? strtoupper($value)\
    \ : strtolower($value);\n        }\n    }\n    return count($letters) > 0 ? implode('',\
    \ $s) : strrev($s);\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: strrev(): Argument #1 ($string) must\
    \ be of type string, array given in /tmp/tmpcxl30rcw.php:22\nStack trace:\n#0\
    \ /tmp/tmpcxl30rcw.php(22): strrev(Array)\n#1 /tmp/tmpcxl30rcw.php(26): solve(Array)\n\
    #2 /tmp/tmpcxl30rcw.php(31): candidate('1234')\n#3 /tmp/tmpcxl30rcw.php(40): test()\n\
    #4 {main}\n  thrown in /tmp/tmpcxl30rcw.php on line 22\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    if(is_string($s)){\n        if(ctype_alpha($s)){\n        \
    \    return strtoupper($s);\n        }\n        if(ctype_digit($s)){\n       \
    \     return strrev($s);\n        }\n        if(ctype_space($s)){\n          \
    \  return;\n        }\n        $characters = str_split($s);\n        foreach($characters\
    \ as $character){\n            if(ctype_alpha($character)){\n                if(ctype_upper($character)){\n\
    \                    $character = strtolower($character);\n                }\n\
    \                else{\n                    $character = strtoupper($character);\n\
    \                }\n            }\n            $output .= $character;\n      \
    \  }\n        return $output;\n    }\n    else{\n        return $s;\n    }\n}\n\
    \nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbtulwjaw.php:49\n\
    Stack trace:\n#0 /tmp/tmpbtulwjaw.php(59): test()\n#1 {main}\n  thrown in /tmp/tmpbtulwjaw.php\
    \ on line 49\n"
  timestamp: 1659978290
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    if(!$s) return \"\";\n    if(!preg_match(\"/[a-zA-Z]/\", $s)){\n\
    \        return strrev($s);\n    }\n    else{\n        $mapped_string = str_split($s);\n\
    \        foreach($mapped_string as $char){\n            if(preg_match(\"/[a-zA-Z]/\"\
    , $char)){\n                if(ctype_lower($char)){\n                    $char\
    \ = strtoupper($char);\n                }\n                else if(ctype_upper($char)){\n\
    \                    $char = strtolower($char);\n                }\n         \
    \   }\n            $chars[] = $char;\n        }\n        return implode(\"\",\
    \ $chars);\n    }\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined variable $a in /tmp/tmp65zcy_4t.php on line 47


    Warning: Undefined variable $A in /tmp/tmp65zcy_4t.php on line 47

    '
  timestamp: 1659978290
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $result = '';\n    $flag = 0;\n    for ($i = 0; $i < strlen($s);\
    \ $i++) {\n        if ($s[$i] >= 'a' && $s[$i] <= 'z') {\n            $result\
    \ .= strtoupper($s[$i]);\n            $flag = 1;\n        } else if ($s[$i] >=\
    \ 'A' && $s[$i] <= 'Z') {\n            $result .= strtolower($s[$i]);\n      \
    \      $flag = 1;\n        } else {\n            $result .= $s[$i];\n        }\n\
    \    }\n    if ($flag == 0) {\n        $result = strrev($result);\n    }\n   \
    \ return $result;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined variable $a in /tmp/tmpm8nhvxw6.php on line 44


    Warning: Undefined variable $A in /tmp/tmpm8nhvxw6.php on line 44

    '
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $s = str_split($s);\n    for ($i = 0; $i < count($s); $i++)\
    \ {\n        if (ctype_alpha($s[$i])) {\n            $s[$i] = ctype_upper($s[$i])\
    \ ? strtolower($s[$i]) : strtoupper($s[$i]);\n        }\n    }\n    return implode('',\
    \ $s);\n}\n\necho solve(\"1234\") . \"\\n\";\necho solve(\"ab\") . \"\\n\";\n\
    echo solve(\"#a@C\") . \"\\n\";\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1234\nAB\n#A@c\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjsmjzsab.php:33\n\
    Stack trace:\n#0 /tmp/tmpjsmjzsab.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpjsmjzsab.php\
    \ on line 33\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $letters = preg_split('/[^a-zA-Z]/', $s, -1, PREG_SPLIT_NO_EMPTY);\n\
    \    $result = '';\n    if(count($letters) == 0) return strrev($s);\n    foreach($letters\
    \ as $l) {\n        $result .= strtoupper($l) == $l ? strtolower($l) : strtoupper($l);\n\
    \    }\n    return $result;\n}\n\nprint_r(solve(\"1234\")); //4321\necho PHP_EOL;\n\
    print_r(solve(\"ab\")); //AB\necho PHP_EOL;\nprint_r(solve(\"#a@C\")); //#A@c\n\
    echo PHP_EOL;\nprint_r(solve(\"#A@c\")); //#a@c\necho PHP_EOL;\nprint_r(solve(\"\
    #a@C#A@c\")); //#a@c#a@c\necho PHP_EOL;\nprint_r(solve(\"!@#$\")); //!@#$\necho\
    \ PHP_EOL;\nprint_r(solve(\"\")); //\necho PHP_EOL;\nprint_r(solve(\"ab!@#$%c\"\
    )); //AB!@#$%C\necho PHP_EOL;\nprint_r(solve(\"aB!@#$%C\")); //Ab!@#$%c\necho\
    \ PHP_EOL;\nprint_r(solve(\"ab!@#$%cab!@#$%c\")); //AB!@#$%CAB!@#$%C\necho PHP_EOL;\n\
    print_r(solve(\"aB!@#$%CaB!@#$%C\")); //Ab!@#$%cab!@#$%c\necho PHP_EOL;\nprint_r(solve(\"\
    10\")); //01\necho PHP_EOL;\nprint_r(solve(\"10!@#$%\")); //01!@#$%\necho PHP_EOL;\n\
    print_r(solve(\"!@#$%10\")); //!@#$%01\necho PHP_EOL;\n\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "4321\nAB\nAc\naC\nAcaC\n$#@!\n\nABC\nABc\nABCABC\nABCABc\n01\n%$#@!01\n\
    01%$#@!\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxmkxhmoj.php:58\n\
    Stack trace:\n#0 /tmp/tmpxmkxhmoj.php(68): test()\n#1 {main}\n  thrown in /tmp/tmpxmkxhmoj.php\
    \ on line 58\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $toReplace = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"\
    g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"\
    r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n    $replacing\
    \ = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"\
    K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"\
    V\", \"W\", \"X\", \"Y\", \"Z\"];\n    $toReplaceToUpper = [\"A\", \"B\", \"C\"\
    , \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\"\
    , \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\"\
    , \"Z\"];\n    $replacingToUpper = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\",\
    \ \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\"\
    , \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n    $str_arr\
    \ = str_split($s);\n    $match = array_intersect($str_arr, $toReplace);\n    $matchToUpper\
    \ = array_intersect($str_arr, $toReplaceToUpper);\n    if(count($match) > 0 ||\
    \ count($matchToUpper) > 0) {\n        $result = str_replace($toReplace, $replacing,\
    \ $s);\n        $result = str_replace($toReplaceToUpper, $replacingToUpper, $result);\n\
    \    } else {\n        $result = strrev($s);\n    }\n    return $result;\n}\n\n\
    $s = \"1234\";\necho solve($\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting variable or
    "{" or "$" in /tmp/tmpgyicmodi.php on line 33

    '
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n  $inputString = str_split($s);\n  $inputString = array_map('strtolower',\
    \ $inputString);\n  $outputString = \"\";\n  $letterCount = 0;\n  foreach ($inputString\
    \ as $char) {\n    if(isLetter($char)) {\n      $letterCount++;\n      $outputString\
    \ .= convertCase($char);\n    } else {\n      $outputString .= $char;\n    }\n\
    \  }\n  if ($letterCount === 0) {\n    $outputString = strrev($outputString);\n\
    \  }\n  return $outputString;\n}\n\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AsDf\")\
    \ !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function isLetter() in\
    \ /tmp/tmpbv9gk962.php:20\nStack trace:\n#0 /tmp/tmpbv9gk962.php(34): solve('AsDf')\n\
    #1 /tmp/tmpbv9gk962.php(38): candidate('AsDf')\n#2 /tmp/tmpbv9gk962.php(48): test()\n\
    #3 {main}\n  thrown in /tmp/tmpbv9gk962.php on line 20\n"
  timestamp: 1659978290
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $pos = strcspn($s, 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ');\n\
    \    if ($pos === strlen($s)) {\n        return strrev($s);\n    }\n    for ($i\
    \ = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i])) {\n        \
    \    $s[$i] = ctype_upper($s[$i]) ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \        }\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AsDf\")\
    \ !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined variable $a in /tmp/tmpmv_2pzf1.php on line 38


    Warning: Undefined variable $A in /tmp/tmpmv_2pzf1.php on line 38

    '
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $arr=[];\n    $len=strlen($s);\n    $flag=false;\n    for($i=0;$i<$len;$i++){\n\
    \        if(ctype_alpha($s[$i])){\n            $flag=true;\n            $arr[]=strtolower($s[$i]);\n\
    \        }else{\n            $arr[]=$s[$i];\n        }\n    }\n    if($flag){\n\
    \        return implode('',array_reverse($arr));\n    }else{\n        return strrev($s);\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\") !==\
    \ \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#AsdfW^45\"\
    ) !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #$a^D\") !== \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwk4p4sgy.php:38\n\
    Stack trace:\n#0 /tmp/tmpwk4p4sgy.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpwk4p4sgy.php\
    \ on line 38\n"
  timestamp: 1659978290
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $len = strlen($s);\n    $result = \"\";\n    $isText = false;\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if (preg_match(\"/[a-zA-Z]/\", $s[$i]))\
    \ {\n            $isText = true;\n            if (ctype_lower($s[$i]))\n     \
    \           $result .= strtoupper($s[$i]);\n            else\n               \
    \ $result .= strtolower($s[$i]);\n        } else\n            $result .= $s[$i];\n\
    \    }\n    if ($isText)\n        return $result;\n    else\n        return strrev($s);\n\
    }\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined variable $a in /tmp/tmpg6x2y8y0.php on line 44


    Warning: Undefined variable $A in /tmp/tmpg6x2y8y0.php on line 44

    '
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    if (ctype_alnum($s)) {\n        return strrev($s);\n    }\n\
    \    $s = str_split($s);\n    $r = '';\n    foreach ($s as $char) {\n        if\
    \ (ctype_alpha($char)) {\n            $r .= $char === strtoupper($char) ? strtolower($char)\
    \ : strtoupper($char);\n        } else {\n            $r .= $char;\n        }\n\
    \    }\n    return $r;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp01jhdsij.php:34\n\
    Stack trace:\n#0 /tmp/tmp01jhdsij.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp01jhdsij.php\
    \ on line 34\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $low = range('a', 'z');\n    $upper = range('A', 'Z');\n  \
    \  $res = \"\";\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (in_array($s[$i],\
    \ $low)) {\n            $res .= strtoupper($s[$i]);\n        } else if (in_array($s[$i],\
    \ $upper)) {\n            $res .= strtolower($s[$i]);\n        } else {\n    \
    \        $res .= $s[$i];\n        }\n    }\n    return $res;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6589dija.php:35\n\
    Stack trace:\n#0 /tmp/tmp6589dija.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp6589dija.php\
    \ on line 35\n"
  timestamp: 1659978290
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    if (strlen($s) == 0) {\n        return $s;\n    }\n\n    $str\
    \ = '';\n    $hasLetters = false;\n    for ($i = 0; $i < strlen($s); $i++) {\n\
    \        if (ctype_alpha($s[$i])) {\n            $hasLetters = true;\n       \
    \     if (ctype_upper($s[$i])) {\n                $str .= strtolower($s[$i]);\n\
    \            } else {\n                $str .= strtoupper($s[$i]);\n         \
    \   }\n        } else {\n            $str .= $s[$i];\n        }\n    }\n\n   \
    \ if ($hasLetters) {\n        return $str;\n    } else {\n        return strrev($s);\n\
    \    }\n}\n\necho solve(\"1234\");\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AsDf\")\
    \ !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '4321

    Warning: Undefined variable $a in /tmp/tmpxxu69gkk.php on line 53


    Warning: Undefined variable $A in /tmp/tmpxxu69gkk.php on line 53

    '
  timestamp: 1659978290
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $returnString = \"\";\n    $letters = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (strpos($letters, strtolower($s[$i]))\
    \ !== false) {\n            if (strtolower($s[$i]) == $s[$i]) {\n            \
    \    $returnString .= strtoupper($s[$i]);\n            } else {\n            \
    \    $returnString .= strtolower($s[$i]);\n            }\n        } else {\n \
    \           $returnString .= $s[$i];\n        }\n    }\n    if ($returnString\
    \ == $s) {\n        return strrev($returnString);\n    }\n    return $returnString;\n\
    }\n$tests = [\n    \"1234\",\n    \"ab\",\n    \"#a@C\",\n    \"abcD\",\n    \"\
    1234\",\n    \"123\",\n    \"abcd1234efgh\"\n];\nforeach ($tests as $test) {\n\
    \    echo solve($test) . \"\\n\";\n}\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AsDf\")\
    \ !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '4321

    AB

    #A@c

    ABCd

    4321

    321

    ABCD1234EFGH


    Warning: Undefined variable $a in /tmp/tmpttcd7lzy.php on line 56


    Warning: Undefined variable $A in /tmp/tmpttcd7lzy.php on line 56

    '
  timestamp: 1659978290
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n  // Write your code here\n  if(preg_match(\"/[a-zA-Z]/\", $s)){\n\
    \    $strArray = str_split($s);\n    foreach($strArray as $v){\n      if(ctype_alpha($v)){\n\
    \        $v = strtolower($v) == $v ? strtoupper($v) : strtolower($v);\n      }\n\
    \      $result[] = $v;\n    }\n    return implode(\"\", $result);\n  }\n  return\
    \ strrev($s);\n}\n\necho solve(\"aBc\");\nfunction candidate(...$args) {\n   \
    \ return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'AbC

    Warning: Undefined variable $a in /tmp/tmpcsc00u4l.php on line 41


    Warning: Undefined variable $A in /tmp/tmpcsc00u4l.php on line 41

    '
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    if (strlen($s) == 0) {\n        return $s;\n    }\n    $res\
    \ = \"\";\n    for ($i = 0; $i < strlen($s); $i++) {\n        if ($s[$i] == 'a'\
    \ || $s[$i] == 'A' || $s[$i] == 'e' || $s[$i] == 'E' || $s[$i] == 'i' || $s[$i]\
    \ == 'I' || $s[$i] == 'o' || $s[$i] == 'O' || $s[$i] == 'u' || $s[$i] == 'U')\
    \ {\n            $res .= strtoupper($s[$i]);\n        } else if (ctype_upper($s[$i]))\
    \ {\n            $res .= strtolower($s[$i]);\n        } else {\n            $res\
    \ .= $s[$i];\n        }\n    }\n    return $res;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplwp7sqpy.php:35\n\
    Stack trace:\n#0 /tmp/tmplwp7sqpy.php(45): test()\n#1 {main}\n  thrown in /tmp/tmplwp7sqpy.php\
    \ on line 35\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    //..\n    if(ctype_alpha($s)){\n        $lwr = strtolower($s);\n\
    \        $upr = strtoupper($s);\n        for($i = 0; $i<strlen($s); $i++){\n \
    \           if($s[$i] == $lwr[$i]){\n                $s[$i] = $upr[$i];\n    \
    \        }else{\n                $s[$i] = $lwr[$i];\n            }\n        }\n\
    \    }else{\n        $s = strrev($s);\n    }\n    return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5o76sqsd.php:39\n\
    Stack trace:\n#0 /tmp/tmp5o76sqsd.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp5o76sqsd.php\
    \ on line 39\n"
  timestamp: 1659978290
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n  $low = \"abcdefghijklmnopqrstuvwxyz\";\n  $upp = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n  $out = \"\";\n  $letters = 0;\n  for ($i = 0; $i < strlen($s); $i++) {\n\
    \    if (strpos($low, $s[$i]) !== false) {\n      $out .= strtoupper($s[$i]);\n\
    \      $letters++;\n    } else if (strpos($upp, $s[$i]) !== false) {\n      $out\
    \ .= strtolower($s[$i]);\n      $letters++;\n    } else {\n      $out .= $s[$i];\n\
    \    }\n  }\n  if ($letters === 0) {\n    return strrev($out);\n  }\n  return\
    \ $out;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\") !==\
    \ \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#AsdfW^45\"\
    ) !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #$a^D\") !== \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined variable $a in /tmp/tmpa3af4rm6.php on line 46


    Warning: Undefined variable $A in /tmp/tmpa3af4rm6.php on line 46

    '
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $newString = \"\";\n    for ($i = 0; $i < strlen($s); $i++)\
    \ {\n        if (ctype_alpha($s[$i])) {\n            if (ctype_upper($s[$i]))\
    \ {\n                $newString .= strtolower($s[$i]);\n            } else {\n\
    \                $newString .= strtoupper($s[$i]);\n            }\n        } else\
    \ {\n            $newString .= $s[$i];\n        }\n    }\n    if (ctype_alpha($newString))\
    \ {\n        return strrev($newString);\n    } else {\n        return $newString;\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\") !==\
    \ \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#AsdfW^45\"\
    ) !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #$a^D\") !== \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuwdnbs4d.php:39\n\
    Stack trace:\n#0 /tmp/tmpuwdnbs4d.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpuwdnbs4d.php\
    \ on line 39\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    // $arr = str_split($s);\n    // for ($i=0; $i < strlen($s);\
    \ $i++) { \n    //     if (preg_match('/[A-Za-z]/', $arr[$i])) {\n    //     \
    \    if (preg_match('/[A-Z]/', $arr[$i])) {\n    //             $arr[$i] = strtolower($arr[$i]);\n\
    \    //         } else {\n    //             $arr[$i] = strtoupper($arr[$i]);\n\
    \    //         }\n    //     }\n    // }\n    // return join($arr);\n    return\
    \ preg_replace_callback('/[a-z]/i', function ($m) {\n        return strtoupper($m[0])\
    \ ^ strtolower($m[0]) ^ $m[0];\n    }, $s);\n}\necho solve(\"#a@C\");\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "#A@c\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp45n2g5m8.php:37\n\
    Stack trace:\n#0 /tmp/tmp45n2g5m8.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp45n2g5m8.php\
    \ on line 37\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $reversed_string = \"\";\n    for ($i = 0; $i < strlen($s);\
    \ $i++) {\n        if (ctype_alpha($s[$i])) {\n            $reversed_string .=\
    \ $s[$i] ^ ' ';\n        } else {\n            $reversed_string .= $s[$i];\n \
    \       }\n    }\n    return strrev($reversed_string);\n}\n\necho solve(\"## aa\"\
    );\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "AA ##\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8xvtwu5h.php:33\n\
    Stack trace:\n#0 /tmp/tmp8xvtwu5h.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp8xvtwu5h.php\
    \ on line 33\n"
  timestamp: 1659978290
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    if (preg_match('/[a-zA-Z]/', $s)) {\n        return strtolower($s)\
    \ ^ strtoupper($s) ^ $s;\n    }\n    return strrev($s);\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined variable $a in /tmp/tmpsr5k92gp.php on line 31


    Warning: Undefined variable $A in /tmp/tmpsr5k92gp.php on line 31

    '
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $newString = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n\
    \        if (!ctype_alpha($s[$i])) {\n            $newString .= $s[$i];\n    \
    \    } else {\n            $newString .= $s[$i] === strtoupper($s[$i]) ? strtolower($s[$i])\
    \ : strtoupper($s[$i]);\n        }\n    }\n    return $newString;\n}\necho solve(\"\
    1234\") . \"\\n\";\necho solve(\"ab\") . \"\\n\";\necho solve(\"#a@C\") . \"\\\
    n\";\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1234\nAB\n#A@c\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6pishltl.php:34\n\
    Stack trace:\n#0 /tmp/tmp6pishltl.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp6pishltl.php\
    \ on line 34\n"
  timestamp: 1659978290
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    if (!preg_match('/[a-zA-Z]/', $s))\n        return strrev($s);\n\
    \    $new = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\n\
    \            $new .= strtoupper($s[$i]) == $s[$i] ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \        else\n            $new .= $s[$i];\n    }\n    return $new;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined variable $a in /tmp/tmpbbkde_cc.php on line 37


    Warning: Undefined variable $A in /tmp/tmpbbkde_cc.php on line 37

    '
  timestamp: 1659978290
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n  if (preg_match('/[a-zA-Z]/', $s)) {\n    return strtolower($s)\
    \ ^ strtoupper($s) ^ $s;\n  }\n  return strrev($s);\n}\n\n$s = '1234';\nvar_dump(solve($s));\n\
    \n$s = 'ab';\nvar_dump(solve($s));\n\n$s = '#a@C';\nvar_dump(solve($s));\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'string(4) "4321"

    string(2) "AB"

    string(4) "#A@c"


    Warning: Undefined variable $a in /tmp/tmpmw76a3he.php on line 40


    Warning: Undefined variable $A in /tmp/tmpmw76a3he.php on line 40

    '
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n\t$len = strlen($s);\n\t$result = '';\n\tfor ($i = 0; $i < $len;\
    \ $i++) {\n\t\tif (ctype_alpha($s[$i])) {\n\t\t\t$result .= strtoupper($s[$i])\
    \ === $s[$i] ? strtolower($s[$i]) : strtoupper($s[$i]);\n\t\t} else {\n\t\t\t\
    $result .= $s[$i];\n\t\t}\n\t}\n\treturn $result;\n}\n$s = '#a@C';\nprint_r(solve($s));\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "#A@c\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc3rwqezp.php:34\n\
    Stack trace:\n#0 /tmp/tmpc3rwqezp.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpc3rwqezp.php\
    \ on line 34\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $count = 0;\n    for ($i = 0; $i < strlen($s); $i++) {\n  \
    \      if (ctype_alpha($s[$i])) {\n            $count++;\n        }\n    }\n \
    \   if ($count != 0) {\n        $s = strtolower($s);\n        $s = str_split($s);\n\
    \        $s = array_map(function($n) {\n            if (ctype_alpha($n)) {\n \
    \               $n = strtoupper($n);\n            }\n            return $n;\n\
    \        }, $s);\n        $s = implode($s);\n    } else {\n        $s = strrev($s);\n\
    \    }\n    return $s;\n}\n$s = \"1234\";\necho solve($s);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "4321\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3e0ha55j.php:43\n\
    Stack trace:\n#0 /tmp/tmp3e0ha55j.php(53): test()\n#1 {main}\n  thrown in /tmp/tmp3e0ha55j.php\
    \ on line 43\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    return preg_replace_callback(\"/[a-zA-Z]/\", function($match)\
    \ {\n        return strtolower($match[0]) === $match[0] ? strtoupper($match[0])\
    \ : strtolower($match[0]);\n    }, $s);\n}\n\nfunction candidate(...$args) {\n\
    \    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkpqgr4gy.php:26\n\
    Stack trace:\n#0 /tmp/tmpkpqgr4gy.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpkpqgr4gy.php\
    \ on line 26\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $s = str_split($s);\n    $letters = ['a', 'b', 'c', 'd', 'e',\
    \ 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u',\
    \ 'v', 'w', 'x', 'y', 'z'];\n    $s = array_map(function($x) use ($letters) {\n\
    \        if (in_array($x, $letters)) {\n            return $x == strtoupper($x)\
    \ ? strtolower($x) : strtoupper($x);\n        }\n        return $x;\n    }, $s);\n\
    \    return join('', $s);\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpigwy4hmf.php:31\n\
    Stack trace:\n#0 /tmp/tmpigwy4hmf.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpigwy4hmf.php\
    \ on line 31\n"
  timestamp: 1659978290
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    if (!preg_match(\"/[a-zA-Z]/\", $s)) {\n        return strrev($s);\n\
    \    }\n    $res = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if\
    \ (ctype_alpha($s[$i])) {\n            $res .= strtoupper($s[$i]) == $s[$i] ?\
    \ strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n            $res\
    \ .= $s[$i];\n        }\n    }\n    return $res;\n}\n\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined variable $a in /tmp/tmpq115eeet.php on line 40


    Warning: Undefined variable $A in /tmp/tmpq115eeet.php on line 40

    '
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n\
    \        if (is_numeric($s[$i])) {\n            $result = $s[$i] . $result;\n\
    \        } else if ($s[$i] == strtoupper($s[$i])) {\n            $result = strtolower($s[$i])\
    \ . $result;\n        } else {\n            $result = strtoupper($s[$i]) . $result;\n\
    \        }\n    }\n    return $result;\n}\n$s = 'ab';\necho solve($s);\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "BA\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph1wxjkeh.php:34\n\
    Stack trace:\n#0 /tmp/tmph1wxjkeh.php(44): test()\n#1 {main}\n  thrown in /tmp/tmph1wxjkeh.php\
    \ on line 34\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n\t$a = '';\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\tif ($s[$i]\
    \ >= 'a' && $s[$i] <= 'z') {\n\t\t\t$a .= strtoupper($s[$i]);\n\t\t} else if ($s[$i]\
    \ >= 'A' && $s[$i] <= 'Z') {\n\t\t\t$a .= strtolower($s[$i]);\n\t\t} else {\n\t\
    \t\t$a .= $s[$i];\n\t\t}\n\t}\n\treturn $a == '' ? strrev($s) : $a;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuze9esz0.php:33\n\
    Stack trace:\n#0 /tmp/tmpuze9esz0.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpuze9esz0.php\
    \ on line 33\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $a = str_split($s);\n    $result = '';\n    foreach ($a as\
    \ $c) {\n        if (preg_match('/[a-z]/i', $c)) {\n            $result .= strtoupper($c)\
    \ == $c ? strtolower($c) : strtoupper($c);\n        } else {\n            $result\
    \ .= $c;\n        }\n    }\n    return strlen($result) ? $result : strrev($s);\n\
    }\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5a7jhire.php:32\n\
    Stack trace:\n#0 /tmp/tmp5a7jhire.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp5a7jhire.php\
    \ on line 32\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    return preg_replace_callback('/[a-z]/i', function($m) {\n \
    \       return strtoupper($m[0]) == $m[0] ? strtolower($m[0]) : strtoupper($m[0]);\n\
    \    }, $s);\n}\n\nvar_dump(solve(\"1234\"));\nvar_dump(solve(\"ab\"));\nvar_dump(solve(\"\
    #a@C\"));\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\") !==\
    \ \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#AsdfW^45\"\
    ) !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #$a^D\") !== \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string(4) \"1234\"\nstring(2) \"AB\"\nstring(4) \"#A@c\"\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpd74o6ehh.php:29\nStack trace:\n\
    #0 /tmp/tmpd74o6ehh.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpd74o6ehh.php\
    \ on line 29\n"
  timestamp: 1659978290
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    if(preg_match(\"/[a-zA-Z]/\", $s)) {\n        $new_str = '';\n\
    \        for($i = 0; $i < strlen($s); $i++) {\n            if(preg_match(\"/[a-z]/\"\
    , $s[$i])) {\n                $new_str .= strtoupper($s[$i]);\n            } elseif(preg_match(\"\
    /[A-Z]/\", $s[$i])) {\n                $new_str .= strtolower($s[$i]);\n     \
    \       } else {\n                $new_str .= $s[$i];\n            }\n       \
    \ }\n        return $new_str;\n    } else {\n        return strrev($s);\n    }\n\
    }\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined variable $a in /tmp/tmpwa1jin5r.php on line 42


    Warning: Undefined variable $A in /tmp/tmpwa1jin5r.php on line 42

    '
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $size = strlen($s);\n    $str = '';\n    for ($i = 0; $i <\
    \ $size; $i++) {\n        if(is_numeric($s[$i])){\n            $str = $s[$i].$str;\n\
    \        }else{\n            if(ctype_lower($s[$i])){\n                $str =\
    \ strtoupper($s[$i]).$str;\n            }else{\n                $str = strtolower($s[$i]).$str;\n\
    \            }\n        }\n    }\n    if($str){\n        return $str;\n    }else{\n\
    \        return strrev($s);\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AsDf\")\
    \ !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxnod243s.php:40\n\
    Stack trace:\n#0 /tmp/tmpxnod243s.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpxnod243s.php\
    \ on line 40\n"
  timestamp: 1659978290
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    if (preg_match('/[a-zA-Z]/', $s)) {\n        return strtolower($s)\
    \ ^ strtoupper($s) ^ $s;\n    } else {\n        return strrev($s);\n    }\n}\n\
    \nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined variable $a in /tmp/tmpr0f0p3pt.php on line 33


    Warning: Undefined variable $A in /tmp/tmpr0f0p3pt.php on line 33

    '
  timestamp: 1659823359
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $hasLetter = preg_match(\"/[a-zA-Z]/\", $s);\n    if (!$hasLetter)\
    \ {\n        return strrev($s);\n    }\n    $splitedArray = str_split($s);\n \
    \   $length = count($splitedArray);\n    for ($i = 0; $i < $length; $i++) {\n\
    \        if (ctype_alpha($splitedArray[$i])) {\n            $splitedArray[$i]\
    \ = ctype_upper($splitedArray[$i]) ? strtolower($splitedArray[$i]) : strtoupper($splitedArray[$i]);\n\
    \        }\n    }\n    return implode($splitedArray);\n}\necho solve(\"1234\"\
    );\necho \"<br>\";\necho solve(\"ab\");\necho \"<br>\";\necho solve(\"#a@C\");\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '4321<br>AB<br>#A@c

    Warning: Undefined variable $a in /tmp/tmpiubfrlul.php on line 44


    Warning: Undefined variable $A in /tmp/tmpiubfrlul.php on line 44

    '
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    if(preg_match('/[a-zA-Z]/', $s)){\n        $s = strtolower($s);\n\
    \        $a = str_split($s);\n        $b = str_split($s);\n        foreach($a\
    \ as $key => $value){\n            if(ctype_upper($value)){\n                $b[$key]\
    \ = strtolower($value);\n            }\n            else{\n                $b[$key]\
    \ = strtoupper($value);\n            }\n        }\n        $s = implode($b);\n\
    \    }\n    else{\n        $s = strrev($s);\n    }\n    return $s;\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp60sav7al.php:40\n\
    Stack trace:\n#0 /tmp/tmp60sav7al.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp60sav7al.php\
    \ on line 40\n"
  timestamp: 1659978290
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    if(preg_match('~[a-zA-Z]~', $s)) {\n        return strtolower($s)\
    \ ^ strtoupper($s) ^ $s;\n    }\n    return strrev($s);\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined variable $a in /tmp/tmp4_l2h414.php on line 31


    Warning: Undefined variable $A in /tmp/tmp4_l2h414.php on line 31

    '
  timestamp: 1659978290
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $output = \"\";\n    $length = strlen($s);\n    $letter = false;\n\
    \    for ($i = 0; $i < $length; $i++) {\n        if (ctype_alpha($s[$i])) {\n\
    \            $letter = true;\n            if (ctype_upper($s[$i])) {\n       \
    \         $output .= strtolower($s[$i]);\n            } else {\n             \
    \   $output .= strtoupper($s[$i]);\n            }\n        } else {\n        \
    \    $output .= $s[$i];\n        }\n    }\n    if ($letter == false) {\n     \
    \   return strrev($s);\n    } else {\n        return $output;\n    }\n}\necho\
    \ solve(\"ab\");\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'AB

    Warning: Undefined variable $a in /tmp/tmp24bx9hbm.php on line 48


    Warning: Undefined variable $A in /tmp/tmp24bx9hbm.php on line 48

    '
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n  $str = '';\n  $s = str_split($s);\n  $i = 0;\n  $len = count($s);\n\
    \  for ($i; $i < $len; $i++) {\n    if (preg_match('/^[a-zA-Z]+$/', $s[$i])) {\n\
    \      $str .= strtoupper($s[$i]);\n    } else if (preg_match('/^[a-zA-Z]+$/',\
    \ strtolower($s[$i]))) {\n      $str .= strtolower($s[$i]);\n    } else {\n  \
    \    $str .= $s[$i];\n    }\n  }\n  return $str;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjs6_pe5i.php:35\n\
    Stack trace:\n#0 /tmp/tmpjs6_pe5i.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpjs6_pe5i.php\
    \ on line 35\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    if(strlen($s) == 0){\n        return '';\n    }\n    $string\
    \ = '';\n    for($i = 0; $i < strlen($s); $i++){\n        if(ctype_alpha($s[$i])){\n\
    \            if(ctype_upper($s[$i])){\n                $string .= strtolower($s[$i]);\n\
    \            } else {\n                $string .= strtoupper($s[$i]);\n      \
    \      }\n        } else {\n            $string .= $s[$i];\n        }\n    }\n\
    \    return $string;\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3h7fgcj0.php:39\n\
    Stack trace:\n#0 /tmp/tmp3h7fgcj0.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp3h7fgcj0.php\
    \ on line 39\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    if (ctype_alpha($s)){\n        $s = strtoupper($s);\n    }\
    \ elseif (ctype_upper($s)){\n        $s = strtolower($s);\n    } elseif (ctype_digit($s)){\n\
    \        $s = strrev($s);\n    }\n    return $s;\n}\nprint_r(solve(\"Hello World.\"\
    ));\nprint_r(solve(\"#a@C\"));\nprint_r(solve(\"TEST\"));\nprint_r(solve(\"1234\"\
    ));\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Hello World.#a@CTEST4321\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpjpgc8tlo.php:33\nStack trace:\n#0 /tmp/tmpjpgc8tlo.php(43): test()\n\
    #1 {main}\n  thrown in /tmp/tmpjpgc8tlo.php on line 33\n"
  timestamp: 1659978290
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    if(preg_match(\"/[a-zA-Z]/\", $s)) {\n        $output = '';\n\
    \        for($i = 0; $i < strlen($s); $i++) {\n            if(ctype_alpha($s[$i]))\
    \ {\n                $output .= ctype_upper($s[$i]) ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \            } else {\n                $output .= $s[$i];\n            }\n   \
    \     }\n        return $output;\n    } else {\n        return strrev($s);\n \
    \   }\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\") !==\
    \ \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#AsdfW^45\"\
    ) !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #$a^D\") !== \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined variable $a in /tmp/tmp_fto_2is.php on line 41


    Warning: Undefined variable $A in /tmp/tmp_fto_2is.php on line 41

    '
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $str = str_split($s);\n    $length = count($str);\n    $i =\
    \ 0;\n    while ($i < $length) {\n        if ($str[$i] >= 'a' && $str[$i] <= 'z')\
    \ {\n            $str[$i] = strtoupper($str[$i]);\n        } else if ($str[$i]\
    \ >= 'A' && $str[$i] <= 'Z') {\n            $str[$i] = strtolower($str[$i]);\n\
    \        }\n        $i++;\n    }\n    return $str;\n}\nprint_r(solve(\"1234\"\
    ));\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n)\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp_3qm4dsz.php:34\nStack\
    \ trace:\n#0 /tmp/tmp_3qm4dsz.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp_3qm4dsz.php\
    \ on line 34\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    if(ctype_lower($s)) {\n        $s = strtoupper($s);\n    }\
    \ else if(ctype_upper($s)) {\n        $s = strtolower($s);\n    } else {\n   \
    \     return strrev($s);\n    }\n    return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpagmssvm8.php:30\n\
    Stack trace:\n#0 /tmp/tmpagmssvm8.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpagmssvm8.php\
    \ on line 30\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $s = str_split($s);\n    $charMap = array_filter($s, function($c)\
    \ {\n        return preg_match('/[a-zA-Z]/', $c);\n    });\n    $caseMap = array_map(function($c)\
    \ {\n        if (ctype_upper($c)) {\n            return strtolower($c);\n    \
    \    } else {\n            return strtoupper($c);\n        }\n    }, $charMap);\n\
    \    $letterMap = array_combine(array_keys($charMap), $caseMap);\n    return implode('',\
    \ array_map(function($i, $e) use ($letterMap) {\n        if (array_key_exists($i,\
    \ $letterMap)) {\n            return $letterMap[$i];\n        } else {\n     \
    \       return $e;\n        }\n    }, array_keys($s), $s));\n}\necho solve(\"\
    #a@C\");\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "#A@c\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpey4kehgc.php:42\n\
    Stack trace:\n#0 /tmp/tmpey4kehgc.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpey4kehgc.php\
    \ on line 42\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n  $str = $s;\n  $str = str_split($str);\n  $mapped = array_map(function($char)\
    \ {\n    if(ctype_alpha($char)) {\n      return strtoupper($char) === $char ?\
    \ strtolower($char) : strtoupper($char);\n    }\n    return $char;\n  }, $str);\n\
    \  return implode($mapped);\n}\n$input = array(\"1234\",\"ab\",\"#a@C\");\nforeach\
    \ ($input as $key => $value) {\n  echo solve($value);\n  echo \"\\n\";\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1234\nAB\n#A@c\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm9609k2n.php:36\n\
    Stack trace:\n#0 /tmp/tmpm9609k2n.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpm9609k2n.php\
    \ on line 36\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n  if(ctype_alpha($s)){\n    return strtoupper($s);\n  }\n  else{\n\
    \    return strtolower($s);\n  }\n}\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AsDf\")\
    \ !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz_t8x1j0.php:27\n\
    Stack trace:\n#0 /tmp/tmpz_t8x1j0.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpz_t8x1j0.php\
    \ on line 27\n"
  timestamp: 1659978290
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $found = false;\n    for ($i = 0; $i < strlen($s); $i++) {\n\
    \        if (ctype_alpha($s[$i])) {\n            $found = true;\n            $s[$i]\
    \ = ctype_upper($s[$i]) ? strtolower($s[$i]) : strtoupper($s[$i]);\n        }\n\
    \    }\n    return $found ? $s : strrev($s);\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined variable $a in /tmp/tmphiva7zhg.php on line 35


    Warning: Undefined variable $A in /tmp/tmphiva7zhg.php on line 35

    '
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n  $letters = \"\";\n  $output = \"\";\n  $reversed_letters = \"\
    \";\n  for ($i = 0; $i < strlen($s); $i++) {\n    if (preg_match(\"/[a-zA-Z]/\"\
    , $s[$i])) {\n      $letters .= $s[$i];\n    }\n  }\n  if ($letters == \"\") {\n\
    \    return strrev($s);\n  }\n  for ($i = strlen($letters) - 1; $i >= 0; $i--)\
    \ {\n    $reversed_letters .= $letters[$i];\n  }\n  for ($i = 0; $i < strlen($s);\
    \ $i++) {\n    if (preg_match(\"/[a-zA-Z]/\", $s[$i])) {\n      $output .= $reversed_letters[0];\n\
    \      $reversed_letters = substr($reversed_letters, 1);\n    } else {\n     \
    \ $output .= $s[$i];\n    }\n  }\n  return $output;\n}\necho solve(\"1234\") .\
    \ \"\\n\";\necho solve(\"ab\") . \"\\n\";\necho solve(\"#a@C\") . \"\\n\";\n\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "4321\nba\n#C@a\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg2che48i.php:48\n\
    Stack trace:\n#0 /tmp/tmpg2che48i.php(58): test()\n#1 {main}\n  thrown in /tmp/tmpg2che48i.php\
    \ on line 48\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    // $str = str_split($s);\n    // $str2 = str_split($s);\n \
    \   // if(strlen($s)==1 && ctype_alpha($s)) {\n    //     $s = strtoupper($s);\n\
    \    //     return $s;\n    // }\n    // for($i=0;$i<count($str);$i++) {\n   \
    \ //     if(ctype_alpha($str[$i])) {\n    //         $str2[$i] = strtoupper($str[$i]);\n\
    \    //     }\n    // }\n    // $res = array_diff($str,$str2);\n    // for($i=0;$i<count($res);$i++)\
    \ {\n    //     if(ctype_alpha($res[$i])) {\n    //         $res[$i] = strtolower($res[$i]);\n\
    \    //     }\n    // }\n    // return implode($res);\n    $str = str_split($s);\n\
    \    $str2 = str_split($s);\n    if(strlen($s)==1 && ctype_alpha($s)) {\n    \
    \    $s = strtoupper($s);\n        return $s;\n    }\n    for($i=0;$i<count($str);$i++)\
    \ {\n        if(ctype_alpha($str[$i])) {\n            $str2[$i] = strtoupper($str[$i]);\n\
    \        }\n    }\n    for($i=0;$i<count($str2);$i++) {\n        if(!in_array($str2[$i],$str))\
    \ {\n            $str2[$i] = strtolower($str2[$i]);\n        }\n    }\n    return\
    \ implode($str2);\n}\necho solve(\"1234\");\necho \"<br>\";\necho solve(\"ab\"\
    );\necho \"<br>\";\necho solve(\"#a@C\");\necho \"<br>\";\necho solve(\"a#@C\"\
    );\necho \"<br>\";\necho solve(\"#\");\necho \"<br>\";\necho solve(\"#z\");\n\
    echo\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmptjh4h3i6.php on line 63

    '
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $newString = \"\";\n    $words = str_split($s);\n    $newString\
    \ = array_map(function($word) {\n        if ($word === strtoupper($word)) {\n\
    \            return strtolower($word);\n        }\n        if ($word === strtolower($word))\
    \ {\n            return strtoupper($word);\n        }\n        return $word;\n\
    \    }, $words);\n    return implode($newString);\n}\necho solve(\"1234\") . PHP_EOL;\n\
    echo solve(\"ab\") . PHP_EOL;\necho solve(\"#a@C\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1234\nAB\n#A@c\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpasbh0c1z.php:37\n\
    Stack trace:\n#0 /tmp/tmpasbh0c1z.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpasbh0c1z.php\
    \ on line 37\n"
  timestamp: 1659978290
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n  if (!preg_match('/[a-zA-Z]/', $s)) {\n    return strrev($s);\n\
    \  }\n  $s = str_split($s);\n  $result = '';\n  foreach ($s as $letter) {\n  \
    \  if (ctype_upper($letter)) {\n      $result .= strtolower($letter);\n    } else\
    \ if (ctype_lower($letter)) {\n      $result .= strtoupper($letter);\n    } else\
    \ {\n      $result .= $letter;\n    }\n  }\n  return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined variable $a in /tmp/tmpr44n483c.php on line 42


    Warning: Undefined variable $A in /tmp/tmpr44n483c.php on line 42

    '
  timestamp: 1659978290
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    if (!preg_match('/[a-zA-Z]/', $s)) {\n        return strrev($s);\n\
    \    }\n    $r = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $r .= $s[$i] == strtoupper($s[$i]) ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \        } else {\n            $r .= $s[$i];\n        }\n    }\n    return $r;\n\
    }\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined variable $a in /tmp/tmpsj1tij6m.php on line 40


    Warning: Undefined variable $A in /tmp/tmpsj1tij6m.php on line 40

    '
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n\
    \        if (ctype_alpha($s[$i])) {\n            $result .= ctype_upper($s[$i])\
    \ ? strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n            $result\
    \ .= $s[$i];\n        }\n    }\n    return strrev($result);\n}\n\n$s = '#a@C';\n\
    print_r(solve($s));\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "c@A#\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9looi_md.php:33\n\
    Stack trace:\n#0 /tmp/tmp9looi_md.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp9looi_md.php\
    \ on line 33\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $output = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n\
    \        if (is_numeric($s[$i])) {\n            $output = $s[$i] . $output;\n\
    \        } else {\n            if (strtolower($s[$i]) == $s[$i]) {\n         \
    \       $output = strtoupper($s[$i]) . $output;\n            } else {\n      \
    \          $output = strtolower($s[$i]) . $output;\n            }\n        }\n\
    \    }\n    return $output;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp50blbe0d.php:34\n\
    Stack trace:\n#0 /tmp/tmp50blbe0d.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp50blbe0d.php\
    \ on line 34\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n\t$s = str_split($s);\n\t$p = [];\n\tforeach ($s as $v) {\n\t\t\
    if (ctype_alpha($v)) {\n\t\t\tif (ctype_upper($v)) {\n\t\t\t\t$p[] = strtolower($v);\n\
    \t\t\t}\n\t\t\telse {\n\t\t\t\t$p[] = strtoupper($v);\n\t\t\t}\n\t\t}\n\t\telse\
    \ {\n\t\t\t$p[] = $v;\n\t\t}\n\t}\n\treturn join($p);\n}\n\n$tests = [\n\t[\"\
    1234\", \"4321\"],\n\t[\"ab\", \"AB\"],\n\t[\"#a@C\", \"#A@c\"],\n\t[\"#a@C\"\
    , \"#A@c\"],\n\t[\"abC deF\", \"ABC DEF\"],\n\t[\"\", \"\"],\n\t[\"a\", \"A\"\
    ],\n\t[\"A\", \"a\"],\n\t[\"#\", \"#\"],\n\t[\"1234\", \"4321\"],\n\t[\"ab\",\
    \ \"AB\"],\n\t[\"A bCd EF\", \"a BCD ef\"],\n\t[\"Ab cd ef\", \"aB CD EF\"],\n\
    \t[\"aB cD eF\", \"Ab CD Ef\"],\n\t[\"aB cD Ef\", \"Ab Cd eF\"],\n\t[\"aB cD eF\"\
    , \"Ab Cd EF\"],\n\t[\"aB cD eF\", \"Ab Cd EF\"],\n\t[\"#a@C\", \"#A@c\"],\n\t\
    [\"1A\", \"1a\"],\n\t[\"Aa aA\", \"aA AA\"],\n\t[\"Aa aA\", \"aA AA\"],\n\t[\"\
    1A\", \"1a\"],\n\t[\"aBcDeF\", \"AbCdEf\"],\n\t[\"aBcDeF\", \"AbCdEf\"],\n\t[\"\
    AbCdEf\", \"aBcDeF\"],\n\t[\"abcdef\", \"ABCDEF\"],\n\t[\"abcdef\", \"ABCDEF\"\
    ],\n\t[\"ABCDEF\", \"abcdef\"],\n\t[\"aBcDef\", \"AbCdEf\"],\n\t[\"aBcDef\", \"\
    AbCdEf\"],\n\t\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmp08o9xkwc.php on line 65

    '
  timestamp: 1659978290
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $letters = str_split($s);\n    $hasLetters = false;\n    $result\
    \ = \"\";\n    for ($i = 0; $i < count($letters); $i++) {\n        if (ctype_alpha($letters[$i]))\
    \ {\n            $result .= ($letters[$i] === strtoupper($letters[$i])) ? \n \
    \               strtolower($letters[$i]) : strtoupper($letters[$i]);\n       \
    \     $hasLetters = true;\n        } else {\n            $result .= $letters[$i];\n\
    \        }\n    }\n    return ($hasLetters) ? $result : strrev($s);\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined variable $a in /tmp/tmp03p7v5ao.php on line 41


    Warning: Undefined variable $A in /tmp/tmp03p7v5ao.php on line 41

    '
  timestamp: 1659978290
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $len = strlen($s);\n    $sol = \"\";\n    $flag = 1;\n    for\
    \ ($i=0; $i < $len; $i++) { \n        if(ord($s[$i])>=97 && ord($s[$i])<=122)\
    \ {\n            $flag = 0;\n            $sol .= chr(ord($s[$i])-32);\n      \
    \  }\n        else if(ord($s[$i])>=65 && ord($s[$i])<=90) {\n            $flag\
    \ = 0;\n            $sol .= chr(ord($s[$i])+32);\n        }\n        else {\n\
    \            $sol .= $s[$i];\n        }\n    }\n    if($flag) {\n        $sol\
    \ = strrev($sol);\n    }\n    return $sol;\n}\necho solve(\"@A$sD\");\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined variable $sD in /tmp/tmpumfl3d2e.php on line 36

    @a

    Warning: Undefined variable $a in /tmp/tmpumfl3d2e.php on line 48


    Warning: Undefined variable $A in /tmp/tmpumfl3d2e.php on line 48

    '
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    if (strlen($s) === 0) return \"\";\n    $result = \"\";\n \
    \   for ($i = 0; $i < strlen($s); $i++) {\n        if (ord($s[$i]) >= 65 && ord($s[$i])\
    \ <= 90) $result .= chr(ord($s[$i]) + 32);\n        else if (ord($s[$i]) >= 97\
    \ && ord($s[$i]) <= 122) $result .= chr(ord($s[$i]) - 32);\n        else $result\
    \ .= $s[$i];\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n\
    \    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4a0i2hgm.php:30\n\
    Stack trace:\n#0 /tmp/tmp4a0i2hgm.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp4a0i2hgm.php\
    \ on line 30\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $letters = preg_split('/[^a-zA-Z]/', $s, -1, PREG_SPLIT_NO_EMPTY);\n\
    \    $reversed = array_reverse($letters);\n    $reversed = array_map(function($v)\
    \ {\n        return strtolower($v) == $v ? strtoupper($v) : strtolower($v);\n\
    \    }, $reversed);\n    $result = preg_replace_callback('/[a-zA-Z]/', function($matches)\
    \ use (&$reversed) {\n        return array_shift($reversed);\n    }, $s);\n  \
    \  return strlen($result) == 0 ? strrev($s) : $result;\n}\n$s = 'tHIS iS a SIMPLE\
    \ tEST';\necho solve($s);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "testsimpleAis this   \nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpal4p7eql.php:32\nStack trace:\n#0 /tmp/tmpal4p7eql.php(42): test()\n\
    #1 {main}\n  thrown in /tmp/tmpal4p7eql.php on line 32\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    if (strlen($s) > 1) {\n        for ($i = 0; $i < strlen($s);\
    \ $i++) {\n            if (ctype_alpha($s[$i])) {\n                if (ctype_upper($s[$i]))\
    \ {\n                    $s[$i] = strtolower($s[$i]);\n                } else\
    \ {\n                    $s[$i] = strtoupper($s[$i]);\n                }\n   \
    \         }\n        }\n    } elseif (ctype_alpha($s)) {\n        if (ctype_upper($s))\
    \ {\n            $s = strtolower($s);\n        } else {\n            $s = strtoupper($s);\n\
    \        }\n    }\n    $s = strrev($s);\n    return $s;\n}\n$inputs = [\n    \"\
    1234\",\n    \"ab\",\n    \"#a@C\",\n    \"\",\n    \"a\",\n    \"1\",\n    \"\
    #@C\",\n    \"4\",\n    \"abc\",\n    \"abcd\",\n    \"A1B2C3\"\n];\nforeach ($inputs\
    \ as $input) {\n    echo solve($input) . \"\\n\";\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "4321\nBA\nc@A#\n\nA\n1\nc@#\n4\nCBA\nDCBA\n3c2b1a\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpfb4k2km3.php:56\nStack trace:\n#0 /tmp/tmpfb4k2km3.php(66):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpfb4k2km3.php on line 56\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $r = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n     \
    \   if (ctype_alpha($s[$i])) {\n            $r .= ctype_upper($s[$i]) ? strtolower($s[$i])\
    \ : strtoupper($s[$i]);\n        } else {\n            $r .= $s[$i];\n       \
    \ }\n    }\n    return strrev($r);\n}\necho solve(\"#a@C\");\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "c@A#\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyvzp7x4h.php:31\n\
    Stack trace:\n#0 /tmp/tmpyvzp7x4h.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpyvzp7x4h.php\
    \ on line 31\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $arr = str_split($s);\n    $str = '';\n    foreach ($arr as\
    \ $key => $value) {\n        if (ctype_alpha($value)) {\n            $str .= strtoupper($value)\
    \ == $value ? strtolower($value) : strtoupper($value);\n        } else {\n   \
    \         $str .= $value;\n        }\n    }\n    return $str;\n}\nvar_dump(solve(\"\
    1234\"));\nvar_dump(solve(\"ab\"));\nvar_dump(solve(\"#a@C\"));\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string(4) \"1234\"\nstring(2) \"AB\"\nstring(4) \"#A@c\"\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmp0e34yctr.php:35\nStack trace:\n\
    #0 /tmp/tmp0e34yctr.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp0e34yctr.php\
    \ on line 35\n"
  timestamp: 1659978290
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $s = str_split($s);\n    foreach ($s as $key => $value) {\n\
    \        if (preg_match('/[a-z]/', $value)) {\n            $s[$key] = strtoupper($value);\n\
    \        } elseif (preg_match('/[A-Z]/', $value)) {\n            $s[$key] = strtolower($value);\n\
    \        }\n    }\n    $s = implode('', $s);\n    if (preg_match('/[a-zA-Z]/',\
    \ $s)) {\n        return $s;\n    } else {\n        return strrev($s);\n    }\n\
    }\n\necho solve(\"1234\");\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '4321

    Warning: Undefined variable $a in /tmp/tmpxwei0oqf.php on line 43


    Warning: Undefined variable $A in /tmp/tmpxwei0oqf.php on line 43

    '
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n\tif(ctype_alpha($s)){\n\t\t$newString = '';\n\t\tfor($i = 0; $i\
    \ < strlen($s); $i++){\n\t\t\tif($s[$i] === strtoupper($s[$i])){\n\t\t\t\t$newString\
    \ .= strtolower($s[$i]);\n\t\t\t} else {\n\t\t\t\t$newString .= strtoupper($s[$i]);\n\
    \t\t\t}\n\t\t}\n\t\treturn $newString;\n\t}\n\treturn strrev($s);\n}\n\necho solve(\"\
    1234\");\necho \"\\n\";\necho solve(\"ab\");\necho \"\\n\";\necho solve(\"#a@C\"\
    );\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "4321\nAB\nC@a#\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt6em7k8b.php:42\n\
    Stack trace:\n#0 /tmp/tmpt6em7k8b.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpt6em7k8b.php\
    \ on line 42\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $arr = str_split($s);\n    $res = [];\n    foreach ($arr as\
    \ $letter) {\n        if (ctype_alpha($letter)) {\n            $res[] = strtoupper($letter)\
    \ == $letter ? strtolower($letter) : strtoupper($letter);\n        } else {\n\
    \            $res[] = $letter;\n        }\n    }\n    return empty($res) ? $s\
    \ : implode($res);\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwm1zw553.php:32\n\
    Stack trace:\n#0 /tmp/tmpwm1zw553.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpwm1zw553.php\
    \ on line 32\n"
  timestamp: 1659978290
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $hasLetter = false;\n    $res = '';\n    for ($i = 0; $i <\
    \ strlen($s); $i++) {\n        if (ctype_alpha($s[$i])) {\n            $hasLetter\
    \ = true;\n            $res .= $s[$i] == strtoupper($s[$i]) ? strtolower($s[$i])\
    \ : strtoupper($s[$i]);\n        } else {\n            $res .= $s[$i];\n     \
    \   }\n    }\n    return $hasLetter ? $res : strrev($s);\n}\necho solve(\"ab\"\
    );\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'AB

    Warning: Undefined variable $a in /tmp/tmpofj4a7o3.php on line 39


    Warning: Undefined variable $A in /tmp/tmpofj4a7o3.php on line 39

    '
  timestamp: 1659978290
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    if(!preg_match(\"/[a-zA-Z]/\", $s)) {\n        return strrev($s);\n\
    \    } else {\n        $a = \"\";\n        for($i = 0; $i < strlen($s); $i++)\
    \ {\n            if(preg_match(\"/[a-z]/\", $s[$i])) {\n                $a .=\
    \ strtoupper($s[$i]);\n            } else if(preg_match(\"/[A-Z]/\", $s[$i]))\
    \ {\n                $a .= strtolower($s[$i]);\n            } else {\n       \
    \         $a .= $s[$i];\n            }\n        }\n        return $a;\n    }\n\
    }\necho solve(\"1234\");\necho \"<br>\";\necho solve(\"ab\");\necho \"<br>\";\n\
    echo solve(\"#a@C\");\necho \"<br>\";\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AsDf\")\
    \ !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '4321<br>AB<br>#A@c<br>

    Warning: Undefined variable $a in /tmp/tmpwro04oik.php on line 48


    Warning: Undefined variable $A in /tmp/tmpwro04oik.php on line 48

    '
  timestamp: 1659978290
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n  if(ctype_alpha($s)){\n    return strtoupper($s);\n  }\n  if(ctype_digit($s)){\n\
    \    return strrev($s);\n  }\n  if(!ctype_alnum($s)){\n    return strtolower($s);\n\
    \  }\n}\necho solve(\"1234\");\necho solve(\"ab\");\necho solve(\"#a@C\");\n ?>\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "4321AB#a@cfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $r = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n     \
    \   if (ctype_alpha($s[$i])) {\n            $r .= ctype_upper($s[$i]) ? strtolower($s[$i])\
    \ : strtoupper($s[$i]);\n        } else {\n            $r .= $s[$i];\n       \
    \ }\n    }\n    return strrev($r);\n}\necho solve(\"ab\") . PHP_EOL;\necho solve(\"\
    1234\") . PHP_EOL;\necho solve(\"#a@C\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "BA\n4321\nc@A#\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjfxsxzcm.php:33\n\
    Stack trace:\n#0 /tmp/tmpjfxsxzcm.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpjfxsxzcm.php\
    \ on line 33\n"
  timestamp: 1659978290
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n  if(!preg_match(\"/[a-zA-Z]/\", $s)) return strrev($s);\n  $result\
    \ = '';\n  for($i = 0; $i < strlen($s); $i++) {\n    if(preg_match(\"/[a-zA-Z]/\"\
    , $s[$i])) {\n      $result .= strtoupper($s[$i]) === $s[$i] ? strtolower($s[$i])\
    \ : strtoupper($s[$i]);\n    } else {\n      $result .= $s[$i];\n    }\n  }\n\
    \  return $result;\n}\necho solve(\"ab\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'AB


    Warning: Undefined variable $a in /tmp/tmp82t2p5j8.php on line 38


    Warning: Undefined variable $A in /tmp/tmp82t2p5j8.php on line 38

    '
  timestamp: 1659978290
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $num = preg_match_all('/[a-zA-Z]/', $s);\n    if ($num ===\
    \ 0) {\n        return strrev($s);\n    } else {\n        $len = strlen($s);\n\
    \        $arr = str_split($s);\n        for ($i = 0; $i < $len; $i++) {\n    \
    \        if (preg_match('/[a-zA-Z]/', $arr[$i])) {\n                if (preg_match('/[a-z]/',\
    \ $arr[$i])) {\n                    $arr[$i] = strtoupper($arr[$i]);\n       \
    \         } else {\n                    $arr[$i] = strtolower($arr[$i]);\n   \
    \             }\n            }\n        }\n        return implode('', $arr);\n\
    \    }\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\") !==\
    \ \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#AsdfW^45\"\
    ) !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #$a^D\") !== \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined variable $a in /tmp/tmpqzwoxfz3.php on line 44


    Warning: Undefined variable $A in /tmp/tmpqzwoxfz3.php on line 44

    '
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n\t$reversed = \"\";\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\
    \tif (ctype_alpha($s[$i])) {\n\t\t\tif (ctype_upper($s[$i])) {\n\t\t\t\t$reversed\
    \ .= strtolower($s[$i]);\n\t\t\t} else {\n\t\t\t\t$reversed .= strtoupper($s[$i]);\n\
    \t\t\t}\n\t\t} else {\n\t\t\t$reversed .= $s[$i];\n\t\t}\n\t}\n\treturn strrev($reversed);\n\
    }\necho solve(\"1234\");\necho \"<br>\";\necho solve(\"ab\");\necho \"<br>\";\n\
    echo solve(\"#a@C\");\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "4321<br>BA<br>c@A#\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_4e_v_nn.php:39\n\
    Stack trace:\n#0 /tmp/tmp_4e_v_nn.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp_4e_v_nn.php\
    \ on line 39\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $newString = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n\
    \        if (is_numeric($s[$i])) {\n            $newString = $s[$i] . $newString;\n\
    \        } else if (ctype_lower($s[$i])) {\n            $newString = strtoupper($s[$i])\
    \ . $newString;\n        } else if (ctype_upper($s[$i])) {\n            $newString\
    \ = strtolower($s[$i]) . $newString;\n        } else {\n            $newString\
    \ = $s[$i] . $newString;\n        }\n    }\n    return $newString;\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsum5rjv2.php:35\n\
    Stack trace:\n#0 /tmp/tmpsum5rjv2.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpsum5rjv2.php\
    \ on line 35\n"
  timestamp: 1659978290
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    if (preg_match('/[a-zA-Z]/', $s)) {\n        return strtolower($s)\
    \ ^ strtoupper($s) ^ $s;\n    }\n    return strrev($s);\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined variable $a in /tmp/tmpsr5k92gp.php on line 31


    Warning: Undefined variable $A in /tmp/tmpsr5k92gp.php on line 31

    '
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    if(preg_match(\"/[a-zA-Z]/\", $s)){\n        $s = strtolower($s);\n\
    \        $s = strrev($s);\n        return $s;\n    }\n    else{\n        return\
    \ strrev($s);\n    }\n}\necho solve(\"12345\");\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "54321\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe5q_ssws.php:30\n\
    Stack trace:\n#0 /tmp/tmpe5q_ssws.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpe5q_ssws.php\
    \ on line 30\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $str = str_split($s);\n    $str2 = '';\n    for ($i = count($str)\
    \ - 1; $i >= 0; $i--) {\n        if (preg_match('/[a-zA-Z]/', $str[$i])) {\n \
    \           $str2 .= strtoupper($str[$i]);\n        } else {\n            $str2\
    \ .= $str[$i];\n        }\n    }\n    return $str2;\n}\necho solve(\"#a@C\");\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "C@A#\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp01omdti5.php:32\n\
    Stack trace:\n#0 /tmp/tmp01omdti5.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp01omdti5.php\
    \ on line 32\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    return ctype_alpha($s) ? strtoupper($s) : strtolower($s);\n\
    }\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxfo6697r.php:23\n\
    Stack trace:\n#0 /tmp/tmpxfo6697r.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpxfo6697r.php\
    \ on line 23\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    if(ctype_alpha($s)){\n        return strtoupper($s);\n    }\n\
    \    else{\n        $s = str_split($s);\n        for($i = 0; $i < count($s); $i++){\n\
    \            if(ctype_alpha($s[$i])){\n                if(ctype_upper($s[$i])){\n\
    \                    $s[$i] = strtolower($s[$i]);\n                }\n       \
    \         else{\n                    $s[$i] = strtoupper($s[$i]);\n          \
    \      }\n            }\n        }\n        return implode(\"\", $s);\n    }\n\
    }\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppnhfgd3d.php:38\n\
    Stack trace:\n#0 /tmp/tmppnhfgd3d.php(48): test()\n#1 {main}\n  thrown in /tmp/tmppnhfgd3d.php\
    \ on line 38\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n  if (strlen($s) === strlen(str_replace('a-zA-Z', '', $s))) {\n\
    \    return strrev($s);\n  }\n  $arr = str_split($s);\n  foreach ($arr as $k =>\
    \ $v) {\n    if (ctype_alpha($v)) {\n      $arr[$k] = ctype_upper($v) ? strtolower($v)\
    \ : strtoupper($v);\n    }\n  }\n  return implode($arr);\n}\necho solve(\"1234\"\
    ) . PHP_EOL;\necho solve(\"ab\") . PHP_EOL;\necho solve(\"#a@C\") . PHP_EOL;\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "4321\nba\nC@a#\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnm0026ux.php:34\n\
    Stack trace:\n#0 /tmp/tmpnm0026ux.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpnm0026ux.php\
    \ on line 34\n"
  timestamp: 1659978290
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    if (preg_match('/[a-zA-Z]/', $s)) {\n        return strtolower($s)\
    \ ^ strtoupper($s) ^ $s;\n    }\n    return strrev($s);\n}\necho solve(\"ab\"\
    );\necho \"\\n\";\necho solve(\"aB\");\necho \"\\n\";\necho solve(\"aBcDeF\");\n\
    echo \"\\n\";\necho solve(\"1234567890\");\necho \"\\n\";\necho solve(\"!@#$%^&*()\"\
    );\necho \"\\n\";\necho solve(\"456\");\necho \"\\n\";\necho solve(\"ABC\");\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\") !==\
    \ \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#AsdfW^45\"\
    ) !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #$a^D\") !== \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'AB

    Ab

    AbCdEf

    0987654321

    )(*&^%$#@!

    654

    abc


    Warning: Undefined variable $a in /tmp/tmpy9ylt1qq.php on line 45


    Warning: Undefined variable $A in /tmp/tmpy9ylt1qq.php on line 45

    '
  timestamp: 1659978290
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $result = [];\n    $has_letter = false;\n    for ($i = 0; $i\
    \ < strlen($s); $i++) {\n        if (ctype_alpha($s[$i])) {\n            $has_letter\
    \ = true;\n            if (ctype_upper($s[$i]))\n                $result[] = strtolower($s[$i]);\n\
    \            else\n                $result[] = strtoupper($s[$i]);\n        }\
    \ else {\n            $result[] = $s[$i];\n        }\n    }\n    if (!$has_letter)\n\
    \        $result = array_reverse($result);\n    return implode($result);\n}\n\
    echo solve(\"1234\") . \"\\n\";\necho solve(\"ab\") . \"\\n\";\necho solve(\"\
    #a@C\") . \"\\n\";\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '4321

    AB

    #A@c


    Warning: Undefined variable $a in /tmp/tmppoj9svoc.php on line 46


    Warning: Undefined variable $A in /tmp/tmppoj9svoc.php on line 46

    '
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    if (ctype_alpha($s)) {\n        return strtoupper($s);\n  \
    \  }\n    if (ctype_digit($s)) {\n        return strrev($s);\n    }\n    if (!ctype_alpha($s)\
    \ && !ctype_digit($s)) {\n        return strtolower($s);\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgfgvps8m.php:30\n\
    Stack trace:\n#0 /tmp/tmpgfgvps8m.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpgfgvps8m.php\
    \ on line 30\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    // check if string contains letter\n    $has_letter = preg_match(\"\
    /[a-zA-Z]/\", $s);\n    // if it does, reverse its case\n    if ($has_letter)\
    \ {\n        $s = strtolower($s);\n        return strtoupper($s);\n    }\n   \
    \ // if it doesn't, reverse string\n    return strrev($s);\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwugzsisl.php:30\n\
    Stack trace:\n#0 /tmp/tmpwugzsisl.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpwugzsisl.php\
    \ on line 30\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    if (empty($s)) {\n        return $s;\n    }\n\n    $result\
    \ = [];\n    $letters = range('a', 'z');\n    $lettersUppercase = range('A', 'Z');\n\
    \n    for ($i = 0; $i < strlen($s); $i++) {\n        if (in_array($s[$i], $letters)\
    \ || in_array($s[$i], $lettersUppercase)) {\n            $result[] = strtoupper($s[$i])\
    \ == $s[$i] ? strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n   \
    \         $result[] = $s[$i];\n        }\n    }\n\n    return implode('', $result);\n\
    }\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdd3ng45c.php:40\n\
    Stack trace:\n#0 /tmp/tmpdd3ng45c.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpdd3ng45c.php\
    \ on line 40\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    if(!ctype_alpha($s)) return strrev($s);\n    $res = '';\n \
    \   for($i = 0; $i < strlen($s); $i++) {\n        if(ctype_alpha($s[$i])) {\n\
    \            $res .= ctype_upper($s[$i]) ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \        } else {\n            $res .= $s[$i];\n        }\n    }\n    return $res;\n\
    }\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzmkgv5rc.php:34\n\
    Stack trace:\n#0 /tmp/tmpzmkgv5rc.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpzmkgv5rc.php\
    \ on line 34\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n  $letters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\
    \  $convert = [];\n  for ($i = 0; $i < strlen($letters); $i++) {\n    $convert[$letters[$i]]\
    \ = strrev($letters)[$i];\n  }\n  $result = '';\n  for ($i = 0; $i < strlen($s);\
    \ $i++) {\n    if (isset($convert[$s[$i]])) {\n      $result .= $convert[$s[$i]];\n\
    \    } else {\n      $result .= $s[$i];\n    }\n  }\n  return $result;\n}\n\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqrqim6z8.php:36\n\
    Stack trace:\n#0 /tmp/tmpqrqim6z8.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpqrqim6z8.php\
    \ on line 36\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    if (preg_match('/[a-zA-Z]/', $s)) {\n        return strrev(strtolower($s));\n\
    \    }\n    return strrev($s);\n}\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AsDf\")\
    \ !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6rdt4kky.php:25\n\
    Stack trace:\n#0 /tmp/tmp6rdt4kky.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp6rdt4kky.php\
    \ on line 25\n"
  timestamp: 1659978290
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    if (!preg_match('/[a-zA-Z]/', $s)) {\n        return strrev($s);\n\
    \    }\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (preg_match('/[a-zA-Z]/',\
    \ $s[$i])) {\n            $s[$i] = strtolower($s[$i]) == $s[$i] ? strtoupper($s[$i])\
    \ : strtolower($s[$i]);\n        }\n    }\n    return $s;\n}\necho solve(\"ab\"\
    );\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'AB

    Warning: Undefined variable $a in /tmp/tmprt4w_d5o.php on line 37


    Warning: Undefined variable $A in /tmp/tmprt4w_d5o.php on line 37

    '
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n  $letters = preg_replace('/[^a-zA-Z]/', '', $s);\n  if (empty($letters))\
    \ {\n    return strrev($s);\n  }\n  $rest = preg_replace('/[a-zA-Z]/', '', $s);\n\
    \  return str_replace($letters, strtolower($letters) ^ strtoupper($letters) ^\
    \ $letters, $s) . $rest;\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5g89m1rx.php:31\n\
    Stack trace:\n#0 /tmp/tmp5g89m1rx.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp5g89m1rx.php\
    \ on line 31\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n  $s = str_split($s);\n  $result = [];\n  foreach ($s as $ch) {\n\
    \    if (ctype_alpha($ch)) {\n      $result[] = ($ch == strtoupper($ch)) ? strtolower($ch)\
    \ : strtoupper($ch);\n    } else {\n      $result[] = $ch;\n    }\n  }\n  return\
    \ (count($result) == count($s)) ? implode($result) : strrev(implode($result));\n\
    }\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpidu62e90.php:33\n\
    Stack trace:\n#0 /tmp/tmpidu62e90.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpidu62e90.php\
    \ on line 33\n"
  timestamp: 1659978290
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    if (preg_match(\"/[a-zA-Z]/\", $s)) {\n        return strtolower($s)\
    \ ^ strtoupper($s) ^ $s;\n    } else {\n        return strrev($s);\n    }\n}\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined variable $a in /tmp/tmp8t89km3l.php on line 32


    Warning: Undefined variable $A in /tmp/tmp8t89km3l.php on line 32

    '
  timestamp: 1659978290
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    if(!preg_match(\"/[a-zA-Z]/\", $s)) {\n        return strrev($s);\n\
    \    }\n    $new_str = '';\n    for($i = 0; $i < strlen($s); $i++) {\n       \
    \ if(ctype_alpha($s[$i])) {\n            if(ctype_upper($s[$i])) {\n         \
    \       $new_str .= strtolower($s[$i]);\n            }\n            else {\n \
    \               $new_str .= strtoupper($s[$i]);\n            }\n        }\n  \
    \      else {\n            $new_str .= $s[$i];\n        }\n    }\n    return $new_str;\n\
    }\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined variable $a in /tmp/tmplopwzgpq.php on line 46


    Warning: Undefined variable $A in /tmp/tmplopwzgpq.php on line 46

    '
  timestamp: 1659978290
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $newString = '';\n    $stringLength = strlen($s);\n    $flag\
    \ = false;\n    for ($i = 0; $i < $stringLength; $i++) {\n        if (ord($s[$i])\
    \ >= 65 && ord($s[$i]) <= 90) {\n            $flag = true;\n            $newString\
    \ .= chr(ord($s[$i]) + 32);\n        } else if (ord($s[$i]) >= 97 && ord($s[$i])\
    \ <= 122) {\n            $flag = true;\n            $newString .= chr(ord($s[$i])\
    \ - 32);\n        } else {\n            $newString .= $s[$i];\n        }\n   \
    \ }\n    if ($flag) {\n        return $newString;\n    } else {\n        return\
    \ strrev($s);\n    }\n}\n\necho solve(\"1234\") . PHP_EOL;\necho solve(\"ab\"\
    ) . PHP_EOL;\necho solve(\"#a@C\") . PHP_EOL;\nfunction candidate(...$args) {\n\
    \    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '4321

    AB

    #A@c


    Warning: Undefined variable $a in /tmp/tmpq8kkn425.php on line 50


    Warning: Undefined variable $A in /tmp/tmpq8kkn425.php on line 50

    '
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $rs = \"\";\n    for ($i = 0; $i < strlen($s); $i++) {\n  \
    \      if (ctype_alpha($s[$i])) {\n            $rs .= (ctype_upper($s[$i])) ?\
    \ strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n            $rs\
    \ .= $s[$i];\n        }\n    }\n    if (strlen($rs) == 0) {\n        return strrev($s);\n\
    \    }\n    return $rs;\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8nm564rq.php:35\n\
    Stack trace:\n#0 /tmp/tmp8nm564rq.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp8nm564rq.php\
    \ on line 35\n"
  timestamp: 1659978290
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    if (!preg_match(\"/[a-zA-Z]/\", $s)) {\n        return strrev($s);\n\
    \    }\n    $len = strlen($s);\n    $arr = [];\n    for ($i = 0; $i < $len; $i++)\
    \ {\n        if (preg_match(\"/[a-zA-Z]/\", $s[$i])) {\n            if (preg_match(\"\
    /[a-z]/\", $s[$i])) {\n                $arr[] = strtoupper($s[$i]);\n        \
    \    } else {\n                $arr[] = strtolower($s[$i]);\n            }\n \
    \       } else {\n            $arr[] = $s[$i];\n        }\n    }\n    return implode(\"\
    \", $arr);\n}\necho solve(\"1234\") . \"\\n\";\necho solve(\"ab\") . \"\\n\";\n\
    echo solve(\"#a@C\") . \"\\n\";\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '4321

    AB

    #A@c


    Warning: Undefined variable $a in /tmp/tmp4_0gnefp.php on line 47


    Warning: Undefined variable $A in /tmp/tmp4_0gnefp.php on line 47

    '
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $s = str_split($s);\n    $result = \"\";\n    $letters = \"\
    abcdefghijklmnopqrstuvwxyz\";\n    $letters = str_split($letters);\n    $has_letter\
    \ = false;\n    foreach ($s as $char) {\n        if (in_array($char, $letters))\
    \ {\n            $has_letter = true;\n            if (ctype_lower($char)) {\n\
    \                $result .= strtoupper($char);\n            } else {\n       \
    \         $result .= strtolower($char);\n            }\n        } else {\n   \
    \         $result .= $char;\n        }\n    }\n    if ($has_letter) {\n      \
    \  return $result;\n    } else {\n        return strrev($result);\n    }\n}\n\
    $s = \"ab\";\necho solve($s);\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "AB\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpac9iq_ya.php:45\n\
    Stack trace:\n#0 /tmp/tmpac9iq_ya.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpac9iq_ya.php\
    \ on line 45\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $letters = range('a', 'z');\n    $letters = array_merge($letters,\
    \ range('A', 'Z'));\n    $s = str_split($s);\n    $output = \"\";\n    foreach\
    \ ($s as $item) {\n        if(in_array($item, $letters)){\n            $output\
    \ .= strtoupper($item) === $item ? strtolower($item) : strtoupper($item);\n  \
    \      } else {\n            $output .= $item;\n        }\n    }\n    return $output;\n\
    }\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwtpwvzh1.php:34\n\
    Stack trace:\n#0 /tmp/tmpwtpwvzh1.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpwtpwvzh1.php\
    \ on line 34\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n\
    \        if (ctype_alpha($s[$i])) {\n            $result .= $s[$i] == strtoupper($s[$i])\
    \ ? strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n            $result\
    \ .= $s[$i];\n        }\n    }\n    return strrev($result);\n}\necho solve(\"\
    0abC#\");\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\") !==\
    \ \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#AsdfW^45\"\
    ) !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #$a^D\") !== \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "#cBA0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_t96c2r1.php:31\n\
    Stack trace:\n#0 /tmp/tmp_t96c2r1.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp_t96c2r1.php\
    \ on line 31\n"
  timestamp: 1659978290
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    if (preg_match(\"#[a-zA-Z]#\", $s)) {\n        $s = str_split($s);\n\
    \        $solved = [];\n        foreach ($s as $char) {\n            if (ctype_alpha($char))\
    \ {\n                $solved[] = strtoupper($char) == $char ? strtolower($char)\
    \ : strtoupper($char);\n            } else {\n                $solved[] = $char;\n\
    \            }\n        }\n        return implode(\"\", $solved);\n    } else\
    \ {\n        return strrev($s);\n    }\n}\n\necho solve(\"#a@C\");\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '#A@c

    Warning: Undefined variable $a in /tmp/tmpec6wzxcr.php on line 43


    Warning: Undefined variable $A in /tmp/tmpec6wzxcr.php on line 43

    '
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    if(ctype_alpha($s)){\n        $res = '';\n        for($i =\
    \ 0; $i < strlen($s); $i++){\n            if(ctype_lower($s[$i])){\n         \
    \       $res .= strtoupper($s[$i]);\n            } else {\n                $res\
    \ .= strtolower($s[$i]);\n            }\n        }\n        return $res;\n   \
    \ }\n    return strrev($s);\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphzb4tsgv.php:37\n\
    Stack trace:\n#0 /tmp/tmphzb4tsgv.php(44): test()\n#1 {main}\n  thrown in /tmp/tmphzb4tsgv.php\
    \ on line 37\n"
  timestamp: 1659978290
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $length = strlen($s);\n    $newString = \"\";\n    $letters\
    \ = 0;\n    for ($i = 0; $i < $length; $i++) {\n        if (ctype_alpha($s[$i]))\
    \ {\n            $letters++;\n            if (ctype_upper($s[$i])) {\n       \
    \         $newString .= strtolower($s[$i]);\n            } else if (ctype_lower($s[$i]))\
    \ {\n                $newString .= strtoupper($s[$i]);\n            }\n      \
    \  } else {\n            $newString .= $s[$i];\n        }\n    }\n    if ($letters\
    \ === 0) {\n        return strrev($newString);\n    }\n    return $newString;\n\
    }\n\n$s = \"1234\";\n$result = solve($s);\necho \"<pre>solve('$s')\\r\\nReturned:\
    \ $result</pre>\";\n\n$s = \"ab\";\n$result = solve($s);\necho \"<pre>solve('$s')\\\
    r\\nReturned: $result</pre>\";\n\n$s = \"#a@C\";\n$result = solve($s);\necho \"\
    <pre>solve('$s')\\r\\nReturned: $result</pre>\";\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '<pre>solve(''1234'')

    Returned: 4321</pre><pre>solve(''ab'')

    Returned: AB</pre><pre>solve(''#a@C'')

    Returned: #A@c</pre>

    Warning: Undefined variable $a in /tmp/tmp1ti10tqr.php on line 58


    Warning: Undefined variable $A in /tmp/tmp1ti10tqr.php on line 58

    '
  timestamp: 1659978290
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $res = \"\";\n    $c = str_split($s);\n    $flag = false;\n\
    \    foreach ($c as $l) {\n        if(ctype_alpha($l)){\n            $flag = true;\n\
    \            if(ctype_upper($l))\n                $res .= strtolower($l);\n  \
    \          else\n                $res .= strtoupper($l);\n        }else\n    \
    \        $res .= $l;\n    }\n    if($flag)\n        return $res;\n    else{\n\
    \        return strrev($s);\n    }\n}\n\necho solve(\"1234\").\"\\n\";\necho solve(\"\
    ab\").\"\\n\";\necho solve(\"#a@C\").\"\\n\";\nfunction candidate(...$args) {\n\
    \    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '4321

    AB

    #A@c


    Warning: Undefined variable $a in /tmp/tmpghkffppc.php on line 49


    Warning: Undefined variable $A in /tmp/tmpghkffppc.php on line 49

    '
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    return preg_replace_callback('/[a-z]/i', function($m) {\n \
    \       return strtoupper($m[0]) ^ strtolower($m[0]) ^ $m[0];\n    }, $s);\n}\n\
    $solve = solve('#a@C');\necho $solve;\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AsDf\")\
    \ !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "#A@c\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpldf5lglc.php:27\n\
    Stack trace:\n#0 /tmp/tmpldf5lglc.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpldf5lglc.php\
    \ on line 27\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n  $letters = '';\n  for ($i = 0; $i < strlen($s); $i++) {\n   \
    \ if (preg_match('/[a-zA-Z]/', $s[$i])) {\n      $letters .= $s[$i];\n    }\n\
    \  }\n  if (strlen($letters) === 0) {\n    return strrev($s);\n  }\n  $result\
    \ = '';\n  for ($i = 0; $i < strlen($s); $i++) {\n    if (preg_match('/[a-zA-Z]/',\
    \ $s[$i])) {\n      $result .= strtolower($letters[strlen($letters) - 1]);\n \
    \     $letters = substr($letters, 0, strlen($letters) - 1);\n    } else {\n  \
    \    $result .= $s[$i];\n    }\n  }\n  return $result;\n}\necho solve(\"1234\"\
    );\necho \"\\n\";\necho solve(\"ab\");\necho \"\\n\";\necho solve(\"#a@C\");\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\") !==\
    \ \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#AsdfW^45\"\
    ) !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #$a^D\") !== \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "4321\nba\n#c@a\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1vkrv701.php:46\n\
    Stack trace:\n#0 /tmp/tmp1vkrv701.php(56): test()\n#1 {main}\n  thrown in /tmp/tmp1vkrv701.php\
    \ on line 46\n"
  timestamp: 1659978290
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $letters_count = 0;\n    $result = \"\";\n    for ($i = 0;\
    \ $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i])) {\n            $letters_count++;\n\
    \            if (ctype_upper($s[$i])) {\n                $result .= strtolower($s[$i]);\n\
    \            } else {\n                $result .= strtoupper($s[$i]);\n      \
    \      }\n        } else {\n            $result .= $s[$i];\n        }\n    }\n\
    \    if ($letters_count == 0) {\n        return strrev($result);\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined variable $a in /tmp/tmp3u68kvxf.php on line 46


    Warning: Undefined variable $A in /tmp/tmp3u68kvxf.php on line 46

    '
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $strlen = strlen($s);\n    $letters = str_split(\"qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM\"\
    );\n    $letters = array_flip($letters);\n    for ($i = 0; $i < $strlen; $i++)\
    \ {\n        if (array_key_exists($s[$i], $letters)) {\n            if (ctype_upper($s[$i]))\
    \ {\n                $s[$i] = strtolower($s[$i]);\n            } else {\n    \
    \            $s[$i] = strtoupper($s[$i]);\n            }\n        }\n    }\n \
    \   return $s;\n}\necho solve(\"1234\") . \"\\n\";\necho solve(\"ab\") . \"\\\
    n\";\necho solve(\"#a@C\") . \"\\n\";\n\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AsDf\")\
    \ !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1234\nAB\n#A@c\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp94hvn5rj.php:39\n\
    Stack trace:\n#0 /tmp/tmp94hvn5rj.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp94hvn5rj.php\
    \ on line 39\n"
  timestamp: 1659978290
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $s = str_split($s);\n    $is_letter = false;\n    foreach ($s\
    \ as $key => $value) {\n        if(ctype_alpha($value)) {\n            $is_letter\
    \ = true;\n            $s[$key] = strtolower($value) == $value ? strtoupper($value)\
    \ : strtolower($value);\n        }\n    }\n    if(!$is_letter) {\n        $s =\
    \ array_reverse($s);\n    }\n    return implode('', $s);\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined variable $a in /tmp/tmpozaj03cr.php on line 39


    Warning: Undefined variable $A in /tmp/tmpozaj03cr.php on line 39

    '
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $s = str_split($s);\n    for ($i = 0; $i < count($s); $i++)\
    \ {\n        if (ord($s[$i]) > 64 && ord($s[$i]) < 91) {\n            $s[$i] =\
    \ chr(ord($s[$i]) + 32);\n        } else if (ord($s[$i]) > 96 && ord($s[$i]) <\
    \ 123) {\n            $s[$i] = chr(ord($s[$i]) - 32);\n        }\n    }\n    $r\
    \ = '';\n    foreach ($s as $letter) {\n        $r .= $letter;\n    }\n    return\
    \ $r;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr627iql9.php:35\n\
    Stack trace:\n#0 /tmp/tmpr627iql9.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpr627iql9.php\
    \ on line 35\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    if (strlen($s) < 2) {\n        return $s;\n    }\n    $s =\
    \ str_split($s);\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (preg_match('/[a-zA-Z]/',\
    \ $s[$i])) {\n            $s[$i] = ctype_lower($s[$i]) ? strtoupper($s[$i]) :\
    \ strtolower($s[$i]);\n        }\n    }\n    return implode($s);\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: strlen(): Argument #1 ($str) must be\
    \ of type string, array given in /tmp/tmpguag31mx.php:19\nStack trace:\n#0 /tmp/tmpguag31mx.php(28):\
    \ solve(Array)\n#1 /tmp/tmpguag31mx.php(32): candidate('AsDf')\n#2 /tmp/tmpguag31mx.php(42):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpguag31mx.php on line 19\n"
  timestamp: 1659978290
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    if (!preg_match('/[a-zA-Z]/', $s)) {\n        return strrev($s);\n\
    \    }\n    $arr = str_split($s);\n    foreach ($arr as $k => $v) {\n        if\
    \ (preg_match('/[a-zA-Z]/', $v)) {\n            $arr[$k] = $v === strtoupper($v)\
    \ ? strtolower($v) : strtoupper($v);\n        }\n    }\n    return implode('',\
    \ $arr);\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\") !==\
    \ \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#AsdfW^45\"\
    ) !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #$a^D\") !== \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined variable $a in /tmp/tmpn_odavjs.php on line 37


    Warning: Undefined variable $A in /tmp/tmpn_odavjs.php on line 37

    '
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n  $a = str_split($s);\n  $r = '';\n  foreach ($a as $char) {\n\
    \    if (ctype_alpha($char)) {\n      $r .= ($char == strtoupper($char)) ? strtolower($char)\
    \ : strtoupper($char);\n    } else {\n      $r .= $char;\n    }\n  }\n  return\
    \ empty($r) ? strrev($s) : $r;\n}\n\n$inputs = [\n  '1234',\n  'ab',\n  '#a@C',\n\
    \  '123',\n  '12ab',\n  'AbCdEfGhIjK',\n  '1234abcdEFG',\n  '',\n  '@#',\n  '@#$%^&*()_',\n\
    \  '@#$%^&*()_aBcDe',\n  '@#$%^&*()_ABCDE',\n  '@#$%^&*()_abcde',\n  'ABCDE',\n\
    \  'abcde',\n  'AbcDe',\n  'AbCdE',\n  'AbcDeF',\n  'abCdEf',\n  'aBcDeF',\n \
    \ 'abCdEfG',\n  'AbCdEfGh',\n  'AbCdEfGhI',\n  'AbCdEfGhIj',\n  'AbCdEfGhIjK',\n\
    \  'aBcDeFgHiJk',\n  'abCdEfGhIjK',\n  'aBcDeFgHiJkL',\n  'aBcDeFgHiJkLm',\n \
    \ 'aBcDeFgHiJkLmN',\n  'aBcDeFgHiJkLmNo',\n  'aBcDeFgHiJkLmNoP',\n  'aBcDeFgHiJkLmNoPq',\n\
    \  'aBcDeFgHiJkLmNoPqR',\n  'aBcDeFgHiJkLmNoPqRs',\n  'aBc\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected string content "aBc", expecting "]" in /tmp/tmp9eakstih.php
    on line 63

    '
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $letters = array_filter(str_split($s), function($char) {\n\
    \        return ctype_alpha($char);\n    });\n    $numbers = array_filter(str_split($s),\
    \ function($char) {\n        return is_numeric($char);\n    });\n    return ($letters)\
    \ ? strtoupper(implode('', $letters)) . strtolower(implode('', $letters)) : strrev(implode('',\
    \ $numbers));\n}\necho solve(\"#a@C\");\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AsDf\")\
    \ !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "ACac\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaf_x62q3.php:29\n\
    Stack trace:\n#0 /tmp/tmpaf_x62q3.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpaf_x62q3.php\
    \ on line 29\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    if (strlen($s) == 0) {\n        return \"\";\n    }\n    $result\
    \ = \"\";\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ord($s[$i])\
    \ >= 65 && ord($s[$i]) <= 90) {\n            $result .= chr(ord($s[$i]) + 32);\n\
    \        } else if (ord($s[$i]) >= 97 && ord($s[$i]) <= 122) {\n            $result\
    \ .= chr(ord($s[$i]) - 32);\n        } else {\n            $result .= $s[$i];\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8vuku86y.php:37\n\
    Stack trace:\n#0 /tmp/tmp8vuku86y.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp8vuku86y.php\
    \ on line 37\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    if(ctype_alpha($s)) {\n        return strtoupper($s);\n   \
    \ } elseif(ctype_lower($s)) {\n        return strtoupper($s);\n    } elseif(ctype_upper($s))\
    \ {\n        return strtolower($s);\n    } else {\n        return $s;\n    }\n\
    }\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_cufg7rz.php:30\n\
    Stack trace:\n#0 /tmp/tmp_cufg7rz.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_cufg7rz.php\
    \ on line 30\n"
  timestamp: 1659978290
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $string = '';\n    if (!preg_match('/[a-zA-Z]/', $s)) {\n \
    \       $string = strrev($s);\n    } else {\n        for ($i = 0; $i < strlen($s);\
    \ $i++) {\n            if (ctype_alpha($s[$i])) {\n                $string .=\
    \ strtoupper($s[$i]) == $s[$i] ? strtolower($s[$i]) : strtoupper($s[$i]);\n  \
    \          } else {\n                $string .= $s[$i];\n            }\n     \
    \   }\n    }\n    return $string;\n}\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AsDf\")\
    \ !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined variable $a in /tmp/tmplqaadgv2.php on line 40


    Warning: Undefined variable $A in /tmp/tmplqaadgv2.php on line 40

    '
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n\t$res = '';\n\t$noLetters = true;\n\tfor ($i = 0; $i < strlen($s);\
    \ $i++) {\n\t\tif (ctype_alpha($s[$i])) {\n\t\t\t$noLetters = false;\n\t\t\t$res\
    \ .= $s[$i] == strtoupper($s[$i]) ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \t\t} else {\n\t\t\t$res .= $s[$i];\n\t\t}\n\t}\n\treturn $noLetters ? strrev($s)\
    \ : $res;\n}\n\n$s = readline('s: ');\necho solve($s);\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function readline() in\
    \ /tmp/tmpvjp4yzw2.php:28\nStack trace:\n#0 {main}\n  thrown in /tmp/tmpvjp4yzw2.php\
    \ on line 28\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    if (preg_match(\"/[a-zA-Z]/\", $s)){\n        $s = strtolower($s);\n\
    \        $s = str_split($s);\n        $length = count($s);\n        for ($i =\
    \ 0; $i < $length; $i++){\n            if (ord($s[$i]) >= 97 && ord($s[$i]) <=\
    \ 122){\n                $s[$i] = chr(ord($s[$i]) - 32);\n            }\n    \
    \    }\n        $s = implode(\"\", $s);\n    }\n    else{\n        $s = str_split($s);\n\
    \        $length = count($s);\n        for ($i = 0; $i < $length/2; $i++){\n \
    \           $temp = $s[$i];\n            $s[$i] = $s[$length - $i - 1];\n    \
    \        $s[$length - $i - 1] = $temp;\n        }\n        $s = implode(\"\",\
    \ $s);\n    }\n    return $s;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0_7ynyko.php:43\n\
    Stack trace:\n#0 /tmp/tmp0_7ynyko.php(53): test()\n#1 {main}\n  thrown in /tmp/tmp0_7ynyko.php\
    \ on line 43\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $reversed = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n\
    \        if ($s[$i] === strtoupper($s[$i])) {\n            $reversed .= strtolower($s[$i]);\n\
    \        } else if ($s[$i] === strtolower($s[$i])) {\n            $reversed .=\
    \ strtoupper($s[$i]);\n        } else {\n            $reversed .= $s[$i];\n  \
    \      }\n    }\n    return $reversed;\n}\nfunction candidate(...$args) {\n  \
    \  return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0iwihrev.php:33\n\
    Stack trace:\n#0 /tmp/tmp0iwihrev.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp0iwihrev.php\
    \ on line 33\n"
  timestamp: 1659978290
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $str = str_split($s);\n    $low = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    $up = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    for ($i=0; $i < count($str);\
    \ $i++) { \n        if (strpos($low, $str[$i]) !== false) {\n            $str[$i]\
    \ = strtoupper($str[$i]);\n        } elseif (strpos($up, $str[$i]) !== false)\
    \ {\n            $str[$i] = strtolower($str[$i]);\n        }\n    }\n    $rev\
    \ = implode($str);\n    if ($rev == $s) {\n        $rev = implode(array_reverse($str));\n\
    \    }\n    return $rev;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined variable $a in /tmp/tmpordn6cuw.php on line 42


    Warning: Undefined variable $A in /tmp/tmpordn6cuw.php on line 42

    '
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n  $regex = '/[a-zA-Z]/';\n  $result = '';\n  for ($i = 0; $i <\
    \ strlen($s); $i++) {\n    if (preg_match($regex, $s[$i])) {\n      $result .=\
    \ strtoupper($s[$i]) === $s[$i] ? strtolower($s[$i]) : strtoupper($s[$i]);\n \
    \   } else {\n      $result .= $s[$i];\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfe4iiy5c.php:33\n\
    Stack trace:\n#0 /tmp/tmpfe4iiy5c.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpfe4iiy5c.php\
    \ on line 33\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n  $converted = '';\n  $letters = 'abcdefghijklmnopqrstuvwxyz';\n\
    \  $is_there_letter = false;\n  for ($i = 0; $i < strlen($s); $i++) {\n    if\
    \ (preg_match('/[a-z]/i', $s[$i])) {\n      $is_there_letter = true;\n      $converted\
    \ .= str_replace($letters, strtoupper($letters), $s[$i]);\n    } else {\n    \
    \  $converted .= $s[$i];\n    }\n  }\n  if ($is_there_letter) {\n    return $converted;\n\
    \  } else {\n    return strrev($s);\n  }\n}\nfunction candidate(...$args) {\n\
    \    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnnzkmgpy.php:37\n\
    Stack trace:\n#0 /tmp/tmpnnzkmgpy.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpnnzkmgpy.php\
    \ on line 37\n"
  timestamp: 1659978290
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $result = '';\n    $letters = str_split('abcdefghijklmnopqrstuvwxyz');\n\
    \    $letters2 = str_split('ABCDEFGHIJKLMNOPQRSTUVWXYZ');\n    for ($i = 0; $i\
    \ < strlen($s); $i++) {\n        if (in_array($s[$i], $letters)) {\n         \
    \   $result .= strtoupper($s[$i]);\n        } elseif (in_array($s[$i], $letters2))\
    \ {\n            $result .= strtolower($s[$i]);\n        } else {\n          \
    \  $result .= $s[$i];\n        }\n    }\n    if (strcmp($result, $s) == 0) {\n\
    \        $result = strrev($result);\n    }\n    return $result;\n}\n\necho solve(\"\
    1234\");\necho \"\\n\";\necho solve(\"ab\");\necho \"\\n\";\necho solve(\"#a@C\"\
    );\necho \"\\n\";\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '4321

    AB

    #A@c


    Warning: Undefined variable $a in /tmp/tmpsjitpuru.php on line 50


    Warning: Undefined variable $A in /tmp/tmpsjitpuru.php on line 50

    '
  timestamp: 1659978290
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $hasLetter = preg_match('/[a-zA-Z]/', $s);\n    if ($hasLetter\
    \ == 0) {\n        return strrev($s);\n    } else {\n        $arr = str_split($s);\n\
    \        foreach ($arr as $key => $value) {\n            if (ctype_alpha($value))\
    \ {\n                $arr[$key] = strtolower($value) == $value ? strtoupper($value)\
    \ : strtolower($value);\n            }\n        }\n        return implode('',\
    \ $arr);\n    }\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined variable $a in /tmp/tmpb5xvunmm.php on line 40


    Warning: Undefined variable $A in /tmp/tmpb5xvunmm.php on line 40

    '
  timestamp: 1659978290
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n\t$s = str_split($s);\n\t$b = false;\n\tfor ($i=0; $i < count($s);\
    \ $i++) { \n\t\tif (ctype_alpha($s[$i])) {\n\t\t\t$b = true;\n\t\t\t$s[$i] = ctype_upper($s[$i])\
    \ ? strtolower($s[$i]) : strtoupper($s[$i]);\n\t\t}\n\t}\n\tif (!$b) {\n\t\t$s\
    \ = array_reverse($s);\n\t}\n\treturn implode($s);\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined variable $a in /tmp/tmpny8_duh8.php on line 39


    Warning: Undefined variable $A in /tmp/tmpny8_duh8.php on line 39

    '
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $chars = str_split($s);\n    $string = '';\n    for ($i = 0;\
    \ $i < count($chars); $i++) {\n        if (preg_match('/[a-z]/i', $chars[$i]))\
    \ {\n            $string .= ctype_lower($chars[$i]) ? strtoupper($chars[$i]) :\
    \ strtolower($chars[$i]);\n        } else {\n            $string .= $chars[$i];\n\
    \        }\n    }\n    return $string;\n}\n\nfunction candidate(...$args) {\n\
    \    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj4k1e1mh.php:33\n\
    Stack trace:\n#0 /tmp/tmpj4k1e1mh.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpj4k1e1mh.php\
    \ on line 33\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $letters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\
    \    $str = '';\n    $len = strlen($s);\n    for ($i = 0; $i < $len; $i++) {\n\
    \        if (strpos($letters, $s[$i]) !== false) {\n            $str .= strtoupper($s[$i])\
    \ === $s[$i] ? strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n  \
    \          $str .= $s[$i];\n        }\n    }\n    return $str === '' ? strrev($s)\
    \ : $str;\n}\n\necho solve(\"#a@C\"), PHP_EOL;\nfunction candidate(...$args) {\n\
    \    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "#A@c\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8uasoawf.php:35\n\
    Stack trace:\n#0 /tmp/tmp8uasoawf.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp8uasoawf.php\
    \ on line 35\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $new_string = \"\";\n    if(ctype_alpha($s)){\n        for($i\
    \ = 0; $i < strlen($s); $i++){\n            if(ctype_upper($s[$i])){\n       \
    \         $new_string .= strtolower($s[$i]);\n            }else{\n           \
    \     $new_string .= strtoupper($s[$i]);\n            }\n        }\n    }else{\n\
    \        for($i = strlen($s) - 1; $i >= 0; $i--){\n            $new_string .=\
    \ $s[$i];\n        }\n    }\n    return $new_string;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprvaxaezj.php:39\n\
    Stack trace:\n#0 /tmp/tmprvaxaezj.php(46): test()\n#1 {main}\n  thrown in /tmp/tmprvaxaezj.php\
    \ on line 39\n"
  timestamp: 1659978290
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    if (preg_match(\"/[a-zA-Z]/\", $s)){\n        return strtolower($s)\
    \ ^ strtoupper($s) ^ $s;\n    }\n    return strrev($s);\n}\necho solve(\"1234\"\
    ).\"\\n\";\necho solve(\"ab\").\"\\n\";\necho solve(\"#a@C\").\"\\n\";\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '4321

    AB

    #A@c


    Warning: Undefined variable $a in /tmp/tmpkp8lnulx.php on line 34


    Warning: Undefined variable $A in /tmp/tmpkp8lnulx.php on line 34

    '
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $count = strlen($s);\n    if (ctype_alpha($s)) {\n        return\
    \ strtoupper($s);\n    } else {\n        $newstring = \"\";\n        for ($i =\
    \ 0; $i < $count; $i++) {\n            if (ctype_alpha($s[$i])) {\n          \
    \      if (ctype_upper($s[$i])) {\n                    $newstring .= strtolower($s[$i]);\n\
    \                } elseif (ctype_lower($s[$i])) {\n                    $newstring\
    \ .= strtoupper($s[$i]);\n                }\n            } else {\n          \
    \      $newstring .= $s[$i];\n            }\n        }\n        return $newstring;\n\
    \    }\n}\n\necho solve(\"1234\") . \"\\n\";\necho solve(\"ab\") . \"\\n\";\n\
    echo solve(\"#a@C\") . \"\\n\";\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1234\nAB\n#A@c\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv2ny4q3o.php:43\n\
    Stack trace:\n#0 /tmp/tmpv2ny4q3o.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpv2ny4q3o.php\
    \ on line 43\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $new_str = \"\";\n    if (!ctype_alpha($s)){\n        $new_str\
    \ = array_reverse(str_split($s));\n        return implode(\"\", $new_str);\n \
    \   }\n    for ($i=0; $i < strlen($s); $i++) { \n        if (ctype_alpha($s[$i])){\n\
    \            if (ctype_upper($s[$i])) {\n                $new_str .= strtolower($s[$i]);\n\
    \            }\n            else {\n                $new_str .= strtoupper($s[$i]);\n\
    \            }\n        }\n        else {\n            $new_str .= $s[$i];\n \
    \       }\n    }\n    return $new_str;\n}\nfunction candidate(...$args) {\n  \
    \  return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp56rh9v8i.php:43\n\
    Stack trace:\n#0 /tmp/tmp56rh9v8i.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp56rh9v8i.php\
    \ on line 43\n"
  timestamp: 1659978290
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $str = str_split($s);\n    $count = 0;\n    for ($i=0; $i <\
    \ count($str); $i++) { \n        if (ctype_alpha($str[$i])) {\n            $count++;\n\
    \        }\n    }\n    if ($count == 0) {\n        $reversed = array_reverse($str);\n\
    \        $result = implode($reversed);\n        return $result;\n    }\n    for\
    \ ($i=0; $i < count($str); $i++) { \n        if (ctype_alpha($str[$i])) {\n  \
    \          if (ctype_upper($str[$i])) {\n                $str[$i] = strtolower($str[$i]);\n\
    \            } else {\n                $str[$i] = strtoupper($str[$i]);\n    \
    \        }\n        }\n    }\n    $result = implode($str);\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined variable $a in /tmp/tmpw981mwyb.php on line 50


    Warning: Undefined variable $A in /tmp/tmpw981mwyb.php on line 50

    '
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n  $result = \"\";\n  for ($i = 0; $i < strlen($s); $i++) {\n  \
    \  if (is_numeric($s[$i])) {\n      $result = $s[$i] . $result;\n    } else {\n\
    \      if (strtoupper($s[$i]) == $s[$i]) {\n        $result .= strtolower($s[$i]);\n\
    \      } else {\n        $result .= strtoupper($s[$i]);\n      }\n    }\n  }\n\
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps8gvvajz.php:39\n\
    Stack trace:\n#0 /tmp/tmps8gvvajz.php(45): test()\n#1 {main}\n  thrown in /tmp/tmps8gvvajz.php\
    \ on line 39\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n  if(ctype_alpha($s)){\n    return strtoupper($s);\n  }\n  else\
    \ if(ctype_digit($s)){\n    return strrev($s);\n  }\n  else{\n    $res = '';\n\
    \    $arr = str_split($s);\n    foreach($arr as $char){\n      if(ctype_upper($char)){\n\
    \        $res .= strtolower($char);\n      }\n      else if(ctype_lower($char)){\n\
    \        $res .= strtoupper($char);\n      }\n      else{\n        $res .= $char;\n\
    \      }\n    }\n    return $res;\n  }\n}\necho solve(\"#a@C\").\"\\n\";\necho\
    \ solve(\"ab\").\"\\n\";\necho solve(\"1234\").\"\\n\";\necho solve(\"5432\").\"\
    \\n\";\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "#A@c\nAB\n4321\n2345\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp1lvu6b5a.php:47\nStack trace:\n#0 /tmp/tmp1lvu6b5a.php(57): test()\n\
    #1 {main}\n  thrown in /tmp/tmp1lvu6b5a.php on line 47\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $s = str_split($s);\n    $alpha = str_split('abcdefghijklmnopqrstuvwxyz');\n\
    \    foreach ($s as $key => $value) {\n        if (in_array($value, $alpha)) {\n\
    \            $value = ctype_upper($value) ? strtolower($value) : strtoupper($value);\n\
    \            $s[$key] = $value;\n        }\n    }\n    return implode($s);\n}\n\
    \nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzt2g456s.php:31\n\
    Stack trace:\n#0 /tmp/tmpzt2g456s.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpzt2g456s.php\
    \ on line 31\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $s = str_split($s);\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n\
    \    $consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p',\
    \ 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n    $alphas = $vowels + $consonants;\n\
    \    $newStr = \"\";\n    foreach ($s as $i => $char) {\n        if (in_array($char,\
    \ $alphas)) {\n            if (in_array($char, $vowels)) {\n                $newStr\
    \ .= strtoupper($char);\n            } else if (in_array($char, $consonants))\
    \ {\n                $newStr .= strtolower($char);\n            }\n        } else\
    \ {\n            $newStr .= $char;\n        }\n    }\n    return $newStr;\n}\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpri24_r9l.php:38\n\
    Stack trace:\n#0 /tmp/tmpri24_r9l.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpri24_r9l.php\
    \ on line 38\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    if(strlen($s) == 0) {\n        return \"\";\n    }\n    $res\
    \ = \"\";\n    for($i = 0; $i < strlen($s); $i++) {\n        if(ctype_alpha($s[$i]))\
    \ {\n            if(ctype_upper($s[$i])) {\n                $res .= strtolower($s[$i]);\n\
    \            } else {\n                $res .= strtoupper($s[$i]);\n         \
    \   }\n        } else {\n            $res .= $s[$i];\n        }\n    }\n    return\
    \ $res;\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\") !==\
    \ \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#AsdfW^45\"\
    ) !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #$a^D\") !== \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7zaegp9u.php:39\n\
    Stack trace:\n#0 /tmp/tmp7zaegp9u.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp7zaegp9u.php\
    \ on line 39\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $res = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n   \
    \     if (ctype_alpha($s[$i])) {\n            $res .= strtoupper($s[$i]) === $s[$i]\
    \ ? strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n            $res\
    \ .= $s[$i];\n        }\n    }\n    return $res;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73gtgo6f.php:31\n\
    Stack trace:\n#0 /tmp/tmp73gtgo6f.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp73gtgo6f.php\
    \ on line 31\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $noLetter = true;\n    $len = strlen($s);\n    for ($i = 0;\
    \ $i < $len; $i++) {\n        if (ctype_alpha($s[$i])) {\n            $noLetter\
    \ = false;\n            $s[$i] = ctype_upper($s[$i]) ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \        }\n    }\n    return $noLetter ? strrev($s) : $s;\n}\n\n$cases = [\n\
    \    [\"1234\", \"4321\"],\n    [\"ab\", \"AB\"],\n    [\"#a@C\", \"#A@c\"],\n\
    \    [\"\", \"\"],\n    [\"Dhruv\", \"dhRUV\"],\n    [\"ABC\", \"abc\"],\n   \
    \ [\"aBC\", \"Abc\"],\n    [\"abC\", \"aBc\"],\n    [\"abCd\", \"aBcD\"],\n  \
    \  [\"123\", \"321\"],\n    [\"321\", \"123\"],\n    [\"aBbCcDdEeFf\", \"AbBcCdDeEfF\"\
    ],\n    [\"aBbCcDdEeFf\", \"AbBcCdDeEfF\"],\n    [\"\u0430\u0411\u0431\u0412\u0432\
    \u0413\u0433\u0414\u0434\u0415\u0435\u0401\u0451\u0416\u0436\u0417\u0437\u0418\
    \u0438\u0419\u0439\u041A\u043A\u041B\u043B\u041C\u043C\u041D\u043D\u041E\u043E\
    \u041F\u043F\u0420\u0440\u0421\u0441\u0422\u0442\u0423\u0443\u0424\u0444\u0425\
    \u0445\u0426\u0446\u0427\u0447\u0428\u0448\u0429\u0449\u042A\u044A\u042B\u044B\
    \u042C\u044C\u042D\u044D\u042E\u044E\u042F\u044F\", \"\u0410\u0431\u0411\u0432\
    \u0412\u0433\u0413\u0434\u0414\u0435\u0415\u0451\u0401\u0436\u0416\u0437\u0417\
    \u0438\u0418\u0439\u0419\u043A\u041A\u043B\u041B\u043C\u041C\u043D\u041D\u043E\
    \u041E\u043F\u041F\u0440\u0420\u0441\u0421\u0442\u0422\u0443\u0423\u0444\u0424\
    \u0445\u0425\u0446\u0426\u0447\u0427\u0448\u0428\u0449\u0429\u044A\u042A\u044B\
    \u042B\u044C\u042C\u044D\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "AsDf", expecting "]" in /tmp/tmpua65e0bh.php
    on line 46

    '
  timestamp: 1659978290
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    if(!preg_match(\"/[a-zA-Z]/\", $s)) {\n        return strrev($s);\n\
    \    }\n    $a = str_split($s);\n    $b = [];\n    foreach($a as $v) {\n     \
    \   if(preg_match(\"/[a-zA-Z]/\", $v)) {\n            if(strtolower($v) == $v)\
    \ {\n                $b[] = strtoupper($v);\n            } else {\n          \
    \      $b[] = strtolower($v);\n            }\n        } else {\n            $b[]\
    \ = $v;\n        }\n    }\n    return implode(\"\", $b);\n}\n\n$s = \"ab\";\n\
    print_r(solve($s));\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'AB

    Warning: Undefined variable $a in /tmp/tmp54ad5lx9.php on line 47


    Warning: Undefined variable $A in /tmp/tmp54ad5lx9.php on line 47

    '
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    return preg_replace_callback('/[a-z]/i', function($matches)\
    \ {\n        return strtolower($matches[0]) ^ strtoupper($matches[0]);\n    },\
    \ $s);\n}\nprint_r(solve(\"#a@C\"));\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AsDf\")\
    \ !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "# @ \nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoiuyskw7.php:25\n\
    Stack trace:\n#0 /tmp/tmpoiuyskw7.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpoiuyskw7.php\
    \ on line 25\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n  $final = \"\";\n  for ($i = 0; $i < strlen($s); $i++) {\n   \
    \ if (ctype_alpha($s[$i])) {\n      if (ctype_upper($s[$i])) {\n        $final\
    \ .= strtolower($s[$i]);\n      } else {\n        $final .= strtoupper($s[$i]);\n\
    \      }\n    } else {\n      $final .= $s[$i];\n    }\n  }\n  return strrev($final);\n\
    }\necho solve(\"ab\").\"\\n\";\necho solve(\"#a@C\").\"\\n\";\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "BA\nc@A#\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpma260omt.php:36\n\
    Stack trace:\n#0 /tmp/tmpma260omt.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpma260omt.php\
    \ on line 36\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    if (strlen($s) <= 1) return $s;\n    $letters = str_split(strtolower($s));\n\
    \    $length = count($letters);\n    $r = $length - 1;\n    $l = 0;\n    while\
    \ ($l < $r) {\n        while ($l < $length && !ctype_alpha($letters[$l])) $l++;\n\
    \        while ($r >= 0 && !ctype_alpha($letters[$r])) $r--;\n        if ($l <\
    \ $r) {\n            $letters[$l] = ctype_upper($letters[$l]) ? strtolower($letters[$l])\
    \ : strtoupper($letters[$l]);\n            $letters[$r] = ctype_upper($letters[$r])\
    \ ? strtolower($letters[$r]) : strtoupper($letters[$r]);\n            $l++;\n\
    \            $r--;\n        }\n    }\n    return implode('', $letters);\n}\n\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptx4sdndz.php:38\n\
    Stack trace:\n#0 /tmp/tmptx4sdndz.php(48): test()\n#1 {main}\n  thrown in /tmp/tmptx4sdndz.php\
    \ on line 38\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n  $ans = \"\";\n  $chars = str_split($s);\n  foreach ($chars as\
    \ $char) {\n    if (ctype_alpha($char)) {\n      $ans .= strtoupper($char) ==\
    \ $char ? strtolower($char) : strtoupper($char);\n    } else {\n      $ans .=\
    \ $char;\n    }\n  }\n  return strrev($ans);\n}\n\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwh5rs4hc.php:32\n\
    Stack trace:\n#0 /tmp/tmpwh5rs4hc.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpwh5rs4hc.php\
    \ on line 32\n"
  timestamp: 1659978290
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    if (preg_match(\"/[a-zA-Z]/\", $s)) {\n        $l = strlen($s);\n\
    \        $a = '';\n        for ($i = 0; $i < $l; $i++) {\n            if (preg_match(\"\
    /[a-z]/\", $s[$i])) {\n                $a .= strtoupper($s[$i]);\n           \
    \ } else if (preg_match(\"/[A-Z]/\", $s[$i])) {\n                $a .= strtolower($s[$i]);\n\
    \            } else {\n                $a .= $s[$i];\n            }\n        }\n\
    \        return $a;\n    } else {\n        return strrev($s);\n    }\n}\n\n$s\
    \ = \"ab\";\necho solve($s) . PHP_EOL;\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AsDf\")\
    \ !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'AB


    Warning: Undefined variable $a in /tmp/tmp4xmo87gj.php on line 46


    Warning: Undefined variable $A in /tmp/tmp4xmo87gj.php on line 46

    '
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $strs = str_split($s);\n    foreach ($strs as $str) {\n   \
    \     if (preg_match('/[a-z]/', $str)) {\n            $res[] = strtoupper($str);\n\
    \        } elseif (preg_match('/[A-Z]/', $str)) {\n            $res[] = strtolower($str);\n\
    \        } else {\n            $res[] = $str;\n        }\n    }\n    return strrev(implode('',\
    \ $res));\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\") !==\
    \ \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#AsdfW^45\"\
    ) !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #$a^D\") !== \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdmjl3kge.php:32\n\
    Stack trace:\n#0 /tmp/tmpdmjl3kge.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpdmjl3kge.php\
    \ on line 32\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $s = str_split($s);\n    $a = [];\n    foreach ($s as $key\
    \ => $value) {\n        if (ctype_alpha($value)) {\n            $a[] = $value;\n\
    \        }\n    }\n    $a = array_reverse($a);\n    $result = '';\n    foreach\
    \ ($s as $key => $value) {\n        if (ctype_alpha($value)) {\n            $result\
    \ .= strtolower($a[0]);\n            array_shift($a);\n        } else {\n    \
    \        $result .= $value;\n        }\n    }\n    return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1hgtge1b.php:39\n\
    Stack trace:\n#0 /tmp/tmp1hgtge1b.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp1hgtge1b.php\
    \ on line 39\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $char_array = preg_split('//u', $s, -1, PREG_SPLIT_NO_EMPTY);\n\
    \    if (strlen($s) > 0) {\n        $s = '';\n        foreach ($char_array as\
    \ $char) {\n            if ($char == strtoupper($char)) {\n                $s\
    \ .= strtolower($char);\n            } else if ($char == strtolower($char)) {\n\
    \                $s .= strtoupper($char);\n            } else {\n            \
    \    $s .= $char;\n            }\n        }\n    } else {\n        $s = strrev($s);\n\
    \    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoop6ah1n.php:39\n\
    Stack trace:\n#0 /tmp/tmpoop6ah1n.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpoop6ah1n.php\
    \ on line 39\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $s = array_reverse(str_split($s));\n    $n = count($s);\n \
    \   for ($i = 0; $i < $n; $i++) {\n        if (ctype_alpha($s[$i])) {\n      \
    \      $s[$i] = strtolower($s[$i]) ? strtoupper($s[$i]) : strtolower($s[$i]);\n\
    \        }\n    }\n    return join($s);\n}\n\nfunction candidate(...$args) {\n\
    \    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpimfrx8eh.php:30\n\
    Stack trace:\n#0 /tmp/tmpimfrx8eh.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpimfrx8eh.php\
    \ on line 30\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $str = str_split($s);\n    $res = '';\n    foreach ($str as\
    \ $char) {\n        if (preg_match('/[a-zA-Z]/', $char)) {\n            $res .=\
    \ strtoupper($char) == $char ? strtolower($char) : strtoupper($char);\n      \
    \  } else {\n            $res .= $char;\n        }\n    }\n    return strlen($res)\
    \ == 0 ? strrev($s) : $res;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp76tl21h9.php:32\n\
    Stack trace:\n#0 /tmp/tmp76tl21h9.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp76tl21h9.php\
    \ on line 32\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    return implode('', array_map(function($c) {\n        return\
    \ ctype_alpha($c) ? ($c === strtoupper($c) ? strtolower($c) : strtoupper($c))\
    \ : $c;\n    }, str_split(strrev($s))));\n}\nfunction candidate(...$args) {\n\
    \    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpizzh100b.php:24\n\
    Stack trace:\n#0 /tmp/tmpizzh100b.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpizzh100b.php\
    \ on line 24\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $nums = '0123456789';\n    $low = 'abcdefghijklmnopqrstuvwxyz';\n\
    \    $up = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    $new_s = '';\n    for ($i = 0; $i\
    \ < strlen($s); $i++) {\n        if (strpos($nums, $s[$i]) !== false) {\n    \
    \        $new_s = $s[$i] . $new_s;\n        } else if (strpos($low, $s[$i]) !==\
    \ false) {\n            $new_s = strtoupper($s[$i]) . $new_s;\n        } else\
    \ if (strpos($up, $s[$i]) !== false) {\n            $new_s = strtolower($s[$i])\
    \ . $new_s;\n        }\n    }\n    return $new_s;\n}\necho solve(\"1234\");\n\
    echo solve(\"ab\");\necho solve(\"#a@C\");\nfunction candidate(...$args) {\n \
    \   return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "4321BAcA\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_c8asyjw.php:38\n\
    Stack trace:\n#0 /tmp/tmp_c8asyjw.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp_c8asyjw.php\
    \ on line 38\n"
  timestamp: 1659978290
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n  if (preg_match('/[a-zA-Z]/', $s)) {\n    for ($i = 0; $i < strlen($s);\
    \ $i++) {\n      if ($s[$i] == strtoupper($s[$i])) {\n        $result .= strtolower($s[$i]);\n\
    \      } else {\n        $result .= strtoupper($s[$i]);\n      }\n    }\n  } else\
    \ {\n    $result = strrev($s);\n  }\n  return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined variable $result in /tmp/tmpndj0r205.php on line 18


    Warning: Undefined variable $result in /tmp/tmpndj0r205.php on line 20


    Warning: Undefined variable $result in /tmp/tmpndj0r205.php on line 18


    Warning: Undefined variable $result in /tmp/tmpndj0r205.php on line 18


    Warning: Undefined variable $a in /tmp/tmpndj0r205.php on line 39


    Warning: Undefined variable $result in /tmp/tmpndj0r205.php on line 18


    Warning: Undefined variable $A in /tmp/tmpndj0r205.php on line 39


    Warning: Undefined variable $result in /tmp/tmpndj0r205.php on line 18

    '
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $result = '';\n    if(empty(trim($s, '1234567890'))) {\n  \
    \      $result = strrev($s);\n    } else {\n        for($i = 0; $i < strlen($s);\
    \ $i++) {\n            if(ctype_alpha($s[$i])) {\n                $result .= strtoupper($s[$i])\
    \ == $s[$i] ? strtolower($s[$i]) : strtoupper($s[$i]);\n            } else {\n\
    \                $result .= $s[$i];\n            }\n        }\n    }\n    return\
    \ $result;\n}\nprint_r(solve(\"1234\"));\nprint_r(solve(\"ab\"));\nprint_r(solve(\"\
    #a@C\"));\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\") !==\
    \ \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#AsdfW^45\"\
    ) !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #$a^D\") !== \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "4321AB#A@c\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2j8xciq3.php:42\n\
    Stack trace:\n#0 /tmp/tmp2j8xciq3.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp2j8xciq3.php\
    \ on line 42\n"
  timestamp: 1659978290
- exit_code: -1
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $letters = array_filter(str_split($s), function($c) { return\
    \ ctype_alpha($c); });\n    if (empty($letters)) {\n        return strrev($s);\n\
    \    }\n    return join(array_map(function($c) {\n        return ctype_upper($c)\
    \ ? strtolower($c) : strtoupper($c);\n    }, $letters));\n}\n\ndo {\n    fwrite(STDOUT,\
    \ 'Enter string: ');\n    $line = trim(fgets(STDIN));\n    if ($line == 'quit')\
    \ {\n        break;\n    }\n    echo 'Result: ' . solve($line) . PHP_EOL;\n} while\
    \ (true);\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\") !==\
    \ \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#AsdfW^45\"\
    ) !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #$a^D\") !== \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Timeout
  stderr: None
  stdout: 'b''Enter string: Result: \nEnter string: Result: \nEnter string: Result:
    \nEnter string: Result: \nEnter string: Result: \nEnter string: Result: \nEnter
    string: Result: \nEnter string: Result: \nEnter string: Result: \nEnter string:
    Result: \nEnter string: Result: \nEnter string: Result: \nEnter string: Result:
    \nEnter string: Result: \nEnter string: Result: \nEnter string: Result: \nEnter
    string: Result: \nEnter string: Result: \nEnter string: Result: \nEnter string:
    Result: \nEnter string: Result: \nEnter string: Result: \nEnter string: Result:
    \nEnter string: Result: \nEnter string: Result: \nEnter string: Result: \nEnter
    string: Result: \nEnter string: Result: \nEnter string: Result: \nEnter string:
    Result: \nEnter string: Result: \nEnter string: Result: \nEnter string: Result:
    \nEnter string: Result: \nEnter string: Result: \nEnter string: Result: \nEnter
    string: Result: \nEnter string: Result: \nEnter string: Result: \nEnter string:
    Result: \nEnter string: Result: \nEnter string: Result: \nEnter string: Result:
    \nEnter string: Result: \nEnter string: Result: \nEnter string: Result: \nEnter
    string: Result: \nEnter string: Result: \nEnter string: Result: \nEnter string:
    Result: \nEnter string: Result: \nEnter string: Result: \nEnter string: Result:
    \nEnter string: Result: \nEnter string: Result: \nEnter string: Result: \nEnter
    string: Result: \nEnter string: Result: \nEnter string: Result: \nEnter string:
    Result: \nEnter string: Result: \nEnter string: Result: \nEnter string: Result:
    \nEnter string: Result: \nEnter string: Result: \nEnter string: Result: \nEnter
    string: Result: \nEnter string: Result: \nEnter string: Result: \nEnter string:
    Result: \nEnter string: Result: \nEnter string: Result: \nEnter string: Result:
    \nEnter string: Result: \nEnter string: Result: \nEnter string: Result: \nEnter
    string: Result: \nEnter string: Result: \nEnter string: Result: \nEnter string:
    Result: \nEnter string: Result: \nEnter string: Result: \nEnter string: Result:
    \nEnter string: Result: \nEnter string: Result: \nEnter '
  timestamp: 1659978295
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    if (!preg_match('/[a-zA-Z]/', $s))\n        return strrev($s);\n\
    \    $res = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if ($s[$i]\
    \ == strtoupper($s[$i]))\n            $res .= strtolower($s[$i]);\n        else\
    \ if ($s[$i] == strtolower($s[$i]))\n            $res .= strtoupper($s[$i]);\n\
    \        else\n            $res .= $s[$i];\n    }\n    return $res;\n}\n\necho\
    \ solve(\"1234\").PHP_EOL;\necho solve(\"ab\").PHP_EOL;\necho solve(\"#a@C\").PHP_EOL;\n\
    function candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#$a^D\") !==\
    \ \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '4321

    AB

    #A@c


    Warning: Undefined variable $a in /tmp/tmpsvvjydkj.php on line 43


    Warning: Undefined variable $A in /tmp/tmpsvvjydkj.php on line 43

    '
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $letters = preg_split('/[^a-zA-Z]/', $s, -1, PREG_SPLIT_NO_EMPTY);\n\
    \    if (empty($letters)) return strrev($s);\n    foreach ($letters as $letter)\
    \ {\n        if ($letter === strtoupper($letter)) {\n            $s = str_replace($letter,\
    \ strtolower($letter), $s);\n        } else {\n            $s = str_replace($letter,\
    \ strtoupper($letter), $s);\n        }\n    }\n    return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg0h16tou.php:31\n\
    Stack trace:\n#0 /tmp/tmpg0h16tou.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpg0h16tou.php\
    \ on line 31\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n\t$res = '';\n\tif (ctype_alpha($s)) {\n\t\t$res = strtoupper($s);\n\
    \t} else {\n\t\t$res = strrev($s);\n\t}\n\treturn $res;\n}\n\necho solve(\"#a@C\"\
    );\necho solve(\"1234\");\necho solve(\"ab\");\nfunction candidate(...$args) {\n\
    \    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "C@a#4321AB\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprc82a_dg.php:32\n\
    Stack trace:\n#0 /tmp/tmprc82a_dg.php(42): test()\n#1 {main}\n  thrown in /tmp/tmprc82a_dg.php\
    \ on line 32\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n\t$s = str_split($s);\n\tfor ($i=0; $i < count($s); $i++) { \n\t\
    \t$s[$i] = ctype_alpha($s[$i]) ? ($s[$i] == strtoupper($s[$i]) ? strtolower($s[$i])\
    \ : strtoupper($s[$i])) : $s[$i];\n\t}\n\treturn implode($s);\n}\n\nprint_r(solve(\"\
    #a@C\"));\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\") !==\
    \ \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#AsdfW^45\"\
    ) !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #$a^D\") !== \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "#A@c\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp222rv_yl.php:29\n\
    Stack trace:\n#0 /tmp/tmp222rv_yl.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp222rv_yl.php\
    \ on line 29\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $strlen = strlen($s);\n    $str = '';\n    for ($i = 0; $i\
    \ < $strlen; $i++) {\n        if (ctype_alpha($s[$i])) {\n            $s[$i] =\
    \ strtoupper($s[$i]) === $s[$i] ? strtolower($s[$i]) : strtoupper($s[$i]);\n \
    \       }\n        $str .= $s[$i];\n    }\n    if (ctype_alpha($str)) {\n    \
    \    return strrev($str);\n    }\n    return $str;\n}\necho solve(\"1234\");\n\
    echo \"<br>\";\necho solve(\"ab\");\necho \"<br>\";\necho solve(\"#a@C\");\nfunction\
    \ candidate(...$args) {\n    return solve(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1234\") !== \"4321\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"AB\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1234<br>BA<br>#A@c\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7iqnuwkx.php:38\n\
    Stack trace:\n#0 /tmp/tmp7iqnuwkx.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp7iqnuwkx.php\
    \ on line 38\n"
  timestamp: 1659978290
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    if (!preg_match('/[a-zA-Z]/', $s)) return strrev($s);\n   \
    \ $ret = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        $c = $s[$i];\n\
    \        if (preg_match('/[a-zA-Z]/', $c)) {\n            $ret .= $c == strtolower($c)\
    \ ? strtoupper($c) : strtolower($c);\n        } else {\n            $ret .= $c;\n\
    \        }\n    }\n    return $ret;\n}\n\necho solve(\"1234\"), \"\\n\";\necho\
    \ solve(\"ab\"), \"\\n\";\necho solve(\"#a@C\"), \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '4321

    AB

    #A@c


    Warning: Undefined variable $a in /tmp/tmp369acjxo.php on line 42


    Warning: Undefined variable $A in /tmp/tmp369acjxo.php on line 42

    '
  timestamp: 1659978290
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $flg = false;\n    $ret = '';\n    for ($i = 0; $i < strlen($s);\
    \ $i++) {\n        if (ctype_alpha($s[$i])) {\n            $flg = true;\n    \
    \        $ret .= strtoupper($s[$i]) == $s[$i] ? strtolower($s[$i]) : strtoupper($s[$i]);\n\
    \        } else {\n            $ret .= $s[$i];\n        }\n    }\n    return $flg\
    \ ? $ret : strrev($s);\n}\necho solve(\"1234\") . \"\\n\";\necho solve(\"ab\"\
    ) . \"\\n\";\necho solve(\"#a@C\") . \"\\n\";\nfunction candidate(...$args) {\n\
    \    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '4321

    AB

    #A@c


    Warning: Undefined variable $a in /tmp/tmpen19k9t2.php on line 41


    Warning: Undefined variable $A in /tmp/tmpen19k9t2.php on line 41

    '
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $temp = \"\";\n    for ($i = 0; $i < strlen($s); $i++) {\n\
    \        if (ord($s[$i]) >= 97 && ord($s[$i]) <= 122) {\n            $temp .=\
    \ chr(ord($s[$i]) - 32);\n        } else if (ord($s[$i]) >= 65 && ord($s[$i])\
    \ <= 90) {\n            $temp .= chr(ord($s[$i]) + 32);\n        } else {\n  \
    \          $temp .= $s[$i];\n        }\n    }\n    return strrev($temp);\n}\n\n\
    echo solve(\"#a@C\");\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "c@A#\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe7c3cmfr.php:34\n\
    Stack trace:\n#0 /tmp/tmpe7c3cmfr.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpe7c3cmfr.php\
    \ on line 34\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    // Place your code here\n    return \"\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptsqaf721.php:24\n\
    Stack trace:\n#0 /tmp/tmptsqaf721.php(34): test()\n#1 {main}\n  thrown in /tmp/tmptsqaf721.php\
    \ on line 24\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    if (ctype_alpha($s)) {\n        return strtoupper($s);\n  \
    \  } else {\n        return strtolower($s);\n    }\n    return strrev($s);\n}\n\
    $s = \"ab\";\nvar_dump(solve($s));\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AsDf\")\
    \ !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string(2) \"AB\"\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg9hilvqs.php:29\n\
    Stack trace:\n#0 /tmp/tmpg9hilvqs.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpg9hilvqs.php\
    \ on line 29\n"
  timestamp: 1659978290
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n  if (!preg_match('/[a-zA-Z]/', $s)) {\n    return strrev($s);\n\
    \  }\n  return preg_replace_callback('/[a-zA-Z]/', function($match) {\n    return\
    \ strtolower($match[0]) == $match[0] ? strtoupper($match[0]) : strtolower($match[0]);\n\
    \  }, $s);\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"AB\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\") !==\
    \ \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#AsdfW^45\"\
    ) !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #$a^D\") !== \"#$A^d\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #ccc\") !== \"#CCC\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined variable $a in /tmp/tmpalpwarlt.php on line 33


    Warning: Undefined variable $A in /tmp/tmpalpwarlt.php on line 33

    '
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $strArray = str_split($s);\n    $result = '';\n    $flag =\
    \ true;\n    foreach ($strArray as $key => $str) {\n        if (ctype_alpha($str))\
    \ {\n            $result .= ($flag) ? strtoupper($str) : strtolower($str);\n \
    \           $flag = false;\n        } else {\n            $result .= $str;\n \
    \       }\n    }\n    if ($flag) {\n        $result = strrev($result);\n    }\n\
    \    return $result;\n}\n\necho solve(\"1234\") . PHP_EOL;\necho solve(\"ab\"\
    ) . PHP_EOL;\necho solve(\"#a@C\") . PHP_EOL;\nfunction candidate(...$args) {\n\
    \    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "4321\nAb\n#A@c\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm3d3totq.php:40\n\
    Stack trace:\n#0 /tmp/tmpm3d3totq.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpm3d3totq.php\
    \ on line 40\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    // the regexp matches a string having at least one letter\n\
    \    if (preg_match('/[a-zA-Z]/', $s)) {\n        // the string has at least one\
    \ letter\n        // if the string has only letters, we must reverse the string\n\
    \        // so if the regexp matches the string, we must reverse it\n        //\
    \ otherwise, we must reverse the case of each letter\n        $regexp = '/^[a-zA-Z]+$/';\n\
    \        if (preg_match($regexp, $s)) {\n            $s = strrev($s);\n      \
    \  } else {\n            $s = str_split($s);\n            foreach ($s as $key\
    \ => $value) {\n                if (ctype_alpha($value)) {\n                 \
    \   $s[$key] = $value == strtoupper($value) ? strtolower($value) : strtoupper($value);\n\
    \                }\n            }\n            $s = implode($s);\n        }\n\
    \    } else {\n        // the string has no letters\n        // so we just reverse\
    \ it\n        $s = strrev($s);\n    }\n    return $s;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppblupqa4.php:45\n\
    Stack trace:\n#0 /tmp/tmppblupqa4.php(55): test()\n#1 {main}\n  thrown in /tmp/tmppblupqa4.php\
    \ on line 45\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n  $letters = range('a', 'z');\n  $letters = array_merge($letters,\
    \ range('A', 'Z'));\n  $result = '';\n  $s = str_split($s);\n  foreach ($s as\
    \ $char) {\n    if (in_array($char, $letters)) {\n      $result .= ($char == strtoupper($char))\
    \ ? strtolower($char) : strtoupper($char);\n    } else {\n      $result .= $char;\n\
    \    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AsDf\")\
    \ !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp03b3cz81.php:35\n\
    Stack trace:\n#0 /tmp/tmp03b3cz81.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp03b3cz81.php\
    \ on line 35\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j',\
    \ 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'];\n\
    \    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (in_array($s[$i],\
    \ $letters)) {\n            if ($s[$i] == strtoupper($s[$i])) {\n            \
    \    $result .= strtolower($s[$i]);\n            } else {\n                $result\
    \ .= strtoupper($s[$i]);\n            }\n        } else {\n            $result\
    \ .= $s[$i];\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8iq5r43r.php:35\n\
    Stack trace:\n#0 /tmp/tmp8iq5r43r.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp8iq5r43r.php\
    \ on line 35\n"
  timestamp: 1659978290
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    if(preg_match(\"/[a-zA-Z]/\", $s)) {\n        return strtolower($s)\
    \ ^ strtoupper($s) ^ $s;\n    }\n    return strrev($s);\n}\necho solve(\"1234\"\
    );\necho solve(\"ab\");\necho solve(\"#a@C\");\nfunction candidate(...$args) {\n\
    \    return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '4321AB#A@c

    Warning: Undefined variable $a in /tmp/tmpct3yngt2.php on line 34


    Warning: Undefined variable $A in /tmp/tmpct3yngt2.php on line 34

    '
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $n = \"\";\n    for ($i = 0; $i < strlen($s); $i++) {\n   \
    \     if (preg_match(\"/[a-z]/i\", $s[$i])) {\n            $n .= strtoupper($s[$i]);\n\
    \        } else {\n            $n .= strtolower($s[$i]);\n        }\n    }\n \
    \   return $n;\n}\n\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5v91mwat.php:31\n\
    Stack trace:\n#0 /tmp/tmp5v91mwat.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp5v91mwat.php\
    \ on line 31\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    $letters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\n\
    \    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (strpos($letters,\
    \ $s[$i]) !== false) {\n            $result .= $s[$i] === strtoupper($s[$i]) ?\
    \ strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n            $result\
    \ .= $s[$i];\n        }\n    }\n    return strlen($result) === 0 ? strrev($s)\
    \ : $result;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpujjanjrf.php:32\n\
    Stack trace:\n#0 /tmp/tmpujjanjrf.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpujjanjrf.php\
    \ on line 32\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n    return (preg_match(\"/[a-zA-Z]/\", $s)) ? strtolower($s) :\
    \ strrev($s);\n}\necho solve(\"ab\");\nfunction candidate(...$args) {\n    return\
    \ solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AsDf\")\
    \ !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "ab\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi_5okavk.php:23\n\
    Stack trace:\n#0 /tmp/tmpi_5okavk.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpi_5okavk.php\
    \ on line 23\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n\tif(ctype_alpha($s)){\n\t\tif(ctype_upper($s)){\n\t\t\t$s = strtolower($s);\n\
    \t\t}elseif(ctype_lower($s)){\n\t\t\t$s = strtoupper($s);\n\t\t}\n\t}else{\n\t\
    \t$s = strrev($s);\n\t}\n\treturn $s;\n}\nfunction candidate(...$args) {\n   \
    \ return solve(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AsDf\") !== \"aSdF\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1234\") !== \"4321\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #a@C\") !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbwwv270z.php:31\n\
    Stack trace:\n#0 /tmp/tmpbwwv270z.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpbwwv270z.php\
    \ on line 31\n"
  timestamp: 1659978290
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// if s[i] is a letter, reverse its\
    \ case from lower to upper or vise versa, \n// otherwise keep it as it is.\n//\
    \ If the string contains no letters, reverse the string.\n// The function should\
    \ return the resulted string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\
    \n// >>> solve(\"ab\")\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction\
    \ solve($s) {\n  $n = strlen($s);\n  $res = '';\n  for ($i = 0; $i < $n; $i++)\
    \ {\n    if (ctype_alpha($s[$i])) {\n      $res .= ($s[$i] === strtoupper($s[$i]))\
    \ ? strtolower($s[$i]) : strtoupper($s[$i]);\n    } else {\n      $res .= $s[$i];\n\
    \    }\n  }\n  return $res;\n}\nfunction candidate(...$args) {\n    return solve(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AsDf\") !== \"aSdF\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1234\") !== \"4321\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\
    AB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"#a@C\")\
    \ !== \"#A@c\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #AsdfW^45\") !== \"#aSDFw^45\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\"#6@2\") !== \"2@6#\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"#$a^D\") !== \"#$A^d\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"#ccc\") !== \"#CCC\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptzekmnfk.php:32\n\
    Stack trace:\n#0 /tmp/tmptzekmnfk.php(41): test()\n#1 {main}\n  thrown in /tmp/tmptzekmnfk.php\
    \ on line 32\n"
  timestamp: 1659978290

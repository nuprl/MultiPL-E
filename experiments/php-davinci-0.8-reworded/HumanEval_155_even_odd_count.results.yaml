language: php
name: HumanEval_155_even_odd_count
results:
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  // Write your code here\n\n}\n\n$input1 = -12;\nprint_r(even_odd_count($input1));\n\
    \n$input2 = 123;\nprint_r(even_odd_count($input2));\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg5mhuvm3.php:24\n\
    Stack trace:\n#0 /tmp/tmpg5mhuvm3.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpg5mhuvm3.php\
    \ on line 24\n"
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $num = abs($num);\n    $even_counter = 0;\n    $odd_counter = 0;\n  \
    \  $num_as_string = \"$num\";\n    for ($i = 0; $i < strlen($num_as_string); $i++)\
    \ {\n        if ($num_as_string[$i] % 2 == 0) {\n            $even_counter++;\n\
    \        } else {\n            $odd_counter++;\n        }\n    }\n    return array($even_counter,\
    \ $odd_counter);\n}\n\necho \"<pre>\";\necho \"Given the number -12, array(1,\
    \ 1) should be returned.\\n\";\nprint_r(even_odd_count(-12));\necho \"Given the\
    \ number 123, array(1, 2) should be returned.\\n\";\nprint_r(even_odd_count(123));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "<pre>Given the number -12, array(1, 1) should be returned.\nArray\n(\n\
    \    [0] => 1\n    [1] => 1\n)\nGiven the number 123, array(1, 2) should be returned.\n\
    Array\n(\n    [0] => 1\n    [1] => 2\n)\n</pre>"
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    if ($num >= 0) {\n        $num = (string)$num;\n        $odd = substr_count($num,\
    \ \"1\") + substr_count($num, \"3\") + substr_count($num, \"5\") + substr_count($num,\
    \ \"7\") + substr_count($num, \"9\");\n        $even = substr_count($num, \"0\"\
    ) + substr_count($num, \"2\") + substr_count($num, \"4\") + substr_count($num,\
    \ \"6\") + substr_count($num, \"8\");\n    } else {\n        $num = (string)$num;\n\
    \        $num = substr($num, 1);\n        $odd = substr_count($num, \"1\") + substr_count($num,\
    \ \"3\") + substr_count($num, \"5\") + substr_count($num, \"7\") + substr_count($num,\
    \ \"9\");\n        $even = substr_count($num, \"0\") + substr_count($num, \"2\"\
    ) + substr_count($num, \"4\") + substr_count($num, \"6\") + substr_count($num,\
    \ \"8\");\n    }\n    $res = array($even, $odd);\n    return $res;\n}\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  $digits = str_split(abs($num));\n  $even = array_filter($digits, function($num)\
    \ { return $num % 2 == 0; });\n  $odd = array_filter($digits, function($num) {\
    \ return $num % 2 == 1; });\n  return array(count($even), count($odd));\n}\n\n\
    echo 'even_odd_count(-12): ';\nvar_dump(even_odd_count(-12));\necho 'even_odd_count(123):\
    \ ';\nvar_dump(even_odd_count(123));\n\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "even_odd_count(-12): array(2) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(1)\n\
    }\neven_odd_count(123): array(2) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(2)\n}\n"
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  $digits = str_split(abs($num));\n  $even = 0;\n  $odd = 0;\n  foreach ($digits\
    \ as $digit) {\n    if ($digit % 2 == 0) {\n      $even++;\n    } else {\n   \
    \   $odd++;\n    }\n  }\n  return array($even, $odd);\n}\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823903
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  $arr = [];\n  if ($num < 0) {\n    $num = $num * -1;\n  }\n  $num = strval($num);\n\
    \  for ($i = 0; $i < strlen($num); $i++) {\n    if ($num[$i] % 2 == 0) {\n   \
    \   $arr[0] += 1;\n    } else {\n      $arr[1] += 1;\n    }\n  }\n  return $arr;\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 1 in /tmp/tmp1cpyjkxc.php on line 18\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp1cpyjkxc.php:29\nStack\
    \ trace:\n#0 /tmp/tmp1cpyjkxc.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp1cpyjkxc.php\
    \ on line 29\n"
  timestamp: 1659823903
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  $num = str_split($num);\n  $count = 0;\n  $count2 = 0;\n  for ($i = 0;\
    \ $i < count($num); $i++) {\n    if ($num[$i] % 2 == 0) {\n      $count++;\n \
    \   } else {\n      $count2++;\n    }\n  }\n  return array($count, $count2);\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpw251hq_h.php:13\nStack trace:\n#0 /tmp/tmpw251hq_h.php(23): even_odd_count(Array)\n\
    #1 /tmp/tmpw251hq_h.php(28): candidate(-78)\n#2 /tmp/tmpw251hq_h.php(37): test()\n\
    #3 {main}\n  thrown in /tmp/tmpw251hq_h.php on line 13\n"
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n   $arr = str_split(abs($num));\n   $even_count = 0;\n   $odd_count = 0;\n\
    \   foreach ($arr as $num) {\n      if ($num % 2 == 0) {\n         $even_count\
    \ += 1;\n      } else {\n         $odd_count += 1;\n      }\n   }\n   $result\
    \ = array($even_count, $odd_count);\n   return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n\t$digits = str_split(abs($num));\n\t$even = 0;\n\t$odd = 0;\n\tforeach ($digits\
    \ as $digit) {\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\
    \t$odd++;\n\t\t}\n\t}\n\treturn array($even, $odd);\n}\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823903
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n\t$array = array();\n\t$evenCount = 0;\n\t$oddCount = 0;\n\t$num = strval($num);\n\
    \tfor ($i = 0; $i < strlen($num); $i++) {\n\t\tif ($num[$i] % 2 == 0) {\n\t\t\t\
    $evenCount++;\n\t\t} else {\n\t\t\t$oddCount++;\n\t\t}\n\t}\n\tarray_push($array,\
    \ $evenCount, $oddCount);\n\treturn $array;\n}\n\nprint_r(even_odd_count(-12));\n\
    echo \"\\n\";\nprint_r(even_odd_count(123));\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmp2wdh2i51.php:14\nStack trace:\n#0 /tmp/tmp2wdh2i51.php(24): even_odd_count('-12')\n\
    #1 {main}\n  thrown in /tmp/tmp2wdh2i51.php on line 14\n"
  timestamp: 1659823903
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  $arr = str_split($num);\n  $evenCount = 0;\n  $oddCount = 0;\n  for ($i\
    \ = 0; $i < count($arr); $i++) {\n    if ($arr[$i] % 2 == 0) {\n      $evenCount++;\n\
    \    } else {\n      $oddCount++;\n    }\n  }\n  return array($evenCount, $oddCount);\n\
    }\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpx1ggg_rg.php:13\nStack trace:\n#0 /tmp/tmpx1ggg_rg.php(22): even_odd_count(-78)\n\
    #1 /tmp/tmpx1ggg_rg.php(27): candidate(-78)\n#2 /tmp/tmpx1ggg_rg.php(36): test()\n\
    #3 {main}\n  thrown in /tmp/tmpx1ggg_rg.php on line 13\n"
  timestamp: 1659823903
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n\tif (empty($num)) {\n\t\treturn 0;\n\t}\n\tif ($num < 0) {\n\t\t$num = $num\
    \ * -1;\n\t}\n\t$even = 0;\n\t$odd = 0;\n\t$digits = str_split($num);\n\tforeach\
    \ ($digits as $digit) {\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even += 1;\n\t\t}\
    \ else {\n\t\t\t$odd += 1;\n\t\t}\n\t}\n\treturn array($even, $odd);\n}\n\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyxu9cvaf.php:40\n\
    Stack trace:\n#0 /tmp/tmpyxu9cvaf.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpyxu9cvaf.php\
    \ on line 40\n"
  timestamp: 1659823903
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  $even_count = 0;\n  $odd_count = 0;\n  while ($num > 0) {\n    $rem = $num\
    \ % 10;\n    if ($rem % 2 == 0) {\n      $even_count++;\n    } else {\n      $odd_count++;\n\
    \    }\n    $num = floor($num / 10);\n  }\n  return array($even_count, $odd_count);\n\
    }\n\n$num = -12;\n$result = even_odd_count($num);\nprint_r($result);\n\n$num =\
    \ 123;\n$result = even_odd_count($num);\nprint_r($result);\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 0\n    [1] => 0\n)\nArray\n(\n    [0] => 1\n    [1]\
    \ => 2\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuqm7vocp.php:36\n\
    Stack trace:\n#0 /tmp/tmpuqm7vocp.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpuqm7vocp.php\
    \ on line 36\n"
  timestamp: 1659823903
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $even = 0;\n    $odd = 0;\n    for ($i = 0; $i < strlen($num); $i++)\
    \ {\n        if ($num[$i] % 2 == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n    }\n    return array($even, $odd);\n}\necho\
    \ \"even_odd_count(-12) = \";\nprint_r(even_odd_count(-12));\necho \"<br />\"\
    ;\necho \"even_odd_count(123) = \";\nprint_r(even_odd_count(123));\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "even_odd_count(-12) = \nWarning: Trying to access array offset on value\
    \ of type int in /tmp/tmpjw0mc64v.php on line 12\n\nWarning: Trying to access\
    \ array offset on value of type int in /tmp/tmpjw0mc64v.php on line 12\n\nWarning:\
    \ Trying to access array offset on value of type int in /tmp/tmpjw0mc64v.php on\
    \ line 12\nArray\n(\n    [0] => 3\n    [1] => 0\n)\n<br />even_odd_count(123)\
    \ = \nWarning: Trying to access array offset on value of type int in /tmp/tmpjw0mc64v.php\
    \ on line 12\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmpjw0mc64v.php on line 12\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmpjw0mc64v.php on line 12\nArray\n(\n    [0] => 3\n\
    \    [1] => 0\n)\n\nWarning: Trying to access array offset on value of type int\
    \ in /tmp/tmpjw0mc64v.php on line 12\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpjw0mc64v.php:30\nStack trace:\n#0 /tmp/tmpjw0mc64v.php(40):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpjw0mc64v.php on line 30\n"
  timestamp: 1659823903
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $numAbs = abs($num);\n    $oddCount = 0;\n    $evenCount = 0;\n    while\
    \ ($numAbs > 0) {\n        $remainder = $numAbs % 10;\n        if ($remainder\
    \ % 2 == 0) {\n            $evenCount += 1;\n        } else {\n            $oddCount\
    \ += 1;\n        }\n        $numAbs = floor($numAbs / 10);\n    }\n    return\
    \ array($evenCount, $oddCount);\n}\n\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwy0m8n3m.php:36\n\
    Stack trace:\n#0 /tmp/tmpwy0m8n3m.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpwy0m8n3m.php\
    \ on line 36\n"
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  $even = 0;\n  $odd = 0;\n  $num = str_split(abs($num));\n  foreach ($num\
    \ as $digit) {\n    if ($digit % 2 == 0) {\n      $even++;\n    } else {\n   \
    \   $odd++;\n    }\n  }\n  return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    if($num < 0) {\n        $num = -1 * $num;\n    }\n    $digits = str_split($num);\n\
    \    $even = 0;\n    $odd = 0;\n    foreach($digits as $digit) {\n        if($digit\
    \ % 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n \
    \       }\n    }\n    return array($even, $odd);\n}\n$even_odd_count = even_odd_count(12356);\n\
    print_r($even_odd_count);\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 2\n    [1] => 3\n)\n"
  timestamp: 1659823903
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  $stringNum = (string) $num;\n  $evenCount = 0;\n  $oddCount = 0;\n  for\
    \ ($i = 0; $i < strlen($stringNum); $i++) {\n    if ($stringNum[$i] % 2 == 0)\
    \ {\n      $evenCount++;\n    } else {\n      $oddCount++;\n    }\n  }\n  return\
    \ array($evenCount, $oddCount);\n}\n\n$evensOdds = even_odd_count(-12);\nprint_r($evensOdds);\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmp4inho_2x.php:13\nStack trace:\n#0 /tmp/tmp4inho_2x.php(22): even_odd_count(-12)\n\
    #1 {main}\n  thrown in /tmp/tmp4inho_2x.php on line 13\n"
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  $num = str_split(abs($num));\n  $result = [0, 0];\n  for ($i = 0; $i <\
    \ count($num); $i++) {\n    if ($num[$i] % 2 === 0) {\n      $result[0]++;\n \
    \   } else {\n      $result[1]++;\n    }\n  }\n  return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823903
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $num = abs($num);\n    $evens = 0;\n    $odds = 0;\n    while ($num >\
    \ 0) {\n        $digit = $num % 10;\n        if ($digit % 2 === 0) {\n       \
    \     $evens++;\n        } else {\n            $odds++;\n        }\n        $num\
    \ = floor($num / 10);\n    }\n    return array($evens, $odds);\n}\n\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2g6ay73_.php:36\n\
    Stack trace:\n#0 /tmp/tmp2g6ay73_.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp2g6ay73_.php\
    \ on line 36\n"
  timestamp: 1659823903

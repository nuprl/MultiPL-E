language: php
name: HumanEval_155_even_odd_count
results:
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  // Write your code here\n\n}\n\n$input1 = -12;\nprint_r(even_odd_count($input1));\n\
    \n$input2 = 123;\nprint_r(even_odd_count($input2));\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg5mhuvm3.php:24\n\
    Stack trace:\n#0 /tmp/tmpg5mhuvm3.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpg5mhuvm3.php\
    \ on line 24\n"
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $num = abs($num);\n    $even_counter = 0;\n    $odd_counter = 0;\n  \
    \  $num_as_string = \"$num\";\n    for ($i = 0; $i < strlen($num_as_string); $i++)\
    \ {\n        if ($num_as_string[$i] % 2 == 0) {\n            $even_counter++;\n\
    \        } else {\n            $odd_counter++;\n        }\n    }\n    return array($even_counter,\
    \ $odd_counter);\n}\n\necho \"<pre>\";\necho \"Given the number -12, array(1,\
    \ 1) should be returned.\\n\";\nprint_r(even_odd_count(-12));\necho \"Given the\
    \ number 123, array(1, 2) should be returned.\\n\";\nprint_r(even_odd_count(123));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "<pre>Given the number -12, array(1, 1) should be returned.\nArray\n(\n\
    \    [0] => 1\n    [1] => 1\n)\nGiven the number 123, array(1, 2) should be returned.\n\
    Array\n(\n    [0] => 1\n    [1] => 2\n)\n</pre>"
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    if ($num >= 0) {\n        $num = (string)$num;\n        $odd = substr_count($num,\
    \ \"1\") + substr_count($num, \"3\") + substr_count($num, \"5\") + substr_count($num,\
    \ \"7\") + substr_count($num, \"9\");\n        $even = substr_count($num, \"0\"\
    ) + substr_count($num, \"2\") + substr_count($num, \"4\") + substr_count($num,\
    \ \"6\") + substr_count($num, \"8\");\n    } else {\n        $num = (string)$num;\n\
    \        $num = substr($num, 1);\n        $odd = substr_count($num, \"1\") + substr_count($num,\
    \ \"3\") + substr_count($num, \"5\") + substr_count($num, \"7\") + substr_count($num,\
    \ \"9\");\n        $even = substr_count($num, \"0\") + substr_count($num, \"2\"\
    ) + substr_count($num, \"4\") + substr_count($num, \"6\") + substr_count($num,\
    \ \"8\");\n    }\n    $res = array($even, $odd);\n    return $res;\n}\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  $digits = str_split(abs($num));\n  $even = array_filter($digits, function($num)\
    \ { return $num % 2 == 0; });\n  $odd = array_filter($digits, function($num) {\
    \ return $num % 2 == 1; });\n  return array(count($even), count($odd));\n}\n\n\
    echo 'even_odd_count(-12): ';\nvar_dump(even_odd_count(-12));\necho 'even_odd_count(123):\
    \ ';\nvar_dump(even_odd_count(123));\n\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "even_odd_count(-12): array(2) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(1)\n\
    }\neven_odd_count(123): array(2) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(2)\n}\n"
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  $digits = str_split(abs($num));\n  $even = 0;\n  $odd = 0;\n  foreach ($digits\
    \ as $digit) {\n    if ($digit % 2 == 0) {\n      $even++;\n    } else {\n   \
    \   $odd++;\n    }\n  }\n  return array($even, $odd);\n}\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823903
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  $arr = [];\n  if ($num < 0) {\n    $num = $num * -1;\n  }\n  $num = strval($num);\n\
    \  for ($i = 0; $i < strlen($num); $i++) {\n    if ($num[$i] % 2 == 0) {\n   \
    \   $arr[0] += 1;\n    } else {\n      $arr[1] += 1;\n    }\n  }\n  return $arr;\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 1 in /tmp/tmp1cpyjkxc.php on line 18\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp1cpyjkxc.php:29\nStack\
    \ trace:\n#0 /tmp/tmp1cpyjkxc.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp1cpyjkxc.php\
    \ on line 29\n"
  timestamp: 1659823903
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  $num = str_split($num);\n  $count = 0;\n  $count2 = 0;\n  for ($i = 0;\
    \ $i < count($num); $i++) {\n    if ($num[$i] % 2 == 0) {\n      $count++;\n \
    \   } else {\n      $count2++;\n    }\n  }\n  return array($count, $count2);\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpw251hq_h.php:13\nStack trace:\n#0 /tmp/tmpw251hq_h.php(23): even_odd_count(Array)\n\
    #1 /tmp/tmpw251hq_h.php(28): candidate(-78)\n#2 /tmp/tmpw251hq_h.php(37): test()\n\
    #3 {main}\n  thrown in /tmp/tmpw251hq_h.php on line 13\n"
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n   $arr = str_split(abs($num));\n   $even_count = 0;\n   $odd_count = 0;\n\
    \   foreach ($arr as $num) {\n      if ($num % 2 == 0) {\n         $even_count\
    \ += 1;\n      } else {\n         $odd_count += 1;\n      }\n   }\n   $result\
    \ = array($even_count, $odd_count);\n   return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n\t$digits = str_split(abs($num));\n\t$even = 0;\n\t$odd = 0;\n\tforeach ($digits\
    \ as $digit) {\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\
    \t$odd++;\n\t\t}\n\t}\n\treturn array($even, $odd);\n}\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823903
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n\t$array = array();\n\t$evenCount = 0;\n\t$oddCount = 0;\n\t$num = strval($num);\n\
    \tfor ($i = 0; $i < strlen($num); $i++) {\n\t\tif ($num[$i] % 2 == 0) {\n\t\t\t\
    $evenCount++;\n\t\t} else {\n\t\t\t$oddCount++;\n\t\t}\n\t}\n\tarray_push($array,\
    \ $evenCount, $oddCount);\n\treturn $array;\n}\n\nprint_r(even_odd_count(-12));\n\
    echo \"\\n\";\nprint_r(even_odd_count(123));\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmp2wdh2i51.php:14\nStack trace:\n#0 /tmp/tmp2wdh2i51.php(24): even_odd_count('-12')\n\
    #1 {main}\n  thrown in /tmp/tmp2wdh2i51.php on line 14\n"
  timestamp: 1659823903
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  $arr = str_split($num);\n  $evenCount = 0;\n  $oddCount = 0;\n  for ($i\
    \ = 0; $i < count($arr); $i++) {\n    if ($arr[$i] % 2 == 0) {\n      $evenCount++;\n\
    \    } else {\n      $oddCount++;\n    }\n  }\n  return array($evenCount, $oddCount);\n\
    }\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpx1ggg_rg.php:13\nStack trace:\n#0 /tmp/tmpx1ggg_rg.php(22): even_odd_count(-78)\n\
    #1 /tmp/tmpx1ggg_rg.php(27): candidate(-78)\n#2 /tmp/tmpx1ggg_rg.php(36): test()\n\
    #3 {main}\n  thrown in /tmp/tmpx1ggg_rg.php on line 13\n"
  timestamp: 1659823903
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n\tif (empty($num)) {\n\t\treturn 0;\n\t}\n\tif ($num < 0) {\n\t\t$num = $num\
    \ * -1;\n\t}\n\t$even = 0;\n\t$odd = 0;\n\t$digits = str_split($num);\n\tforeach\
    \ ($digits as $digit) {\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even += 1;\n\t\t}\
    \ else {\n\t\t\t$odd += 1;\n\t\t}\n\t}\n\treturn array($even, $odd);\n}\n\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyxu9cvaf.php:40\n\
    Stack trace:\n#0 /tmp/tmpyxu9cvaf.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpyxu9cvaf.php\
    \ on line 40\n"
  timestamp: 1659823903
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  $even_count = 0;\n  $odd_count = 0;\n  while ($num > 0) {\n    $rem = $num\
    \ % 10;\n    if ($rem % 2 == 0) {\n      $even_count++;\n    } else {\n      $odd_count++;\n\
    \    }\n    $num = floor($num / 10);\n  }\n  return array($even_count, $odd_count);\n\
    }\n\n$num = -12;\n$result = even_odd_count($num);\nprint_r($result);\n\n$num =\
    \ 123;\n$result = even_odd_count($num);\nprint_r($result);\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 0\n    [1] => 0\n)\nArray\n(\n    [0] => 1\n    [1]\
    \ => 2\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuqm7vocp.php:36\n\
    Stack trace:\n#0 /tmp/tmpuqm7vocp.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpuqm7vocp.php\
    \ on line 36\n"
  timestamp: 1659823903
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $even = 0;\n    $odd = 0;\n    for ($i = 0; $i < strlen($num); $i++)\
    \ {\n        if ($num[$i] % 2 == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n    }\n    return array($even, $odd);\n}\necho\
    \ \"even_odd_count(-12) = \";\nprint_r(even_odd_count(-12));\necho \"<br />\"\
    ;\necho \"even_odd_count(123) = \";\nprint_r(even_odd_count(123));\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "even_odd_count(-12) = \nWarning: Trying to access array offset on value\
    \ of type int in /tmp/tmpjw0mc64v.php on line 12\n\nWarning: Trying to access\
    \ array offset on value of type int in /tmp/tmpjw0mc64v.php on line 12\n\nWarning:\
    \ Trying to access array offset on value of type int in /tmp/tmpjw0mc64v.php on\
    \ line 12\nArray\n(\n    [0] => 3\n    [1] => 0\n)\n<br />even_odd_count(123)\
    \ = \nWarning: Trying to access array offset on value of type int in /tmp/tmpjw0mc64v.php\
    \ on line 12\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmpjw0mc64v.php on line 12\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmpjw0mc64v.php on line 12\nArray\n(\n    [0] => 3\n\
    \    [1] => 0\n)\n\nWarning: Trying to access array offset on value of type int\
    \ in /tmp/tmpjw0mc64v.php on line 12\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpjw0mc64v.php:30\nStack trace:\n#0 /tmp/tmpjw0mc64v.php(40):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpjw0mc64v.php on line 30\n"
  timestamp: 1659823903
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $numAbs = abs($num);\n    $oddCount = 0;\n    $evenCount = 0;\n    while\
    \ ($numAbs > 0) {\n        $remainder = $numAbs % 10;\n        if ($remainder\
    \ % 2 == 0) {\n            $evenCount += 1;\n        } else {\n            $oddCount\
    \ += 1;\n        }\n        $numAbs = floor($numAbs / 10);\n    }\n    return\
    \ array($evenCount, $oddCount);\n}\n\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwy0m8n3m.php:36\n\
    Stack trace:\n#0 /tmp/tmpwy0m8n3m.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpwy0m8n3m.php\
    \ on line 36\n"
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  $even = 0;\n  $odd = 0;\n  $num = str_split(abs($num));\n  foreach ($num\
    \ as $digit) {\n    if ($digit % 2 == 0) {\n      $even++;\n    } else {\n   \
    \   $odd++;\n    }\n  }\n  return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    if($num < 0) {\n        $num = -1 * $num;\n    }\n    $digits = str_split($num);\n\
    \    $even = 0;\n    $odd = 0;\n    foreach($digits as $digit) {\n        if($digit\
    \ % 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n \
    \       }\n    }\n    return array($even, $odd);\n}\n$even_odd_count = even_odd_count(12356);\n\
    print_r($even_odd_count);\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 2\n    [1] => 3\n)\n"
  timestamp: 1659823903
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  $stringNum = (string) $num;\n  $evenCount = 0;\n  $oddCount = 0;\n  for\
    \ ($i = 0; $i < strlen($stringNum); $i++) {\n    if ($stringNum[$i] % 2 == 0)\
    \ {\n      $evenCount++;\n    } else {\n      $oddCount++;\n    }\n  }\n  return\
    \ array($evenCount, $oddCount);\n}\n\n$evensOdds = even_odd_count(-12);\nprint_r($evensOdds);\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmp4inho_2x.php:13\nStack trace:\n#0 /tmp/tmp4inho_2x.php(22): even_odd_count(-12)\n\
    #1 {main}\n  thrown in /tmp/tmp4inho_2x.php on line 13\n"
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  $num = str_split(abs($num));\n  $result = [0, 0];\n  for ($i = 0; $i <\
    \ count($num); $i++) {\n    if ($num[$i] % 2 === 0) {\n      $result[0]++;\n \
    \   } else {\n      $result[1]++;\n    }\n  }\n  return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823903
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $num = abs($num);\n    $evens = 0;\n    $odds = 0;\n    while ($num >\
    \ 0) {\n        $digit = $num % 10;\n        if ($digit % 2 === 0) {\n       \
    \     $evens++;\n        } else {\n            $odds++;\n        }\n        $num\
    \ = floor($num / 10);\n    }\n    return array($evens, $odds);\n}\n\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2g6ay73_.php:36\n\
    Stack trace:\n#0 /tmp/tmp2g6ay73_.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp2g6ay73_.php\
    \ on line 36\n"
  timestamp: 1659823903
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n\t$even = 0;\n\t$odd = 0;\n\twhile ($num != 0) {\n\t\t$r = $num % 10;\n\t\
    \tif ($r % 2 == 0) {\n\t\t\t$even += 1;\n\t\t} else {\n\t\t\t$odd += 1;\n\t\t\
    }\n\t\t$num = $num / 10;\n\t}\n\treturn [$even, $odd];\n}\nprint_r(even_odd_count(-12));\n\
    print_r(even_odd_count(123));\nprint_r(even_odd_count(45892375));\nprint_r(even_odd_count(789568));\n\
    print_r(even_odd_count(45892));\nprint_r(even_odd_count(0));\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float -1.2 to int loses precision in /tmp/tmpnt1aseom.php
    on line 12


    Deprecated: Implicit conversion from float -0.12 to int loses precision in /tmp/tmpnt1aseom.php
    on line 12


    Deprecated: Implicit conversion from float -0.012 to int loses precision in /tmp/tmpnt1aseom.php
    on line 12


    Deprecated: Implicit conversion from float -0.0012000000000000001 to int loses
    precision in /tmp/tmpnt1aseom.php on line 12


    Deprecated: Implicit conversion from float -0.00012000000000000002 to int loses
    precision in /tmp/tmpnt1aseom.php on line 12


    Deprecated: Implicit conversion from float -1.2000000000000002E-5 to int loses
    precision in /tmp/tmpnt1aseom.php on line 12


    Deprecated: Implicit conversion from float -1.2000000000000002E-6 to int loses
    precision in /tmp/tmpnt1aseom.php on line 12


    Deprecated: Implicit conversion from float -1.2000000000000002E-7 to int loses
    precision in /tmp/tmpnt1aseom.php on line 12


    Deprecated: Implicit conversion from float -1.2000000000000002E-8 to int loses
    precision in /tmp/tmpnt1aseom.php on line 12


    Deprecated: Implicit conversion from float -1.2000000000000002E-9 to int loses
    precision in /tmp/tmpnt1aseom.php on line 12


    Deprecated: Implicit conversion from float -1.2000000000000003E-10 to int loses
    precision in /tmp/tmpnt1aseom.php on line 12


    Deprecated: Implicit conversion from float -1.2000000000000002E-11 to int loses
    precision in /tmp/tmpnt1aseom.php on line 12


    Deprecated: Implicit conversion from float -1.2000000000000001E-12 to int loses
    precision in /tmp/tmpnt1aseom.php on line 12


    Deprecated: Implicit conversion from float -1.2000000000000002E-13 to int loses
    precision in /tmp/tmpnt1aseom.php on line 12


    Deprecated: Implicit conversion from float -1.2000000000000003E-14 to int loses
    precision in /tmp/tmpnt1aseom.php on line 12


    Deprecated: Implicit conversion from float -1.2000000000000002E-15 to int loses
    precision in /tmp/tmpnt1aseom.php on line 12


    Deprecated: Implicit conversion from float -1.2000000000000003E-16 to int loses
    precision i'
  timestamp: 1660028426
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  $len = strlen($num);\n  $arr = [];\n  for ($i = 0; $i < $len; $i++) {\n\
    \    if ($num[$i] % 2 == 0) {\n      $arr[0]++;\n    } else {\n      $arr[1]++;\n\
    \    }\n  }\n  return $arr;\n}\n\n$num = 123;\nprint_r(even_odd_count($num));\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmp8oaruj7c.php\
    \ on line 12\n\nWarning: Undefined array key 0 in /tmp/tmp8oaruj7c.php on line\
    \ 13\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp8oaruj7c.php\
    \ on line 12\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmp8oaruj7c.php on line 12\nArray\n(\n    [0] => 3\n)\n\nWarning: Trying\
    \ to access array offset on value of type int in /tmp/tmp8oaruj7c.php on line\
    \ 12\n\nWarning: Undefined array key 0 in /tmp/tmp8oaruj7c.php on line 13\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp8oaruj7c.php:28\nStack\
    \ trace:\n#0 /tmp/tmp8oaruj7c.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp8oaruj7c.php\
    \ on line 28\n"
  timestamp: 1660028426
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  $count_even = 0;\n  $count_odd = 0;\n  $arr = array(\n    $count_even,\n\
    \    $count_odd\n  );\n  $digits = str_split(abs($num));\n  foreach ($digits as\
    \ $digit) {\n    if ($digit % 2 == 0) {\n      $count_even++;\n    } else {\n\
    \      $count_odd++;\n    }\n  }\n  return $arr;\n}\n\necho even_odd_count(-12);\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Array to string conversion in /tmp/tmp5d0pr37f.php on line 26\n\
    Array\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5d0pr37f.php:32\n\
    Stack trace:\n#0 /tmp/tmp5d0pr37f.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp5d0pr37f.php\
    \ on line 32\n"
  timestamp: 1660028426
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  $num = abs($num);\n  $evens = 0;\n  $odds = 0;\n  while ($num > 0) {\n\
    \    $last_digit = $num % 10;\n    if ($last_digit % 2 == 0) {\n      $evens++;\n\
    \    } else {\n      $odds++;\n    }\n    $num = floor($num / 10);\n  }\n  return\
    \ array($evens, $odds);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp9quh_o8.php:36\n\
    Stack trace:\n#0 /tmp/tmpp9quh_o8.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpp9quh_o8.php\
    \ on line 36\n"
  timestamp: 1660028426
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $num = abs($num);\n    $evens = 0;\n    $odds = 0;\n    while ($num >\
    \ 0) {\n        $remainder = $num % 10;\n        if ($remainder % 2 == 0) {\n\
    \            $evens++;\n        } else {\n            $odds++;\n        }\n  \
    \      $num = $num / 10;\n    }\n    return array($evens, $odds);\n}\n\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpc_vqtsc1.php
    on line 13


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpc_vqtsc1.php on line 13


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpc_vqtsc1.php on line 13


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpc_vqtsc1.php on line 13


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpc_vqtsc1.php
    on line 13


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpc_vqtsc1.php on line 13


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpc_vqtsc1.php on line 13


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpc_vqtsc1.php on line 13


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpc_vqtsc1.php on line 13


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpc_vqtsc1.php on line 13


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpc_vqtsc1.php on line 13


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpc_vqtsc1.php on line 13


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpc_vqtsc1.php on line 13


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpc_vqtsc1.php on line 13


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpc_vqtsc1.php on line 13


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpc_vqtsc1.php on line 13


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpc_vq'
  timestamp: 1660028426
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  $result_arr = [];\n  $num_arr = str_split($num);\n  $num_arr = array_map(function($num)\
    \ {\n    return abs($num);\n  }, $num_arr);\n  // echo implode(',', $num_arr);\n\
    \  $even_count = 0;\n  $odd_count = 0;\n  foreach ($num_arr as $key => $value)\
    \ {\n    if ($value % 2 == 0) {\n      $even_count++;\n    } else {\n      $odd_count++;\n\
    \    }\n  }\n  array_push($result_arr, $even_count, $odd_count);\n  return $result_arr;\n\
    }\necho implode(',', even_odd_count(-12));\nfunction candidate(...$args) {\n \
    \   return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: abs(): Argument #1 ($num) must be of\
    \ type int|float, string given in /tmp/tmpor0gwp2m.php:12\nStack trace:\n#0 /tmp/tmpor0gwp2m.php(12):\
    \ abs('-')\n#1 [internal function]: {closure}('-')\n#2 /tmp/tmpor0gwp2m.php(13):\
    \ array_map(Object(Closure), Array)\n#3 /tmp/tmpor0gwp2m.php(27): even_odd_count(-12)\n\
    #4 {main}\n  thrown in /tmp/tmpor0gwp2m.php on line 12\n"
  timestamp: 1660028426
- exit_code: 0
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $digits = str_split(abs($num));\n    return array_reduce($digits, function($carry,\
    \ $item) {\n        $carry[$item % 2]++;\n        return $carry;\n    }, array(0,\
    \ 0));\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028426
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $evens = 0;\n    $odds = 0;\n    $abs = abs($num);\n    while ($abs >\
    \ 0) {\n        $remainder = $abs % 10;\n        if ($remainder % 2 === 0) {\n\
    \            $evens++;\n        } else {\n            $odds++;\n        }\n  \
    \      $abs = ($abs - $remainder) / 10;\n    }\n    return array($evens, $odds);\n\
    }\nprint_r(even_odd_count(-12));\nprint_r(even_odd_count(123));\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 1\n)\nArray\n(\n    [0] => 1\n    [1]\
    \ => 2\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3jg3g5rn.php:37\n\
    Stack trace:\n#0 /tmp/tmp3jg3g5rn.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp3jg3g5rn.php\
    \ on line 37\n"
  timestamp: 1660028426
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n\t$arr = [];\n\t$arr[0] = 0;\n\t$arr[1] = 0;\n\t$str = strval($num);\n\t\
    for ($i = 0; $i < strlen($str); $i++) {\n\t\tif ($str[$i] % 2 == 0) {\n\t\t\t\
    $arr[0] += 1;\n\t\t} else {\n\t\t\t$arr[1] += 1;\n\t\t}\n\t}\n\treturn $arr;\n\
    }\n$a = even_odd_count(-12);\nfor ($i = 0; $i < count($a); $i++) {\n\techo $a[$i]\
    \ . ' ';\n}\necho \"<br>\";\n$b = even_odd_count(123);\nfor ($i = 0; $i < count($b);\
    \ $i++) {\n\techo $b[$i] . ' ';\n}\necho \"<br>\";\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpht4pwzgl.php:14\nStack trace:\n#0 /tmp/tmpht4pwzgl.php(22): even_odd_count(-12)\n\
    #1 {main}\n  thrown in /tmp/tmpht4pwzgl.php on line 14\n"
  timestamp: 1660028426
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n\t$sumEven = 0;\n\t$sumOdd = 0;\n\t$num = abs($num);\n\twhile($num>=1){\n\
    \t\t$digit = $num%10;\n\t\tif($digit%2 == 0){\n\t\t\t$sumEven++;\n\t\t}else{\n\
    \t\t\t$sumOdd++;\n\t\t}\n\t\t$num = floor($num/10);\n\t}\n\treturn array($sumEven,\
    \ $sumOdd);\n}\n$tests = array(\n\t-12,\n\t123,\n\t100\n);\nforeach ($tests as\
    \ $t) {\n\techo \"$t: \";\n\tprint_r(even_odd_count($t));\n\techo \"\\n\";\n}\n\
    \nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-12: Array\n(\n    [0] => 1\n    [1] => 1\n)\n\n123: Array\n(\n    [0]\
    \ => 1\n    [1] => 2\n)\n\n100: Array\n(\n    [0] => 2\n    [1] => 1\n)\n\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpy4ql9hac.php:46\nStack\
    \ trace:\n#0 /tmp/tmpy4ql9hac.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpy4ql9hac.php\
    \ on line 46\n"
  timestamp: 1660028426
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $arr = array();\n    $even = 0;\n    $odd = 0;\n    if ($num < 0) {\n\
    \        $num = abs($num);\n    }\n    while ($num != 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = (int)($num / 10);\n    }\n\
    \    $arr[] = $even;\n    $arr[] = $odd;\n    return $arr;\n}\nprint_r(even_odd_count(-123));\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpvgspkmin.php:41\nStack trace:\n#0 /tmp/tmpvgspkmin.php(44):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpvgspkmin.php on line 41\n"
  timestamp: 1660028426
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n\t$even_count = 0;\n\t$odd_count = 0;\n\t$negative = false;\n\tif ($num <\
    \ 0) {\n\t\t$negative = true;\n\t\t$num = $num * -1;\n\t}\n\twhile ($num > 0)\
    \ {\n\t\t$digit = $num % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even_count +=\
    \ 1;\n\t\t} else {\n\t\t\t$odd_count += 1;\n\t\t}\n\t\t$num = $num / 10;\n\t}\n\
    \tif ($negative) {\n\t\t$odd_count += 1;\n\t}\n\treturn array($even_count, $odd_count);\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmp8kt_ynaa.php
    on line 17


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmp8kt_ynaa.php on line 17


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmp8kt_ynaa.php on line 17


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmp8kt_ynaa.php on line 17


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmp8kt_ynaa.php
    on line 17


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmp8kt_ynaa.php on line 17


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmp8kt_ynaa.php on line 17


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmp8kt_ynaa.php on line 17


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmp8kt_ynaa.php on line 17


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmp8kt_ynaa.php on line 17


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmp8kt_ynaa.php on line 17


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmp8kt_ynaa.php on line 17


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmp8kt_ynaa.php on line 17


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmp8kt_ynaa.php on line 17


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmp8kt_ynaa.php on line 17


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmp8kt_ynaa.php on line 17


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmp8kt_'
  timestamp: 1660028426
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  $even_count = 0;\n  $odd_count = 0;\n  $num = abs($num);\n  while ($num)\
    \ {\n    $digit = $num % 10;\n    if ($digit % 2 == 0) {\n      $even_count++;\n\
    \    } else {\n      $odd_count++;\n    }\n    $num = $num / 10;\n  }\n  return\
    \ array($even_count, $odd_count);\n}\n\nprint_r(even_odd_count(-123));\nprint_r(even_odd_count(123));\n\
    print_r(even_odd_count(0));\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 12.3 to int loses precision in /tmp/tmp344op6di.php
    on line 13


    Deprecated: Implicit conversion from float 1.23 to int loses precision in /tmp/tmp344op6di.php
    on line 13


    Deprecated: Implicit conversion from float 0.123 to int loses precision in /tmp/tmp344op6di.php
    on line 13


    Deprecated: Implicit conversion from float 0.0123 to int loses precision in /tmp/tmp344op6di.php
    on line 13


    Deprecated: Implicit conversion from float 0.00123 to int loses precision in /tmp/tmp344op6di.php
    on line 13


    Deprecated: Implicit conversion from float 0.000123 to int loses precision in
    /tmp/tmp344op6di.php on line 13


    Deprecated: Implicit conversion from float 1.23E-5 to int loses precision in /tmp/tmp344op6di.php
    on line 13


    Deprecated: Implicit conversion from float 1.23E-6 to int loses precision in /tmp/tmp344op6di.php
    on line 13


    Deprecated: Implicit conversion from float 1.23E-7 to int loses precision in /tmp/tmp344op6di.php
    on line 13


    Deprecated: Implicit conversion from float 1.2300000000000001E-8 to int loses
    precision in /tmp/tmp344op6di.php on line 13


    Deprecated: Implicit conversion from float 1.23E-9 to int loses precision in /tmp/tmp344op6di.php
    on line 13


    Deprecated: Implicit conversion from float 1.2300000000000001E-10 to int loses
    precision in /tmp/tmp344op6di.php on line 13


    Deprecated: Implicit conversion from float 1.2300000000000002E-11 to int loses
    precision in /tmp/tmp344op6di.php on line 13


    Deprecated: Implicit conversion from float 1.2300000000000002E-12 to int loses
    precision in /tmp/tmp344op6di.php on line 13


    Deprecated: Implicit conversion from float 1.2300000000000003E-13 to int loses
    precision in /tmp/tmp344op6di.php on line 13


    Deprecated: Implicit conversion from float 1.2300000000000003E-14 to int loses
    precision in /tmp/tmp344op6di.php on line 13


    Deprecated: Implicit conversion from float 1.2300000000000003E-15 to int loses
    precision in /tmp/tmp344op6di.php on line 13


    Deprecated: Implicit conversion from float 1.2300000000000003E-16 to int loses
    pr'
  timestamp: 1660028426
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n\treturn [substr_count(number_format($num, 0, '', ''), '2') + substr_count(number_format($num,\
    \ 0, '', ''), '4') + substr_count(number_format($num, 0, '', ''), '6') + substr_count(number_format($num,\
    \ 0, '', ''), '8'), substr_count(number_format($num, 0, '', ''), '1') + substr_count(number_format($num,\
    \ 0, '', ''), '3') + substr_count(number_format($num, 0, '', ''), '5') + substr_count(number_format($num,\
    \ 0, '', ''), '7') + substr_count(number_format($num, 0, '', ''), '9')];\n}\n\
    echo '<pre>';\nprint_r(even_odd_count(-12));\necho '</pre>';\n\necho '<pre>';\n\
    print_r(even_odd_count(123));\necho '</pre>';\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 1\n)\n</pre><pre>Array\n(\n   \
    \ [0] => 1\n    [1] => 2\n)\n</pre>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpeu7ucx19.php:31\nStack trace:\n#0 /tmp/tmpeu7ucx19.php(34): test()\n\
    #1 {main}\n  thrown in /tmp/tmpeu7ucx19.php on line 31\n"
  timestamp: 1660028426
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $num_str = strval($num);\n    $even_count = 0;\n    $odd_count = 0;\n\
    \    for ($i = 0; $i < strlen($num_str); $i++) {\n        if ($num_str[$i] % 2\
    \ == 0) {\n            $even_count++;\n        } else {\n            $odd_count++;\n\
    \        }\n    }\n    return array($even_count, $odd_count);\n}\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpb96r318x.php:13\nStack trace:\n#0 /tmp/tmpb96r318x.php(22): even_odd_count(-78)\n\
    #1 /tmp/tmpb96r318x.php(27): candidate(-78)\n#2 /tmp/tmpb96r318x.php(36): test()\n\
    #3 {main}\n  thrown in /tmp/tmpb96r318x.php on line 13\n"
  timestamp: 1660028426
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $even_count = 0;\n    $odd_count = 0;\n    $num = abs($num);\n    while\
    \ ($num > 0) {\n        $mod = $num % 10;\n        if ($mod % 2 === 0) {\n   \
    \         $even_count++;\n        } else {\n            $odd_count++;\n      \
    \  }\n        $num = (int)($num / 10);\n    }\n    return array($even_count, $odd_count);\n\
    }\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsawcrjl1.php:35\n\
    Stack trace:\n#0 /tmp/tmpsawcrjl1.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpsawcrjl1.php\
    \ on line 35\n"
  timestamp: 1660028426
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $split = str_split($num);\n    $even = 0;\n    $odd = 0;\n    foreach\
    \ ($split as $i) {\n        if ($i % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return array($even, $odd);\n\
    }\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpycf3r0p0.php:13\nStack trace:\n#0 /tmp/tmpycf3r0p0.php(22): even_odd_count(-78)\n\
    #1 /tmp/tmpycf3r0p0.php(27): candidate(-78)\n#2 /tmp/tmpycf3r0p0.php(36): test()\n\
    #3 {main}\n  thrown in /tmp/tmpycf3r0p0.php on line 13\n"
  timestamp: 1660028426
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  $num = abs($num);\n  $even = 0;\n  $odd = 0;\n  for ($i = 0; $i < strlen((string)$num);\
    \ $i++) {\n    if ($num % 2 == 0) {\n      $even += 1;\n    } else {\n      $odd\
    \ += 1;\n    }\n    $num = $num / 10;\n  }\n  return array($even, $odd);\n}\n\n\
    echo '<pre>';\nvar_dump(even_odd_count(-12));\nvar_dump(even_odd_count(123));\n\
    echo '</pre>';\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>\nDeprecated: Implicit conversion from float 1.2 to int loses precision\
    \ in /tmp/tmpnh9hmhaq.php on line 13\n\nDeprecated: Implicit conversion from float\
    \ 0.12 to int loses precision in /tmp/tmpnh9hmhaq.php on line 13\n\nDeprecated:\
    \ Implicit conversion from float 0.012 to int loses precision in /tmp/tmpnh9hmhaq.php\
    \ on line 13\n\nDeprecated: Implicit conversion from float 0.0012000000000000001\
    \ to int loses precision in /tmp/tmpnh9hmhaq.php on line 13\n\nDeprecated: Implicit\
    \ conversion from float 0.00012000000000000002 to int loses precision in /tmp/tmpnh9hmhaq.php\
    \ on line 13\narray(2) {\n  [0]=>\n  int(5)\n  [1]=>\n  int(1)\n}\n\nDeprecated:\
    \ Implicit conversion from float 12.3 to int loses precision in /tmp/tmpnh9hmhaq.php\
    \ on line 13\n\nDeprecated: Implicit conversion from float 1.23 to int loses precision\
    \ in /tmp/tmpnh9hmhaq.php on line 13\n\nDeprecated: Implicit conversion from float\
    \ 0.123 to int loses precision in /tmp/tmpnh9hmhaq.php on line 13\n\nDeprecated:\
    \ Implicit conversion from float 0.0123 to int loses precision in /tmp/tmpnh9hmhaq.php\
    \ on line 13\n\nDeprecated: Implicit conversion from float 0.00123 to int loses\
    \ precision in /tmp/tmpnh9hmhaq.php on line 13\n\nDeprecated: Implicit conversion\
    \ from float 0.000123 to int loses precision in /tmp/tmpnh9hmhaq.php on line 13\n\
    array(2) {\n  [0]=>\n  int(5)\n  [1]=>\n  int(2)\n}\n</pre>\nDeprecated: Implicit\
    \ conversion from float 0.7 to int loses precision in /tmp/tmpnh9hmhaq.php on\
    \ line 13\n\nDeprecated: Implicit conversion from float 0.06999999999999999 to\
    \ int loses precision in /tmp/tmpnh9hmhaq.php on line 13\n\nDeprecated: Implicit\
    \ conversion from float 0.006999999999999999 to int loses precision in /tmp/tmpnh9hmhaq.php\
    \ on line 13\n\nDeprecated: Implicit conversion from float 0.0006999999999999999\
    \ to int loses precision in /tmp/tmpnh9hmhaq.php on line 13\n\nDeprecated: Implicit\
    \ conversion from float 7.0E-5 to int loses precision in /tmp/tmpnh9hmhaq.php\
    \ on line 13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnh9hmhaq.php:33\n\
    Stack trace:\n#0 /tmp/tmpnh9hmhaq.php(43): test()\n#1 {main}\n  th"
  timestamp: 1660028426
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $even = 0;\n    $odd = 0;\n    if ($num < 0) {\n        $num = -$num;\n\
    \    }\n    while ($num > 0) {\n        $digit = $num % 10;\n        if ($digit\
    \ % 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n \
    \       }\n        $num = (int)($num / 10);\n    }\n    return array($even, $odd);\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2lkiilob.php:38\n\
    Stack trace:\n#0 /tmp/tmp2lkiilob.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp2lkiilob.php\
    \ on line 38\n"
  timestamp: 1660028426
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n\t$num = abs($num);\n\t$even = 0;\n\t$odd = 0;\n\twhile ($num >= 1) {\n\t\
    \t$lastDigit = $num % 10;\n\t\tif (($lastDigit % 2) == 0) {\n\t\t\t$even++;\n\t\
    \t} else {\n\t\t\t$odd++;\n\t\t}\n\t\t$num = floor($num / 10);\n\t}\n\t$arr[0]\
    \ = $even;\n\t$arr[1] = $odd;\n\treturn $arr;\n}\nprint_r(even_odd_count(-12));\n\
    print_r(even_odd_count(123));\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 1\n)\nArray\n(\n    [0] => 1\n    [1]\
    \ => 2\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5kqnuigc.php:39\n\
    Stack trace:\n#0 /tmp/tmp5kqnuigc.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp5kqnuigc.php\
    \ on line 39\n"
  timestamp: 1660028426
- exit_code: 0
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n\t$new_num = str_split(abs($num));\n\t$even = 0;\n\t$odd = 0;\n\tforeach\
    \ ($new_num as $int) {\n\t\tif ($int % 2 == 0) {\n\t\t\t$even += 1;\n\t\t} else\
    \ {\n\t\t\t$odd += 1;\n\t\t}\n\t}\n\treturn array($even, $odd);\n}\n\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028426
- exit_code: 0
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  $array = str_split(abs($num));\n  $evenCount = 0;\n  $oddCount = 0;\n \
    \ foreach ($array as $digit) {\n    if ($digit % 2 == 0) {\n      $evenCount++;\n\
    \    } else {\n      $oddCount++;\n    }\n  }\n  return array($evenCount, $oddCount);\n\
    }\n\n$even_odd_count = even_odd_count(1);\nprint_r($even_odd_count);\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 0\n    [1] => 1\n)\n"
  timestamp: 1660028426
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    if($num == 0) {\n        return array(0,0);\n    }\n    $str = strval($num);\n\
    \    $even = 0;\n    $odd = 0;\n    for($i = 0; $i < strlen($str); $i++) {\n \
    \       if(abs($str[$i]) % 2 == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n    }\n    return array($even, $odd);\n}\n\n\
    print_r(even_odd_count(-123));\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: abs(): Argument #1 ($num) must be of\
    \ type int|float, string given in /tmp/tmp3x81x1et.php:16\nStack trace:\n#0 /tmp/tmp3x81x1et.php(16):\
    \ abs('-')\n#1 /tmp/tmp3x81x1et.php(25): even_odd_count(-123)\n#2 {main}\n  thrown\
    \ in /tmp/tmp3x81x1et.php on line 16\n"
  timestamp: 1660028426
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n\t// $num = str_split(strval($num));\n\t$odd_count = 0;\n\t$even_count =\
    \ 0;\n\t$num = str_split(strval($num));\n\t// return $num;\n\tforeach ($num as\
    \ $value) {\n\t\t// var_dump($value);\n\t\t// echo \"<br>\";\n\t\tif ($value %\
    \ 2 == 0) {\n\t\t\t$even_count++;\n\t\t} else {\n\t\t\t$odd_count++;\n\t\t}\n\t\
    }\n\treturn array($even_count, $odd_count);\n}\nprint_r(even_odd_count(-12));\n\
    echo \"<br>\";\nprint_r(even_odd_count(123));\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpzj33p7gu.php:17\nStack trace:\n#0 /tmp/tmpzj33p7gu.php(25): even_odd_count(Array)\n\
    #1 {main}\n  thrown in /tmp/tmpzj33p7gu.php on line 17\n"
  timestamp: 1660028426
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $num = abs($num);\n    $odd = 0;\n    $even = 0;\n    while ($num > 0)\
    \ {\n        $num_tail = $num % 10;\n        if ($num_tail % 2 == 0) {\n     \
    \       $even++;\n        } else {\n            $odd++;\n        }\n        $num\
    \ = floor($num / 10);\n    }\n    return array($even, $odd);\n}\nprint_r(even_odd_count(-12));\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 1\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp5pc5kzho.php:36\nStack trace:\n#0 /tmp/tmp5pc5kzho.php(39):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp5pc5kzho.php on line 36\n"
  timestamp: 1660028426
- exit_code: 0
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n\t$even_count = 0;\n\t$odd_count = 0;\n\t$num = str_split(abs($num));\n\t\
    foreach ($num as $digit) {\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even_count++;\n\
    \t\t} else {\n\t\t\t$odd_count++;\n\t\t}\n\t}\n\treturn array($even_count, $odd_count);\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028426
- exit_code: 0
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n   $num = abs($num);\n   $evens = 0;\n   $odds = 0;\n   $digits = str_split($num);\n\
    \   foreach ($digits as $digit) {\n      if($digit % 2 == 0) {\n         $evens\
    \ += 1;\n      } else {\n         $odds += 1;\n      }\n   }\n   return array($evens,\
    \ $odds);\n}\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028426
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n\t$even = 0;\n\t$odd = 0;\n\tfor ($i = 0; $i < strlen($num); $i++) {\n\t\t\
    if (($num[$i] % 2) == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\t\t\
    }\n\t}\n\treturn [$even, $odd];\n}\n\n$res = even_odd_count(123);\nprint_r($res);\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmplgdiy6s_.php\
    \ on line 12\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmplgdiy6s_.php on line 12\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmplgdiy6s_.php on line 12\nArray\n(\n    [0] => 3\n\
    \    [1] => 0\n)\n\nWarning: Trying to access array offset on value of type int\
    \ in /tmp/tmplgdiy6s_.php on line 12\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmplgdiy6s_.php:28\nStack trace:\n#0 /tmp/tmplgdiy6s_.php(38):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmplgdiy6s_.php on line 28\n"
  timestamp: 1660028426
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n\t$number_string = strval($num);\n\t$even_count = 0;\n\t$odd_count = 0;\n\
    \tfor ($i = 0; $i < strlen($number_string); $i++) {\n\t\tif ((intval($number_string[$i])\
    \ % 2) == 0) {\n\t\t\t$even_count++;\n\t\t} else {\n\t\t\t$odd_count++;\n\t\t\
    }\n\t}\n\treturn array($even_count, $odd_count);\n}\n\necho implode(', ', even_odd_count(-12))\
    \ . \"\\n\";\necho implode(', ', even_odd_count(123)) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "2, 1\n1, 2\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxed6m5y5.php:30\n\
    Stack trace:\n#0 /tmp/tmpxed6m5y5.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpxed6m5y5.php\
    \ on line 30\n"
  timestamp: 1660028426
- exit_code: 0
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n\t$even_count = 0;\n\t$odd_count = 0;\n\tif ($num < 0) {\n\t\t$num = -$num;\n\
    \t}\n\t$digits = str_split($num);\n\tforeach ($digits as $digit) {\n\t\tif ($digit\
    \ % 2 == 0) {\n\t\t\t$even_count += 1;\n\t\t} else {\n\t\t\t$odd_count += 1;\n\
    \t\t}\n\t}\n\treturn array($even_count, $odd_count);\n}\necho \"even_odd_count(-12)\
    \ = \";\nvar_dump(even_odd_count(-12));\necho \"even_odd_count(123) = \";\nvar_dump(even_odd_count(123));\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "even_odd_count(-12) = array(2) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(1)\n\
    }\neven_odd_count(123) = array(2) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(2)\n}\n"
  timestamp: 1660028426
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $even_count = 0;\n    $odd_count = 0;\n    $digits = array();\n    while\
    \ ($num != 0) {\n        array_push($digits, $num % 10);\n        $num = intval($num\
    \ / 10);\n    }\n    foreach ($digits as $digit) {\n        if ($digit % 2 ==\
    \ 0) {\n            $even_count++;\n        } else {\n            $odd_count++;\n\
    \        }\n    }\n    return array($even_count, $odd_count);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3qqqa5xo.php:38\n\
    Stack trace:\n#0 /tmp/tmp3qqqa5xo.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp3qqqa5xo.php\
    \ on line 38\n"
  timestamp: 1660028426
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $odd = 0;\n    $even = 0;\n    $arr = array();\n    $str = (string)$num;\n\
    \    for ($i = 0; $i < strlen($str); $i++) {\n        if ((int)$str[$i] % 2 ==\
    \ 0) {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \    }\n    $arr[0] = $even;\n    $arr[1] = $odd;\n    return $arr;\n}\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9hsf73uj.php:30\n\
    Stack trace:\n#0 /tmp/tmp9hsf73uj.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp9hsf73uj.php\
    \ on line 30\n"
  timestamp: 1660028426
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $negative = false;\n    if ($num < 0) {\n        $negative = true;\n\
    \        $num = -$num;\n    }\n    $even = 0;\n    $odd = 0;\n    while ($num)\
    \ {\n        $last = $num % 10;\n        if ($last % 2) {\n            $odd++;\n\
    \        } else {\n            $even++;\n        }\n        $num = $num / 10;\n\
    \    }\n    if ($negative) {\n        $odd++;\n    }\n    return array($even,\
    \ $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmphmpb_2g_.php
    on line 17


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmphmpb_2g_.php on line 17


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmphmpb_2g_.php on line 17


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmphmpb_2g_.php on line 17


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmphmpb_2g_.php
    on line 17


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmphmpb_2g_.php on line 17


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmphmpb_2g_.php on line 17


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmphmpb_2g_.php on line 17


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmphmpb_2g_.php on line 17


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmphmpb_2g_.php on line 17


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmphmpb_2g_.php on line 17


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmphmpb_2g_.php on line 17


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmphmpb_2g_.php on line 17


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmphmpb_2g_.php on line 17


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmphmpb_2g_.php on line 17


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmphmpb_2g_.php on line 17


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmphmpb'
  timestamp: 1660028426
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  $even = 0;\n  $odd = 0;\n  $num = abs($num);\n  while ($num > 0) {\n  \
    \  $digit = $num % 10;\n    if ($digit % 2 == 0) {\n      $even++;\n    } else\
    \ {\n      $odd++;\n    }\n    $num = floor($num / 10);\n  }\n  return array($even,\
    \ $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1b3hxzhv.php:36\n\
    Stack trace:\n#0 /tmp/tmp1b3hxzhv.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp1b3hxzhv.php\
    \ on line 36\n"
  timestamp: 1660028426
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $evens = 0;\n    $odds = 0;\n    $num_string = (string)$num;\n    $num_string_len\
    \ = strlen($num_string);\n    for ($i = 0; $i < $num_string_len; $i++) {\n   \
    \     if ($num_string[$i] % 2 == 0) {\n            $evens++;\n        } else {\n\
    \            $odds++;\n        }\n    }\n    return array($evens, $odds);\n}\n\
    echo even_odd_count(-12)[0];\necho even_odd_count(-12)[1];\necho even_odd_count(123)[0];\n\
    echo even_odd_count(123)[1];\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmp8qe0ngok.php:14\nStack trace:\n#0 /tmp/tmp8qe0ngok.php(22): even_odd_count(-12)\n\
    #1 {main}\n  thrown in /tmp/tmp8qe0ngok.php on line 14\n"
  timestamp: 1660028426
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  $even = $odd = 0;\n  $num = abs($num);\n  while ($num > 0) {\n    $digit\
    \ = $num % 10;\n    if ($digit % 2 == 0) {\n      $even++;\n    } else {\n   \
    \   $odd++;\n    }\n    $num = ($num - $digit) / 10;\n  }\n  return array($even,\
    \ $odd);\n}\n\n$input = '12345';\n$input = (int) $input;\n\necho 'input = ' .\
    \ $input . PHP_EOL;\necho 'even = ' . even_odd_count($input)[0] . PHP_EOL;\necho\
    \ 'odd = ' . even_odd_count($input)[1] . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "input = 12345\neven = 2\nodd = 3\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp7x7n6pau.php:41\nStack trace:\n#0 /tmp/tmp7x7n6pau.php(44):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp7x7n6pau.php on line 41\n"
  timestamp: 1660028426
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  $abs_num = abs($num);\n  $even = 0;\n  $odd = 0;\n  while ($abs_num > 0)\
    \ {\n    $curr_digit = $abs_num % 10;\n    if ($curr_digit % 2 == 0) {\n     \
    \ $even++;\n    } else {\n      $odd++;\n    }\n    $abs_num = (int)($abs_num\
    \ / 10);\n  }\n  return array($even, $odd);\n}\necho even_odd_count(-12)[0];\n\
    echo even_odd_count(-12)[1];\necho even_odd_count(123)[0];\necho even_odd_count(123)[1];\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1112\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpugo1_48g.php:39\n\
    Stack trace:\n#0 /tmp/tmpugo1_48g.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpugo1_48g.php\
    \ on line 39\n"
  timestamp: 1660028426
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n\t$num = abs($num);\n\t$even = 0;\n\t$odd = 0;\n\twhile ($num > 0) {\n\t\t\
    $rem = $num % 10;\n\t\tif ($rem % 2 == 0) {\n\t\t\t$even += 1;\n\t\t} else {\n\
    \t\t\t$odd += 1;\n\t\t}\n\t\t$num = (int)($num / 10);\n\t}\n\treturn array($even,\
    \ $odd);\n}\n$num = -12;\n$result = even_odd_count($num);\necho \"The number of\
    \ even digits in $num are $result[0]. The number of odd digits in $num are $result[1].\"\
    ;\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "The number of even digits in -12 are 1. The number of odd digits in -12\
    \ are 1.\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgzqk875u.php:38\n\
    Stack trace:\n#0 /tmp/tmpgzqk875u.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpgzqk875u.php\
    \ on line 38\n"
  timestamp: 1660028426
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $oddCount = 0;\n    $evenCount = 0;\n    $num = abs($num);\n    while\
    \ ($num > 0) {\n        $lastDigit = $num % 10;\n        if ($lastDigit % 2 ==\
    \ 0) {\n            $evenCount++;\n        } else {\n            $oddCount++;\n\
    \        }\n        $num = floor($num / 10);\n    }\n    return array($evenCount,\
    \ $oddCount);\n}\n\necho even_odd_count(-12) . PHP_EOL;\necho even_odd_count(123)\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Array to string conversion in /tmp/tmpojb1yyeu.php on line 24\n\
    Array\n\nWarning: Array to string conversion in /tmp/tmpojb1yyeu.php on line 25\n\
    Array\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpojb1yyeu.php:38\n\
    Stack trace:\n#0 /tmp/tmpojb1yyeu.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpojb1yyeu.php\
    \ on line 38\n"
  timestamp: 1660028426
- exit_code: 0
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n\tif($num < 0) {\n\t\t$num = -$num;\n\t}\n\t$even = 0;\n\t$odd = 0;\n\t$num\
    \ = strval($num);\n\t$num = str_split($num);\n\tfor($i = 0; $i < count($num);\
    \ $i++) {\n\t\tif($num[$i] % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t}\n\t$array = array($even, $odd);\n\treturn $array;\n}\necho even_odd_count(-12);\n\
    echo even_odd_count(123);\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Array to string conversion in /tmp/tmppyfht8en.php on line 26

    Array

    Warning: Array to string conversion in /tmp/tmppyfht8en.php on line 27

    Array'
  timestamp: 1660028426
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $arr = str_split($num);\n    $odd = 0;\n    $even = 0;\n    foreach ($arr\
    \ as $val) {\n        if ($val % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n    }\n    return array($even, $odd);\n}\n\
    \nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpww4hh65p.php:13\nStack trace:\n#0 /tmp/tmpww4hh65p.php(23): even_odd_count(-78)\n\
    #1 /tmp/tmpww4hh65p.php(28): candidate(-78)\n#2 /tmp/tmpww4hh65p.php(37): test()\n\
    #3 {main}\n  thrown in /tmp/tmpww4hh65p.php on line 13\n"
  timestamp: 1660028426
- exit_code: 0
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  $num = abs($num);\n  $even = 0;\n  $odd = 0;\n  if ($num < 10 && $num %\
    \ 2 == 0) {\n    $even++;\n  } else if ($num < 10 && $num % 2 == 1) {\n    $odd++;\n\
    \  } else {\n    while ($num > 0) {\n      $digit = $num % 10;\n      if ($digit\
    \ % 2 == 0) {\n        $even++;\n      } else {\n        $odd++;\n      }\n  \
    \    $num = floor($num / 10);\n    }\n  }\n  $array = array($even, $odd);\n  return\
    \ $array;\n}\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028426
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $even = 0;\n    $odd = 0;\n    for ($i = 0; $i < strlen((string) $num);\
    \ $i++) {\n        if ($num[$i] % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n    }\n    $answer = array($even, $odd);\n\
    \    return $answer;\n}\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmpyme8ms9v.php\
    \ on line 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyme8ms9v.php:26\n\
    Stack trace:\n#0 /tmp/tmpyme8ms9v.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpyme8ms9v.php\
    \ on line 26\n"
  timestamp: 1660028426
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n\t// Your code goes here.\n}\n\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzjlfbx07.php:17\n\
    Stack trace:\n#0 /tmp/tmpzjlfbx07.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpzjlfbx07.php\
    \ on line 17\n"
  timestamp: 1660028426
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  $num = abs($num);\n  $evens = 0;\n  $odds = 0;\n  while ($num > 0) {\n\
    \    $digit = $num % 10;\n    if ($digit % 2 == 0) {\n      $evens++;\n    } else\
    \ {\n      $odds++;\n    }\n    $num = $num / 10;\n  }\n  return array($evens,\
    \ $odds);\n}\n\n$evens = 0;\n$odds = 0;\n\n$a = even_odd_count(-12);\nprint_r($a);\n\
    print \"$a[0] even digits, $a[1] odd digits.\\n\";\n\n$a = even_odd_count(123);\n\
    print_r($a);\nprint \"$a[0] even digits, $a[1] odd digits.\\n\";\n\n$a = even_odd_count(1203);\n\
    print_r($a);\nprint \"$a[0] even digits, $a[1] odd digits.\\n\";\n\n$a = even_odd_count(1234);\n\
    print_r($a);\nprint \"$a[0] even digits, $a[1] odd digits.\\n\";\n\n$a = even_odd_count(1235);\n\
    print_r($a);\nprint \"$a[0] even digits, $a[1] odd digits.\\n\";\n\n$a = even_odd_count(120);\n\
    print_r($a);\nprint \"$a[0] even digits, $a[1] odd digits.\\n\";\n\n$a = even_odd_count(12);\n\
    print_r($a);\nprint \"$a[0] even digits, $a[1] odd digits.\\n\";\n\n$a = even_odd_count(1);\n\
    print_r($a);\nprint \"$a[0] even digits, $a[1] odd digits.\\n\";\n\n$a = even_odd_count(0);\n\
    print_r($a);\nprint \"$a[0] even digits, $a[1] odd digits.\\n\";\n\n$a = even_odd_count(2);\n\
    print_r($a);\nprint \"$\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "Test" in /tmp/tmpunk0c7sc.php
    on line 71

    '
  timestamp: 1660028426
- exit_code: 0
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n\t// Write code here\n\t$is_even = $num % 2 == 0;\n\t$digits = str_split(abs($num));\n\
    \t$odd = array_filter($digits, function($n) {\n\t\treturn $n % 2 == 1;\n\t});\n\
    \t$even = array_filter($digits, function($n) {\n\t\treturn $n % 2 == 0;\n\t});\n\
    \treturn array(count($even), count($odd));\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028426
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  if($num < 0) {\n    $num = -1 * $num;\n  }\n  $odd = 0;\n  $even = 0;\n\
    \  while($num != 0) {\n    $digit = $num % 10;\n    if($digit % 2 == 0) {\n  \
    \    $even++;\n    } else {\n      $odd++;\n    }\n    $num = ($num - $digit)\
    \ / 10;\n  }\n  return array($even, $odd);\n}\nprint_r(even_odd_count(-12));\n\
    print_r(even_odd_count(123));\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 1\n)\nArray\n(\n    [0] => 1\n    [1]\
    \ => 2\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw7xtn30a.php:39\n\
    Stack trace:\n#0 /tmp/tmpw7xtn30a.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpw7xtn30a.php\
    \ on line 39\n"
  timestamp: 1660028426
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0)\
    \ {\n        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n           \
    \ $even += 1;\n        } else {\n            $odd += 1;\n        }\n        $num\
    \ = floor($num / 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg22qil6f.php:36\n\
    Stack trace:\n#0 /tmp/tmpg22qil6f.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpg22qil6f.php\
    \ on line 36\n"
  timestamp: 1660028426
- exit_code: 0
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    if ($num < 0) {\n        $num = abs($num);\n    }\n    $str = (string)$num;\n\
    \    $even_count = 0;\n    $odd_count = 0;\n    for ($i = 0; $i < strlen($str);\
    \ $i++) {\n        if ((int)$str[$i] % 2 == 0) {\n            $even_count++;\n\
    \        } else {\n            $odd_count++;\n        }\n    }\n    return array($even_count,\
    \ $odd_count);\n}\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028426
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $even = 0;\n    $odd = 0;\n    $num = str_split($num);\n    foreach ($num\
    \ as $value) {\n        if ($value % 2 == 0) {\n            $even += 1;\n    \
    \    } else {\n            $odd += 1;\n        }\n    }\n    return array($even,\
    \ $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmp7mxyl_4q.php:13\nStack trace:\n#0 /tmp/tmp7mxyl_4q.php(23): even_odd_count(Array)\n\
    #1 /tmp/tmp7mxyl_4q.php(28): candidate(-78)\n#2 /tmp/tmp7mxyl_4q.php(37): test()\n\
    #3 {main}\n  thrown in /tmp/tmp7mxyl_4q.php on line 13\n"
  timestamp: 1660028426
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  $odds = 0;\n  $evens = 0;\n  $nums = str_split($num);\n  $nums = array_map('intval',\
    \ $nums);\n  foreach ($nums as $value) {\n    if ($value % 2 == 0) {\n      $evens++;\n\
    \    } else {\n      $odds++;\n    }\n  }\n  return array($evens, $odds);\n}\n\
    print_r(even_odd_count(-12));\nprint_r(even_odd_count(123));\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 2\n    [1] => 1\n)\nArray\n(\n    [0] => 1\n    [1]\
    \ => 2\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcn3tjl4l.php:30\n\
    Stack trace:\n#0 /tmp/tmpcn3tjl4l.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpcn3tjl4l.php\
    \ on line 30\n"
  timestamp: 1660028426
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  $digits = str_split($num);\n  $even = 0;\n  $odd = 0;\n  foreach ($digits\
    \ as $digit) {\n    if ($digit % 2 == 0) {\n      $even++;\n    } else {\n   \
    \   $odd++;\n    }\n  }\n  return array($even, $odd);\n}\nprint_r(even_odd_count(-12));\n\
    print_r(even_odd_count(123));\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpvdm5codd.php:13\nStack trace:\n#0 /tmp/tmpvdm5codd.php(21): even_odd_count(-12)\n\
    #1 {main}\n  thrown in /tmp/tmpvdm5codd.php on line 13\n"
  timestamp: 1660028426
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n\t$num = abs($num);\n\t$even = 0;\n\t$odd = 0;\n\twhile ($num > 0) {\n\t\t\
    $digit = $num % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\
    \t\t\t$odd++;\n\t\t}\n\t\t$num = $num / 10;\n\t}\n\t$even_odd_count = array($even,\
    \ $odd);\n\treturn $even_odd_count;\n}\n\n$num = -12;\n$even_odd_count = even_odd_count($num);\n\
    echo \"[\";\nfor ($i = 0; $i < count($even_odd_count); $i++) {\n\techo $even_odd_count[$i];\n\
    \tif ($i + 1 < count($even_odd_count)) {\n\t\techo \", \";\n\t}\n}\necho \"]\"\
    ;\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 1.2 to int loses precision in /tmp/tmppm3j8ofs.php
    on line 13


    Deprecated: Implicit conversion from float 0.12 to int loses precision in /tmp/tmppm3j8ofs.php
    on line 13


    Deprecated: Implicit conversion from float 0.012 to int loses precision in /tmp/tmppm3j8ofs.php
    on line 13


    Deprecated: Implicit conversion from float 0.0012000000000000001 to int loses
    precision in /tmp/tmppm3j8ofs.php on line 13


    Deprecated: Implicit conversion from float 0.00012000000000000002 to int loses
    precision in /tmp/tmppm3j8ofs.php on line 13


    Deprecated: Implicit conversion from float 1.2000000000000002E-5 to int loses
    precision in /tmp/tmppm3j8ofs.php on line 13


    Deprecated: Implicit conversion from float 1.2000000000000002E-6 to int loses
    precision in /tmp/tmppm3j8ofs.php on line 13


    Deprecated: Implicit conversion from float 1.2000000000000002E-7 to int loses
    precision in /tmp/tmppm3j8ofs.php on line 13


    Deprecated: Implicit conversion from float 1.2000000000000002E-8 to int loses
    precision in /tmp/tmppm3j8ofs.php on line 13


    Deprecated: Implicit conversion from float 1.2000000000000002E-9 to int loses
    precision in /tmp/tmppm3j8ofs.php on line 13


    Deprecated: Implicit conversion from float 1.2000000000000003E-10 to int loses
    precision in /tmp/tmppm3j8ofs.php on line 13


    Deprecated: Implicit conversion from float 1.2000000000000002E-11 to int loses
    precision in /tmp/tmppm3j8ofs.php on line 13


    Deprecated: Implicit conversion from float 1.2000000000000001E-12 to int loses
    precision in /tmp/tmppm3j8ofs.php on line 13


    Deprecated: Implicit conversion from float 1.2000000000000002E-13 to int loses
    precision in /tmp/tmppm3j8ofs.php on line 13


    Deprecated: Implicit conversion from float 1.2000000000000003E-14 to int loses
    precision in /tmp/tmppm3j8ofs.php on line 13


    Deprecated: Implicit conversion from float 1.2000000000000002E-15 to int loses
    precision in /tmp/tmppm3j8ofs.php on line 13


    Deprecated: Implicit conversion from float 1.2000000000000003E-16 to int loses
    precision in /tmp/tmppm3j8of'
  timestamp: 1660028426
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $num_str = (string) $num;\n    $even_cnt = 0;\n    $odd_cnt = 0;\n  \
    \  for ($i = 0; $i < strlen($num_str); $i++) {\n        if ($num_str[$i] % 2 ==\
    \ 0) {\n            $even_cnt++;\n        } else {\n            $odd_cnt++;\n\
    \        }\n    }\n    return array($even_cnt, $odd_cnt);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpz6kyzzlw.php:13\nStack trace:\n#0 /tmp/tmpz6kyzzlw.php(23): even_odd_count(-78)\n\
    #1 /tmp/tmpz6kyzzlw.php(28): candidate(-78)\n#2 /tmp/tmpz6kyzzlw.php(37): test()\n\
    #3 {main}\n  thrown in /tmp/tmpz6kyzzlw.php on line 13\n"
  timestamp: 1660028426
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $num = abs($num);\n    $odd = 0;\n    $even = 0;\n    while ($num > 0)\
    \ {\n        $temp = $num % 10;\n        if ($temp % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = (int)($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnou4pw1w.php:36\n\
    Stack trace:\n#0 /tmp/tmpnou4pw1w.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpnou4pw1w.php\
    \ on line 36\n"
  timestamp: 1660028426
- exit_code: 0
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n\t// get the string of the number, -12 is \"-12\"\n\t$str = strval($num);\n\
    \t// if it is negative, get rid of the \"-\"\n\tif ($str[0] == \"-\") {\n\t\t\
    $str = substr($str, 1);\n\t}\n\t// split the string into array of chars, \"-12\"\
    \ is [\"-\", \"1\", \"2\"]\n\t$arr = str_split($str);\n\t// loop through the chars\
    \ in the array\n\t//  if the char is even, increment $even_count\n\t//  if the\
    \ char is odd, increment $odd_count\n\t$even_count = 0;\n\t$odd_count = 0;\n\t\
    foreach ($arr as $char) {\n\t\tif ($char % 2 == 0) {\n\t\t\t$even_count++;\n\t\
    \t} else {\n\t\t\t$odd_count++;\n\t\t}\n\t}\n\t// return array of even and odd\
    \ counts\n\treturn array($even_count, $odd_count);\n}\n\necho \"<pre>\";\nprint_r(even_odd_count(-12));\n\
    print_r(even_odd_count(123));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 1\n)\nArray\n(\n    [0] => 1\n\
    \    [1] => 2\n)\n</pre>"
  timestamp: 1660028426
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $arr = array(0, 0);\n    $abs = abs($num);\n    while ($abs > 0) {\n\
    \        $arr[$abs % 2]++;\n        $abs /= 10;\n    }\n    return $arr;\n}\n\n\
    echo '<pre>';\nprint_r(even_odd_count(-12));\nprint_r(even_odd_count(123));\n\
    print_r(even_odd_count(0));\nprint_r(even_odd_count(2320));\nprint_r(even_odd_count(2333));\n\
    print_r(even_odd_count(123456789));\nprint_r(even_odd_count(1234567890));\nprint_r(even_odd_count(12345678900));\n\
    print_r(even_odd_count(123456789000));\nprint_r(even_odd_count(1234567890000));\n\
    print_r(even_odd_count(12345678900000));\nprint_r(even_odd_count(123456789000000));\n\
    print_r(even_odd_count(1234567890000000));\nprint_r(even_odd_count(12345678900000000));\n\
    print_r(even_odd_count(123456789000000000));\nprint_r(even_odd_count(1234567890000000000));\n\
    print_r(even_odd_count(12345678900000000000));\nprint_r(even_odd_count(123456789000000000000));\n\
    print_r(even_odd_count(1234567890000000000000));\nprint_r(even_odd_count(12345678900000000000000));\n\
    print_r(even_odd_count(123456789000000000000000));\nprint_r(even_odd_count(1234567890000000000000000));\n\
    print_r(even_odd_count(12345678900000000000000000));\nprint_r(even_odd_count(123456789000000000000000000));\n\
    print_r(even_odd_count(1234567890000000000000000000));\nprint_r(even_odd_count(12345678900000000000000000000));\n\
    print_r(even_odd_count(\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmp0ickonhi.php on line 46

    '
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    if ($num === 0) {\n        return array(0,0);\n    }\n    else if ($num\
    \ > 0) {\n        $num = strval($num);\n        $result = array(0,0);\n      \
    \  for ($i = 0; $i < strlen($num); $i++) {\n            if ($num[$i] % 2 === 0)\
    \ {\n                $result[0]++;\n            }\n            else {\n      \
    \          $result[1]++;\n            }\n        }\n        return $result;\n\
    \    }\n    else {\n        $num = strval($num);\n        $result = array(0,0);\n\
    \        for ($i = 1; $i < strlen($num); $i++) {\n            if ($num[$i] % 2\
    \ === 0) {\n                $result[0]++;\n            }\n            else {\n\
    \                $result[1]++;\n            }\n        }\n        return $result;\n\
    \    }\n}\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2ox_rlri.php:51\n\
    Stack trace:\n#0 /tmp/tmp2ox_rlri.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp2ox_rlri.php\
    \ on line 51\n"
  timestamp: 1660028426
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    // your code here\n}\n\nvar_dump(even_odd_count(-12));\nvar_dump(even_odd_count(123));\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "NULL\nNULL\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3yre4rc6.php:19\n\
    Stack trace:\n#0 /tmp/tmp3yre4rc6.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp3yre4rc6.php\
    \ on line 19\n"
  timestamp: 1660028426
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n   $even_digit = 0;\n   $odd_digit = 0;\n   for($i = abs($num); $i > 0; $i\
    \ = (int)($i / 10)) {\n      if(($i % 10) % 2 == 0) {\n         $even_digit++;\n\
    \      } else {\n         $odd_digit++;\n      }\n   }\n   return array($even_digit,\
    \ $odd_digit);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd4sc9emq.php:33\n\
    Stack trace:\n#0 /tmp/tmpd4sc9emq.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpd4sc9emq.php\
    \ on line 33\n"
  timestamp: 1660028426
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $digits = str_split($num);\n    $count = [0, 0];\n    foreach ($digits\
    \ as $digit) {\n        if ($digit % 2 === 0) {\n            $count[0]++;\n  \
    \      } else {\n            $count[1]++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpwuk4mfo6.php:12\nStack trace:\n#0 /tmp/tmpwuk4mfo6.php(22): even_odd_count(-78)\n\
    #1 /tmp/tmpwuk4mfo6.php(27): candidate(-78)\n#2 /tmp/tmpwuk4mfo6.php(36): test()\n\
    #3 {main}\n  thrown in /tmp/tmpwuk4mfo6.php on line 12\n"
  timestamp: 1660028426
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    if ($num < 0) $num = -$num;\n    $even = 0;\n    $odd = 0;\n    for ($i\
    \ = 0; $i < strlen($num); $i++) {\n        if ($num[$i] % 2 === 0) {\n       \
    \     $even++;\n        } else {\n            $odd++;\n        }\n    }\n    $res\
    \ = array($even, $odd);\n    return $res;\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmp50vg7s7k.php\
    \ on line 13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp50vg7s7k.php:28\n\
    Stack trace:\n#0 /tmp/tmp50vg7s7k.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp50vg7s7k.php\
    \ on line 28\n"
  timestamp: 1660028426
- exit_code: 0
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $numArray = str_split(abs($num));\n    $evenCount = 0;\n    $oddCount\
    \ = 0;\n    foreach ($numArray as $value) {\n        if ($value % 2 == 0) {\n\
    \            $evenCount++;\n        } else {\n            $oddCount++;\n     \
    \   }\n    }\n    return array($evenCount, $oddCount);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028426
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $evenCount = 0;\n    $oddCount = 0;\n    $number_arr = str_split($num);\n\
    \    foreach ($number_arr as $number) {\n        if ($number % 2 == 0) {\n   \
    \         $evenCount++;\n        } else {\n            $oddCount++;\n        }\n\
    \    }\n    return array($evenCount, $oddCount);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmp2drp_zqc.php:13\nStack trace:\n#0 /tmp/tmp2drp_zqc.php(23): even_odd_count(-78)\n\
    #1 /tmp/tmp2drp_zqc.php(28): candidate(-78)\n#2 /tmp/tmp2drp_zqc.php(37): test()\n\
    #3 {main}\n  thrown in /tmp/tmp2drp_zqc.php on line 13\n"
  timestamp: 1660028427
- exit_code: 0
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $evens = 0;\n    $odds = 0;\n    $digits = str_split(abs($num));\n  \
    \  foreach ($digits as $digit) {\n        if ($digit % 2 == 0) {\n           \
    \ $evens++;\n        } else {\n            $odds++;\n        }\n    }\n    return\
    \ array($evens, $odds);\n}\nprint_r(even_odd_count(-12));\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 1\n)\n"
  timestamp: 1660028426
- exit_code: 0
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n\t$even_count = 0;\n\t$odd_count = 0;\n\t$array = str_split(abs($num));\n\
    \tforeach ($array as $value) {\n\t\tif ($value % 2 == 0) {\n\t\t\t$even_count++;\n\
    \t\t} else {\n\t\t\t$odd_count++;\n\t\t}\n\t}\n\t$output = array($even_count,\
    \ $odd_count);\n\treturn $output;\n}\necho \"<pre>\";\nvar_dump(even_odd_count(-123));\n\
    echo \"</pre>\";\necho \"<pre>\";\nvar_dump(even_odd_count(1232));\necho \"</pre>\"\
    ;\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "<pre>array(2) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(2)\n}\n</pre><pre>array(2)\
    \ {\n  [0]=>\n  int(2)\n  [1]=>\n  int(2)\n}\n</pre>"
  timestamp: 1660028426
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n\t$odd = 0;\n\t$even = 0;\n\t$str = strval($num);\n\tfor ($i = 0; $i < strlen($str);\
    \ $i++) {\n\t\tif ($str[$i] % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t\
    $odd++;\n\t\t}\n\t}\n\t$arr = array($even, $odd);\n\treturn $arr;\n}\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmplei7mrak.php:13\nStack trace:\n#0 /tmp/tmplei7mrak.php(23): even_odd_count(-78)\n\
    #1 /tmp/tmplei7mrak.php(28): candidate(-78)\n#2 /tmp/tmplei7mrak.php(37): test()\n\
    #3 {main}\n  thrown in /tmp/tmplei7mrak.php on line 13\n"
  timestamp: 1660028426
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  $result = [];\n  $countOdd = 0;\n  $countEven = 0;\n  while ($num > 0)\
    \ {\n    $lastDigit = $num % 10;\n    if ($lastDigit % 2 == 0) {\n      $countEven++;\n\
    \    } else {\n      $countOdd++;\n    }\n    $num = ($num - $lastDigit) / 10;\n\
    \  }\n  array_push($result, $countEven, $countOdd);\n  return $result;\n}\n\n\
    echo \"<pre>\";\nprint_r(even_odd_count(-12));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 0\n    [1] => 0\n)\n</pre>\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpr4to396n.php:34\nStack trace:\n#0 /tmp/tmpr4to396n.php(43):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpr4to396n.php on line 34\n"
  timestamp: 1660028426
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $even = 0;\n    $odd = 0;\n    while ($num) {\n        $last_digit =\
    \ $num % 10;\n        if ($last_digit % 2 == 0) {\n            $even++;\n    \
    \    } else {\n            $odd++;\n        }\n        $num = (int)($num / 10);\n\
    \    }\n    return array($even, $odd);\n}\n\necho \"<pre>\";\nprint_r(even_odd_count(-12));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(even_odd_count(123));\necho \"</pre>\"\
    ;\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 1\n)\n</pre><pre>Array\n(\n   \
    \ [0] => 1\n    [1] => 2\n)\n</pre>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpqbcihw3w.php:42\nStack trace:\n#0 /tmp/tmpqbcihw3w.php(45): test()\n\
    #1 {main}\n  thrown in /tmp/tmpqbcihw3w.php on line 42\n"
  timestamp: 1660028426
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  if ($num > 0) {\n    $num = str_split($num);\n    $result = [0, 0];\n \
    \   foreach ($num as $value) {\n      if ($value % 2 == 0) {\n        $result[0]\
    \ += 1;\n      } else {\n        $result[1] += 1;\n      }\n    }\n    return\
    \ $result;\n  } else {\n    return \"Not a valid input\";\n  }\n}\n\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi3swacdg.php:31\n\
    Stack trace:\n#0 /tmp/tmpi3swacdg.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpi3swacdg.php\
    \ on line 31\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  \n  $evens = 0;\n  $odds = 0;\n  $counter = 0;\n  $num = abs($num);\n\n\
    \  while ($num > 0) {\n    $remainder = $num % 10;\n    if ($remainder % 2 ==\
    \ 0) {\n      $evens++;\n    } else {\n      $odds++;\n    }\n    $num = floor($num\
    \ / 10);\n  }\n  return [$evens, $odds];\n}\n\nprint_r(even_odd_count(-12));\n\
    print_r(even_odd_count(123));\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 1\n)\nArray\n(\n    [0] => 1\n    [1]\
    \ => 2\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn4o9hq35.php:41\n\
    Stack trace:\n#0 /tmp/tmpn4o9hq35.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpn4o9hq35.php\
    \ on line 41\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n\t$num = (string)$num;\n\t$string_arr = str_split($num);\n\t$even = array();\n\
    \t$odd = array();\n\tfor ($i=0; $i < count($string_arr); $i++) { \n\t\tif($string_arr[$i]\
    \ % 2 == 0) {\n\t\t\tarray_push($even, $string_arr[$i]);\n\t\t} else {\n\t\t\t\
    array_push($odd, $string_arr[$i]);\n\t\t}\n\t}\n\tprint_r($even);\n\tprint_r($odd);\n\
    }\neven_odd_count(-12);\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpu28o09pg.php:14\nStack trace:\n#0 /tmp/tmpu28o09pg.php(23): even_odd_count('-12')\n\
    #1 {main}\n  thrown in /tmp/tmpu28o09pg.php on line 14\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n\t$count = strlen(strval($num));\n\t$array = str_split($num);\n\t$even =\
    \ 0;\n\t$odd = 0;\n\tfor ($i = 0; $i < $count; $i++) {\n\t\tif ($array[$i] % 2\
    \ == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\t\t}\n\t}\n\techo \"\
    array(\", $even, \", \", $odd, \")\", PHP_EOL;\n}\neven_odd_count(-12);\neven_odd_count(123);\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpj_zaczug.php:14\nStack trace:\n#0 /tmp/tmpj_zaczug.php(22): even_odd_count(-12)\n\
    #1 {main}\n  thrown in /tmp/tmpj_zaczug.php on line 14\n"
  timestamp: 1660028427
- exit_code: 0
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $arr = str_split(abs($num));\n    $odd = 0;\n    $even = 0;\n    foreach\
    \ ($arr as $num) {\n        if ($num % 2 == 0) {\n            $even++;\n     \
    \   } else {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n\
    }\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $even_count = 0;\n    $odd_count = 0;\n    $arr = array();\n    $str\
    \ = strval($num);\n    if ($num > 0) {\n        for ($i = 0; $i < strlen($str);\
    \ $i++) {\n            if ($str[$i] % 2 == 0) {\n                $even_count++;\n\
    \            } else {\n                $odd_count++;\n            }\n        }\n\
    \    } else {\n        $str = substr($str, 1);\n        for ($i = 0; $i < strlen($str);\
    \ $i++) {\n            if ($str[$i] % 2 == 0) {\n                $even_count++;\n\
    \            } else {\n                $odd_count++;\n            }\n        }\n\
    \    }\n    array_push($arr, $even_count, $odd_count);\n    return $arr;\n}\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprw1z_nwb.php:46\n\
    Stack trace:\n#0 /tmp/tmprw1z_nwb.php(49): test()\n#1 {main}\n  thrown in /tmp/tmprw1z_nwb.php\
    \ on line 46\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $even = 0;\n    $odd = 0;\n    if ($num < 0) {\n        $num = 0 - $num;\n\
    \    }\n    while ($num != 0) {\n        $dig = $num % 10;\n        if ($dig %\
    \ 2 == 0) {\n            $even += 1;\n        } else {\n            $odd += 1;\n\
    \        }\n        $num = intval($num / 10);\n    }\n    return array($even,\
    \ $odd);\n}\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5_7l9plm.php:37\n\
    Stack trace:\n#0 /tmp/tmp5_7l9plm.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp5_7l9plm.php\
    \ on line 37\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $split = str_split($num);\n    $even = 0;\n    $odd = 0;\n    foreach\
    \ ($split as $number) {\n        if ($number % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n    }\n    return array($even,\
    \ $odd);\n}\necho \"Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\\n\";\necho \"Example:\\n\";\necho \">>> even_odd_count(-12)\\\
    n\";\nprint_r(even_odd_count(-12));\necho \">>> even_odd_count(123)\\n\";\nprint_r(even_odd_count(123));\n\
    \nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Given an integer. return an array that has the number of even and odd digits\
    \ respectively.\nExample:\n>>> even_odd_count(-12)\n\nFatal error: Uncaught TypeError:\
    \ Unsupported operand types: string % int in /tmp/tmpydf83e7h.php:13\nStack trace:\n\
    #0 /tmp/tmpydf83e7h.php(24): even_odd_count(-12)\n#1 {main}\n  thrown in /tmp/tmpydf83e7h.php\
    \ on line 13\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $odd = 0;\n    $even = 0;\n    while ($num != 0) {\n        $last_digit\
    \ = $num % 10;\n        if ($last_digit % 2 == 0) {\n            $even++;\n  \
    \      } else {\n            $odd++;\n        }\n        $num = intval($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\nprint_r(even_odd_count(-12));\n\
    print_r(even_odd_count(123));\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 1\n)\nArray\n(\n    [0] => 1\n    [1]\
    \ => 2\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2123199z.php:36\n\
    Stack trace:\n#0 /tmp/tmp2123199z.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp2123199z.php\
    \ on line 36\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n\t$num = abs($num);\n\t$odd = 0;\n\t$even = 0;\n\tfor ($i = 0; $i < strlen($num);\
    \ $i++) {\n\t\tif ($num[$i] % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t\
    $odd++;\n\t\t}\n\t}\n\treturn array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmpjj6c0b2k.php\
    \ on line 13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjj6c0b2k.php:27\n\
    Stack trace:\n#0 /tmp/tmpjj6c0b2k.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpjj6c0b2k.php\
    \ on line 27\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $numArr = str_split($num);\n    $evenCount = 0;\n    $oddCount = 0;\n\
    \    for ($i = 0; $i < count($numArr); $i++) {\n        if ($numArr[$i] % 2 ==\
    \ 0) {\n            $evenCount++;\n        } else {\n            $oddCount++;\n\
    \        }\n    }\n    return array($evenCount, $oddCount);\n}\n$result = even_odd_count(-12);\n\
    echo $result[0] . ' ' . $result[1];\necho \"\\n\";\n$result = even_odd_count(123);\n\
    echo $result[0] . ' ' . $result[1];\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpltw_t6wc.php:13\nStack trace:\n#0 /tmp/tmpltw_t6wc.php(21): even_odd_count(-12)\n\
    #1 {main}\n  thrown in /tmp/tmpltw_t6wc.php on line 13\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  $even = 0;\n  $odd = 0;\n  if ($num < 0) {\n    $num = $num * -1;\n  }\n\
    \  while ($num > 0) {\n    $int = $num % 10;\n    if ($int % 2 == 0) {\n     \
    \ $even++;\n    } else {\n      $odd++;\n    }\n    $num = ($num - $int) / 10;\n\
    \  }\n  $ans = array($even, $odd);\n  return $ans;\n}\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppolq77n2.php:38\n\
    Stack trace:\n#0 /tmp/tmppolq77n2.php(41): test()\n#1 {main}\n  thrown in /tmp/tmppolq77n2.php\
    \ on line 38\n"
  timestamp: 1660028427
- exit_code: 0
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  $n_string = (string)$num;\n  $n_string = str_replace('-', '', $n_string);\n\
    \  $even_count = 0;\n  $odd_count = 0;\n  for ($i = 0; $i < strlen($n_string);\
    \ $i++) {\n    if ((int)$n_string[$i] % 2 == 0) {\n      $even_count++;\n    }\
    \ else {\n      $odd_count++;\n    }\n  }\n  return array($even_count, $odd_count);\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n\n}\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsd4g975i.php:16\n\
    Stack trace:\n#0 /tmp/tmpsd4g975i.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpsd4g975i.php\
    \ on line 16\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $even = 0;\n    $odd = 0;\n    $arr = str_split($num);\n    foreach ($arr\
    \ as $value) {\n        if ($value % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n    }\n    return array($even, $odd);\n\
    }\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmp8l52j2ws.php:13\nStack trace:\n#0 /tmp/tmp8l52j2ws.php(22): even_odd_count(-78)\n\
    #1 /tmp/tmp8l52j2ws.php(27): candidate(-78)\n#2 /tmp/tmp8l52j2ws.php(36): test()\n\
    #3 {main}\n  thrown in /tmp/tmp8l52j2ws.php on line 13\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $even_count = 0;\n    $odd_count = 0;\n    for ($i = 0; $i < strlen($num);\
    \ $i++) {\n        if ($num[$i] % 2 == 0) {\n            $even_count++;\n    \
    \    } else {\n            $odd_count++;\n        }\n    }\n    $even_odd_count\
    \ = array($even_count, $odd_count);\n    return $even_odd_count;\n}\nprint_r(even_odd_count(123));\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmptspnc23y.php\
    \ on line 12\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmptspnc23y.php on line 12\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmptspnc23y.php on line 12\nArray\n(\n    [0] => 3\n\
    \    [1] => 0\n)\n\nWarning: Trying to access array offset on value of type int\
    \ in /tmp/tmptspnc23y.php on line 12\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmptspnc23y.php:27\nStack trace:\n#0 /tmp/tmptspnc23y.php(37):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmptspnc23y.php on line 27\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n\t$even = 0;\n\t$odd = 0;\n\tfor ($i = 0; $i < strlen((string)$num); $i++)\
    \ {\n\t\tif (abs($num % 10) % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t\
    $odd++;\n\t\t}\n\t\t$num = $num / 10;\n\t}\n\treturn array($even, $odd);\n}\n\n\
    echo even_odd_count(-12)[0];\necho even_odd_count(-12)[1];\necho even_odd_count(123)[0];\n\
    echo even_odd_count(123)[1];\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float -1.2 to int loses precision in /tmp/tmp3meczx1f.php
    on line 12


    Deprecated: Implicit conversion from float -0.12 to int loses precision in /tmp/tmp3meczx1f.php
    on line 12


    Deprecated: Implicit conversion from float -0.012 to int loses precision in /tmp/tmp3meczx1f.php
    on line 12


    Deprecated: Implicit conversion from float -0.0012000000000000001 to int loses
    precision in /tmp/tmp3meczx1f.php on line 12


    Deprecated: Implicit conversion from float -0.00012000000000000002 to int loses
    precision in /tmp/tmp3meczx1f.php on line 12


    Deprecated: Implicit conversion from float -1.2000000000000002E-5 to int loses
    precision in /tmp/tmp3meczx1f.php on line 12

    6

    Deprecated: Implicit conversion from float -1.2 to int loses precision in /tmp/tmp3meczx1f.php
    on line 12


    Deprecated: Implicit conversion from float -0.12 to int loses precision in /tmp/tmp3meczx1f.php
    on line 12


    Deprecated: Implicit conversion from float -0.012 to int loses precision in /tmp/tmp3meczx1f.php
    on line 12


    Deprecated: Implicit conversion from float -0.0012000000000000001 to int loses
    precision in /tmp/tmp3meczx1f.php on line 12


    Deprecated: Implicit conversion from float -0.00012000000000000002 to int loses
    precision in /tmp/tmp3meczx1f.php on line 12


    Deprecated: Implicit conversion from float -1.2000000000000002E-5 to int loses
    precision in /tmp/tmp3meczx1f.php on line 12

    1

    Deprecated: Implicit conversion from float 12.3 to int loses precision in /tmp/tmp3meczx1f.php
    on line 12


    Deprecated: Implicit conversion from float 1.23 to int loses precision in /tmp/tmp3meczx1f.php
    on line 12


    Deprecated: Implicit conversion from float 0.123 to int loses precision in /tmp/tmp3meczx1f.php
    on line 12


    Deprecated: Implicit conversion from float 0.0123 to int loses precision in /tmp/tmp3meczx1f.php
    on line 12


    Deprecated: Implicit conversion from float 0.00123 to int loses precision in /tmp/tmp3meczx1f.php
    on line 12


    Deprecated: Implicit conversion from float 0.000123 to int loses precision in
    /tmp/tmp3meczx1f.php on li'
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $even = 0;\n    $odd = 0;\n    $abs_num = abs($num);\n    while ($abs_num\
    \ > 0) {\n        $digit = $abs_num % 10;\n        if ($digit % 2 == 0) {\n  \
    \          $even++;\n        } else {\n            $odd++;\n        }\n      \
    \  $abs_num = floor($abs_num / 10);\n    }\n    return array($even, $odd);\n}\n\
    \necho even_odd_count(-12)[0] . PHP_EOL;\necho even_odd_count(-12)[1] . PHP_EOL;\n\
    echo even_odd_count(123)[0] . PHP_EOL;\necho even_odd_count(123)[1] . PHP_EOL;\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n1\n2\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp926qkmh5.php:40\n\
    Stack trace:\n#0 /tmp/tmp926qkmh5.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp926qkmh5.php\
    \ on line 40\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  $even_count = 0;\n  $odd_count = 0;\n  $num = abs($num);\n  while ($num\
    \ >= 1) {\n    $digit = $num % 10;\n    if ($digit % 2 == 0) {\n      $even_count++;\n\
    \    } else {\n      $odd_count++;\n    }\n    $num = ($num - $digit) / 10;\n\
    \  }\n  return array($even_count, $odd_count);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9hrdgtfw.php:36\n\
    Stack trace:\n#0 /tmp/tmp9hrdgtfw.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp9hrdgtfw.php\
    \ on line 36\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $arr = [];\n    $evens = 0;\n    $odds = 0;\n    if ($num < 0) {\n  \
    \      $num = -$num;\n    }\n    while ($num != 0) {\n        $digit = $num %\
    \ 10;\n        if ($digit % 2 == 0) {\n            $evens++;\n        } else {\n\
    \            $odds++;\n        }\n        $num = floor($num / 10);\n    }\n  \
    \  $arr[0] = $evens;\n    $arr[1] = $odds;\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5ga4r7fs.php:41\n\
    Stack trace:\n#0 /tmp/tmp5ga4r7fs.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp5ga4r7fs.php\
    \ on line 41\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $num_abs = abs($num);\n    $even_count = 0;\n    $odd_count = 0;\n  \
    \  while ($num_abs != 0) {\n        $last_digit = $num_abs % 10;\n        if ($last_digit\
    \ % 2 == 0) {\n            $even_count++;\n        } else {\n            $odd_count++;\n\
    \        }\n        $num_abs = floor($num_abs / 10);\n    }\n    return array($even_count,\
    \ $odd_count);\n}\n\nprint_r(even_odd_count(-12));\nprint_r(even_odd_count(123));\n\
    \nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 1\n)\nArray\n(\n    [0] => 1\n    [1]\
    \ => 2\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg85brud4.php:39\n\
    Stack trace:\n#0 /tmp/tmpg85brud4.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpg85brud4.php\
    \ on line 39\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  $evens = 0;\n  $odds = 0;\n  $arr = str_split($num);\n  foreach ($arr as\
    \ $x) {\n    if ($x % 2 === 0) {\n      $evens++;\n    } else {\n      $odds++;\n\
    \    }\n  }\n  return array($evens, $odds);\n}\n\necho 'even_odd_count(-12): ';\n\
    var_dump(even_odd_count(-12));\necho 'even_odd_count(123): ';\nvar_dump(even_odd_count(123));\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "even_odd_count(-12): \nFatal error: Uncaught TypeError: Unsupported operand\
    \ types: string % int in /tmp/tmpebu2yw9e.php:13\nStack trace:\n#0 /tmp/tmpebu2yw9e.php(23):\
    \ even_odd_count(-12)\n#1 {main}\n  thrown in /tmp/tmpebu2yw9e.php on line 13\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  if ($num < 0) {\n    $num = abs($num);\n  }\n  $odds = 0;\n  $evens = 0;\n\
    \  for ($i = 0; $i < strlen($num); $i++) {\n    if ($num[$i] % 2 == 0) {\n   \
    \   $evens += 1;\n    } else {\n      $odds += 1;\n    }\n  }\n  return array($evens,\
    \ $odds);\n}\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmp7ip8qkej.php\
    \ on line 15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7ip8qkej.php:28\n\
    Stack trace:\n#0 /tmp/tmp7ip8qkej.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp7ip8qkej.php\
    \ on line 28\n"
  timestamp: 1660028427
- exit_code: -1
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  $even = 0;\n  $odd = 0;\n  while ($num != 0) {\n    $remainder = $num %\
    \ 10;\n    if ($remainder % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n\
    \    }\n    $num = floor($num / 10);\n  }\n  return array($even, $odd);\n}\n\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028432
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n\t$num = abs($num);\n\t$even_count = 0;\n\t$odd_count = 0;\n\twhile ($num\
    \ != 0) {\n\t\t$digit = $num % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even_count++;\n\
    \t\t} else {\n\t\t\t$odd_count++;\n\t\t}\n\t\t$num = (int)($num / 10);\n\t}\n\t\
    return array($even_count, $odd_count);\n}\n\necho \"even_odd_count(-12) \";\n\
    var_dump(even_odd_count(-12));\necho \"even_odd_count(123) \";\nvar_dump(even_odd_count(123));\n\
    \nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "even_odd_count(-12) array(2) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(1)\n\
    }\neven_odd_count(123) array(2) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(2)\n}\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp7urc6n8u.php:41\nStack\
    \ trace:\n#0 /tmp/tmp7urc6n8u.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp7urc6n8u.php\
    \ on line 41\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  $n = abs($num);\n  $even = 0;\n  $odd = 0;\n  while ($n > 0) {\n    $rem\
    \ = $n % 10;\n    if ($rem % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n\
    \    }\n    $n = $n / 10;\n  }\n  return array($even, $odd);\n}\n\nprint_r(even_odd_count(-12));\n\
    print_r(even_odd_count(123));\nprint_r(even_odd_count(3125));\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 1.2 to int loses precision in /tmp/tmp4jhtp7gs.php
    on line 13


    Deprecated: Implicit conversion from float 0.12 to int loses precision in /tmp/tmp4jhtp7gs.php
    on line 13


    Deprecated: Implicit conversion from float 0.012 to int loses precision in /tmp/tmp4jhtp7gs.php
    on line 13


    Deprecated: Implicit conversion from float 0.0012000000000000001 to int loses
    precision in /tmp/tmp4jhtp7gs.php on line 13


    Deprecated: Implicit conversion from float 0.00012000000000000002 to int loses
    precision in /tmp/tmp4jhtp7gs.php on line 13


    Deprecated: Implicit conversion from float 1.2000000000000002E-5 to int loses
    precision in /tmp/tmp4jhtp7gs.php on line 13


    Deprecated: Implicit conversion from float 1.2000000000000002E-6 to int loses
    precision in /tmp/tmp4jhtp7gs.php on line 13


    Deprecated: Implicit conversion from float 1.2000000000000002E-7 to int loses
    precision in /tmp/tmp4jhtp7gs.php on line 13


    Deprecated: Implicit conversion from float 1.2000000000000002E-8 to int loses
    precision in /tmp/tmp4jhtp7gs.php on line 13


    Deprecated: Implicit conversion from float 1.2000000000000002E-9 to int loses
    precision in /tmp/tmp4jhtp7gs.php on line 13


    Deprecated: Implicit conversion from float 1.2000000000000003E-10 to int loses
    precision in /tmp/tmp4jhtp7gs.php on line 13


    Deprecated: Implicit conversion from float 1.2000000000000002E-11 to int loses
    precision in /tmp/tmp4jhtp7gs.php on line 13


    Deprecated: Implicit conversion from float 1.2000000000000001E-12 to int loses
    precision in /tmp/tmp4jhtp7gs.php on line 13


    Deprecated: Implicit conversion from float 1.2000000000000002E-13 to int loses
    precision in /tmp/tmp4jhtp7gs.php on line 13


    Deprecated: Implicit conversion from float 1.2000000000000003E-14 to int loses
    precision in /tmp/tmp4jhtp7gs.php on line 13


    Deprecated: Implicit conversion from float 1.2000000000000002E-15 to int loses
    precision in /tmp/tmp4jhtp7gs.php on line 13


    Deprecated: Implicit conversion from float 1.2000000000000003E-16 to int loses
    precision in /tmp/tmp4jhtp7g'
  timestamp: 1660028427
- exit_code: 0
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $num = abs($num);\n    $num = str_split($num);\n    $even = $odd = 0;\n\
    \    foreach ($num as $item) {\n        if ($item % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n    }\n    return array($even,\
    \ $odd);\n}\necho even_odd_count(-12)[0].\" \".even_odd_count(-12)[1].\"\\n\"\
    ;\necho even_odd_count(123)[0].\" \".even_odd_count(123)[1].\"\\n\";\n\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1 1

    1 2

    '
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $evens = 0;\n    $odds = 0;\n    $num = abs($num);\n    while ($num >\
    \ 0) {\n        $remainder = $num % 10;\n        if ($remainder % 2 == 0) {\n\
    \            $evens++;\n        } else {\n            $odds++;\n        }\n  \
    \      $num = $num / 10;\n    }\n    return array($evens, $odds);\n}\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpqwfcsis_.php
    on line 13


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpqwfcsis_.php on line 13


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpqwfcsis_.php on line 13


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpqwfcsis_.php on line 13


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpqwfcsis_.php
    on line 13


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpqwfcsis_.php on line 13


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpqwfcsis_.php on line 13


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpqwfcsis_.php on line 13


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpqwfcsis_.php on line 13


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpqwfcsis_.php on line 13


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpqwfcsis_.php on line 13


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpqwfcsis_.php on line 13


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpqwfcsis_.php on line 13


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpqwfcsis_.php on line 13


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpqwfcsis_.php on line 13


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpqwfcsis_.php on line 13


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpqwfc'
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $even = 0;\n    $odd = 0;\n    while ($num != 0) {\n        $digit =\
    \ $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        }\
    \ else {\n            $odd++;\n        }\n        $num = (int)($num / 10);\n \
    \   }\n    return array($even, $odd);\n}\n\n$test_num = 123;\n$test_result = even_odd_count($test_num);\n\
    $expected_result = array(1, 2);\nassert(\n    $test_result === $expected_result,\n\
    \    \"even_odd_count({$test_num}) = {$test_result}, expected {$expected_result}\"\
    \n);\n\n$test_num = -12;\n$test_result = even_odd_count($test_num);\n$expected_result\
    \ = array(1, 1);\nassert(\n    $test_result === $expected_result,\n    \"even_odd_count({$test_num})\
    \ = {$test_result}, expected {$expected_result}\"\n);\n\n$test_num = -2;\n$test_result\
    \ = even_odd_count($test_num);\n$expected_result = array(1, 0);\nassert(\n   \
    \ $test_result === $expected_result,\n    \"even_odd_count({$test_num}) = {$test_result},\
    \ expected {$expected_result}\"\n);\n\n$test_num = 12;\n$test_result = even_odd_count($test_num);\n\
    $expected_result = array(2, 0);\nassert(\n    $test_result === $expected_result,\n\
    \    \"even_odd_count({$test_num}) = {$test_result}, expected {$expected_result}\"\
    \n);\n\n$test_num = 0;\n$test_result = even_odd_count($test_num);\n$expected_result\
    \ = array(0, 0);\nassert(\n    $test_result === $expected_result,\n    \"even_odd_count({$test_num})\
    \ = {$test_result}, expected {$expected_result}\"\n);\n\n$test_num = 1;\n\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Array to string conversion in /tmp/tmpinscs95y.php on line 28\n\
    \nWarning: Array to string conversion in /tmp/tmpinscs95y.php on line 28\n\nWarning:\
    \ Array to string conversion in /tmp/tmpinscs95y.php on line 36\n\nWarning: Array\
    \ to string conversion in /tmp/tmpinscs95y.php on line 36\n\nWarning: Array to\
    \ string conversion in /tmp/tmpinscs95y.php on line 44\n\nWarning: Array to string\
    \ conversion in /tmp/tmpinscs95y.php on line 44\n\nWarning: Array to string conversion\
    \ in /tmp/tmpinscs95y.php on line 52\n\nWarning: Array to string conversion in\
    \ /tmp/tmpinscs95y.php on line 52\n\nFatal error: Uncaught AssertionError: even_odd_count(12)\
    \ = Array, expected Array in /tmp/tmpinscs95y.php:52\nStack trace:\n#0 /tmp/tmpinscs95y.php(52):\
    \ assert(false, 'even_odd_count(...')\n#1 {main}\n  thrown in /tmp/tmpinscs95y.php\
    \ on line 52\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  // TODO: Implement me!\n  $odd_digits = 0;\n  $even_digits = 0;\n  $string_number\
    \ = strval($num);\n  $length = strlen($string_number);\n  for ($i = 0; $i < $length;\
    \ $i++) {\n    if (substr($string_number, $i, 1) % 2 == 0) {\n      $even_digits++;\n\
    \    } else {\n      $odd_digits++;\n    }\n  }\n  return array($even_digits,\
    \ $odd_digits);\n}\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpg44h7wca.php:15\nStack trace:\n#0 /tmp/tmpg44h7wca.php(24): even_odd_count(-78)\n\
    #1 /tmp/tmpg44h7wca.php(29): candidate(-78)\n#2 /tmp/tmpg44h7wca.php(38): test()\n\
    #3 {main}\n  thrown in /tmp/tmpg44h7wca.php on line 15\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n\t$evenCount = 0;\n\t$oddCount = 0;\n\t$length = strlen($num);\n\tfor ($i\
    \ = 0; $i < $length; $i++) {\n\t\tif (intval($num[$i]) % 2 == 0) {\n\t\t\t$evenCount++;\n\
    \t\t} else {\n\t\t\t$oddCount++;\n\t\t}\n\t}\n\treturn array($evenCount, $oddCount);\n\
    }\n\necho \"<pre>\";\nprint_r(even_odd_count(-12));\necho \"</pre>\";\n\necho\
    \ \"<pre>\";\nprint_r(even_odd_count(123));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>\nWarning: Trying to access array offset on value of type int in /tmp/tmp6575k4m4.php\
    \ on line 13\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmp6575k4m4.php on line 13\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmp6575k4m4.php on line 13\nArray\n(\n    [0] => 3\n\
    \    [1] => 0\n)\n</pre><pre>\nWarning: Trying to access array offset on value\
    \ of type int in /tmp/tmp6575k4m4.php on line 13\n\nWarning: Trying to access\
    \ array offset on value of type int in /tmp/tmp6575k4m4.php on line 13\n\nWarning:\
    \ Trying to access array offset on value of type int in /tmp/tmp6575k4m4.php on\
    \ line 13\nArray\n(\n    [0] => 3\n    [1] => 0\n)\n</pre>\nWarning: Trying to\
    \ access array offset on value of type int in /tmp/tmp6575k4m4.php on line 13\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6575k4m4.php:34\nStack\
    \ trace:\n#0 /tmp/tmp6575k4m4.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp6575k4m4.php\
    \ on line 34\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0)\
    \ {\n        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n           \
    \ $even++;\n        } else {\n            $odd++;\n        }\n        $num = ($num\
    \ - $digit) / 10;\n    }\n    return array($even, $odd);\n}\nprint even_odd_count(-12);\n\
    print even_odd_count(123);\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Array to string conversion in /tmp/tmpaux35ni1.php on line 23\n\
    Array\nWarning: Array to string conversion in /tmp/tmpaux35ni1.php on line 24\n\
    Array\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaux35ni1.php:37\n\
    Stack trace:\n#0 /tmp/tmpaux35ni1.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpaux35ni1.php\
    \ on line 37\n"
  timestamp: 1660028427
- exit_code: 0
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n\t$num = str_split(abs($num));\n\t$num2 = array(0, 0);\n\tforeach ($num as\
    \ $digit) {\n\t\tif ($digit % 2 == 0) {\n\t\t\t$num2[0] = $num2[0] + 1;\n\t\t\
    } else {\n\t\t\t$num2[1] = $num2[1] + 1;\n\t\t}\n\t}\n\treturn $num2;\n}\n\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0)\
    \ {\n        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n           \
    \ $even += 1;\n        } else {\n            $odd += 1;\n        }\n        $num\
    \ = floor($num / 10);\n    }\n    return array($even, $odd);\n}\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5v2vdi1h.php:35\n\
    Stack trace:\n#0 /tmp/tmp5v2vdi1h.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp5v2vdi1h.php\
    \ on line 35\n"
  timestamp: 1660028427
- exit_code: 0
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    if ($num < 0) {\n        $num = -$num;\n    }\n    $num = (string)$num;\n\
    \    $even = 0;\n    $odd = 0;\n    for ($i = 0; $i < strlen($num); $i++) {\n\
    \        if ($num[$i] % 2 === 0) {\n            $even++;\n        } else {\n \
    \           $odd++;\n        }\n    }\n    return array($even, $odd);\n}\n\necho\
    \ json_encode(even_odd_count(-12));\necho PHP_EOL;\necho json_encode(even_odd_count(123));\n\
    echo PHP_EOL;\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '[1,1]

    [1,2]

    '
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n\t$odd = 0;\n\t$even = 0;\n\t$num_str = strval($num);\n\tfor ($i = 0; $i\
    \ < strlen($num_str); $i++) {\n\t\tif ($num_str[$i] % 2 == 0) {\n\t\t\t$even++;\n\
    \t\t} else {\n\t\t\t$odd++;\n\t\t}\n\t}\n\treturn array($even, $odd);\n}\n\n$n\
    \ = even_odd_count(-123);\nprint_r($n);\necho $n[0] . \" \" . $n[1];\n\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpa4x_9wpd.php:13\nStack trace:\n#0 /tmp/tmpa4x_9wpd.php(22): even_odd_count(-123)\n\
    #1 {main}\n  thrown in /tmp/tmpa4x_9wpd.php on line 13\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  $total_even = 0;\n  $total_odd = 0;\n  $arr = str_split($num);\n  foreach\
    \ ($arr as $num) {\n    if ($num % 2 == 0) {\n      $total_even++;\n    } else\
    \ {\n      $total_odd++;\n    }\n  }\n  return array($total_even, $total_odd);\n\
    }\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpu05qgnwd.php:13\nStack trace:\n#0 /tmp/tmpu05qgnwd.php(22): even_odd_count('-')\n\
    #1 /tmp/tmpu05qgnwd.php(27): candidate(-78)\n#2 /tmp/tmpu05qgnwd.php(36): test()\n\
    #3 {main}\n  thrown in /tmp/tmpu05qgnwd.php on line 13\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  $numString = strval($num);\n  $evenCount = 0;\n  $oddCount = 0;\n  for\
    \ ($i = 0; $i < strlen($numString); $i++) {\n    if ($numString[$i] % 2 == 0)\
    \ {\n      $evenCount++;\n    } else {\n      $oddCount++;\n    }\n  }\n  return\
    \ array($evenCount, $oddCount);\n}\n\nvar_dump(even_odd_count(-12));\nvar_dump(even_odd_count(123));\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpxltanbfo.php:13\nStack trace:\n#0 /tmp/tmpxltanbfo.php(22): even_odd_count(-12)\n\
    #1 {main}\n  thrown in /tmp/tmpxltanbfo.php on line 13\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num\
    \ % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = (int)($num / 10);\n    }\n\
    \    return array($even, $odd);\n}\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzbt7d8ib.php:28\n\
    Stack trace:\n#0 /tmp/tmpzbt7d8ib.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpzbt7d8ib.php\
    \ on line 28\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n\t$even_count = 0;\n\t$odd_count = 0;\n\t$digits = [];\n\tif($num == 0) {\n\
    \t\treturn $digits;\n\t}\n\tif($num < 0) {\n\t\t$num = $num * -1;\n\t}\n\t$digits\
    \ = array_map(function($val) {\n\t\treturn $val;\n\t}, str_split($num));\n\tforeach($digits\
    \ as $digit) {\n\t\tif($digit % 2 == 0) {\n\t\t\t$even_count += 1;\n\t\t} else\
    \ {\n\t\t\t$odd_count += 1;\n\t\t}\n\t}\n\treturn [$even_count, $odd_count];\n\
    }\nprint_r(even_odd_count(-12));\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 1\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp33aiiogl.php:43\nStack trace:\n#0 /tmp/tmp33aiiogl.php(46):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp33aiiogl.php on line 43\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  $digits = array_map('intval', str_split($num));\n  $even_count = array_reduce($digits,\
    \ function($carry, $item) {\n    return ($item % 2 == 0) ? $carry + 1 : $carry;\n\
    \  }, 0);\n  $odd_count = count($digits) - $even_count;\n  return array($even_count,\
    \ $odd_count);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz_as4bt7.php:23\n\
    Stack trace:\n#0 /tmp/tmpz_as4bt7.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpz_as4bt7.php\
    \ on line 23\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  $even = 0;\n  $odd = 0;\n  $num = str_split($num);\n  foreach ($num as\
    \ $number) {\n    if ($number % 2 === 0) {\n      $even++;\n    } else {\n   \
    \   $odd++;\n    }\n  }\n  return array($even, $odd);\n}\n\nvar_dump(even_odd_count(-12));\n\
    var_dump(even_odd_count(123));\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpjw1hr_5k.php:13\nStack trace:\n#0 /tmp/tmpjw1hr_5k.php(22): even_odd_count(Array)\n\
    #1 {main}\n  thrown in /tmp/tmpjw1hr_5k.php on line 13\n"
  timestamp: 1660028427
- exit_code: 0
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n\tif ($num < 0) {\n\t\t$num = $num * -1;\n\t}\n\t$finalArr = array();\n\t\
    $even = 0;\n\t$odd = 0;\n\t$num = strval($num);\n\tfor ($i = 0; $i < strlen($num);\
    \ $i++) {\n\t\tif ($num[$i] % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t\
    $odd++;\n\t\t}\n\t}\n\tarray_push($finalArr, $even, $odd);\n\treturn $finalArr;\n\
    }\n$test = even_odd_count(-543219);\nvar_dump($test);\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "array(2) {\n  [0]=>\n  int(2)\n  [1]=>\n  int(4)\n}\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  $digits = str_split($num);\n  $even_digits = array_filter($digits, function($v)\
    \ {\n    return $v % 2 == 0;\n  });\n  $odd_digits = array_filter($digits, function($v)\
    \ {\n    return $v % 2 == 1;\n  });\n  return array(sizeof($even_digits), sizeof($odd_digits));\n\
    }\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpomz8tp7e.php:11\nStack trace:\n#0 [internal function]: {closure}('-')\n\
    #1 /tmp/tmpomz8tp7e.php(12): array_filter(Array, Object(Closure))\n#2 /tmp/tmpomz8tp7e.php(19):\
    \ even_odd_count(-78)\n#3 /tmp/tmpomz8tp7e.php(24): candidate(-78)\n#4 /tmp/tmpomz8tp7e.php(33):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpomz8tp7e.php on line 11\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n\t$num = abs($num);\n\t$evenCount = 0;\n\t$oddCount = 0;\n\twhile ($num >\
    \ 0) {\n\t\t$digit = $num % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$evenCount++;\n\
    \t\t} else {\n\t\t\t$oddCount++;\n\t\t}\n\t\t$num = floor($num / 10);\n\t}\n\t\
    return array($evenCount, $oddCount);\n}\n\nprint_r(even_odd_count(-12));\nprint_r(even_odd_count(123));\n\
    \nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 1\n)\nArray\n(\n    [0] => 1\n    [1]\
    \ => 2\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9vp8duo7.php:39\n\
    Stack trace:\n#0 /tmp/tmp9vp8duo7.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp9vp8duo7.php\
    \ on line 39\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  $array = array();\n  $num = abs($num);\n  if ($num == 0) {\n    array_push($array,\
    \ 1, 0);\n  } else {\n    $even = 0;\n    $odd = 0;\n    while ($num != 0) {\n\
    \      $num = floor($num / 10);\n      if (($num % 10) % 2 == 0) {\n        $even++;\n\
    \      } else {\n        $odd++;\n      }\n    }\n    array_push($array, $even,\
    \ $odd);\n  }\n  return $array;\n}\n\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplytn6bm8.php:34\n\
    Stack trace:\n#0 /tmp/tmplytn6bm8.php(44): test()\n#1 {main}\n  thrown in /tmp/tmplytn6bm8.php\
    \ on line 34\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  $count_odd=0;\n  $count_even=0;\n  while($num>0){\n    $rem=$num%10;\n\
    \    if($rem%2==0){\n      $count_even++;\n    }\n    else{\n      $count_odd++;\n\
    \    }\n    $num=floor($num/10);\n  }\n  return array($count_even,$count_odd);\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp08s_d5ng.php:30\n\
    Stack trace:\n#0 /tmp/tmp08s_d5ng.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp08s_d5ng.php\
    \ on line 30\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  $evens = 0;\n  $odds = 0;\n  $i = 1;\n  while ($i <= $num) {\n    if ($i\
    \ % 2 === 0) {\n      $evens += 1;\n    } else {\n      $odds += 1;\n    }\n \
    \   $i += 1;\n  }\n  return array($evens, $odds);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwliiq0mj.php:28\n\
    Stack trace:\n#0 /tmp/tmpwliiq0mj.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpwliiq0mj.php\
    \ on line 28\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $total = 0;\n    $evens = 0;\n    $odds = 0;\n    $is_neg = False;\n\
    \    if ($num < 0) {\n        $num = -$num;\n        $is_neg = True;\n    }\n\
    \    while ($num > 0) {\n        $digit = $num % 10;\n        if ($digit % 2 ==\
    \ 0) {\n            $evens += 1;\n        } else {\n            $odds += 1;\n\
    \        }\n        $num /= 10;\n    }\n    if ($is_neg) {\n        $evens +=\
    \ 1;\n    }\n    return array($evens, $odds);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpk9c7g09_.php
    on line 18


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpk9c7g09_.php on line 18


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpk9c7g09_.php on line 18


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpk9c7g09_.php on line 18


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpk9c7g09_.php
    on line 18


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpk9c7g09_.php on line 18


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpk9c7g09_.php on line 18


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpk9c7g09_.php on line 18


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpk9c7g09_.php on line 18


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpk9c7g09_.php on line 18


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpk9c7g09_.php on line 18


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpk9c7g09_.php on line 18


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpk9c7g09_.php on line 18


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpk9c7g09_.php on line 18


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpk9c7g09_.php on line 18


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpk9c7g09_.php on line 18


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpk9c7'
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $even_count = 0;\n    $odd_count = 0;\n    $num = str_split(abs($num));\n\
    \    foreach ($num as $digit) {\n        $digit % 2 === 0 ? $even_count++ : $odd_count++;\n\
    \    }\n    return array($even_count, $odd_count);\n}\n$num = readline('Enter\
    \ the number you would like to check: ');\necho \"There are \" . even_odd_count($num)[0]\
    \ . \" even digits and \" . even_odd_count($num)[1] . \" odd digits.\\n\";\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function readline() in\
    \ /tmp/tmpg10z_m28.php:17\nStack trace:\n#0 {main}\n  thrown in /tmp/tmpg10z_m28.php\
    \ on line 17\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  $newnum = 0;\n  $check = 0;\n  $even = 0;\n  $odd = 0;\n  $newarray = array();\n\
    \  if ($num == 0) {\n    $newarray = array(0,0);\n  }\n  elseif ($num < 0) {\n\
    \    $newnum = $num * -1;\n    while ($newnum > 0) {\n      $check = $newnum %\
    \ 10;\n      if ($check % 2 == 0) {\n        $even = $even + 1;\n      }\n   \
    \   else {\n        $odd = $odd + 1;\n      }\n      $newnum = $newnum / 10;\n\
    \    }\n    $newarray = array($even, $odd);\n  }\n  else {\n    while ($num >\
    \ 0) {\n      $check = $num % 10;\n      if ($check % 2 == 0) {\n        $even\
    \ = $even + 1;\n      }\n      else {\n        $odd = $odd + 1;\n      }\n   \
    \   $num = $num / 10;\n    }\n    $newarray = array($even, $odd);\n  }\n  return\
    \ $newarray;\n}\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpgvne8ljm.php
    on line 33


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpgvne8ljm.php on line 33


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpgvne8ljm.php on line 33


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpgvne8ljm.php on line 33


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpgvne8ljm.php
    on line 33


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpgvne8ljm.php on line 33


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpgvne8ljm.php on line 33


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpgvne8ljm.php on line 33


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpgvne8ljm.php on line 33


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpgvne8ljm.php on line 33


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpgvne8ljm.php on line 33


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpgvne8ljm.php on line 33


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpgvne8ljm.php on line 33


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpgvne8ljm.php on line 33


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpgvne8ljm.php on line 33


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpgvne8ljm.php on line 33


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpgvne'
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    // ToDo:\n    // your code here\n}\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp98l09y3m.php:17\n\
    Stack trace:\n#0 /tmp/tmp98l09y3m.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp98l09y3m.php\
    \ on line 17\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $evens = 0;\n    $odds = 0;\n    $num = (string)$num;\n    for ($i =\
    \ 0; $i < strlen($num); $i++) {\n        if ($num[$i] % 2 === 0) {\n         \
    \   $evens++;\n        } else {\n            $odds++;\n        }\n    }\n    return\
    \ array($evens, $odds);\n}\nprint_r(even_odd_count(-12));\nprint_r(even_odd_count(123));\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpqpi9_zpd.php:13\nStack trace:\n#0 /tmp/tmpqpi9_zpd.php(21): even_odd_count('-12')\n\
    #1 {main}\n  thrown in /tmp/tmpqpi9_zpd.php on line 13\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  if ($num === 0) {\n    return array(0, 0);\n  }\n  $digits = array();\n\
    \  while ($num != 0) {\n    $digits[] = $num % 10;\n    $num = (int)($num / 10);\n\
    \  }\n  $num_of_evens = 0;\n  $num_of_odds = 0;\n  foreach ($digits as $digit)\
    \ {\n    if ($digit % 2 === 0) {\n      $num_of_evens++;\n    } else {\n     \
    \ $num_of_odds++;\n    }\n  }\n  return array($num_of_evens, $num_of_odds);\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmd7hx8p8.php:41\n\
    Stack trace:\n#0 /tmp/tmpmd7hx8p8.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpmd7hx8p8.php\
    \ on line 41\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n\t$count = [0, 0];\n\t$str = strval($num);\n\tfor ($i = 0; $i < strlen($str);\
    \ $i++) {\n\t\tif ($str[$i] % 2 === 0) {\n\t\t\t$count[0]++;\n\t\t} else {\n\t\
    \t\t$count[1]++;\n\t\t}\n\t}\n\treturn $count;\n}\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmppwfyr5ru.php:12\nStack trace:\n#0 /tmp/tmppwfyr5ru.php(21): even_odd_count(-78)\n\
    #1 /tmp/tmppwfyr5ru.php(26): candidate(-78)\n#2 /tmp/tmppwfyr5ru.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmppwfyr5ru.php on line 12\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $evens = 0;\n    $odds = 0;\n    if($num < 0) {\n        $num = -1 *\
    \ $num;\n    }\n    for($i = 0; $i < strlen($num); $i++) {\n        if($num[$i]\
    \ % 2 == 0) {\n            $evens++;\n        } else {\n            $odds++;\n\
    \        }\n    }\n    return array($evens, $odds);\n}\nprint_r(even_odd_count(-12345));\n\
    \nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmps60gvb44.php\
    \ on line 15\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmps60gvb44.php on line 15\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmps60gvb44.php on line 15\n\nWarning: Trying to access\
    \ array offset on value of type int in /tmp/tmps60gvb44.php on line 15\n\nWarning:\
    \ Trying to access array offset on value of type int in /tmp/tmps60gvb44.php on\
    \ line 15\nArray\n(\n    [0] => 5\n    [1] => 0\n)\n\nWarning: Trying to access\
    \ array offset on value of type int in /tmp/tmps60gvb44.php on line 15\n\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmps60gvb44.php:30\nStack trace:\n\
    #0 /tmp/tmps60gvb44.php(40): test()\n#1 {main}\n  thrown in /tmp/tmps60gvb44.php\
    \ on line 30\n"
  timestamp: 1660028427
- exit_code: 0
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n\t$evens = 0;\n\t$odds = 0;\n\tforeach (str_split($num) as $i) {\n\t\tif\
    \ (is_numeric($i)) {\n\t\t\tif ($i % 2 == 0) {\n\t\t\t\t$evens++;\n\t\t\t} else\
    \ {\n\t\t\t\t$odds++;\n\t\t\t}\n\t\t}\n\t}\n\treturn array($evens, $odds);\n}\n\
    \nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $evens = 0;\n    $odds = 0;\n    foreach (str_split($num) as $value)\
    \ {\n        if ($value % 2 == 0) {\n            $evens++;\n        } else {\n\
    \            $odds++;\n        }\n    }\n    return array($evens, $odds);\n}\n\
    echo even_odd_count(-12);\necho \"\\n\";\necho even_odd_count(123);\necho \"\\\
    n\";\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmptlwesmvp.php:12\nStack trace:\n#0 /tmp/tmptlwesmvp.php(20): even_odd_count(-12)\n\
    #1 {main}\n  thrown in /tmp/tmptlwesmvp.php on line 12\n"
  timestamp: 1660028427
- exit_code: 0
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $count = str_split(abs($num));\n    $result = [0, 0];\n    foreach ($count\
    \ as $value) {\n        if ($value % 2 === 0) {\n            $result[0]++;\n \
    \       } else {\n            $result[1]++;\n        }\n    }\n    return $result;\n\
    }\n\nprint_r(even_odd_count(-12));\necho '<br/>';\nprint_r(even_odd_count(123));\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 1\n)\n<br/>Array\n(\n    [0] => 1\n\
    \    [1] => 2\n)\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n\t$output = array(0, 0);\n\t$num_abs = abs($num);\n\twhile ($num_abs > 0)\
    \ {\n\t\t$remainder = $num_abs % 10;\n\t\tif ($remainder % 2 === 0) {\n\t\t\t\
    $output[0]++;\n\t\t} else {\n\t\t\t$output[1]++;\n\t\t}\n\t\t$num_abs = floor($num_abs\
    \ / 10);\n\t}\n\treturn $output;\n}\n\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6ha5wgb0.php:35\n\
    Stack trace:\n#0 /tmp/tmp6ha5wgb0.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp6ha5wgb0.php\
    \ on line 35\n"
  timestamp: 1660028427
- exit_code: 0
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $num=abs($num);\n    $count=0;\n    $count2=0;\n    $new_num= (string)$num;\n\
    \    for($i=0;$i<strlen($new_num);$i++){\n        if($new_num[$i]%2==0){\n   \
    \         $count++;\n        }\n        else{\n            $count2++;\n      \
    \  }\n    }\n    return array($count,$count2);\n}\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $even = 0;\n    $odd = 0;\n    $arr = array();\n    for ($i = 0; $i <\
    \ strlen($num); $i++) {\n        if ($num[$i] % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n    }\n    array_push($arr,\
    \ $even, $odd);\n    return $arr;\n}\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmpqkdvxw57.php\
    \ on line 13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqkdvxw57.php:27\n\
    Stack trace:\n#0 /tmp/tmpqkdvxw57.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpqkdvxw57.php\
    \ on line 27\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  $num = abs($num);\n  $evens = 0;\n  $odds = 0;\n  for ($i = 0; $i < strlen($num);\
    \ $i++) {\n    if ($num[$i] % 2 == 0) {\n      $evens++;\n    } else {\n     \
    \ $odds++;\n    }\n  }\n  return array($evens, $odds);\n}\n\n$arr = array(2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20);\nfor ($i = 0;\
    \ $i < count($arr); $i++) {\n  echo even_odd_count($arr[$i])[0] . \" evens and\
    \ \" . even_odd_count($arr[$i])[1] . \" odds\";\n  echo \"<br>\";\n}\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Warning: Trying to access array offset on value of type int in /tmp/tmpfbdqkv39.php
    on line 13


    Warning: Trying to access array offset on value of type int in /tmp/tmpfbdqkv39.php
    on line 13

    1 evens and 0 odds<br>

    Warning: Trying to access array offset on value of type int in /tmp/tmpfbdqkv39.php
    on line 13


    Warning: Trying to access array offset on value of type int in /tmp/tmpfbdqkv39.php
    on line 13

    1 evens and 0 odds<br>

    Warning: Trying to access array offset on value of type int in /tmp/tmpfbdqkv39.php
    on line 13


    Warning: Trying to access array offset on value of type int in /tmp/tmpfbdqkv39.php
    on line 13

    1 evens and 0 odds<br>

    Warning: Trying to access array offset on value of type int in /tmp/tmpfbdqkv39.php
    on line 13


    Warning: Trying to access array offset on value of type int in /tmp/tmpfbdqkv39.php
    on line 13

    1 evens and 0 odds<br>

    Warning: Trying to access array offset on value of type int in /tmp/tmpfbdqkv39.php
    on line 13


    Warning: Trying to access array offset on value of type int in /tmp/tmpfbdqkv39.php
    on line 13

    1 evens and 0 odds<br>

    Warning: Trying to access array offset on value of type int in /tmp/tmpfbdqkv39.php
    on line 13


    Warning: Trying to access array offset on value of type int in /tmp/tmpfbdqkv39.php
    on line 13

    1 evens and 0 odds<br>

    Warning: Trying to access array offset on value of type int in /tmp/tmpfbdqkv39.php
    on line 13


    Warning: Trying to access array offset on value of type int in /tmp/tmpfbdqkv39.php
    on line 13

    1 evens and 0 odds<br>

    Warning: Trying to access array offset on value of type int in /tmp/tmpfbdqkv39.php
    on line 13


    Warning: Trying to access array offset on value of type int in /tmp/tmpfbdqkv39.php
    on line 13

    1 evens and 0 odds<br>

    Warning: Trying to access array offset on value of type int in /tmp/tmpfbdqkv39.php
    on line 13


    Warning: Trying to access array offset on value of type int in /tmp/tmpfbdqkv39.php
    on line 13


    Warning: Trying to access array offset on value of type int in /tmp/tmpfbdqkv39.php
    on line 13


    Warning: Trying to access array offset on value'
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $even = 0;\n    $odd = 0;\n    $str = (string)$num;\n    $str_array =\
    \ str_split($str);\n    foreach ($str_array as $i) {\n        if ($i % 2 === 0)\
    \ {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \    }\n    $result = [$even, $odd];\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpe9obr70g.php:14\nStack trace:\n#0 /tmp/tmpe9obr70g.php(24): even_odd_count(-78)\n\
    #1 /tmp/tmpe9obr70g.php(29): candidate(-78)\n#2 /tmp/tmpe9obr70g.php(38): test()\n\
    #3 {main}\n  thrown in /tmp/tmpe9obr70g.php on line 14\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n\t$num = abs($num);\n\t$odd = 0;\n\t$even = 0;\n\twhile ($num > 0) {\n\t\t\
    $digit = $num % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even += 1;\n\t\t} else\
    \ {\n\t\t\t$odd += 1;\n\t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even,\
    \ $odd);\n}\necho even_odd_count(-12);\necho even_odd_count(123);\n\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Array to string conversion in /tmp/tmpvityq8i8.php on line 23\n\
    Array\nWarning: Array to string conversion in /tmp/tmpvityq8i8.php on line 24\n\
    Array\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvityq8i8.php:38\n\
    Stack trace:\n#0 /tmp/tmpvityq8i8.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpvityq8i8.php\
    \ on line 38\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  $digits = array();\n  $digits[] = $num;\n  return $digits;\n}\n\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzfgk34zk.php:19\n\
    Stack trace:\n#0 /tmp/tmpzfgk34zk.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpzfgk34zk.php\
    \ on line 19\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  $even = 0;\n  $odd = 0;\n  if ($num < 0) {\n    $num = abs($num);\n  }\n\
    \  while ($num != 0) {\n    $digit = $num % 10;\n    if ($digit % 2 == 0) {\n\
    \      $even++;\n    } else {\n      $odd++;\n    }\n    $num = floor($num / 10);\n\
    \  }\n  return array($even, $odd);\n}\n$array = even_odd_count(-12);\necho $array[0]\
    \ . ' ' . $array[1];\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1 1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqn1nul3e.php:39\n\
    Stack trace:\n#0 /tmp/tmpqn1nul3e.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpqn1nul3e.php\
    \ on line 39\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $even_count = 0;\n    $odd_count = 0;\n    $num = abs($num);\n    while\
    \ ($num > 0) {\n        $digit = $num % 10;\n        if ($digit % 2 === 0) {\n\
    \            $even_count += 1;\n        } else {\n            $odd_count += 1;\n\
    \        }\n        $num = (int)($num / 10);\n    }\n    return array($even_count,\
    \ $odd_count);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcqc31n46.php:36\n\
    Stack trace:\n#0 /tmp/tmpcqc31n46.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpcqc31n46.php\
    \ on line 36\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n\t$str = strval($num);\n\t$even = 0;\n\t$odd = 0;\n\tfor ($i = 0; $i < strlen($str);\
    \ $i++) {\n\t\tif ($str[$i] % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t\
    $odd++;\n\t\t}\n\t}\n\treturn array($even, $odd);\n}\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpnk5qdvr_.php:13\nStack trace:\n#0 /tmp/tmpnk5qdvr_.php(22): even_odd_count(-78)\n\
    #1 /tmp/tmpnk5qdvr_.php(27): candidate(-78)\n#2 /tmp/tmpnk5qdvr_.php(36): test()\n\
    #3 {main}\n  thrown in /tmp/tmpnk5qdvr_.php on line 13\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $evens = 0;\n    $odds = 0;\n    $i = 0;\n    while ($num > 0) {\n  \
    \      $remainder = $num % 10;\n        if ($remainder % 2 == 0) {\n         \
    \   $evens++;\n        } else {\n            $odds++;\n        }\n        $num\
    \ = $num / 10;\n    }\n    return array($evens, $odds);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpvsi9r33h.php
    on line 13


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpvsi9r33h.php on line 13


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpvsi9r33h.php on line 13


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpvsi9r33h.php on line 13


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpvsi9r33h.php
    on line 13


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpvsi9r33h.php on line 13


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpvsi9r33h.php on line 13


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpvsi9r33h.php on line 13


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpvsi9r33h.php on line 13


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpvsi9r33h.php on line 13


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpvsi9r33h.php on line 13


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpvsi9r33h.php on line 13


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpvsi9r33h.php on line 13


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpvsi9r33h.php on line 13


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpvsi9r33h.php on line 13


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /tmp/tmpvsi9r33h.php on line 13


    Deprecated: Implicit conversion from float 6.999999999999999E-17 to int loses
    precision in /tmp/tmpvsi9'
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $arr = array();\n    $odd = 0;\n    $even = 0;\n    $num_str = strval($num);\n\
    \    for ($i = 0; $i < strlen($num_str); $i++) {\n        if ($num_str[$i] % 2\
    \ === 0) {\n            $even++;\n        } else {\n            $odd++;\n    \
    \    }\n    }\n    array_push($arr, $even, $odd);\n    return $arr;\n}\n\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmp2mx_i2bv.php:14\nStack trace:\n#0 /tmp/tmp2mx_i2bv.php(25): even_odd_count(-78)\n\
    #1 /tmp/tmp2mx_i2bv.php(30): candidate(-78)\n#2 /tmp/tmp2mx_i2bv.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmp2mx_i2bv.php on line 14\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n\t$absNum = abs($num);\n\t$evenCount = 0;\n\t$oddCount = 0;\n\twhile($absNum\
    \ > 0) {\n\t\t$lastDigit = $absNum % 10;\n\t\tif($lastDigit % 2 == 0) {\n\t\t\t\
    $evenCount++;\n\t\t} else {\n\t\t\t$oddCount++;\n\t\t}\n\t\t$absNum = ($absNum\
    \ - $lastDigit) / 10;\n\t}\n\treturn array($evenCount, $oddCount);\n}\necho \"\
    <pre>\";\nprint_r(even_odd_count(-12));\nprint_r(even_odd_count(123));\necho \"\
    </pre>\";\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 1\n)\nArray\n(\n    [0] => 1\n\
    \    [1] => 2\n)\n</pre>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaty90exz.php:40\n\
    Stack trace:\n#0 /tmp/tmpaty90exz.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpaty90exz.php\
    \ on line 40\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n\t$even = 0;\n\t$odd = 0;\n\t$num = (string) $num;\n\tfor ($i = 0; $i < strlen($num);\
    \ $i++) {\n\t\tif (($num[$i] % 2) == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t\
    $odd++;\n\t\t}\n\t}\n\treturn array($even, $odd);\n}\n\necho \"The number of even/odd\
    \ digits are \" . print_r(even_odd_count(-12));\necho \"<br/>\";\necho \"The number\
    \ of even/odd digits are \" . print_r(even_odd_count(123));\necho \"<br/>\";\n\
    echo \"The number of even/odd digits are \" . print_r(even_odd_count(123546));\n\
    echo \"<br/>\";\necho \"The number of even/odd digits are \" . print_r(even_odd_count(85729));\n\
    echo \"<br/>\";\necho \"The number of even/odd digits are \" . print_r(even_odd_count(0));\n\
    echo \"<br/>\";\necho \"The number of even/odd digits are \" . print_r(even_odd_count(3));\n\
    echo \"<br/>\";\necho \"The number of even/odd digits are \" . print_r(even_odd_count(8));\n\
    echo \"<br/>\";\necho \"The number of even/odd digits are \" . print_r(even_odd_count(100));\n\
    echo \"<br/>\";\necho \"The number of even/odd digits are \" . print_r(even_odd_count(1000000));\n\
    echo \"<br/>\";\necho \"The number of even/odd digits are \" . print_r(even_odd_count(999999));\n\
    echo \"<br/>\";\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpmddfxr_g.php:13\nStack trace:\n#0 /tmp/tmpmddfxr_g.php(22): even_odd_count('-12')\n\
    #1 {main}\n  thrown in /tmp/tmpmddfxr_g.php on line 13\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  $even = 0;\n  $odd = 0;\n  while($num) {\n    $n = $num % 10;\n    if ($n\
    \ % 2 == 0) {\n      $even += 1;\n    } else {\n      $odd += 1;\n    }\n    $num\
    \ = (int)($num / 10);\n  }\n  return array($even, $odd);\n}\n\nassert(even_odd_count(-12)\
    \ == array(1, 1));\nassert(even_odd_count(123) == array(1, 2));\nassert(even_odd_count(0)\
    \ == array(1, 0));\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught AssertionError: assert(even_odd_count(0) == [1,\
    \ 0]) in /tmp/tmp3ilsvfb2.php:25\nStack trace:\n#0 /tmp/tmp3ilsvfb2.php(25): assert(false,\
    \ 'assert(even_odd...')\n#1 {main}\n  thrown in /tmp/tmp3ilsvfb2.php on line 25\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $n = (string)$num;\n    $arr = str_split($n);\n    $even_cnt = 0;\n \
    \   $odd_cnt = 0;\n    foreach ($arr as $key => $value) {\n        if ($value\
    \ % 2 == 0) {\n            $even_cnt++;\n        } else {\n            $odd_cnt++;\n\
    \        }\n    }\n    return array($even_cnt, $odd_cnt);\n}\n\n$num = -12;\n\
    $test = even_odd_count($num);\necho \"even : \".$test[0].\" odd : \".$test[1];\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmp5vrtp32k.php:14\nStack trace:\n#0 /tmp/tmp5vrtp32k.php(24): even_odd_count(-12)\n\
    #1 {main}\n  thrown in /tmp/tmp5vrtp32k.php on line 14\n"
  timestamp: 1660028427
- exit_code: 0
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n\t$evenCount = 0;\n\t$oddCount = 0;\n\tif ($num >= 0) {\n\t\t$numArray =\
    \ str_split($num);\n\t\tfor ($i = 0; $i < count($numArray); $i++) {\n\t\t\tif\
    \ ($numArray[$i] % 2 == 0) {\n\t\t\t\t$evenCount++;\n\t\t\t} else {\n\t\t\t\t\
    $oddCount++;\n\t\t\t}\n\t\t}\n\t} else {\n\t\t$num = (abs($num));\n\t\t$numArray\
    \ = str_split($num);\n\t\tfor ($i = 0; $i < count($numArray); $i++) {\n\t\t\t\
    if ($numArray[$i] % 2 == 0) {\n\t\t\t\t$evenCount++;\n\t\t\t} else {\n\t\t\t\t\
    $oddCount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn array($evenCount, $oddCount);\n}\n\
    print_r(even_odd_count(-12));\necho '<br>';\nprint_r(even_odd_count(123));\necho\
    \ '<br>';\nprint_r(even_odd_count(222));\necho '<br>';\nprint_r(even_odd_count(0));\n\
    echo '<br>';\nprint_r(even_odd_count(12345));\necho '<br>';\nprint_r(even_odd_count(-12345));\n\
    echo '<br>';\nprint_r(even_odd_count(1000000));\necho '<br>';\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 1\n)\n<br>Array\n(\n    [0] => 1\n \
    \   [1] => 2\n)\n<br>Array\n(\n    [0] => 3\n    [1] => 0\n)\n<br>Array\n(\n \
    \   [0] => 1\n    [1] => 0\n)\n<br>Array\n(\n    [0] => 2\n    [1] => 3\n)\n<br>Array\n\
    (\n    [0] => 2\n    [1] => 3\n)\n<br>Array\n(\n    [0] => 6\n    [1] => 1\n)\n\
    <br>"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n\t$even = 0;\n\t$odd = 0;\n\t$neg = False;\n\tif ($num < 0) {\n\t\t$neg =\
    \ True;\n\t\t$num = -$num;\n\t}\n\twhile ($num > 0) {\n\t\t$dig = $num % 10;\n\
    \t\tif ($dig % 2)\n\t\t\t$odd++;\n\t\telse\n\t\t\t$even++;\n\t\t$num = intval($num\
    \ / 10);\n\t}\n\tif ($neg)\n\t\t$odd++;\n\treturn array($even, $odd);\n}\n\nprint_r(even_odd_count(-12));\n\
    echo \"\\n\";\nprint_r(even_odd_count(123));\necho \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n)\n\nArray\n(\n    [0] => 1\n   \
    \ [1] => 2\n)\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpphrydar_.php:40\n\
    Stack trace:\n#0 /tmp/tmpphrydar_.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpphrydar_.php\
    \ on line 40\n"
  timestamp: 1660028427
- exit_code: 0
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $odd_counter = 0;\n    $even_counter = 0;\n    if ($num < 0) {\n    \
    \    $num = abs($num);\n    }\n    $digits = str_split($num);\n    foreach ($digits\
    \ as $digit) {\n        if ($digit % 2 === 0) {\n            $even_counter++;\n\
    \        } else {\n            $odd_counter++;\n        }\n    }\n    return array($even_counter,\
    \ $odd_counter);\n}\n\necho \"even_odd_count(123): \";\nvar_dump(even_odd_count(123));\n\
    echo \"even_odd_count(-12): \";\nvar_dump(even_odd_count(-12));\necho \"even_odd_count(8):\
    \ \";\nvar_dump(even_odd_count(8));\necho \"even_odd_count(11): \";\nvar_dump(even_odd_count(11));\n\
    echo \"even_odd_count(10): \";\nvar_dump(even_odd_count(10));\necho \"even_odd_count(6):\
    \ \";\nvar_dump(even_odd_count(6));\necho \"even_odd_count(5): \";\nvar_dump(even_odd_count(5));\n\
    echo \"even_odd_count(4): \";\nvar_dump(even_odd_count(4));\necho \"even_odd_count(3):\
    \ \";\nvar_dump(even_odd_count(3));\necho \"even_odd_count(2): \";\nvar_dump(even_odd_count(2));\n\
    echo \"even_odd_count(1): \";\nvar_dump(even_odd_count(1));\necho \"even_odd_count(0):\
    \ \";\nvar_dump(even_odd_count(0));\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "even_odd_count(123): array(2) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(2)\n\
    }\neven_odd_count(-12): array(2) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(1)\n}\n\
    even_odd_count(8): array(2) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(0)\n}\neven_odd_count(11):\
    \ array(2) {\n  [0]=>\n  int(0)\n  [1]=>\n  int(2)\n}\neven_odd_count(10): array(2)\
    \ {\n  [0]=>\n  int(1)\n  [1]=>\n  int(1)\n}\neven_odd_count(6): array(2) {\n\
    \  [0]=>\n  int(1)\n  [1]=>\n  int(0)\n}\neven_odd_count(5): array(2) {\n  [0]=>\n\
    \  int(0)\n  [1]=>\n  int(1)\n}\neven_odd_count(4): array(2) {\n  [0]=>\n  int(1)\n\
    \  [1]=>\n  int(0)\n}\neven_odd_count(3): array(2) {\n  [0]=>\n  int(0)\n  [1]=>\n\
    \  int(1)\n}\neven_odd_count(2): array(2) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(0)\n\
    }\neven_odd_count(1): array(2) {\n  [0]=>\n  int(0)\n  [1]=>\n  int(1)\n}\neven_odd_count(0):\
    \ array(2) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(0)\n}\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $even = 0;\n    $odd = 0;\n    while($num != 0) {\n        $r = $num\
    \ % 10;\n        if($r % 2 == 0) {\n            $even++;\n        } else {\n \
    \           $odd++;\n        }\n        $num = (int)($num / 10);\n    }\n    $even_odd_count\
    \ = array($even, $odd);\n    return $even_odd_count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvj2zre8g.php:36\n\
    Stack trace:\n#0 /tmp/tmpvj2zre8g.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpvj2zre8g.php\
    \ on line 36\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  // Your code here\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv3h07a_f.php:17\n\
    Stack trace:\n#0 /tmp/tmpv3h07a_f.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpv3h07a_f.php\
    \ on line 17\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $num = (string)$num;\n    $even = 0;\n    $odd = 0;\n    for ($i = 0;\
    \ $i < strlen($num); $i++) {\n        if ($num[$i] % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n    }\n    return array($even,\
    \ $odd);\n}\n\nvar_dump(even_odd_count(-12));\nvar_dump(even_odd_count(123));\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmp3kia3tp4.php:13\nStack trace:\n#0 /tmp/tmp3kia3tp4.php(22): even_odd_count('-12')\n\
    #1 {main}\n  thrown in /tmp/tmp3kia3tp4.php on line 13\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $even = 0;\n    $odd = 0;\n    for ($i = 0; $i < strlen($num); $i++)\
    \ {\n        if (is_numeric($num[$i])) {\n            if ($num[$i] % 2 === 0)\
    \ {\n                $even++;\n            } else {\n                $odd++;\n\
    \            }\n        }\n    }\n    $arr = array($even, $odd);\n    return $arr;\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmpf1du28sm.php\
    \ on line 12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf1du28sm.php:29\n\
    Stack trace:\n#0 /tmp/tmpf1du28sm.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpf1du28sm.php\
    \ on line 29\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    if ($num === 0) {\n        return array(0, 0);\n    }\n    $result =\
    \ array(0, 0);\n    while ($num != 0) {\n        $digit = $num % 10;\n       \
    \ if ($digit % 2 === 0) {\n            $result[0]++;\n        } else {\n     \
    \       $result[1]++;\n        }\n        $num = ($num - $digit) / 10;\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppsangyvr.php:37\n\
    Stack trace:\n#0 /tmp/tmppsangyvr.php(40): test()\n#1 {main}\n  thrown in /tmp/tmppsangyvr.php\
    \ on line 37\n"
  timestamp: 1660028427
- exit_code: 0
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  $evens = 0;\n  $odds = 0;\n  if ($num < 0) {\n    $num = -$num;\n  }\n\
    \  $digit_array = str_split($num);\n  foreach ($digit_array as $digit) {\n   \
    \ if ($digit % 2 === 0) {\n      $evens++;\n    } else {\n      $odds++;\n   \
    \ }\n  }\n  return array($evens, $odds);\n}\n\n$my_num = -12;\nvar_dump(even_odd_count($my_num));\n\
    $my_num = 123;\nvar_dump(even_odd_count($my_num));\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "array(2) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(1)\n}\narray(2) {\n  [0]=>\n\
    \  int(1)\n  [1]=>\n  int(2)\n}\n"
  timestamp: 1660028427
- exit_code: 0
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    // Convert the number to a string.\n    $str = (string) abs($num);\n\
    \    // Initialize an array to return even and odd digits.\n    $return_array\
    \ = array(0, 0);\n    // Get the length of the string\n    $str_length = strlen($str);\n\
    \    // Iterate through the string\n    for ($i = 0; $i < $str_length; $i++) {\n\
    \        // If the integer is even, increase the count by 1.\n        if ((int)\
    \ $str[$i] % 2 == 0) {\n            $return_array[0]++;\n        }\n        //\
    \ If the integer is odd, increase the count by 1.\n        else {\n          \
    \  $return_array[1]++;\n        }\n    }\n    // Return the array with even and\
    \ odd count.\n    return $return_array;\n}\necho \"Input: -12\\n\";\necho \"Output:\
    \ \";\nprint_r(even_odd_count(-12));\necho \"\\n\\n\";\necho \"Input: 123\\n\"\
    ;\necho \"Output: \";\nprint_r(even_odd_count(123));\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Input: -12\nOutput: Array\n(\n    [0] => 1\n    [1] => 1\n)\n\n\nInput:\
    \ 123\nOutput: Array\n(\n    [0] => 1\n    [1] => 2\n)\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $arr = [];\n    while ($num) {\n        if (!($num % 10 % 2))\n     \
    \       $arr[0]++;\n        else\n            $arr[1]++;\n        $num /= 10;\n\
    \    }\n    return $arr;\n}\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Warning: Undefined array key 1 in /tmp/tmpzknt5xns.php on line 14


    Deprecated: Implicit conversion from float 0.7 to int loses precision in /tmp/tmpzknt5xns.php
    on line 11


    Warning: Undefined array key 0 in /tmp/tmpzknt5xns.php on line 12


    Deprecated: Implicit conversion from float 0.06999999999999999 to int loses precision
    in /tmp/tmpzknt5xns.php on line 11


    Deprecated: Implicit conversion from float 0.006999999999999999 to int loses precision
    in /tmp/tmpzknt5xns.php on line 11


    Deprecated: Implicit conversion from float 0.0006999999999999999 to int loses
    precision in /tmp/tmpzknt5xns.php on line 11


    Deprecated: Implicit conversion from float 7.0E-5 to int loses precision in /tmp/tmpzknt5xns.php
    on line 11


    Deprecated: Implicit conversion from float 6.999999999999999E-6 to int loses precision
    in /tmp/tmpzknt5xns.php on line 11


    Deprecated: Implicit conversion from float 6.999999999999999E-7 to int loses precision
    in /tmp/tmpzknt5xns.php on line 11


    Deprecated: Implicit conversion from float 6.999999999999999E-8 to int loses precision
    in /tmp/tmpzknt5xns.php on line 11


    Deprecated: Implicit conversion from float 6.999999999999999E-9 to int loses precision
    in /tmp/tmpzknt5xns.php on line 11


    Deprecated: Implicit conversion from float 6.999999999999999E-10 to int loses
    precision in /tmp/tmpzknt5xns.php on line 11


    Deprecated: Implicit conversion from float 6.999999999999999E-11 to int loses
    precision in /tmp/tmpzknt5xns.php on line 11


    Deprecated: Implicit conversion from float 6.999999999999999E-12 to int loses
    precision in /tmp/tmpzknt5xns.php on line 11


    Deprecated: Implicit conversion from float 6.999999999999999E-13 to int loses
    precision in /tmp/tmpzknt5xns.php on line 11


    Deprecated: Implicit conversion from float 6.999999999999999E-14 to int loses
    precision in /tmp/tmpzknt5xns.php on line 11


    Deprecated: Implicit conversion from float 6.999999999999999E-15 to int loses
    precision in /tmp/tmpzknt5xns.php on line 11


    Deprecated: Implicit conversion from float 6.999999999999999E-16 to int loses
    precision in /t'
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $str = strval($num);\n    $even = 0;\n    $odd = 0;\n    $len = strlen($str);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if (intval($str[$i]) % 2 == 0) {\n\
    \            $even++;\n        } else {\n            $odd++;\n        }\n    }\n\
    \    return array($even, $odd);\n}\n\necho \"<pre>\";\nprint_r(even_odd_count(-12));\n\
    echo \"</pre>\";\n\necho \"<pre>\";\nprint_r(even_odd_count(123));\necho \"</pre>\"\
    ;\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 2\n    [1] => 1\n)\n</pre><pre>Array\n(\n   \
    \ [0] => 1\n    [1] => 2\n)\n</pre>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpjjtumi0l.php:36\nStack trace:\n#0 /tmp/tmpjjtumi0l.php(45): test()\n\
    #1 {main}\n  thrown in /tmp/tmpjjtumi0l.php on line 36\n"
  timestamp: 1660028427
- exit_code: 0
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n\t$positive_num = abs($num);\n\t$str_num = strval($positive_num);\n\t$count\
    \ = 0;\n\t$count2 = 0;\n\tfor ($i = 0; $i < strlen($str_num); $i++) {\n\t\tif\
    \ ($str_num[$i] % 2 == 0) {\n\t\t\t$count++;\n\t\t} else {\n\t\t\t$count2++;\n\
    \t\t}\n\t}\n\treturn array($count, $count2);\n}\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028427
- exit_code: 0
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n\t$arr = array(0, 0);\n\tif ($num < 0) {\n\t\t$num = -$num;\n\t}\n\t$str\
    \ = (string)$num;\n\tfor ($i = 0; $i < strlen($str); $i++) {\n\t\tif ($str[$i]\
    \ % 2 == 0) {\n\t\t\t$arr[0]++;\n\t\t} else {\n\t\t\t$arr[1]++;\n\t\t}\n\t}\n\t\
    return $arr;\n}\n\necho \"<pre>\";\nprint_r(even_odd_count(-12));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(even_odd_count(123));\necho \"</pre>\";\n\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 1\n)\n</pre><pre>Array\n(\n   \
    \ [0] => 1\n    [1] => 2\n)\n</pre>"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n\t// Your code here\n}\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2lcgb3rl.php:16\n\
    Stack trace:\n#0 /tmp/tmp2lcgb3rl.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp2lcgb3rl.php\
    \ on line 16\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  if($num < 0) {\n    $num = -$num;\n  }\n  $digits = array();\n  while($num\
    \ > 0) {\n    $digits[] = $num % 10;\n    $num = floor($num / 10);\n  }\n  $even\
    \ = 0;\n  $odd = 0;\n  foreach($digits as $digit) {\n    if($digit % 2 == 0) {\n\
    \      $even++;\n    } else {\n      $odd++;\n    }\n  }\n  return array($even,\
    \ $odd);\n}\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbtxz1pbd.php:40\n\
    Stack trace:\n#0 /tmp/tmpbtxz1pbd.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpbtxz1pbd.php\
    \ on line 40\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    // TODO: write code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt2rt03mc.php:17\n\
    Stack trace:\n#0 /tmp/tmpt2rt03mc.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpt2rt03mc.php\
    \ on line 17\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n\t$stringNum = (string) $num;\n\t$numArray = str_split($stringNum);\n\t$even\
    \ = 0;\n\t$odd = 0;\n\tforeach ($numArray as $value) {\n\t\tif ($value % 2 ==\
    \ 0) {\n\t\t\t$even += 1;\n\t\t} else {\n\t\t\t$odd += 1;\n\t\t}\n\t}\n\treturn\
    \ [$even, $odd];\n}\n\n$result = even_odd_count(-12);\nprint_r($result);\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmp3peugrdr.php:14\nStack trace:\n#0 /tmp/tmp3peugrdr.php(23): even_odd_count(-12)\n\
    #1 {main}\n  thrown in /tmp/tmp3peugrdr.php on line 14\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $ret = array(0, 0);\n    while ($num != 0) {\n        $ret[$num % 2]++;\n\
    \        $num /= 10;\n    }\n    return $ret;\n}\n$nums = array(-12, 123, 1, -1,\
    \ 20, 11, 22, 9, -10, 3, -4, -7, -8, -9, -9, -9, -9, -9, -9, -9, -10, -20, -30,\
    \ -45, -5, -6, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5,\
    \ -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5,\
    \ -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5,\
    \ -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5,\
    \ -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5,\
    \ -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5,\
    \ -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmp0sio0qgi.php on line 17

    '
  timestamp: 1660028427
- exit_code: 0
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  $even = 0;\n  $odd = 0;\n  $nums = array();\n  $result = array();\n  if\
    \ ($num < 0) {\n    $num = abs($num);\n  }\n  $nums = str_split($num);\n  foreach\
    \ ($nums as $num) {\n    if ($num % 2 == 0) {\n      $even++;\n    } else {\n\
    \      $odd++;\n    }\n  }\n  array_push($result, $even, $odd);\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n\t$num = str_split($num);\n\t$even_odd = array(0, 0);\n\tfor ($i = 0; $i\
    \ < count($num); $i++) {\n\t\tif ($num[$i] % 2 == 0) {\n\t\t\t$even_odd[0] +=\
    \ 1;\n\t\t} else {\n\t\t\t$even_odd[1] += 1;\n\t\t}\n\t}\n\treturn $even_odd;\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmplgl_iki7.php:12\nStack trace:\n#0 /tmp/tmplgl_iki7.php(22): even_odd_count(Array)\n\
    #1 /tmp/tmplgl_iki7.php(27): candidate(-78)\n#2 /tmp/tmplgl_iki7.php(36): test()\n\
    #3 {main}\n  thrown in /tmp/tmplgl_iki7.php on line 12\n"
  timestamp: 1660028427
- exit_code: 0
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $num = abs($num);\n    $evens = [];\n    $odds = [];\n    $num_str =\
    \ strval($num);\n    $num_str_arr = str_split($num_str);\n    foreach ($num_str_arr\
    \ as $num) {\n        if ($num % 2 == 0) {\n            array_push($evens, $num);\n\
    \        } else {\n            array_push($odds, $num);\n        }\n    }\n  \
    \  return array(count($evens), count($odds));\n}\n\necho \"<pre>\";\nprint_r(even_odd_count(-12));\n\
    echo \"</pre>\";\n\necho \"<pre>\";\nprint_r(even_odd_count(123));\necho \"</pre>\"\
    ;\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 1\n)\n</pre><pre>Array\n(\n   \
    \ [0] => 1\n    [1] => 2\n)\n</pre>"
  timestamp: 1660028427
- exit_code: 0
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $num_abs = abs($num);\n    $num_str = (string)$num_abs;\n    $num_array\
    \ = str_split($num_str);\n    $even = 0;\n    $odd = 0;\n    foreach ($num_array\
    \ as $i) {\n        if ($i % 2 === 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n    }\n    return array($even, $odd);\n}\n\
    \nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  \n}\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2pngakw7.php:16\n\
    Stack trace:\n#0 /tmp/tmp2pngakw7.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp2pngakw7.php\
    \ on line 16\n"
  timestamp: 1660028427
- exit_code: 0
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n\t$num = str_split(abs($num));\n\t$num_length = count($num);\n\t$even = 0;\n\
    \t$odd = 0;\n\tfor ($i = 0; $i < $num_length; $i++) {\n\t\tif ($num[$i] % 2 ==\
    \ 0) {\n\t\t\t$even += 1;\n\t\t} else {\n\t\t\t$odd += 1;\n\t\t}\n\t}\n\treturn\
    \ array($even, $odd);\n}\n\n$num = -12;\nprint_r(even_odd_count($num));\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 1\n)\n"
  timestamp: 1660028427
- exit_code: 0
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  $num = abs($num);\n  $array = str_split($num);\n  $even = 0;\n  $odd =\
    \ 0;\n  foreach ($array as $digit) {\n    if ($digit % 2 == 0) {\n      $even\
    \ += 1;\n    } else {\n      $odd += 1;\n    }\n  }\n  return array($even, $odd);\n\
    }\necho 'Even/Odd Count: ';\nprint_r(even_odd_count(-12));\nprint_r(even_odd_count(123));\n\
    print_r(even_odd_count(423434));\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Even/Odd Count: Array\n(\n    [0] => 1\n    [1] => 1\n)\nArray\n(\n   \
    \ [0] => 1\n    [1] => 2\n)\nArray\n(\n    [0] => 4\n    [1] => 2\n)\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  $even = 0;\n  $odd = 0;\n  $abs = abs($num);\n  while ($abs > 0) {\n  \
    \  $remainder = $abs % 10;\n    if ($remainder % 2 == 0) {\n      $even++;\n \
    \   } else {\n      $odd++;\n    }\n    $abs = floor($abs / 10);\n  }\n  return\
    \ array($even, $odd);\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpra3yydsr.php:36\n\
    Stack trace:\n#0 /tmp/tmpra3yydsr.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpra3yydsr.php\
    \ on line 36\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n   $ans = array(0, 0);\n   if($num < 0) $num = -$num;\n   while($num != 0)\
    \ {\n      $rem = $num % 10;\n      if($rem % 2 == 0) {\n         $ans[0]++;\n\
    \      } else {\n         $ans[1]++;\n      }\n      $num = intval($num / 10);\n\
    \   }\n   return $ans;\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp62zjxoj7.php:35\n\
    Stack trace:\n#0 /tmp/tmp62zjxoj7.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp62zjxoj7.php\
    \ on line 35\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    // your code here\n    $number = [];\n    $num = abs($num);\n    $i =\
    \ 0;\n    $j = 0;\n    while($num>0){\n        $remainder = $num%10;\n       \
    \ if($remainder%2 == 0){\n            $number[$i] = 1;\n            $i++;\n  \
    \      }\n        else{\n            $number[$j] = 0;\n            $j++;\n   \
    \     }\n        $num = intval($num/10);\n    }\n    return $number;\n}\necho(even_odd_count(-12));\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Array to string conversion in /tmp/tmpgh4r5onk.php on line 28\n\
    Array\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgh4r5onk.php:34\n\
    Stack trace:\n#0 /tmp/tmpgh4r5onk.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpgh4r5onk.php\
    \ on line 34\n"
  timestamp: 1660028427
- exit_code: 0
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $result = array(0, 0);\n    $num = abs($num);\n    $length = strlen($num);\n\
    \    for ($i = 0; $i < $length; $i++) {\n        $digit = $num % 10;\n       \
    \ if ($digit % 2 === 0) {\n            $result[0]++;\n        } else {\n     \
    \       $result[1]++;\n        }\n        $num = floor($num / 10);\n    }\n  \
    \  return $result;\n}\n\necho \"<pre>\";\nvar_dump(even_odd_count(-12));\nvar_dump(even_odd_count(123));\n\
    echo \"</pre>\";\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "<pre>array(2) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(1)\n}\narray(2) {\n\
    \  [0]=>\n  int(1)\n  [1]=>\n  int(2)\n}\n</pre>"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0)\
    \ {\n        $digit = $num % 10;\n        if ($digit % 2 === 0) {\n          \
    \  $even++;\n        } else {\n            $odd++;\n        }\n        $num =\
    \ floor($num / 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt69tq57s.php:36\n\
    Stack trace:\n#0 /tmp/tmpt69tq57s.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpt69tq57s.php\
    \ on line 36\n"
  timestamp: 1660028427
- exit_code: 0
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n\t$str = (string) abs($num);\n\t$even = 0;\n\t$odd = 0;\n\tfor ($i = 0; $i\
    \ < strlen($str); $i++) {\n\t\tif ($str[$i] % 2 == 0)\n\t\t\t$even++;\n\t\telse\n\
    \t\t\t$odd++;\n\t}\n\treturn array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028427
- exit_code: 0
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n    $even_count = 0;\n    $odd_count = 0;\n    if($num < 0) {\n        $num\
    \ = abs($num);\n    }\n    $digits = str_split($num);\n    foreach($digits as\
    \ $digit) {\n        if($digit % 2 == 0) {\n            $even_count += 1;\n  \
    \      }\n        else {\n            $odd_count += 1;\n        }\n    }\n   \
    \ return array($even_count, $odd_count);\n}\nprint_r(even_odd_count(-12));\nprint_r(even_odd_count(123));\n\
    print_r(even_odd_count(0));\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 1\n)\nArray\n(\n    [0] => 1\n    [1]\
    \ => 2\n)\nArray\n(\n    [0] => 1\n    [1] => 0\n)\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n\t$even = 0;\n\t$odd = 0;\n\t$arr = str_split($num);\n\tforeach ($arr as\
    \ $value) {\n\t\tif ($value % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t\
    $odd++;\n\t\t}\n\t}\n\t$result = array($even, $odd);\n\treturn $result;\n}\n\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpc4u3p_l8.php:13\nStack trace:\n#0 /tmp/tmpc4u3p_l8.php(24): even_odd_count(-78)\n\
    #1 /tmp/tmpc4u3p_l8.php(29): candidate(-78)\n#2 /tmp/tmpc4u3p_l8.php(38): test()\n\
    #3 {main}\n  thrown in /tmp/tmpc4u3p_l8.php on line 13\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  $num = abs($num);\n  $even = 0;\n  $odd = 0;\n  while ($num > 0) {\n  \
    \  $digit = $num % 10;\n    if ($digit % 2 == 0) {\n      $even++;\n    } else\
    \ {\n      $odd++;\n    }\n    $num = (int)($num / 10);\n  }\n  return array($even,\
    \ $odd);\n}\n\necho even_odd_count(-12)[0];\necho even_odd_count(-12)[1];\necho\
    \ even_odd_count(123)[0];\necho even_odd_count(123)[1];\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1112\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkxb3y5ta.php:41\n\
    Stack trace:\n#0 /tmp/tmpkxb3y5ta.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpkxb3y5ta.php\
    \ on line 41\n"
  timestamp: 1660028427
- exit_code: 255
  program: "<?php\n// Given an integer. return an array that has the number of even\
    \ and odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
    \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
    \ {\n  $output = [];\n  $even = 0;\n  $odd = 0;\n  $int = abs($num);\n  while\
    \ ($int > 0) {\n    $remainder = $int % 10;\n    if ($remainder % 2 == 0) {\n\
    \      $even++;\n    } else {\n      $odd++;\n    }\n    $int = floor($int / 10);\n\
    \  }\n  array_push($output, $even, $odd);\n  return $output;\n}\n\n$result = even_odd_count(-12);\n\
    echo \" even number: $result[0] odd number: $result[1]\";\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: " even number: 1 odd number: 1\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpngvyzp7r.php:41\nStack trace:\n#0 /tmp/tmpngvyzp7r.php(44): test()\n\
    #1 {main}\n  thrown in /tmp/tmpngvyzp7r.php on line 41\n"
  timestamp: 1660028427

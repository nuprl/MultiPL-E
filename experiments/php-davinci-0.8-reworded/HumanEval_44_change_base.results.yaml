language: php
name: HumanEval_44_change_base
results:
- exit_code: 0
  program: "<?php\n// Change numerical base of input number x to base.\n// return\
    \ string representation after the conversion.\n// base numbers are less than 10.\n\
    // >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n//\
    \ >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $x\
    \ = intval($x);\n    $base = intval($base);\n    $result = \"\";\n    while ($x\
    \ > 0) {\n        $result = (string)($x % $base) . $result;\n        $x = intval($x\
    \ / $base);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8,\
    \ 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234,\
    \ 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8,\
    \ 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824024
- exit_code: 0
  program: "<?php\n// Change numerical base of input number x to base.\n// return\
    \ string representation after the conversion.\n// base numbers are less than 10.\n\
    // >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n//\
    \ >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n\t$res\
    \ = '';\n\t$res_arr = [];\n\twhile ($x > 0) {\n\t\t$res_arr[] = $x % $base;\n\t\
    \t$x = intval($x / $base);\n\t}\n\tfor ($i = count($res_arr) - 1; $i >= 0; $i--)\
    \ {\n\t\t$res .= strval($res_arr[$i]);\n\t}\n\treturn $res;\n}\n\nfunction candidate(...$args)\
    \ {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8,\
    \ 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234,\
    \ 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8,\
    \ 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824024
- exit_code: 0
  program: "<?php\n// Change numerical base of input number x to base.\n// return\
    \ string representation after the conversion.\n// base numbers are less than 10.\n\
    // >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n//\
    \ >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n  $rv\
    \ = '';\n  while ($x > 0) {\n    $rv = strval($x % $base) . $rv;\n    $x = intval($x\
    \ / $base);\n  }\n  return $rv;\n}\n\nfunction candidate(...$args) {\n    return\
    \ change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3)\
    \ !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234,\
    \ 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8,\
    \ 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824024
- exit_code: 0
  program: "<?php\n// Change numerical base of input number x to base.\n// return\
    \ string representation after the conversion.\n// base numbers are less than 10.\n\
    // >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n//\
    \ >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n  $result\
    \ = \"\";\n  do {\n    $result = ($x % $base) . $result;\n    $x = (int)($x /\
    \ $base);\n  } while ($x != 0);\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8,\
    \ 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234,\
    \ 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8,\
    \ 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824024
- exit_code: 255
  program: "<?php\n// Change numerical base of input number x to base.\n// return\
    \ string representation after the conversion.\n// base numbers are less than 10.\n\
    // >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n//\
    \ >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $res\
    \ = \"\";\n    while ($x > 0) {\n        $n = $x % $base;\n        $res = strval($n)\
    \ . $res;\n        $x /= $base;\n    }\n    return $res;\n}\n\nfunction candidate(...$args)\
    \ {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8,\
    \ 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234,\
    \ 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8,\
    \ 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 2.6666666666666665 to int loses precision
    in /tmp/tmp65wslbmw.php on line 14


    Deprecated: Implicit conversion from float 0.8888888888888888 to int loses precision
    in /tmp/tmp65wslbmw.php on line 14


    Deprecated: Implicit conversion from float 0.2962962962962963 to int loses precision
    in /tmp/tmp65wslbmw.php on line 14


    Deprecated: Implicit conversion from float 0.09876543209876543 to int loses precision
    in /tmp/tmp65wslbmw.php on line 14


    Deprecated: Implicit conversion from float 0.03292181069958847 to int loses precision
    in /tmp/tmp65wslbmw.php on line 14


    Deprecated: Implicit conversion from float 0.010973936899862825 to int loses precision
    in /tmp/tmp65wslbmw.php on line 14


    Deprecated: Implicit conversion from float 0.003657978966620942 to int loses precision
    in /tmp/tmp65wslbmw.php on line 14


    Deprecated: Implicit conversion from float 0.0012193263222069807 to int loses
    precision in /tmp/tmp65wslbmw.php on line 14


    Deprecated: Implicit conversion from float 0.0004064421074023269 to int loses
    precision in /tmp/tmp65wslbmw.php on line 14


    Deprecated: Implicit conversion from float 0.0001354807024674423 to int loses
    precision in /tmp/tmp65wslbmw.php on line 14


    Deprecated: Implicit conversion from float 4.5160234155814104E-5 to int loses
    precision in /tmp/tmp65wslbmw.php on line 14


    Deprecated: Implicit conversion from float 1.5053411385271368E-5 to int loses
    precision in /tmp/tmp65wslbmw.php on line 14


    Deprecated: Implicit conversion from float 5.017803795090456E-6 to int loses precision
    in /tmp/tmp65wslbmw.php on line 14


    Deprecated: Implicit conversion from float 1.6726012650301522E-6 to int loses
    precision in /tmp/tmp65wslbmw.php on line 14


    Deprecated: Implicit conversion from float 5.575337550100507E-7 to int loses precision
    in /tmp/tmp65wslbmw.php on line 14


    Deprecated: Implicit conversion from float 1.8584458500335024E-7 to int loses
    precision in /tmp/tmp65wslbmw.php on line 14


    Deprecated: Implicit conversion from float 6.194819500111675E-8 to int loses pre'
  timestamp: 1659824024
- exit_code: 0
  program: "<?php\n// Change numerical base of input number x to base.\n// return\
    \ string representation after the conversion.\n// base numbers are less than 10.\n\
    // >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n//\
    \ >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $arr\
    \ = [];\n    $temp = $x;\n    while ($temp > 0) {\n        $arr[] = $temp % $base;\n\
    \        $temp = intval($temp / $base);\n    }\n    $str = \"\";\n    for ($i\
    \ = count($arr) - 1; $i >= 0; $i--) {\n        $str .= strval($arr[$i]);\n   \
    \ }\n    return $str;\n}\nfunction candidate(...$args) {\n    return change_base(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"\
    10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !==\
    \ \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2)\
    \ !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824024
- exit_code: 0
  program: "<?php\n// Change numerical base of input number x to base.\n// return\
    \ string representation after the conversion.\n// base numbers are less than 10.\n\
    // >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n//\
    \ >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n  if ($x\
    \ == 0) {\n    return 0;\n  }\n  $conv = array();\n  while ($x > 0) {\n    $conv[]\
    \ = $x % $base;\n    $x = (int)($x / $base);\n  }\n  return implode('', array_reverse($conv));\n\
    }\n\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824024
- exit_code: 0
  program: "<?php\n// Change numerical base of input number x to base.\n// return\
    \ string representation after the conversion.\n// base numbers are less than 10.\n\
    // >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n//\
    \ >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $ret\
    \ = \"\";\n    while ($x > 0) {\n        $ret = strval($x % $base) . $ret;\n \
    \       $x = (int)($x / $base);\n    }\n    return $ret;\n}\n\nfunction candidate(...$args)\
    \ {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8,\
    \ 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234,\
    \ 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8,\
    \ 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824024
- exit_code: 0
  program: "<?php\n// Change numerical base of input number x to base.\n// return\
    \ string representation after the conversion.\n// base numbers are less than 10.\n\
    // >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n//\
    \ >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n  $quotient\
    \ = $x;\n  $string = \"\";\n  while ($quotient != 0) {\n    $string = strval($quotient\
    \ % $base) . $string;\n    $quotient = intval($quotient / $base);\n  }\n  return\
    \ $string;\n}\n\nfunction candidate(...$args) {\n    return change_base(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"\
    10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !==\
    \ \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2)\
    \ !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824024
- exit_code: 0
  program: "<?php\n// Change numerical base of input number x to base.\n// return\
    \ string representation after the conversion.\n// base numbers are less than 10.\n\
    // >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n//\
    \ >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    if\
    \ ($x < $base) {\n        return (string)$x;\n    } else {\n        return change_base(floor($x\
    \ / $base), $base) . (string)($x % $base);\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8,\
    \ 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234,\
    \ 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8,\
    \ 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824024
- exit_code: 0
  program: "<?php\n// Change numerical base of input number x to base.\n// return\
    \ string representation after the conversion.\n// base numbers are less than 10.\n\
    // >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n//\
    \ >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    if($x\
    \ < 0) return change_base(-1 * $x, $base);\n    $str = \"\";\n    while($x >=\
    \ $base) {\n        $str = $x % $base . $str;\n        $x = (int)($x / $base);\n\
    \    }\n    $str = $x . $str;\n    return $str;\n}\n\necho change_base(8, 3) .\
    \ \"\\n\";\necho change_base(8, 2) . \"\\n\";\necho change_base(7, 2) . \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '22

    1000

    111

    '
  timestamp: 1659824024
- exit_code: 0
  program: "<?php\n// Change numerical base of input number x to base.\n// return\
    \ string representation after the conversion.\n// base numbers are less than 10.\n\
    // >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n//\
    \ >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $result\
    \ = '';\n    while ($x >= $base) {\n        $remainder = $x % $base;\n       \
    \ $x = ($x - $remainder) / $base;\n        $result = strval($remainder) . $result;\n\
    \    }\n    $result = strval($x) . $result;\n    return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824024
- exit_code: 255
  program: "<?php\n// Change numerical base of input number x to base.\n// return\
    \ string representation after the conversion.\n// base numbers are less than 10.\n\
    // >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n//\
    \ >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n\n}\n\n\
    function candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbu_mqn_y.php:20\n\
    Stack trace:\n#0 /tmp/tmpbu_mqn_y.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpbu_mqn_y.php\
    \ on line 20\n"
  timestamp: 1659824024
- exit_code: 0
  program: "<?php\n// Change numerical base of input number x to base.\n// return\
    \ string representation after the conversion.\n// base numbers are less than 10.\n\
    // >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n//\
    \ >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n  $numbers\
    \ = array('0', '1', '2', '3', '4', '5', '6', '7', '8', '9');\n  $result = '';\n\
    \  while ($x > 0) {\n    $result = $numbers[$x % $base] . $result;\n    $x = floor($x\
    \ / $base);\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n   \
    \ return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8,\
    \ 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234,\
    \ 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8,\
    \ 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824024
- exit_code: 0
  program: "<?php\n// Change numerical base of input number x to base.\n// return\
    \ string representation after the conversion.\n// base numbers are less than 10.\n\
    // >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n//\
    \ >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $result\
    \ = \"\";\n    while ($x > 0) {\n        $remainder = $x % $base;\n        $x\
    \ = (int)($x / $base);\n        $result = strval($remainder) . $result;\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return change_base(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"\
    10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !==\
    \ \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2)\
    \ !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824024
- exit_code: 0
  program: "<?php\n// Change numerical base of input number x to base.\n// return\
    \ string representation after the conversion.\n// base numbers are less than 10.\n\
    // >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n//\
    \ >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $result\
    \ = \"\";\n    while($x > 0) {\n        $rem = $x % $base;\n        $x = (int)($x\
    \ / $base);\n        $result = $rem . $result;\n    }\n    return $result;\n}\n\
    \necho change_base(8, 3) . \"\\n\";\necho change_base(8, 2) . \"\\n\";\necho change_base(7,\
    \ 2) . \"\\n\";\nfunction candidate(...$args) {\n    return change_base(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"\
    10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !==\
    \ \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2)\
    \ !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '22

    1000

    111

    '
  timestamp: 1659824024
- exit_code: 0
  program: "<?php\n// Change numerical base of input number x to base.\n// return\
    \ string representation after the conversion.\n// base numbers are less than 10.\n\
    // >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n//\
    \ >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n  $r =\
    \ '';\n  while($x != 0) {\n    $r = $x % $base . $r;\n    $x = floor($x / $base);\n\
    \  }\n  return $r;\n}\n\nfor ($i = 0; $i < 100; $i++) {\n  $x = $i + 1;\n  echo\
    \ \"10\u9032\u6570: $x, 2\u9032\u6570: \", change_base($x, 2), \", 3\u9032\u6570\
    : \", change_base($x, 3), \"\\n\";\n}\nfunction candidate(...$args) {\n    return\
    \ change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8, 3)\
    \ !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234,\
    \ 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8,\
    \ 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "10\u9032\u6570: 1, 2\u9032\u6570: 1, 3\u9032\u6570: 1\n10\u9032\u6570:\
    \ 2, 2\u9032\u6570: 10, 3\u9032\u6570: 2\n10\u9032\u6570: 3, 2\u9032\u6570: 11,\
    \ 3\u9032\u6570: 10\n10\u9032\u6570: 4, 2\u9032\u6570: 100, 3\u9032\u6570: 11\n\
    10\u9032\u6570: 5, 2\u9032\u6570: 101, 3\u9032\u6570: 12\n10\u9032\u6570: 6, 2\u9032\
    \u6570: 110, 3\u9032\u6570: 20\n10\u9032\u6570: 7, 2\u9032\u6570: 111, 3\u9032\
    \u6570: 21\n10\u9032\u6570: 8, 2\u9032\u6570: 1000, 3\u9032\u6570: 22\n10\u9032\
    \u6570: 9, 2\u9032\u6570: 1001, 3\u9032\u6570: 100\n10\u9032\u6570: 10, 2\u9032\
    \u6570: 1010, 3\u9032\u6570: 101\n10\u9032\u6570: 11, 2\u9032\u6570: 1011, 3\u9032\
    \u6570: 102\n10\u9032\u6570: 12, 2\u9032\u6570: 1100, 3\u9032\u6570: 110\n10\u9032\
    \u6570: 13, 2\u9032\u6570: 1101, 3\u9032\u6570: 111\n10\u9032\u6570: 14, 2\u9032\
    \u6570: 1110, 3\u9032\u6570: 112\n10\u9032\u6570: 15, 2\u9032\u6570: 1111, 3\u9032\
    \u6570: 120\n10\u9032\u6570: 16, 2\u9032\u6570: 10000, 3\u9032\u6570: 121\n10\u9032\
    \u6570: 17, 2\u9032\u6570: 10001, 3\u9032\u6570: 122\n10\u9032\u6570: 18, 2\u9032\
    \u6570: 10010, 3\u9032\u6570: 200\n10\u9032\u6570: 19, 2\u9032\u6570: 10011, 3\u9032\
    \u6570: 201\n10\u9032\u6570: 20, 2\u9032\u6570: 10100, 3\u9032\u6570: 202\n10\u9032\
    \u6570: 21, 2\u9032\u6570: 10101, 3\u9032\u6570: 210\n10\u9032\u6570: 22, 2\u9032\
    \u6570: 10110, 3\u9032\u6570: 211\n10\u9032\u6570: 23, 2\u9032\u6570: 10111, 3\u9032\
    \u6570: 212\n10\u9032\u6570: 24, 2\u9032\u6570: 11000, 3\u9032\u6570: 220\n10\u9032\
    \u6570: 25, 2\u9032\u6570: 11001, 3\u9032\u6570: 221\n10\u9032\u6570: 26, 2\u9032\
    \u6570: 11010, 3\u9032\u6570: 222\n10\u9032\u6570: 27, 2\u9032\u6570: 11011, 3\u9032\
    \u6570: 1000\n10\u9032\u6570: 28, 2\u9032\u6570: 11100, 3\u9032\u6570: 1001\n\
    10\u9032\u6570: 29, 2\u9032\u6570: 11101, 3\u9032\u6570: 1002\n10\u9032\u6570\
    : 30, 2\u9032\u6570: 11110, 3\u9032\u6570: 1010\n10\u9032\u6570: 31, 2\u9032\u6570\
    : 11111, 3\u9032\u6570: 1011\n10\u9032\u6570: 32, 2\u9032\u6570: 100000, 3\u9032\
    \u6570: 1012\n10\u9032\u6570: 33, 2\u9032\u6570: 100001, 3\u9032\u6570: 1020\n\
    10\u9032\u6570: 34, 2\u9032\u6570: 100010, 3\u9032\u6570: 1021\n10\u9032\u6570\
    : 35, 2\u9032\u6570: 100011, 3\u9032\u6570: 1022\n10\u9032\u6570: 36, 2\u9032\u6570\
    : 100100, 3\u9032\u6570: 1100\n10\u9032\u6570: 37, 2\u9032\u6570: 100101, 3\u9032\
    \u6570: 1101\n10\u9032\u6570: 38, 2\u9032\u6570: 100110, 3\u9032\u6570: 1102\n\
    10\u9032\u6570: 39, 2\u9032\u6570: 100111, 3\u9032\u6570: 1110\n10\u9032\u6570\
    : 40, 2\u9032\u6570: 101000, 3\u9032\u6570: 1111\n10\u9032\u6570: 41, 2\u9032\u6570\
    : 101001, 3\u9032\u6570: 1112\n10\u9032\u6570: 42, 2\u9032\u6570: 101010, 3\u9032\
    \u6570: 1120\n10\u9032\u6570: 43, 2\u9032\u6570: 101011, 3\u9032\u6570: 1121\n\
    10\u9032\u6570: 44, 2\u9032\u6570: 101100, 3\u9032\u6570: 1122\n10\u9032\u6570\
    : 45, 2\u9032\u6570: 101101, 3\u9032\u6570: 1200\n10\u9032\u6570: 46, 2\u9032\u6570\
    : 101110, 3\u9032\u6570: 1201\n10\u9032\u6570: 47, 2\u9032\u6570: 101111, 3\u9032\
    \u6570: 1202\n10\u9032\u6570: 48, 2\u9032\u6570: 110000, 3\u9032\u6570: 1210\n\
    10\u9032\u6570: 49, 2\u9032\u6570: 110001, 3\u9032\u6570: 1211\n10\u9032\u6570\
    : 50, 2\u9032\u6570: 110010, 3\u9032\u6570: 1212\n10\u9032\u6570: 51, 2\u9032\u6570\
    : 110011, 3\u9032\u6570: 1220\n10\u9032\u6570: 52, 2\u9032\u6570: 110100, 3\u9032\
    \u6570: 1221\n10\u9032\u6570: 53, 2\u9032\u6570: 110101, 3\u9032\u6570: 1222\n\
    10\u9032\u6570: 54, 2\u9032\u6570: 110110, 3\u9032\u6570: 2000\n10\u9032\u6570\
    : 55, 2\u9032\u6570: 110111, 3\u9032\u6570: 2001\n10\u9032\u6570: 56, 2\u9032\u6570\
    : 111000, 3\u9032\u6570: 2002\n10\u9032\u6570: 57, 2\u9032\u6570: 111001, 3\u9032\
    \u6570: 2010\n10\u9032\u6570: 58, 2\u9032\u6570: 111010, 3\u9032\u6570: 2011\n\
    10\u9032\u6570: 59, 2\u9032\u6570: 111011, 3\u9032\u6570: 2012\n10\u9032\u6570\
    : 60, 2\u9032\u6570: 111100, 3\u9032\u6570: 2020\n10\u9032\u6570: 61, 2\u9032\u6570\
    : 111101, 3\u9032\u6570: 2021\n10\u9032\u6570: 62, 2\u9032\u6570: 111110, 3\u9032\
    \u6570: 2022\n10\u9032\u6570: 63, 2\u9032\u6570: 111111, 3\u9032\u6570: 2100\n\
    10\u9032\u6570: 64, 2\u9032\u6570: 1000000, 3\u9032\u6570: 2101\n10\u9032\u6570\
    : 65, 2\u9032\u6570: 1000001, 3\u9032\u6570: 2102\n10\u9032"
  timestamp: 1659824024
- exit_code: 0
  program: "<?php\n// Change numerical base of input number x to base.\n// return\
    \ string representation after the conversion.\n// base numbers are less than 10.\n\
    // >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n//\
    \ >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n  if ($x\
    \ === 0) return \"0\";\n  $result = \"\";\n  while ($x > 0) {\n    $result = ($x\
    \ % $base) . $result;\n    $x = floor($x / $base);\n  }\n  return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return change_base(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(16, 2) !== \"10000\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8, 2) !== \"1000\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 2) !== \"111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 3) !== \"2\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4) !== \"3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 5) !== \"4\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5, 6) !== \"5\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 7) !== \"6\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 8) !== \"7\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824024
- exit_code: 0
  program: "<?php\n// Change numerical base of input number x to base.\n// return\
    \ string representation after the conversion.\n// base numbers are less than 10.\n\
    // >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n//\
    \ >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n\tif ($x\
    \ <= 0) {\n\t\treturn '0';\n\t}\n\t$result = '';\n\t$numbers = ['0', '1', '2',\
    \ '3', '4', '5', '6', '7', '8', '9'];\n\twhile ($x > 0) {\n\t\t$result = $numbers[$x\
    \ % $base] . $result;\n\t\t$x = floor($x / $base);\n\t}\n\treturn $result;\n}\n\
    \n$r = change_base(8, 3);\nassert($r == '22');\n\n$r = change_base(8, 2);\nassert($r\
    \ == '1000');\n\n$r = change_base(7, 2);\nassert($r == '111');\n\nfunction candidate(...$args)\
    \ {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8,\
    \ 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234,\
    \ 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8,\
    \ 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824024
- exit_code: 0
  program: "<?php\n// Change numerical base of input number x to base.\n// return\
    \ string representation after the conversion.\n// base numbers are less than 10.\n\
    // >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n//\
    \ >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $result\
    \ = '';\n    while ($x > 0) {\n        $result = strval($x % $base) . $result;\n\
    \        $x = intval($x / $base);\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return change_base(...$args);\n}\n\nfunction test(): void {\n    if (candidate(8,\
    \ 3) !== \"22\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(9,\
    \ 3) !== \"100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(234,\
    \ 2) !== \"11101010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(16,\
    \ 2) !== \"10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8,\
    \ 2) !== \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 2) !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824024
- exit_code: 0
  program: "<?php\n// Change numerical base of input number x to base.\n// return\
    \ string representation after the conversion.\n// base numbers are less than 10.\n\
    // >>> change_base(8, 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n//\
    \ >>> change_base(7, 2)\n// \"111\"\nfunction change_base($x, $base) {\n    $digits\
    \ = '';\n    do {\n        $last = $x % $base;\n        $digits = (string)$last\
    \ . $digits;\n        $x = intval($x / $base);\n    } while ($x > 0);\n    return\
    \ $digits;\n}\n\nfunction candidate(...$args) {\n    return change_base(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(8, 3) !== \"22\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9, 3) !== \"100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(234, 2) !== \"11101010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(16, 2) !== \"\
    10000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(8, 2) !==\
    \ \"1000\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 2)\
    \ !== \"111\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 3) !== \"2\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4) !== \"3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 5) !== \"4\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(5,\
    \ 6) !== \"5\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 7) !== \"6\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 8) !== \"7\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660008667

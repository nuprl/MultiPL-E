language: php
name: HumanEval_39_prime_fib
results:
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $fib_list = array(2, 3);\n  $n--;\n\n  while ($n >\
    \ 0) {\n    $fib_list[] = $fib_list[count($fib_list) - 1] + $fib_list[count($fib_list)\
    \ - 2];\n    if (is_prime($fib_list[count($fib_list) - 1])) {\n      $n--;\n \
    \   }\n  }\n\n  return $fib_list[count($fib_list) - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp63svob2n.php:32\n\
    Stack trace:\n#0 /tmp/tmp63svob2n.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp63svob2n.php\
    \ on line 32\n"
  timestamp: 1659824084
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$index = 0;\n\t$i = 1;\n\twhile (true) {\n\t\t$i =\
    \ fib($i);\n\t\tif (is_prime($i)) {\n\t\t\t$index++;\n\t\t\tif ($index == $n)\
    \ {\n\t\t\t\treturn $i;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fib() in /tmp/tmp9ib_od7s.php:17\n\
    Stack trace:\n#0 /tmp/tmp9ib_od7s.php(28): prime_fib(1)\n#1 /tmp/tmp9ib_od7s.php(32):\
    \ candidate(1)\n#2 /tmp/tmp9ib_od7s.php(44): test()\n#3 {main}\n  thrown in /tmp/tmp9ib_od7s.php\
    \ on line 17\n"
  timestamp: 1659824084
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n == 1) {\n        return 2;\n    } else if\
    \ ($n == 2) {\n        return 3;\n    } else {\n        $fibs = [2, 3];\n    \
    \    $count = 1;\n        while ($count < $n) {\n            $fibs[2] = $fibs[0]\
    \ + $fibs[1];\n            if (is_prime($fibs[2])) {\n                $count++;\n\
    \            }\n            $fibs[0] = $fibs[1];\n            $fibs[1] = $fibs[2];\n\
    \        }\n        return $fibs[2];\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpk6u8nd0v.php:23\nStack trace:\n#0 /tmp/tmpk6u8nd0v.php(34): prime_fib(3)\n\
    #1 /tmp/tmpk6u8nd0v.php(40): candidate(3)\n#2 /tmp/tmpk6u8nd0v.php(50): test()\n\
    #3 {main}\n  thrown in /tmp/tmpk6u8nd0v.php on line 23\n"
  timestamp: 1659824084
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$arr = fib_arr($n);\n\tfor ($i = 1; $i <= $n; $i++)\
    \ {\n\t\tif (is_prime($arr[$i])) {\n\t\t\treturn $arr[$i];\n\t\t}\n\t}\n}\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fib_arr() in\
    \ /tmp/tmp6sm9ce2c.php:14\nStack trace:\n#0 /tmp/tmp6sm9ce2c.php(22): prime_fib(1)\n\
    #1 /tmp/tmp6sm9ce2c.php(26): candidate(1)\n#2 /tmp/tmp6sm9ce2c.php(38): test()\n\
    #3 {main}\n  thrown in /tmp/tmp6sm9ce2c.php on line 14\n"
  timestamp: 1659824084
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $fib_num = 0;\n  $cur_fib = 1;\n  $counter = 1;\n\
    \  while (TRUE) {\n    if ($n == 1) {\n      return 2;\n    }\n    $new_fib =\
    \ $fib_num + $cur_fib;\n    $fib_num = $cur_fib;\n    $cur_fib = $new_fib;\n \
    \   if (is_prime($cur_fib)) {\n      $counter++;\n    }\n    if ($counter == $n)\
    \ {\n      return $cur_fib;\n    }\n  }\n}\nfunction candidate(...$args) {\n \
    \   return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp2ujazm71.php:24\nStack trace:\n#0 /tmp/tmp2ujazm71.php(33): prime_fib(2)\n\
    #1 /tmp/tmp2ujazm71.php(38): candidate(2)\n#2 /tmp/tmp2ujazm71.php(49): test()\n\
    #3 {main}\n  thrown in /tmp/tmp2ujazm71.php on line 24\n"
  timestamp: 1659824084
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $prime_fibs = array();\n    $current_fib = fib(1);\n\
    \    while (count($prime_fibs) < $n) {\n        if (is_prime($current_fib))\n\
    \            $prime_fibs[] = $current_fib;\n        $current_fib = fib(count($prime_fibs)\
    \ + 1);\n    }\n    return $prime_fibs[$n - 1];\n}\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fib() in /tmp/tmp7gny6pt5.php:15\n\
    Stack trace:\n#0 /tmp/tmp7gny6pt5.php(24): prime_fib(1)\n#1 /tmp/tmp7gny6pt5.php(28):\
    \ candidate(1)\n#2 /tmp/tmp7gny6pt5.php(40): test()\n#3 {main}\n  thrown in /tmp/tmp7gny6pt5.php\
    \ on line 15\n"
  timestamp: 1659824084
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$pf = array(2, 3, 5, 13, 89);\n\tif (isset($pf[$n-1]))\
    \ {\n\t\treturn $pf[$n-1];\n\t}\n\t// Calculate all prime fibonacci numbers less\
    \ than 1000000\n\t$f = array(1, 2);\n\t$i = 2;\n\t$len = 1000000;\n\twhile ($f[$i-1]\
    \ < $len) {\n\t\t$f[$i] = $f[$i-1] + $f[$i-2];\n\t\t$i++;\n\t}\n\t// Generate\
    \ array of all primes less than 1000000\n\t$primes = gen_primes(floor(sqrt($len)));\n\
    \t// Filter array of prime fibonacci numbers\n\t$pf = array_filter($f, function($x)\
    \ use($primes) {\n\t\treturn in_array($x, $primes);\n\t});\n\treturn $pf[$n-1];\n\
    }\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function gen_primes()\
    \ in /tmp/tmpchxtnnsm.php:27\nStack trace:\n#0 /tmp/tmpchxtnnsm.php(36): prime_fib(6)\n\
    #1 /tmp/tmpchxtnnsm.php(45): candidate(6)\n#2 /tmp/tmpchxtnnsm.php(52): test()\n\
    #3 {main}\n  thrown in /tmp/tmpchxtnnsm.php on line 27\n"
  timestamp: 1659824084
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $fib = [2, 3];\n  $n_fib = 2;\n  $i = 0;\n  while\
    \ ($n_fib <= $n) {\n    $fib[$i+2] = $fib[$i] + $fib[$i+1];\n    $n_fib++;\n \
    \   $i++;\n  }\n  if (is_prime($fib[$i])) {\n    return $fib[$i];\n  } else {\n\
    \    return \"Not found\";\n  }\n}\necho prime_fib(10);\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpue7ys4n8.php:22\nStack trace:\n#0 /tmp/tmpue7ys4n8.php(28): prime_fib(10)\n\
    #1 {main}\n  thrown in /tmp/tmpue7ys4n8.php on line 22\n"
  timestamp: 1659824084
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fib_result = 0;\n    $fib_count = 0;\n    $fib_num1\
    \ = 1;\n    $fib_num2 = 1;\n    while ($fib_count < $n) {\n        $fib_result\
    \ = $fib_num1 + $fib_num2;\n        $fib_num1 = $fib_num2;\n        $fib_num2\
    \ = $fib_result;\n        if ($fib_result % 2 == 0) {\n            $fib_count++;\n\
    \        }\n    }\n    return $fib_result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpil46douc.php:35\n\
    Stack trace:\n#0 /tmp/tmpil46douc.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpil46douc.php\
    \ on line 35\n"
  timestamp: 1659824084
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fib = fib($n);\n    while (!is_prime($fib)) {\n\
    \        $fib = fib(++$n);\n    }\n    return $fib;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fib() in /tmp/tmpc6tonmj8.php:14\n\
    Stack trace:\n#0 /tmp/tmpc6tonmj8.php(22): prime_fib(1)\n#1 /tmp/tmpc6tonmj8.php(26):\
    \ candidate(1)\n#2 /tmp/tmpc6tonmj8.php(38): test()\n#3 {main}\n  thrown in /tmp/tmpc6tonmj8.php\
    \ on line 14\n"
  timestamp: 1659824084
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    return 0;\n}\nfunction candidate(...$args) {\n \
    \   return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgniw2t5n.php:21\n\
    Stack trace:\n#0 /tmp/tmpgniw2t5n.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpgniw2t5n.php\
    \ on line 21\n"
  timestamp: 1659824084
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $answer = 0;\n    for ($i = 1; $n > 0; $i++) {\n\
    \        $res = fib($i);\n        if (is_prime($res)) {\n            $answer =\
    \ $res;\n            $n--;\n        }\n    }\n    return $answer;\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fib() in /tmp/tmp6xzcmk2s.php:16\n\
    Stack trace:\n#0 /tmp/tmp6xzcmk2s.php(26): prime_fib(1)\n#1 /tmp/tmp6xzcmk2s.php(30):\
    \ candidate(1)\n#2 /tmp/tmp6xzcmk2s.php(42): test()\n#3 {main}\n  thrown in /tmp/tmp6xzcmk2s.php\
    \ on line 16\n"
  timestamp: 1659824084
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$fib = fib($n);\n\tif (is_prime($fib)) {\n\t\treturn\
    \ $fib;\n\t} else {\n\t\treturn prime_fib($n+1);\n\t}\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fib() in /tmp/tmph1cbnspt.php:14\n\
    Stack trace:\n#0 /tmp/tmph1cbnspt.php(23): prime_fib(1)\n#1 /tmp/tmph1cbnspt.php(27):\
    \ candidate(1)\n#2 /tmp/tmph1cbnspt.php(39): test()\n#3 {main}\n  thrown in /tmp/tmph1cbnspt.php\
    \ on line 14\n"
  timestamp: 1659824084
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fibs = array(2, 3);\n    $i = 2;\n    while ($i\
    \ < $n) {\n        $fibs[] = $fibs[$i - 1] + $fibs[$i - 2];\n        $i++;\n \
    \   }\n    return $fibs[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdzcrngvd.php:31\n\
    Stack trace:\n#0 /tmp/tmpdzcrngvd.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpdzcrngvd.php\
    \ on line 31\n"
  timestamp: 1659824084
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fib = 0;\n    $fib_arr = array();\n    $fib_arr[0]\
    \ = 1;\n    $fib_arr[1] = 1;\n    $fib_arr[2] = 2;\n    $i = 2;\n    while (count($fib_arr)\
    \ <= $n) {\n        $fib = $fib_arr[$i-1] + $fib_arr[$i-2];\n        if (is_prime($fib))\
    \ {\n            $fib_arr[] = $fib;\n        }\n        $i++;\n    }\n    return\
    \ $fib_arr[$n];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5jo7_jwi.php:35\n\
    Stack trace:\n#0 /tmp/tmp5jo7_jwi.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp5jo7_jwi.php\
    \ on line 35\n"
  timestamp: 1659824084
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $i = 1; // current Fibonacci number being processed\n\
    \  $j = 1; // index of required Fibonacci number\n  while ($j < $n) {\n    $i\
    \ += $j;\n    $j = $i - $j;\n    if (check_prime($i)) {\n      $j++;\n    }\n\
    \  }\n  return $i;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq6dsmhh7.php:31\n\
    Stack trace:\n#0 /tmp/tmpq6dsmhh7.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpq6dsmhh7.php\
    \ on line 31\n"
  timestamp: 1659824084
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fibs = [2, 3];\n    $i = 2;\n    while(count($fibs)\
    \ <= $n) {\n        $fibs[] = next($fibs) + prev($fibs);\n        $i++;\n    }\n\
    \    $prime_fibs = [];\n    foreach($fibs as $fib) {\n        if(is_prime($fib))\
    \ {\n            $prime_fibs[] = $fib;\n        }\n    }\n    return $prime_fibs[$n\
    \ - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp1yrhtcp6.php:22\nStack trace:\n#0 /tmp/tmp1yrhtcp6.php(30): prime_fib(1)\n\
    #1 /tmp/tmp1yrhtcp6.php(34): candidate(1)\n#2 /tmp/tmp1yrhtcp6.php(46): test()\n\
    #3 {main}\n  thrown in /tmp/tmp1yrhtcp6.php on line 22\n"
  timestamp: 1659824084
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $a = 0;\n  $b = 1;\n  $count = 0;\n  while (1) {\n\
    \    $count += 1;\n    $c = $a + $b;\n    if ($count == $n) {\n      if (is_prime($c))\
    \ {\n        return $c;\n      }\n    }\n    $a = $b;\n    $b = $c;\n  }\n}\n\n\
    function candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpe6ie7y8t.php:21\nStack trace:\n#0 /tmp/tmpe6ie7y8t.php(31): prime_fib(1)\n\
    #1 /tmp/tmpe6ie7y8t.php(35): candidate(1)\n#2 /tmp/tmpe6ie7y8t.php(47): test()\n\
    #3 {main}\n  thrown in /tmp/tmpe6ie7y8t.php on line 21\n"
  timestamp: 1659824084
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $fib = function($n) use (&$fib) {\n    if ($n < 2)\
    \ return $n;\n    return $fib($n - 1) + $fib($n - 2);\n  };\n  $fib = memoize($fib);\n\
    \  for ($i = 0; ; $i++) {\n    $f = $fib($i);\n    if (is_prime($f)) {\n     \
    \ $n--;\n      if ($n === 0) {\n        return $f;\n      }\n    }\n  }\n}\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function memoize() in\
    \ /tmp/tmpv3utolml.php:18\nStack trace:\n#0 /tmp/tmpv3utolml.php(30): prime_fib(1)\n\
    #1 /tmp/tmpv3utolml.php(34): candidate(1)\n#2 /tmp/tmpv3utolml.php(46): test()\n\
    #3 {main}\n  thrown in /tmp/tmpv3utolml.php on line 18\n"
  timestamp: 1659824084
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $first = 0;\n  $second = 1;\n  $total = 0;\n  $index\
    \ = 0;\n  while ($index < $n) {\n    $total = $first + $second;\n    $first =\
    \ $second;\n    $second = $total;\n    if (is_prime($total)) {\n      $index++;\n\
    \    }\n  }\n  return $total;\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp788llq5v.php:22\nStack trace:\n#0 /tmp/tmp788llq5v.php(30): prime_fib(1)\n\
    #1 /tmp/tmp788llq5v.php(34): candidate(1)\n#2 /tmp/tmp788llq5v.php(46): test()\n\
    #3 {main}\n  thrown in /tmp/tmp788llq5v.php on line 22\n"
  timestamp: 1659824084
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  if (1 === $n) return 2;\n  $fibs = fibs();\n  $i =\
    \ 0;\n  while ($i < $n) {\n    $fib = $fibs();\n    if (is_prime($fib)) {\n  \
    \    $i++;\n    }\n  }\n  return $fib;\n}\n\nfunction candidate(...$args) {\n\
    \    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fibs() in /tmp/tmpenoyh4qk.php:15\n\
    Stack trace:\n#0 /tmp/tmpenoyh4qk.php(27): prime_fib(2)\n#1 /tmp/tmpenoyh4qk.php(32):\
    \ candidate(2)\n#2 /tmp/tmpenoyh4qk.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpenoyh4qk.php\
    \ on line 15\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fibs = fibonacci($n);\n    $primes = sieve_of_eratosthenes($fibs[$n-1]);\n\
    \    $prime_fibs = array_intersect($fibs, $primes);\n    return $prime_fibs[$n-1];\n\
    }\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fibonacci() in\
    \ /tmp/tmpn9yleio1.php:14\nStack trace:\n#0 /tmp/tmpn9yleio1.php(21): prime_fib(1)\n\
    #1 /tmp/tmpn9yleio1.php(25): candidate(1)\n#2 /tmp/tmpn9yleio1.php(37): test()\n\
    #3 {main}\n  thrown in /tmp/tmpn9yleio1.php on line 14\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fibs = [1, 1];\n    $prime_count = 0;\n    while\
    \ ($prime_count < $n) {\n        $fibs[2] = $fibs[0] + $fibs[1];\n        if (is_prime($fibs[2]))\
    \ {\n            $prime_count++;\n        }\n        $fibs[0] = $fibs[1];\n  \
    \      $fibs[1] = $fibs[2];\n    }\n    return $fibs[2];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpk4zfxi7w.php:18\nStack trace:\n#0 /tmp/tmpk4zfxi7w.php(28): prime_fib(1)\n\
    #1 /tmp/tmpk4zfxi7w.php(32): candidate(1)\n#2 /tmp/tmpk4zfxi7w.php(44): test()\n\
    #3 {main}\n  thrown in /tmp/tmpk4zfxi7w.php on line 18\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $i = 0;\n  $fib = 0;\n  while ($i < $n) {\n    $fib\
    \ = fib($i);\n    if (is_prime($fib)) {\n      $i++;\n    }\n  }\n  return $fib;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fib() in /tmp/tmpavxwbqiw.php:17\n\
    Stack trace:\n#0 /tmp/tmpavxwbqiw.php(26): prime_fib(1)\n#1 /tmp/tmpavxwbqiw.php(30):\
    \ candidate(1)\n#2 /tmp/tmpavxwbqiw.php(42): test()\n#3 {main}\n  thrown in /tmp/tmpavxwbqiw.php\
    \ on line 17\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $a = 0;\n  $b = 1;\n  $numPrimes = 0;\n  $fib = 0;\n\
    \  $prev = 0;\n  for ($i = 0; $i < $n; $i++) {\n    $fib = $a + $b;\n    $prev\
    \ = $a;\n    $a = $b;\n    $b = $fib;\n    $numPrimes++;\n    if (isPrime($numPrimes))\
    \ {\n      $numPrimes = 0;\n      $a = $prev;\n      $b = $fib;\n    }\n  }\n\
    \  return $fib;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function isPrime() in\
    \ /tmp/tmpy5utn58e.php:25\nStack trace:\n#0 /tmp/tmpy5utn58e.php(35): prime_fib(1)\n\
    #1 /tmp/tmpy5utn58e.php(39): candidate(1)\n#2 /tmp/tmpy5utn58e.php(51): test()\n\
    #3 {main}\n  thrown in /tmp/tmpy5utn58e.php on line 25\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fib = 2;\n    $i = 1;\n    while ($i < $n) {\n\
    \        $next = $fib + $prev;\n        $prev = $fib;\n        $fib = $next;\n\
    \        if ($fib >= 2 && is_prime($fib)) {\n            $i++;\n        }\n  \
    \  }\n    return $fib;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $prev in /tmp/tmp4lrbgkm3.php on line 17\n\
    \nFatal error: Uncaught Error: Call to undefined function is_prime() in /tmp/tmp4lrbgkm3.php:20\n\
    Stack trace:\n#0 /tmp/tmp4lrbgkm3.php(28): prime_fib(2)\n#1 /tmp/tmp4lrbgkm3.php(33):\
    \ candidate(2)\n#2 /tmp/tmp4lrbgkm3.php(44): test()\n#3 {main}\n  thrown in /tmp/tmp4lrbgkm3.php\
    \ on line 20\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$a = 1;\n\t$b = 1;\n\t$c = 2;\n\t$i = 3;\n\twhile\
    \ ($i <= $n) {\n\t\t$a = $b;\n\t\t$b = $c;\n\t\t$c = $a + $b;\n\t\tif (is_prime($c))\
    \ {\n\t\t\t$i++;\n\t\t}\n\t}\n\treturn $c;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbzzjuek7.php:35\n\
    Stack trace:\n#0 /tmp/tmpbzzjuek7.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbzzjuek7.php\
    \ on line 35\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$fibs = array(2, 3);\n\tfor ($i = 2; $i < $n; $i++)\
    \ {\n\t\t$x = array_pop($fibs);\n\t\t$y = array_pop($fibs);\n\t\t$fibs[] = $x;\n\
    \t\t$fibs[] = $y;\n\t\t$fibs[] = $x + $y;\n\t}\n\treturn $fibs[sizeof($fibs) -\
    \ 1];\n}\nprint(prime_fib(1) . \"\\n\");\nprint(prime_fib(2) . \"\\n\");\nprint(prime_fib(3)\
    \ . \"\\n\");\nprint(prime_fib(4) . \"\\n\");\nprint(prime_fib(5) . \"\\n\");\n\
    \nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "3\n3\n5\n7\n9\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc1_w2c_r.php:35\n\
    Stack trace:\n#0 /tmp/tmpc1_w2c_r.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpc1_w2c_r.php\
    \ on line 35\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $i = 1;\n    $j = 2;\n    $fib = 2;\n    while (true)\
    \ {\n        $fib = $i + $j;\n        if (is_prime($fib)) {\n            $n--;\n\
    \            if ($n == 0) {\n                return $fib;\n            }\n   \
    \     }\n        $i = $j;\n        $j = $fib;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp5m9xr62p.php:19\nStack trace:\n#0 /tmp/tmp5m9xr62p.php(31): prime_fib(1)\n\
    #1 /tmp/tmp5m9xr62p.php(35): candidate(1)\n#2 /tmp/tmp5m9xr62p.php(47): test()\n\
    #3 {main}\n  thrown in /tmp/tmp5m9xr62p.php on line 19\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $i = 1;\n    $j = 1;\n    $k = 1;\n    while ($k\
    \ < $n) {\n        $i = $i + $j;\n        $isPrime = true;\n        for ($p =\
    \ 2; $p < $i; $p++) {\n            if ($i % $p == 0) {\n                $isPrime\
    \ = false;\n                break;\n            }\n        }\n        if ($isPrime)\
    \ {\n            $j = $i;\n            $k++;\n        }\n    }\n    return $j;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqnpqljj7.php:39\n\
    Stack trace:\n#0 /tmp/tmpqnpqljj7.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpqnpqljj7.php\
    \ on line 39\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $i = 0;\n  $n1 = 1;\n  $n2 = 1;\n  while ($i != $n)\
    \ {\n    $s = $n1 + $n2;\n    $n1 = $n2;\n    $n2 = $s;\n    if (is_prime($s))\
    \ {\n      $i++;\n    }\n  }\n  return $s;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpy__tkgr2.php:21\nStack trace:\n#0 /tmp/tmpy__tkgr2.php(29): prime_fib(1)\n\
    #1 /tmp/tmpy__tkgr2.php(33): candidate(1)\n#2 /tmp/tmpy__tkgr2.php(45): test()\n\
    #3 {main}\n  thrown in /tmp/tmpy__tkgr2.php on line 21\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fibs = [];\n    $candidate = 1;\n    $i = 0;\n\
    \    while ($i < $n) {\n        if (is_prime($candidate)) {\n            $fibs[]\
    \ = $candidate;\n            $i++;\n        }\n        $candidate++;\n    }\n\
    \    return $fibs[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmprxupwqmf.php:18\nStack trace:\n#0 /tmp/tmprxupwqmf.php(28): prime_fib(1)\n\
    #1 /tmp/tmprxupwqmf.php(32): candidate(1)\n#2 /tmp/tmprxupwqmf.php(44): test()\n\
    #3 {main}\n  thrown in /tmp/tmprxupwqmf.php on line 18\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$fibonacciNumbers = [1, 2];\n\t$i = 2;\n\twhile (count($fibonacciNumbers)\
    \ <= $n + 1) {\n\t\t$fibonacciNumbers[$i] = $fibonacciNumbers[$i - 1] + $fibonacciNumbers[$i\
    \ - 2];\n\t\t$i++;\n\t}\n\t$primeNumbers = [1, 2];\n\t$i = 2;\n\twhile (count($primeNumbers)\
    \ <= $n + 1) {\n\t\t$primeNumbers[$i] = nextPrime($primeNumbers[$i - 1]);\n\t\t\
    $i++;\n\t}\n\t$i = 0;\n\t$j = 0;\n\t$primeFibonacciNumbers = [];\n\twhile (count($primeFibonacciNumbers)\
    \ <= $n) {\n\t\t$f = $fibonacciNumbers[$i];\n\t\t$p = $primeNumbers[$j];\n\t\t\
    if ($f == $p) {\n\t\t\t$primeFibonacciNumbers[] = $f;\n\t\t\t$i++;\n\t\t\t$j++;\n\
    \t\t} else if ($f < $p) {\n\t\t\t$i++;\n\t\t} else {\n\t\t\t$j++;\n\t\t}\n\t}\n\
    \treturn $primeFibonacciNumbers[$n - 1];\n}\n\nfunction candidate(...$args) {\n\
    \    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function nextPrime() in\
    \ /tmp/tmp13hbtp2y.php:23\nStack trace:\n#0 /tmp/tmp13hbtp2y.php(46): prime_fib(1)\n\
    #1 /tmp/tmp13hbtp2y.php(50): candidate(1)\n#2 /tmp/tmp13hbtp2y.php(62): test()\n\
    #3 {main}\n  thrown in /tmp/tmp13hbtp2y.php on line 23\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$fibonacci_numbers = array(1, 1);\n\t$prime_count\
    \ = 0;\n\t$prime_fib_count = 0;\n\t$current_fib_index = 2;\n\t$current_fib = 0;\n\
    \twhile ($prime_fib_count < $n) {\n\t\t$current_fib = $fibonacci_numbers[$current_fib_index\
    \ - 1] + $fibonacci_numbers[$current_fib_index - 2];\n\t\t$fibonacci_numbers[]\
    \ = $current_fib;\n\t\t$current_fib_index += 1;\n\t\tif (is_prime($current_fib))\
    \ {\n\t\t\t$prime_count += 1;\n\t\t\tif ($prime_count >= $n) {\n\t\t\t\t$prime_fib_count\
    \ += 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn $current_fib;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp0riiq6tf.php:23\nStack trace:\n#0 /tmp/tmp0riiq6tf.php(34): prime_fib(1)\n\
    #1 /tmp/tmp0riiq6tf.php(38): candidate(1)\n#2 /tmp/tmp0riiq6tf.php(50): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0riiq6tf.php on line 23\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fib = 0;\n    $n1 = 0;\n    $n2 = 1;\n    $i =\
    \ 1;\n    while($i <= $n) {\n        $fib = $n1 + $n2;\n        $n1 = $n2;\n \
    \       $n2 = $fib;\n        if(is_prime($fib)) {\n            $i++;\n       \
    \ }\n    }\n    return $fib;\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp35glspm_.php:22\nStack trace:\n#0 /tmp/tmp35glspm_.php(30): prime_fib(1)\n\
    #1 /tmp/tmp35glspm_.php(34): candidate(1)\n#2 /tmp/tmp35glspm_.php(46): test()\n\
    #3 {main}\n  thrown in /tmp/tmp35glspm_.php on line 22\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $i = 1;\n  $fib = 1;\n  while (true) {\n    $fib =\
    \ fib($i);\n    if (is_prime($fib)) {\n      $n--;\n      if ($n == 0) {\n   \
    \     return $fib;\n      }\n    }\n    $i++;\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fib() in /tmp/tmpzkz7uwei.php:17\n\
    Stack trace:\n#0 /tmp/tmpzkz7uwei.php(29): prime_fib(1)\n#1 /tmp/tmpzkz7uwei.php(33):\
    \ candidate(1)\n#2 /tmp/tmpzkz7uwei.php(45): test()\n#3 {main}\n  thrown in /tmp/tmpzkz7uwei.php\
    \ on line 17\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $fib_array = array(1, 2);\n  $fib_number = 0;\n  $current_fib_index\
    \ = 1;\n  $prime_fib_index = 0;\n  while ($prime_fib_index <= $n) {\n    $fib_number\
    \ = $fib_array[$current_fib_index - 1] + $fib_array[$current_fib_index];\n   \
    \ $fib_array[] = $fib_number;\n    $current_fib_index++;\n    if (is_prime($fib_number))\
    \ {\n      $prime_fib_index++;\n    }\n  }\n  return $fib_number;\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpk7f5ut3l.php:22\nStack trace:\n#0 /tmp/tmpk7f5ut3l.php(30): prime_fib(1)\n\
    #1 /tmp/tmpk7f5ut3l.php(34): candidate(1)\n#2 /tmp/tmpk7f5ut3l.php(46): test()\n\
    #3 {main}\n  thrown in /tmp/tmpk7f5ut3l.php on line 22\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$fibs = [1, 2];\n\twhile (count($fibs) < $n) {\n\t\
    \t$fibs[] = $fibs[count($fibs) - 1] + $fibs[count($fibs) - 2];\n\t}\n\treturn\
    \ $fibs[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl1_37503.php:26\n\
    Stack trace:\n#0 /tmp/tmpl1_37503.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpl1_37503.php\
    \ on line 26\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$prime_fib_arr = array(1 => 2, 2 => 3, 3 => 5);\n\t\
    for ($i = 3; $i < $n; $i++) {\n\t\tif (count($prime_fib_arr) == $n) {\n\t\t\t\
    return end($prime_fib_arr);\n\t\t} else {\n\t\t\t$prime_fib_arr[] = $prime_fib_arr[$i]\
    \ + $prime_fib_arr[$i - 1];\n\t\t\tif (prime_check($prime_fib_arr[$i + 1])) {\n\
    \t\t\t\t$i++;\n\t\t\t}\n\t\t}\n\t}\n\treturn end($prime_fib_arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1z43wmsy.php:33\n\
    Stack trace:\n#0 /tmp/tmp1z43wmsy.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp1z43wmsy.php\
    \ on line 33\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $current = 1;\n  $next = 1;\n  $prime_fib = 2;\n \
    \ $prime_fib_index = 2;\n  while($prime_fib_index < $n) {\n    $temp = $next;\n\
    \    $next = $current + $next;\n    $current = $temp;\n    if (is_prime($next))\
    \ {\n      $prime_fib = $next;\n      $prime_fib_index++;\n    }\n  }\n  return\
    \ $prime_fib;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmi45y0vl.php:36\n\
    Stack trace:\n#0 /tmp/tmpmi45y0vl.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpmi45y0vl.php\
    \ on line 36\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$i = 1;\n\t$f = 2;\n\twhile ($i < $n) {\n\t\t$f =\
    \ bcadd(bcsub($f, '1'), bcadd($f, '1'));\n\t\tif (bcpowmod('1', $f, $f) == '1')\
    \ {\n\t\t\t$i++;\n\t\t}\n\t}\n\treturn $f;\n}\n\necho prime_fib(1).\"\\n\";\n\
    echo prime_fib(2).\"\\n\";\necho prime_fib(3).\"\\n\";\necho prime_fib(4).\"\\\
    n\";\necho prime_fib(5).\"\\n\";\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "2\n\nFatal error: Uncaught Error: Call to undefined function bcadd() in\
    \ /tmp/tmp1_mbth2r.php:17\nStack trace:\n#0 /tmp/tmp1_mbth2r.php(26): prime_fib(2)\n\
    #1 {main}\n  thrown in /tmp/tmp1_mbth2r.php on line 17\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fib = 1;\n    $i = 2;\n    while ($i <= $n) {\n\
    \        $next = $fib + $fib_prev;\n        if ($next > 2 && is_prime($next))\
    \ {\n            $i++;\n        }\n        $fib_prev = $fib;\n        $fib = $next;\n\
    \    }\n    return $fib;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwxd91ttj.php:32\n\
    Stack trace:\n#0 /tmp/tmpwxd91ttj.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpwxd91ttj.php\
    \ on line 32\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$fibs = fibs(300);\n\tforeach ($fibs as $fib) {\n\t\
    \tif (is_prime($fib)) {\n\t\t\t$prime_fibs[] = $fib;\n\t\t}\n\t}\n\treturn $prime_fibs[$n-1];\n\
    }\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fibs() in /tmp/tmp52vgyoq7.php:14\n\
    Stack trace:\n#0 /tmp/tmp52vgyoq7.php(24): prime_fib(1)\n#1 /tmp/tmp52vgyoq7.php(28):\
    \ candidate(1)\n#2 /tmp/tmp52vgyoq7.php(40): test()\n#3 {main}\n  thrown in /tmp/tmp52vgyoq7.php\
    \ on line 14\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $fibs = [2, 3];\n  while ($n > count($fibs)) {\n \
    \   $fibs[] = $fibs[count($fibs) - 1] + $fibs[count($fibs) - 2];\n  }\n  return\
    \ $fibs[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuetth6pr.php:29\n\
    Stack trace:\n#0 /tmp/tmpuetth6pr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpuetth6pr.php\
    \ on line 29\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $fibonacci_numbers = fibonacci_numbers();\n  $i =\
    \ 0;\n  $prime_fibonacci_numbers = [];\n  foreach ($fibonacci_numbers as $number)\
    \ {\n    if (is_prime($number)) {\n      $prime_fibonacci_numbers[] = $number;\n\
    \    }\n    if (count($prime_fibonacci_numbers) >= $n) {\n      break;\n    }\n\
    \  }\n  return $prime_fibonacci_numbers[$n - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fibonacci_numbers()\
    \ in /tmp/tmpa_ltk88k.php:14\nStack trace:\n#0 /tmp/tmpa_ltk88k.php(29): prime_fib(1)\n\
    #1 /tmp/tmpa_ltk88k.php(33): candidate(1)\n#2 /tmp/tmpa_ltk88k.php(45): test()\n\
    #3 {main}\n  thrown in /tmp/tmpa_ltk88k.php on line 14\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  if ($n == 1) {\n    return 2;\n  } else if ($n ==\
    \ 2) {\n    return 3;\n  } else {\n    $x = 3;\n    $y = 5;\n    $i = 2;\n   \
    \ while (true) {\n      $z = $x + $y;\n      if (is_prime($z)) {\n        $i++;\n\
    \        if ($i == $n) {\n          return $z;\n        }\n      }\n      $x =\
    \ $y;\n      $y = $z;\n    }\n  }\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpe56g0o39.php:24\nStack trace:\n#0 /tmp/tmpe56g0o39.php(37): prime_fib(3)\n\
    #1 /tmp/tmpe56g0o39.php(43): candidate(3)\n#2 /tmp/tmpe56g0o39.php(53): test()\n\
    #3 {main}\n  thrown in /tmp/tmpe56g0o39.php on line 24\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $i = 3;\n    $k = 2;\n    $p = 0;\n    $r = 0;\n\
    \    $f = 1;\n    while ($k < $n) {\n        $r = $p + $f;\n        $p = $f;\n\
    \        $f = $r;\n        $i++;\n        if (is_prime($i)) {\n            $k++;\n\
    \        }\n    }\n    return $f;\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfe0gqoqh.php:36\n\
    Stack trace:\n#0 /tmp/tmpfe0gqoqh.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpfe0gqoqh.php\
    \ on line 36\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  for ($i = 2, $fib = 1, $cnt = 0; $cnt < $n; $i++)\
    \ {\n    if (is_prime($i) && is_fib($i)) {\n      $fib = $i;\n      $cnt++;\n\
    \    }\n  }\n  return $fib;\n}\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpaxvh5e4x.php:15\nStack trace:\n#0 /tmp/tmpaxvh5e4x.php(23): prime_fib(1)\n\
    #1 /tmp/tmpaxvh5e4x.php(27): candidate(1)\n#2 /tmp/tmpaxvh5e4x.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmpaxvh5e4x.php on line 15\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    // write your code here\n    // hint: you can use\
    \ the fib() function from the fibonacci exercise\n}\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpew8v6x68.php:22\n\
    Stack trace:\n#0 /tmp/tmpew8v6x68.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpew8v6x68.php\
    \ on line 22\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $fibs = array(1,1);\n  $i = 2;\n  while ($i < $n)\
    \ {\n    $fibs[] = $fibs[$i-1] + $fibs[$i-2];\n    $i++;\n  }\n  return $fibs[$n-1];\n\
    }\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3cec5lzv.php:28\n\
    Stack trace:\n#0 /tmp/tmp3cec5lzv.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp3cec5lzv.php\
    \ on line 28\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$num = 0;\n\t$i = 1;\n\t$fib = [1, 1];\n\t\n\twhile\
    \ ($i < $n) {\n\t\t$num = $fib[0] + $fib[1];\n\t\tif (is_prime($num)) {\n\t\t\t\
    $i++;\n\t\t}\n\t\t$fib[0] = $fib[1];\n\t\t$fib[1] = $num;\n\t}\n\treturn $num;\n\
    }\necho \"prime_fib(1) = \" . prime_fib(1) . \"<br>\";\necho \"prime_fib(2) =\
    \ \" . prime_fib(2) . \"<br>\";\necho \"prime_fib(3) = \" . prime_fib(3) . \"\
    <br>\";\necho \"prime_fib(4) = \" . prime_fib(4) . \"<br>\";\necho \"prime_fib(5)\
    \ = \" . prime_fib(5) . \"<br>\";\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "prime_fib(1) = 0<br>\nFatal error: Uncaught Error: Call to undefined function\
    \ is_prime() in /tmp/tmpnk6x6wjg.php:20\nStack trace:\n#0 /tmp/tmpnk6x6wjg.php(29):\
    \ prime_fib(2)\n#1 {main}\n  thrown in /tmp/tmpnk6x6wjg.php on line 20\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if($n == 1) return 2;\n    $res = 0;\n    $i = 1;\n\
    \    $j = 1;\n    $k = 0;\n    while($k < $n){\n        $res = $i + $j;\n    \
    \    $i = $j;\n        $j = $res;\n        if(is_prime($res)){\n            $k++;\n\
    \        }\n    }\n    return $res;\n}\n\nfunction candidate(...$args) {\n   \
    \ return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpqumv_d1f.php:23\nStack trace:\n#0 /tmp/tmpqumv_d1f.php(31): prime_fib(2)\n\
    #1 /tmp/tmpqumv_d1f.php(36): candidate(2)\n#2 /tmp/tmpqumv_d1f.php(47): test()\n\
    #3 {main}\n  thrown in /tmp/tmpqumv_d1f.php on line 23\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $num = 0;\n    $count = 0;\n    $n = $n - 1;\n \
    \   while (true) {\n        $num = fib($count);\n        if (is_prime($num)) {\n\
    \            $n--;\n        }\n        if ($n == 0) {\n            return $num;\n\
    \        }\n        $count++;\n    }\n}\n\nfunction candidate(...$args) {\n  \
    \  return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fib() in /tmp/tmpy_uusgcq.php:18\n\
    Stack trace:\n#0 /tmp/tmpy_uusgcq.php(30): prime_fib(0)\n#1 /tmp/tmpy_uusgcq.php(34):\
    \ candidate(1)\n#2 /tmp/tmpy_uusgcq.php(46): test()\n#3 {main}\n  thrown in /tmp/tmpy_uusgcq.php\
    \ on line 18\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $fib_arr = array(2, 3);\n\n  $i = 0;\n  $j = 1;\n\
    \  while (count($fib_arr) < $n) {\n    $fib_arr[] = $fib_arr[$i] + $fib_arr[$j];\n\
    \    $i++;\n    $j++;\n  }\n\n  foreach ($fib_arr as $fib) {\n    if (is_prime($fib))\
    \ {\n      $fib_prime_arr[] = $fib;\n    }\n  }\n\n  $fib_prime_arr = array_values($fib_prime_arr);\n\
    \  $fib_prime_arr = array_unique($fib_prime_arr);\n  sort($fib_prime_arr);\n\n\
    \  return $fib_prime_arr[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp5ta2mnao.php:25\nStack trace:\n#0 /tmp/tmp5ta2mnao.php(38): prime_fib(1)\n\
    #1 /tmp/tmp5ta2mnao.php(42): candidate(1)\n#2 /tmp/tmp5ta2mnao.php(54): test()\n\
    #3 {main}\n  thrown in /tmp/tmp5ta2mnao.php on line 25\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$fib = [1,1];\n\t$count = 2;\n\twhile ($count <= $n)\
    \ {\n\t\t$new = $fib[0] + $fib[1];\n\t\tif (is_prime($new)) {\n\t\t\t$count +=\
    \ 1;\n\t\t}\n\t\t$fib[0] = $fib[1];\n\t\t$fib[1] = $new;\n\t}\n\treturn $fib[1];\n\
    }\n\n\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph5smdr_s.php:34\n\
    Stack trace:\n#0 /tmp/tmph5smdr_s.php(46): test()\n#1 {main}\n  thrown in /tmp/tmph5smdr_s.php\
    \ on line 34\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fib = [2, 3];\n    $i = 2;\n    while (count($fib)\
    \ <= $n) {\n        $fib_next = $fib[$i - 1] + $fib[$i - 2];\n        $is_prime\
    \ = true;\n        for ($j = 2; $j < $fib_next; $j++) {\n            if ($fib_next\
    \ % $j == 0) {\n                $is_prime = false;\n                break;\n \
    \           }\n        }\n        if ($is_prime) {\n            $fib[] = $fib_next;\n\
    \        }\n        $i++;\n    }\n    return $fib[$n - 1];\n}\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 3 in /tmp/tmplsw9r43o.php on line 17\n\n\
    Warning: Undefined array key 3 in /tmp/tmplsw9r43o.php on line 17\n\nWarning:\
    \ Undefined array key 4 in /tmp/tmplsw9r43o.php on line 17\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmplsw9r43o.php:40\nStack trace:\n#0 /tmp/tmplsw9r43o.php(49):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmplsw9r43o.php on line 40\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$num = 0;\n\t$nth = 0;\n\t$prev = 1;\n\t$curr = 1;\n\
    \twhile ($nth < $n) {\n\t\t$num = $prev + $curr;\n\t\t$prev = $curr;\n\t\t$curr\
    \ = $num;\n\t\tif (is_prime($num)) {\n\t\t\t$nth += 1;\n\t\t}\n\t}\n\treturn $num;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpfq0hkb90.php:22\nStack trace:\n#0 /tmp/tmpfq0hkb90.php(30): prime_fib(1)\n\
    #1 /tmp/tmpfq0hkb90.php(34): candidate(1)\n#2 /tmp/tmpfq0hkb90.php(46): test()\n\
    #3 {main}\n  thrown in /tmp/tmpfq0hkb90.php on line 22\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $primeFibs = array(2, 3, 5);\n    $i = 3;\n    $fib1\
    \ = 3;\n    $fib2 = 5;\n    $fib3 = 8;\n    while ($i < $n) {\n        if (is_prime($fib3))\
    \ {\n            $primeFibs[] = $fib3;\n            $i++;\n        }\n       \
    \ $fib1 = $fib2;\n        $fib2 = $fib3;\n        $fib3 = $fib1 + $fib2;\n   \
    \ }\n    return $primeFibs[$n - 1];\n}\n\nfunction candidate(...$args) {\n   \
    \ return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp37v03igs.php:20\nStack trace:\n#0 /tmp/tmp37v03igs.php(32): prime_fib(4)\n\
    #1 /tmp/tmp37v03igs.php(39): candidate(4)\n#2 /tmp/tmp37v03igs.php(48): test()\n\
    #3 {main}\n  thrown in /tmp/tmp37v03igs.php on line 20\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $a = 1;\n  $b = 1;\n  $count = 1;\n  do {\n    $tmp\
    \ = $a;\n    $a = $b;\n    $b = $tmp + $b;\n    if (is_prime($b)) {\n      $count++;\n\
    \    }\n  } while ($count < $n);\n  return $b;\n}\n\necho prime_fib(1), \"\\n\"\
    ;\necho prime_fib(2), \"\\n\";\necho prime_fib(3), \"\\n\";\necho prime_fib(4),\
    \ \"\\n\";\necho prime_fib(5), \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpmxx3bxd1.php:21\nStack trace:\n#0 /tmp/tmpmxx3bxd1.php(28): prime_fib(1)\n\
    #1 {main}\n  thrown in /tmp/tmpmxx3bxd1.php on line 21\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  // YOUR CODE GOES HERE\n  return $n;\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8m6hiqr_.php:23\n\
    Stack trace:\n#0 /tmp/tmp8m6hiqr_.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp8m6hiqr_.php\
    \ on line 23\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$i = 1;\n\t$j = 1;\n\t$k = 0;\n\t$prime_fib = 0;\n\
    \twhile ($k < $n) {\n\t\t$i = $i + $j;\n\t\t$j = $i - $j;\n\t\tif (prime($i))\
    \ {\n\t\t\t$prime_fib = $i;\n\t\t\t$k++;\n\t\t}\n\t}\n\treturn $prime_fib;\n}\n\
    \nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function prime() in /tmp/tmpcol_uag2.php:21\n\
    Stack trace:\n#0 /tmp/tmpcol_uag2.php(30): prime_fib(1)\n#1 /tmp/tmpcol_uag2.php(34):\
    \ candidate(1)\n#2 /tmp/tmpcol_uag2.php(46): test()\n#3 {main}\n  thrown in /tmp/tmpcol_uag2.php\
    \ on line 21\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphpmd7wj3.php:22\n\
    Stack trace:\n#0 /tmp/tmphpmd7wj3.php(34): test()\n#1 {main}\n  thrown in /tmp/tmphpmd7wj3.php\
    \ on line 22\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fib = [2, 3];\n    $x = 3;\n    while (true) {\n\
    \        $fib[] = $x;\n        if (count($fib) == $n) {\n            return $fib[$n\
    \ - 1];\n        }\n        $x = $fib[count($fib) - 1] + $fib[count($fib) - 2];\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    134217736 bytes) in /tmp/tmp3awllyah.php on line 17

    '
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fib_index = 1;\n    $fib_value = 1;\n    $fib_prev\
    \ = 0;\n    $prime_count = 0;\n    $prime_value = 0;\n    while (true) {\n   \
    \     $fib_value = $fib_value + $fib_prev;\n        $fib_prev = $fib_value - $fib_prev;\n\
    \        $fib_index++;\n        if (is_prime($fib_value)) {\n            $prime_count++;\n\
    \            $prime_value = $fib_value;\n        }\n        if ($prime_count ==\
    \ $n) {\n            return $prime_value;\n        }\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpj8e7zwjg.php:23\nStack trace:\n#0 /tmp/tmpj8e7zwjg.php(33): prime_fib(1)\n\
    #1 /tmp/tmpj8e7zwjg.php(37): candidate(1)\n#2 /tmp/tmpj8e7zwjg.php(49): test()\n\
    #3 {main}\n  thrown in /tmp/tmpj8e7zwjg.php on line 23\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$fib = [0, 1];\n\t$i = 0;\n\tdo {\n\t\t$fib[$i+2]\
    \ = $fib[$i] + $fib[$i+1];\n\t\t$i++;\n\t} while ($i < $n);\n\treturn $fib[$i];\n\
    }\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_g5svsnd.php:28\n\
    Stack trace:\n#0 /tmp/tmp_g5svsnd.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_g5svsnd.php\
    \ on line 28\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $fibonacci_numbers = array(1, 2);\n  $prime_fibonacci_numbers\
    \ = array(2);\n  $counter = 1;\n  while(count($prime_fibonacci_numbers) < $n)\
    \ {\n    $counter++;\n    $fibonacci_numbers[] = $fibonacci_numbers[$counter -\
    \ 1] + $fibonacci_numbers[$counter - 2];\n    if (is_prime($fibonacci_numbers[$counter]))\
    \ {\n      $prime_fibonacci_numbers[] = $fibonacci_numbers[$counter];\n    }\n\
    \  }\n  return $prime_fibonacci_numbers[$n - 1];\n}\n\n$fib_prime_numbers = array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20);\n$fib_prime_output\
    \ = array(2, 3, 5, 13, 89, 233, 1597, 28657, 514229, 433494437, 2971215073, 99194853094755497,\
    \ 139423224561697880139724382870407283950070256587697307264108962948325571622863290691557658876222521294125,\n\
    \ 1313458034824592609220095161175961672629259583871011022421573, 1477252272269121094966835884819816529209472288276665771874578155272923965882639131072324474495877117265354924412,\
    \ 2957403737290871185563183398385599052989350502594977201758896396357204894227069806588688743005700670047028898232545289987298748129823828049978980864707922147621647443754326961799893522224284054699753578153917104444\n\
    function candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmprnxios8z.php
    on line 30

    '
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $fibs = [2, 3];\n\n  while (count($fibs) < $n) {\n\
    \    $fibs[] = $fibs[count($fibs) - 1] + $fibs[count($fibs) - 2];\n  }\n\n  return\
    \ $fibs[$n - 1];\n}\n\nvar_dump(prime_fib(1));\nvar_dump(prime_fib(2));\nvar_dump(prime_fib(3));\n\
    var_dump(prime_fib(4));\nvar_dump(prime_fib(5));\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "int(2)\nint(3)\nint(5)\nint(8)\nint(13)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpbd3zochn.php:36\nStack trace:\n#0 /tmp/tmpbd3zochn.php(45):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpbd3zochn.php on line 36\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109,\
    \ 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197,\
    \ 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283,\
    \ 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389,\
    \ 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487,\
    \ 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599,\
    \ 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691,\
    \ 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811,\
    \ 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919,\
    \ 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997];\n\t$fibonacci = [0,\
    \ 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181,\
    \ 6765, 10946, 17711, 28657, 46368, 75025, 121393, 196418, 317811, 514229, 832040,\n\
    function candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpu6cnb8qg.php on line 16

    '
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fibs = [2, 3];\n    $count = 2;\n    while (count($fibs)\
    \ < $n) {\n        $fibs[] = $fibs[$count - 1] + $fibs[$count - 2];\n        $count++;\n\
    \    }\n    return $fibs[$n - 1];\n}\n\necho prime_fib(3) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "5\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0jjx0nrz.php:32\n\
    Stack trace:\n#0 /tmp/tmp0jjx0nrz.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp0jjx0nrz.php\
    \ on line 32\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    // Add your code here\n    $result = [2, 3];\n \
    \   $i = 3;\n    $i2 = 2;\n    while(count($result) < $n) {\n        if (is_prime($i))\
    \ {\n            $result[] = $i;\n        }\n        $i2 = $i;\n        $i = $i\
    \ + $i2;\n    }\n    return $result[$n - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpl61bd1zu.php:19\nStack trace:\n#0 /tmp/tmpl61bd1zu.php(29): prime_fib(3)\n\
    #1 /tmp/tmpl61bd1zu.php(35): candidate(3)\n#2 /tmp/tmpl61bd1zu.php(45): test()\n\
    #3 {main}\n  thrown in /tmp/tmpl61bd1zu.php on line 19\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  // return fib(n)\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdemg2le7.php:22\n\
    Stack trace:\n#0 /tmp/tmpdemg2le7.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpdemg2le7.php\
    \ on line 22\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $i = 1;\n    $num = 1;\n    $old = 0;\n    while\
    \ ($i < $n) {\n        $old1 = $old;\n        $old = $num;\n        $num = $old\
    \ + $old1;\n        if (is_prime($num)) {\n            $i++;\n        }\n    }\n\
    \    return $num;\n}\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe1o2z89e.php:32\n\
    Stack trace:\n#0 /tmp/tmpe1o2z89e.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpe1o2z89e.php\
    \ on line 32\n"
  timestamp: 1660028554
- exit_code: -1
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $arr = [2, 3];\n    while (count($arr) < $n) {\n\
    \        $arr[] = $arr[count($arr) - 1] + $arr[count($arr) - 2];\n        $arr\
    \ = array_values(array_filter($arr, function ($number) {\n            for ($i\
    \ = 2; $i < $number; $i++) {\n                if ($number % $i == 0) {\n     \
    \               return false;\n                }\n            }\n            return\
    \ true;\n        }));\n    }\n    return end($arr);\n}\n\necho prime_fib(1) .\
    \ \"\\n\";\necho prime_fib(2) . \"\\n\";\necho prime_fib(3) . \"\\n\";\necho prime_fib(4)\
    \ . \"\\n\";\necho prime_fib(5) . \"\\n\";\nfunction candidate(...$args) {\n \
    \   return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: '3

    3

    5

    '
  timestamp: 1660028559
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  return fib_prime_array()[$n-1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fib_prime_array()\
    \ in /tmp/tmp4d2aah6t.php:14\nStack trace:\n#0 /tmp/tmp4d2aah6t.php(18): prime_fib(1)\n\
    #1 /tmp/tmp4d2aah6t.php(22): candidate(1)\n#2 /tmp/tmp4d2aah6t.php(34): test()\n\
    #3 {main}\n  thrown in /tmp/tmp4d2aah6t.php on line 14\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $a = 0;\n  $b = 1;\n  $count = 1;\n  while (true)\
    \ {\n    $c = $a + $b;\n    if (is_prime($c)) {\n      if ($count == $n) return\
    \ $c;\n      else $count++;\n    }\n    $a = $b;\n    $b = $c;\n  }\n}\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpuiti05ub.php:19\nStack trace:\n#0 /tmp/tmpuiti05ub.php(28): prime_fib(1)\n\
    #1 /tmp/tmpuiti05ub.php(32): candidate(1)\n#2 /tmp/tmpuiti05ub.php(44): test()\n\
    #3 {main}\n  thrown in /tmp/tmpuiti05ub.php on line 19\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $i = 0;\n    $fib_list = [1, 1];\n    while (true)\
    \ {\n        $fib_list[2] = $fib_list[0] + $fib_list[1];\n        $fib_list[0]\
    \ = $fib_list[1];\n        $fib_list[1] = $fib_list[2];\n        if (is_prime($fib_list[2]))\
    \ {\n            $i++;\n            if ($i == $n) {\n                return $fib_list[2];\n\
    \            }\n        }\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpe5q8ob8q.php:20\nStack trace:\n#0 /tmp/tmpe5q8ob8q.php(30): prime_fib(1)\n\
    #1 /tmp/tmpe5q8ob8q.php(34): candidate(1)\n#2 /tmp/tmpe5q8ob8q.php(46): test()\n\
    #3 {main}\n  thrown in /tmp/tmpe5q8ob8q.php on line 20\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fibs = array(2, 3);\n    $index = 1;\n    $cur\
    \ = 1;\n    while ($index < $n) {\n        $cur = $fibs[count($fibs) - 1] + $fibs[count($fibs)\
    \ - 2];\n        if (is_prime($cur)) {\n            $fibs[] = $cur;\n        \
    \    $index += 1;\n        }\n    }\n    return $fibs[count($fibs) - 1];\n}\n\n\
    function candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3ir_ug7c.php:32\n\
    Stack trace:\n#0 /tmp/tmp3ir_ug7c.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp3ir_ug7c.php\
    \ on line 32\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $i = 0;\n  $j = 1;\n  $k = 1;\n  while (true) {\n\
    \    if (is_prime($k)) {\n      $n--;\n      if ($n === 0) {\n        return $k;\n\
    \      }\n    }\n    $k = $i + $j;\n    $i = $j;\n    $j = $k;\n  }\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpc_fwe5w6.php:18\nStack trace:\n#0 /tmp/tmpc_fwe5w6.php(31): prime_fib(1)\n\
    #1 /tmp/tmpc_fwe5w6.php(35): candidate(1)\n#2 /tmp/tmpc_fwe5w6.php(47): test()\n\
    #3 {main}\n  thrown in /tmp/tmpc_fwe5w6.php on line 18\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fib = 2;\n    $fib_prev = 1;\n    $count = 1;\n\
    \    while ($count < $n) {\n        $fib_tmp = $fib;\n        $fib += $fib_prev;\n\
    \        $fib_prev = $fib_tmp;\n        $count++;\n        if (is_prime($fib))\
    \ {\n            $count++;\n        }\n    }\n    return $fib;\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpbuvhrskt.php:22\nStack trace:\n#0 /tmp/tmpbuvhrskt.php(30): prime_fib(2)\n\
    #1 /tmp/tmpbuvhrskt.php(35): candidate(2)\n#2 /tmp/tmpbuvhrskt.php(46): test()\n\
    #3 {main}\n  thrown in /tmp/tmpbuvhrskt.php on line 22\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $fibonacci = [2, 3];\n  $i = 2;\n  while ($i < $n)\
    \ {\n    $tmp = $fibonacci[$i - 1] + $fibonacci[$i - 2];\n    array_push($fibonacci,\
    \ $tmp);\n    $i++;\n  }\n  $flipped_fibonacci = array_flip($fibonacci);\n  $is_prime\
    \ = array_map('is_prime', $fibonacci);\n  $flipped_is_prime = array_flip($is_prime);\n\
    \  $fibonacci_prime = array_intersect_key($flipped_fibonacci, $flipped_is_prime);\n\
    \  return $fibonacci_prime[$n];\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback)\
    \ must be a valid callback or null, function \"is_prime\" not found or invalid\
    \ function name in /tmp/tmpkbm_q0j9.php:22\nStack trace:\n#0 /tmp/tmpkbm_q0j9.php(22):\
    \ array_map('is_prime', Array)\n#1 /tmp/tmpkbm_q0j9.php(29): prime_fib(1)\n#2\
    \ /tmp/tmpkbm_q0j9.php(33): candidate(1)\n#3 /tmp/tmpkbm_q0j9.php(45): test()\n\
    #4 {main}\n  thrown in /tmp/tmpkbm_q0j9.php on line 22\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n == 1) return 2;\n\telseif ($n == 2) return\
    \ 3;\n\telseif ($n == 3) return 5;\n\telseif ($n == 4) return 13;\n\telseif ($n\
    \ == 5) return 89;\n\telse {\n\t\t$i = 6;\n\t\t$p = 89;\n\t\t$fib = 89;\n\t\t\
    while (true) {\n\t\t\tif ($i == $n) return $p;\n\t\t\t$fib += $p;\n\t\t\tif (is_prime($fib))\
    \ {\n\t\t\t\t$p = $fib;\n\t\t\t\t$i++;\n\t\t\t}\n\t\t}\n\t}\n}\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1n_o12c1.php:43\n\
    Stack trace:\n#0 /tmp/tmp1n_o12c1.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp1n_o12c1.php\
    \ on line 43\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $numbers = [2, 3];\n  for ($i = 2; $i < $n; $i++)\
    \ {\n    $numbers[] = $numbers[$i - 1] + $numbers[$i - 2];\n  }\n  return $numbers[$n\
    \ - 1];\n}\n\n$arguments = [\n  [1],\n  [2],\n  [3],\n  [4],\n  [5],\n];\nforeach\
    \ ($arguments as $argument) {\n  echo \"prime_fib(\" . $argument[0] . \") ===\
    \ \" . prime_fib($argument[0]) . \"\\n\";\n}\nfunction candidate(...$args) {\n\
    \    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "prime_fib(1) === 2\nprime_fib(2) === 3\nprime_fib(3) === 5\nprime_fib(4)\
    \ === 8\nprime_fib(5) === 13\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpg7p6r49p.php:39\nStack trace:\n#0 /tmp/tmpg7p6r49p.php(48): test()\n\
    #1 {main}\n  thrown in /tmp/tmpg7p6r49p.php on line 39\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $result = [2, 3];\n    $i = 2;\n    while ($i <\
    \ $n) {\n        $fib = $result[$i - 1] + $result[$i - 2];\n        if (is_prime($fib))\
    \ {\n            $result[] = $fib;\n            $i++;\n        }\n    }\n    return\
    \ $result[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpy3qg065_.php:18\nStack trace:\n#0 /tmp/tmpy3qg065_.php(27): prime_fib(3)\n\
    #1 /tmp/tmpy3qg065_.php(33): candidate(3)\n#2 /tmp/tmpy3qg065_.php(43): test()\n\
    #3 {main}\n  thrown in /tmp/tmpy3qg065_.php on line 18\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $x = 1;\n  $y = 2;\n  $counter = 1;\n  $swap = 0;\n\
    \  while ($counter < $n) {\n    if (is_prime($y)) {\n      $counter++;\n    }\n\
    \    $swap = $x;\n    $x = $y;\n    $y = $swap + $y;\n  }\n  return $x;\n}\n\n\
    function candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc4xcinx7.php:34\n\
    Stack trace:\n#0 /tmp/tmpc4xcinx7.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpc4xcinx7.php\
    \ on line 34\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $i = 0;\n    $previous_fib = 0;\n    $current_fib\
    \ = 1;\n    $next_fib = 0;\n    $prime_fib = 0;\n    do {\n        $next_fib =\
    \ $previous_fib + $current_fib;\n        $previous_fib = $current_fib;\n     \
    \   $current_fib = $next_fib;\n        if (is_prime($current_fib)) {\n       \
    \     $i++;\n            $prime_fib = $current_fib;\n        }\n    } while ($i\
    \ < $n);\n    return $prime_fib;\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp6g0i9pxw.php:23\nStack trace:\n#0 /tmp/tmp6g0i9pxw.php(32): prime_fib(1)\n\
    #1 /tmp/tmp6g0i9pxw.php(36): candidate(1)\n#2 /tmp/tmp6g0i9pxw.php(48): test()\n\
    #3 {main}\n  thrown in /tmp/tmp6g0i9pxw.php on line 23\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  for ($i = 2, $a = 1, $b = 1; $i <= $n; $i++) {\n \
    \   $c = $a + $b;\n    $a = $b;\n    $b = $c;\n    while ( ! is_prime($c)) {\n\
    \      $c = $a + $b;\n      $a = $b;\n      $b = $c;\n    }\n  }\n  return $c;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $c in /tmp/tmpw97_cay7.php on line 24\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpw97_cay7.php:32\nStack\
    \ trace:\n#0 /tmp/tmpw97_cay7.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpw97_cay7.php\
    \ on line 32\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $f = $p = 0;\n  for ($i = 1; $n > 0; $i++) {\n   \
    \ $f = fib($i);\n    if (is_prime($f)) {\n      $p = $f;\n      $n--;\n    }\n\
    \  }\n  return $p;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fib() in /tmp/tmpob9_dq83.php:16\n\
    Stack trace:\n#0 /tmp/tmpob9_dq83.php(26): prime_fib(1)\n#1 /tmp/tmpob9_dq83.php(30):\
    \ candidate(1)\n#2 /tmp/tmpob9_dq83.php(42): test()\n#3 {main}\n  thrown in /tmp/tmpob9_dq83.php\
    \ on line 16\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $i = 1;\n    $j = 1;\n    $k = 0;\n    while ($k\
    \ < $n) {\n        $i = $i + $j;\n        $j = $i - $j;\n        if (is_prime($i))\
    \ {\n            $k++;\n        }\n    }\n    return $i;\n}\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpnptp4rtb.php:20\nStack trace:\n#0 /tmp/tmpnptp4rtb.php(27): prime_fib(1)\n\
    #1 /tmp/tmpnptp4rtb.php(31): candidate(1)\n#2 /tmp/tmpnptp4rtb.php(43): test()\n\
    #3 {main}\n  thrown in /tmp/tmpnptp4rtb.php on line 20\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$cache = [2, 3, 5, 13, 89];\n\tif (isset($cache[$n\
    \ - 1])) {\n\t\treturn $cache[$n - 1];\n\t}\n\t$fibs = [2, 3, 5];\n\t$i = 3;\n\
    \twhile (1) {\n\t\t$fibs[] = $fibs[$i - 1] + $fibs[$i - 2];\n\t\tif (++$i == $n)\
    \ {\n\t\t\tbreak;\n\t\t}\n\t}\n\t$fibs = array_reverse($fibs);\n\tforeach ($fibs\
    \ as $fib) {\n\t\tif (is_prime($fib)) {\n\t\t\treturn $fib;\n\t\t}\n\t}\n}\n\n\
    function candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpwznnt2h1.php:28\nStack trace:\n#0 /tmp/tmpwznnt2h1.php(35): prime_fib(6)\n\
    #1 /tmp/tmpwznnt2h1.php(44): candidate(6)\n#2 /tmp/tmpwznnt2h1.php(51): test()\n\
    #3 {main}\n  thrown in /tmp/tmpwznnt2h1.php on line 28\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $prime_fibs = array();\n  $fib = 0;\n  $i = 1;\n \
    \ while (count($prime_fibs) != $n) {\n    $fib = fibonacci($i);\n    if (is_prime($fib))\
    \ {\n      $prime_fibs[] = $fib;\n    }\n    $i++;\n  }\n  return $fib;\n}\n\n\
    function candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fibonacci() in\
    \ /tmp/tmp3amwuq1h.php:18\nStack trace:\n#0 /tmp/tmp3amwuq1h.php(28): prime_fib(1)\n\
    #1 /tmp/tmp3amwuq1h.php(32): candidate(1)\n#2 /tmp/tmp3amwuq1h.php(44): test()\n\
    #3 {main}\n  thrown in /tmp/tmp3amwuq1h.php on line 18\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$nums = array(1, 2);\n\t$i = 2;\n\t$res = 2;\n\twhile\
    \ ($i < $n) {\n\t\t$nums[] = $nums[count($nums) - 1] + $nums[count($nums) - 2];\n\
    \t\tif (prime_check($nums[count($nums) - 1])) {\n\t\t\t$res = $nums[count($nums)\
    \ - 1];\n\t\t\t$i++;\n\t\t}\n\t}\n\treturn $res;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9jqj8d_s.php:33\n\
    Stack trace:\n#0 /tmp/tmp9jqj8d_s.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp9jqj8d_s.php\
    \ on line 33\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $i = 2;\n    $fn = 0;\n    $fn1 = 1;\n    $fn2 =\
    \ 1;\n    $j = 0;\n    while ($j < $n) {\n        $fn = $fn1 + $fn2;\n       \
    \ $fn2 = $fn1;\n        $fn1 = $fn;\n        if (is_prime($fn)) {\n          \
    \  $j++;\n        }\n    }\n    return $fn;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp7fk4kwrs.php:23\nStack trace:\n#0 /tmp/tmp7fk4kwrs.php(31): prime_fib(1)\n\
    #1 /tmp/tmp7fk4kwrs.php(35): candidate(1)\n#2 /tmp/tmp7fk4kwrs.php(47): test()\n\
    #3 {main}\n  thrown in /tmp/tmp7fk4kwrs.php on line 23\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $fibs = [];\n  $fibs[0] = 0;\n  $fibs[1] = 1;\n  $i\
    \ = 1;\n  while (count($fibs) <= $n) {\n    $fibs[$i + 1] = $fibs[$i] + $fibs[$i\
    \ - 1];\n    $i++;\n  }\n  return prime($fibs[$n]);\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function prime() in /tmp/tmp0j7xqm6h.php:22\n\
    Stack trace:\n#0 /tmp/tmp0j7xqm6h.php(26): prime_fib(1)\n#1 /tmp/tmp0j7xqm6h.php(30):\
    \ candidate(1)\n#2 /tmp/tmp0j7xqm6h.php(42): test()\n#3 {main}\n  thrown in /tmp/tmp0j7xqm6h.php\
    \ on line 22\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$fib = [1, 2];\n\t$i = 2;\n\twhile ($i < $n) {\n\t\
    \t$fib[] = $fib[$i - 1] + $fib[$i - 2];\n\t\t$i++;\n\t}\n\treturn $fib[$n - 1];\n\
    }\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_36gpnaf.php:28\n\
    Stack trace:\n#0 /tmp/tmp_36gpnaf.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_36gpnaf.php\
    \ on line 28\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  // FIXME: implement this function\n}\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwm65pq40.php:21\n\
    Stack trace:\n#0 /tmp/tmpwm65pq40.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpwm65pq40.php\
    \ on line 21\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fibs = array(1, 2);\n    $i = 2;\n    while (count($fibs)\
    \ < $n) {\n        $fibs[] = $fibs[$i - 1] + $fibs[$i - 2];\n        $i++;\n \
    \   }\n    return $fibs[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfnyg0cll.php:28\n\
    Stack trace:\n#0 /tmp/tmpfnyg0cll.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpfnyg0cll.php\
    \ on line 28\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$x = 1;\n\t$y = 1;\n\t$i = 0;\n\twhile (true) {\n\t\
    \t$next = $x + $y;\n\t\tif (is_prime($next)) {\n\t\t\t$i++;\n\t\t\tif ($i == $n)\
    \ {\n\t\t\t\treturn $next;\n\t\t\t}\n\t\t}\n\t\t$x = $y;\n\t\t$y = $next;\n\t\
    }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpt9cjtllm.php:19\nStack trace:\n#0 /tmp/tmpt9cjtllm.php(31): prime_fib(1)\n\
    #1 /tmp/tmpt9cjtllm.php(35): candidate(1)\n#2 /tmp/tmpt9cjtllm.php(47): test()\n\
    #3 {main}\n  thrown in /tmp/tmpt9cjtllm.php on line 19\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n == 1) {\n        return 2;\n    } else if\
    \ ($n == 2) {\n        return 3;\n    } else {\n        $prev = 3;\n        $prev2\
    \ = 2;\n        $i = 3;\n        while (true) {\n            $curr = $prev + $prev2;\n\
    \            if (is_prime($curr)) {\n                $i++;\n                if\
    \ ($i == $n) {\n                    return $curr;\n                }\n       \
    \     }\n            $prev2 = $prev;\n            $prev = $curr;\n        }\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmplowdds7e.php:24\nStack trace:\n#0 /tmp/tmplowdds7e.php(37): prime_fib(3)\n\
    #1 /tmp/tmplowdds7e.php(43): candidate(3)\n#2 /tmp/tmplowdds7e.php(53): test()\n\
    #3 {main}\n  thrown in /tmp/tmplowdds7e.php on line 24\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fib = fib(1);\n    $count = 0;\n    $i = 0;\n \
    \   while($count < $n) {\n        if(check_prime($fib[$i])) {\n            $count++;\n\
    \        }\n        $i++;\n    }\n    return $fib[$i-1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fib() in /tmp/tmpr47b8cq6.php:14\n\
    Stack trace:\n#0 /tmp/tmpr47b8cq6.php(27): prime_fib(1)\n#1 /tmp/tmpr47b8cq6.php(31):\
    \ candidate(1)\n#2 /tmp/tmpr47b8cq6.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpr47b8cq6.php\
    \ on line 14\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $i = 1;\n  $fibs = array(2, 3);\n  while(count($fibs)\
    \ < $n) {\n    $fibs[] = fib($i++);\n  }\n  return $fibs[$n - 1];\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fib() in /tmp/tmp6xm8ode9.php:17\n\
    Stack trace:\n#0 /tmp/tmp6xm8ode9.php(23): prime_fib(3)\n#1 /tmp/tmp6xm8ode9.php(29):\
    \ candidate(3)\n#2 /tmp/tmp6xm8ode9.php(39): test()\n#3 {main}\n  thrown in /tmp/tmp6xm8ode9.php\
    \ on line 17\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $current_prime_fib_index = 0;\n  $a = 0;\n  $b = 1;\n\
    \  $c = 1;\n  while (true) {\n    if (is_prime($c)) {\n      $current_prime_fib_index++;\n\
    \      if ($current_prime_fib_index == $n) {\n        return $c;\n      }\n  \
    \  }\n    $a = $b;\n    $b = $c;\n    $c = $a + $b;\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpc0l9jw7q.php:19\nStack trace:\n#0 /tmp/tmpc0l9jw7q.php(32): prime_fib(1)\n\
    #1 /tmp/tmpc0l9jw7q.php(36): candidate(1)\n#2 /tmp/tmpc0l9jw7q.php(48): test()\n\
    #3 {main}\n  thrown in /tmp/tmpc0l9jw7q.php on line 19\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $p = 0;\n    $f = 0;\n    $i = 0;\n    while ($i\
    \ < $n) {\n        $f = fibonacci($p);\n        if (is_prime($f)) {\n        \
    \    $i++;\n        }\n        $p++;\n    }\n    return $f;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fibonacci() in\
    \ /tmp/tmpbi2bcmd6.php:18\nStack trace:\n#0 /tmp/tmpbi2bcmd6.php(28): prime_fib(1)\n\
    #1 /tmp/tmpbi2bcmd6.php(32): candidate(1)\n#2 /tmp/tmpbi2bcmd6.php(44): test()\n\
    #3 {main}\n  thrown in /tmp/tmpbi2bcmd6.php on line 18\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$prime_fib = 1;\n\twhile($n > 0) {\n\t\t$prime_fib\
    \ = gmp_nextprime($prime_fib);\n\t\tif(gmp_perfect_square(gmp_sub($prime_fib,1))\
    \ == 1) {\n\t\t\t$n--;\n\t\t}\n\t}\n\treturn $prime_fib;\n}\nprint(prime_fib(5));\n\
    \nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function gmp_nextprime()\
    \ in /tmp/tmpz8g_1au6.php:16\nStack trace:\n#0 /tmp/tmpz8g_1au6.php(23): prime_fib(5)\n\
    #1 {main}\n  thrown in /tmp/tmpz8g_1au6.php on line 16\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fib = 2;\n    $i = 0;\n    $primes = array();\n\
    \    while ($i < $n) {\n        $fib = fib($fib);\n        if (is_prime($fib))\
    \ {\n            $primes[] = $fib;\n            $i++;\n        }\n    }\n    return\
    \ $primes[$n - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fib() in /tmp/tmpd5gr5hqy.php:18\n\
    Stack trace:\n#0 /tmp/tmpd5gr5hqy.php(28): prime_fib(1)\n#1 /tmp/tmpd5gr5hqy.php(32):\
    \ candidate(1)\n#2 /tmp/tmpd5gr5hqy.php(44): test()\n#3 {main}\n  thrown in /tmp/tmpd5gr5hqy.php\
    \ on line 18\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $list = [2, 3];\n    while (count($list) < $n) {\n\
    \        $a = $list[count($list) - 1];\n        $b = $list[count($list) - 2];\n\
    \        $c = $a + $b;\n        if ($c % 2 != 0 && check_prime($c)) {\n      \
    \      $list[] = $c;\n        }\n    }\n    return $list[count($list) - 1];\n\
    }\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp21nrk3kn.php:31\n\
    Stack trace:\n#0 /tmp/tmp21nrk3kn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp21nrk3kn.php\
    \ on line 31\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $fib=0;\n  $x=1;\n  $y=0;\n  $z=0;\n  $i=0;\n  while\
    \ ($i!=$n) {\n    $z=$x+$y;\n    $y=$x;\n    $x=$z;\n    if (is_prime($z)) {\n\
    \      $fib=$z;\n      $i++;\n    }\n  }\n  return $fib;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpnbuu2umd.php:23\nStack trace:\n#0 /tmp/tmpnbuu2umd.php(32): prime_fib(1)\n\
    #1 /tmp/tmpnbuu2umd.php(36): candidate(1)\n#2 /tmp/tmpnbuu2umd.php(48): test()\n\
    #3 {main}\n  thrown in /tmp/tmpnbuu2umd.php on line 23\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $i = 1;\n    $fib = 1;\n    $fibprev = 0;\n    $fibnext\
    \ = 0;\n    $fibnextnext = 0;\n    while ($i <= $n) {\n        if (is_prime($fib))\
    \ {\n            $i++;\n        }\n        $fibnextnext = $fib + $fibprev;\n \
    \       $fibprev = $fib;\n        $fib = $fibnextnext;\n    }\n    return $fibprev;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp0w6p_2hh.php:20\nStack trace:\n#0 /tmp/tmp0w6p_2hh.php(31): prime_fib(1)\n\
    #1 /tmp/tmp0w6p_2hh.php(35): candidate(1)\n#2 /tmp/tmp0w6p_2hh.php(47): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0w6p_2hh.php on line 20\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    // TODO\n}\n\nfunction candidate(...$args) {\n \
    \   return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpicove4ex.php:22\n\
    Stack trace:\n#0 /tmp/tmpicove4ex.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpicove4ex.php\
    \ on line 22\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  // YOUR CODE GOES HERE\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp18_baq43.php:22\n\
    Stack trace:\n#0 /tmp/tmp18_baq43.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp18_baq43.php\
    \ on line 22\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $prev = 0;\n    $curr = 1;\n    $count = 1;\n  \
    \  while ($count <= $n) {\n        $fib = $prev + $curr;\n        if (is_prime($fib))\
    \ {\n            $count++;\n        }\n        $prev = $curr;\n        $curr =\
    \ $fib;\n    }\n    return $prev;\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpqz6rljjd.php:19\nStack trace:\n#0 /tmp/tmpqz6rljjd.php(29): prime_fib(1)\n\
    #1 /tmp/tmpqz6rljjd.php(33): candidate(1)\n#2 /tmp/tmpqz6rljjd.php(45): test()\n\
    #3 {main}\n  thrown in /tmp/tmpqz6rljjd.php on line 19\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    // TODO\n}\nfunction candidate(...$args) {\n   \
    \ return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxxdiufws.php:21\n\
    Stack trace:\n#0 /tmp/tmpxxdiufws.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpxxdiufws.php\
    \ on line 21\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $pf = new PrimeFibonacci();\n  $num = $pf->getNumber($n);\n\
    \  return $num;\n}\n\nclass PrimeFibonacci {\n  protected $cache;\n\n  function\
    \ __construct() {\n    $this->cache = array();\n  }\n\n  function getNumber($n)\
    \ {\n    if (isset($this->cache[$n])) return $this->cache[$n];\n    $this->cache[$n]\
    \ = $this->calculate($n);\n    return $this->cache[$n];\n  }\n\n  function calculate($n)\
    \ {\n    $i = 1;\n    $a = 1;\n    $b = 1;\n    while ($i < $n) {\n      $c =\
    \ $a + $b;\n      if ($this->isPrime($c)) {\n        $a = $b;\n        $b = $c;\n\
    \        $i++;\n      } else {\n        $b = $c;\n      }\n    }\n    return $b;\n\
    \  }\n\n  function isPrime($n) {\n    if ($n <= 1) return false;\n    if ($n ==\
    \ 2) return true;\n    if ($n % 2 == 0) return false;\n    for ($i = 3; $i <=\
    \ sqrt($n); $i += 2) {\n      if ($n % $i == 0) return false;\n    }\n    return\
    \ true;\n  }\n}\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp29rfv3so.php:64\n\
    Stack trace:\n#0 /tmp/tmp29rfv3so.php(76): test()\n#1 {main}\n  thrown in /tmp/tmp29rfv3so.php\
    \ on line 64\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $result = 0;\n    for ($i = 1, $a = 1, $b = 0; $i\
    \ <= $n; $i++) {\n        $result = $a;\n        $a = $a + $b;\n        $b = $result;\n\
    \        if ($result % 2 == 0) {\n            $i -= 1;\n        }\n    }\n   \
    \ return $result;\n}\necho prime_fib(1) . \"\\n\";\necho prime_fib(2) . \"\\n\"\
    ;\necho prime_fib(3) . \"\\n\";\necho prime_fib(4) . \"\\n\";\necho prime_fib(5)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n3\n5\n13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxl00_kwy.php:35\n\
    Stack trace:\n#0 /tmp/tmpxl00_kwy.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpxl00_kwy.php\
    \ on line 35\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $x = 2;\n    $y = 3;\n    $z = 5;\n    $i = 4;\n\
    \    while (true) {\n        if ($n == 1) {\n            return $x;\n        }\
    \ else if ($n == 2) {\n            return $y;\n        } else if ($n == 3) {\n\
    \            return $z;\n        }\n        $x = $y;\n        $y = $z;\n     \
    \   $z = $x + $y;\n        if (is_prime($z)) {\n            $i++;\n        }\n\
    \        if ($i == $n) {\n            return $z;\n        }\n    }\n}\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpmar76ds4.php:29\nStack trace:\n#0 /tmp/tmpmar76ds4.php(38): prime_fib(4)\n\
    #1 /tmp/tmpmar76ds4.php(45): candidate(4)\n#2 /tmp/tmpmar76ds4.php(54): test()\n\
    #3 {main}\n  thrown in /tmp/tmpmar76ds4.php on line 29\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$i = 0;\n\t$x = 0;\n\t$y = 1;\n\t$z = 1;\n\twhile\
    \ ($i < $n) {\n\t\tif (is_prime($z)) {\n\t\t\t$i++;\n\t\t}\n\t\t$x = $y;\n\t\t\
    $y = $z;\n\t\t$z = $x + $y;\n\t}\n\treturn $y;\n}\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpop25_s1n.php:19\nStack trace:\n#0 /tmp/tmpop25_s1n.php(29): prime_fib(1)\n\
    #1 /tmp/tmpop25_s1n.php(33): candidate(1)\n#2 /tmp/tmpop25_s1n.php(45): test()\n\
    #3 {main}\n  thrown in /tmp/tmpop25_s1n.php on line 19\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $nth_fib = fib($n);\n  while (!is_prime($nth_fib))\
    \ {\n    $nth_fib = fib($n);\n    $n++;\n  }\n  return $nth_fib;\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fib() in /tmp/tmp0vhxls05.php:14\n\
    Stack trace:\n#0 /tmp/tmp0vhxls05.php(23): prime_fib(1)\n#1 /tmp/tmp0vhxls05.php(27):\
    \ candidate(1)\n#2 /tmp/tmp0vhxls05.php(39): test()\n#3 {main}\n  thrown in /tmp/tmp0vhxls05.php\
    \ on line 14\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fib_nums = array(2, 3);\n    $current_fib = 5;\n\
    \    $current_prime_fib = 1;\n    while ($current_prime_fib < $n) {\n        if\
    \ (is_prime($current_fib)) {\n            array_push($fib_nums, $current_fib);\n\
    \            $current_prime_fib++;\n        }\n        $current_fib += $fib_nums[count($fib_nums)\
    \ - 2];\n    }\n    return $fib_nums[count($fib_nums) - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo223p2nf.php:32\n\
    Stack trace:\n#0 /tmp/tmpo223p2nf.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpo223p2nf.php\
    \ on line 32\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fibs = [2, 3];\n    $i = 0;\n    $fib = 5;\n  \
    \  $cnt = 2;\n    while ($cnt <= $n) {\n        $i = 0;\n        $is_prime = true;\n\
    \        while ($fibs[$i] * $fibs[$i] <= $fib) {\n            if ($fib % $fibs[$i]\
    \ == 0) {\n                $is_prime = false;\n                break;\n      \
    \      }\n            $i++;\n        }\n        if ($is_prime) {\n           \
    \ $cnt++;\n            if ($cnt == $n)\n                return $fib;\n       \
    \ }\n        $fib = $fibs[0] + $fibs[1];\n        $fibs[0] = $fibs[1];\n     \
    \   $fibs[1] = $fib;\n    }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe557yt3r.php:44\n\
    Stack trace:\n#0 /tmp/tmpe557yt3r.php(56): test()\n#1 {main}\n  thrown in /tmp/tmpe557yt3r.php\
    \ on line 44\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n === 1) {\n\t\treturn 2;\n\t}\n\t$start = 1;\n\
    \t$end = 2;\n\t$fib_num = 3;\n\t$i = 2;\n\twhile (1) {\n\t\tif (is_prime($fib_num))\
    \ {\n\t\t\t$i++;\n\t\t\tif ($i === $n) {\n\t\t\t\treturn $fib_num;\n\t\t\t}\n\t\
    \t}\n\t\t$start = $end;\n\t\t$end = $fib_num;\n\t\t$fib_num = $start + $end;\n\
    \t}\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpt4gotum9.php:22\nStack trace:\n#0 /tmp/tmpt4gotum9.php(35): prime_fib(2)\n\
    #1 /tmp/tmpt4gotum9.php(40): candidate(2)\n#2 /tmp/tmpt4gotum9.php(51): test()\n\
    #3 {main}\n  thrown in /tmp/tmpt4gotum9.php on line 22\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = 1;\n    $b = 1;\n    $i = 1;\n    $c = 2;\n\
    \    while ($i <= $n) {\n        if (is_prime($c)) {\n            $i++;\n    \
    \    }\n        $a = $b;\n        $b = $c;\n        $c = $a + $b;\n    }\n   \
    \ return $c;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp8rhe4o7z.php:19\nStack trace:\n#0 /tmp/tmp8rhe4o7z.php(30): prime_fib(1)\n\
    #1 /tmp/tmp8rhe4o7z.php(34): candidate(1)\n#2 /tmp/tmp8rhe4o7z.php(46): test()\n\
    #3 {main}\n  thrown in /tmp/tmp8rhe4o7z.php on line 19\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fibs = array(1, 2);\n    $i = 2;\n    $cur = 0;\n\
    \    while (true) {\n        $cur = $fibs[$i - 1] + $fibs[$i - 2];\n        if\
    \ (is_prime($cur)) {\n            array_push($fibs, $cur);\n            $i++;\n\
    \        }\n        if (count($fibs) == $n) {\n            return $cur;\n    \
    \    }\n    }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpzx_dpkiw.php:19\nStack trace:\n#0 /tmp/tmpzx_dpkiw.php(30): prime_fib(1)\n\
    #1 /tmp/tmpzx_dpkiw.php(34): candidate(1)\n#2 /tmp/tmpzx_dpkiw.php(46): test()\n\
    #3 {main}\n  thrown in /tmp/tmpzx_dpkiw.php on line 19\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $fib = [1,1];\n  $i = 2;\n  while ($i < $n) {\n  \
    \  $fib[] = $fib[$i-1] + $fib[$i-2];\n    $i++;\n  }\n  $fib = $fib[$n-1];\n \
    \ $x = 2;\n  while ($x <= $fib) {\n    if ($fib % $x == 0 && $fib > $x) {\n  \
    \    $fib = $fib / $x;\n      continue;\n    }\n    $x++;\n  }\n  return $fib;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpah_x7bjt.php:37\n\
    Stack trace:\n#0 /tmp/tmpah_x7bjt.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpah_x7bjt.php\
    \ on line 37\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    // your code here\n}\n```\n\n```php\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "`" in /tmp/tmpbdmwk2aj.php on line
    16

    '
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $i = 1;\n    $fib = 0;\n    $primes = [2];\n   \
    \ while ($i <= $n) {\n        $fib = fib($i);\n        if (is_prime($fib)) {\n\
    \            $primes[] = $fib;\n            $i++;\n        }\n    }\n    return\
    \ $primes[$n - 1];\n}\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fib() in /tmp/tmprgynenx0.php:18\n\
    Stack trace:\n#0 /tmp/tmprgynenx0.php(27): prime_fib(1)\n#1 /tmp/tmprgynenx0.php(31):\
    \ candidate(1)\n#2 /tmp/tmprgynenx0.php(43): test()\n#3 {main}\n  thrown in /tmp/tmprgynenx0.php\
    \ on line 18\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fibs = fib_sequence(50);\n    $prime_fibs = [];\n\
    \    foreach ($fibs as $fib) {\n        if (is_prime($fib)) {\n            $prime_fibs[]\
    \ = $fib;\n        }\n    }\n    return $prime_fibs[$n - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fib_sequence()\
    \ in /tmp/tmpndhwd0sp.php:14\nStack trace:\n#0 /tmp/tmpndhwd0sp.php(25): prime_fib(1)\n\
    #1 /tmp/tmpndhwd0sp.php(29): candidate(1)\n#2 /tmp/tmpndhwd0sp.php(41): test()\n\
    #3 {main}\n  thrown in /tmp/tmpndhwd0sp.php on line 14\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $counter = 2;\n    $i = 1;\n    $j = 2;\n    while\
    \ (true) {\n        $temp = $i + $j;\n        $i = $j;\n        $j = $temp;\n\
    \        if (is_prime($j)) {\n            $counter += 1;\n        }\n        if\
    \ ($counter == $n) {\n            return $j;\n        }\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp2ynsoqay.php:21\nStack trace:\n#0 /tmp/tmp2ynsoqay.php(31): prime_fib(1)\n\
    #1 /tmp/tmp2ynsoqay.php(35): candidate(1)\n#2 /tmp/tmp2ynsoqay.php(47): test()\n\
    #3 {main}\n  thrown in /tmp/tmp2ynsoqay.php on line 21\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $fib_num = 2;\n  $fib_num_next = 3;\n  $counter =\
    \ 2;\n  $counter_next = 3;\n  if ($n == 1) {\n    return $fib_num;\n  }\n  else\
    \ {\n    while ($counter < $n) {\n      $counter_next++;\n      $fib_num_temp\
    \ = $fib_num;\n      $fib_num = $fib_num_next;\n      $fib_num_next = $fib_num_temp\
    \ + $fib_num_next;\n      if (is_prime($fib_num_next)) {\n        $counter++;\n\
    \      }\n    }\n    return $fib_num_next;\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpeqbtw1dm.php:27\nStack trace:\n#0 /tmp/tmpeqbtw1dm.php(36): prime_fib(3)\n\
    #1 /tmp/tmpeqbtw1dm.php(42): candidate(3)\n#2 /tmp/tmpeqbtw1dm.php(52): test()\n\
    #3 {main}\n  thrown in /tmp/tmpeqbtw1dm.php on line 27\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $fibs = [];\n  $i = 1;\n  $fib = 1;\n  while ($i <=\
    \ $n) {\n    if (is_prime($fib)) {\n      $fibs[] = $fib;\n      $i++;\n    }\n\
    \    $fib = fib($fib);\n  }\n  return $fibs[$n - 1];\n}\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpjwi1_96s.php:18\nStack trace:\n#0 /tmp/tmpjwi1_96s.php(27): prime_fib(1)\n\
    #1 /tmp/tmpjwi1_96s.php(31): candidate(1)\n#2 /tmp/tmpjwi1_96s.php(43): test()\n\
    #3 {main}\n  thrown in /tmp/tmpjwi1_96s.php on line 18\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 0) {\n        throw new Exception(\"Error:\
    \ Number must be greater than zero.\");\n    }\n    if ($n == 0) {\n        return\
    \ 0;\n    }\n    $fib_numbers = array(1, 2);\n    $i = 2;\n    while ($i < $n)\
    \ {\n        $next_fib = $fib_numbers[$i - 1] + $fib_numbers[$i - 2];\n      \
    \  if (check_prime($next_fib)) {\n            $fib_numbers[] = $next_fib;\n  \
    \          $i++;\n        }\n    }\n    return $fib_numbers[$i - 1];\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcc2lydlr.php:38\n\
    Stack trace:\n#0 /tmp/tmpcc2lydlr.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpcc2lydlr.php\
    \ on line 38\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $i = 0;\n    $a = 0;\n    $b = 1;\n    while ($i\
    \ < $n) {\n        $a = $b;\n        $b = fib($a);\n        if (is_prime($b))\
    \ {\n            $i++;\n        }\n    }\n    return $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fib() in /tmp/tmpq9w0e03c.php:19\n\
    Stack trace:\n#0 /tmp/tmpq9w0e03c.php(28): prime_fib(1)\n#1 /tmp/tmpq9w0e03c.php(32):\
    \ candidate(1)\n#2 /tmp/tmpq9w0e03c.php(44): test()\n#3 {main}\n  thrown in /tmp/tmpq9w0e03c.php\
    \ on line 19\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $arr = [];\n  $current_fib_num = 1;\n  $previous_fib_num\
    \ = 0;\n  for ($i = 0; $i < $n; $i++) {\n    $temp = $current_fib_num;\n    $current_fib_num\
    \ += $previous_fib_num;\n    $previous_fib_num = $temp;\n    if (is_prime($current_fib_num))\
    \ {\n      $arr[] = $current_fib_num;\n    }\n  }\n  return $arr[count($arr) -\
    \ 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp1zn87wdq.php:21\nStack trace:\n#0 /tmp/tmp1zn87wdq.php(29): prime_fib(1)\n\
    #1 /tmp/tmp1zn87wdq.php(33): candidate(1)\n#2 /tmp/tmp1zn87wdq.php(45): test()\n\
    #3 {main}\n  thrown in /tmp/tmp1zn87wdq.php on line 21\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$prime_fib = array(2, 3, 5, 13, 89);\n\tif ($n < count($prime_fib))\
    \ {\n\t\treturn $prime_fib[$n];\n\t}\n\telse {\n\t\t$i = count($prime_fib) - 1;\n\
    \t\twhile ($i++ < $n) {\n\t\t\t$prime_fib[] = next_prime_fib($prime_fib);\n\t\t\
    }\n\t\treturn $prime_fib[$n];\n\t}\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmvv83wms.php:32\n\
    Stack trace:\n#0 /tmp/tmpmvv83wms.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpmvv83wms.php\
    \ on line 32\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$array = [2, 3];\n\tfor ($i = 2; $i < $n; $i++) {\n\
    \t\t$next = $array[$i - 1] + $array[$i - 2];\n\t\tif (is_prime($next)) {\n\t\t\
    \t$array[] = $next;\n\t\t} else {\n\t\t\t$i--;\n\t\t}\n\t}\n\treturn $array[$n\
    \ - 1];\n}\n\necho prime_fib(1);\necho prime_fib(2);\necho prime_fib(3);\necho\
    \ prime_fib(4);\necho prime_fib(5);\necho prime_fib(6);\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "23\nFatal error: Uncaught Error: Call to undefined function is_prime()\
    \ in /tmp/tmp9ahggj6v.php:17\nStack trace:\n#0 /tmp/tmp9ahggj6v.php(28): prime_fib(3)\n\
    #1 {main}\n  thrown in /tmp/tmp9ahggj6v.php on line 17\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $prime_fibs = array();\n    $prev1 = 2;\n    $prev2\
    \ = 3;\n    $i = 3;\n    while (true) {\n        $fib = $prev1 + $prev2;\n   \
    \     if (is_prime($fib)) {\n            $prime_fibs[] = $fib;\n            if\
    \ (count($prime_fibs) == $n) {\n                return $fib;\n            }\n\
    \        }\n        $prev1 = $prev2;\n        $prev2 = $fib;\n        $i++;\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpz1zh07gj.php:20\nStack trace:\n#0 /tmp/tmpz1zh07gj.php(33): prime_fib(1)\n\
    #1 /tmp/tmpz1zh07gj.php(37): candidate(1)\n#2 /tmp/tmpz1zh07gj.php(49): test()\n\
    #3 {main}\n  thrown in /tmp/tmpz1zh07gj.php on line 20\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$a = 2;\n\t$b = 3;\n\t$count = 2;\n\twhile (true)\
    \ {\n\t\t$fib = $a + $b;\n\t\tif (is_prime($fib)) {\n\t\t\t$count++;\n\t\t\tif\
    \ ($count == $n) {\n\t\t\t\treturn $fib;\n\t\t\t}\n\t\t}\n\t\t$a = $b;\n\t\t$b\
    \ = $fib;\n\t}\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp_b890bgq.php:19\nStack trace:\n#0 /tmp/tmp_b890bgq.php(31): prime_fib(1)\n\
    #1 /tmp/tmp_b890bgq.php(35): candidate(1)\n#2 /tmp/tmp_b890bgq.php(47): test()\n\
    #3 {main}\n  thrown in /tmp/tmp_b890bgq.php on line 19\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $fibs = fibonacci_sequence($n);\n  return $fibs[count($fibs)\
    \ - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fibonacci_sequence()\
    \ in /tmp/tmplcp7jhat.php:14\nStack trace:\n#0 /tmp/tmplcp7jhat.php(19): prime_fib(1)\n\
    #1 /tmp/tmplcp7jhat.php(23): candidate(1)\n#2 /tmp/tmplcp7jhat.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmplcp7jhat.php on line 14\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fibArray = array(2, 3);\n    $i = 2;\n    while\
    \ (count($fibArray) < $n) {\n        $fibArray[$i] = $fibArray[$i - 1] + $fibArray[$i\
    \ - 2];\n        $i++;\n    }\n    return is_prime($fibArray[$n - 1]) ? $fibArray[$n\
    \ - 1] : 0;\n}\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpdwrfuqnc.php:20\nStack trace:\n#0 /tmp/tmpdwrfuqnc.php(23): prime_fib(1)\n\
    #1 /tmp/tmpdwrfuqnc.php(27): candidate(1)\n#2 /tmp/tmpdwrfuqnc.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmpdwrfuqnc.php on line 20\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$fib = fibonacci($n);\n\treturn is_prime($fib) ? $fib\
    \ : prime_fib($n + 1);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fibonacci() in\
    \ /tmp/tmpmnomh32v.php:14\nStack trace:\n#0 /tmp/tmpmnomh32v.php(19): prime_fib(1)\n\
    #1 /tmp/tmpmnomh32v.php(23): candidate(1)\n#2 /tmp/tmpmnomh32v.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmpmnomh32v.php on line 14\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n < 1) {\n        return -1;\n    }\n    $count\
    \ = 0;\n    $fib1 = 1;\n    $fib2 = 1;\n    while ($count < $n) {\n        $fib_next\
    \ = $fib1 + $fib2;\n        if (is_prime($fib_next)) {\n            $count++;\n\
    \        }\n        $fib1 = $fib2;\n        $fib2 = $fib_next;\n    }\n    return\
    \ $fib2;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpsaeqfxay.php:22\nStack trace:\n#0 /tmp/tmpsaeqfxay.php(32): prime_fib(1)\n\
    #1 /tmp/tmpsaeqfxay.php(36): candidate(1)\n#2 /tmp/tmpsaeqfxay.php(48): test()\n\
    #3 {main}\n  thrown in /tmp/tmpsaeqfxay.php on line 22\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\tif ($n < 1) {\n\t\tthrow new Exception('prime_fib\
    \ is not defined for n < 1');\n\t}\n\t$num = 0;\n\t$fib = 1;\n\t$prevFib = 0;\n\
    \t$count = 0;\n\twhile ($count < $n) {\n\t\tif (is_prime($fib)) {\n\t\t\t$count++;\n\
    \t\t\t$num = $fib;\n\t\t}\n\t\t$newFib = $fib + $prevFib;\n\t\t$prevFib = $fib;\n\
    \t\t$fib = $newFib;\n\t}\n\treturn $num;\n}\n\nfunction candidate(...$args) {\n\
    \    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp9rqarfct.php:22\nStack trace:\n#0 /tmp/tmp9rqarfct.php(34): prime_fib(1)\n\
    #1 /tmp/tmp9rqarfct.php(38): candidate(1)\n#2 /tmp/tmp9rqarfct.php(50): test()\n\
    #3 {main}\n  thrown in /tmp/tmp9rqarfct.php on line 22\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fibs = array();\n    $fibs[0] = 1;\n    $fibs[1]\
    \ = 1;\n    $i = 2;\n    while ($n > 0) {\n        $fibs[$i] = $fibs[$i - 1] +\
    \ $fibs[$i - 2];\n        if (is_prime($fibs[$i])) {\n            $n--;\n    \
    \    }\n        $i++;\n    }\n    return $fibs[$i - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp3pxpdtnj.php:20\nStack trace:\n#0 /tmp/tmp3pxpdtnj.php(29): prime_fib(1)\n\
    #1 /tmp/tmp3pxpdtnj.php(33): candidate(1)\n#2 /tmp/tmp3pxpdtnj.php(45): test()\n\
    #3 {main}\n  thrown in /tmp/tmp3pxpdtnj.php on line 20\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fib_num = 1;\n    $fib_num_prev = 1;\n    $counter\
    \ = 1;\n    $found = false;\n    while ($found == false) {\n        $fib_num_prev_prev\
    \ = $fib_num_prev;\n        $fib_num_prev = $fib_num;\n        $fib_num = $fib_num_prev\
    \ + $fib_num_prev_prev;\n        if (is_prime($fib_num)) {\n            $counter++;\n\
    \            if ($counter == $n) {\n                $found = true;\n         \
    \   }\n        }\n    }\n    return $fib_num;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmphriq2iwt.php:22\nStack trace:\n#0 /tmp/tmphriq2iwt.php(33): prime_fib(1)\n\
    #1 /tmp/tmphriq2iwt.php(37): candidate(1)\n#2 /tmp/tmphriq2iwt.php(49): test()\n\
    #3 {main}\n  thrown in /tmp/tmphriq2iwt.php on line 22\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$a = 1;\n\t$b = 1;\n\t$c = 2;\n\t$number = 0;\n\t\
    for ($i = 1; $i <= $n; $i++) {\n\t\tif (is_prime($c)) {\n\t\t\t$number = $c;\n\
    \t\t}\n\t\t$c = $a + $b;\n\t\t$a = $b;\n\t\t$b = $c;\n\t}\n\treturn $number;\n\
    }\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpzjla340g.php:19\nStack trace:\n#0 /tmp/tmpzjla340g.php(29): prime_fib(1)\n\
    #1 /tmp/tmpzjla340g.php(33): candidate(1)\n#2 /tmp/tmpzjla340g.php(45): test()\n\
    #3 {main}\n  thrown in /tmp/tmpzjla340g.php on line 19\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $l1 = 2;\n  $l2 = 3;\n  $counter = 1;\n  while (true)\
    \ {\n    $fib = $l1 + $l2;\n    if (is_prime($fib)) {\n      $counter++;\n   \
    \   if ($counter == $n) {\n        return $fib;\n      }\n    }\n    $l1 = $l2;\n\
    \    $l2 = $fib;\n  }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpjtuf4iw9.php:19\nStack trace:\n#0 /tmp/tmpjtuf4iw9.php(31): prime_fib(1)\n\
    #1 /tmp/tmpjtuf4iw9.php(35): candidate(1)\n#2 /tmp/tmpjtuf4iw9.php(47): test()\n\
    #3 {main}\n  thrown in /tmp/tmpjtuf4iw9.php on line 19\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$i = 1;\n\t$fib = 0;\n\t$fib1 = 0;\n\t$fib2 = 1;\n\
    \twhile($i <= $n) {\n\t\t$fib = $fib1 + $fib2;\n\t\tif(is_prime($fib)) {\n\t\t\
    \t$fib1 = $fib2;\n\t\t\t$fib2 = $fib;\n\t\t\t$i++;\n\t\t} else {\n\t\t\t$fib1\
    \ = $fib2;\n\t\t\t$fib2 = $fib;\n\t\t}\n\t}\n\treturn $fib;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp6t449jvy.php:20\nStack trace:\n#0 /tmp/tmp6t449jvy.php(33): prime_fib(1)\n\
    #1 /tmp/tmp6t449jvy.php(37): candidate(1)\n#2 /tmp/tmp6t449jvy.php(49): test()\n\
    #3 {main}\n  thrown in /tmp/tmp6t449jvy.php on line 20\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n === 1) return 2;\n    $i = 1;\n    $num1\
    \ = 1;\n    $num2 = 1;\n    while (true) {\n        $i++;\n        $fib = $num1\
    \ + $num2;\n        if (is_prime($fib)) {\n            $n--;\n            if ($n\
    \ === 0) return $fib;\n        }\n        $num1 = $num2;\n        $num2 = $fib;\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp5400susz.php:21\nStack trace:\n#0 /tmp/tmp5400susz.php(31): prime_fib(2)\n\
    #1 /tmp/tmp5400susz.php(36): candidate(2)\n#2 /tmp/tmp5400susz.php(47): test()\n\
    #3 {main}\n  thrown in /tmp/tmp5400susz.php on line 21\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $fibs = array(1, 2);\n  $index = 0;\n  while (count($fibs)\
    \ < $n + 1) {\n    array_push($fibs, $fibs[$index] + $fibs[$index + 1]);\n   \
    \ $index++;\n  }\n  $fibs = array_reverse($fibs);\n  foreach ($fibs as $fib) {\n\
    \    if (is_prime($fib)) {\n      return $fib;\n    }\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp21zyfi55.php:22\nStack trace:\n#0 /tmp/tmp21zyfi55.php(29): prime_fib(1)\n\
    #1 /tmp/tmp21zyfi55.php(33): candidate(1)\n#2 /tmp/tmp21zyfi55.php(45): test()\n\
    #3 {main}\n  thrown in /tmp/tmp21zyfi55.php on line 22\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$fibs = array(1, 1);\n\twhile (count($fibs) < $n)\
    \ {\n\t\t$fibs[] = $fibs[count($fibs) - 1] + $fibs[count($fibs) - 2];\n\t}\n\t\
    for ($i = 0; $i < count($fibs); $i++) {\n\t\tif (!is_prime($fibs[$i])) {\n\t\t\
    \tunset($fibs[$i]);\n\t\t}\n\t}\n\treturn $fibs[count($fibs) - 1];\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp78o1u7ue.php:19\nStack trace:\n#0 /tmp/tmp78o1u7ue.php(27): prime_fib(1)\n\
    #1 /tmp/tmp78o1u7ue.php(31): candidate(1)\n#2 /tmp/tmp78o1u7ue.php(43): test()\n\
    #3 {main}\n  thrown in /tmp/tmp78o1u7ue.php on line 19\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $prime_fib = 2;\n  $fib = array(1, 1);\n  $i = 2;\n\
    \  while ($n > 0) {\n    $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n    if (is_prime($fib[$i]))\
    \ {\n      $prime_fib = $fib[$i];\n      $n--;\n    }\n    $i++;\n  }\n  return\
    \ $prime_fib;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpeq2psw26.php:19\nStack trace:\n#0 /tmp/tmpeq2psw26.php(29): prime_fib(1)\n\
    #1 /tmp/tmpeq2psw26.php(33): candidate(1)\n#2 /tmp/tmpeq2psw26.php(45): test()\n\
    #3 {main}\n  thrown in /tmp/tmpeq2psw26.php on line 19\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = 2;\n    $b = 3;\n    for ($i = 1; $i < $n;\
    \ $i++) {\n        $c = $a + $b;\n        $a = $b;\n        $b = $c;\n       \
    \ while (1 == 1) {\n            if (is_prime($b)) {\n                break;\n\
    \            }\n            $b = $b + 1;\n        }\n    }\n    return $b;\n}\n\
    \nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoec24uv1.php:35\n\
    Stack trace:\n#0 /tmp/tmpoec24uv1.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpoec24uv1.php\
    \ on line 35\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $k = 2;\n  $i = 0;\n  while ($i < $n) {\n    if (is_prime($k)\
    \ && is_fib($k)) {\n      $i++;\n    }\n    $k++;\n  }\n  return $k - 1;\n}\n\n\
    function candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmphy2y71b1.php:17\nStack trace:\n#0 /tmp/tmphy2y71b1.php(26): prime_fib(1)\n\
    #1 /tmp/tmphy2y71b1.php(30): candidate(1)\n#2 /tmp/tmphy2y71b1.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmphy2y71b1.php on line 17\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = 0;\n    $b = 1;\n    $i = 0;\n    while ($i\
    \ < $n) {\n        $fib = $a + $b;\n        if (is_prime($fib)) {\n          \
    \  $i++;\n        }\n        $a = $b;\n        $b = $fib;\n    }\n    return $fib;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp7cw3a69v.php:19\nStack trace:\n#0 /tmp/tmp7cw3a69v.php(29): prime_fib(1)\n\
    #1 /tmp/tmp7cw3a69v.php(33): candidate(1)\n#2 /tmp/tmp7cw3a69v.php(45): test()\n\
    #3 {main}\n  thrown in /tmp/tmp7cw3a69v.php on line 19\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  if ($n == 1) {\n    return 2;\n  }\n  if ($n == 2)\
    \ {\n    return 3;\n  }\n  $i = 2;\n  $j = 3;\n  $count = 2;\n  $result = 5;\n\
    \  while ($count < $n) {\n    if (is_prime($result)) {\n      $count++;\n    }\n\
    \    $result = $i + $j;\n    $i = $j;\n    $j = $result;\n  }\n  return $result;\n\
    }\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp78542spe.php:25\nStack trace:\n#0 /tmp/tmp78542spe.php(35): prime_fib(3)\n\
    #1 /tmp/tmp78542spe.php(41): candidate(3)\n#2 /tmp/tmp78542spe.php(51): test()\n\
    #3 {main}\n  thrown in /tmp/tmp78542spe.php on line 25\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$fibs = [1,1];\n\t$i = 2;\n\tdo {\n\t\t$fibs[$i] =\
    \ $fibs[$i-1] + $fibs[$i-2];\n\t\t$i++;\n\t} while ($fibs[$i-1] < 4000000);\n\t\
    $fibs = array_slice($fibs, 1);\n\t$i = 0;\n\tdo {\n\t\tif (is_prime($fibs[$i]))\
    \ {\n\t\t\t$i++;\n\t\t} else {\n\t\t\tunset($fibs[$i]);\n\t\t}\n\t} while ($i\
    \ < count($fibs));\n\treturn $fibs[$n-1];\n}\n\nfunction candidate(...$args) {\n\
    \    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpd98e63cp.php:23\nStack trace:\n#0 /tmp/tmpd98e63cp.php(33): prime_fib(1)\n\
    #1 /tmp/tmpd98e63cp.php(37): candidate(1)\n#2 /tmp/tmpd98e63cp.php(49): test()\n\
    #3 {main}\n  thrown in /tmp/tmpd98e63cp.php on line 23\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphpmd7wj3.php:22\n\
    Stack trace:\n#0 /tmp/tmphpmd7wj3.php(34): test()\n#1 {main}\n  thrown in /tmp/tmphpmd7wj3.php\
    \ on line 22\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fib = [2, 3];\n    $prime = [2, 3];\n    $f = 4;\n\
    \    $p = 3;\n    for ($i = 2; $i <= $n; $i++) {\n        while (true) {\n   \
    \         $f = $fib[$i - 1] + $fib[$i - 2];\n            if (is_prime($f)) {\n\
    \                $fib[] = $f;\n                $p++;\n                $prime[]\
    \ = $f;\n                break;\n            }\n        }\n    }\n    return $prime[$p\
    \ - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 2 in /tmp/tmp7pvnhhl3.php on line 29\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp7pvnhhl3.php:37\nStack\
    \ trace:\n#0 /tmp/tmp7pvnhhl3.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp7pvnhhl3.php\
    \ on line 37\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fibs = [1, 2];\n    while (count($fibs) < $n) {\n\
    \        $fibs[] = end($fibs) + $fibs[count($fibs) - 2];\n    }\n    for ($i =\
    \ count($fibs) - 1; $i >= 0; $i--) {\n        if (is_prime($fibs[$i])) {\n   \
    \         return $fibs[$i];\n        }\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpasabgp28.php:19\nStack trace:\n#0 /tmp/tmpasabgp28.php(26): prime_fib(1)\n\
    #1 /tmp/tmpasabgp28.php(30): candidate(1)\n#2 /tmp/tmpasabgp28.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpasabgp28.php on line 19\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$x = 2;\n\t$y = 3;\n\t$counter = 2;\n\t$temp = 0;\n\
    \t\n\twhile (1) {\n\t\t$temp = $x + $y;\n\t\tif (is_prime($temp)) {\n\t\t\t$counter++;\n\
    \t\t\tif ($counter == $n) {\n\t\t\t\treturn $temp;\n\t\t\t}\n\t\t}\n\t\t$x = $y;\n\
    \t\t$y = $temp;\n\t}\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpeu4qapib.php:21\nStack trace:\n#0 /tmp/tmpeu4qapib.php(33): prime_fib(1)\n\
    #1 /tmp/tmpeu4qapib.php(37): candidate(1)\n#2 /tmp/tmpeu4qapib.php(49): test()\n\
    #3 {main}\n  thrown in /tmp/tmpeu4qapib.php on line 21\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    //check if n is a integer or not\n    if(!is_int($n))\n\
    \        return 0;\n    //check if n is bigger than 1, otherwise we can't proceed\n\
    \    if($n < 1)\n        return 0;\n    //start with the 2 and 3 because 2,3 are\
    \ the first prime numbers\n    $first = 2;\n    $second = 3;\n    $fibonacci =\
    \ 0;\n    $counter = 1;\n    $prime_counter = 0;\n    //continue until we get\
    \ the prime number and it's also a fibonacci number\n    while(true){\n      \
    \  //this will hold the value that is a prime number\n        if(is_prime($first)){\n\
    \            $prime_counter++;\n            if($prime_counter == $n){\n      \
    \          return $first;\n            }\n        }\n        //this will hold\
    \ the value that is a fibonacci number\n        if($first == fibonacci($counter)){\n\
    \            $fibonacci = $first;\n            $counter++;\n        }\n      \
    \  //this is the place where we check if the $first is prime and fibonacci number\n\
    \        if($first == $fibonacci){\n            if(is_prime($first)){\n      \
    \          return $first;\n            }\n        }\n        //update the values\
    \ for the loop\n        $first = $second;\n        $second = $first + $second;\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpfq0froqa.php:29\nStack trace:\n#0 /tmp/tmpfq0froqa.php(53): prime_fib(1)\n\
    #1 /tmp/tmpfq0froqa.php(57): candidate(1)\n#2 /tmp/tmpfq0froqa.php(69): test()\n\
    #3 {main}\n  thrown in /tmp/tmpfq0froqa.php on line 29\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $i = 0;\n    $n1 = 1;\n    $n2 = 1;\n    $n3 = 0;\n\
    \    while ($i < $n) {\n        $n3 = $n1 + $n2;\n        $n1 = $n2;\n       \
    \ $n2 = $n3;\n        if (is_prime($n3)) {\n            $i++;\n        }\n   \
    \ }\n    return $n3;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp8bpx5oej.php:22\nStack trace:\n#0 /tmp/tmp8bpx5oej.php(30): prime_fib(1)\n\
    #1 /tmp/tmp8bpx5oej.php(34): candidate(1)\n#2 /tmp/tmp8bpx5oej.php(46): test()\n\
    #3 {main}\n  thrown in /tmp/tmp8bpx5oej.php on line 22\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$a = 1;\n\t$b = 1;\n\t$c = 0;\n\t$number = 0;\n\t\
    $prime = array();\n\t$i = 0;\n\t$fib = array();\n\twhile ($i <= $n) {\n\t\tif\
    \ (is_prime($number)) {\n\t\t\tarray_push($prime, $number);\n\t\t\t$i++;\n\t\t\
    }\n\t\t$number++;\n\t}\n\t$i = 0;\n\twhile ($i <= count($prime)) {\n\t\t$j = 0;\n\
    \t\t$x = 1;\n\t\twhile ($j <= $i) {\n\t\t\t$x = $x + $j;\n\t\t\t$j++;\n\t\t}\n\
    \t\tarray_push($fib, $x);\n\t\t$i++;\n\t}\n\t\n\t$result = array_intersect($prime,\
    \ $fib);\n\treturn $result[$n-1];\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpy4friv3l.php:22\nStack trace:\n#0 /tmp/tmpy4friv3l.php(45): prime_fib(1)\n\
    #1 /tmp/tmpy4friv3l.php(49): candidate(1)\n#2 /tmp/tmpy4friv3l.php(61): test()\n\
    #3 {main}\n  thrown in /tmp/tmpy4friv3l.php on line 22\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $fib = [1, 1];\n  $i = 1;\n  while (count($fib) <\
    \ $n) {\n    $i++;\n    $fib[] = bcadd($fib[$i - 1], $fib[$i - 2]);\n  }\n  if\
    \ ($i == 1) {\n    return 2;\n  }\n  $fib = array_slice($fib, -2);\n  return prime_count($fib[1],\
    \ $fib[0]);\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd7vjfgq7.php:33\n\
    Stack trace:\n#0 /tmp/tmpd7vjfgq7.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpd7vjfgq7.php\
    \ on line 33\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$a = 1;\n\t$b = 1;\n\t$i = 1;\n\t$array = array();\n\
    \twhile ($i <= $n) {\n\t\tif (is_prime($b)) {\n\t\t\t$array[] = $b;\n\t\t\t$i++;\n\
    \t\t}\n\t\t$c = $a + $b;\n\t\t$a = $b;\n\t\t$b = $c;\n\t}\n\treturn $array[count($array)\
    \ - 1];\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp3pmhti5z.php:19\nStack trace:\n#0 /tmp/tmp3pmhti5z.php(31): prime_fib(1)\n\
    #1 /tmp/tmp3pmhti5z.php(35): candidate(1)\n#2 /tmp/tmp3pmhti5z.php(47): test()\n\
    #3 {main}\n  thrown in /tmp/tmp3pmhti5z.php on line 19\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fib = [];\n    $fib[] = 2;\n    $fib[] = 3;\n \
    \   $fib[] = 5;\n    $i = 4;\n    while ($i <= $n) {\n        if (is_prime($fib[$i\
    \ - 1] + $fib[$i - 2])) {\n            $fib[] = $fib[$i - 1] + $fib[$i - 2];\n\
    \            $i++;\n        }\n    }\n    return $fib[$n - 1];\n}\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp8stvtg19.php:20\nStack trace:\n#0 /tmp/tmp8stvtg19.php(28): prime_fib(4)\n\
    #1 /tmp/tmp8stvtg19.php(35): candidate(4)\n#2 /tmp/tmp8stvtg19.php(44): test()\n\
    #3 {main}\n  thrown in /tmp/tmp8stvtg19.php on line 20\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$a = 1;\n\t$b = 1;\n\t$c = 2;\n\t$count = 1;\n\twhile\
    \ ($count < $n) {\n\t\tif (is_prime($c)) {\n\t\t\t$count++;\n\t\t}\n\t\t$a = $b;\n\
    \t\t$b = $c;\n\t\t$c = $a + $b;\n\t}\n\treturn $c;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp3p8w4c48.php:19\nStack trace:\n#0 /tmp/tmp3p8w4c48.php(30): prime_fib(2)\n\
    #1 /tmp/tmp3p8w4c48.php(35): candidate(2)\n#2 /tmp/tmp3p8w4c48.php(46): test()\n\
    #3 {main}\n  thrown in /tmp/tmp3p8w4c48.php on line 19\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $count = 0;\n    $i = 0;\n    while ($count != $n)\
    \ {\n        $i++;\n        if (is_prime(fib($i))) {\n            $count++;\n\
    \        }\n    }\n    return fib($i);\n}\n\nfunction candidate(...$args) {\n\
    \    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpzkkpux9z.php:18\nStack trace:\n#0 /tmp/tmpzkkpux9z.php(26): prime_fib(1)\n\
    #1 /tmp/tmpzkkpux9z.php(30): candidate(1)\n#2 /tmp/tmpzkkpux9z.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpzkkpux9z.php on line 18\n"
  timestamp: 1660028555
- exit_code: -1
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$i = 0;\n\t$fib = 1;\n\t$prevFib = 0;\n\t$currPrime\
    \ = 2;\n\t$currFibPrime = 1;\n\twhile ($i < $n) {\n\t\t$nextPrime = $currPrime\
    \ + 1;\n\t\t$nextFib = $fib + $prevFib;\n\t\t$prevFib = $fib;\n\t\t$fib = $nextFib;\n\
    \t\twhile ($nextPrime < $nextFib) {\n\t\t\t$prime = true;\n\t\t\tfor ($j = 2;\
    \ $j < $nextPrime; $j++) {\n\t\t\t\tif ($nextPrime % $j == 0) {\n\t\t\t\t\t$prime\
    \ = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ($prime) {\n\t\t\t\t\
    $currPrime = $nextPrime;\n\t\t\t\tif ($currPrime == $nextFib) {\n\t\t\t\t\t$currFibPrime\
    \ = $currPrime;\n\t\t\t\t\t$i++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t$nextPrime++;\n\t\t\
    }\n\t}\n\treturn $currFibPrime;\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660028560
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  for ($i = 2, $fib = 1, $count = 0; $count < $n; $i++)\
    \ {\n    if (is_prime($i) && is_fib($i)) {\n      $fib = $i;\n      $count++;\n\
    \    }\n  }\n  return $fib;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpaqwt05zl.php:15\nStack trace:\n#0 /tmp/tmpaqwt05zl.php(24): prime_fib(1)\n\
    #1 /tmp/tmpaqwt05zl.php(28): candidate(1)\n#2 /tmp/tmpaqwt05zl.php(40): test()\n\
    #3 {main}\n  thrown in /tmp/tmpaqwt05zl.php on line 15\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    // Your code here\n}\n```\n\n```\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "`" in /tmp/tmptq4dfxv8.php on line
    16

    '
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t// TODO\n}\n\nfunction candidate(...$args) {\n   \
    \ return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8m3yxj9x.php:22\n\
    Stack trace:\n#0 /tmp/tmp8m3yxj9x.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp8m3yxj9x.php\
    \ on line 22\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphpmd7wj3.php:22\n\
    Stack trace:\n#0 /tmp/tmphpmd7wj3.php(34): test()\n#1 {main}\n  thrown in /tmp/tmphpmd7wj3.php\
    \ on line 22\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $a = 2;\n    $b = 3;\n    $i = 2;\n    while($i\
    \ <= $n) {\n        $fib = $a + $b;\n        if(is_prime($fib)) {\n          \
    \  $i++;\n        }\n        $a = $b;\n        $b = $fib;\n    }\n    return $fib;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $fib in /tmp/tmpwdh5wvwp.php on line 25\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwdh5wvwp.php:33\nStack\
    \ trace:\n#0 /tmp/tmpwdh5wvwp.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpwdh5wvwp.php\
    \ on line 33\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphpmd7wj3.php:22\n\
    Stack trace:\n#0 /tmp/tmphpmd7wj3.php(34): test()\n#1 {main}\n  thrown in /tmp/tmphpmd7wj3.php\
    \ on line 22\n"
  timestamp: 1660028554
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    if ($n == 1) return 2;\n    if ($n == 2) return\
    \ 3;\n    if ($n == 3) return 5;\n    if ($n == 4) return 13;\n    if ($n == 5)\
    \ return 89;\n    return 7 * prime_fib($n - 1) - prime_fib($n - 2);\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi1sqd80l.php:32\n\
    Stack trace:\n#0 /tmp/tmpi1sqd80l.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpi1sqd80l.php\
    \ on line 32\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $fib = array(1, 1);\n  $prime = 2;\n  $n = $n - 1;\n\
    \  $fib_count = 2;\n  while ($fib_count <= $n) {\n    $fib_count = count($fib);\n\
    \    $fib[$fib_count] = $fib[$fib_count - 1] + $fib[$fib_count - 2];\n    if (is_prime($fib[$fib_count]))\n\
    \      $prime = $fib[$fib_count];\n  }\n  return $prime;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2cvaqusi.php:33\n\
    Stack trace:\n#0 /tmp/tmp2cvaqusi.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp2cvaqusi.php\
    \ on line 33\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk_0qjok1.php:21\n\
    Stack trace:\n#0 /tmp/tmpk_0qjok1.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpk_0qjok1.php\
    \ on line 21\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$f = 0;\n\t$f2 = 0;\n\t$i = 0;\n\twhile (true) {\n\
    \t\t$t = $f;\n\t\t$f = $f2;\n\t\t$f2 = $t + $f2;\n\t\tif ($f2 == 0) {\n\t\t\t\
    $f2 = 1;\n\t\t}\n\t\tif (is_prime($f2)) {\n\t\t\t$i++;\n\t\t\tif ($i == $n) {\n\
    \t\t\t\treturn $f2;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction candidate(...$args) {\n\
    \    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp1qht9byn.php:24\nStack trace:\n#0 /tmp/tmp1qht9byn.php(34): prime_fib(1)\n\
    #1 /tmp/tmp1qht9byn.php(38): candidate(1)\n#2 /tmp/tmp1qht9byn.php(50): test()\n\
    #3 {main}\n  thrown in /tmp/tmp1qht9byn.php on line 24\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$fibs = [1, 2];\n\twhile(count($fibs) < $n + 1) {\n\
    \t\t$fibs[] = $fibs[count($fibs) - 1] + $fibs[count($fibs) - 2];\n\t}\n\t$res\
    \ = array_filter($fibs, function($n) {\n\t\tfor($i = 2; $i < $n; $i++) {\n\t\t\
    \tif($n % $i == 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\
    \t});\n\treturn $res[$n - 1];\n}\necho prime_fib(1) . \"\\n\";\necho prime_fib(2)\
    \ . \"\\n\";\necho prime_fib(3) . \"\\n\";\necho prime_fib(4) . \"\\n\";\necho\
    \ prime_fib(5) . \"\\n\";\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n2\n3\n5\n\nWarning: Undefined array key 4 in /tmp/tmppik858pv.php on\
    \ line 26\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppik858pv.php:39\n\
    Stack trace:\n#0 /tmp/tmppik858pv.php(51): test()\n#1 {main}\n  thrown in /tmp/tmppik858pv.php\
    \ on line 39\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    // Fill this in.\n}\n\necho prime_fib(1) . \"\\\
    n\";\necho prime_fib(2) . \"\\n\";\necho prime_fib(3) . \"\\n\";\necho prime_fib(4)\
    \ . \"\\n\";\necho prime_fib(5) . \"\\n\";\nfunction candidate(...$args) {\n \
    \   return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\n\n\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpio55ug49.php:27\n\
    Stack trace:\n#0 /tmp/tmpio55ug49.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpio55ug49.php\
    \ on line 27\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  // Implement your code here\n}\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv178pia2.php:21\n\
    Stack trace:\n#0 /tmp/tmpv178pia2.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpv178pia2.php\
    \ on line 21\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$fib = 2;\n\t$i = 1;\n\t$tmp = 0;\n\twhile ($i < $n)\
    \ {\n\t\t$fib = fibonacci($fib);\n\t\tif (is_prime($fib)) {\n\t\t\t$i++;\n\t\t\
    }\n\t}\n\treturn $fib;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fibonacci() in\
    \ /tmp/tmp_a7maeq_.php:18\nStack trace:\n#0 /tmp/tmp_a7maeq_.php(27): prime_fib(2)\n\
    #1 /tmp/tmp_a7maeq_.php(32): candidate(2)\n#2 /tmp/tmp_a7maeq_.php(43): test()\n\
    #3 {main}\n  thrown in /tmp/tmp_a7maeq_.php on line 18\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fib = 1;\n    $lastFib = 1;\n    $primeFib = 2;\n\
    \    $primeCounter = 0;\n    while ($primeCounter < $n) {\n        $fib += $lastFib;\n\
    \        $lastFib = $fib - $lastFib;\n        if (isPrime($fib)) {\n         \
    \   $primeFib = $fib;\n            $primeCounter++;\n        }\n    }\n    return\
    \ $primeFib;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function isPrime() in\
    \ /tmp/tmpn8u02vix.php:21\nStack trace:\n#0 /tmp/tmpn8u02vix.php(30): prime_fib(1)\n\
    #1 /tmp/tmpn8u02vix.php(34): candidate(1)\n#2 /tmp/tmpn8u02vix.php(46): test()\n\
    #3 {main}\n  thrown in /tmp/tmpn8u02vix.php on line 21\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $i = 2;\n    $a = 1;\n    $b = 1;\n    $c = 0;\n\
    \    while ($i < $n) {\n        $c = $a + $b;\n        $a = $b;\n        $b =\
    \ $c;\n        if (is_prime($c)) {\n            $i++;\n        }\n    }\n    return\
    \ $c;\n}\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvhcc7u54.php:33\n\
    Stack trace:\n#0 /tmp/tmpvhcc7u54.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpvhcc7u54.php\
    \ on line 33\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $a = 0;\n  $b = 1;\n  $c = 1;\n  $i = 1;\n  while\
    \ ($i < $n) {\n    $c = $a + $b;\n    $a = $b;\n    $b = $c;\n    if (is_prime($c))\
    \ {\n      $i++;\n    }\n  }\n  return $c;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgobt5erz.php:34\n\
    Stack trace:\n#0 /tmp/tmpgobt5erz.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpgobt5erz.php\
    \ on line 34\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $nth_fib = 1;\n  $fibs = [0, 1];\n  $fib_num = 0;\n\
    \  while($nth_fib <= $n) {\n    $fib_num = fib($fibs);\n    if(is_prime($fib_num))\
    \ {\n      $nth_fib++;\n    }\n  }\n  return $fib_num;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fib() in /tmp/tmpwdjly3fq.php:18\n\
    Stack trace:\n#0 /tmp/tmpwdjly3fq.php(27): prime_fib(1)\n#1 /tmp/tmpwdjly3fq.php(31):\
    \ candidate(1)\n#2 /tmp/tmpwdjly3fq.php(43): test()\n#3 {main}\n  thrown in /tmp/tmpwdjly3fq.php\
    \ on line 18\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n\t$x = 1;\n\t$y = 1;\n\t$z = 2;\n\t$n--;\n\twhile($n--)\
    \ {\n\t\tif(is_prime($z)) $n++;\n\t\t$x = $y;\n\t\t$y = $z;\n\t\t$z = $x + $y;\n\
    \t}\n\treturn $z;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpyvxb717a.php:19\nStack trace:\n#0 /tmp/tmpyvxb717a.php(28): prime_fib(0)\n\
    #1 /tmp/tmpyvxb717a.php(33): candidate(2)\n#2 /tmp/tmpyvxb717a.php(44): test()\n\
    #3 {main}\n  thrown in /tmp/tmpyvxb717a.php on line 19\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $i = 0;\n  $fibs = [2, 3];\n  while (count($fibs)\
    \ < $n) {\n    $fibs[] = $fibs[$i] + $fibs[$i + 1];\n    $i++;\n  }\n  $primes\
    \ = array_filter($fibs, function($fib) {\n    for ($i = 2; $i <= sqrt($fib); $i++)\
    \ {\n      if ($fib % $i == 0) {\n        return false;\n      }\n    }\n    return\
    \ true;\n  });\n  return $primes[$n - 1];\n}\n\necho prime_fib(1) . \"\\n\";\n\
    echo prime_fib(2) . \"\\n\";\necho prime_fib(3) . \"\\n\";\necho prime_fib(4)\
    \ . \"\\n\";\necho prime_fib(5) . \"\\n\";\nfunction candidate(...$args) {\n \
    \   return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "2\n3\n5\n\nWarning: Undefined array key 3 in /tmp/tmpueg5o95s.php on line\
    \ 28\n\n13\n\nWarning: Undefined array key 3 in /tmp/tmpueg5o95s.php on line 28\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmpueg5o95s.php:44\nStack\
    \ trace:\n#0 /tmp/tmpueg5o95s.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpueg5o95s.php\
    \ on line 44\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $fibs = [1, 2];\n  $count = 0;\n  $i = 0;\n  while\
    \ ($count < $n) {\n    $fibs[] = array_sum(array_slice($fibs, -2));\n    if (is_prime($fibs[$i]))\
    \ {\n      $count++;\n    }\n    $i++;\n  }\n  return $fibs[$i - 1];\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpa31phv12.php:19\nStack trace:\n#0 /tmp/tmpa31phv12.php(28): prime_fib(1)\n\
    #1 /tmp/tmpa31phv12.php(32): candidate(1)\n#2 /tmp/tmpa31phv12.php(44): test()\n\
    #3 {main}\n  thrown in /tmp/tmpa31phv12.php on line 19\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    // YOUR CODE HERE\n    return 1;\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphnml3dr4.php:23\n\
    Stack trace:\n#0 /tmp/tmphnml3dr4.php(35): test()\n#1 {main}\n  thrown in /tmp/tmphnml3dr4.php\
    \ on line 23\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $i = 0;\n  $j = 1;\n  $k = 2;\n  while ($k <= $n)\
    \ {\n    $fib = $i + $j;\n    if (is_prime($fib)) {\n      $k++;\n    }\n    $i\
    \ = $j;\n    $j = $fib;\n  }\n  return $fib;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $fib in /tmp/tmp00mvxrq2.php on line 25\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmp00mvxrq2.php:33\nStack\
    \ trace:\n#0 /tmp/tmp00mvxrq2.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp00mvxrq2.php\
    \ on line 33\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $i = 1;\n    $a = 0;\n    $b = 1;\n    $prime_fib\
    \ = 0;\n    while ($i <= $n) {\n        $prime_fib = $a + $b;\n        $a = $b;\n\
    \        $b = $prime_fib;\n        if (gmp_prob_prime($prime_fib)) {\n       \
    \     $i++;\n        }\n    }\n    return $prime_fib;\n}\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function gmp_prob_prime()\
    \ in /tmp/tmp3cknkbml.php:22\nStack trace:\n#0 /tmp/tmp3cknkbml.php(29): prime_fib(1)\n\
    #1 /tmp/tmp3cknkbml.php(33): candidate(1)\n#2 /tmp/tmp3cknkbml.php(45): test()\n\
    #3 {main}\n  thrown in /tmp/tmp3cknkbml.php on line 22\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  if ($n === 1) {\n    return 2;\n  } else if ($n ===\
    \ 2) {\n    return 3;\n  } else {\n    return prime_fib($n - 1) + prime_fib($n\
    \ - 2);\n  }\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzd_qnhoc.php:31\n\
    Stack trace:\n#0 /tmp/tmpzd_qnhoc.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpzd_qnhoc.php\
    \ on line 31\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $current_fib = 1;\n  $prev_fib = 0;\n  $counter =\
    \ 1;\n  while ($counter <= $n) {\n    $next_fib = $current_fib + $prev_fib;\n\
    \    if (is_prime($next_fib)) {\n      $counter++;\n    }\n    $prev_fib = $current_fib;\n\
    \    $current_fib = $next_fib;\n  }\n  return $current_fib;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmp129y6kru.php:19\nStack trace:\n#0 /tmp/tmp129y6kru.php(29): prime_fib(1)\n\
    #1 /tmp/tmp129y6kru.php(33): candidate(1)\n#2 /tmp/tmp129y6kru.php(45): test()\n\
    #3 {main}\n  thrown in /tmp/tmp129y6kru.php on line 19\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  // TODO\n}\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbcg07y4j.php:21\n\
    Stack trace:\n#0 /tmp/tmpbcg07y4j.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpbcg07y4j.php\
    \ on line 21\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $k = 2;\n  $fib = 1;\n  while ($k <= $n) {\n    $fib\
    \ = fib($k);\n    if (prime($fib)) {\n      $k++;\n    }\n  }\n  return $fib;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !==\
    \ 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !== 1597)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 28657)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== 514229)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 433494437)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaqg40hbz.php:30\n\
    Stack trace:\n#0 /tmp/tmpaqg40hbz.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpaqg40hbz.php\
    \ on line 30\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n    $fib = [2, 3];\n    $i = 2;\n    $num = 0;\n   \
    \ while ($i < $n) {\n        $num = $fib[0] + $fib[1];\n        if (is_prime($num))\
    \ {\n            $fib = [$fib[1], $num];\n            $i++;\n        }\n    }\n\
    \    return $num;\n}\n\nfunction candidate(...$args) {\n    return prime_fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 13) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(5) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== 233) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1597) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 28657) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !==\
    \ 514229) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 433494437) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbbhz1akr.php:32\n\
    Stack trace:\n#0 /tmp/tmpbbhz1akr.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpbbhz1akr.php\
    \ on line 32\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $i = 0;\n  $fib = fib();\n  $prime = prime();\n  $res\
    \ = 0;\n  while ($i <= $n) {\n    $res = $fib();\n    if ($prime($res)) {\n  \
    \    $i++;\n    }\n  }\n  return $res;\n}\n\nfunction candidate(...$args) {\n\
    \    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function fib() in /tmp/tmpvdnv48js.php:15\n\
    Stack trace:\n#0 /tmp/tmpvdnv48js.php(28): prime_fib(1)\n#1 /tmp/tmpvdnv48js.php(32):\
    \ candidate(1)\n#2 /tmp/tmpvdnv48js.php(44): test()\n#3 {main}\n  thrown in /tmp/tmpvdnv48js.php\
    \ on line 15\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $fib = function($n) use (&$fib) {\n    if ($n <= 2)\
    \ {\n      return 1;\n    } else {\n      return $fib($n - 1) + $fib($n - 2);\n\
    \    }\n  };\n\n  for ($i = 1; $i < 100; $i++) {\n    $current = $fib($i);\n \
    \   if (is_prime($current)) {\n      $n--;\n      if ($n == 0) {\n        return\
    \ $current;\n      }\n    }\n  }\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(10) !== 433494437) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpu5jwkzqv.php:24\nStack trace:\n#0 /tmp/tmpu5jwkzqv.php(34): prime_fib(1)\n\
    #1 /tmp/tmpu5jwkzqv.php(38): candidate(1)\n#2 /tmp/tmpu5jwkzqv.php(50): test()\n\
    #3 {main}\n  thrown in /tmp/tmpu5jwkzqv.php on line 24\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  $prime_fib = [2, 3];\n  $i = 2;\n  $j = 1;\n  $k =\
    \ 0;\n  $fib_n = $i + $j;\n  while(count($prime_fib) < $n) {\n    if(is_prime($fib_n))\
    \ {\n      $prime_fib[] = $fib_n;\n    }\n    $k = $i + $j;\n    $i = $j;\n  \
    \  $j = $k;\n  }\n  return $prime_fib[$n - 1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpw6j6tuf7.php:20\nStack trace:\n#0 /tmp/tmpw6j6tuf7.php(31): prime_fib(3)\n\
    #1 /tmp/tmpw6j6tuf7.php(37): candidate(3)\n#2 /tmp/tmpw6j6tuf7.php(47): test()\n\
    #3 {main}\n  thrown in /tmp/tmpw6j6tuf7.php on line 20\n"
  timestamp: 1660028555
- exit_code: 255
  program: "<?php\n// prime_fib returns n-th number that is a Fibonacci number and\
    \ it's also prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>>\
    \ prime_fib(3)\n// 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\n\
    function prime_fib($n) {\n  if ($n == 1) {\n    return 2;\n  }\n  $val = 1;\n\
    \  $prev = 1;\n  $fib = 1;\n  $i = 1;\n  while ($i < $n) {\n    $fib = $val +\
    \ $prev;\n    if (is_prime($fib)) {\n      $i++;\n    }\n    $prev = $val;\n \
    \   $val = $fib;\n  }\n  return $fib;\n}\n\nfunction candidate(...$args) {\n \
    \   return prime_fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1)\
    \ !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2) !==\
    \ 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 13) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(5) !== 89) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(6) !== 233) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1597) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(8) !== 28657) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(9) !== 514229) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(10) !== 433494437) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_prime() in\
    \ /tmp/tmpv37t_xc5.php:23\nStack trace:\n#0 /tmp/tmpv37t_xc5.php(33): prime_fib(2)\n\
    #1 /tmp/tmpv37t_xc5.php(38): candidate(2)\n#2 /tmp/tmpv37t_xc5.php(49): test()\n\
    #3 {main}\n  thrown in /tmp/tmpv37t_xc5.php on line 23\n"
  timestamp: 1660028555

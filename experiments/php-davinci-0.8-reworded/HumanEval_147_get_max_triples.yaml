name: HumanEval_147_get_max_triples
language: php
prompt: "<?php\n// You are given a positive integer n. You have to create an integer\
  \ array a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] =\
  \ i * i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where\
  \ i < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>>\
  \ get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The only\
  \ valid triple is (1, 7, 13).\nfunction get_max_triples($n) {\n"
tests: "function candidate(...$args) {\n    return get_max_triples(...$args);\n}\n\
  \nfunction test(): void {\n    if (candidate(5) !== 1) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(6) !== 4) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(10) !== 36) { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(100) !== 53361) { throw new Exception(\"Test failed!\"); }\n\
  }\n\ntest();"
completions: ["    $a = range(1, $n);\n    $res = [];\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        for ($j = $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1;\
    \ $k < $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n\
    \                    $res[] = [$a[$i], $a[$j], $a[$k]];\n                }\n \
    \           }\n        }\n    }\n    return count($res);\n}", "    $result = 0;\n\
    \    for ($i = 1; $i < $n - 1; $i++) {\n        for ($j = $i + 1; $j < $n; $j++)\
    \ {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if (($i*$i\
    \ - $i + 1 + $j*$j - $j + 1 + $k*$k - $k + 1) % 3 == 0) {\n                  \
    \  $result++;\n                }\n            }\n        }\n    }\n    return\
    \ $result;\n}\n\necho get_max_triples(5);", "    // your code goes here\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $result = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $result++;\n                }\n            }\n        }\n    }\n    return\
    \ $result;\n}\n", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[]\
    \ = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for ($i = 0; $i < $n - 2;\
    \ $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k\
    \ = $j + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) %\
    \ 3 == 0) {\n                    $result++;\n                }\n            }\n\
    \        }\n    }\n    return $result;\n}\n", "    $count = 0;\n    for ($i =\
    \ 1; $i < $n - 1; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n      \
    \      for ($k = $j + 1; $k <= $n; $k++) {\n                if ((($i * $i - $i\
    \ + 1) + ($j * $j - $j + 1) + ($k * $k - $k + 1)) % 3 == 0) {\n              \
    \      $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n", "    $triples = 0;\n    $a = [];\n    for ($i = 1; $i <= $n;\
    \ $i++) {\n        $a[] = ($i * $i) - $i + 1;\n    }\n    for ($i = 0; $i < $n;\
    \ $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n            for ($k = $j\
    \ + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 ==\
    \ 0) {\n                    $triples++;\n                }\n            }\n  \
    \      }\n    }\n    return $triples;\n}\n\n$tests = [\n    [1, 0],\n    [5, 1],\n\
    \    [10, 3],\n    [15, 6],\n    [20, 10],\n    [25, 15],\n    [30, 21],\n   \
    \ [35, 28],\n    [40, 36],\n    [45, 45],\n    [50, 55],\n    [55, 66],\n    [60,\
    \ 78],\n    [65, 91],\n    [70, 105],\n    [75, 120],\n    [80, 136],\n    [85,\
    \ 153],\n    [90, 171],\n    [95, 190],\n    [100, 210],\n    [105, 231],\n  \
    \  [110, 253],\n    [115, 276],\n    [120, 300],\n    [125, 325],\n    [130, 351],\n\
    \    [135, 378],\n    [140, 406],\n    [145, 435],\n    [150, 465],\n    [155,\
    \ 496],\n    [160, 528],\n    [165, 561],\n    [170, 595],\n    [175, 630],\n\
    \    [180, 666],\n    [185, 703],\n    [190, 741],\n    [195, 780],\n    [200,\
    \ 820],\n    [205, 861],\n    [210, 903],\n    [215, 946],\n    [220, 990],\n\
    \    [225, 1035],\n    [", "    $a = array();\n    for ($i = 1; $i <= $n; $i++)\
    \ {\n        $a[] = $i * $i - $i + 1;\n    }\n    return get_max_triples_arr($a);\n\
    }\n", "    $sum = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i\
    \ + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n    \
    \            if (($i + 1) * ($i + 1) - ($i + 1) + 1 + ($j + 1) * ($j + 1) - ($j\
    \ + 1) + 1 + ($k + 1) * ($k + 1) - ($k + 1) + 1) % 3 == 0) {\n               \
    \     $sum++;\n                }\n            }\n        }\n    }\n    return\
    \ $sum;\n}\n", "  $tot = 0;\n  for ($i = 1; $i < $n; $i++) {\n    for ($j = $i\
    \ + 1; $j < $n; $j++) {\n      for ($k = $j + 1; $k < $n; $k++) {\n        if\
    \ ((($i * $i - $i + 1) + ($j * $j - $j + 1) + ($k * $k - $k + 1)) % 3 == 0) {\n\
    \          $tot++;\n        }\n      }\n    }\n  }\n  return $tot;\n}\n", "  if\
    \ ($n < 3) {\n    return 0;\n  }\n  $result = 0;\n  $a = [];\n  for ($i = 1; $i\
    \ <= $n; $i++) {\n    $a[] = $i * $i - $i + 1;\n  }\n  for ($i = 0; $i < $n -\
    \ 2; $i++) {\n    for ($j = $i + 1; $j < $n - 1; $j++) {\n      for ($k = $j +\
    \ 1; $k < $n; $k++) {\n        if (($a[$i] + $a[$j] + $a[$k]) % 3 === 0) {\n \
    \         $result++;\n        }\n      }\n    }\n  }\n  return $result;\n}\n",
  "    $i = 1;\n    $a = [];\n    while ($i <= $n) {\n        $a[] = $i * $i - $i\
    \ + 1;\n        $i++;\n    }\n    return check_triples($a);\n}", "    $total =\
    \ 0;\n    $arr = [];\n    $count = 0;\n    for ($i = 1; $i <= $n; $i++) {\n  \
    \      $arr[] = $i * $i - $i + 1;\n    }\n    for ($i = 0; $i < count($arr); $i++)\
    \ {\n        for ($j = $i + 1; $j < count($arr); $j++) {\n            if (($arr[$i]\
    \ + $arr[$j]) % 3 === 0) {\n                $num = $arr[$i] + $arr[$j];\n    \
    \            for ($k = $j + 1; $k < count($arr); $k++) {\n                   \
    \ if (($num + $arr[$k]) % 3 === 0) {\n                        $total += 1;\n \
    \                   }\n                }\n            }\n        }\n    }\n  \
    \  return $total;\n}\necho get_max_triples(5);", "    $result = 0;\n    $array\
    \ = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $array[] = $i * $i -\
    \ $i + 1;\n    }\n    for ($i = 0; $i < count($array); $i++) {\n        for ($j\
    \ = $i + 1; $j < count($array); $j++) {\n            for ($k = $j + 1; $k < count($array);\
    \ $k++) {\n                if (($array[$i] + $array[$j] + $array[$k]) % 3 == 0)\
    \ $result++;\n            }\n        }\n    }\n    return $result;\n}", "    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $result = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $result++;\n                }\n            }\n        }\n    }\n    return\
    \ $result;\n}\n", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[]\
    \ = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++)\
    \ {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j\
    \ + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 ==\
    \ 0) {\n                    $count++;\n                }\n            }\n    \
    \    }\n    }\n    return $count;\n}\necho get_max_triples(5);", "    $array =\
    \ [];\n    for ($i = 1; $i <= $n; $i++) {\n        $array[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < count($array); $i++) {\n      \
    \  for ($j = $i + 1; $j < count($array); $j++) {\n            for ($k = $j + 1;\
    \ $k < count($array); $k++) {\n                if (($array[$i] + $array[$j] +\
    \ $array[$k]) % 3 == 0) {\n                    $count++;\n                }\n\
    \            }\n        }\n    }\n    return $count;\n}", "    $a = range(1, $n);\n\
    \    $a = array_map(function($n) {\n        return $n * $n - $n + 1;\n    }, $a);\n\
    \    $cnt = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i +\
    \ 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n  \
    \              if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                  \
    \  $cnt++;\n                }\n            }\n        }\n    }\n    return $cnt;\n\
    }\n", "  $triples = [];\n  for ($i = 1; $i <= $n; $i++) {\n    $a[] = $i * $i\
    \ - $i + 1;\n  }\n  foreach ($a as $x) {\n    foreach ($a as $y) {\n      foreach\
    \ ($a as $z) {\n        if ($x == $y || $x == $z || $y == $z) continue;\n    \
    \    if ($x < $y && $y < $z && ($x + $y + $z) % 3 == 0) {\n          $triples[]\
    \ = [$x, $y, $z];\n        }\n      }\n    }\n  }\n  return count($triples);\n\
    }", "    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i\
    \ * $i - $i + 1;\n    }\n    $counter = 0;\n    for ($i = 0; $i < count($a); $i++)\
    \ {\n        for ($j = $i + 1; $j < count($a); $j++) {\n            for ($k =\
    \ $j + 1; $k < count($a); $k++) {\n                if (($a[$i] + $a[$j] + $a[$k])\
    \ % 3 == 0) {\n                    $counter++;\n                }\n          \
    \  }\n        }\n    }\n    return $counter;\n}\n", "    $a = [];\n    for ($i\
    \ = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count\
    \ = 0;\n    $triples = [];\n    for ($i = 0; $i < $n - 2; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                    $triples[] = [$a[$i], $a[$j], $a[$k]];\n\
    \                }\n            }\n        }\n    }\n    return $count;\n}\n",
  "    $count = 0;\n    $arr = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[]\
    \ = $i * $i - $i + 1;\n    }\n    for ($i = 0; $i < count($arr); $i++) {\n   \
    \     for ($j = $i + 1; $j < count($arr); $j++) {\n            for ($k = $j +\
    \ 1; $k < count($arr); $k++) {\n                if (($arr[$i] + $arr[$j] + $arr[$k])\
    \ % 3 == 0) {\n                    $count++;\n                }\n            }\n\
    \        }\n    }\n    return $count;\n}\necho get_max_triples(5);", "    $arr\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($arr[$i] + $arr[$j] + $arr[$k]) % 3 == 0) {\n      \
    \              $count++;\n                }\n            }\n        }\n    }\n\
    \    return $count;\n}\necho get_max_triples(5);", "    $a = range(1, $n);\n \
    \   return count_triples($a);\n}", "    $a = array();\n    for ($i = 1; $i <=\
    \ $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $result = 0;\n   \
    \ for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++)\
    \ {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i]\
    \ + $a[$j] + $a[$k]) % 3 == 0) {\n                    $result++;\n           \
    \     }\n            }\n        }\n    }\n    return $result;\n}\necho get_max_triples(5);",
  "    $arr = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[] = $i * $i -\
    \ $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n\
    \        for ($j = $i + 1; $j < count($arr); $j++) {\n            for ($k = $j\
    \ + 1; $k < count($arr); $k++) {\n                if (($arr[$i] + $arr[$j] + $arr[$k])\
    \ % 3 == 0) {\n                    $count++;\n                }\n            }\n\
    \        }\n    }\n    return $count;\n}", "    if ($n < 3) return 0;\n    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n", "    if ($n == 1) {\n        return 0;\n    }\n    if ($n ==\
    \ 2) {\n        return 0;\n    }\n    if ($n == 3) {\n        return 1;\n    }\n\
    \    $a = [1, 3, 7, 13, 21];\n    $size = count($a);\n    for ($i = $size; $i\
    \ < $n; $i++) {\n        $a[$i] = $a[$i - 1] + (2 * $i) - 1;\n    }\n    $triples\
    \ = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j <\
    \ $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n          \
    \      if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $triples++;\n\
    \                }\n            }\n        }\n    }\n    return $triples;\n}\n\
    $n = 4;\necho get_max_triples($n) . PHP_EOL;\n", "    // create array with first\
    \ n numbers\n    $arr = range(1, $n);\n    // calculate all triples\n    $triples\
    \ = get_all_triples($arr);\n    // filter out triples where a[i] + a[j] + a[k]\
    \ is not a multiple of 3\n    $triples = array_filter($triples, function($x) {\n\
    \        return $x[0] + $x[1] + $x[2] % 3 === 0;\n    });\n    // get count of\
    \ triples that are divisible by 3\n    return count($triples);\n}\n", "    $maxTriples\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n;\
    \ $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if\
    \ ( ($i + $j + $k) % 3 == 0) {\n                    $maxTriples++;\n         \
    \       }\n            }\n        }\n    }\n    return $maxTriples;\n}", "   \
    \ $result = 0;\n    for ($i = 1; $i < $n; $i++) {\n        for ($j = $i + 1; $j\
    \ < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n            \
    \    if (($i * $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n\
    \                    $result++;\n                }\n            }\n        }\n\
    \    }\n    return $result;\n}\n", "  $count = 0;\n  for ($i = 1; $i < $n; $i++)\
    \ {\n    for ($j = $i + 1; $j < $n; $j++) {\n      for ($k = $j + 1; $k < $n;\
    \ $k++) {\n        if (($i * $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1)\
    \ % 3 == 0) {\n          $count++;\n        }\n      }\n    }\n  }\n  return $count;\n\
    }\necho get_max_triples(5) . \"\\n\";\necho get_max_triples(3) . \"\\n\";\necho\
    \ get_max_triples(8) . \"\\n\";", "    \n}\n", "    $a = [];\n    for ($i = 1;\
    \ $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n\
    \    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n\
    \            for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i] +\
    \ $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n              \
    \  }\n            }\n        }\n    }\n    return $count;\n}", "    $arr = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $arr[] = $i * $i - $i + 1;\n    }\n\
    \    $max = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        for ($j =\
    \ $i + 1; $j < count($arr); $j++) {\n            for ($k = $j + 1; $k < count($arr);\
    \ $k++) {\n                if (($arr[$i] + $arr[$j] + $arr[$k]) % 3 == 0) {\n\
    \                    $max++;\n                }\n            }\n        }\n  \
    \  }\n    return $max;\n}", "    $triples = 0;\n    for ($i = 1; $i < $n; $i++)\
    \ {\n        for ($j = $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1;\
    \ $k < $n; $k++) {\n                if ((($i * $i - $i + 1) + ($j * $j - $j +\
    \ 1) + ($k * $k - $k + 1)) % 3 == 0) {\n                    $triples++;\n    \
    \            }\n            }\n        }\n    }\n    return $triples;\n}", " \
    \   $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i\
    \ + 1;\n    }\n    $result = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n     \
    \   for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k <\
    \ $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n  \
    \                  $result++;\n                }\n            }\n        }\n \
    \   }\n    return $result;\n}\n", "    $triples = 0;\n    $arr = [];\n    $arr[0]\
    \ = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[$i] = $i * $i - $i +\
    \ 1;\n    }\n    $triples = 0;\n    for ($i = 1; $i < $n - 1; $i++) {\n      \
    \  for ($j = $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k <= $n;\
    \ $k++) {\n                if (($arr[$i] + $arr[$j] + $arr[$k]) % 3 == 0) {\n\
    \                    $triples++;\n                }\n            }\n        }\n\
    \    }\n    return $triples;\n}", "    $t = 0;\n    for ($i = 1; $i < $n; $i++)\
    \ {\n        for ($j = $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1;\
    \ $k < $n; $k++) {\n                if (($i * $i - $i + 1 + $j * $j - $j + 1 +\
    \ $k * $k - $k + 1) % 3 == 0) {\n                    $t++;\n                }\n\
    \            }\n        }\n    }\n    return $t;\n}\n", "    $a = [];\n    for\
    \ ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $triples\
    \ = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j <\
    \ $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n          \
    \      if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $triples++;\n\
    \                }\n            }\n        }\n    }\n    return $triples;\n}",
  "    $res = 0;\n    for ($i = 1; $i < $n; $i++) {\n        for ($j = $i + 1; $j\
    \ < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n            \
    \    if (($i * $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n\
    \                    $res++;\n                }\n            }\n        }\n  \
    \  }\n    return $res;\n}\n", "    $a = [];\n    for ($i = 1; $i <= $n; $i++)\
    \ {\n        $a[] = $i * $i - $i + 1;\n    }\n    $counter = 0;\n    for ($i =\
    \ 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n          \
    \  for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j] +\
    \ $a[$k]) % 3 == 0) {\n                    $counter++;\n                }\n  \
    \          }\n        }\n    }\n    return $counter;\n}\necho get_max_triples(2);",
  "  $arr = [];\n  for ($i = 1; $i <= $n; $i++) {\n    $arr[] = $i * $i - $i + 1;\n\
    \  }\n  $count = 0;\n  for ($i = 0; $i < count($arr); $i++) {\n    for ($j = $i\
    \ + 1; $j < count($arr); $j++) {\n      for ($k = $j + 1; $k < count($arr); $k++)\
    \ {\n        if (($arr[$i] + $arr[$j] + $arr[$k]) % 3 === 0) {\n          $count++;\n\
    \        }\n      }\n    }\n  }\n  return $count;\n}\n", "  // Write your code\
    \ here\n  // To print results to the standard output you can use print\n  // Example:\
    \ print \"Hello world!\";\n}", "    $triples = 0;\n    for ($i = 1; $i < $n -\
    \ 1; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n            for ($k\
    \ = $j + 1; $k <= $n; $k++) {\n                if (($i*$i - $i + 1 + $j*$j - $j\
    \ + 1 + $k*$k - $k + 1) % 3 == 0)\n                    $triples++;\n         \
    \   }\n        }\n    }\n    return $triples;\n}\n", "    $arr=[];\n    for($i=1;$i<=$n;$i++){\n\
    \        $arr[]=$i*$i-$i+1;\n    }\n    $sum=0;\n    for($i=0;$i<count($arr);$i++){\n\
    \        for($j=$i+1;$j<count($arr);$j++){\n            for($k=$j+1;$k<count($arr);$k++){\n\
    \                if(($arr[$i]+$arr[$j]+$arr[$k])%3==0){\n                    $sum++;\n\
    \                }\n            }\n        }\n    }\n    return $sum;\n}", " \
    \   $p = array_fill(0, $n, 0);\n    for ($i = 0; $i < $n; $i++) {\n        $p[$i]\
    \ = $i * $i - $i + 1;\n    }\n    $m = 0;\n    for ($i = 0; $i < $n - 2; $i++)\
    \ {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j\
    \ + 1; $k < $n; $k++) {\n                if (($p[$i] + $p[$j] + $p[$k]) % 3 ==\
    \ 0) {\n                    $m++;\n                }\n            }\n        }\n\
    \    }\n    return $m;\n}", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n\
    \        $a[] = $i * $i - $i + 1;\n    }\n    $res = 0;\n    for ($i = 0; $i <\
    \ $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n          \
    \  for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j] +\
    \ $a[$k]) % 3 == 0) {\n                    $res++;\n                }\n      \
    \      }\n        }\n    }\n    return $res;\n}\necho get_max_triples(5) . PHP_EOL;",
  "\t$a=array();\n\tfor($i=1;$i<=$n;$i++){\n\t\t$a[$i]=$i*$i-$i+1;\n\t}\n\t$count=0;\n\
    \tfor($i=1;$i<=$n;$i++){\n\t\tfor($j=$i+1;$j<=$n;$j++){\n\t\t\tfor($k=$j+1;$k<=$n;$k++){\n\
    \t\t\t\tif(($a[$i]+$a[$j]+$a[$k])%3==0){\n\t\t\t\t\t$count++;\n\t\t\t\t}\n\t\t\
    \t}\n\t\t}\n\t}\n\treturn $count;\n}\n$n=5;\nprint_r(get_max_triples($n));", " \
    \   $sum = 0;\n    for ($i = 1; $i < $n; $i++) {\n        for ($j = $i + 1; $j\
    \ < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n            \
    \    if (($i * $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n\
    \                    $sum += 1;\n                }\n            }\n        }\n\
    \    }\n    return $sum;\n}\n", "  $num = 0;\n  for ($i = 1; $i < $n; $i++) {\n\
    \    for ($j = $i + 1; $j < $n; $j++) {\n      for ($k = $j + 1; $k < $n; $k++)\
    \ {\n        if (($i * $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3\
    \ == 0) {\n          $num++;\n        }\n      }\n    }\n  }\n  return $num;\n\
    }\necho get_max_triples(5);", "    $a = [];\n    for ($i = 1; $i <= $n; $i++)\
    \ {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0;\
    \ $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n            for\
    \ ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k])\
    \ % 3 == 0) {\n                    $count++;\n                }\n            }\n\
    \        }\n    }\n    return $count;\n}\n", "    $arr = [0];\n    for ($i = 1;\
    \ $i <= $n; $i++) {\n        $arr[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        for ($j = $i + 1; $j <= $n; $j++)\
    \ {\n            for ($k = $j + 1; $k <= $n; $k++) {\n                if (($arr[$i]\
    \ + $arr[$j] + $arr[$k]) % 3 == 0) {\n                    $count++;\n        \
    \        }\n            }\n        }\n    }\n    return $count;\n}\necho get_max_triples(5)\
    \ . PHP_EOL;", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[]\
    \ = pow($i, 2) - $i + 1;\n    }\n    $total = 0;\n    $length = count($a);\n \
    \   for ($i = 0; $i < $length; $i++) {\n        for ($j = $i + 1; $j < $length;\
    \ $j++) {\n            for ($k = $j + 1; $k < $length; $k++) {\n             \
    \   if (($a[$i] + $a[$j] + $a[$k]) % 3 === 0) {\n                    $total++;\n\
    \                }\n            }\n        }\n    }\n    return $total;\n}\n",
  "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    // var_dump($a);\n    $cnt = 0;\n    for ($i = 0; $i < $n - 2;\
    \ $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k\
    \ = $j + 1; $k < $n; $k++) {\n                // echo \"i=$i j=$j k=$k\\n\";\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $cnt++;\n                }\n            }\n        }\n    }\n    return $cnt;\n\
    }", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i\
    \ - $i + 1;\n    }\n    $answer = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n\
    \        for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1;\
    \ $k < $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n\
    \                    $answer++;\n                }\n            }\n        }\n\
    \    }\n    return $answer;\n}", "    // Write your code here\n    // To print\
    \ results to the standard output you can use print\n    // Example: print \"Hello\
    \ world!\";\n    $t = 0;\n    for ($i = 1; $i < $n; $i++) {\n        for ($j =\
    \ $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n \
    \               if (($i * $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) %\
    \ 3 == 0) {\n                    $t += 1;\n                }\n            }\n\
    \        }\n    }\n    print $t;\n}\n\n$n = intval(fgets(STDIN));\nget_max_triples($n);",
  "    $a = range(1, $n);\n    $a = array_map(function($e) { return $e * $e - $e +\
    \ 1; }, $a);\n    $total = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n       \
    \ for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n;\
    \ $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n      \
    \              $total++;\n                }\n            }\n        }\n    }\n\
    \    return $total;\n}", "    $total = 0;\n    for ($i = 1; $i < $n; $i++) {\n\
    \        for ($j = $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k\
    \ < $n; $k++) {\n                if (($i * $i - $i + 1 + $j * $j - $j + 1 + $k\
    \ * $k - $k + 1) % 3 == 0) {\n                    $total++;\n                }\n\
    \            }\n        }\n    }\n    return $total;\n}\necho get_max_triples(5)\
    \ . \"<br>\";\necho get_max_triples(6) . \"<br>\";\necho get_max_triples(7) .\
    \ \"<br>\";\n", "    $res = array();\n    for ($i = 1; $i <= $n; $i++) {\n   \
    \     array_push($res, $i * $i - $i + 1);\n    }\n    $count = 0;\n    $len =\
    \ count($res);\n    for ($i = 0; $i < $len - 2; $i++) {\n        for ($j = $i\
    \ + 1; $j < $len - 1; $j++) {\n            for ($k = $j + 1; $k < $len; $k++)\
    \ {\n                if (($res[$i] + $res[$j] + $res[$k]) % 3 == 0) {\n      \
    \              $count++;\n                }\n            }\n        }\n    }\n\
    \    return $count;\n}", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n \
    \       $a[] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for ($i = 0; $i\
    \ < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n        \
    \    for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j]\
    \ + $a[$k]) % 3 == 0) {\n                    $result++;\n                }\n \
    \           }\n        }\n    }\n    return $result;\n}\n$tests = [\n    [5, 1],\n\
    \    [7, 3],\n    [100, 856]\n];\nforeach ($tests as $test) {\n    $result = get_max_triples($test[0]);\n\
    \    if ($result === $test[1]) {\n        echo \"Test PASSED\\n\";\n    } else\
    \ {\n        echo \"Test FAILED!\\n\";\n    }\n}", "    $a = [];\n    for ($i\
    \ = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $max =\
    \ 0;\n    $ans = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i +\
    \ 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n      \
    \          if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $ans++;\n\
    \                }\n            }\n        }\n    }\n    return $ans;\n}\necho\
    \ get_max_triples(5) . \"\\n\";\necho get_max_triples(10) . \"\\n\";\necho get_max_triples(100)\
    \ . \"\\n\";\necho get_max_triples(1000) . \"\\n\";\necho get_max_triples(10000)\
    \ . \"\\n\";\necho get_max_triples(100000) . \"\\n\";\necho get_max_triples(1000000)\
    \ . \"\\n\";\necho get_max_triples(10000000) . \"\\n\";\necho get_max_triples(100000000)\
    \ . \"\\n\";\necho get_max_triples(1000000000) . \"\\n\";", "    $counter = 0;\n\
    \    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i\
    \ + 1;\n    }\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1;\
    \ $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n     \
    \           if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $counter++;\n\
    \                }\n            }\n        }\n    }\n    return $counter;\n}\n",
  "    $i = $j = $k = 0;\n    $s = 0;\n    $count = 0;\n    for ($i = 1; $i <= $n;\
    \ $i++) {\n        for ($j = $i + 1; $j <= $n; $j++) {\n            for ($k =\
    \ $j + 1; $k <= $n; $k++) {\n                $s = $i + $j + $k;\n            \
    \    if (($s % 3) == 0) {\n                    $count++;\n                }\n\
    \            }\n        }\n    }\n    return $count;\n}", "  $count = 0;\n  for\
    \ ($i = 1; $i < $n; $i++) {\n    for ($j = $i + 1; $j < $n; $j++) {\n      for\
    \ ($k = $j + 1; $k < $n; $k++) {\n        if (($i * $i - $i + 1 + $j * $j - $j\
    \ + 1 + $k * $k - $k + 1) % 3 == 0) {\n          $count++;\n        }\n      }\n\
    \    }\n  }\n  return $count;\n}", "  $a = [];\n  for ($i = 1; $i <= $n; $i++)\
    \ {\n    $a[] = $i * $i - $i + 1;\n  }\n  $count = 0;\n  for ($i = 0; $i < $n;\
    \ $i++) {\n    for ($j = $i + 1; $j < $n; $j++) {\n      for ($k = $j + 1; $k\
    \ < $n; $k++) {\n        if (($a[$i] + $a[$j] + $a[$k]) % 3 === 0) {\n       \
    \   $count++;\n        }\n      }\n    }\n  }\n  return $count;\n}", "    $triples\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n;\
    \ $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if\
    \ ((($i * $i - $i + 1) + ($j * $j - $j + 1) + ($k * $k - $k + 1)) % 3 == 0)\n\
    \                    $triples++;\n            }\n        }\n    }\n    return\
    \ $triples;\n}\n\nprint_r(get_max_triples(100));", "    $a = [];\n    for ($i\
    \ = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count\
    \ = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j <\
    \ $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n          \
    \      if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n\
    \                }\n            }\n        }\n    }\n    return $count;\n}\n$n\
    \ = 5;\necho get_max_triples($n);", "    $array = [];\n    for ($i = 1; $i <=\
    \ $n; $i++) {\n        $array[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n\
    \    for ($i = 0; $i < count($array); $i++) {\n        for ($j = $i + 1; $j <\
    \ count($array); $j++) {\n            for ($k = $j + 1; $k < count($array); $k++)\
    \ {\n                if (($array[$i] + $array[$j] + $array[$k]) % 3 == 0) {\n\
    \                    $count++;\n                }\n            }\n        }\n\
    \    }\n    return $count;\n}\n", "  $a = array();\n  for ($i = 1; $i <= $n; $i++)\
    \ {\n    $a[] = $i * $i - $i + 1;\n  }\n  $ans = 0;\n  for ($i = 0; $i < $n; $i++)\
    \ {\n    for ($j = $i + 1; $j < $n; $j++) {\n      for ($k = $j + 1; $k < $n;\
    \ $k++) {\n        if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n          $ans++;\n\
    \        }\n      }\n    }\n  }\n  return $ans;\n}\n", "    $a = [];\n    for\
    \ ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count\
    \ = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j <\
    \ $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n          \
    \      if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n\
    \                }\n            }\n        }\n    }\n    return $count;\n}", " \
    \   $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i\
    \ + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\necho get_max_triples(5);", "    $count = 0;\n    for ($i = 1; $i\
    \ < $n - 1; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n            $a\
    \ = $i * $i - $i + 1;\n            $b = $j * $j - $j + 1;\n            $c = ($i\
    \ + $j) * ($i + $j) - ($i + $j) + 1;\n            if (($a + $b + $c) % 3 == 0)\
    \ {\n                $count++;\n            }\n        }\n    }\n    return $count;\n\
    }\necho get_max_triples(5);", "    $a = [];\n    for ($i = 1; $i <= $n; $i++)\
    \ {\n        $a[] = $i * $i - $i + 1;\n    }\n    $res = 0;\n    for ($i = 0;\
    \ $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n     \
    \       for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j]\
    \ + $a[$k]) % 3 == 0) {\n                    $res++;\n                }\n    \
    \        }\n        }\n    }\n    return $res;\n}\n", "    $arr = [];\n    for\
    \ ($i = 1; $i <= $n; $i++) {\n        $arr[] = $i * $i - $i + 1;\n    }\n    $result\
    \ = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        for ($j = $i + 1;\
    \ $j < count($arr); $j++) {\n            for ($k = $j + 1; $k < count($arr); $k++)\
    \ {\n                if (($arr[$i] + $arr[$j] + $arr[$k]) % 3 == 0) {\n      \
    \              $result++;\n                }\n            }\n        }\n    }\n\
    \    return $result;\n}", "  // Write your code here\n  // To print results to\
    \ the standard output you can use print\n  // Example: print \"Hello world!\"\
    ;\n  if( $n < 3 ) {\n    return 0;\n  }\n  $triples = 0;\n  for( $i = 1; $i <\
    \ $n - 1; $i++ ) {\n    for( $j = $i + 1; $j < $n; $j++ ) {\n      for( $k = $j\
    \ + 1; $k <= $n; $k++ ) {\n        if( $i * $i - $i + 1 + $j * $j - $j + 1 + $k\
    \ * $k - $k + 1 % 3 == 0 ) {\n          $triples++;\n        }\n      }\n    }\n\
    \  }\n  return $triples;\n}\n\n$n = 5;\necho get_max_triples($n);", "    if ($n\
    \ <= 2) {\n        return 0;\n    }\n    $count = 0;\n    for ($i = 1; $i < $n;\
    \ $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n            for ($k = $j\
    \ + 1; $k < $n; $k++) {\n                if ((($i * $i - $i + 1) + ($j * $j -\
    \ $j + 1) + ($k * $k - $k + 1)) % 3 == 0) {\n                    $count++;\n \
    \               }\n            }\n        }\n    }\n    return $count;\n}\necho\
    \ get_max_triples(6);", "    $tripleCount = 0;\n    $a = [];\n    for ($i = 1;\
    \ $i <= $n; $i++) {\n        $a[] = ($i * $i) - $i + 1;\n    }\n    for ($i =\
    \ 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n          \
    \  for ($k = $j + 1; $k < $n; $k++) {\n                if (isMultipleOfThree($a[$i],\
    \ $a[$j], $a[$k])) {\n                    $tripleCount++;\n                }\n\
    \            }\n        }\n    }\n    return $tripleCount;\n}\n", "  $c = 0;\n\
    \  for ($i = 1; $i < $n; $i++) {\n    for ($j = $i + 1; $j < $n; $j++) {\n   \
    \   for ($k = $j + 1; $k < $n; $k++) {\n        if (($i * $i - $i + 1 + $j * $j\
    \ - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n          $c++;\n        }\n     \
    \ }\n    }\n  }\n  return $c;\n}\necho get_max_triples(5);", "    $arr = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $arr[] = $i * $i - $i + 1;\n    }\n\
    \    $result = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        for ($j\
    \ = $i + 1; $j < count($arr); $j++) {\n            for ($k = $j + 1; $k < count($arr);\
    \ $k++) {\n                if (($arr[$i] + $arr[$j] + $arr[$k]) % 3 == 0) {\n\
    \                    $result++;\n                }\n            }\n        }\n\
    \    }\n    return $result;\n}\necho get_max_triples(5);", "    \n}", "    $count\
    \ = 0;\n    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i *\
    \ $i - $i + 1;\n    }\n    for ($i = 0; $i < count($a); $i++) {\n        for ($j\
    \ = $i + 1; $j < count($a); $j++) {\n            for ($k = $j + 1; $k < count($a);\
    \ $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n      \
    \              $count++;\n                }\n            }\n        }\n    }\n\
    \    return $count;\n}\n", "    $arr = array();\n    for ($i = 1; $i <= $n; $i++)\
    \ {\n        $arr[] = ($i * $i) - $i + 1;\n    }\n    $result = 0;\n    for ($i\
    \ = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n\
    \            for ($k = $j + 1; $k < $n; $k++) {\n                if (($arr[$i]\
    \ + $arr[$j] + $arr[$k]) % 3 == 0) {\n                    $result++;\n       \
    \         }\n            }\n        }\n    }\n    return $result;\n}\n\necho get_max_triples(1)\
    \ . \"\\n\";\necho get_max_triples(5) . \"\\n\";\necho get_max_triples(10) . \"\
    \\n\";\necho get_max_triples(50) . \"\\n\";\necho get_max_triples(100) . \"\\\
    n\";\necho get_max_triples(1000) . \"\\n\";\necho get_max_triples(5000) . \"\\\
    n\";\necho get_max_triples(10000) . \"\\n\";\necho get_max_triples(50000) . \"\
    \\n\";\necho get_max_triples(100000) . \"\\n\";\n", "    $sums = [];\n    for\
    \ ($i = 1; $i <= $n; $i++) {\n        $sums[] = $i * $i - $i + 1;\n    }\n   \
    \ $triples = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i +\
    \ 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n  \
    \              if (($sums[$i] + $sums[$j] + $sums[$k]) % 3 === 0) {\n        \
    \            $triples++;\n                }\n            }\n        }\n    }\n\
    \    return $triples;\n}\n", "    $multiples = array(0,0,0);\n    for ($i = 1;\
    \ $i <= $n; $i++) {\n        $a = $i * $i - $i + 1;\n        $multiples[$a % 3]++;\n\
    \    }\n    return min($multiples[1], $multiples[2]) * $multiples[0] +\n     \
    \   ($multiples[0] * ($multiples[0] - 1) * ($multiples[0] - 2)) / 6 +\n      \
    \  ($multiples[1] * ($multiples[1] - 1) * ($multiples[1] - 2)) / 6 +\n       \
    \ ($multiples[2] * ($multiples[2] - 1) * ($multiples[2] - 2)) / 6;\n}\n", "  \
    \  $result = 0;\n    $arr = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[]\
    \ = $i * $i - $i + 1;\n    }\n    for ($i = 0; $i < $n - 2; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($arr[$i] + $arr[$j] + $arr[$k]) % 3 == 0) {\n      \
    \              $result++;\n                }\n            }\n        }\n    }\n\
    \    return $result;\n}\n", "  $a = [];\n  for ($i = 1; $i <= $n; $i++) {\n  \
    \  $a[] = $i * $i - $i + 1;\n  }\n  $result = 0;\n  for ($i = 0; $i < $n - 2;\
    \ $i++) {\n    for ($j = $i + 1; $j < $n - 1; $j++) {\n      for ($k = $j + 1;\
    \ $k < $n; $k++) {\n        if (($a[$i] + $a[$j] + $a[$k]) % 3 === 0) {\n    \
    \      $result++;\n        }\n      }\n    }\n  }\n  return $result;\n}\n", " \
    \   $a = range(1, $n);\n    foreach ($a as $i => $value) {\n        $a[$i] = $value\
    \ * $value - $value + 1;\n    }\n    $c = 0;\n    for ($i = 0; $i < $n - 2; $i++)\
    \ {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j\
    \ + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 ==\
    \ 0) {\n                    $c++;\n                }\n            }\n        }\n\
    \    }\n    return $c;\n}\n\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\n   \
    \ $n = $_POST['n'];\n    echo get_max_triples($n);\n}", "    $a = [];\n    for\
    \ ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $res\
    \ = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j <\
    \ $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n          \
    \      if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $res++;\n\
    \                }\n            }\n        }\n    }\n    return $res;\n}", " \
    \   $result = 0;\n    for ($i = 1; $i < $n; $i++) {\n        for ($j = $i + 1;\
    \ $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n         \
    \       if (($i * $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0)\
    \ {\n                    $result++;\n                }\n            }\n      \
    \  }\n    }\n    return $result;\n}\n\necho get_max_triples(5);\n", "    $count\
    \ = 0;\n    $arr = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[] = ($i\
    \ * $i) - $i + 1;\n    }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n \
    \               if (($arr[$i] + $arr[$j] + $arr[$k]) % 3 == 0) {\n           \
    \         $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n$n = 5;\necho(get_max_triples($n));", "    $cnt = 0;\n    for ($i\
    \ = 1; $i < $n - 1; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n    \
    \        for ($k = $j + 1; $k <= $n; $k++) {\n                if (($i * $i - $i\
    \ + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n                   \
    \ $cnt++;\n                }\n            }\n        }\n    }\n    return $cnt;\n\
    }\n$res = get_max_triples(5);\nvar_dump($res);", "    $arr = range(1, $n);\n \
    \   $i = 0;\n    $res = [];\n    while ($i < count($arr)) {\n        $j = $i +\
    \ 1;\n        while ($j < count($arr)) {\n            $k = $j + 1;\n         \
    \   while ($k < count($arr)) {\n                if (($arr[$i] + $arr[$j] + $arr[$k])\
    \ % 3 == 0) {\n                    $res[] = \"{$arr[$i]}, {$arr[$j]}, {$arr[$k]}\"\
    ;\n                }\n                $k++;\n            }\n            $j++;\n\
    \        }\n        $i++;\n    }\n    return count($res);\n}\n\necho get_max_triples(5);\n",
  "    // $a = [];\n    // for ($i = 1; $i <= $n; $i++) {\n    //     $a[] = $i *\
    \ $i - $i + 1;\n    // }\n    // $count = 0;\n    // for ($i = 0; $i < $n - 2;\
    \ $i++) {\n    //     for ($j = $i + 1; $j < $n - 1; $j++) {\n    //         for\
    \ ($k = $j + 1; $k < $n; $k++) {\n    //             if (($a[$i] + $a[$j] + $a[$k])\
    \ % 3 == 0) {\n    //                 $count++;\n    //             }\n    //\
    \         }\n    //     }\n    // }\n    // return $count;\n    // your code here\n\
    \    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i\
    \ + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n      \
    \  for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k <\
    \ $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n  \
    \                  $count++;\n                }\n            }\n        }\n  \
    \  }\n    return $count;\n}", "    $a = range(1, $n);\n    $ans = 0;\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n    \
    \        for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j]\
    \ + $a[$k]) % 3 == 0) {\n                    $ans++;\n                }\n    \
    \        }\n        }\n    }\n    return $ans;\n}", "    \n}\n", "  $a = range(1,\
    \ $n);\n  for ($i = 0; $i < $n; $i++) {\n    $a[$i] = $a[$i] * $a[$i] - $a[$i]\
    \ + 1;\n  }\n  $count = 0;\n  for ($i = 0; $i < $n - 2; $i++) {\n    for ($j =\
    \ $i + 1; $j < $n - 1; $j++) {\n      for ($k = $j + 1; $k < $n; $k++) {\n   \
    \     if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n          $count++;\n      \
    \  }\n      }\n    }\n  }\n  return $count;\n}", "\t$a = $j = $k = array();\n\t\
    $sum = 0;\n\tfor ($i = 1; $i <= $n; $i++) {\n\t\t$a[$i] = $i * $i - $i + 1;\n\t\
    }\n\tfor ($i = 1; $i <= $n; $i++) {\n\t\tfor ($j = $i+1; $j <= $n; $j++) {\n\t\
    \t\t$sum = $a[$i] + $a[$j];\n\t\t\tfor ($k = $j+1; $k <= $n; $k++) {\n\t\t\t\t\
    if (($sum + $a[$k]) % 3 == 0) {\n\t\t\t\t\techo \"$a[$i], $a[$j], $a[$k]<br>\"\
    ;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}", "    $a = [];\n    for ($i = 1; $i <= $n;\
    \ $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $triples = 0;\n    for\
    \ ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++)\
    \ {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i]\
    \ + $a[$j] + $a[$k]) % 3 == 0) {\n                    $triples++;\n          \
    \      }\n            }\n        }\n    }\n    return $triples;\n}", "    $result\
    \ = 0;\n    $sum = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        for ($j = $i\
    \ + 1; $j <= $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n  \
    \              $sum = $i * $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1;\n\
    \                if ($sum % 3 == 0) {\n                    $result += 1;\n   \
    \             }\n            }\n        }\n    }\n    return $result;\n}\necho\
    \ get_max_triples(5);", "    $sum = 0;\n    for ($i = 1; $i < $n - 1; $i++) {\n\
    \        $sum += $i;\n    }\n    return $sum;\n}\n\n$n = 5;\nvar_dump(get_max_triples($n));",
  "\t$results = 0;\n\tfor ($i = 1; $i < $n - 1; $i++) {\n\t\tfor ($j = $i + 1; $j\
    \ < $n; $j++) {\n\t\t\tfor ($k = $j + 1; $k <= $n; $k++) {\n\t\t\t\tif ((($i *\
    \ $i - $i + 1) + ($j * $j - $j + 1) + ($k * $k - $k + 1)) % 3 == 0) {\n\t\t\t\t\
    \t$results++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn $results;\n}\necho get_max_triples(5)\
    \ . PHP_EOL;", "  $triples = 0;\n  $count = $n;\n  $i = 0;\n  while ($count >\
    \ 0) {\n    $a[$i] = $i * $i - $i + 1;\n    $count--;\n    $i++;\n  }\n  for ($i\
    \ = 0; $i < count($a); $i++) {\n    for ($j = $i + 1; $j < count($a); $j++) {\n\
    \      for ($k = $j + 1; $k < count($a); $k++) {\n        if (($a[$i] + $a[$j]\
    \ + $a[$k]) % 3 == 0) {\n          $triples++;\n        }\n      }\n    }\n  }\n\
    \  return $triples;\n}\n\necho get_max_triples(5);", "  if ($n < 3) {\n    return\
    \ 0;\n  }\n  $count = 0;\n  for ($i = 1; $i < $n; $i++) {\n    for ($j = $i +\
    \ 1; $j < $n; $j++) {\n      for ($k = $j + 1; $k < $n; $k++) {\n        if (($i\
    \ * $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n         \
    \ $count++;\n        }\n      }\n    }\n  }\n  return $count;\n}\n", "    $array\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $array[] = $i * $i - $i +\
    \ 1;\n    }\n    return count(get_triples($array));\n}\n", "    $count = 0;\n\
    \    for ($i = 1; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n\
    \            for ($k = $j + 1; $k < $n; $k++) {\n                if (($i * $i\
    \ - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n              \
    \      $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[]\
    \ = $i * $i - $i + 1;\n    }\n    $counter = 0;\n    for ($i = 0; $i < $n - 2;\
    \ $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k\
    \ = $j + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) %\
    \ 3 == 0) {\n                    $counter++;\n                }\n            }\n\
    \        }\n    }\n    return $counter;\n}\necho get_max_triples(5) . \"\\n\";",
  "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    $result = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n       \
    \ for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n;\
    \ $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n      \
    \              $result++;\n                }\n            }\n        }\n    }\n\
    \    return $result;\n}\n$n = 5;\necho get_max_triples($n);", "    $a = array();\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $result = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i\
    \ + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $result++;\n                }\n            }\n        }\n    }\n    return\
    \ $result;\n}\n", "    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n   \
    \     $a[] = $i * $i - $i + 1;\n    }\n    $sum = 0;\n    for ($i = 0; $i < $n;\
    \ $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n            for ($k = $j\
    \ + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 ==\
    \ 0) {\n                    $sum++;\n                }\n            }\n      \
    \  }\n    }\n    return $sum;\n}\n\necho get_max_triples(5);\n", "    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i\
    \ + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n", "    $counter = 0;\n    for ($i = 1; $i < $n; $i++) {\n     \
    \   for ($j = $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n;\
    \ $k++) {\n                if (($i * $i - $i + 1 + $j * $j - $j + 1 + $k * $k\
    \ - $k + 1) % 3 == 0) {\n                    $counter++;\n                }\n\
    \            }\n        }\n    }\n    return $counter;\n}", "    $arr = range(1,\
    \ $n);\n    for ($i = 0; $i < $n; $i++) {\n        $arr[$i] = pow($i + 1, 2) -\
    \ $i - 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n   \
    \     for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k\
    \ < $n; $k++) {\n                if (($arr[$i] + $arr[$j] + $arr[$k]) % 3 == 0)\
    \ {\n                    $count++;\n                }\n            }\n       \
    \ }\n    }\n    return $count;\n}", "    $sum = 0;\n    for ($i = 1; $i < $n;\
    \ $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n            $t = ($i *\
    \ $i - $i + 1) + ($j * $j - $j + 1);\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($t + ($k * $k - $k + 1)) % 3 == 0) {\n             \
    \       $sum++;\n                }\n            }\n        }\n    }\n    return\
    \ $sum;\n}", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] =\
    \ $i * $i - $i + 1;\n    }\n    $triples = 0;\n    for ($i = 0; $i < $n - 2; $i++)\
    \ {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j\
    \ + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 ==\
    \ 0) {\n                    $triples++;\n                }\n            }\n  \
    \      }\n    }\n    return $triples;\n}\necho get_max_triples(5) . PHP_EOL;",
  "    $result = 0;\n    for ($i = 1; $i < $n; $i++) {\n        for ($j = $i + 1;\
    \ $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n         \
    \       if (($i * $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0)\
    \ {\n                    $result++;\n                }\n            }\n      \
    \  }\n    }\n    return $result;\n}", "    $total = $triples = 0;\n    for ($i\
    \ = 1; $i <= $n; $i++) {\n        $total += $i * $i - $i + 1;\n        if ($total\
    \ % 3 == 0) {\n            $triples++;\n        }\n    }\n    return $triples;\n\
    }\necho get_max_triples(5);", "    $count = 0;\n    for ($i = 1; $i < $n - 1;\
    \ $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n            for ($k = $j\
    \ + 1; $k <= $n; $k++) {\n                if (($i * $i - $i + 1 + $j * $j - $j\
    \ + 1 + $k * $k - $k + 1) % 3 == 0) {\n                    $count++;\n       \
    \         }\n            }\n        }\n    }\n    return $count;\n}", "    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n \
    \               if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                 \
    \   $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}", "    \n}", "    $a = range(1, $n);\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        $a[$i] = $a[$i] * $a[$i] - $a[$i] + 1;\n    }\n    $count = 0;\n\
    \    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1;\
    \ $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if\
    \ (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n   \
    \             }\n            }\n        }\n    }\n    return $count;\n}\n", " \
    \   if ($n <= 1) {\n        return 0;\n    }\n    $a = [];\n    for ($i = 1; $i\
    \ <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $t_count = 0;\n\
    \    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1;\
    \ $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if\
    \ (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $t_count++;\n \
    \               }\n            }\n        }\n    }\n    return $t_count;\n}\n\n\
    $res = get_max_triples(5);\nprint_r($res);\necho PHP_EOL;", "    $a = [];\n  \
    \  for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n \
    \   $max = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1;\
    \ $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n     \
    \           if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $max++;\n\
    \                }\n            }\n        }\n    }\n    return $max;\n}", " \
    \   $count = 0;\n    for ($i = 1; $i < $n; $i++) {\n        for ($j = $i + 1;\
    \ $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n         \
    \       if (is_multiple_of_3($i, $j, $k)) {\n                    $count++;\n \
    \               }\n            }\n        }\n    }\n    return $count;\n}\n",
  "    $a = range(1, $n);\n    for ($i = 0; $i < $n; $i++) {\n        $a[$i] = $a[$i]\
    \ * $a[$i] - $a[$i] + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2;\
    \ $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k\
    \ = $j + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) %\
    \ 3 == 0) {\n                    $count++;\n                }\n            }\n\
    \        }\n    }\n    return $count;\n}", "    $triple_count = 0;\n    $i = 1;\n\
    \    $j = 2;\n    $k = 3;\n    while ($i < $n - 2) {\n        $sum = $i + $j +\
    \ $k;\n        if ($sum % 3 == 0) {\n            $triple_count++;\n        }\n\
    \        $k++;\n        if ($k > $n) {\n            $j++;\n            $k = $j\
    \ + 1;\n        }\n        if ($j > $n - 1) {\n            $i++;\n           \
    \ $j = $i + 1;\n            $k = $j + 1;\n        }\n    }\n    return $triple_count;\n\
    }\necho get_max_triples(5);", "    $arr = [];\n    for ($i = 1; $i <= $n; $i++)\
    \ {\n        $arr[] = $i * $i - $i + 1;\n    }\n    $res = 0;\n    $l = count($arr);\n\
    \    for ($i = 0; $i < $l - 2; $i++) {\n        for ($j = $i + 1; $j < $l - 1;\
    \ $j++) {\n            for ($k = $j + 1; $k < $l; $k++) {\n                if\
    \ (($arr[$i] + $arr[$j] + $arr[$k]) % 3 == 0) {\n                    $res++;\n\
    \                }\n            }\n        }\n    }\n    return $res;\n}\n", " \
    \   $count = 0;\n    $arr = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[]\
    \ = $i * $i - $i + 1;\n    }\n    for ($i = 0; $i < $n - 2; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if ($arr[$i] + $arr[$j] + $arr[$k] % 3 == 0) {\n        \
    \            $count++;\n                }\n            }\n        }\n    }\n \
    \   return $count;\n}\necho get_max_triples(5);", "    $a = [];\n    for ($i =\
    \ 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count =\
    \ 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++)\
    \ {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i]\
    \ + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n            \
    \    }\n            }\n        }\n    }\n    return $count;\n}\n\necho get_max_triples(6);",
  "    $a = range(1, $n);\n    $max = 0;\n    for ($i = 0; $i < $n; $i++) {\n    \
    \    for ($j = $i + 1; $j < $n; $j++) {\n            if ($a[$i] + $a[$j] > $a[$n\
    \ - 1]) break;\n            $sum = $a[$i] + $a[$j];\n            $l = $j + 1;\n\
    \            $r = $n - 1;\n            while ($l <= $r) {\n                $m\
    \ = intval(($l + $r) / 2);\n                if ($a[$m] == $sum) {\n          \
    \          $max++;\n                    break;\n                } else if ($a[$m]\
    \ < $sum) {\n                    $l = $m + 1;\n                } else {\n    \
    \                $r = $m - 1;\n                }\n            }\n        }\n \
    \   }\n    return $max;\n}\n\necho get_max_triples(5) . PHP_EOL;", "    $sum =\
    \ 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n\
    \ - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n             \
    \   if ((($i + 1) * ($i + 1) - ($i + 1) + 1) + (($j + 1) * ($j + 1) - ($j + 1)\
    \ + 1) + (($k + 1) * ($k + 1) - ($k + 1) + 1) % 3 == 0) {\n                  \
    \  $sum++;\n                }\n            }\n        }\n    }\n    return $sum;\n\
    }\necho get_max_triples(5);", "    // Find the number of triples (a[i], a[j],\
    \ a[k]) of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of\
    \ 3.\n    $triples = 0;\n    $a = [];\n    // Go through the array and populate\
    \ it with the formula.\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i\
    \ * $i - $i + 1;\n    }\n    // For the 3 numbers, find the sum of those numbers\
    \ and test if its a multiple of 3.\n    for ($i = 0; $i < count($a); $i++) {\n\
    \        for ($j = $i + 1; $j < count($a); $j++) {\n            for ($k = $j +\
    \ 1; $k < count($a); $k++) {\n                $sum = $a[$i] + $a[$j] + $a[$k];\n\
    \                if ($sum % 3 == 0) {\n                    $triples++;\n     \
    \           }\n            }\n        }\n    }\n    return $triples;\n}\n", " \
    \   $sum = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j\
    \ < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n            \
    \    if (($i + 1) * ($i + 1) - ($i + 1) + 1 + ($j + 1) * ($j + 1) - ($j + 1) +\
    \ 1 + ($k + 1) * ($k + 1) - ($k + 1) + 1 % 3 == 0) {\n                    $sum++;\n\
    \                }\n            }\n        }\n    }\n    return $sum;\n}\necho\
    \ get_max_triples(5);", "    $cnt = 0;\n    for ($i = 1; $i < $n; $i++) {\n  \
    \      for ($j = $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k <\
    \ $n; $k++) {\n                if (($i * $i - $i + 1 + $j * $j - $j + 1 + $k *\
    \ $k - $k + 1) % 3 == 0) {\n                    $cnt++;\n                }\n \
    \           }\n        }\n    }\n    return $cnt;\n}\n", "    $myarray = [1];\n\
    \    for ($i = 1; $i < $n; $i++) {\n        $myarray[] = $i * $i - $i + 1;\n \
    \   }\n    $myarray[count($myarray)] = $n * $n - $n + 1;\n    $count = 0;\n  \
    \  for ($i = 0; $i < count($myarray); $i++) {\n        for ($j = $i+1; $j < count($myarray);\
    \ $j++) {\n            for ($k = $j+1; $k < count($myarray); $k++) {\n       \
    \         if (($myarray[$i] + $myarray[$j] + $myarray[$k]) % 3 == 0) {\n     \
    \               $count += 1;\n                }\n            }\n        }\n  \
    \  }\n    return $count;\n}", "    $arr = [];\n    for ($i = 1; $i <= $n; $i++)\
    \ {\n        $arr[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i =\
    \ 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n  \
    \          for ($k = $j + 1; $k < $n; $k++) {\n                if (($arr[$i] +\
    \ $arr[$j] + $arr[$k]) % 3 == 0) {\n                    $count++;\n          \
    \      }\n            }\n        }\n    }\n    return $count;\n}\n\n$n = 5;\n\
    print_r(get_max_triples($n));", "    $result = 0;\n    for ($i = 1; $i < $n; $i++)\
    \ {\n        for ($j = $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1;\
    \ $k < $n; $k++) {\n                if (($i * $i - $i + 1 + $j * $j - $j + 1 +\
    \ $k * $k - $k + 1) % 3 == 0) {\n                    $result++;\n            \
    \    }\n            }\n        }\n    }\n    return $result;\n}\necho get_max_triples(5);",
  "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i +\
    \ 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n\
    \                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                \
    \    $count++;\n                }\n            }\n        }\n    }\n    return\
    \ $count;\n}\n", "    if ($n === 0) {\n        return 0;\n    }\n    $result =\
    \ 0;\n    $arr = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[] = $i\
    \ * $i - $i + 1;\n    }\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j\
    \ = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if ($arr[$i] + $arr[$j] + $arr[$k] % 3 === 0) {\n       \
    \             $result++;\n                }\n            }\n        }\n    }\n\
    \    return $result;\n}\n", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n\
    \        $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i\
    \ < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n            for ($k\
    \ = $j + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) %\
    \ 3 == 0) {\n                    $count++;\n                }\n            }\n\
    \        }\n    }\n    return $count;\n}\n\necho get_max_triples(5);", "    //\
    \ \u8BA1\u7B97a[i]\n    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n       \
    \ $a[] = $i * $i - $i + 1;\n    }\n    // \u904D\u5386\uFF0C\u5224\u65ADa[i] +\
    \ a[j] + a[k]\u662F\u5426\u662F3\u7684\u500D\u6570\n    $max = 0;\n    for ($i\
    \ = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n        \
    \    for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j]\
    \ + $a[$k]) % 3 == 0) {\n                    $max++;\n                }\n    \
    \        }\n        }\n    }\n    return $max;\n}\necho get_max_triples(5);",
  "    \n}", "\t$triples = 0;\n\tfor ($i = 1; $i < $n; $i++) {\n\t\tfor ($j = $i +\
    \ 1; $j < $n; $j++) {\n\t\t\tfor ($k = $j + 1; $k < $n; $k++) {\n\t\t\t\tif (($i\
    \ * $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n\t\t\t\t\t\
    $triples++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn $triples;\n}", "    $a =\
    \ [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $count = 0;\n    $n = count($a);\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        for ($j = $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1;\
    \ $k < $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n\
    \                    $count++;\n                }\n            }\n        }\n\
    \    }\n    return $count;\n}\n\necho get_max_triples(5);", "    $a = [];\n  \
    \  for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n \
    \   $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i +\
    \ 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n  \
    \              if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                  \
    \  $count++;\n                }\n            }\n        }\n    }\n    return $count;\n\
    }", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i\
    \ - $i + 1;\n    }\n    $res = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n   \
    \     for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k\
    \ < $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n\
    \                    $res++;\n                }\n            }\n        }\n  \
    \  }\n    return $res;\n}\n", "    $a = range(1, $n);\n    $l = count($a);\n \
    \   $count = 0;\n    for ($i = 0; $i < $l; $i++) {\n        for ($j = $i + 1;\
    \ $j < $l; $j++) {\n            for ($k = $j + 1; $k < $l; $k++) {\n         \
    \       if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n\
    \                }\n            }\n        }\n    }\n    return $count;\n}\n$res\
    \ = get_max_triples(5);\necho $res;", "  //\n}", "    $num = 0;\n    for ($i =\
    \ 1; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n          \
    \  for ($k = $j + 1; $k < $n; $k++) {\n                if (($i * $i - $i + 1 +\
    \ $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n                    $num++;\n\
    \                }\n            }\n        }\n    }\n    return $num;\n}\n", " \
    \   $a = range(1, $n);\n    $count = 0;\n    for ($i = 0; $i < count($a); $i++)\
    \ {\n        for ($j = $i + 1; $j < count($a); $j++) {\n            for ($k =\
    \ $j + 1; $k < count($a); $k++) {\n                if (($a[$i] + $a[$j] + $a[$k])\
    \ % 3 == 0) {\n                    $count++;\n                }\n            }\n\
    \        }\n    }\n    return $count;\n}", "    $a = [];\n    for ($i = 1; $i\
    \ <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n \
    \   for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1;\
    \ $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if\
    \ (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n   \
    \             }\n            }\n        }\n    }\n    return $count;\n}", "  \
    \  $array = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $array[] = $i * $i\
    \ - $i + 1;\n    }\n    $triples = 0;\n    $size = count($array);\n    for ($i\
    \ = 0; $i < $size; $i++) {\n        for ($j = $i + 1; $j < $size; $j++) {\n  \
    \          for ($k = $j + 1; $k < $size; $k++) {\n                if (($array[$i]\
    \ + $array[$j] + $array[$k]) % 3 == 0) {\n                    $triples++;\n  \
    \              }\n            }\n        }\n    }\n    return $triples;\n}\n\n\
    print_r(get_max_triples(5));", "    $output = [];\n    for ($i = 1; $i <= $n;\
    \ $i++) {\n        $array[] = $i * $i - $i + 1;\n    }\n    for ($i = 0; $i <\
    \ count($array); $i++) {\n        for ($j = 0; $j < count($array); $j++) {\n \
    \           for ($k = 0; $k < count($array); $k++) {\n                if (($array[$i]\
    \ + $array[$j] + $array[$k]) % 3 == 0 && $i < $j && $j < $k) {\n             \
    \       $output[] = array($array[$i], $array[$j], $array[$k]);\n             \
    \   }\n            }\n        }\n    }\n    return count($output);\n}", "    $a\
    \ = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n\
    \    }\n    $triples = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $triples++;\n                }\n            }\n        }\n    }\n   \
    \ return $triples;\n}", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n  \
    \      $a[] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for ($i = 0; $i\
    \ < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n        \
    \    for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j]\
    \ + $a[$k]) % 3 == 0) {\n                    $result++;\n                }\n \
    \           }\n        }\n    }\n    return $result;\n}\n", "    $tr = 0;\n  \
    \  $ar = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $ar[] = $i * $i - $i\
    \ + 1;\n    }\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1;\
    \ $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n     \
    \           if (($ar[$i] + $ar[$j] + $ar[$k]) % 3 == 0) {\n                  \
    \  $tr++;\n                }\n            }\n        }\n    }\n    return $tr;\n\
    }\n", "    $ar = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $ar[] = $i *\
    \ $i - $i + 1;\n    }\n    $sum = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n\
    \        for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1;\
    \ $k < $n; $k++) {\n                if (($ar[$i] + $ar[$j] + $ar[$k]) % 3 == 0)\
    \ {\n                    $sum++;\n                }\n            }\n        }\n\
    \    }\n    return $sum;\n}\necho get_max_triples(5);", "\t$a = [1];\n\tfor ($i\
    \ = 1; $i < $n; $i++) {\n\t\t$a[] = $i * $i - $i + 1;\n\t}\n\t$result = 0;\n\t\
    for ($i = 0; $i < $n - 2; $i++) {\n\t\tfor ($j = $i + 1; $j < $n - 1; $j++) {\n\
    \t\t\tfor ($k = $j + 1; $k < $n; $k++) {\n\t\t\t\tif (($a[$i] + $a[$j] + $a[$k])\
    \ % 3 == 0) {\n\t\t\t\t\t$result++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ $result;\n}\necho get_max_triples(5);", "    $count = 0;\n    $arr = [];\n \
    \   for ($i = 1; $i <= $n; $i++) {\n        $arr[] = $i * $i - $i + 1;\n    }\n\
    \    for ($i = 0; $i < count($arr); $i++) {\n        for ($j = $i + 1; $j < count($arr);\
    \ $j++) {\n            for ($k = $j + 1; $k < count($arr); $k++) {\n         \
    \       if(($arr[$i] + $arr[$j] + $arr[$k]) % 3 == 0) {\n                    $count++;\n\
    \                }\n            }\n        }\n    }\n    return $count;\n}", " \
    \   $arr = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[] = $i * $i -\
    \ $i + 1;\n    }\n    $res = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n     \
    \   for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k <\
    \ $n; $k++) {\n                if (($arr[$i] + $arr[$j] + $arr[$k]) % 3 == 0)\
    \ {\n                    $res++;\n                }\n            }\n        }\n\
    \    }\n    return $res;\n}\necho get_max_triples(5) . PHP_EOL;", "  $triples\
    \ = 0;\n  for ($i = 1; $i < $n; $i++) {\n    for ($j = $i + 1; $j < $n; $j++)\
    \ {\n      for ($k = $j + 1; $k < $n; $k++) {\n        if (($i * $i - $i + 1 +\
    \ $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n          $triples++;\n  \
    \      }\n      }\n    }\n  }\n  return $triples;\n}\n", "    $a = [];\n    for\
    \ ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $cnt\
    \ = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j <\
    \ $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n          \
    \      if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $cnt++;\n\
    \                }\n            }\n        }\n    }\n    return $cnt;\n}", " \
    \   \n}\n", "    $counter = 0;\n    for ($i = 1; $i < $n; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($i * $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k +\
    \ 1) % 3 == 0) {\n                    $counter++;\n                }\n       \
    \     }\n        }\n    }\n    return $counter;\n}\necho get_max_triples(5);",
  "    $triples = 0;\n    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[]\
    \ = $i * $i - $i + 1;\n    }\n    for ($i = 0; $i < $n - 2; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n            \
    \        $triples++;\n                }\n            }\n        }\n    }\n   \
    \ return $triples;\n}\n", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n\
    \        $a[] = $i * $i - $i + 1;\n    }\n    return get_count_triples($a);\n\
    }\n", "    $a = range(1, $n);\n    $a = array_map(function($x) {\n        return\
    \ $x * $x - $x + 1;\n    }, $a);\n    $cnt = 0;\n    for ($i = 0; $i < $n - 2;\
    \ $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k\
    \ = $j + 1; $k < $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3\
    \ == 0) {\n                    $cnt++;\n                }\n            }\n   \
    \     }\n    }\n    return $cnt;\n}\n", "    \n}\n\nprint_r(get_max_triples(5));",
  "    $triples = 0;\n    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[]\
    \ = $i * $i - $i + 1;\n    }\n    // var_dump($a);\n    $n = count($a);\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n    \
    \        for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j]\
    \ + $a[$k]) % 3 == 0) {\n                    $triples++;\n                }\n\
    \            }\n        }\n    }\n    return $triples;\n}\necho get_max_triples(5);",
  "    $a = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i -\
    \ $i + 1;\n    }\n    $s = $a[0] + $a[1] + $a[2];\n    $n = 0;\n    for ($i =\
    \ 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n  \
    \          for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j]\
    \ + $a[$k]) % 3 == 0) {\n                    $n++;\n                }\n      \
    \      }\n        }\n    }\n    return $n;\n}\necho get_max_triples(5);", "  \
    \  $sum = 0;\n    for ($i = 1; $i < $n - 1; $i++) {\n        for ($j = $i + 1;\
    \ $j < $n; $j++) {\n            for ($k = $j + 1; $k <= $n; $k++) {\n        \
    \        if (($i * $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0)\
    \ {\n                    $sum++;\n                }\n            }\n        }\n\
    \    }\n    return $sum;\n}\n\necho get_max_triples(5) . PHP_EOL;", "    \n}",
  "    if ($n < 3) return 0;\n    $a = [1];\n    for ($i = 1; $i < $n; $i++) {\n \
    \       $a[] = $i * $i - $i + 1;\n    }\n    // print_r($a);\n    $count = 0;\n\
    \    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n\
    \            for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i] +\
    \ $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n              \
    \  }\n            }\n        }\n    }\n    return $count;\n}", "    $a = [];\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n\
    \    $count = 0;\n    $result = [];\n    for ($i = 0; $i < count($a); $i++) {\n\
    \        for ($j = $i + 1; $j < count($a); $j++) {\n            for ($k = $j +\
    \ 1; $k < count($a); $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) %\
    \ 3 == 0) {\n                    $count++;\n                    $result[] = [$a[$i],\
    \ $a[$j], $a[$k]];\n                }\n            }\n        }\n    }\n    print_r($result);\n\
    \    return $count;\n}\n\n$n = 5;\necho get_max_triples($n);", "  $arr = range(1,\
    \ $n);\n  $arr = array_map(function($x) {\n    return $x * $x - $x + 1;\n  },\
    \ $arr);\n  $result = 0;\n  for ($i = 0; $i < $n - 2; $i++) {\n    for ($j = $i\
    \ + 1; $j < $n - 1; $j++) {\n      for ($k = $j + 1; $k < $n; $k++) {\n      \
    \  if (($arr[$i] + $arr[$j] + $arr[$k]) % 3 === 0) {\n          $result++;\n \
    \       }\n      }\n    }\n  }\n  return $result;\n}", "    // if ($n < 3) {\n\
    \    //     return 0;\n    // }\n    // $i = 1;\n    // $result = 0;\n    // while\
    \ ($i < $n - 1) {\n    //     $j = $i + 1;\n    //     while ($j < $n) {\n   \
    \ //         $k = $j + 1;\n    //         while ($k <= $n) {\n    //         \
    \    if ($i * $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1 % 3 == 0) {\n\
    \    //                 $result++;\n    //             }\n    //             $k++;\n\
    \    //         }\n    //         $j++;\n    //     }\n    //     $i++;\n    //\
    \ }\n    // return $result;\n    $a = [];\n    $result = 0;\n    for ($i = 1;\
    \ $i <= $n; $i++) {\n        $a[$i] = $i * $i - $i + 1;\n    }\n    for ($i =\
    \ 1; $i < $n - 1; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n      \
    \      for ($k = $j + 1; $k <= $n; $k++) {\n                if (($a[$i] + $a[$j]\
    \ + $a[$k]) % 3 == 0) {\n                    $result++;\n                }\n \
    \           }\n        }\n    }\n    return $result;\n}\n", "    $nums = range(1,\
    \ $n);\n    for ($i = 0; $i < $n; $i++) {\n        $nums[$i] = $nums[$i] * $nums[$i]\
    \ - $nums[$i] + 1;\n    }\n    $triples = 0;\n    for ($i = 0; $i < $n - 2; $i++)\
    \ {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j\
    \ + 1; $k < $n; $k++) {\n                if (($nums[$i] + $nums[$j] + $nums[$k])\
    \ % 3 == 0) {\n                    $triples++;\n                }\n          \
    \  }\n        }\n    }\n    return $triples;\n}", "  $triples = 0;\n  $values\
    \ = array();\n  for ($i = 1; $i <= $n; $i++) {\n    $values[] = $i * $i - $i +\
    \ 1;\n  }\n  $length = count($values);\n  for ($i = 0; $i < $length; $i++) {\n\
    \    for ($j = $i + 1; $j < $length; $j++) {\n      for ($k = $j + 1; $k < $length;\
    \ $k++) {\n        if (($values[$i] + $values[$j] + $values[$k]) % 3 == 0) {\n\
    \          $triples++;\n        }\n      }\n    }\n  }\n  return $triples;\n}",
  "    $a = range(1, $n);\n    $count = 0;\n    foreach ($a as $i => $a1) {\n    \
    \    for ($j = $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n;\
    \ $k++) {\n                if (($a1 + $a[$j] + $a[$k]) % 3 == 0) {\n         \
    \           $count++;\n                }\n            }\n        }\n    }\n  \
    \  return $count;\n}\n$n = 5;\necho get_max_triples($n);", "    $count = 0;\n\
    \    $arr = array();\n    for ($i = 1; $i <= $n; $i++) {\n        $arr[] = $i\
    \ * $i - $i + 1;\n    }\n    for ($i = 0; $i < count($arr); $i++) {\n        for\
    \ ($j = $i + 1; $j < count($arr); $j++) {\n            for ($k = $j + 1; $k <\
    \ count($arr); $k++) {\n                if (($arr[$i] + $arr[$j] + $arr[$k]) %\
    \ 3 == 0) {\n                    $count++;\n                }\n            }\n\
    \        }\n    }\n    return $count;\n}\necho \"<pre>\";\necho get_max_triples(5);\n\
    echo \"</pre>\";", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n       \
    \ $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n -\
    \ 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n            for\
    \ ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k])\
    \ % 3 == 0) {\n                    $count++;\n                }\n            }\n\
    \        }\n    }\n    return $count;\n}\n\necho get_max_triples(5) . PHP_EOL;\n\
    echo get_max_triples(7) . PHP_EOL;\necho get_max_triples(12) . PHP_EOL;\n", " \
    \   $count = 0;\n    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[]\
    \ = $i * $i - $i + 1;\n    }\n    for ($i = 0; $i < $n - 2; $i++) {\n        for\
    \ ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++)\
    \ {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) $count++;\n    \
    \        }\n        }\n    }\n    return $count;\n}\n", "  if ($n < 3) {\n   \
    \ return 0;\n  }\n  $arr = [];\n  for ($i = 1; $i <= $n; $i++) {\n    $arr[] =\
    \ $i * $i - $i + 1;\n  }\n  $result = 0;\n  for ($i = 0; $i < $n - 2; $i++) {\n\
    \    for ($j = $i + 1; $j < $n - 1; $j++) {\n      for ($k = $j + 1; $k < $n;\
    \ $k++) {\n        if (($arr[$i] + $arr[$j] + $arr[$k]) % 3 === 0) {\n       \
    \   $result++;\n        }\n      }\n    }\n  }\n  return $result;\n}\necho get_max_triples(5);",
  "\t$triple_count = 0;\n\tfor ($i = 1; $i < $n - 1; $i++) {\n\t\tfor ($j = $i + 1;\
    \ $j < $n; $j++) {\n\t\t\tfor ($k = $j + 1; $k <= $n; $k++) {\n\t\t\t\tif (($i\
    \ * $i - $i + 1) + ($j * $j - $j + 1) + ($k * $k - $k + 1) % 3 == 0) {\n\t\t\t\
    \t\t$triple_count++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn $triple_count;\n\
    }\necho get_max_triples(5);", "    $a = [];\n    for ($i = 1; $i <= $n; $i++)\
    \ {\n        $a[] = $i * $i - $i + 1;\n    }\n    $result = 0;\n    for ($i =\
    \ 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n  \
    \          for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j]\
    \ + $a[$k]) % 3 == 0) {\n                    $result++;\n                }\n \
    \           }\n        }\n    }\n    return $result;\n}", "    if($n < 3) return\
    \ 0;\n    $res = 0;\n    for($i = 0; $i < $n; $i++) {\n        for($j = $i + 1;\
    \ $j < $n; $j++) {\n            for($k = $j + 1; $k < $n; $k++) {\n          \
    \      if(($i * $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n\
    \                    $res++;\n                }\n            }\n        }\n  \
    \  }\n    return $res;\n}\necho(get_max_triples(5));", "    $arr = [];\n    for\
    \ ($i = 1; $i <= $n; $i++) {\n        $arr[] = $i * $i - $i + 1;\n    }\n    $cnt\
    \ = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j <\
    \ $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n          \
    \      if (($arr[$i] + $arr[$j] + $arr[$k]) % 3 == 0) {\n                    $cnt++;\n\
    \                }\n            }\n        }\n    }\n    return $cnt;\n}\necho\
    \ get_max_triples(5);", "    $sum = 0;\n    for ($i = 1; $i < $n; $i++) {\n  \
    \      for ($j = $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k <\
    \ $n; $k++) {\n                if (($i * $i - $i + 1 + $j * $j - $j + 1 + $k *\
    \ $k - $k + 1) % 3 == 0) {\n                    $sum++;\n                }\n \
    \           }\n        }\n    }\n    return $sum;\n}\n\necho get_max_triples(5)\
    \ . \"\\n\";", "    $count = 0;\n    $a = range(1, $n);\n    for ($i = 0; $i <\
    \ $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n            for ($k\
    \ = $j + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) %\
    \ 3 == 0) {\n                    $count++;\n                }\n            }\n\
    \        }\n    }\n    return $count;\n}\necho get_max_triples(5);", "    $result\
    \ = 0;\n    for ($i = 1; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n;\
    \ $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if\
    \ (($i * $i - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n    \
    \                $result++;\n                }\n            }\n        }\n   \
    \ }\n    return $result;\n}\n\necho get_max_triples(5);", "    $trs = 0;\n   \
    \ for ($i = 1; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n\
    \            for ($k = $j + 1; $k < $n; $k++) {\n                if (($i * $i\
    \ - $i + 1 + $j * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n              \
    \      $trs++;\n                }\n            }\n        }\n    }\n    return\
    \ $trs;\n}\n$n = 5;\necho get_max_triples($n);", "    $a = [1];\n    for ($i =\
    \ 1; $i < $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $sum = 0;\n\
    \    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1;\
    \ $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if\
    \ ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $sum++;\n       \
    \         }\n            }\n        }\n    }\n    return $sum;\n}", "\n}", " \
    \   $num = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $num[] = $i * $i -\
    \ $i + 1;\n    }\n    $result = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n  \
    \      for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k\
    \ < $n; $k++) {\n                if (($num[$i] + $num[$j] + $num[$k]) % 3 == 0)\
    \ {\n                    $result++;\n                }\n            }\n      \
    \  }\n    }\n    return $result;\n}\n", "    \n}", "    $a = range(1, $n);\n \
    \   $res = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j\
    \ < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n            \
    \    if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $res++;\n\
    \                }\n            }\n        }\n    }\n    return $res;\n}", " \
    \ $result = 0;\n  $arr = array();\n  for ($i = 1; $i <= $n; $i++) {\n    $arr[]\
    \ = $i * $i - $i + 1;\n  }\n  for ($i = 0; $i < $n - 2; $i++) {\n    for ($j =\
    \ $i + 1; $j < $n - 1; $j++) {\n      for ($k = $j + 1; $k < $n; $k++) {\n   \
    \     if (($arr[$i] + $arr[$j] + $arr[$k]) % 3 == 0) $result++;\n      }\n   \
    \ }\n  }\n  return $result;\n}\necho get_max_triples(5);", "  $result = 0;\n \
    \ for ($i = 1; $i < $n - 1; $i++) {\n    for ($j = $i + 1; $j < $n; $j++) {\n\
    \      for ($k = $j + 1; $k <= $n; $k++) {\n        if (($i * $i - $i + 1 + $j\
    \ * $j - $j + 1 + $k * $k - $k + 1) % 3 == 0) {\n          $result++;\n      \
    \  }\n      }\n    }\n  }\n  return $result;\n}\n", "    // Write your code here\n\
    \    // To print results to the standard output you can use print\n    // Example:\
    \ print \"Hello world!\";\n}", "    $a = [];\n    for ($i = 1; $i <= $n; $i++)\
    \ {\n        $a[] = $i * $i - $i + 1;\n    }\n    $cnt = 0;\n    for ($i = 0;\
    \ $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n     \
    \       for ($k = $j + 1; $k < $n; $k++) {\n                if (($a[$i] + $a[$j]\
    \ + $a[$k]) % 3 == 0) $cnt++;\n            }\n        }\n    }\n    return $cnt;\n\
    }\n", "    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i\
    \ - $i + 1;\n    }\n    $triples = 0;\n    $k = 1;\n    while ($k < $n - 1) {\n\
    \        $j = $k + 1;\n        while ($j < $n) {\n            if (($a[$k] + $a[$j])\
    \ % 3 === 0) {\n                $triples++;\n            }\n            $j++;\n\
    \        }\n        $k++;\n    }\n    return $triples;\n}"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

name: HumanEval_51_remove_vowels
language: php
prompt: "<?php\n// remove_vowels is a function that takes string and returns string\
  \ without vowels.\n// >>> remove_vowels(\"\")\n// \"\"\n// >>> remove_vowels(\"\
  abcdef\")\n// \"bcdf\"\n// >>> remove_vowels(\"aaaaa\")\n// \"\"\n// >>> remove_vowels(\"\
  aaBAA\")\n// \"B\"\n// >>> remove_vowels(\"zbcd\")\n// \"zbcd\"\nfunction remove_vowels($text)\
  \ {\n"
tests: "function candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\n\
  function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
  ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
  \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
  ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
  ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"EcBOO\"\
  ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ybcd\"\
  ) !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $text_array = str_split($text);\n\
    \    foreach ($text_array as $letter) {\n        if (in_array($letter, $vowels))\
    \ {\n            unset($letter);\n        }\n    }\n    $text = implode($text_array);\n\
    \    return $text;\n}\n", "    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"A\", \"E\", \"I\", \"O\", \"U\");\n    $new_text = \"\";\n    for ($i =\
    \ 0; $i < strlen($text); $i++) {\n        if (!in_array($text[$i], $vowels)) {\n\
    \            $new_text .= $text[$i];\n        }\n    }\n    return $new_text;\n\
    }\n", "    // write your function body here.\n}", "    return preg_replace(\"\
    /[aeiou]/i\", \"\", $text);\n}\n", "    $vowels = array(\"a\", \"e\", \"i\", \"\
    o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\");\n    $text = str_replace($vowels,\
    \ \"\", $text);\n    return $text;\n}\n", "    $vowels = array(\"a\", \"e\", \"\
    i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\");\n    $result = \"\";\n\
    \    for ($i = 0; $i < strlen($text); $i++) {\n        if (!in_array($text[$i],\
    \ $vowels)) {\n            $result .= $text[$i];\n        }\n    }\n    return\
    \ $result;\n}\n\necho remove_vowels(\"aaBAA\") . \"\\n\";\necho remove_vowels(\"\
    zbcd\") . \"\\n\";\necho remove_vowels(\"\") . \"\\n\";\necho remove_vowels(\"\
    abcdef\") . \"\\n\";\necho remove_vowels(\"aaaaa\") . \"\\n\";", "    $text_array\
    \ = str_split($text);\n    $count = 0;\n    $result = \"\";\n    foreach ($text_array\
    \ as $value) {\n        if (\n        $value != \"a\" &&\n        $value != \"\
    e\" &&\n        $value != \"i\" &&\n        $value != \"o\" &&\n        $value\
    \ != \"u\" &&\n        $value != \"A\" &&\n        $value != \"E\" &&\n      \
    \  $value != \"I\" &&\n        $value != \"O\" &&\n        $value != \"U\"\n \
    \       ) {\n            $result .= $value;\n        }\n    }\n    return $result;\n\
    }\n", "\t$vowels = array('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U');\n\t\
    $result = str_replace($vowels, '', $text);\n\treturn $result;\n}", "  $vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n  $result = \"\";\n  for ($i = 0; $i\
    \ < strlen($text); $i++) {\n    if (!in_array($text[$i], $vowels)) {\n      $result\
    \ .= $text[$i];\n    }\n  }\n  return $result;\n}\n", "\t$vowels = array('a',\
    \ 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U');\n\t$new_text = str_replace($vowels,\
    \ '', $text);\n\treturn $new_text;\n}\n", "  return preg_replace(\"/[aeiou]/i\"\
    , \"\", $text);\n}\n", "\t//replace vowels with \"\"\n\t$no_vowels = preg_replace(\"\
    /[aeiou]/i\", \"\", $text);\n\treturn $no_vowels;\n}\n", "    $vowels = array(\"\
    a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\");\n    $text\
    \ = str_replace($vowels, \"\", $text);\n    return $text;\n}\n", "    $vowels\
    \ = array('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U');\n    return str_replace($vowels,\
    \ '', $text);\n}", "\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\"\
    , \"E\", \"I\", \"O\", \"U\");\n\treturn str_replace($vowels, \"\", $text);\n}",
  "  $text = str_split($text);\n  $vowels = array('a', 'e', 'i', 'o', 'u', 'A', 'E',\
    \ 'I', 'O', 'U');\n  $result = array();\n  foreach ($text as $letter) {\n    if\
    \ (!in_array($letter, $vowels)) {\n      $result[] = $letter;\n    }\n  }\n  return\
    \ implode('', $result);\n}\n", "\treturn preg_replace(\"/[aeiou]/i\", \"\", $text);\n\
    }\n", "    $text_length = strlen($text);\n    $vowels = [\"a\", \"e\", \"i\",\
    \ \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"];\n    $result = \"\";\n   \
    \ for ($i = 0; $i < $text_length; $i++) {\n        if (!in_array($text[$i], $vowels))\
    \ {\n            $result .= $text[$i];\n        }\n    }\n    return $result;\n\
    }\n", "  $vowels = array('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U');\n\
    \  return str_replace($vowels, '', $text);\n}\n", "  return preg_replace(\"/[aeiouAEIOU]/\"\
    , \"\", $text);\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

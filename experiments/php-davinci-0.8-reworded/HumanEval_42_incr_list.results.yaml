language: php
name: HumanEval_42_incr_list
results:
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n\t$res = array();\n\
    \tforeach ($l as $e) {\n\t\t$res[] = $e + 1;\n\t}\n\treturn $res;\n}\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  return array_map(function($a)\
    \ {\n    return $a + 1;\n  }, $l);\n}\n\nfunction candidate(...$args) {\n    return\
    \ incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n\tif ($l ==\
    \ null) {\n\t\treturn $l;\n\t}\n\t$ans = array();\n\tforeach ($l as $x) {\n\t\t\
    $ans[] = $x + 1;\n\t}\n\treturn $ans;\n}\n\nfunction candidate(...$args) {\n \
    \   return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823661
- exit_code: 255
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  // TODO\n\
    }\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqunxgj54.php:16\n\
    Stack trace:\n#0 /tmp/tmpqunxgj54.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpqunxgj54.php\
    \ on line 16\n"
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  if (count($l)\
    \ === 0) return $l;\n  $l[0]++;\n  return array_merge(array($l[0]), incr_list(array_slice($l,\
    \ 1)));\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    if ($l ==\
    \ array()) {\n        return array();\n    } else {\n        return array_merge(array(array_shift($l)\
    \ + 1), incr_list($l));\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    $k = array();\n\
    \    foreach ($l as $value) {\n        $k[] = $value + 1;\n    }\n    return $k;\n\
    }\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    $n = array();\n\
    \    for ($i = 0; $i < count($l); $i++) {\n        $n[] = $l[$i] + 1;\n    }\n\
    \    return $n;\n}\necho \"<pre>\";\nprint_r(incr_list(array(1, 2, 3)));\necho\
    \ \"</pre>\";\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 2\n    [1] => 3\n    [2] => 4\n)\n</pre>"
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $n = count($l);\n\
    \  for ($i = 0; $i < $n; $i++) {\n    $l[$i]++;\n  }\n  return $l;\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    $il = array();\n\
    \    foreach ($l as $v) {\n        $il[] = $v + 1;\n    }\n    return $il;\n}\n\
    \nfunction candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823661
- exit_code: 255
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    // Your\
    \ code here\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmryi_n65.php:16\n\
    Stack trace:\n#0 /tmp/tmpmryi_n65.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpmryi_n65.php\
    \ on line 16\n"
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $ret = array();\n\
    \  foreach ($l as $item) {\n    $ret[] = $item + 1;\n  }\n  return $ret;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $result =\
    \ array();\n  foreach ($l as $e) {\n    $result[] = $e + 1;\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    // Your\
    \ code here\n    return array_map(function($n) {\n        return $n + 1;\n   \
    \ }, $l);\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    return array_map(function($n)\
    \ { return $n + 1; }, $l);\n}\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n\t$new = array();\n\
    \tforeach ($l as $k => $v) {\n\t\t$new[$k] = $v + 1;\n\t}\n\treturn $new;\n}\n\
    \nfunction candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $result =\
    \ array();\n  foreach ($l as $val) {\n    $result[] = $val + 1;\n  }\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  return array_map(function($i)\
    \ {\n    return $i + 1;\n  }, $l);\n}\n\nfunction candidate(...$args) {\n    return\
    \ incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823661
- exit_code: 255
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  if ($l ==\
    \ array()) {\n    return array();\n  } else {\n    return array_merge(\n     \
    \ array(head($l) + 1),\n      incr_list(tail($l))\n    );\n  }\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function head() in /tmp/tmpwjq5jl3d.php:12\n\
    Stack trace:\n#0 /tmp/tmpwjq5jl3d.php(19): incr_list(Array)\n#1 /tmp/tmpwjq5jl3d.php(24):\
    \ candidate(Array)\n#2 /tmp/tmpwjq5jl3d.php(28): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmpwjq5jl3d.php on line 12\n"
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  return array_map(function($x)\
    \ { return $x + 1; }, $l);\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n\t\n\t// Create\
    \ a function that increments a value.\n\t$incr = function($value) {\n\t\t$value++;\n\
    \t\treturn $value;\n\t};\n\t\n\t// Change each value of the array.\n\t$new_array\
    \ = array_map($incr, $l);\n\t\n\treturn $new_array;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978991
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    $res = array();\n\
    \    foreach ($l as $e) {\n        $res[] = $e + 1;\n    }\n    return $res;\n\
    }\nfunction candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978991
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    for ($i\
    \ = 0; $i < count($l); $i++) {\n        $l[$i]++;\n    }\n    return $l;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978991
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  // WRITE ME!\n\
    \tforeach ($l as $k => $v) {\n\t\t$l[$k] = $v + 1;\n\t}\n\treturn $l;\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978991
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    $a = $l;\n\
    \    foreach ($a as &$x) {\n        $x = $x + 1;\n    }\n    return $a;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978991
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $inc_l = [];\n\
    \  foreach ($l as $num) {\n    $inc_l[] = $num + 1;\n  }\n  return $inc_l;\n}\n\
    \nfunction candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978991
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    return array_map(function($x)\
    \ { return $x + 1; }, $l);\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978991
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    return array_map(\n\
    \        function($x) { return $x + 1; },\n        $l\n    );\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978991
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    $a = [];\n\
    \    for ($i = 0; $i < count($l); $i++) {\n        $a[] = $l[$i] + 1;\n    }\n\
    \    return $a;\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978991
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n\t$mylist =\
    \ array();\n\tforeach ($l as $value) {\n\t\t$value++;\n\t\tarray_push($mylist,\
    \ $value);\n\t}\n\treturn $mylist;\n}\n\nfunction candidate(...$args) {\n    return\
    \ incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978991
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    $out = array();\n\
    \    foreach ($l as $i) {\n        $out[] = $i + 1;\n    }\n    return $out;\n\
    }\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978991
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n\tfor ($i =\
    \ 0; $i < count($l); $i++) {\n\t\t$l[$i]++;\n\t}\n\treturn $l;\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978991
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $o = array();\n\
    \  foreach ($l as $i) {\n    $o[] = $i + 1;\n  }\n  return $o;\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978991
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n\tfor ($i =\
    \ 0; $i < count($l); $i++) {\n\t\t$l[$i] = $l[$i] + 1;\n\t}\n\treturn $l;\n}\n\
    \nfunction candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978991
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    foreach\
    \ ($l as $key => $value) {\n        $l[$key]++;\n    }\n    return $l;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978991
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  // Your code\
    \ here...\n  for($i=0;$i<count($l);$i++){\n    $l[$i]+=1;\n  }\n  return $l;\n\
    }\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978991
- exit_code: 255
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    // your\
    \ code here\n}\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptegcsuam.php:15\n\
    Stack trace:\n#0 /tmp/tmptegcsuam.php(20): test()\n#1 {main}\n  thrown in /tmp/tmptegcsuam.php\
    \ on line 15\n"
  timestamp: 1659978991
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n\t$l2 = [];\n\
    \tfor ($i = 0; $i < count($l); $i++) {\n\t\t$l2[$i] = $l[$i] + 1;\n\t}\n\treturn\
    \ $l2;\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978991
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n\t$l1 = array();\n\
    \tfor ($i = 0; $i < count($l); $i++) {\n\t\t$l1[$i] = $l[$i] + 1;\n\t}\n\treturn\
    \ $l1;\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978991
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $i = 0;\n\
    \  foreach ($l as $n) {\n    $l[$i] = $n + 1;\n    $i = $i + 1;\n  }\n  return\
    \ $l;\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978991
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $new = [];\n\
    \  foreach ($l as $e) {\n    $new[] = $e + 1;\n  }\n  return $new;\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978991
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  return array_map(function($x)\
    \ { return $x + 1; }, $l);\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    $res = array();\n\
    \    foreach ($l as $e) {\n        $res[] = $e + 1;\n    }\n    return $res;\n\
    }\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n\t$l = array_map(function($x)\
    \ {\n\t\treturn $x + 1;\n\t}, $l);\n\treturn $l;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978991
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    return array_map(function($item)\
    \ {\n        return $item + 1;\n    }, $l);\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978991
- exit_code: 255
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    // Your\
    \ code here\n}\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpndbblisq.php:15\n\
    Stack trace:\n#0 /tmp/tmpndbblisq.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpndbblisq.php\
    \ on line 15\n"
  timestamp: 1659978991
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    return array_map(function($elem)\
    \ {\n        return $elem + 1;\n    }, $l);\n}\nfunction candidate(...$args) {\n\
    \    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978991
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    $answer\
    \ = array();\n    foreach ($l as $n) {\n        $answer[] = $n + 1;\n    }\n \
    \   return $answer;\n}\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978991
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $output =\
    \ array();\n  foreach ($l as $element) {\n    $output[] = $element + 1;\n  }\n\
    \  return $output;\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978991
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    // Write\
    \ your code here\n    // To print results to the standard output you can use print\n\
    \    // Example: print \"Hello world!\";\n    $res = [];\n    foreach ($l as $v)\
    \ {\n        $res[] = $v + 1;\n    }\n    return $res;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 255
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n\tforeach ($l\
    \ as $i) {\n\t\t$i++;\n\t\t$n[] = $i;\n\t}\n\treturn $n;\n}\nprint_r(incr_list(array(1,\
    \ 2, 3)));\nprint_r(incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123)));\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 2\n    [1] => 3\n    [2] => 4\n)\nArray\n(\n    [0]\
    \ => 6\n    [1] => 4\n    [2] => 6\n    [3] => 3\n    [4] => 4\n    [5] => 4\n\
    \    [6] => 10\n    [7] => 1\n    [8] => 124\n)\n\nWarning: Undefined variable\
    \ $n in /tmp/tmph5y8nimw.php on line 12\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmph5y8nimw.php:22\nStack trace:\n#0 /tmp/tmph5y8nimw.php(27):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmph5y8nimw.php on line 22\n"
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $r = array();\n\
    \  foreach ($l as $item) {\n    $r[] = $item + 1;\n  }\n  return $r;\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978991
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n\treturn array_map(function($i)\
    \ {\n\t\treturn $i + 1;\n\t}, $l);\n}\n\nfunction candidate(...$args) {\n    return\
    \ incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978991
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n\t// WRITE ME!\n\
    \t$newArray = array();\n\tforeach ($l as $element) {\n\t\t$newArray[] = $element\
    \ + 1;\n\t}\n\treturn $newArray;\n}\n\nfunction candidate(...$args) {\n    return\
    \ incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978991
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n\t$res = array();\n\
    \tforeach ($l as $el) {\n\t\t$res[] = $el + 1;\n\t}\n\treturn $res;\n}\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978991
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n\treturn array_map(function($n)\
    \ {\n\t\treturn $n + 1;\n\t}, $l);\n}\nfunction candidate(...$args) {\n    return\
    \ incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978991
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $ret = array();\n\
    \  foreach ($l as $v) {\n    $ret[] = $v + 1;\n  }\n  return $ret;\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n\tfor ($i =\
    \ 0; $i < count($l); $i++) {\n\t\t$l[$i]++;\n\t}\n\treturn $l;\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978991
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  foreach ($l\
    \ as $k => $v) {\n    $l[$k] = $v + 1;\n  }\n  return $l;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978991
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  return array_map(\n\
    \    function($x) {\n      return $x + 1;\n    },\n    $l\n  );\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978991
- exit_code: 255
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    // Write\
    \ your code here\n    // To print results to the standard output you can use print\n\
    \    // Example: print \"Hello world!\";\n}\nfunction candidate(...$args) {\n\
    \    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph8inmsr4.php:17\n\
    Stack trace:\n#0 /tmp/tmph8inmsr4.php(22): test()\n#1 {main}\n  thrown in /tmp/tmph8inmsr4.php\
    \ on line 17\n"
  timestamp: 1659978991
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    foreach\
    \ ($l as $key => $value) {\n        $l[$key] = $value + 1;\n    }\n    return\
    \ $l;\n}\necho 'incr_list(array(1, 2, 3)): ';\nprint_r(incr_list(array(1, 2, 3)));\n\
    echo '<br>';\necho 'incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123)): ';\nprint_r(incr_list(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)));\necho '<br>';\necho '<br>';\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "incr_list(array(1, 2, 3)): Array\n(\n    [0] => 2\n    [1] => 3\n    [2]\
    \ => 4\n)\n<br>incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123)): Array\n(\n    [0]\
    \ => 6\n    [1] => 4\n    [2] => 6\n    [3] => 3\n    [4] => 4\n    [5] => 4\n\
    \    [6] => 10\n    [7] => 1\n    [8] => 124\n)\n<br><br>"
  timestamp: 1659978991
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $new = array();\n\
    \  foreach ($l as $v) {\n    $new[] = $v + 1;\n  }\n  return $new;\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 255
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n\t// Your code\
    \ here\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkorq2x02.php:16\n\
    Stack trace:\n#0 /tmp/tmpkorq2x02.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpkorq2x02.php\
    \ on line 16\n"
  timestamp: 1659978991
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    return array_map(function($i)\
    \ {\n        return $i + 1;\n    }, $l);\n}\n\nfunction candidate(...$args) {\n\
    \    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978991
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n\t$a = array();\n\
    \tfor ($i = 0; $i < count($l); $i++) {\n\t\t$a[] = $l[$i] + 1;\n\t}\n\treturn\
    \ $a;\n}\nfunction candidate(...$args) {\n    return incr_list(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    $res = array();\n\
    \    foreach ($l as $e) {\n        $res[] = $e + 1;\n    }\n    return $res;\n\
    }\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n   foreach ($l\
    \ as $k => $v) {\n      $l[$k]++;\n   }\n   return $l;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 255
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    $i = 1;\n\
    \    foreach ($l as $key => $value) {\n        $l[$key] += $i;\n        $i++;\n\
    \    }\n    return $l;\n}\n\n$a = array(5, 3, 5, 2, 3, 3, 9, 0, 123);\n\necho\
    \ \"<pre>\";\nprint_r(incr_list($a));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 6\n    [1] => 5\n    [2] => 8\n    [3] => 6\n\
    \    [4] => 8\n    [5] => 9\n    [6] => 16\n    [7] => 8\n    [8] => 132\n)\n\
    </pre>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpttzf63sf.php:27\n\
    Stack trace:\n#0 /tmp/tmpttzf63sf.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpttzf63sf.php\
    \ on line 27\n"
  timestamp: 1659978992
- exit_code: 255
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    $l[0]++;\n\
    \    for ($i = 1; $i < count($l); $i++) {\n        $l[$i] = $l[$i-1] + 1;\n  \
    \  }\n    return $l;\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpkjafbn9p.php on line 8\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpkjafbn9p.php:20\nStack\
    \ trace:\n#0 /tmp/tmpkjafbn9p.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpkjafbn9p.php\
    \ on line 20\n"
  timestamp: 1659978992
- exit_code: 255
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    // Your\
    \ code here.\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp85kwlwxp.php:16\n\
    Stack trace:\n#0 /tmp/tmp85kwlwxp.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp85kwlwxp.php\
    \ on line 16\n"
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    if (is_array($l))\
    \ {\n        $new_list = array();\n        foreach ($l as $value) {\n        \
    \    $new_list[] = $value + 1;\n        }\n        return $new_list;\n    } else\
    \ {\n        return null;\n    }\n}\nfunction candidate(...$args) {\n    return\
    \ incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $nl = array();\n\
    \  foreach ($l as $e) {\n    $nl[] = $e + 1;\n  }\n  return $nl;\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    $result\
    \ = array();\n    foreach ($l as $value) {\n        $result[] = $value + 1;\n\
    \    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  return array_map(function($n)\
    \ {\n    return $n + 1;\n  }, $l);\n}\nfunction candidate(...$args) {\n    return\
    \ incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  return array_map(function($x)\
    \ { return $x + 1; }, $l);\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $s = $l;\n\
    \  foreach ($s as &$n) {\n    $n++;\n  }\n  return $s;\n}\necho \"<br/>\".\"incr_list(array(1,\
    \ 2, 3)): \";\nprint_r(incr_list(array(1, 2, 3)));\n\necho \"<br/>\".\"incr_list(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)): \";\nprint_r(incr_list(array(5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123)));\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "<br/>incr_list(array(1, 2, 3)): Array\n(\n    [0] => 2\n    [1] => 3\n\
    \    [2] => 4\n)\n<br/>incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123)): Array\n\
    (\n    [0] => 6\n    [1] => 4\n    [2] => 6\n    [3] => 3\n    [4] => 4\n    [5]\
    \ => 4\n    [6] => 10\n    [7] => 1\n    [8] => 124\n)\n"
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n\tfor ($i =\
    \ 0; $i < count($l); $i++) {\n\t\t$l[$i]++;\n\t}\n\treturn $l;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n\tif (empty($l))\
    \ return $l;\n\t$l[0] = $l[0] + 1;\n\treturn array_merge(array($l[0]), incr_list(array_slice($l,\
    \ 1)));\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $new_list\
    \ = array();\n  for ($i = 0; $i < count($l); $i++) {\n    $new_list[] = $l[$i]\
    \ + 1;\n  }\n  return $new_list;\n}\n\nfunction candidate(...$args) {\n    return\
    \ incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  // YOUR CODE\
    \ HERE\n  return array_map(\n    function($elem) {\n      return $elem + 1;\n\
    \    },\n    $l\n  );\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    $retval\
    \ = array();\n    foreach ($l as $el) {\n        $retval[] = $el + 1;\n    }\n\
    \    return $retval;\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n\t// Use array_map()\
    \ to apply the $inc function to each element of the list.\n\treturn array_map(function($i)\
    \ {\n\t\treturn $i + 1;\n\t}, $l);\n}\n\nfunction candidate(...$args) {\n    return\
    \ incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  foreach ($l\
    \ as $k => $val) {\n    $l[$k] = $val + 1;\n  }\n  return $l;\n}\nvar_dump(incr_list(array(1,\
    \ 2, 3)));\nvar_dump(incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123)));\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "array(3) {\n  [0]=>\n  int(2)\n  [1]=>\n  int(3)\n  [2]=>\n  int(4)\n}\n\
    array(9) {\n  [0]=>\n  int(6)\n  [1]=>\n  int(4)\n  [2]=>\n  int(6)\n  [3]=>\n\
    \  int(3)\n  [4]=>\n  int(4)\n  [5]=>\n  int(4)\n  [6]=>\n  int(10)\n  [7]=>\n\
    \  int(1)\n  [8]=>\n  int(124)\n}\n"
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    return array_map(\n\
    \        function($i) { return $i + 1; },\n        $l\n    );\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    foreach\
    \ ($l as $i => $v) {\n        $l[$i] = $v + 1;\n    }\n    return $l;\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    $newList\
    \ = array();\n    foreach ($l as $v) {\n        $newList[] = $v + 1;\n    }\n\
    \    return $newList;\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  return array_map(function($n)\
    \ { return $n + 1; }, $l);\n}\nprint_r(incr_list(array(1, 2, 3)));\nprint_r(incr_list(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)));\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 2\n    [1] => 3\n    [2] => 4\n)\nArray\n(\n    [0]\
    \ => 6\n    [1] => 4\n    [2] => 6\n    [3] => 3\n    [4] => 4\n    [5] => 4\n\
    \    [6] => 10\n    [7] => 1\n    [8] => 124\n)\n"
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $ret = array();\n\
    \  foreach ($l as $item) {\n    $ret[] = $item + 1;\n  }\n  return $ret;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  if (!count($l))\
    \ {\n    return array();\n  } else {\n    $rest = incr_list(array_slice($l, 1));\n\
    \    array_unshift($rest, $l[0] + 1);\n    return $rest;\n  }\n}\n\nprint_r(incr_list(array(1,\
    \ 2, 3)));\nprint_r(incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123)));\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 2\n    [1] => 3\n    [2] => 4\n)\nArray\n(\n    [0]\
    \ => 6\n    [1] => 4\n    [2] => 6\n    [3] => 3\n    [4] => 4\n    [5] => 4\n\
    \    [6] => 10\n    [7] => 1\n    [8] => 124\n)\n"
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    $newList\
    \ = array();\n    foreach ($l as $el) {\n        $newList[] = $el + 1;\n    }\n\
    \    return $newList;\n}\n\n$a = array(1, 2, 3);\n$b = array(5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123);\n$c = incr_list($a);\n$d = incr_list($b);\necho \"a = {$a}\\n\"\
    ;\necho \"b = {$b}\\n\";\necho \"c = {$c}\\n\";\necho \"d = {$d}\\n\";\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Array to string conversion in /tmp/tmpqydjrp9k.php on line 19

    a = Array


    Warning: Array to string conversion in /tmp/tmpqydjrp9k.php on line 20

    b = Array


    Warning: Array to string conversion in /tmp/tmpqydjrp9k.php on line 21

    c = Array


    Warning: Array to string conversion in /tmp/tmpqydjrp9k.php on line 22

    d = Array

    '
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    $l1 = [];\n\
    \    foreach ($l as $v) {\n        $l1[] = $v + 1;\n    }\n    return $l1;\n}\n\
    \nfunction candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 255
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n\tforeach ($l\
    \ as $v) {\n\t\t$res[] = $v + 1;\n\t}\n\treturn $res;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $res in /tmp/tmpkqvv0tps.php on line 11\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkqvv0tps.php:19\nStack\
    \ trace:\n#0 /tmp/tmpkqvv0tps.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpkqvv0tps.php\
    \ on line 19\n"
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $result =\
    \ array();\n  foreach ($l as $e) {\n    $result[] = $e + 1;\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    foreach\
    \ ($l as $key => $value) {\n        $l[$key]++;\n    }\n    return $l;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978991
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    $m = array();\n\
    \    foreach ($l as $x) {\n        $m[] = $x + 1;\n    }\n    return $m;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 255
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $l[0]++;\n\
    \  $l[1]++;\n  $l[2]++;\n  return $l;\n}\n\nvar_dump(incr_list(array(1, 2, 3)));\n\
    var_dump(incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123)));\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "array(3) {\n  [0]=>\n  int(2)\n  [1]=>\n  int(3)\n  [2]=>\n  int(4)\n}\n\
    array(9) {\n  [0]=>\n  int(6)\n  [1]=>\n  int(4)\n  [2]=>\n  int(6)\n  [3]=>\n\
    \  int(2)\n  [4]=>\n  int(3)\n  [5]=>\n  int(3)\n  [6]=>\n  int(9)\n  [7]=>\n\
    \  int(0)\n  [8]=>\n  int(123)\n}\n\nWarning: Undefined array key 0 in /tmp/tmp9pxhjg4h.php\
    \ on line 8\n\nWarning: Undefined array key 1 in /tmp/tmp9pxhjg4h.php on line\
    \ 9\n\nWarning: Undefined array key 2 in /tmp/tmp9pxhjg4h.php on line 10\n\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmp9pxhjg4h.php:21\nStack trace:\n\
    #0 /tmp/tmp9pxhjg4h.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp9pxhjg4h.php\
    \ on line 21\n"
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    $incr_l\
    \ = array();\n    for ($i = 0; $i < count($l); $i++) {\n        $incr_l[$i] =\
    \ $l[$i] + 1;\n    }\n    return $incr_l;\n}\n\nfunction candidate(...$args) {\n\
    \    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  return array_map(function($x)\
    \ { return $x + 1; }, $l);\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    // Your\
    \ code here\n    foreach ($l as $key => $value) {\n        $l[$key]++;\n    }\n\
    \    return $l;\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $ret = array();\n\
    \  foreach ($l as $e) {\n    $ret[] = $e + 1;\n  }\n  return $ret;\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    return array_map(function($n)\
    \ {\n        return $n + 1;\n    }, $l);\n}\n\nfunction candidate(...$args) {\n\
    \    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n\t$result =\
    \ array();\n\tforeach ($l as $value) {\n\t\t$result[] = $value + 1;\n\t}\n\treturn\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 255
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n\t$arr = [];\n\
    \t$arr[] = $l[0] + 1;\n\t$arr[] = $l[1] + 1;\n\t$arr[] = $l[2] + 1;\n\t$arr[]\
    \ = $l[3] + 1;\n\t$arr[] = $l[4] + 1;\n\t$arr[] = $l[5] + 1;\n\t$arr[] = $l[6]\
    \ + 1;\n\t$arr[] = $l[7] + 1;\n\t$arr[] = $l[8] + 1;\n\t$arr[] = $l[9] + 1;\n\t\
    return $arr;\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmp67kmy7gu.php on line 9\n\n\
    Warning: Undefined array key 1 in /tmp/tmp67kmy7gu.php on line 10\n\nWarning:\
    \ Undefined array key 2 in /tmp/tmp67kmy7gu.php on line 11\n\nWarning: Undefined\
    \ array key 3 in /tmp/tmp67kmy7gu.php on line 12\n\nWarning: Undefined array key\
    \ 4 in /tmp/tmp67kmy7gu.php on line 13\n\nWarning: Undefined array key 5 in /tmp/tmp67kmy7gu.php\
    \ on line 14\n\nWarning: Undefined array key 6 in /tmp/tmp67kmy7gu.php on line\
    \ 15\n\nWarning: Undefined array key 7 in /tmp/tmp67kmy7gu.php on line 16\n\n\
    Warning: Undefined array key 8 in /tmp/tmp67kmy7gu.php on line 17\n\nWarning:\
    \ Undefined array key 9 in /tmp/tmp67kmy7gu.php on line 18\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp67kmy7gu.php:27\nStack trace:\n#0 /tmp/tmp67kmy7gu.php(32):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp67kmy7gu.php on line 27\n"
  timestamp: 1659978992
- exit_code: 255
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    // TODO:\
    \ Write your code here!\n    return $l;\n}\nfunction candidate(...$args) {\n \
    \   return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprsnpx5w7.php:17\n\
    Stack trace:\n#0 /tmp/tmprsnpx5w7.php(21): test()\n#1 {main}\n  thrown in /tmp/tmprsnpx5w7.php\
    \ on line 17\n"
  timestamp: 1659978992
- exit_code: 255
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe2gv37rf.php:16\n\
    Stack trace:\n#0 /tmp/tmpe2gv37rf.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpe2gv37rf.php\
    \ on line 16\n"
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n\t$l1 = array();\n\
    \tforeach ($l as $value) {\n\t\t$l1[] = $value + 1;\n\t}\n\treturn $l1;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $result =\
    \ array();\n  foreach ($l as $e) {\n    $result[] = $e + 1;\n  }\n  return $result;\n\
    }\n\necho \"<h1>Test #1</h1>\";\n$test = array(1, 2, 3);\n$expected = array(2,\
    \ 3, 4);\n$result = incr_list($test);\nif ($result == $expected) {\n  echo \"\
    Passed\";\n} else {\n  echo \"Failed\";\n}\necho \"<br/>\";\n\necho \"<h1>Test\
    \ #2</h1>\";\n$test = array(5, 3, 5, 2, 3, 3, 9, 0, 123);\n$expected = array(6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124);\n$result = incr_list($test);\nif ($result == $expected)\
    \ {\n  echo \"Passed\";\n} else {\n  echo \"Failed\";\n}\necho \"<br/>\";\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '<h1>Test #1</h1>Passed<br/><h1>Test #2</h1>Passed<br/>'
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n\t$array = array();\n\
    \tforeach ($l as $value) {\n\t\t$array[] = $value + 1;\n\t}\n\treturn $array;\n\
    }\nfunction candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n\t$arr = array();\n\
    \t$i = 0;\n\tforeach ($l as $val) {\n\t\t$arr[$i] = $val + 1;\n\t\t$i++;\n\t}\n\
    \treturn $arr;\n}\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    return array_map(function($x)\
    \ { return $x + 1; }, $l);\n}\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n\t// IMPLEMENT\
    \ ME\n\tfor($i=0;$i<count($l);$i++){\n\t\t$l[$i] = $l[$i]+1;\n\t}\n\treturn $l;\n\
    }\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n\t$newList =\
    \ array();\n\tforeach ($l as $x) {\n\t\t$newList[] = $x + 1;\n\t}\n\treturn $newList;\n\
    }\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    foreach\
    \ ($l as $key => $val) {\n        $l[$key]++;\n    }\n    return $l;\n}\n\nprint_r(incr_list(array(1,\
    \ 2, 3)));\nprint_r(incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123)));\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 2\n    [1] => 3\n    [2] => 4\n)\nArray\n(\n    [0]\
    \ => 6\n    [1] => 4\n    [2] => 6\n    [3] => 3\n    [4] => 4\n    [5] => 4\n\
    \    [6] => 10\n    [7] => 1\n    [8] => 124\n)\n"
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    return array_map(function($x)\
    \ { return $x + 1; }, $l);\n}\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  if (empty($l))\
    \ {\n    return array();\n  }\n  $head = $l[0];\n  $tail = array_slice($l, 1);\n\
    \  return array_merge(array($head + 1), incr_list($tail));\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n\t$a = array();\n\
    \tforeach ($l as $item) {\n\t\t$a[] = $item + 1;\n\t}\n\treturn $a;\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  // BEGIN\n\
    \  foreach ($l as &$item) {\n    $item++;\n  }\n  return $l;\n  // END\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    return array_map(function($x)\
    \ { return $x + 1; }, $l);\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978991
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  return array_map(function($x)\
    \ {\n    return $x + 1;\n  }, $l);\n}\n\nfunction candidate(...$args) {\n    return\
    \ incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n\t$r = array();\n\
    \tfor ($i = 0; $i < count($l); $i++) {\n\t\t$r[] = $l[$i] + 1;\n\t}\n\treturn\
    \ $r;\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n\t$result =\
    \ array();\n\tforeach ($l as $element) {\n\t\t$result[] = $element + 1;\n\t}\n\
    \treturn $result;\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n\t$incr = array();\n\
    \tforeach ($l as $e) {\n\t\t$incr[] = $e + 1;\n\t}\n\treturn $incr;\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    foreach\
    \ ($l as $i => $e) {\n        $l[$i] = $e + 1;\n    }\n    return $l;\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  // NOTE: No\
    \ problem to iterate over the array from the end with\n  // `for($i = count($l)\
    \ - 1; $i >= 0; $i--) {`.\n  // But this loop is faster because of less arithmetic\
    \ operations:\n  for($i = count($l); $i > 0;) {\n    $i--;\n    $l[$i]++;\n  }\n\
    \  return $l;\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    $result\
    \ = array();\n    foreach ($l as $value) {\n        $result[] = $value + 1;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n\t$incr_list\
    \ = array();\n\tforeach ($l as $k => $v) {\n\t\t$incr_list[$k] = $v + 1;\n\t}\n\
    \treturn $incr_list;\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $arr = array();\n\
    \  $cnt = count($l);\n  for ($i = 0; $i < $cnt; $i++) {\n    $arr[] = $l[$i] +\
    \ 1;\n  }\n  return $arr;\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n\t// TODO: Implement\
    \ incr_list\n\t$result = [];\n\tforeach ($l as $element) {\n\t\t$result[] = $element\
    \ + 1;\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    $result\
    \ = array();\n    foreach ($l as $value) {\n        $result[] = $value + 1;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  for ($i =\
    \ 0; $i < count($l); $i++) {\n    $l[$i] = $l[$i] + 1;\n  }\n  return $l;\n}\n\
    \nfunction candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 255
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n\t// your code\
    \ here\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpct5eg250.php:16\n\
    Stack trace:\n#0 /tmp/tmpct5eg250.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpct5eg250.php\
    \ on line 16\n"
  timestamp: 1659978992
- exit_code: 255
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    if (count($l)\
    \ == 0) {\n        return $l;\n    } else {\n        return array_merge(\n   \
    \         array(incr_list($l[0])),\n            incr_list(array_slice($l, 1))\n\
    \        );\n    }\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: count(): Argument #1 ($value) must be\
    \ of type Countable|array, int given in /tmp/tmpk8incnbl.php:8\nStack trace:\n\
    #0 /tmp/tmpk8incnbl.php(12): incr_list(3)\n#1 /tmp/tmpk8incnbl.php(19): incr_list(Array)\n\
    #2 /tmp/tmpk8incnbl.php(24): candidate(Array)\n#3 /tmp/tmpk8incnbl.php(28): test()\n\
    #4 {main}\n  thrown in /tmp/tmpk8incnbl.php on line 8\n"
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $l_length\
    \ = count($l);\n  $new_l = array();\n  for ($i = 0; $i < $l_length; $i++) {\n\
    \    $new_l[$i] = $l[$i] + 1;\n  }\n  return $new_l;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  foreach ($l\
    \ as $k => $v) {\n    $l[$k]++;\n  }\n  return $l;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n\t// TODO: Your\
    \ code here!\n\t// Hint: Use array_map.\n\t$l = array_map(function($e) { return\
    \ $e + 1; }, $l);\n\treturn $l;\n}\n\nfunction candidate(...$args) {\n    return\
    \ incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $l2 = array();\n\
    \  foreach ($l as $x) {\n    $l2[] = $x + 1;\n  }\n  return $l2;\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n   $a = [];\n\
    \   foreach ($l as $val) {\n      $a[] = $val + 1;\n   }\n   return $a;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    // YOUR\
    \ CODE HERE\n    return array_map(function($a){return $a+1;},$l);\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 255
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  if (empty($l))\
    \ return array();\n  return array_merge(array(head($l) + 1), incr_list(tail($l)));\n\
    }\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function head() in /tmp/tmpou4opihn.php:9\n\
    Stack trace:\n#0 /tmp/tmpou4opihn.php(13): incr_list(Array)\n#1 /tmp/tmpou4opihn.php(18):\
    \ candidate(Array)\n#2 /tmp/tmpou4opihn.php(22): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmpou4opihn.php on line 9\n"
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    // Your\
    \ code here\n    return array_map(function($e) { return $e + 1; }, $l);\n}\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  return array_map(function($v)\
    \ {\n    return $v + 1;\n  }, $l);\n}\n\nfunction candidate(...$args) {\n    return\
    \ incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    $m = [];\n\
    \    foreach ($l as $e) {\n        $m[] = $e + 1;\n    }\n    return $m;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    $result\
    \ = array();\n    foreach ($l as $i) {\n        $result[] = $i + 1;\n    }\n \
    \   return $result;\n}\n\n$result = incr_list(array(1, 2, 3));\nprint(\"result[0]:\
    \ \".$result[0].\"\\n\");\nprint(\"result[1]: \".$result[1].\"\\n\");\nprint(\"\
    result[2]: \".$result[2].\"\\n\");\n\n$result = incr_list(array(5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123));\nprint(\"result[0]: \".$result[0].\"\\n\");\nprint(\"result[1]:\
    \ \".$result[1].\"\\n\");\nprint(\"result[2]: \".$result[2].\"\\n\");\nprint(\"\
    result[3]: \".$result[3].\"\\n\");\nprint(\"result[4]: \".$result[4].\"\\n\");\n\
    print(\"result[5]: \".$result[5].\"\\n\");\nprint(\"result[6]: \".$result[6].\"\
    \\n\");\nprint(\"result[7]: \".$result[7].\"\\n\");\nprint(\"result[8]: \".$result[8].\"\
    \\n\");\nfunction candidate(...$args) {\n    return incr_list(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'result[0]: 2

    result[1]: 3

    result[2]: 4

    result[0]: 6

    result[1]: 4

    result[2]: 6

    result[3]: 3

    result[4]: 4

    result[5]: 4

    result[6]: 10

    result[7]: 1

    result[8]: 124

    '
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $res = array();\n\
    \  foreach ($l as $value) {\n    $res[] = $value + 1;\n  }\n  return $res;\n}\n\
    \nfunction candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    return array_map(function($element)\
    \ {\n        return $element + 1;\n    }, $l);\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 255
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    $f = function($arr,\
    \ $sum) {\n        $i = count($arr) - 1;\n        if ($i == 0) {\n           \
    \ return array($arr[0] + $sum);\n        }\n        $last = array_pop($arr);\n\
    \        $arr = $f($arr, $sum);\n        $last = $last + $sum;\n        array_push($arr,\
    \ $last);\n        return $arr;\n    };\n    return $f($l, 1);\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $f in /tmp/tmpv0x0g1_6.php on line 14\n\n\
    Fatal error: Uncaught Error: Value of type null is not callable in /tmp/tmpv0x0g1_6.php:14\n\
    Stack trace:\n#0 /tmp/tmpv0x0g1_6.php(19): {closure}(Array, 1)\n#1 /tmp/tmpv0x0g1_6.php(23):\
    \ incr_list(Array)\n#2 /tmp/tmpv0x0g1_6.php(27): candidate(Array)\n#3 /tmp/tmpv0x0g1_6.php(32):\
    \ test()\n#4 {main}\n  thrown in /tmp/tmpv0x0g1_6.php on line 14\n"
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    foreach\
    \ ($l as $key => $value) {\n        $l[$key] = $value + 1;\n    }\n    return\
    \ $l;\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    //... your\
    \ code ...\n    return array_map(function($a){return $a+1;},$l);\n}\n$l=array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123);\nprint_r(incr_list($l));\n\necho \"<hr>\";\necho\
    \ \"<hr>\";\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 6\n    [1] => 4\n    [2] => 6\n    [3] => 3\n    [4]\
    \ => 4\n    [5] => 4\n    [6] => 10\n    [7] => 1\n    [8] => 124\n)\n<hr><hr>"
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  foreach ($l\
    \ as $key => $value) {\n    $l[$key]++;\n  }\n  return $l;\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n\t$result =\
    \ array();\n\tforeach ($l as $num) {\n\t\t$result[] = $num + 1;\n\t}\n\treturn\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n\t$new_array\
    \ = array();\n\tforeach ($l as $value) {\n\t\t$new_array[] = $value + 1;\n\t}\n\
    \treturn $new_array;\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  if (count($l)\
    \ == 0) {\n    return $l;\n  }\n  $a = array();\n  for ($i = 0; $i < count($l);\
    \ $i++) {\n    $a[] = $l[$i] + 1;\n  }\n  return $a;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $a = array();\n\
    \  foreach ($l as $e) {\n    $a[] = $e + 1;\n  }\n  return $a;\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  return array_map(function($x)\
    \ { return $x + 1; }, $l);\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    $result\
    \ = array();\n    foreach ($l as $item) {\n        $result[] = $item + 1;\n  \
    \  }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    $len = count($l);\n\
    \    $list = array();\n    for ($i = 0; $i < $len; $i++) {\n        $list[$i]\
    \ = $l[$i] + 1;\n    }\n    return $list;\n}\n\nfunction candidate(...$args) {\n\
    \    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $map = function($e)\
    \ {\n    return $e + 1;\n  };\n  return array_map($map, $l);\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n   $res = array();\n\
    \   foreach ($l as $k => $v) {\n      $res[$k] = $v + 1;\n   }\n   return $res;\n\
    }\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $l_out = array();\n\
    \  foreach ($l as $i) {\n    $l_out[] = $i + 1;\n  }\n  return $l_out;\n}\necho\
    \ implode(\",\", incr_list(array(1, 2, 3))) . \"<br>\";\necho implode(\",\", incr_list(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123))) . \"<br>\";\n\nfunction candidate(...$args) {\n\
    \    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 2,3,4<br>6,4,6,3,4,4,10,1,124<br>
  timestamp: 1659978992
- exit_code: 255
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    // Your\
    \ code here\n}\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpndbblisq.php:15\n\
    Stack trace:\n#0 /tmp/tmpndbblisq.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpndbblisq.php\
    \ on line 15\n"
  timestamp: 1659978991
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    // Write\
    \ your code here\n    // To print results to the standard output you can use print\n\
    \    // Example: print \"Hello world!\";\n    $size = count($l);\n    for($i=0;$i<$size;$i++){\n\
    \        $l[$i]++;\n    }\n    return $l;\n}\n\n$list = array(1,2,3);\n$list =\
    \ incr_list($list);\nvar_dump($list);\n\nfunction candidate(...$args) {\n    return\
    \ incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "array(3) {\n  [0]=>\n  int(2)\n  [1]=>\n  int(3)\n  [2]=>\n  int(4)\n}\n"
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n\tfor ($i =\
    \ 0; $i < count($l); $i++) {\n\t\t$l[$i]++;\n\t}\n\treturn $l;\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978991
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    if (!is_array($l))\
    \ {\n        return 0;\n    }\n    $new_list = array();\n    for ($i = 0; $i <\
    \ count($l); $i++) {\n        $new_list[$i] = $l[$i] + 1;\n    }\n    return $new_list;\n\
    }\n\n$l = array(5, 3, 5, 2, 3, 3, 9, 0, 123);\n$out = incr_list($l);\n\nfor ($i\
    \ = 0; $i < count($out); $i++) {\n    echo $out[$i];\n    echo \"\\n\";\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '6

    4

    6

    3

    4

    4

    10

    1

    124

    '
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $a = array();\n\
    \  for ($i = 0; $i < count($l); $i++) {\n    $a[] = $l[$i] + 1;\n  }\n  return\
    \ $a;\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n\treturn array_map(function($e)\
    \ { return $e + 1; }, $l);\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  return array_map(function($item)\
    \ { return $item + 1; }, $l);\n}\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n\t$new_l = array();\n\
    \tforeach ($l as $e) {\n\t\t$new_l[] = $e + 1;\n\t}\n\treturn $new_l;\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 255
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    // Your\
    \ code here...\n}\n$test1 = incr_list(array(1, 2, 3));\n$test2 = incr_list(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123));\nif (!array_equal($test1, array(2, 3, 4))) {\n \
    \   echo \"Failed first test. Expected \" . json_encode(array(2, 3, 4)) . \" got\
    \ \" . json_encode($test1) . \"\\n\";\n} else if (!array_equal($test2, array(6,\
    \ 4, 6, 3, 4, 4, 10, 1, 124))) {\n    echo \"Failed second test. Expected \" .\
    \ json_encode(array(6, 4, 6, 3, 4, 4, 10, 1, 124)) . \" got \" . json_encode($test2)\
    \ . \"\\n\";\n} else {\n    echo \"All tests passed!\\n\";\n}\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function array_equal()\
    \ in /tmp/tmp7pyad5ai.php:12\nStack trace:\n#0 {main}\n  thrown in /tmp/tmp7pyad5ai.php\
    \ on line 12\n"
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  return array_map(function($x)\
    \ { return $x + 1; }, $l);\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    $a = array();\n\
    \    for ($i = 0; $i < count($l); $i++) {\n        $a[$i] = $l[$i] + 1;\n    }\n\
    \    return $a;\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n\treturn array_map(function($e)\
    \ {\n\t\treturn $e + 1;\n\t}, $l);\n}\n\nfunction candidate(...$args) {\n    return\
    \ incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    $new_l =\
    \ array();\n    foreach ($l as $element) {\n        $new_l[] = $element + 1;\n\
    \    }\n    return $new_l;\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    if ($l ===\
    \ null) {\n        return null;\n    } else if (count($l) == 0) {\n        return\
    \ array();\n    } else {\n        $a = array_shift($l);\n        return array_merge(array($a\
    \ + 1), incr_list($l));\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    return array_map(\n\
    \        function($x) { return $x + 1; },\n        $l\n    );\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978991
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    $result\
    \ = array();\n    foreach ($l as $element) {\n        $result[] = $element + 1;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n\t$r = [];\n\
    \tforeach ($l as $v) {\n\t\t$r[] = $v + 1;\n\t}\n\treturn $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n\t$new_l = array();\n\
    \tforeach ($l as $v) {\n\t\t$new_l[] = $v + 1;\n\t}\n\treturn $new_l;\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    // YOUR\
    \ CODE HERE\n    foreach ($l as $i => $v) {\n    \t$l[$i] = $v + 1;\n    }\n \
    \   return $l;\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $result =\
    \ array();\n  foreach ($l as $x) {\n    $result[] = $x + 1;\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n\treturn array_map(function($e)\
    \ { return $e + 1; }, $l);\n}\necho \"Result of incr_list: \";\nprint_r(incr_list(array(1,\
    \ 2, 3)));\nprint_r(incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123)));\n\necho \"\
    <hr />\";\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Result of incr_list: Array\n(\n    [0] => 2\n    [1] => 3\n    [2] => 4\n\
    )\nArray\n(\n    [0] => 6\n    [1] => 4\n    [2] => 6\n    [3] => 3\n    [4] =>\
    \ 4\n    [5] => 4\n    [6] => 10\n    [7] => 1\n    [8] => 124\n)\n<hr />"
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n\t$i = 0;\n\t\
    while ($i < count($l)) {\n\t\t$l[$i] = $l[$i] + 1;\n\t\t$i = $i + 1;\n\t}\n\t\
    return $l;\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n\treturn array_map(function($x)\
    \ { return $x + 1; }, $l);\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n\t$incr_list\
    \ = array();\n\tfor ($i = 0; $i < count($l); $i++) {\n\t\t$incr_list[$i] = $l[$i]\
    \ + 1;\n\t}\n\treturn $incr_list;\n}\n\nfunction candidate(...$args) {\n    return\
    \ incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n\t$r = array();\n\
    \tforeach ($l as $x) {\n\t\t$r[] = $x + 1;\n\t}\n\treturn $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n\t$len = count($l);\n\
    \tfor ($i = 0; $i < $len; $i++) {\n\t\t$l[$i]++;\n\t}\n\treturn $l;\n}\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    $res = array();\n\
    \    foreach ($l as $item) {\n        $res[] = $item + 1;\n    }\n    return $res;\n\
    }\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n\tfor ($i =\
    \ 0; $i < count($l); $i++) {\n\t\t$l[$i]++;\n\t}\n\treturn $l;\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978991
- exit_code: 255
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n\t// TODO\n\t\
    foreach ($l as $value) {\n\t\t$value++;\n\t\t$result[] = $value;\n\t}\n\treturn\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $result in /tmp/tmpp8luf4ti.php on line 13\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp8luf4ti.php:21\nStack\
    \ trace:\n#0 /tmp/tmpp8luf4ti.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpp8luf4ti.php\
    \ on line 21\n"
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n\t$return =\
    \ [];\n\tforeach ($l as $value) {\n\t\t$return[] = $value + 1;\n\t}\n\treturn\
    \ $return;\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 255
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    // YOUR\
    \ CODE HERE\n    return array_map('incr', $l);\n}\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_map(): Argument #1 ($callback)\
    \ must be a valid callback or null, function \"incr\" not found or invalid function\
    \ name in /tmp/tmpjmzq7t13.php:9\nStack trace:\n#0 /tmp/tmpjmzq7t13.php(9): array_map('incr',\
    \ Array)\n#1 /tmp/tmpjmzq7t13.php(13): incr_list(Array)\n#2 /tmp/tmpjmzq7t13.php(17):\
    \ candidate(Array)\n#3 /tmp/tmpjmzq7t13.php(22): test()\n#4 {main}\n  thrown in\
    \ /tmp/tmpjmzq7t13.php on line 9\n"
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n\t$i = 0;\n\t\
    foreach ($l as $value) {\n\t\t$l[$i] = $value + 1;\n\t\t$i++;\n\t}\n\treturn $l;\n\
    }\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  foreach ($l\
    \ as $key => $val) {\n    $l[$key] = $val + 1;\n  }\n  return $l;\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 255
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  // WRITE THIS\
    \ FUNCTION\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplcalmt7x.php:16\n\
    Stack trace:\n#0 /tmp/tmplcalmt7x.php(21): test()\n#1 {main}\n  thrown in /tmp/tmplcalmt7x.php\
    \ on line 16\n"
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    $result\
    \ = array();\n    foreach ($l as $key => $value) {\n        $result[$key] = $value\
    \ + 1;\n    }\n    return $result;\n}\necho '<pre>';\nprint_r(incr_list(array(1,\
    \ 2, 3)));\necho '</pre>';\necho '<br>';\necho '<pre>';\nprint_r(incr_list(array(5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123)));\necho '</pre>';\n\necho '<hr>';\n\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 2\n    [1] => 3\n    [2] => 4\n)\n</pre><br><pre>Array\n\
    (\n    [0] => 6\n    [1] => 4\n    [2] => 6\n    [3] => 3\n    [4] => 4\n    [5]\
    \ => 4\n    [6] => 10\n    [7] => 1\n    [8] => 124\n)\n</pre><hr>"
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $ret = array();\n\
    \  for ($i = 0; $i < count($l); $i++) {\n    $ret[] = $l[$i] + 1;\n  }\n  return\
    \ $ret;\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    // WRITE\
    \ ME!\n    return array_map(function($n) { return $n + 1; }, $l);\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $result =\
    \ array();\n  foreach ($l as $v) {\n    $result[] = $v + 1;\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $n = [];\n\
    \  foreach ($l as $e) {\n    $n[] = $e + 1;\n  }\n  return $n;\n}\necho incr_list([1,\
    \ 2, 3]) . PHP_EOL; // Array ( [0] => 2 [1] => 3 [2] => 4 )\necho incr_list([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) . PHP_EOL; // Array ( [0] => 6 [1] => 4 [2] => 6\
    \ [3] => 3 [4] => 4 [5] => 4 [6] => 10 [7] => 1 [8] => 124 )\nfunction candidate(...$args)\
    \ {\n    return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Array to string conversion in /tmp/tmprfbu3a72.php on line 14

    Array


    Warning: Array to string conversion in /tmp/tmprfbu3a72.php on line 15

    Array

    '
  timestamp: 1659978992
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    $result\
    \ = array();\n    foreach ($l as $elem) {\n        $result[] = $elem + 1;\n  \
    \  }\n    return $result;\n}\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978992

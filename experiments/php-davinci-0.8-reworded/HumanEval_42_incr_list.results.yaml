language: php
name: HumanEval_42_incr_list
results:
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n\t$res = array();\n\
    \tforeach ($l as $e) {\n\t\t$res[] = $e + 1;\n\t}\n\treturn $res;\n}\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  return array_map(function($a)\
    \ {\n    return $a + 1;\n  }, $l);\n}\n\nfunction candidate(...$args) {\n    return\
    \ incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n\tif ($l ==\
    \ null) {\n\t\treturn $l;\n\t}\n\t$ans = array();\n\tforeach ($l as $x) {\n\t\t\
    $ans[] = $x + 1;\n\t}\n\treturn $ans;\n}\n\nfunction candidate(...$args) {\n \
    \   return incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823661
- exit_code: 255
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  // TODO\n\
    }\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqunxgj54.php:16\n\
    Stack trace:\n#0 /tmp/tmpqunxgj54.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpqunxgj54.php\
    \ on line 16\n"
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  if (count($l)\
    \ === 0) return $l;\n  $l[0]++;\n  return array_merge(array($l[0]), incr_list(array_slice($l,\
    \ 1)));\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    if ($l ==\
    \ array()) {\n        return array();\n    } else {\n        return array_merge(array(array_shift($l)\
    \ + 1), incr_list($l));\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    $k = array();\n\
    \    foreach ($l as $value) {\n        $k[] = $value + 1;\n    }\n    return $k;\n\
    }\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    $n = array();\n\
    \    for ($i = 0; $i < count($l); $i++) {\n        $n[] = $l[$i] + 1;\n    }\n\
    \    return $n;\n}\necho \"<pre>\";\nprint_r(incr_list(array(1, 2, 3)));\necho\
    \ \"</pre>\";\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 2\n    [1] => 3\n    [2] => 4\n)\n</pre>"
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $n = count($l);\n\
    \  for ($i = 0; $i < $n; $i++) {\n    $l[$i]++;\n  }\n  return $l;\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    $il = array();\n\
    \    foreach ($l as $v) {\n        $il[] = $v + 1;\n    }\n    return $il;\n}\n\
    \nfunction candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823661
- exit_code: 255
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    // Your\
    \ code here\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmryi_n65.php:16\n\
    Stack trace:\n#0 /tmp/tmpmryi_n65.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpmryi_n65.php\
    \ on line 16\n"
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $ret = array();\n\
    \  foreach ($l as $item) {\n    $ret[] = $item + 1;\n  }\n  return $ret;\n}\n\n\
    function candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $result =\
    \ array();\n  foreach ($l as $e) {\n    $result[] = $e + 1;\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    // Your\
    \ code here\n    return array_map(function($n) {\n        return $n + 1;\n   \
    \ }, $l);\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n    return array_map(function($n)\
    \ { return $n + 1; }, $l);\n}\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n\t$new = array();\n\
    \tforeach ($l as $k => $v) {\n\t\t$new[$k] = $v + 1;\n\t}\n\treturn $new;\n}\n\
    \nfunction candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  $result =\
    \ array();\n  foreach ($l as $val) {\n    $result[] = $val + 1;\n  }\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  return array_map(function($i)\
    \ {\n    return $i + 1;\n  }, $l);\n}\n\nfunction candidate(...$args) {\n    return\
    \ incr_list(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 1)) !== array(4, 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10,\
    \ 1, 124)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823661
- exit_code: 255
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  if ($l ==\
    \ array()) {\n    return array();\n  } else {\n    return array_merge(\n     \
    \ array(head($l) + 1),\n      incr_list(tail($l))\n    );\n  }\n}\n\nfunction\
    \ candidate(...$args) {\n    return incr_list(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== array()) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 2, 5, 2, 3, 3,\
    \ 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function head() in /tmp/tmpwjq5jl3d.php:12\n\
    Stack trace:\n#0 /tmp/tmpwjq5jl3d.php(19): incr_list(Array)\n#1 /tmp/tmpwjq5jl3d.php(24):\
    \ candidate(Array)\n#2 /tmp/tmpwjq5jl3d.php(28): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmpwjq5jl3d.php on line 12\n"
  timestamp: 1659823661
- exit_code: 0
  program: "<?php\n// Return array with elements incremented by 1.\n// >>> incr_list(array(1,\
    \ 2, 3))\n// array(2, 3, 4)\n// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))\n\
    // array(6, 4, 6, 3, 4, 4, 10, 1, 124)\nfunction incr_list($l) {\n  return array_map(function($x)\
    \ { return $x + 1; }, $l);\n}\n\nfunction candidate(...$args) {\n    return incr_list(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 1)) !== array(4,\
    \ 3, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823661

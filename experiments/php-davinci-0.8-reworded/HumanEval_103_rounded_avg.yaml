name: HumanEval_103_rounded_avg
language: php
prompt: "<?php\n// You are given two positive integers n and m, and your task is to\
  \ compute the\n// average of the integers from n through m (including n and m).\
  \ \n// Round the answer to the nearest integer and convert that to binary.\n// If\
  \ n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n// \"\
  0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"0b1111\"\
  \n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n, $m) {\n"
tests: "function candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new\
  \ Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
  ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"\
  0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
  \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
  \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(350,\
  \ 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if\
  \ (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n  \
  \  if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
  }\n\ntest();"
completions: ["    if ($n > $m) {\n        return -1;\n    }\n    $sum = $n;\n   \
    \ for ($i = $n + 1; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg =\
    \ round($sum / ($m - $n + 1));\n    return '0b' . decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";", "\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$sum = $sum / ($m - $n + 1);\n\t$sum = round($sum);\n\t$sum = decbin($sum);\n\
    \treturn '0b' . $sum;\n}\n", "    $sum = 0;\n    if ($n > $m) {\n        return\
    \ -1;\n    }\n    while ($n <= $m) {\n        $sum += $n;\n        $n++;\n   \
    \ }\n    $avg = round($sum / ($m - $n + 1));\n    return decbin($avg);\n}\necho\
    \ rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10,\
    \ 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";", "    // Your code here\n\
    }", "    if ($n > $m) {\n        return -1;\n    }\n    $sum = array_sum(range($n,\
    \ $m));\n    $rounded = round($sum / ($m - $n + 1));\n    return \"0b\" . decbin($rounded);\n\
    }", "    if ($n > $m) return -1;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++)\
    \ {\n        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n   \
    \ return \"0b\" . decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\\n\";\necho\
    \ rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20,\
    \ 33) . \"\\n\";", "  if ($n > $m) return -1;\n  $avg = ($n + $m) / 2;\n  return\
    \ decbin(round($avg));\n}\necho rounded_avg(2, 3) . PHP_EOL;\necho rounded_avg(2,\
    \ 2) . PHP_EOL;\necho rounded_avg(1, 5) . PHP_EOL;\necho rounded_avg(7, 5) . PHP_EOL;\n\
    echo rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20, 33) . PHP_EOL;", " \
    \   // If n is greater than m, return -1.\n    if ($n > $m) {\n        return\
    \ -1;\n    }\n    // Find the sum of all integers between n and m and find the\
    \ average.\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum +=\
    \ $i;\n    }\n    $average = $sum / ($m - $n + 1);\n    // Round the average to\
    \ the nearest integer.\n    $average = round($average);\n    // Convert that integer\
    \ to binary.\n    $average = decbin($average);\n    // Return binary.\n    return\
    \ \"0b$average\";\n}\n", "    if ($n > $m) {\n        return -1;\n    }\n    $avg\
    \ = floor(($n + $m) / 2);\n    return decbin($avg);\n}\n\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";", "  if ($n > $m) return -1;\n\
    \  $avg = round(($n + $m) / 2);\n  return '0b' . decbin($avg);\n}\n\necho rounded_avg(1,\
    \ 5) . PHP_EOL;\necho rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10, 20) .\
    \ PHP_EOL;\necho rounded_avg(20, 33) . PHP_EOL;", "\tif ($n > $m) return -1;\n\
    \t$average = ($n + $m) / 2;\n\t$rounded = round($average);\n\t$binary = decbin($rounded);\n\
    \treturn \"0b$binary\";\n}\n\necho rounded_avg(1, 5), \"\\n\";\necho rounded_avg(7,\
    \ 5), \"\\n\";\necho rounded_avg(10, 20), \"\\n\";\necho rounded_avg(20, 33),\
    \ \"\\n\";", "    if ($n > $m) {\n        return -1;\n    }\n    $sum = $n;\n\
    \    for ($i = $n + 1; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg\
    \ = round($sum / ($m - $n + 1));\n    return decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . PHP_EOL;\necho rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10, 20) .\
    \ PHP_EOL;\necho rounded_avg(20, 33) . PHP_EOL;", "  if ($n > $m) {\n    return\
    \ -1;\n  }\n  return decbin(round(($n + $m) / 2));\n}\n\necho rounded_avg(1, 5)\
    \ . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\
    \\n\";\necho rounded_avg(20, 33) . \"\\n\";", "\tif ($n > $m) return -1;\n\t$avg\
    \ = round(($n + $m) / 2);\n\treturn \"0b\" . decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";", "    if ($n > $m) {\n      \
    \  return -1;\n    } else {\n        $average = ceil(($n + $m) / 2);\n       \
    \ return \"0b\" . decbin($average);\n    }\n}", "  $sum = 0;\n  for ($i = $n;\
    \ $i <= $m; $i++) {\n    $sum += $i;\n  }\n  if ($n > $m) {\n    return -1;\n\
    \  }\n  return decbin(round($sum / ($m - $n + 1)));\n}\n\necho rounded_avg(1,\
    \ 5) . PHP_EOL;\necho rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10, 20) .\
    \ PHP_EOL;\necho rounded_avg(20, 33) . PHP_EOL;", "    $avg = round(($n + $m)\
    \ / 2);\n    return $n > $m ? -1 : decbin($avg);\n}\necho rounded_avg(10, 20);",
  "    if ($n > $m) return -1;\n    $sum = $n;\n    $count = 1;\n    while ($n !=\
    \ $m) {\n        $n++;\n        $sum += $n;\n        $count++;\n    }\n    $average\
    \ = (int) ($sum / $count);\n    return \"0b\" . decbin($average);\n}\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\necho rounded_avg(33, 20) . \"\
    \\n\";", "    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $average = round($sum\
    \ / ($m - $n + 1));\n    return \"0b\" . decbin($average);\n}\necho rounded_avg(1,\
    \ 5) . PHP_EOL;\necho rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10, 20) .\
    \ PHP_EOL;\necho rounded_avg(20, 33) . PHP_EOL;", "\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn '0b' . decbin($avg);\n}\n\n\
    echo rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10,\
    \ 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";", "  if ($n > $m) return\
    \ -1;\n  $arr = range($n, $m);\n  $avg = round(array_sum($arr) / count($arr));\n\
    \  return decbin($avg);\n}\n\necho rounded_avg(1, 5);\necho \"\\n\";\necho rounded_avg(7,\
    \ 5);\necho \"\\n\";\necho rounded_avg(10, 20);\necho \"\\n\";\necho rounded_avg(20,\
    \ 33);\necho \"\\n\";", "    if ($n>$m) {\n        return -1;\n    } else {\n\
    \        $rounded_avg = round(($n+$m)/2);\n        return decbin($rounded_avg);\n\
    \    }\n}\n\necho rounded_avg(1, 5) . PHP_EOL;\necho rounded_avg(7, 5) . PHP_EOL;\n\
    echo rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20, 33) . PHP_EOL;", " \
    \ if ($n > $m) return -1;\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n  \
    \  $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n  return decbin($avg);\n\
    }\necho rounded_avg(1, 5) . PHP_EOL;\necho rounded_avg(7, 5) . PHP_EOL;\necho\
    \ rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20, 33) . PHP_EOL;", "    if\
    \ ($n <= $m) {\n        $sum = 0;\n        for ($i = $n; $i <= $m; $i++) {\n \
    \           $sum += $i;\n        }\n        $avg = round($sum / ($m - $n + 1));\n\
    \        return '0b' . decbin($avg);\n    } else {\n        return -1;\n    }\n\
    }\n\necho rounded_avg(20, 33);", "  $out = ($n + $m) / 2;\n  $out = round($out);\n\
    \  $out = decbin($out);\n  $out = \"0b\".$out;\n  if ($n > $m) {\n    $out = -1;\n\
    \  }\n  return $out;\n}\n", "    if ($n > $m) {\n        return -1;\n    }\n \
    \   $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n\
    \    $average = round($sum / ($m - $n + 1));\n    return \"0b\" . decbin($average);\n\
    }", "  if ($n > $m) return -1;\n  return '0b' . decbin(round(($n + $m) / 2));\n\
    }", "    if ($n > $m) {\n        return -1;\n    }\n    $bin = decbin(round(($n\
    \ + $m) / 2));\n    return \"0b\" . $bin;\n}\necho rounded_avg(20, 33);", "\t\
    $a = [];\n\tif ($n > $m) {\n\t\treturn -1;\n\t}\n\tfor ($i = $n; $i <= $m; $i++)\
    \ {\n\t\t$a[] = $i;\n\t}\n\t$average = (array_sum($a) / count($a));\n\treturn\
    \ decbin(round($average));\n}\necho rounded_avg(10, 20);", "    if ($n > $m) {\n\
    \        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $sum /= ($m - $n + 1);\n    $sum = round($sum);\n\
    \    return decbin($sum);\n}\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";", "  if ($n > $m) {\n    return -1;\n  }\n  $avg = ceil(($n + $m)\
    \ / 2);\n  return '0b' . decbin($avg);\n}\n", "    if ($n > $m) return -1;\n \
    \   $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n\
    \    $avg = round($sum / ($m - $n + 1));\n    return decbin($avg);\n}\n", "  \
    \  if ($n > $m) return -1;\n    $count = ($m - $n) + 1;\n    $sum = array_sum(range($n,\
    \ $m));\n    $avg = $sum / $count;\n    $rounded = round($avg);\n    return decbin($rounded);\n\
    }\necho rounded_avg(10, 20);", "\tif ($n > $m) return -1;\n\treturn \"0b\" . decbin(round(($n\
    \ + $m) / 2));\n}\n\necho rounded_avg(1, 5);", "    // Your code here\n    if\
    \ ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i\
    \ <= $m; $i++) {\n        $sum += $i;\n    }\n    $rounded = round($sum / ($m\
    \ - $n + 1));\n    return decbin($rounded);\n}\n\n$ret = rounded_avg(1, 5);\n\
    echo $ret . \"\\n\";\necho decbin(3) . \"\\n\";\n\n$ret = rounded_avg(10, 20);\n\
    echo $ret . \"\\n\";\necho decbin(15) . \"\\n\";\n\n$ret = rounded_avg(7, 5);\n\
    echo $ret . \"\\n\";\n\n$ret = rounded_avg(20, 33);\necho $ret . \"\\n\";\necho\
    \ decbin(26) . \"\\n\";", "  // Write your code here...\n}\n\n$problems[] = 'rounded_avg';",
  "  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++)\
    \ {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n  return '0b'\
    \ . decbin($avg);\n}\necho rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20,\
    \ 33) . PHP_EOL;\n", "  $avg = round(($n + $m) / 2);\n  return $n > $m ? -1 :\
    \ \"0b\" . decbin($avg);\n}\necho rounded_avg(10, 20);", "  $sum = 0;\n  if ($n\
    \ > $m) {\n    return -1;\n  }\n  for ($i = $n; $i <= $m; $i++) {\n    $sum +=\
    \ $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n  return decbin($avg);\n}\n",
  "  // your code here\n}\nprint_r(rounded_avg(20, 33));", "    $sum = 0;\n    if\
    \ ($n > $m) {\n        return -1;\n    }\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $sum = $sum / ($m - $n + 1);\n    $sum = round($sum);\n\
    \    return decbin($sum);\n}\necho rounded_avg(1, 5) . PHP_EOL;\necho rounded_avg(7,\
    \ 5) . PHP_EOL;\necho rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20, 33)\
    \ . PHP_EOL;", "  if ($n > $m) return -1;\n  $total = 0;\n  for ($i = $n; $i <=\
    \ $m; $i++) {\n    $total += $i;\n  }\n  $avg = round($total / ($m - $n + 1));\n\
    \  return decbin($avg);\n}\necho rounded_avg(1, 5);\necho rounded_avg(7, 5);\n\
    echo rounded_avg(10, 20);\necho rounded_avg(20, 33);", "    $sum = 0;\n    if\
    \ ($n > $m) {\n        return -1;\n    }\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    return decbin(round($avg));\n\
    }\necho rounded_avg(1, 5);\necho PHP_EOL;\necho rounded_avg(7, 5);\necho PHP_EOL;\n\
    echo rounded_avg(10, 20);\necho PHP_EOL;\necho rounded_avg(20, 33);\necho PHP_EOL;",
  "    if ($n > $m) return -1;\n    $avg = intval(($n + $m) / 2);\n    return decbin($avg);\n\
    }\necho rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20, 33) . PHP_EOL;\n",
  "    if ($n > $m) return -1;\n    $sum = 0;\n    $count = 0;\n    for ($i = $n;\
    \ $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n    }\n    $avg =\
    \ ceil($sum / $count);\n    return decbin($avg);\n}\n", "    if ($n > $m) {\n\
    \        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5)\
    \ . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) .\
    \ \"\\n\";", "    if ($n > $m) {\n        return -1;\n    }\n    $result = ($n\
    \ + $m) / 2;\n    return decbin(round($result));\n}", "    if ($n > $m) {\n  \
    \      return -1;\n    }\n    $avg = round(($n + $m) / 2);\n    return decbin($avg);\n\
    }\n", "\tif ($n > $m) {\n\t\treturn -1;\n\t}\n\t$avg = (int)round(($n + $m) /\
    \ 2);\n\t$bin = decbin($avg);\n\treturn \"0b$bin\";\n}\n", "    $avg = round(($n\
    \ + $m) / 2);\n    if ($n > $m) {\n        return -1;\n    }\n    return decbin($avg);\n\
    }\necho rounded_avg(1, 5) . PHP_EOL;\necho rounded_avg(7, 5) . PHP_EOL;\necho\
    \ rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20, 33) . PHP_EOL;\n", "\t\
    $sum = 0;\n\tif ($n > $m) {\n\t\treturn -1;\n\t}\n\tfor ($i = $n; $i <= $m; $i++)\
    \ {\n\t\t$sum += $i;\n\t}\n\t$avg = round($sum / ($m - $n + 1));\n\treturn \"\
    0b\" . decbin($avg);\n}\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";", "    if ($n > $m) {\n        return -1;\n    }\n    // Your code\
    \ here\n}\n", "  if ($n > $m) {\n    return -1;\n  }\n  return decbin(round(($n\
    \ + $m) / 2));\n}\n", "    if ($n > $m) {\n        return -1;\n    }\n    return\
    \ decbin(round(($n + $m) / 2));\n}\necho rounded_avg(10, 20) . \"\\n\";", "  \
    \  if ($n > $m) {\n        return -1;\n    }\n    $answer = strval(decbin(round(($n\
    \ + $m) / 2)));\n    return \"0b\" . $answer;\n}", "  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $average = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($average);\n\
    }\n\nprint rounded_avg(1, 5) . \"\\n\";\nprint rounded_avg(7, 5) . \"\\n\";\n\
    print rounded_avg(10, 20) . \"\\n\";\nprint rounded_avg(20, 33) . \"\\n\";", " \
    \   $sum = 0;\n    $count = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum\
    \ += $i;\n        $count++;\n    }\n    if ($count == 0) return -1;\n    $avg\
    \ = (int) round($sum / $count);\n    return decbin($avg);\n}\n\necho rounded_avg(1,\
    \ 5).\"\\n\";\necho rounded_avg(7, 5).\"\\n\";\necho rounded_avg(10, 20).\"\\\
    n\";\necho rounded_avg(20, 33).\"\\n\";", "    $sum = 0;\n    for ($i = $n; $i\
    \ <= $m; $i++) {\n        $sum += $i;\n    }\n    if ($n > $m) {\n        return\
    \ -1;\n    }\n    return decbin(round($sum / ($m - $n + 1)));\n}\n\nprint(rounded_avg(1,\
    \ 5) . \"\\n\");\nprint(rounded_avg(7, 5) . \"\\n\");\nprint(rounded_avg(10, 20)\
    \ . \"\\n\");\nprint(rounded_avg(20, 33) . \"\\n\");", "  $sum = 0;\n  $count\
    \ = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n    $count++;\n  }\n\
    \  $avg = floor($sum / $count);\n  return decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . PHP_EOL;\necho rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10, 20) .\
    \ PHP_EOL;\necho rounded_avg(20, 33) . PHP_EOL;", "  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $avg = round(($n + $m) / 2);\n  return '0b' . decbin($avg);\n}\n\
    echo rounded_avg(1, 5) . PHP_EOL;\necho rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10,\
    \ 20) . PHP_EOL;\necho rounded_avg(20, 33) . PHP_EOL;", "    if ($n > $m) {\n\
    \        return -1;\n    } else {\n        $avg = round(($n + $m) / 2);\n    \
    \    return decbin($avg);\n    }\n}\n\necho rounded_avg(7, 5);", "    $sum = 0;\n\
    \    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    if ($n >\
    \ $m) {\n        return -1;\n    }\n    else {\n        $avg = round($sum / ($m\
    \ - $n + 1));\n        return decbin($avg);\n    }\n}\necho rounded_avg(20, 33);",
  "    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    $count = 0;\n\
    \    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n\
    \    }\n    $avg = $sum / $count;\n    return decbin(round($avg));\n}\nprint(rounded_avg(1,\
    \ 5) . \"\\n\");\nprint(rounded_avg(7, 5) . \"\\n\");\nprint(rounded_avg(10, 20)\
    \ . \"\\n\");\nprint(rounded_avg(20, 33) . \"\\n\");", "    if ($n > $m) {\n \
    \       return -1;\n    }\n    $count = $m - $n + 1;\n    $sum = $n + $m;\n  \
    \  return decbin(round($sum / $count));\n}\necho rounded_avg(1, 5) . \"\\n\";\n\
    echo rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20,\
    \ 33) . \"\\n\";", "  \n  if ($n > $m) return -1;\n  \n  $avg = round(($n + $m)\
    \ / 2);\n  return decbin($avg);\n}", "  if ($n > $m) return -1;\n  $avg = round(($n\
    \ + $m) / 2);\n  return '0b' . decbin($avg);\n}\n", "\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t} else {\n\t\t$sum = 0;\n\t\tfor ($i = $n; $i <= $m; $i++) {\n\t\t\t\
    $sum += $i;\n\t\t}\n\t\t$avg = floor($sum / ($m - $n + 1));\n\t\treturn decbin($avg);\n\
    \t}\n}\necho rounded_avg(20,33);", "\tif ($n > $m) return -1;\n\t$sum = 0;\n\t\
    for ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t}\n\t$result = round($sum\
    \ / ($m - $n + 1));\n\treturn \"0b\".decbin($result);\n}\n\nprint rounded_avg(1,\
    \ 5) . \"\\n\";\nprint rounded_avg(7, 5) . \"\\n\";\nprint rounded_avg(10, 20)\
    \ . \"\\n\";\nprint rounded_avg(20, 33) . \"\\n\";", "    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / ($m\
    \ - $n + 1);\n    $rounded = round($average);\n    return decbin($rounded);\n}",
  "\t$range = range($n, $m);\n\t$avg = array_sum($range) / count($range);\n\t$rounded_avg\
    \ = round($avg);\n\treturn $rounded_avg;\n}\n$n = 7;\n$m = 5;\necho decbin(rounded_avg($n,\
    \ $m));", "    if ($n > $m) {\n        return -1;\n    } else {\n        $sum\
    \ = $n;\n        for ($i = $n + 1; $i <= $m; $i++) {\n            $sum += $i;\n\
    \        }\n        $avg = round($sum / ($m - $n + 1));\n        return \"0b\"\
    \ . decbin($avg);\n    }\n}\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";", "  if ($n > $m) {\n    return -1;\n  }\n  $avg = round(($n + $m)\
    \ / 2);\n  return decbin($avg);\n}\n", "    if ($n > $m) {\n        return -1;\n\
    \    }\n    $avg = floor(($n + $m) / 2);\n    return decbin($avg);\n}\necho rounded_avg(20,\
    \ 33) . PHP_EOL;", "    if ($n > $m) {\n        return -1;\n    }\n    $average\
    \ = round(($n + $m) / 2);\n    return decbin($average);\n}", "  $result = 0;\n\
    \  $avg = round(($n + $m) / 2);\n  for ($i = 0; $i < 16; $i++) {\n    $result\
    \ += $avg % 2 * pow(10, $i);\n    $avg = floor($avg / 2);\n  }\n  return $result;\n\
    }\necho rounded_avg(5,1) . PHP_EOL;\necho rounded_avg(7,5) . PHP_EOL;\necho rounded_avg(10,20)\
    \ . PHP_EOL;\necho rounded_avg(20,33) . PHP_EOL;\n", "\t$sum = 0;\n\tfor ($i =\
    \ $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t}\n\t$ave = round($sum / ($m - $n\
    \ + 1));\n\treturn decbin($ave);\n}\necho rounded_avg(2, 3);", "  if ($n > $m)\
    \ {\n    return -1;\n  }\n  $avg = round(($n + $m) / 2);\n  return '0b' . decbin($avg);\n\
    }\necho rounded_avg(1, 5);\necho \"\\n\";\necho rounded_avg(7, 5);\necho \"\\\
    n\";\necho rounded_avg(10, 20);\necho \"\\n\";\necho rounded_avg(20, 33);\necho\
    \ \"\\n\";", "    $sum = 0;\n    if ($n > $m) {\n        return -1;\n    }\n \
    \   for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $sum = round($sum\
    \ / ($m - $n + 1));\n    return \"0b\" . decbin($sum);\n}\n", "    if ($n > $m)\
    \ {\n        return -1;\n    }\n    $sum = $n;\n    for ($i = $n + 1; $i <= $m;\
    \ $i++) {\n        $sum += $i;\n    }\n    $sum = ($sum / ($m - $n + 1)) + 0.5;\n\
    \    return decbin($sum);\n}\nprint rounded_avg(10, 20) . \"\\n\";\nprint rounded_avg(20,\
    \ 33) . \"\\n\";", "  $a = round(($n + $m) / 2);\n  return ($n > $m) ? -1 : '0b'\
    \ . decbin($a);\n}\n\necho rounded_avg(1, 5) . PHP_EOL; // \"0b11\"\necho rounded_avg(7,\
    \ 5) . PHP_EOL; // -1\necho rounded_avg(10, 20) . PHP_EOL; // \"0b1111\"\necho\
    \ rounded_avg(20, 33) . PHP_EOL; // \"0b11010\"", "    if ($n > $m) {\n      \
    \  return -1;\n    }\n    $average = floor(($n + $m) / 2);\n    return base_convert($average,\
    \ 10, 2);\n}\n", "\tif ($n > $m) {\n\t\treturn -1;\n\t}\n\treturn decbin(round(($n\
    \ + $m) / 2));\n}\necho rounded_avg(1, 5) . PHP_EOL;\necho rounded_avg(7, 5) .\
    \ PHP_EOL;\necho rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20, 33) . PHP_EOL;",
  "    if ($n > $m) {\n        return -1;\n    } else {\n        $sum = $n;\n    \
    \    for ($i = $n + 1; $i <= $m; $i++) {\n            $sum += $i;\n        }\n\
    \        $avg = $sum / ($m - $n + 1);\n        $round = round($avg);\n       \
    \ $bin = decbin($round);\n        return \"0b\" . $bin;\n    }\n}", "    if ($n\
    \ > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m;\
    \ $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n\
    \    return decbin($avg);\n}\necho rounded_avg(10, 20) . \"\\n\";\n", "  if ($n\
    \ > $m) {\n    return -1;\n  }\n  $avg = round(($n + $m) / 2);\n  return decbin($avg);\n\
    }\nprint rounded_avg(1, 5) . \"\\n\";\nprint rounded_avg(7, 5) . \"\\n\";\nprint\
    \ rounded_avg(10, 20) . \"\\n\";\nprint rounded_avg(20, 33) . \"\\n\";", "\t//\
    \ Your code here\n}", "    if ($n > $m) {\n        return -1;\n    }\n    $avg\
    \ = round(($n + $m) / 2);\n    return decbin($avg);\n}", "  $range = range($n,\
    \ $m);\n  $rounded = round(array_sum($range) / count($range));\n  return decbin($rounded);\n\
    }\necho rounded_avg(1, 5) . PHP_EOL;\necho rounded_avg(7, 5) . PHP_EOL;\necho\
    \ rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20, 33) . PHP_EOL;", "  if\
    \ ($n > $m) {\n    return -1;\n  }\n  $avg = round(($n + $m) / 2);\n  return decbin($avg);\n\
    }\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho\
    \ rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";", "  if\
    \ ($n > $m) return -1;\n  $avg = $avg = intval(($n + $m) / 2);\n  return \"0b\"\
    \ . decbin($avg);\n}\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5)\
    \ . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) .\
    \ \"\\n\";\n", "  if ($n > $m) {\n    return -1;\n  } else {\n    $sum = 0;\n\
    \    for ($i = $n; $i <= $m; $i++) {\n      $sum += $i;\n    }\n    $avg = $sum\
    \ / ($m - $n + 1);\n    $avg = round($avg);\n    $avg = decbin($avg);\n    return\
    \ '0b' . $avg;\n  }\n}\necho rounded_avg(1, 5) . PHP_EOL;\necho rounded_avg(7,\
    \ 5) . PHP_EOL;\necho rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20, 33)\
    \ . PHP_EOL;", "    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n\
    \    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return \"0b\" . decbin($avg);\n}\n\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";", "    if ($n > $m) {\n      \
    \  return -1;\n    }\n    $sum = 0;\n    $num = 0;\n    while ($n <= $m) {\n \
    \       $sum += $n;\n        $num++;\n        $n++;\n    }\n    $avg = (int)round($sum\
    \ / $num);\n    return decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\\n\";\n\
    echo rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20,\
    \ 33) . \"\\n\";", "  $sum = 0;\n  $count = 0;\n  if ($n < $m) {\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n      $sum += $i;\n      $count++;\n    }\n    $avg\
    \ = $sum / $count;\n    $rounded = round($avg);\n    $binary = decbin($rounded);\n\
    \    return \"0b\" . $binary;\n  } else {\n    return -1;\n  }\n}\n", "\tif ($n\
    \ > $m) {\n\t\treturn -1;\n\t}\n\t$sum = $n;\n\tfor ($i = $n + 1; $i <= $m; $i++)\
    \ {\n\t\t$sum += $i;\n\t}\n\t$avg = round($sum / ($m - $n + 1));\n\t$result =\
    \ decbin($avg);\n\treturn \"0b\" . $result;\n}", "    if ($n > $m) return -1;\n\
    \    $sum = array_sum(range($n, $m));\n    $len = count(range($n, $m));\n    $avg\
    \ = intval(round($sum / $len));\n    return decbin($avg);\n}\nprint(rounded_avg(1,\
    \ 5).\"\\n\");\nprint(rounded_avg(7, 5).\"\\n\");\nprint(rounded_avg(10, 20).\"\
    \\n\");\nprint(rounded_avg(20, 33).\"\\n\");", "  if ($n > $m) {\n    return -1;\n\
    \  } else {\n    $result = round(($n + $m) / 2);\n    return decbin($result);\n\
    \  }\n}\n", "    if ($n > $m) {\n        return -1;\n    } else {\n        $total\
    \ = 0;\n        for ($i = $n; $i <= $m; $i++) {\n            $total += $i;\n \
    \       }\n        $total = round($total / ($m - $n + 1));\n        return \"\
    0b\" . decbin($total);\n    }\n}", "    if ($n > $m) return -1;\n    return decbin(round(($n\
    \ + $m) / 2));\n}\n\nprint rounded_avg(1, 5);\nprint rounded_avg(7, 5);\nprint\
    \ rounded_avg(10, 20);\nprint rounded_avg(20, 33);\n", "\tif ($n > $m) {\n\t\t\
    return -1;\n\t}\n\t$middle = ($n + $m) / 2;\n\t$avg = (int) round($middle);\n\t\
    $binary = decbin($avg);\n\treturn \"0b$binary\";\n}\n", "    if ($n > $m) {\n\
    \        return -1;\n    }\n    return decbin(round(($n + $m) / 2));\n}\nprint\
    \ rounded_avg(1, 5) . \"\\n\"; // \"0b11\"\nprint rounded_avg(7, 5) . \"\\n\"\
    ; // -1\nprint rounded_avg(10, 20) . \"\\n\"; // \"0b1111\"\nprint rounded_avg(20,\
    \ 33) . \"\\n\"; // \"0b11010\"", "    $sum = 0;\n    for ($i = $n; $i <= $m;\
    \ $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n\
    \    return $avg < 0 ? -1 : '0b' . decbin($avg);\n}\n", "    if ($n > $m) return\
    \ -1;\n    $avg = round(($n + $m) / 2);\n    return '0b' . decbin($avg);\n}\n\
    echo rounded_avg(20, 33) . PHP_EOL;", "    if ($n > $m) return -1;\n    $avg =\
    \ floor(($n + $m) / 2);\n    return decbin($avg);\n}\n", "    if ($n > $m) {\n\
    \        return -1;\n    }\n    $avg = round(($n + $m) / 2);\n    return decbin($avg);\n\
    }\necho rounded_avg(20, 33) . \"\\n\";\n", "  $sum = 0;\n  $q = 0;\n  if ($n>$m)\
    \ {\n    return -1;\n  }\n  for ($i=$n; $i<=$m; $i++) {\n    $sum += $i;\n  }\n\
    \  return \"0b\".decbin(round($sum/($m-$n+1)));\n}", "    $average = round(($n\
    \ + $m) / 2);\n    if ($n > $m) {\n        return -1;\n    }\n    return decbin($average);\n\
    }", "  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <=\
    \ $m; $i++) {\n    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n \
    \ return \"0b\" . decbin($avg);\n}\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";", "    if ($n > $m) {\n        return -1;\n    }\n    $total = 0;\n\
    \    for ($i = $n; $i <= $m; $i++) {\n        $total += $i;\n    }\n    $avg =\
    \ (int) round($total / ($m - $n + 1));\n    return \"0b\" . decbin($avg);\n}\n",
  "  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  $num_of_integers = ($m -\
    \ $n) + 1;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n  }\n  $sum =\
    \ floor($sum / $num_of_integers);\n  return \"0b\" . decbin($sum);\n}\necho rounded_avg(1,\
    \ 5) . PHP_EOL;\necho rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10, 20) .\
    \ PHP_EOL;\necho rounded_avg(20, 33) . PHP_EOL;", "    if ($n > $m) {\n      \
    \  return -1;\n    }\n    $average = round(($n + $m) / 2);\n    return decbin($average);\n\
    }", "  // Your code here\n  if ($n > $m) return -1;\n  $avg = floor(($n + $m)\
    \ / 2);\n  return decbin($avg);\n}\n\necho rounded_avg(1, 5).\"\\n\";\necho rounded_avg(7,\
    \ 5).\"\\n\";\necho rounded_avg(10, 20).\"\\n\";\necho rounded_avg(20, 33).\"\\\
    n\";\n", "  if ($n > $m) {\n    return -1;\n  }\n  $avg = round(($n + $m) / 2);\n\
    \  return \"0b\" . decbin($avg);\n}\n\ndo {\n  echo 'n: ';\n  $n = (int)fgets(STDIN);\n\
    \  echo 'm: ';\n  $m = (int)fgets(STDIN);\n  echo rounded_avg($n, $m) . PHP_EOL;\n\
    } while ($n >= 0 && $m >= 0);", "    $sum = 0;\n    $nums = range($n, $m);\n \
    \   if($n > $m) {\n        return -1;\n    }\n    foreach($nums as $num) {\n \
    \       $sum += $num;\n    }\n    $avg = round($sum / count($nums));\n    return\
    \ decbin($avg);\n}", "  // Write your code here\n  // To print results to the\
    \ standard output you can use print\n  // Example:\n  // print \"Hello world!\"\
    ;\n  if ($n > $m) {\n    return -1;\n  }\n  return decbin(round(($n + $m) / 2));\n\
    }\n\nprint rounded_avg(1, 5);", "    if ($n > $m) {\n        return -1;\n    }\
    \ else {\n        $sum = 0;\n        for ($i = $n; $i <= $m; $i++) {\n       \
    \     $sum += $i;\n        }\n        $avg = round($sum / ($m - $n + 1));\n  \
    \      return decbin($avg);\n    }\n}", "  if ($n < $m) {\n    $arr = [];\n  \
    \  for ($i = $n; $i <= $m; $i++) {\n      $arr[] = $i;\n    }\n    $sum = array_sum($arr);\n\
    \    $rounded_avg = round($sum / count($arr));\n    $binary = decbin($rounded_avg);\n\
    \    $answer = \"0b\".$binary;\n    return $answer;\n  } else {\n    return -1;\n\
    \  }\n}\necho rounded_avg(1, 5);\necho \"<br>\";\necho rounded_avg(7, 5);\necho\
    \ \"<br>\";\necho rounded_avg(10, 20);\necho \"<br>\";\necho rounded_avg(20, 33);\n",
  "\tif ($n > $m) {\n\t\treturn -1;\n\t} else {\n\t\t$result = round(($n + $m) / 2);\n\
    \t\treturn decbin($result);\n\t}\n}\necho rounded_avg(20, 33);", "    if ($n >\
    \ $m) return -1;\n    $avg = round(($n + $m) / 2);\n    return decbin($avg);\n\
    }\necho rounded_avg(1, 5) . PHP_EOL;\necho rounded_avg(7, 5) . PHP_EOL;\necho\
    \ rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20, 33) . PHP_EOL;", "\tif\
    \ ($n > $m) {\n\t\treturn -1;\n\t}\n\t$sum = 0;\n\t$num = 0;\n\tfor ($i = $n;\
    \ $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\t$num++;\n\t}\n\t$result = round($sum\
    \ / $num);\n\t$binary = decbin($result);\n\treturn \"0b\" . $binary;\n}\necho\
    \ rounded_avg(1, 5) . PHP_EOL;\necho rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10,\
    \ 20) . PHP_EOL;\necho rounded_avg(20, 33) . PHP_EOL;", "\tif ($n > $m) {\n\t\t\
    return -1;\n\t} else {\n\t\t$avg = round(($n + $m) / 2);\n\t\treturn decbin($avg);\n\
    \t}\n}\n", "    if ($n > $m) {\n        return -1;\n    } else {\n        $sum\
    \ = 0;\n        for ($i = $n; $i <= $m; $i++) {\n            $sum += $i;\n   \
    \     }\n        $avg = round($sum / ($m - $n + 1));\n        return decbin($avg);\n\
    \    }\n}\n$n = 1;\n$m = 5;\necho rounded_avg($n, $m);", "    $len = strlen(decbin($n))\
    \ - 1;\n    $m = $m << $len;\n    $n = $n << $len;\n    $avg = decbin(($m + $n)\
    \ >> ($len + 1));\n    if ($avg < $n) return -1;\n    return \"0b$avg\";\n}\n\
    echo rounded_avg(1, 5) . PHP_EOL;\necho rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10,\
    \ 20) . PHP_EOL;\necho rounded_avg(20, 33) . PHP_EOL;", "    if ($n > $m) {\n\
    \        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nprint_r(rounded_avg(1, 5) . \"\\n\");\nprint_r(rounded_avg(7,\
    \ 5) . \"\\n\");\nprint_r(rounded_avg(10, 20) . \"\\n\");\nprint_r(rounded_avg(20,\
    \ 33) . \"\\n\");", "  if ($n > $m) {\n    return -1;\n  }\n  $avg = round(($n\
    \ + $m) / 2);\n  return '0b' . decbin($avg);\n}\n\necho rounded_avg(1, 5);\necho\
    \ PHP_EOL;\necho rounded_avg(7, 5);\necho PHP_EOL;\necho rounded_avg(10, 20);\n\
    echo PHP_EOL;\necho rounded_avg(20, 33);\necho PHP_EOL;", "\tif ($n > $m) {\n\t\
    \treturn -1;\n\t} else {\n\t\treturn decbin(round(($n + $m) / 2));\n\t}\n}", " \
    \   if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n;\
    \ $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n +\
    \ 1);\n    $rounded = round($avg);\n    return \"0b\" . decbin($rounded);\n}\n",
  "\tif ($n > $m) {\n\t\treturn -1;\n\t}\n\t$avg = floor(($n + $m) / 2);\n\treturn\
    \ decbin($avg);\n}\n\necho rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20,\
    \ 33) . PHP_EOL;\necho rounded_avg(1, 5) . PHP_EOL;\necho rounded_avg(7, 5) .\
    \ PHP_EOL;", "    $result = ($n+$m)/2;\n    $result = round($result);\n    if\
    \ ($n > $m) {\n        return -1;\n    } else {\n        return decbin($result);\n\
    \    }\n}", "\tif ($n > $m) return -1;\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m;\
    \ $i++) {\n\t\t$sum += $i;\n\t}\n\t$avg = (int)floor($sum / ($m - $n + 1));\n\t\
    return decbin($avg);\n}\n", "    if ($n > $m) return -1;\n    return decbin(round(($n\
    \ + $m) / 2));\n}\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) .\
    \ \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\
    \\n\";\n", "\t$avg = 0;\n\tif ($n > $m) {\n\t\treturn -1;\n\t} else {\n\t\t$avg\
    \ = ($n + $m) / 2;\n\t\t$avg = round($avg);\n\t\t$avg = decbin($avg);\n\t\t$avg\
    \ = \"0b\" . $avg;\n\t\treturn $avg;\n\t}\n}\necho rounded_avg(1, 5);", "    if\
    \ ($n > $m) return -1;\n    $avg = ($n + $m) / 2;\n    return \"0b\" . decbin(round($avg));\n\
    }\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho\
    \ rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\necho rounded_avg(20,\
    \ 32) . \"\\n\";", "\t$avg = round(($n + $m) / 2);\n\tif ($n < $m) {\n\t\treturn\
    \ decbin($avg);\n\t} else {\n\t\treturn -1;\n\t}\n}\nprint rounded_avg(1, 5) .\
    \ \"\\n\";\nprint rounded_avg(7, 5) . \"\\n\";\nprint rounded_avg(10, 20) . \"\
    \\n\";\nprint rounded_avg(20, 33) . \"\\n\";", "    if ($n > $m) {\n        return\
    \ -1;\n    }\n    $avg = ($n + $m) / 2;\n    $avg = round($avg);\n    $avg = decbin($avg);\n\
    \    return \"0b$avg\";\n}\necho rounded_avg(1, 5).\"\\n\";\necho rounded_avg(7,\
    \ 5).\"\\n\";\necho rounded_avg(10, 20).\"\\n\";\necho rounded_avg(20, 33).\"\\\
    n\";", "    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m\
    \ - $n + 1);\n    $rounded = round($avg);\n    return \"0b\". decbin($rounded);\n\
    }", "  if ($n > $m) {\n    return -1;\n  } else {\n    $sum = 0;\n    for ($i\
    \ = $n; $i <= $m; $i++) {\n      $sum += $i;\n    }\n    $avg = (int)round($sum\
    \ / ($m - $n + 1));\n    return '0b' . decbin($avg);\n  }\n}\n\necho rounded_avg(1,\
    \ 5) . PHP_EOL;\necho rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10, 20) .\
    \ PHP_EOL;\necho rounded_avg(20, 33) . PHP_EOL;", "  if ($n > $m) {\n    return\
    \ -1;\n  } else {\n    $avg = round(($n + $m) / 2);\n    return '0b' . decbin($avg);\n\
    \  }\n}\n\n$n1 = 4;\n$m1 = 4;\necho rounded_avg($n1, $m1) . PHP_EOL;\n$n2 = 1;\n\
    $m2 = 5;\necho rounded_avg($n2, $m2) . PHP_EOL;\n$n3 = 7;\n$m3 = 5;\necho rounded_avg($n3,\
    \ $m3) . PHP_EOL;\n$n4 = 10;\n$m4 = 20;\necho rounded_avg($n4, $m4) . PHP_EOL;\n\
    $n5 = 20;\n$m5 = 33;\necho rounded_avg($n5, $m5) . PHP_EOL;\n$n6 = 20;\n$m6 =\
    \ 20;\necho rounded_avg($n6, $m6) . PHP_EOL;", "  if ($n > $m) {\n    return -1;\n\
    \  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n  }\n \
    \ $avg = round($sum / ($m - $n + 1));\n  return decbin($avg);\n}\n", "  if ($n\
    \ > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n\
    \    $sum += $i;\n  }\n  $avg = round($sum / ($m - $n + 1));\n  return \"0b\"\
    . decbin($avg);\n}\necho rounded_avg(1, 5);\necho rounded_avg(7, 5);\necho rounded_avg(10,\
    \ 20);\necho rounded_avg(20, 33);\n", "    if ($n > $m) {\n        return -1;\n\
    \    }\n    $avg = round(($n + $m) / 2);\n    return decbin($avg);\n}\necho rounded_avg(20,\
    \ 33) . PHP_EOL;", "  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for\
    \ ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n  }\n  $average = round($sum /\
    \ ($m - $n + 1));\n  return decbin($average);\n}\n\necho rounded_avg(5, 7);",
  "\tif ($n > $m) {\n\t\treturn -1;\n\t}\n\t$avg = ($n + $m) / 2;\n\t$avg = round($avg);\n\
    \t$avg = decbin($avg);\n\treturn \"0b\" . $avg;\n}\necho rounded_avg(1, 5) . PHP_EOL;\n\
    echo rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20,\
    \ 33) . PHP_EOL;", "\t$sum = 0;\n\t$count = 0;\n\tfor ($i = $n; $i <= $m; $i++)\
    \ {\n\t\t$sum += $i;\n\t\t$count++;\n\t}\n\t$round = (int) round($sum / $count);\n\
    \treturn decbin($round);\n}\n\necho rounded_avg(10, 20);\n", "    if ($n > $m)\
    \ {\n        return -1;\n    }\n    $average = floor(($n + $m) / 2);\n    return\
    \ decbin($average);\n}", "    if ($n > $m) {\n        return -1;\n    }\n    $arr\
    \ = range($n, $m);\n    $avg = array_sum($arr) / count($arr);\n    $avg = round($avg);\n\
    \    return decbin($avg);\n}\n", "    if ($n > $m) {\n        return -1;\n   \
    \ }\n    return \"0b\" . decbin(floor(($n + $m) / 2));\n}\n", "  $avg = ($n +\
    \ $m) / 2;\n  if ($n > $m) {\n    return -1;\n  }\n  return decbin(round($avg));\n\
    }\n\necho rounded_avg(1, 5) . PHP_EOL;\necho rounded_avg(7, 5) . PHP_EOL;\necho\
    \ rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20, 33) . PHP_EOL;", "    if\
    \ ($n > $m) return -1;\n    $avg = round(($n + $m) / 2);\n    return decbin($avg);\n\
    }\n\necho rounded_avg(1, 5) . \"<br>\";\necho rounded_avg(7, 5) . \"<br>\";\n\
    echo rounded_avg(10, 20) . \"<br>\";\necho rounded_avg(20, 33) . \"<br>\";", "\t\
    if ($n>$m) return -1;\n\t$sum = 0;\n\tfor ($i=$n; $i<=$m; $i++) {\n\t\t$sum +=\
    \ $i;\n\t}\n\t$average = round($sum/($m-$n+1));\n\treturn decbin($average);\n\
    }\necho rounded_avg(20,33);", "    if ($n > $m) {\n        return -1;\n    }\n\
    \    return decbin(round(($n + $m) / 2));\n}\necho rounded_avg(1, 5) . \"\\n\"\
    ;\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho\
    \ rounded_avg(20, 33) . \"\\n\";", "    if ($n > $m) {\n        return -1;\n \
    \   }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \    }\n    $average = round($sum / ($m - $n + 1));\n    return \"0b\" . decbin($average);\n\
    }\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho\
    \ rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";", "  $sum\
    \ = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n  }\n  if ($n > $m)\
    \ {\n    return -1;\n  }\n  return decbin(round($sum / ($m - $n + 1)));\n}", " \
    \ if ($n > $m) {\n    return -1;\n  } else {\n    $avg = $n + ($m - $n) / 2;\n\
    \    return \"0b\" . decbin(round($avg));\n  }\n}\n\necho rounded_avg(1, 5) .\
    \ PHP_EOL;\necho rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10, 20) . PHP_EOL;\n\
    echo rounded_avg(20, 33) . PHP_EOL;", "\t$range = range($n, $m);\n\t$sum = array_sum($range);\n\
    \t$count = count($range);\n\t$rounded_average = round($sum / $count);\n\tif ($n\
    \ > $m) {\n\t\treturn -1;\n\t} else {\n\t\treturn '0b' . decbin($rounded_average);\n\
    \t}\n}\n", "\tif ($n > $m) {\n\t\treturn -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n;\
    \ $i <= $m; $i++) {\n\t\t$sum += $i;\n\t}\n\t$avg = round($sum / ($m - $n + 1));\n\
    \treturn \"0b\" . decbin($avg);\n}\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";", "    if ($n > $m) {\n        return -1;\n    }\n    $avg = round(($n\
    \ + $m) / 2);\n    return decbin($avg);\n}\n\necho rounded_avg(1, 5).\"\\n\";\n\
    echo rounded_avg(7, 5).\"\\n\";\necho rounded_avg(10, 20).\"\\n\";\necho rounded_avg(20,\
    \ 33).\"\\n\";\n", "\tif ($n > $m) {\n\t\treturn -1;\n\t} else {\n\t\t$avg = 0;\n\
    \t\t$rounded_avg = 0;\n\t\tfor ($i = $n; $i <= $m; $i++) {\n\t\t\t$avg += $i;\n\
    \t\t}\n\t\t$avg = $avg / ($m - $n + 1);\n\t\t$rounded_avg = round($avg);\n\t\t\
    $binary = decbin($rounded_avg);\n\t\treturn \"0b\" . $binary;\n\t}\n}", "  if\
    \ ($n > $m) {\n    return -1;\n  }\n  // Write your code here\n  // Hint: Use\
    \ decbin() function to convert decimal to binary\n}\necho rounded_avg(1, 5) .\
    \ \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\\
    n\";\necho rounded_avg(20, 33) . \"\\n\";\n", "    $avg = round(($n + $m) / 2);\n\
    \    if ($n > $m) {\n        return -1;\n    }\n    return decbin($avg);\n}\n",
  "    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n;\
    \ $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $average = $sum / ($m - $n\
    \ + 1);\n    $binary_average = decbin(round($average));\n    return '0b' . $binary_average;\n\
    }\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho\
    \ rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";", "    if\
    \ ($n > $m) {\n        return -1;\n    }\n    return (decbin(round(($n + $m) /\
    \ 2)));\n}\necho rounded_avg(1, 5) . PHP_EOL;\necho rounded_avg(7, 5) . PHP_EOL;\n\
    echo rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20, 33) . PHP_EOL;", " \
    \   if ($n < $m) {\n        $num = 0;\n        for ($i = $n; $i <= $m; $i++) {\n\
    \            $num += $i;\n        }\n        $x = round($num / ($m - $n + 1));\n\
    \        return decbin($x);\n    } else {\n        return -1;\n    }\n}\nprint(rounded_avg(10,\
    \ 20) . \"\\n\");", "    $sum = 0;\n    $count = 0;\n    for ($i = $n; $i <= $m;\
    \ $i++) {\n        $sum += $i;\n        $count++;\n    }\n    if ($count == 0)\
    \ {\n        return -1;\n    }\n    $result = round($sum / $count);\n    return\
    \ \"0b\" . decbin($result);\n}\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";\n", "    if ($n > $m) {\n        return -1;\n    }\n    $avg = $n\
    \ + $m;\n    $avg = floor($avg / 2);\n    $bin = decbin($avg);\n    return \"\
    0b$bin\";\n}", "    $sum = 0;\n    $count = 0;\n    for ($i = $n; $i <= $m; $i++)\
    \ {\n        $sum += $i;\n        $count++;\n    }\n    $average = round($sum\
    \ / $count);\n    if ($average < 0) {\n        return -1;\n    }\n    $bin = decbin($average);\n\
    \    return \"0b$bin\";\n}", "    if ($n > $m) {\n        return -1;\n    }\n\
    \    $result = round(($n + $m) / 2);\n    return decbin($result);\n}", "    if\
    \ ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i\
    \ <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n\
    \ + 1));\n    return '0b' . decbin($avg);\n}\n\necho rounded_avg(1, 5);\necho\
    \ \"\\n\";\necho rounded_avg(7, 5);\necho \"\\n\";\necho rounded_avg(10, 20);\n\
    echo \"\\n\";\necho rounded_avg(20, 33);\necho \"\\n\";", "    if ($n > $m) {\n\
    \        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ '0b' . decbin($avg);\n}\necho rounded_avg(1, 5) . PHP_EOL;\necho rounded_avg(7,\
    \ 5) . PHP_EOL;\necho rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20, 33)\
    \ . PHP_EOL;", "    $sum = 0;\n    if ($n > $m) {\n        return -1;\n    } else\
    \ {\n        for ($i = $n; $i <= $m; $i++) {\n            $sum += $i;\n      \
    \  }\n        $avg = round($sum / ($m - $n + 1));\n        return decbin($avg);\n\
    \    }\n}\necho rounded_avg(1, 5);\necho \"\\n\";\necho rounded_avg(7, 5);\necho\
    \ \"\\n\";\necho rounded_avg(10, 20);\necho \"\\n\";\necho rounded_avg(20, 33);\n\
    echo \"\\n\";", "\tif ($n > $m) return -1;\n\t$avg = ($n + $m) / 2;\n\t$avg =\
    \ round($avg);\n\t$avg = decbin($avg);\n\treturn \"0b$avg\";\n}\necho rounded_avg(5,\
    \ 1).\"\\n\";\necho rounded_avg(10, 20).\"\\n\";\necho rounded_avg(20, 33).\"\\\
    n\";\necho rounded_avg(7, 5).\"\\n\";", "    if ($n > $m) {\n        return -1;\n\
    \    }\n    $num = round(($n + $m) / 2);\n    return \"0b\" . decbin($num);\n\
    }\necho rounded_avg(10, 20) . \"\\n\";", "  if ($n > $m) {\n    return -1;\n \
    \ }\n  return decbin(floor(($n + $m) / 2));\n}\n", "  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $res = $n + $m;\n  $res = floor($res / 2);\n  $res = decbin($res);\n\
    \  return \"0b\" . $res;\n}\n", "    if ($n > $m) {\n        return -1;\n    }\n\
    \    $avg = ($n + $m) / 2;\n    $binary = decbin(round($avg));\n    return \"\
    0b$binary\";\n}\n", "  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n  for\
    \ ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n  }\n  $avg = $sum / ($m - $n\
    \ + 1);\n  $rounded_avg = round($avg);\n  return decbin($rounded_avg);\n}\n",
  "    if ($n > $m) return -1;\n    $res = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $res += $i;\n    }\n    $res = decbin(round($res / ($m - $n + 1)));\n\
    \    return \"0b\" . $res;\n}\necho rounded_avg(1, 5); //0b11\necho PHP_EOL;\n\
    echo rounded_avg(7, 5); //-1\necho PHP_EOL;\necho rounded_avg(10, 20); //0b1111\n\
    echo PHP_EOL;\necho rounded_avg(20, 33); //0b11010\necho PHP_EOL;", "    if ($n\
    \ > $m) return -1;\n    $avg = round(($n + $m) / 2);\n    return \"0b\" . decbin($avg);\n\
    }", "  if ($n > $m) {\n    return -1;\n  }\n  $avg = round(($n + $m) / 2);\n \
    \ return \"0b\".decbin($avg);\n}\necho rounded_avg(1, 5);\necho \"\\n\";\necho\
    \ rounded_avg(7, 5);\necho \"\\n\";\necho rounded_avg(10, 20);\necho \"\\n\";\n\
    echo rounded_avg(20, 33);\necho \"\\n\";", "    if ($n>$m) {\n        return -1;\n\
    \    }\n    $average = round(($n+$m)/2);\n    return decbin($average);\n}\n\n\
    echo rounded_avg(1, 5) . PHP_EOL;\necho rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10,\
    \ 20) . PHP_EOL;\necho rounded_avg(20, 33) . PHP_EOL;", "  if ($n > $m) {\n  \
    \  return -1;\n  }\n  $avg = (floor(($n + $m) / 2));\n  return decbin($avg);\n\
    }\necho rounded_avg(1, 5);\necho \"\\n\";\necho rounded_avg(7, 5);\necho \"\\\
    n\";\necho rounded_avg(10, 20);\necho \"\\n\";\necho rounded_avg(20, 33);\necho\
    \ \"\\n\";", "    $avg = round(($n + $m) / 2);\n    return $n <= $m ? base_convert($avg,\
    \ 10, 2) : -1;\n}\n\nprint_r(rounded_avg(20, 33));", "  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return decbin($avg);\n}", "   \
    \ if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n;\
    \ $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = (int) ($sum / ($m\
    \ - $n + 1));\n    return decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\\n\"\
    ;\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho\
    \ rounded_avg(20, 33) . \"\\n\";", "    if ($n > $m) {\n        return -1;\n \
    \   }\n    $avg = round(($n + $m) / 2);\n    return decbin($avg);\n}\nprint rounded_avg(1,\
    \ 5);", "    if ($n <= $m) {\n        $sum = 0;\n        for ($i = $n; $i <= $m;\
    \ $i++) {\n            $sum += $i;\n        }\n        $rounded = round($sum /\
    \ ($m - $n + 1));\n        $binary = \"0b\" . decbin($rounded);\n        return\
    \ $binary;\n    } else {\n        return -1;\n    }\n}", "    if ($n > $m) {\n\
    \        return -1;\n    }\n    $avg = round(($n + $m) / 2);\n    return '0b'\
    \ . decbin($avg);\n}\n", "  if ($n > $m) {\n    return -1;\n  }\n  $sum = 0;\n\
    \  $num = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n    $num++;\n\
    \  }\n  $avg = round($sum / $num);\n  return \"0b\" . decbin($avg);\n}\nprint\
    \ rounded_avg(1, 5) . \"\\n\";\nprint rounded_avg(7, 5) . \"\\n\";\nprint rounded_avg(10,\
    \ 20) . \"\\n\";\nprint rounded_avg(20, 33) . \"\\n\";", "    if ($n > $m) {\n\
    \        return -1;\n    } else {\n        $sum = 0;\n        for ($i = $n; $i\
    \ <= $m; $i++) {\n            $sum += $i;\n        }\n        $average = round($sum\
    \ / ($m - $n + 1));\n        return decbin($average);\n    }\n}\necho rounded_avg(1,\
    \ 5);\necho \"\\n\";\necho rounded_avg(7, 5);\necho \"\\n\";\necho rounded_avg(10,\
    \ 20);\necho \"\\n\";\necho rounded_avg(20, 33);\necho \"\\n\";", "\tif ($n >\
    \ $m) {\n\t\treturn -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\
    \t\t$sum += $i;\n\t}\n\t$avg = (int) round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n\
    }", "\tif ($n > $m) return -1;\n\t$sum = $n;\n\tfor ($i = $n + 1; $i <= $m; $i++)\
    \ {\n\t\t$sum += $i;\n\t}\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n\
    }\necho rounded_avg(1, 5);\necho PHP_EOL;\necho rounded_avg(7, 5);\necho PHP_EOL;\n\
    echo rounded_avg(10, 20);\necho PHP_EOL;\necho rounded_avg(20, 33);\necho PHP_EOL;",
  "  if ($n > $m) {\n    return -1;\n  }\n  return decbin(round(($n + $m) / 2));\n\
    }", "    if ($n > $m) return -1;\n    $result = round(($n + $m) / 2);\n    return\
    \ decbin($result);\n}", "\tif ($n > $m) {\n\t\treturn -1;\n\t}\n\t$total = 0;\n\
    \tfor ($i = $n; $i <= $m; $i++) {\n\t\t$total += $i;\n\t}\n\t$rounded_avg = $total\
    \ / ($m - $n + 1);\n\t$rounded_avg = round($rounded_avg);\n\treturn decbin($rounded_avg);\n\
    }\necho rounded_avg(1, 5);\necho rounded_avg(7, 5);\necho rounded_avg(10, 20);\n\
    echo rounded_avg(20, 33);", "  if ($n > $m) {\n    return -1;\n  }\n  $avg = (int)\
    \ (($n + $m) / 2);\n  return \"0b\" . decbin($avg);\n}\n", "  $sum = 0;\n  if\
    \ ($n <= $m) {\n    for ($i = $n; $i <= $m; $i++) {\n      $sum += $i;\n    }\n\
    \    $avg = round($sum / ($m - $n + 1));\n    return decbin($avg);\n  } else {\n\
    \    return -1;\n  }\n}\necho rounded_avg(20, 33);", "  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = $n;\n  for ($i = $n; $i < $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $rounded_avg = round($sum / ($m - $n + 1));\n  return decbin($rounded_avg);\n\
    }\n", "  if ($n > $m) {\n    return -1;\n  }\n  $length = $m - $n + 1;\n  $sum\
    \ = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n  }\n  $average =\
    \ floor($sum / $length);\n  return decbin($average);\n}\n", "\tif ($n > $m) {\n\
    \t\treturn -1;\n\t}\n\treturn decbin(round(($n + $m) / 2));\n}\n\necho rounded_avg(1,\
    \ 5) . PHP_EOL; // \"0b11\"\necho rounded_avg(7, 5) . PHP_EOL; // -1\necho rounded_avg(10,\
    \ 20) . PHP_EOL; // \"0b1111\"\necho rounded_avg(20, 33) . PHP_EOL; // \"0b11010\"",
  "\t$sum = 0;\n\tif ($n > $m) {\n\t\treturn -1;\n\t}\n\tfor ($i = $n; $i <= $m; $i++)\
    \ {\n\t\t$sum += $i;\n\t}\n\t$avg = round($sum / ($m - $n + 1));\n\treturn \"\
    0b\" . decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

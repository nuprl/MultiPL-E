language: php
name: HumanEval_146_specialFilter
results:
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$goodNums =\
    \ array();\n\tforeach ($nums as $num) {\n\t\t$gN = false;\n\t\tif ($num > 10)\
    \ {\n\t\t\t$gN = true;\n\t\t\tif ((($num % 10) % 2 == 0) || (($num / 10) % 2 ==\
    \ 0)) {\n\t\t\t\t$gN = false;\n\t\t\t}\n\t\t}\n\t\tif ($gN) {\n\t\t\t$goodNums[]\
    \ = $num;\n\t\t}\n\t}\n\treturn count($goodNums);\n}\n\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 1.5 to int loses precision\
    \ in /tmp/tmpbwjnnz56.php on line 16\n\nDeprecated: Implicit conversion from float\
    \ 3.3 to int loses precision in /tmp/tmpbwjnnz56.php on line 16\n\nDeprecated:\
    \ Implicit conversion from float 4.5 to int loses precision in /tmp/tmpbwjnnz56.php\
    \ on line 16\n\nDeprecated: Implicit conversion from float 2.1 to int loses precision\
    \ in /tmp/tmpbwjnnz56.php on line 16\n\nDeprecated: Implicit conversion from float\
    \ 10.9 to int loses precision in /tmp/tmpbwjnnz56.php on line 16\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpbwjnnz56.php:34\nStack trace:\n\
    #0 /tmp/tmpbwjnnz56.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpbwjnnz56.php\
    \ on line 34\n"
  timestamp: 1659822454
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t// Your code\
    \ here!\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpee_1ksc6.php:19\n\
    Stack trace:\n#0 /tmp/tmpee_1ksc6.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpee_1ksc6.php\
    \ on line 19\n"
  timestamp: 1659822454
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10) {\n            $first_digit\
    \ = substr($num, 0, 1);\n            $last_digit = substr($num, -1);\n       \
    \     if ($first_digit%2 != 0 && $last_digit%2 != 0) {\n                $count\
    \ += 1;\n            }\n        }\n    }\n    return $count;\n}\nprint specialFilter(array(15,\
    \ -73, 14, -15)) . \"\\n\";\nprint specialFilter(array(33, -2, -3, 45, 21, 109))\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    2

    '
  timestamp: 1659822454
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    return count(array_filter($nums,\
    \ function($num) {\n        $num = abs($num);\n        return $num > 10 && (int)$num\
    \ % 2 && (int)substr($num, -1) % 2;\n    }));\n}\n\nprint_r(specialFilter(array(15,\
    \ -73, 14, -15)));\nprint_r(specialFilter(array(33, -2, -3, 45, 21, 109)));\n\
    function candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "34\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpowin8hga.php:25\n\
    Stack trace:\n#0 /tmp/tmpowin8hga.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpowin8hga.php\
    \ on line 25\n"
  timestamp: 1659822454
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $n = count($nums);\n\
    \    $a = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($nums[$i] > 10) {\n\
    \            $first = intval($nums[$i] / pow(10, floor(log10($nums[$i]))));\n\
    \            $last = $nums[$i] % 10;\n            if (($first % 2 != 0) && ($last\
    \ % 2 != 0)) {\n                $a++;\n            }\n        }\n    }\n    return\
    \ $a;\n}\n\n$myArray = array(15, -73, 14, -15);\necho specialFilter($myArray);\n\
    echo \"<br>\";\n$myArray = array(33, -2, -3, 45, 21, 109);\necho specialFilter($myArray);\n\
    function candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br>2
  timestamp: 1659822454
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n  $count = 0;\n\
    \  foreach ($nums as $num) {\n    $count += $num > 10 && ($num % 10) % 2 == 1\
    \ && ($num / 10) % 2 == 1 ? 1 : 0;\n  }\n  return $count;\n}\n\necho specialFilter(array(15,\
    \ -73, 14, -15));\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 1.5 to int loses precision\
    \ in /tmp/tmpq5dpyzl6.php on line 13\n1\nDeprecated: Implicit conversion from\
    \ float 1.5 to int loses precision in /tmp/tmpq5dpyzl6.php on line 13\n\nDeprecated:\
    \ Implicit conversion from float 3.3 to int loses precision in /tmp/tmpq5dpyzl6.php\
    \ on line 13\n\nDeprecated: Implicit conversion from float 4.5 to int loses precision\
    \ in /tmp/tmpq5dpyzl6.php on line 13\n\nDeprecated: Implicit conversion from float\
    \ 2.1 to int loses precision in /tmp/tmpq5dpyzl6.php on line 13\n\nDeprecated:\
    \ Implicit conversion from float 10.9 to int loses precision in /tmp/tmpq5dpyzl6.php\
    \ on line 13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq5dpyzl6.php:26\n\
    Stack trace:\n#0 /tmp/tmpq5dpyzl6.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpq5dpyzl6.php\
    \ on line 26\n"
  timestamp: 1659822454
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n  $count = 0;\n\
    \  foreach ($nums as $num) {\n    if (strlen($num) == 1 && $num >= 10 && ($num\
    \ % 2 == 1)) {\n      $count++;\n    } elseif (strlen($num) > 1 && substr($num,\
    \ 0, 1) % 2 == 1 && substr($num, -1) % 2 == 1) {\n      $count++;\n    }\n  }\n\
    \  return $count;\n}\n\n$nums = array(15, -73, 14, -15);\necho specialFilter($nums)\
    \ . PHP_EOL;\n\n$nums = array(33, -2, -3, 45, 21, 109);\necho specialFilter($nums)\
    \ . PHP_EOL;\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpw9enhlz6.php:15\nStack trace:\n#0 /tmp/tmpw9enhlz6.php(23): specialFilter(Array)\n\
    #1 {main}\n  thrown in /tmp/tmpw9enhlz6.php on line 15\n"
  timestamp: 1659822454
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        $num = abs($num);\n        if ($num >\
    \ 10) {\n            $first = $num % 10;\n            $last = floor($num / 10);\n\
    \            if ($first % 2 == 1 && $last % 2 == 1) {\n                $count++;\n\
    \            }\n        }\n    }\n    return $count;\n}\n$nums = array(15, -73,\
    \ 14, -15);\necho specialFilter($nums);\necho \"\\n\";\n$nums = array(33, -2,\
    \ -3, 45, 21, 109);\necho specialFilter($nums);\necho \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "3\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9hs_y9ph.php:37\n\
    Stack trace:\n#0 /tmp/tmp9hs_y9ph.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp9hs_y9ph.php\
    \ on line 37\n"
  timestamp: 1659822454
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n}\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpym4h36ed.php:17\n\
    Stack trace:\n#0 /tmp/tmpym4h36ed.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpym4h36ed.php\
    \ on line 17\n"
  timestamp: 1659822454
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$count = 0;\n\
    \tforeach ($nums as $num) {\n\t\tif ($num > 10) {\n\t\t\t$firstDigit = $num %\
    \ 10;\n\t\t\t$lastDigit = (int) ($num / 10);\n\t\t\twhile ($lastDigit >= 10) {\n\
    \t\t\t\t$lastDigit = (int) ($lastDigit / 10);\n\t\t\t}\n\t\t\tif ($firstDigit\
    \ % 2 != 0 && $lastDigit % 2 != 0) {\n\t\t\t\t$count++;\n\t\t\t}\n\t\t}\n\t}\n\
    \treturn $count;\n}\necho specialFilter(array(15, -73, 14, -15));\necho '<br/>';\n\
    echo specialFilter(array(33, -2, -3, 45, 21, 109));\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br/>2
  timestamp: 1659822454
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$counter = 0;\n\
    \tforeach ($nums as $num) {\n\t\t$str = strval($num);\n\t\tif ($num > 10 && (ord($str[0])\
    \ - ord('0')) % 2 != 0 && (ord($str[strlen($str) - 1]) - ord('0')) % 2 != 0) {\n\
    \t\t\t$counter++;\n\t\t}\n\t}\n\treturn $counter;\n}\necho specialFilter(array(15,\
    \ -73, 14, -15));\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1659822454
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $n) {\n        if ($n > 10 && $n % 2 == 1 && $n / 100 %\
    \ 2 == 1) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n\
    function candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 0.15 to int loses precision\
    \ in /tmp/tmpaqmbyilx.php on line 13\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpaqmbyilx.php:26\nStack trace:\n#0 /tmp/tmpaqmbyilx.php(34):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpaqmbyilx.php on line 26\n"
  timestamp: 1659822454
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\n}\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp34in1etk.php:18\n\
    Stack trace:\n#0 /tmp/tmp34in1etk.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp34in1etk.php\
    \ on line 18\n"
  timestamp: 1659822454
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n  // Your code\
    \ here\n  return $nums;\n}\necho specialFilter(array(15, -73, 14, -15)) . PHP_EOL;\n\
    echo specialFilter(array(33, -2, -3, 45, 21, 109)) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Array to string conversion in /tmp/tmpf_oe8lui.php on line 14\n\
    Array\n\nWarning: Array to string conversion in /tmp/tmpf_oe8lui.php on line 15\n\
    Array\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf_oe8lui.php:21\n\
    Stack trace:\n#0 /tmp/tmpf_oe8lui.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpf_oe8lui.php\
    \ on line 21\n"
  timestamp: 1659822454
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $value) {\n        if ($value > 10) {\n            $first_digit\
    \ = floor($value / 10);\n            $last_digit = $value % 10;\n            if\
    \ (($first_digit % 2 != 0) && ($last_digit % 2 != 0)) {\n                $count++;\n\
    \            }\n        }\n    }\n    return $count;\n}\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuf6k2xg0.php:30\n\
    Stack trace:\n#0 /tmp/tmpuf6k2xg0.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpuf6k2xg0.php\
    \ on line 30\n"
  timestamp: 1659822454
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $result =\
    \ 0;\n    foreach ($nums as $num) {\n        if ($num < 10 || $num > 100) {\n\
    \            continue;\n        }\n        $firstDigit = substr($num, 0, 1);\n\
    \        $lastDigit = substr($num, -1);\n        if ($firstDigit % 2 == 1 && $lastDigit\
    \ % 2 == 1) {\n            $result += 1;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj1yh7ls3.php:32\n\
    Stack trace:\n#0 /tmp/tmpj1yh7ls3.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpj1yh7ls3.php\
    \ on line 32\n"
  timestamp: 1659822454
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$greater = array_filter($nums,\
    \ function($num) {\n\t\treturn $num > 10;\n\t});\n\t$greater = array_filter($greater,\
    \ function($num) {\n\t\t$last = substr($num, -1);\n\t\t$first = substr($num, 0,\
    \ 1);\n\t\treturn $last % 2 != 0 && $first % 2 != 0;\n\t});\n\treturn count($greater);\n\
    }\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822454
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$count = 0;\n\
    \tforeach ($nums as $num) {\n\t\tif (abs($num) > 10) {\n\t\t\t$firstDigit = $num;\n\
    \t\t\twhile ($firstDigit > 10) {\n\t\t\t\t$firstDigit = $firstDigit / 10;\n\t\t\
    \t}\n\t\t\t$lastDigit = $num % 10;\n\t\t\tif ($firstDigit % 2 == 1 && $lastDigit\
    \ % 2 == 1) {\n\t\t\t\t$count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn $count;\n}\n\n\
    echo \"Test 1: \\n\";\necho specialFilter(array(15, -73, 14, -15)) . \"\\n\";\n\
    echo \"Test 2: \\n\";\necho specialFilter(array(33, -2, -3, 45, 21, 109)) . \"\
    \\n\";\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Test 1: \n\nDeprecated: Implicit conversion from float 1.5 to int loses\
    \ precision in /tmp/tmp5cg1ysi5.php on line 19\n\nDeprecated: Implicit conversion\
    \ from float 1.4 to int loses precision in /tmp/tmp5cg1ysi5.php on line 19\n1\n\
    Test 2: \n\nDeprecated: Implicit conversion from float 3.3 to int loses precision\
    \ in /tmp/tmp5cg1ysi5.php on line 19\n\nDeprecated: Implicit conversion from float\
    \ 4.5 to int loses precision in /tmp/tmp5cg1ysi5.php on line 19\n\nDeprecated:\
    \ Implicit conversion from float 2.1 to int loses precision in /tmp/tmp5cg1ysi5.php\
    \ on line 19\n\nDeprecated: Implicit conversion from float 1.09 to int loses precision\
    \ in /tmp/tmp5cg1ysi5.php on line 19\n2\n\nDeprecated: Implicit conversion from\
    \ float 1.5 to int loses precision in /tmp/tmp5cg1ysi5.php on line 19\n\nDeprecated:\
    \ Implicit conversion from float 1.4 to int loses precision in /tmp/tmp5cg1ysi5.php\
    \ on line 19\n\nDeprecated: Implicit conversion from float 3.3 to int loses precision\
    \ in /tmp/tmp5cg1ysi5.php on line 19\n\nDeprecated: Implicit conversion from float\
    \ 4.5 to int loses precision in /tmp/tmp5cg1ysi5.php on line 19\n\nDeprecated:\
    \ Implicit conversion from float 2.1 to int loses precision in /tmp/tmp5cg1ysi5.php\
    \ on line 19\n\nDeprecated: Implicit conversion from float 1.09 to int loses precision\
    \ in /tmp/tmp5cg1ysi5.php on line 19\n\nDeprecated: Implicit conversion from float\
    \ 4.3 to int loses precision in /tmp/tmp5cg1ysi5.php on line 19\n\nDeprecated:\
    \ Implicit conversion from float 9.3 to int loses precision in /tmp/tmp5cg1ysi5.php\
    \ on line 19\n\nDeprecated: Implicit conversion from float 1.25 to int loses precision\
    \ in /tmp/tmp5cg1ysi5.php on line 19\n\nDeprecated: Implicit conversion from float\
    \ 1.21 to int loses precision in /tmp/tmp5cg1ysi5.php on line 19\n\nDeprecated:\
    \ Implicit conversion from float 1.09 to int loses precision in /tmp/tmp5cg1ysi5.php\
    \ on line 19\n\nDeprecated: Implicit conversion from float 7.1 to int loses precision\
    \ in /tmp/tmp5cg1ysi5.php on line 19\n\nDeprecated: Implicit conversion from float\
    \ 7.5 to int loses precision in /tmp/tmp5cg1ysi5.php on line 19\n\nDeprec"
  timestamp: 1659822454
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$filterNums\
    \ = 0;\n\tforeach ($nums as $num) {\n\t\tif ($num > 10 && $num % 2 == 1 && substr($num,\
    \ 0, 1) % 2 == 1 && substr($num, -1) % 2 == 1) {\n\t\t\t$filterNums++;\n\t\t}\n\
    \t}\n\treturn $filterNums;\n}\n\necho specialFilter(array(15, -73, 14, -15));\n\
    echo \"\\n\";\necho specialFilter(array(33, -2, -3, 45, 21, 109));\necho \"\\\
    n\";\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    2

    '
  timestamp: 1659822454
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n  $count = 0;\n\
    \  foreach ($nums as $num) {\n    if ($num > 10 && $num % 2 === 1 && $num % 10\
    \ === 1) {\n      $count++;\n    }\n  }\n  return $count;\n}\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj_taxjdx.php:25\n\
    Stack trace:\n#0 /tmp/tmpj_taxjdx.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpj_taxjdx.php\
    \ on line 25\n"
  timestamp: 1659822454
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$result = 0;\n\
    \tforeach ($nums as $num) {\n\t\tif ($num > 10 && $num % 2 != 0 && $num % 10 !=\
    \ 0) {\n\t\t\t$result++;\n\t\t}\n\t}\n\treturn $result;\n}\n\necho \"\u0412\u0432\
    \u0435\u0434\u0438\u0442\u0435 \u0447\u0438\u0441\u043B\u0430 \u0447\u0435\u0440\
    \u0435\u0437 \u043F\u0440\u043E\u0431\u0435\u043B\\n\";\n$nums = explode(\" \"\
    , readline());\necho specialFilter($nums);\nfunction candidate(...$args) {\n \
    \   return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0447\u0438\u0441\u043B\u0430\
    \ \u0447\u0435\u0440\u0435\u0437 \u043F\u0440\u043E\u0431\u0435\u043B\n\nFatal\
    \ error: Uncaught Error: Call to undefined function readline() in /tmp/tmp_djroaul.php:21\n\
    Stack trace:\n#0 {main}\n  thrown in /tmp/tmp_djroaul.php on line 21\n"
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$result = 0;\n\
    \tforeach ($nums as $key => $num) {\n\t\t$firstDigit = substr($num, 0, 1);\n\t\
    \t$lastDigit = substr($num, -1);\n\t\tif ($num > 10 && $firstDigit % 2 != 0 &&\
    \ $lastDigit % 2 != 0) {\n\t\t\t$result++;\n\t\t}\n\t}\n\treturn $result;\n}\n\
    function candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n}\n\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzmk9kooz.php:18\n\
    Stack trace:\n#0 /tmp/tmpzmk9kooz.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpzmk9kooz.php\
    \ on line 18\n"
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$count = 0;\n\
    \tforeach ($nums as $num) {\n\t\t$first = str_split($num)[0];\n\t\t$last = str_split($num)[strlen($num)\
    \ - 1];\n\t\tif ($num > 10 && $first % 2 != 0 && $last % 2 != 0) {\n\t\t\t$count++;\n\
    \t\t}\n\t}\n\treturn $count;\n}\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10 && ($num % 10) % 2 != 0\
    \ && ($num % 100) / 10 % 2 != 0) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}\n\necho specialFilter(array(15, -73, 14, -15)) . PHP_EOL;\n\
    echo specialFilter(array(33, -2, -3, 45, 21, 109)) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 1.5 to int loses precision\
    \ in /tmp/tmp8ebgi202.php on line 13\n1\n\nDeprecated: Implicit conversion from\
    \ float 3.3 to int loses precision in /tmp/tmp8ebgi202.php on line 13\n\nDeprecated:\
    \ Implicit conversion from float 4.5 to int loses precision in /tmp/tmp8ebgi202.php\
    \ on line 13\n\nDeprecated: Implicit conversion from float 2.1 to int loses precision\
    \ in /tmp/tmp8ebgi202.php on line 13\n\nDeprecated: Implicit conversion from float\
    \ 0.9 to int loses precision in /tmp/tmp8ebgi202.php on line 13\n1\n\nDeprecated:\
    \ Implicit conversion from float 1.5 to int loses precision in /tmp/tmp8ebgi202.php\
    \ on line 13\n\nDeprecated: Implicit conversion from float 3.3 to int loses precision\
    \ in /tmp/tmp8ebgi202.php on line 13\n\nDeprecated: Implicit conversion from float\
    \ 4.5 to int loses precision in /tmp/tmp8ebgi202.php on line 13\n\nDeprecated:\
    \ Implicit conversion from float 2.1 to int loses precision in /tmp/tmp8ebgi202.php\
    \ on line 13\n\nDeprecated: Implicit conversion from float 0.9 to int loses precision\
    \ in /tmp/tmp8ebgi202.php on line 13\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp8ebgi202.php:29\nStack trace:\n#0 /tmp/tmp8ebgi202.php(36):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp8ebgi202.php on line 29\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$count = 0;\n\
    \tforeach ($nums as $num) {\n\t\tif (abs($num) > 10) {\n\t\t\t$num = abs($num);\n\
    \t\t\t$first = $num % 10;\n\t\t\t$last = (int)($num / 10);\n\t\t\tif ($first %\
    \ 2 !== 0 and $last % 2 !== 0) {\n\t\t\t\t$count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ $count;\n}\necho specialFilter(array(15, -73, 14, -15));\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "3\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcpzbu79o.php:31\n\
    Stack trace:\n#0 /tmp/tmpcpzbu79o.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpcpzbu79o.php\
    \ on line 31\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$c = 0;\n\t\
    foreach ($nums as $n) {\n\t\tif ($n > 10 && $n % 2 && floor($n / 10) % 2) {\n\t\
    \t\t$c++;\n\t\t}\n\t}\n\treturn $c;\n}\n\necho specialFilter(array(15, -73, 14,\
    \ -15));\necho \"\\n\";\necho specialFilter(array(33, -2, -3, 45, 21, 109));\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk58dhekb.php:31\n\
    Stack trace:\n#0 /tmp/tmpk58dhekb.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpk58dhekb.php\
    \ on line 31\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\n$nums = array(15, -73, 14, -15);\n\
    echo specialFilter($nums);\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp12khh6a7.php:28\n\
    Stack trace:\n#0 /tmp/tmp12khh6a7.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp12khh6a7.php\
    \ on line 28\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $finalCount\
    \ = 0;\n    foreach ($nums as $num) {\n        $firstDigit = intval($num / abs($num));\n\
    \        $lastDigit = $num % 10;\n        if ($num > 10 && $firstDigit % 2 !=\
    \ 0 && $lastDigit % 2 != 0) {\n            $finalCount++;\n        }\n    }\n\
    \    return $finalCount;\n}\necho specialFilter(array(15, -73, 14, -15));\necho\
    \ \"<br>\";\necho specialFilter(array(33, -2, -3, 45, 21, 109));\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1<br>4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3l8js36g.php:31\n\
    Stack trace:\n#0 /tmp/tmp3l8js36g.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp3l8js36g.php\
    \ on line 31\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        $first = $num % 10;\n        $last = intval($num\
    \ / 10);\n        if ($first % 2 == 1 && $last % 2 == 1 && $num > 10) {\n    \
    \        $count += 1;\n        }\n    }\n    return $count;\n}\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppvmmbjih.php:28\n\
    Stack trace:\n#0 /tmp/tmppvmmbjih.php(35): test()\n#1 {main}\n  thrown in /tmp/tmppvmmbjih.php\
    \ on line 28\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$total = 0;\n\
    \tforeach ($nums as $num) {\n\t\tif (abs($num) >= 10) {\n\t\t\t$digits = str_split(abs($num));\n\
    \t\t\tif ($digits[0] % 2 == 1 && $digits[count($digits) - 1] % 2 == 1) {\n\t\t\
    \t\t$total += 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn $total;\n}\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwdlwyye6.php:28\n\
    Stack trace:\n#0 /tmp/tmpwdlwyye6.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpwdlwyye6.php\
    \ on line 28\n"
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    // Write your\
    \ code here\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num\
    \ > 10) {\n            $first = substr($num, 0, 1);\n            $last = substr($num,\
    \ -1);\n            if ($first % 2 != 0 && $last % 2 != 0) {\n               \
    \ $count++;\n            }\n        }\n    }\n    return $count;\n}\n\n$nums =\
    \ array(15, -73, 14, -15);\necho specialFilter($nums);\n\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10) {\n            $first =\
    \ (int) $num / 10;\n            $last = $num % 10;\n            if ($first % 2\
    \ == 1 && $last % 2 == 1) {\n                $count++;\n            }\n      \
    \  }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return\
    \ specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 1.5 to int loses precision\
    \ in /tmp/tmpa7d91gqq.php on line 16\n\nDeprecated: Implicit conversion from float\
    \ 1.4 to int loses precision in /tmp/tmpa7d91gqq.php on line 16\n\nDeprecated:\
    \ Implicit conversion from float 3.3 to int loses precision in /tmp/tmpa7d91gqq.php\
    \ on line 16\n\nDeprecated: Implicit conversion from float 4.5 to int loses precision\
    \ in /tmp/tmpa7d91gqq.php on line 16\n\nDeprecated: Implicit conversion from float\
    \ 2.1 to int loses precision in /tmp/tmpa7d91gqq.php on line 16\n\nDeprecated:\
    \ Implicit conversion from float 10.9 to int loses precision in /tmp/tmpa7d91gqq.php\
    \ on line 16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa7d91gqq.php:31\n\
    Stack trace:\n#0 /tmp/tmpa7d91gqq.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpa7d91gqq.php\
    \ on line 31\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\treturn 0;\n\
    }\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpplu2a0nk.php:20\n\
    Stack trace:\n#0 /tmp/tmpplu2a0nk.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpplu2a0nk.php\
    \ on line 20\n"
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $nums_arr\
    \ = [];\n    foreach ($nums as $number) {\n        if ($number > 10) {\n     \
    \       $first_digit = substr($number, 0, 1);\n            $last_digit = substr($number,\
    \ -1);\n            if (($first_digit % 2) != 0 && ($last_digit % 2) != 0) {\n\
    \                $nums_arr[] = $number;\n            }\n        }\n    }\n   \
    \ return count($nums_arr);\n}\n\n$special_arr = [15, -73, 14, -15];\nprint specialFilter($special_arr)\
    \ . PHP_EOL;\n\n$special_arr = [33, -2, -3, 45, 21, 109];\nprint specialFilter($special_arr)\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    2

    '
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    // Write your\
    \ code here\n}\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpioaknajj.php:18\n\
    Stack trace:\n#0 /tmp/tmpioaknajj.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpioaknajj.php\
    \ on line 18\n"
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$numCount =\
    \ 0;\n\tforeach ($nums as $num) {\n\t\t$first_digit = substr($num, 0, 1);\n\t\t\
    $last_digit = substr($num, -1);\n\t\tif ($num > 10 && $first_digit % 2 == 1 &&\
    \ $last_digit % 2 == 1) {\n\t\t\t$numCount++;\n\t\t}\n\t}\n\treturn $numCount;\n\
    }\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$temp = array();\n\
    \tforeach ($nums as $num) {\n\t\t$test = abs($num);\n\t\t$str = strval($test);\n\
    \t\tif ($str[0] % 2 != 0 && $str[strlen($str) - 1] % 2 != 0 && $test > 10) {\n\
    \t\t\tarray_push($temp, $num);\n\t\t}\n\t}\n\treturn count($temp);\n}\n\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpswx_j2rb.php:28\n\
    Stack trace:\n#0 /tmp/tmpswx_j2rb.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpswx_j2rb.php\
    \ on line 28\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $result =\
    \ array();\n    foreach ($nums as $num) {\n        if (isOddAndGreaterThanTen($num))\
    \ {\n            $result[] = $num;\n        }\n    }\n    return count($result);\n\
    }\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function isOddAndGreaterThanTen()\
    \ in /tmp/tmpj7zut_cv.php:13\nStack trace:\n#0 /tmp/tmpj7zut_cv.php(21): specialFilter(Array)\n\
    #1 /tmp/tmpj7zut_cv.php(25): candidate(Array)\n#2 /tmp/tmpj7zut_cv.php(34): test()\n\
    #3 {main}\n  thrown in /tmp/tmpj7zut_cv.php on line 13\n"
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$result = 0;\n\
    \tforeach ($nums as $num) {\n\t\tif ($num > 10) {\n\t\t\t$string = strval($num);\n\
    \t\t\tif (in_array($string[0], array(1, 3, 5, 7, 9)) && in_array($string[strlen($string)\
    \ - 1], array(1, 3, 5, 7, 9))) {\n\t\t\t\t$result++;\n\t\t\t}\n\t\t}\n\t}\n\t\
    return $result;\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if (abs($num) > 10 && ($num % 2 == 1)\
    \ && ($num > 0 ? \n                $num % 10 : abs($num) % 10) % 2 == 1) {\n \
    \           $count++;\n        }\n    }\n    return $count;\n}\necho specialFilter(array(15,\
    \ -73, 14, -15)) . \"\\n\";\necho specialFilter(array(33, -2, -3, 45, 21, 109))\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n4\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmproix6ykn.php:29\n\
    Stack trace:\n#0 /tmp/tmproix6ykn.php(36): test()\n#1 {main}\n  thrown in /tmp/tmproix6ykn.php\
    \ on line 29\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t// code goes\
    \ here\n\tforeach ($nums as $key => $value) {\n\t\t$firs_digit = $value[0];\n\t\
    \t$lenght = strlen($value);\n\t\t$last_digit = $value[$lenght-1];\n\t\t$is_first_odd\
    \ = $firs_digit % 2 == 1;\n\t\t$is_last_odd = $last_digit % 2 == 1;\n\t\tif($value\
    \ > 10 && $is_first_odd && $is_last_odd){\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn\
    \ $count;\n}\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmpcfr4u2bq.php\
    \ on line 13\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmpcfr4u2bq.php on line 15\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmpcfr4u2bq.php on line 13\n\nWarning: Trying to access\
    \ array offset on value of type int in /tmp/tmpcfr4u2bq.php on line 15\n\nWarning:\
    \ Trying to access array offset on value of type int in /tmp/tmpcfr4u2bq.php on\
    \ line 13\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpcfr4u2bq.php\
    \ on line 15\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmpcfr4u2bq.php on line 13\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmpcfr4u2bq.php on line 15\n\nWarning: Undefined variable\
    \ $count in /tmp/tmpcfr4u2bq.php on line 22\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpcfr4u2bq.php:29\nStack trace:\n#0 /tmp/tmpcfr4u2bq.php(38):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpcfr4u2bq.php on line 29\n"
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $result =\
    \ 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        if ($nums[$i] > 10)\
    \ {\n            $numStr = strval($nums[$i]);\n            if (in_array($numStr[0],\
    \ array('1', '3', '5', '7', '9')) && in_array($numStr[strlen($numStr) - 1], array('1',\
    \ '3', '5', '7', '9'))) {\n                $result++;\n            }\n       \
    \ }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $result =\
    \ 0;\n    foreach ($nums as $num) {\n        if (($num > 10) && (($num % 10) %\
    \ 2 != 0) && (($num / 100) % 2 != 0)) {\n            $result++;\n        }\n \
    \   }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 0.15 to int loses precision\
    \ in /tmp/tmpjl1jdh1e.php on line 13\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpjl1jdh1e.php:26\nStack trace:\n#0 /tmp/tmpjl1jdh1e.php(34):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpjl1jdh1e.php on line 26\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$nums = array_filter($nums,\
    \ \"filter\");\n\t$c = 0;\n\tforeach ($nums as $value) {\n\t\t$c++;\n\t}\n\treturn\
    \ $c;\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"filter\" not found or invalid function\
    \ name in /tmp/tmpswhdjhlu.php:11\nStack trace:\n#0 /tmp/tmpswhdjhlu.php(11):\
    \ array_filter(Array, 'filter')\n#1 /tmp/tmpswhdjhlu.php(20): specialFilter(Array)\n\
    #2 /tmp/tmpswhdjhlu.php(24): candidate(Array)\n#3 /tmp/tmpswhdjhlu.php(33): test()\n\
    #4 {main}\n  thrown in /tmp/tmpswhdjhlu.php on line 11\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if (abs($num) > 10) {\n            $lastDigit\
    \ = abs($num) % 10;\n            $firstDigit = (int) (abs($num) / pow(10, floor(log10(abs($num)))));\n\
    \            if ($lastDigit % 2 == 1 && $firstDigit % 2 == 1) {\n            \
    \    $count++;\n            }\n        }\n    }\n    return $count;\n}\n$nums\
    \ = array(15, -73, 14, -15);\necho \"Input: [\";\nforeach ($nums as $num) {\n\
    \    echo $num . \", \";\n}\necho \"]\\n\";\necho \"Output: \" . specialFilter($nums)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Input: [15, -73, 14, -15, ]\nOutput: 3\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpta42opzl.php:36\nStack trace:\n#0 /tmp/tmpta42opzl.php(44):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpta42opzl.php on line 36\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    // code here\n\
    }\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp22ehfuai.php:18\n\
    Stack trace:\n#0 /tmp/tmp22ehfuai.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp22ehfuai.php\
    \ on line 18\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    // your code\
    \ here\n}\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwmn5dp75.php:18\n\
    Stack trace:\n#0 /tmp/tmpwmn5dp75.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpwmn5dp75.php\
    \ on line 18\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n  // Code here\n\
    }\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2ucoqx0g.php:18\n\
    Stack trace:\n#0 /tmp/tmp2ucoqx0g.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp2ucoqx0g.php\
    \ on line 18\n"
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$filtered =\
    \ array_filter($nums, function($n) {\n\t\tif ($n > 10) {\n\t\t\t$str_n = strval($n);\n\
    \t\t\tif (strlen($str_n) < 2) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t$first\
    \ = substr($str_n, 0, 1);\n\t\t\t$last = substr($str_n, -1);\n\t\t\tif ($first\
    \ % 2 == 1 && $last % 2 == 1) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn\
    \ false;\n\t});\n\treturn count($filtered);\n}\n\necho specialFilter(array(15,\
    \ -73, 14, -15)) . \"<br>\";\necho specialFilter(array(33, -2, -3, 45, 21, 109))\
    \ . \"<br>\";\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br>2<br>
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $result =\
    \ 0;\n    foreach ($nums as $num) {\n        if ($num >= 10) {\n            $firstDigit\
    \ = floor($num / 10);\n            $lastDigit = $num % 10;\n            if ($firstDigit\
    \ % 2 !== 0 && $lastDigit % 2 !== 0) {\n                $result++;\n         \
    \   }\n        }\n    }\n    return $result;\n}\n\necho specialFilter(array(15,\
    \ -73, 14, -15));\necho PHP_EOL;\necho specialFilter(array(33, -2, -3, 45, 21,\
    \ 109));\necho PHP_EOL;\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqd5hkbyq.php:35\n\
    Stack trace:\n#0 /tmp/tmpqd5hkbyq.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpqd5hkbyq.php\
    \ on line 35\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$counter = 0;\n\
    \tforeach ($nums as $num) {\n\t\tif ($num > 10 && isOdd(firstDigit($num)) && isOdd(lastDigit($num)))\
    \ {\n\t\t\t$counter++;\n\t\t}\n\t}\n\treturn $counter;\n}\n\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function isOdd() in /tmp/tmpe1y_ilhg.php:13\n\
    Stack trace:\n#0 /tmp/tmpe1y_ilhg.php(21): specialFilter(Array)\n#1 /tmp/tmpe1y_ilhg.php(26):\
    \ candidate(Array)\n#2 /tmp/tmpe1y_ilhg.php(34): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmpe1y_ilhg.php on line 13\n"
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n  $num = 0;\n\
    \  foreach ($nums as $i) {\n    if ($i > 10 && (substr($i, 0, 1) % 2 != 0) &&\
    \ (substr($i, -1) % 2 != 0)) {\n      $num++;\n    }\n  }\n  return $num;\n}\n\
    \nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$count = 0;\n\
    \tforeach ($nums as $num) {\n\t\t$digits = str_split($num);\n\t\tif ($num > 10\
    \ && (end($digits) % 2 !== 0) && ($digits[0] % 2 !== 0)) {\n\t\t\t$count++;\n\t\
    \t}\n\t}\n\treturn $count;\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n  $count = 0;\n\
    \  foreach ($nums as $num) {\n    if (abs($num) > 10 && $num % 2 != 0) {\n   \
    \   $count++;\n    }\n  }\n  return $count;\n}\n\n$array1 = array(15, -73, 14,\
    \ -15);\n$array2 = array(33, -2, -3, 45, 21, 109);\n\necho \"Input array: \";\n\
    echo \"<pre>\";\nprint_r($array1);\necho \"</pre>\";\necho \"Output: \" . specialFilter($array1)\
    \ . \"<br>\";\n\necho \"Input array: \";\necho \"<pre>\";\nprint_r($array2);\n\
    echo \"</pre>\";\necho \"Output: \" . specialFilter($array2) . \"<br>\";\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Input array: <pre>Array\n(\n    [0] => 15\n    [1] => -73\n    [2] => 14\n\
    \    [3] => -15\n)\n</pre>Output: 3<br>Input array: <pre>Array\n(\n    [0] =>\
    \ 33\n    [1] => -2\n    [2] => -3\n    [3] => 45\n    [4] => 21\n    [5] => 109\n\
    )\n</pre>Output: 4<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpri_60wma.php:40\n\
    Stack trace:\n#0 /tmp/tmpri_60wma.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpri_60wma.php\
    \ on line 40\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10) {\n            $fDigit\
    \ = floor($num / 10);\n            $lDigit = $num % 10;\n            if ($fDigit\
    \ % 2 != 0 && $lDigit % 2 != 0) {\n                $count++;\n            }\n\
    \        }\n    }\n    return $count;\n}\necho specialFilter(array(15, -73, 14,\
    \ -15)) . \"\\n\";\necho specialFilter(array(33, -2, -3, 45, 21, 109)) . \"\\\
    n\";\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2ss_7oj_.php:33\n\
    Stack trace:\n#0 /tmp/tmp2ss_7oj_.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp2ss_7oj_.php\
    \ on line 33\n"
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n  $count = 0;\n\
    \  foreach ($nums as $num) {\n    $s = (string)$num;\n    if ($num > 10 && $s[0]\
    \ % 2 !== 0 && $s[strlen($s) - 1] % 2 !== 0) {\n      $count++;\n    }\n  }\n\
    \  return $count;\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $matches =\
    \ array_filter($nums, function($number) {\n        $number_string = strval($number);\n\
    \        $first_digit = $number_string[0];\n        $last_digit = $number_string[strlen($number_string)\
    \ - 1];\n        return $number > 10 && $first_digit % 2 && $last_digit % 2;\n\
    \    });\n    return count($matches);\n}\n$filtered = specialFilter(array(15,\
    \ -73, 14, -15));\necho '<pre>';\nprint_r($filtered);\necho '</pre>';\n\n$filtered2\
    \ = specialFilter(array(33, -2, -3, 45, 21, 109));\necho '<pre>';\nprint_r($filtered2);\n\
    echo '</pre>';\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: <pre>1</pre><pre>2</pre>
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$filtered =\
    \ [];\n\tforeach ($nums as $num) {\n\t\tif ($num > 10 && isOdd($num) && isOdd(lastDigit($num)))\
    \ {\n\t\t\t$filtered[] = $num;\n\t\t}\n\t}\n\treturn count($filtered);\n}\n\n\
    function candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function isOdd() in /tmp/tmpdi8j9jp0.php:13\n\
    Stack trace:\n#0 /tmp/tmpdi8j9jp0.php(21): specialFilter(Array)\n#1 /tmp/tmpdi8j9jp0.php(26):\
    \ candidate(Array)\n#2 /tmp/tmpdi8j9jp0.php(34): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmpdi8j9jp0.php on line 13\n"
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$count = 0;\n\
    \tforeach ($nums as $num) {\n\t\tif (strlen($num) > 1) {\n\t\t\t$first = $num\
    \ % 10;\n\t\t\t$last = intval($num / pow(10, strlen($num) - 1));\n\t\t\tif ($num\
    \ > 10 && $first % 2 !== 0 && $last % 2 !== 0) {\n\t\t\t\t$count++;\n\t\t\t}\n\
    \t\t}\n\t}\n\treturn $count;\n}\n$nums = array(15, -73, 14, -15);\necho specialFilter($nums);\n\
    function candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n  $count = 0;\n\
    \  foreach ($nums as $num) {\n    if ($num > 10 && $num % 2 != 0 && $num < -10\
    \ && $num % 2 != 0) {\n      $count++;\n    }\n  }\n  return $count;\n}\n\n$count\
    \ = specialFilter(array(15, -73, 14, -15));\n\necho $count;\n\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbqjm0sn7.php:30\n\
    Stack trace:\n#0 /tmp/tmpbqjm0sn7.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpbqjm0sn7.php\
    \ on line 30\n"
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n  $count = 0;\n\
    \  foreach ($nums as $num) {\n    $str = strval($num);\n    if ($num > 10 && strlen($str)\
    \ > 1 &&\n      is_numeric($str[0]) && is_numeric($str[strlen($str) - 1]) &&\n\
    \      intval($str[0]) % 2 !== 0 && intval($str[strlen($str) - 1]) % 2 !== 0)\
    \ {\n      $count++;\n    }\n  }\n  return $count;\n}\n\n$nums = array(15, -73,\
    \ 14, -15);\n$nums2 = array(33, -2, -3, 45, 21, 109);\necho specialFilter($nums)\
    \ . \"\\n\";\necho specialFilter($nums2) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    2

    '
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$found = 0;\n\
    \tforeach ($nums as $num) {\n\t\tif (abs($num) > 10 && abs($num) % 2 != 0)\n\t\
    \t\t$found++;\n\t}\n\treturn $found;\n}\n\nif ($argc > 1) {\n\tif (is_numeric($argv[1]))\
    \ {\n\t\t$nums = range(0, $argv[1]);\n\t\tshuffle($nums);\n\t\techo \"Input: \"\
    \ . implode(\", \", $nums) . \"\\n\";\n\t\techo \"Output: \" . specialFilter($nums)\
    \ . \"\\n\";\n\t} else {\n\t\techo \"Input is not numeric\\n\";\n\t}\n} else {\n\
    \techo \"Please provide input\\n\";\n}\nfunction candidate(...$args) {\n    return\
    \ specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Please provide input\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp8uxpc3xw.php:37\nStack trace:\n#0 /tmp/tmp8uxpc3xw.php(45): test()\n\
    #1 {main}\n  thrown in /tmp/tmp8uxpc3xw.php on line 37\n"
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$newArr = [];\n\
    \tforeach ($nums as $n) {\n\t\t$strNum = (string)$n;\n\t\tif ($n > 10 && $strNum[0]\
    \ % 2 !== 0 && $strNum[strlen($strNum) - 1] % 2 !== 0) {\n\t\t\t$newArr[] = $n;\n\
    \t\t}\n\t}\n\treturn count($newArr);\n}\n\nfunction candidate(...$args) {\n  \
    \  return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10 && $num % 2 === 1 && \n\
    \            ($num % 10) % 2 === 1 &&\n            intval($num / 10) % 2 === 1)\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuub7oyxy.php:29\n\
    Stack trace:\n#0 /tmp/tmpuub7oyxy.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpuub7oyxy.php\
    \ on line 29\n"
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$count = 0;\n\
    \tforeach ($nums as $num) {\n\t\tif ($num > 10) {\n\t\t\t$digits = str_split($num);\n\
    \t\t\tif ($digits[0] % 2 == 1 && $digits[count($digits) - 1] % 2 == 1) {\n\t\t\
    \t\t$count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn $count;\n}\n$nums = array(15, -73,\
    \ 14, -15);\necho specialFilter($nums) . \"<br>\";\n$nums = array(33, -2, -3,\
    \ 45, 21, 109);\necho specialFilter($nums) . \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br>2<br>
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        $digits = (string)$num;\n        if ($num\
    \ > 10 && $digits[0] % 2 !== 0 && $digits[strlen($digits) - 1] % 2 !== 0) {\n\
    \            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$count = 0;\n\
    \tforeach ($nums as $num) {\n\t\t$numStr = (string) $num;\n\t\tif ($num > 10 &&\
    \ (is_numeric($numStr[0]) && $numStr[0] % 2 == 1) && (is_numeric($numStr[strlen($numStr)\
    \ - 1]) && $numStr[strlen($numStr) - 1] % 2 == 1)) {\n\t\t\t$count++;\n\t\t}\n\
    \t}\n\treturn $count;\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10 && is_numeric($num)) {\n\
    \            $str = (string) $num;\n            if ($str[0] % 2 != 0 && $str[strlen($str)\
    \ - 1] % 2 != 0) {\n                $count++;\n            }\n        }\n    }\n\
    \    return $count;\n}\n\necho specialFilter(array(15, -73, 14, -15)).'<br>';\n\
    echo specialFilter(array(33, -2, -3, 45, 21, 109));\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br>2
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$count = 0;\n\
    \tforeach ($nums as $num) {\n\t\tif ($num > 10 && (abs($num) % 10) % 2 == 1 &&\
    \ ($num / 100) % 2 == 1) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n\
    echo specialFilter(array(15, -73, 14, -15));\necho \"\\n\";\necho specialFilter(array(33,\
    \ -2, -3, 45, 21, 109));\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 0.15 to int loses precision\
    \ in /tmp/tmpu3915h4e.php on line 13\n0\n\nDeprecated: Implicit conversion from\
    \ float 0.33 to int loses precision in /tmp/tmpu3915h4e.php on line 13\n\nDeprecated:\
    \ Implicit conversion from float 0.45 to int loses precision in /tmp/tmpu3915h4e.php\
    \ on line 13\n\nDeprecated: Implicit conversion from float 0.21 to int loses precision\
    \ in /tmp/tmpu3915h4e.php on line 13\n\nDeprecated: Implicit conversion from float\
    \ 1.09 to int loses precision in /tmp/tmpu3915h4e.php on line 13\n1\nDeprecated:\
    \ Implicit conversion from float 0.15 to int loses precision in /tmp/tmpu3915h4e.php\
    \ on line 13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu3915h4e.php:28\n\
    Stack trace:\n#0 /tmp/tmpu3915h4e.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpu3915h4e.php\
    \ on line 28\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$count = 0;\n\
    \tforeach ($nums as $num) {\n\t\t$first = $num[0];\n\t\t$last = $num[strlen($num)\
    \ - 1];\n\t\tif (($num > 10) && ($first % 2 != 0) && ($last % 2 != 0)) {\n\t\t\
    \t$count += 1;\n\t\t}\n\t}\n\treturn $count;\n}\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmp91m1_h_4.php\
    \ on line 13\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmp91m1_h_4.php on line 14\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmp91m1_h_4.php on line 13\n\nWarning: Trying to access\
    \ array offset on value of type int in /tmp/tmp91m1_h_4.php on line 14\n\nWarning:\
    \ Trying to access array offset on value of type int in /tmp/tmp91m1_h_4.php on\
    \ line 13\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp91m1_h_4.php\
    \ on line 14\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmp91m1_h_4.php on line 13\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmp91m1_h_4.php on line 14\n\nWarning: Trying to access\
    \ array offset on value of type int in /tmp/tmp91m1_h_4.php on line 13\n\nWarning:\
    \ Trying to access array offset on value of type int in /tmp/tmp91m1_h_4.php on\
    \ line 14\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp91m1_h_4.php\
    \ on line 13\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmp91m1_h_4.php on line 14\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmp91m1_h_4.php on line 13\n\nWarning: Trying to access\
    \ array offset on value of type int in /tmp/tmp91m1_h_4.php on line 14\n\nWarning:\
    \ Trying to access array offset on value of type int in /tmp/tmp91m1_h_4.php on\
    \ line 13\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp91m1_h_4.php\
    \ on line 14\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp91m1_h_4.php:27\n\
    Stack trace:\n#0 /tmp/tmp91m1_h_4.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp91m1_h_4.php\
    \ on line 27\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$count = 0;\n\
    \tfor ($i = 0; $i < count($nums); $i++) {\n\t\tif ($nums[$i] > 10 && ($nums[$i]\
    \ / 10) % 2 == 1 && $nums[$i] % 2 == 1) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 1.5 to int loses precision\
    \ in /tmp/tmp06biykdn.php on line 13\n\nDeprecated: Implicit conversion from float\
    \ 1.4 to int loses precision in /tmp/tmp06biykdn.php on line 13\n\nDeprecated:\
    \ Implicit conversion from float 3.3 to int loses precision in /tmp/tmp06biykdn.php\
    \ on line 13\n\nDeprecated: Implicit conversion from float 4.5 to int loses precision\
    \ in /tmp/tmp06biykdn.php on line 13\n\nDeprecated: Implicit conversion from float\
    \ 2.1 to int loses precision in /tmp/tmp06biykdn.php on line 13\n\nDeprecated:\
    \ Implicit conversion from float 10.9 to int loses precision in /tmp/tmp06biykdn.php\
    \ on line 13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp06biykdn.php:27\n\
    Stack trace:\n#0 /tmp/tmp06biykdn.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp06biykdn.php\
    \ on line 27\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    return array_reduce($nums,\
    \ function($carry, $item) {\n        if($item > 10 && $item % 2 == 1 && strlen($item)\
    \ > 1 && ($item % 10) % 2 == 1) {\n            $carry++;\n        }\n        return\
    \ $carry;\n    }, 0);\n}\n$test_array = array(15, -73, 14, -15);\necho specialFilter($test_array)\
    \ . \"\\n\";\n$test_array = array(33, -2, -3, 45, 21, 109);\necho specialFilter($test_array)\
    \ . \"\\n\";\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n4\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpncgzw3_z.php:30\n\
    Stack trace:\n#0 /tmp/tmpncgzw3_z.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpncgzw3_z.php\
    \ on line 30\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$counter = 0;\n\
    \tforeach ($nums as $num) {\n\t\tif ((abs($num) > 10) && ((abs($num) % 10) % 2\
    \ != 0) && ($num < 0 ? $num % 10 == 9 : $num % 10 == 1)) {\n\t\t\t$counter++;\n\
    \t\t}\n\t}\n\treturn $counter;\n}\n\nfunction candidate(...$args) {\n    return\
    \ specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptiyun3wo.php:26\n\
    Stack trace:\n#0 /tmp/tmptiyun3wo.php(34): test()\n#1 {main}\n  thrown in /tmp/tmptiyun3wo.php\
    \ on line 26\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$count = 0;\n\
    \tforeach ($nums as $num) {\n\t\tif ($num > 10 && $num % 2 !== 0 && $num % 5 !==\
    \ 0) {\n\t\t\t$count += 1;\n\t\t}\n\t}\n\treturn $count;\n}\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw8zy0x79.php:25\n\
    Stack trace:\n#0 /tmp/tmpw8zy0x79.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpw8zy0x79.php\
    \ on line 25\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$count = 0;\n\
    \tforeach ($nums as $num) {\n\t\t$num = strval($num);\n\t\tif ($num > 10 && isOdd($num[0])\
    \ && isOdd($num[strlen($num) - 1])) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n\
    }\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function isOdd() in /tmp/tmpyy4w_9ph.php:14\n\
    Stack trace:\n#0 /tmp/tmpyy4w_9ph.php(21): specialFilter(Array)\n#1 /tmp/tmpyy4w_9ph.php(26):\
    \ candidate(Array)\n#2 /tmp/tmpyy4w_9ph.php(34): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmpyy4w_9ph.php on line 14\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $n = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10) {\n            $first =\
    \ $num % 10;\n            $last = ($num - $first) / 10;\n            if (($first\
    \ % 2 === 1) && ($last % 2 === 1)) {\n                $n++;\n            }\n \
    \       }\n    }\n    return $n;\n}\n\nfunction candidate(...$args) {\n    return\
    \ specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzfrbuodc.php:31\n\
    Stack trace:\n#0 /tmp/tmpzfrbuodc.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpzfrbuodc.php\
    \ on line 31\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n  $count = 0;\n\
    \  foreach ($nums as $num) {\n    if ($num > 10 && isOdd($num) && isOdd($num %\
    \ 10)) {\n      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function isOdd() in /tmp/tmprurx8gk9.php:13\n\
    Stack trace:\n#0 /tmp/tmprurx8gk9.php(21): specialFilter(Array)\n#1 /tmp/tmprurx8gk9.php(26):\
    \ candidate(Array)\n#2 /tmp/tmprurx8gk9.php(34): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmprurx8gk9.php on line 13\n"
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n  \n  $filtered_nums\
    \ = array_filter($nums, function($num) {\n    $num_str = strval($num);\n    $first_digit\
    \ = $num_str[0];\n    $last_digit = $num_str[strlen($num_str) - 1];\n    return\
    \ (strlen($num_str) > 1 &&\n            $num > 10 &&\n            is_numeric($first_digit)\
    \ &&\n            is_numeric($last_digit) &&\n            $first_digit % 2 !=\
    \ 0 &&\n            $last_digit % 2 != 0);\n  });\n  \n  return count($filtered_nums);\n\
    }\n\necho specialFilter(array(15, -73, 14, -15)) . \"\\n\";\necho specialFilter(array(33,\
    \ -2, -3, 45, 21, 109)) . \"\\n\";\n\nfunction candidate(...$args) {\n    return\
    \ specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    2

    '
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $n=0;\n  \
    \  foreach ($nums as $num) {\n        if($num > 10 && $num%2!=0 && ($num%10==1\
    \ || $num%10==3 || $num%10==5 || $num%10==7 || $num%10==9))\n            $n++;\n\
    \    }\n    return $n;\n}\n\nprint_r(specialFilter(array(15, -73, 14, -15)));\n\
    print_r(specialFilter(array(33, -2, -3, 45, 21, 109)));\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqkbcig76.php:28\n\
    Stack trace:\n#0 /tmp/tmpqkbcig76.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpqkbcig76.php\
    \ on line 28\n"
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    // Code here\n\
    \    $count = 0;\n    foreach ($nums as $i) {\n        if ($i > 10) {\n      \
    \      $i = strval($i);\n            if (strlen($i) == 1) {\n                if\
    \ ($i % 2 == 1) {\n                    $count++;\n                }\n        \
    \    } else {\n                if ($i[0] % 2 == 1 && $i[strlen($i) - 1] % 2 ==\
    \ 1) {\n                    $count++;\n                }\n            }\n    \
    \    }\n    }\n    return $count;\n}\n\necho specialFilter(array(15, -73, 14,\
    \ -15));\necho \"<br>\";\necho specialFilter(array(33, -2, -3, 45, 21, 109));\n\
    function candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br>2
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$count = 0;\n\
    \tforeach ($nums as $num) {\n\t\tif ($num > 10 && abs($num) % 2 == 1) {\n\t\t\t\
    $count += 1;\n\t\t}\n\t}\n\treturn $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd0o1bvx1.php:27\n\
    Stack trace:\n#0 /tmp/tmpd0o1bvx1.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpd0o1bvx1.php\
    \ on line 27\n"
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $n) {\n        if ($n > 10) {\n            $n_str = strval($n);\n\
    \            if (((int) $n_str[0] % 2 != 0) && ((int) $n_str[strlen($n_str) -\
    \ 1] % 2 != 0)) {\n                $count++;\n            }\n        }\n    }\n\
    \    return $count;\n}\n$nums = array(15, -73, 14, -15);\necho specialFilter($nums);\n\
    echo \"\\n\";\n$nums = array(33, -2, -3, 45, 21, 109);\necho specialFilter($nums);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    2

    '
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$result = 0;\n\
    \tforeach ($nums as $num) {\n\t\tif ($num >= 10) {\n\t\t\t$str = (string) $num;\n\
    \t\t\tif (strlen($str) > 1) {\n\t\t\t\tif (strpos('13579', $str[0]) !== false\
    \ && strpos('13579', $str[strlen($str) - 1]) !== false) {\n\t\t\t\t\t$result++;\n\
    \t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $counter =\
    \ 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        if ($nums[$i] > 10\
    \ && isLastDigitOdd($nums[$i]) && isFirstDigitOdd($nums[$i])) {\n            $counter++;\n\
    \        }\n    }\n    return $counter;\n}\nfunction candidate(...$args) {\n \
    \   return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function isLastDigitOdd()\
    \ in /tmp/tmp3wpq1mzc.php:13\nStack trace:\n#0 /tmp/tmp3wpq1mzc.php(20): specialFilter(Array)\n\
    #1 /tmp/tmp3wpq1mzc.php(25): candidate(Array)\n#2 /tmp/tmp3wpq1mzc.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmp3wpq1mzc.php on line 13\n"
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $filtered\
    \ = [];\n    $count = 0;\n    foreach ($nums as $num) {\n        $filtered[] =\
    \ $num;\n    }\n    for ($i = 0; $i < count($filtered); $i++) {\n        if ($filtered[$i]\
    \ > 10) {\n            $numToStr = strval($filtered[$i]);\n            $length\
    \ = strlen($numToStr);\n            $lastDigit = $numToStr[$length - 1];\n   \
    \         $firstDigit = $numToStr[0];\n            if ($lastDigit % 2 != 0 &&\
    \ $firstDigit % 2 != 0) {\n                $count++;\n            }\n        }\n\
    \    }\n    return $count;\n}\necho specialFilter(array(15, -73, 14, -15));\n\
    echo \"\\n\";\necho specialFilter(array(33, -2, -3, 45, 21, 109));\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    2'
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$counter = 0;\n\
    \tforeach ($nums as $n) {\n\t\tif ($n > 10) {\n\t\t\t$first = floor($n / 10);\n\
    \t\t\t$last = $n % 10;\n\t\t\tif ($first % 2 != 0 && $last % 2 != 0) {\n\t\t\t\
    \t$counter++;\n\t\t\t}\n\t\t}\n\t}\n\treturn $counter;\n}\n\nprint_r(specialFilter(array(15,\
    \ -73, 14, -15)));\nprint_r(specialFilter(array(33, -2, -3, 45, 21, 109)));\n\n\
    function candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwba7o65n.php:34\n\
    Stack trace:\n#0 /tmp/tmpwba7o65n.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpwba7o65n.php\
    \ on line 34\n"
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10) {\n            $first =\
    \ substr($num, 0, 1);\n            $last = substr($num, -1);\n            if ($first\
    \ % 2 !== 0 && $last % 2 !== 0) {\n                $count++;\n            }\n\
    \        }\n    }\n    return $count;\n}\n\n$a = array(15, -73, 14, -15);\nprint\
    \ specialFilter($a);\nprint \"\\n\";\n$b = array(33, -2, -3, 45, 21, 109);\nprint\
    \ specialFilter($b);\nprint \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    2

    '
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$count = 0;\n\
    \tforeach ($nums as $num) {\n\t\t$num = strval($num);\n\t\tif ($num >= 10 && is_numeric($num)\
    \ && $num[0] % 2 != 0 && $num[strlen($num) - 1] % 2 != 0) {\n\t\t\t$count++;\n\
    \t\t}\n\t}\n\treturn $count;\n}\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $counter =\
    \ 0;\n    foreach ($nums as $num) {\n        if ($num > 10 && $num % 2 == 1 &&\
    \ $num % 10 == 1) {\n            $counter++;\n        }\n    }\n    return $counter;\n\
    }\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7ktruxsp.php:26\n\
    Stack trace:\n#0 /tmp/tmp7ktruxsp.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp7ktruxsp.php\
    \ on line 26\n"
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$a = array_filter($nums,\
    \ function($val) {\n\t\tif (strlen($val) < 2) return false;\n\t\t$first = (int)substr($val,\
    \ 0, 1);\n\t\t$last = (int)substr($val, -1);\n\t\tif ($first % 2 !== 0 && $last\
    \ % 2 !== 0 && $val > 10) return true;\n\t\treturn false;\n\t});\n\treturn count($a);\n\
    }\n\n$arr = array(15, -73, 14, -15);\nprint specialFilter($arr);\nprint \"\\n\"\
    ;\n\n$arr = array(33, -2, -3, 45, 21, 109);\nprint specialFilter($arr);\nprint\
    \ \"\\n\";\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    2

    '
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n  $count = 0;\n\
    \  foreach ($nums as $num) {\n    $str_num = (string) $num;\n    if (strlen($str_num)\
    \ < 2) {\n      continue;\n    }\n    if ($num > 10 && $str_num[0] % 2 !== 0 &&\
    \ $str_num[strlen($str_num) - 1] % 2 !== 0) {\n      $count++;\n    }\n  }\n \
    \ return $count;\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $result =\
    \ 0;\n    foreach ($nums as $item) {\n        if (strlen($item) > 2 && $item >\
    \ 10) {\n            $firstDigit = $item[0];\n            $lastDigit = $item[strlen($item)\
    \ - 1];\n            if ($firstDigit % 2 != 0 && $lastDigit % 2 != 0) {\n    \
    \            $result++;\n            }\n        }\n    }\n    return $result;\n\
    }\necho specialFilter(array(15, -73, 14, -15));\necho \"<br>\";\necho specialFilter(array(33,\
    \ -2, -3, 45, 21, 109));\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0<br>\nWarning: Trying to access array offset on value of type int in /tmp/tmp_e_gd3au.php\
    \ on line 14\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmp_e_gd3au.php on line 15\n0\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp_e_gd3au.php:32\nStack trace:\n#0 /tmp/tmp_e_gd3au.php(40): test()\n\
    #1 {main}\n  thrown in /tmp/tmp_e_gd3au.php on line 32\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $n=0;\n  \
    \  foreach ($nums as $key => $value) {\n        if (($value>10)&&(($value%10==1)||($value%10==3)||($value%10==5)||($value%10==7)||($value%10==9)))\
    \ {\n            $n=$n+1;\n        }\n    }\n    return $n;\n}\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6e2drapd.php:26\n\
    Stack trace:\n#0 /tmp/tmp6e2drapd.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp6e2drapd.php\
    \ on line 26\n"
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$count = 0;\n\
    \tforeach ($nums as $n) {\n\t\tif ($n > 10) {\n\t\t\t$n = (string)$n;\n\t\t\t\
    if (strlen($n) > 1) {\n\t\t\t\tif ($n[0] % 2 == 1 && $n[strlen($n) - 1] % 2 ==\
    \ 1) {\n\t\t\t\t\t$count++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn $count;\n\
    }\n$nums = array(15, -73, 14, -15);\nprint_r(specialFilter($nums) . PHP_EOL);\n\
    $nums = array(33, -2, -3, 45, 21, 109);\nprint_r(specialFilter($nums) . PHP_EOL);\n\
    function candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    2

    '
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if (strlen($num) > 1) {\n            $n1\
    \ = substr($num, 0, 1);\n            $n2 = substr($num, -1);\n            if ($n1\
    \ % 2 !== 0 && $n2 % 2 !== 0 && $num > 10) {\n                $count++;\n    \
    \        }\n        }\n    }\n    return $count;\n}\necho specialFilter(array(15,\
    \ -73, 14, -15));\necho '<br>';\necho specialFilter(array(33, -2, -3, 45, 21,\
    \ 109));\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpyrdn_en1.php:16\nStack trace:\n#0 /tmp/tmpyrdn_en1.php(23): specialFilter(Array)\n\
    #1 {main}\n  thrown in /tmp/tmpyrdn_en1.php on line 16\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$elements =\
    \ 0;\n\tforeach ($nums as $num) {\n\t\t$last = $num % 10;\n\t\t$first = ($num\
    \ - $last) / 10;\n\t\tif ($num > 10 && $last % 2 == 1 && $first % 2 == 1) {\n\t\
    \t\t$elements++;\n\t\t}\n\t}\n\treturn $elements;\n}\n\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9cmhoho6.php:29\n\
    Stack trace:\n#0 /tmp/tmp9cmhoho6.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp9cmhoho6.php\
    \ on line 29\n"
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $numCount\
    \ = 0;\n    foreach ($nums as $num) {\n        $first = substr($num, 0, 1);\n\
    \        $last = substr($num, -1);\n        if ($num > 10 && $first % 2 != 0 &&\
    \ $last % 2 != 0) {\n            $numCount++;\n        }\n    }\n    return $numCount;\n\
    }\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$result = 0;\n\
    \tforeach ($nums as $num) {\n\t\tif ($num > 10) {\n\t\t\t$first = substr($num,\
    \ 0, 1);\n\t\t\t$last = substr($num, -1);\n\t\t\tif ($first % 2 == 1 && $last\
    \ % 2 == 1) {\n\t\t\t\t$result++;\n\t\t\t}\n\t\t}\n\t}\n\treturn $result;\n}\n\
    \nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n  $count = 0;\n\
    \  for ($i = 0; $i < count($nums); $i++) {\n    if ($nums[$i] > 10 && $nums[$i]\
    \ % 2 != 0 && $nums[$i] < 0) {\n      $count++;\n    }\n  }\n  return $count;\n\
    }\n\necho specialFilter(array(15, -73, 14, -15));\necho \"<br />\";\necho specialFilter(array(33,\
    \ -2, -3, 45, 21, 109));\necho \"<br />\";\necho specialFilter(array(33, -2, -3,\
    \ 45, 21, 109));\necho \"<br />\";\necho specialFilter(array(33, -2, -3, 45, 21,\
    \ 109));\necho \"<br />\";\necho specialFilter(array(33, -2, -3, 45, 21, 109));\n\
    echo \"<br />\";\necho specialFilter(array(33, -2, -3, 45, 21, 109));\necho \"\
    <br />\";\necho specialFilter(array(33, -2, -3, 45, 21, 109));\necho \"<br />\"\
    ;\necho specialFilter(array(33, -2, -3, 45, 21, 109));\necho \"<br />\";\necho\
    \ specialFilter(array(33, -2, -3, 45, 21, 109));\necho \"<br />\";\necho specialFilter(array(33,\
    \ -2, -3, 45, 21, 109));\necho \"<br />\";\necho specialFilter(array(33, -2, -3,\
    \ 45, 21, 109));\necho \"<br />\";\necho specialFilter(array(33, -2, -3, 45, 21,\
    \ 109));\necho \"<br />\";\necho specialFilter(array(33, -2, -3, 45, 21, 109));\n\
    echo \"<br />\";\necho specialFilter(array(33, -2, -3, 45, 21, 109));\necho \"\
    <br />\";\necho specialFilter(array(33, -2, -3, 45, 21, 109));\necho \"<br />\"\
    ;\necho specialFilter(array(33, -2, -3, 45, 21, 109));\necho \"<br />\";\n\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0<br />0<br />0<br />0<br />0<br />0<br />0<br />0<br />0<br />0<br />0<br\
    \ />0<br />0<br />0<br />0<br />0<br />\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmphuxey47v.php:59\nStack trace:\n#0 /tmp/tmphuxey47v.php(67):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmphuxey47v.php on line 59\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n  $count = 0;\n\
    \  foreach ($nums as $num) {\n    if ($num > 10 && isFirstAndLastDigitOdd($num))\
    \ {\n      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function isFirstAndLastDigitOdd()\
    \ in /tmp/tmpn0030h59.php:13\nStack trace:\n#0 /tmp/tmpn0030h59.php(21): specialFilter(Array)\n\
    #1 /tmp/tmpn0030h59.php(26): candidate(Array)\n#2 /tmp/tmpn0030h59.php(34): test()\n\
    #3 {main}\n  thrown in /tmp/tmpn0030h59.php on line 13\n"
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$filterNum =\
    \ 0;\n\tforeach ($nums as $num) {\n\t\tif ($num > 10 && ((int)$num % 2 != 0) &&\
    \ ((int)substr($num, 0, 1) % 2 != 0) && ((int)substr($num, -1) % 2 != 0)) {\n\t\
    \t\t$filterNum++;\n\t\t}\n\t}\n\treturn $filterNum;\n}\n\necho specialFilter(array(15,\
    \ -73, 14, -15));\necho specialFilter(array(33, -2, -3, 45, 21, 109));\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '12'
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$count = 0;\n\
    \tforeach ($nums as $num) {\n\t\tif ($num > 10) {\n\t\t\t$firstDigit = (int) substr($num,\
    \ 0, 1);\n\t\t\t$lastDigit = (int) substr($num, -1);\n\t\t\tif ($firstDigit %\
    \ 2 != 0 && $lastDigit % 2 != 0) {\n\t\t\t\t$count++;\n\t\t\t}\n\t\t}\n\t}\n\t\
    return $count;\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$count = 0;\n\
    \tforeach ($nums as $num) {\n\t\tif (($num > 10) && ($num % 2 == 1) && ($num %\
    \ 10 == 1)) {\n\t\t\t$count += 1;\n\t\t}\n\t}\n\treturn $count;\n}\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4uo00cnb.php:25\n\
    Stack trace:\n#0 /tmp/tmp4uo00cnb.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp4uo00cnb.php\
    \ on line 25\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    // Your code\
    \ here\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 10)\
    \ {\n            $lastDigit = $num % 10;\n            $firstDigit = intval($num\
    \ / 10);\n            if ($lastDigit % 2 != 0 && $firstDigit % 2 != 0) {\n   \
    \             $count++;\n            }\n        }\n    }\n    return $count;\n\
    }\n\n$tests = [\n    [15, -73, 14, -15],\n    [33, -2, -3, 45, 21, 109],\n   \
    \ [10, 34, -1, 102, 1010, 0, 1, 3, 5, 7, 9],\n    [100, 99, 98, 97, 96, 90, 60,\
    \ -1, -3, -5, -7, -9],\n    [10, 1, 10, 10, 1, 10, 10, 1, 10, 10],\n    [101,\
    \ 11, 111, 1, 111, 101, 1, 11, 11, 1],\n    [1, -1, 1, -1, 1, -1, 1, -1, 1, -1,\
    \ 1, -1],\n    [12, 13, 14, 15, -12, -13, -14, -15],\n    [10, 10, 10, 10, 10,\
    \ 10, 10, 10],\n    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n    [10, 9, 8, 7, 6, 5,\
    \ 4, 3, 2, 1],\n    [15, 15, 15, 15, 15, 15, 15, 15],\n    [100, 100, 100, 100,\
    \ 100, 100, 100, 100],\n    [0, 0, 0, 0, 0, 0, 0, 0],\n    [11, 33, 55, 77, 99,\
    \ 111, 101, 91, 81, 71, 61, 51, 41, 31, 21, 13, 11],\n    [55, 33, 11, 77, 55,\
    \ 33, 11, 77, 55, 33, 11, 77, 55, 33, 11, 77, 55, 33, 11, 77],\n    [111, 101,\
    \ 91,\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmp5whx9g1j.php on line 43

    '
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    // Write your\
    \ code here\n    return 0;\n}\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp493smuqn.php:20\n\
    Stack trace:\n#0 /tmp/tmp493smuqn.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp493smuqn.php\
    \ on line 20\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10 && strlen($num) >= 2) {\n\
    \            $last = $num % 10;\n            $first = strlen($num) - strlen(strrchr($num,\
    \ \"\"));\n            $first = floor($num / pow(10, $first));\n            if\
    \ ($first % 2 != 0 && $last % 2 != 0) {\n                $count++;\n         \
    \   }\n        }\n    }\n    return $count;\n}\nfunction candidate(...$args) {\n\
    \    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgvhcqwng.php:30\n\
    Stack trace:\n#0 /tmp/tmpgvhcqwng.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpgvhcqwng.php\
    \ on line 30\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n}\n\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzmk9kooz.php:18\n\
    Stack trace:\n#0 /tmp/tmpzmk9kooz.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpzmk9kooz.php\
    \ on line 18\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$count = 0;\n\
    \tforeach ($nums as $num) {\n\t\tif ($num > 10 &&\n\t\t\t$num % 2 != 0 &&\n\t\t\
    \t$num % 10 != 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7pig05sd.php:29\n\
    Stack trace:\n#0 /tmp/tmp7pig05sd.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp7pig05sd.php\
    \ on line 29\n"
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$count = 0;\n\
    \tforeach ($nums as $num) {\n\t\tif ($num > 10 && abs($num) > 10) {\n\t\t\t$str\
    \ = strval($num);\n\t\t\tif (intval($str[0]) % 2 != 0 && intval($str[strlen($str)\
    \ - 1]) % 2 != 0) {\n\t\t\t\t$count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn $count;\n\
    }\necho specialFilter(array(15, -73, 14, -15));\necho \"<br>\";\necho specialFilter(array(33,\
    \ -2, -3, 45, 21, 109));\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br>2
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n  // your code\
    \ here\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7lh47rbn.php:19\n\
    Stack trace:\n#0 /tmp/tmp7lh47rbn.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp7lh47rbn.php\
    \ on line 19\n"
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n  $ctr = 0;\n\
    \  foreach ($nums as $num) {\n    if ($num > 10) {\n      $first_digit = substr($num,\
    \ 0, 1);\n      $last_digit = substr($num, -1);\n      if ($first_digit % 2 !=\
    \ 0 && $last_digit % 2 != 0) {\n        $ctr += 1;\n      }\n    }\n  }\n  return\
    \ $ctr;\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n  $filtered =\
    \ array_filter($nums, function($num) {\n    return ($num > 10) && (abs($num) %\
    \ 2 == 1);\n  });\n  return count($filtered);\n}\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5u856f_a.php:23\n\
    Stack trace:\n#0 /tmp/tmp5u856f_a.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp5u856f_a.php\
    \ on line 23\n"
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t// YOUR CODE\
    \ HERE\n\t$count = 0;\n\tfor ($i = 0; $i < count($nums); $i++) {\n\t\t$current\
    \ = strval($nums[$i]);\n\t\tif ($nums[$i] > 10 && $current[0] % 2 != 0 && $current[strlen($current)\
    \ - 1] % 2 != 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $new_nums\
    \ = array();\n    foreach ($nums as $n) {\n        if ($n > 10 && isFirstLastOdd($n))\
    \ {\n            $new_nums[] = $n;\n        }\n    }\n    return count($new_nums);\n\
    }\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function isFirstLastOdd()\
    \ in /tmp/tmpqxysgyfl.php:13\nStack trace:\n#0 /tmp/tmpqxysgyfl.php(21): specialFilter(Array)\n\
    #1 /tmp/tmpqxysgyfl.php(26): candidate(Array)\n#2 /tmp/tmpqxysgyfl.php(34): test()\n\
    #3 {main}\n  thrown in /tmp/tmpqxysgyfl.php on line 13\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    // your code\
    \ here\n}\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwmn5dp75.php:18\n\
    Stack trace:\n#0 /tmp/tmpwmn5dp75.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpwmn5dp75.php\
    \ on line 18\n"
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$new = array();\n\
    \tforeach ($nums as $value) {\n\t\tif ($value > 10) {\n\t\t\tif ($value % 2 ==\
    \ 1) {\n\t\t\t\tif (substr($value, 0, 1) % 2 == 1) {\n\t\t\t\t\t$new[] = $value;\n\
    \t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn count($new);\n}\n\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\n}\n\n$nums =\
    \ array(15, -73, 14, -15);\necho specialFilter($nums) . PHP_EOL;\n$nums = array(33,\
    \ -2, -3, 45, 21, 109);\necho specialFilter($nums) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw5jpj41m.php:23\n\
    Stack trace:\n#0 /tmp/tmpw5jpj41m.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpw5jpj41m.php\
    \ on line 23\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$count = 0;\n\
    \tforeach ($nums as $n) {\n\t\t$digits = str_split($n);\n\t\tif (count($digits)\
    \ > 1) {\n\t\t\tif ($digits[0] % 2 != 0 && $digits[count($digits) - 1] % 2 !=\
    \ 0 && $n > 10) {\n\t\t\t\t$count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn $count;\n\
    }\necho specialFilter(array(15, -73, 14, -15)) . PHP_EOL;\necho specialFilter(array(33,\
    \ -2, -3, 45, 21, 109)) . PHP_EOL;\nfunction candidate(...$args) {\n    return\
    \ specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string %\
    \ int in /tmp/tmpisqrax04.php:15\nStack trace:\n#0 /tmp/tmpisqrax04.php(22): specialFilter(Array)\n\
    #1 {main}\n  thrown in /tmp/tmpisqrax04.php on line 15\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\n}\n\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjh9lm_4c.php:19\n\
    Stack trace:\n#0 /tmp/tmpjh9lm_4c.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpjh9lm_4c.php\
    \ on line 19\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    return array_reduce($nums,\
    \ function($carry, $num) {\n        if ($num > 10 && $num % 2 != 0 && ($num[0]\
    \ % 2 != 0 && $num[strlen($num) - 1] % 2 != 0)) {\n            $carry++;\n   \
    \     }\n        return $carry;\n    }, 0);\n}\necho specialFilter(array(15, -73,\
    \ 14, -15));\necho \"<br>\";\necho specialFilter(array(33, -2, -3, 45, 21, 109));\n\
    function candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmpderp89vc.php\
    \ on line 12\n0<br>\nWarning: Trying to access array offset on value of type int\
    \ in /tmp/tmpderp89vc.php on line 12\n\nWarning: Trying to access array offset\
    \ on value of type int in /tmp/tmpderp89vc.php on line 12\n\nWarning: Trying to\
    \ access array offset on value of type int in /tmp/tmpderp89vc.php on line 12\n\
    \nWarning: Trying to access array offset on value of type int in /tmp/tmpderp89vc.php\
    \ on line 12\n0\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmpderp89vc.php on line 12\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpderp89vc.php:27\nStack trace:\n#0 /tmp/tmpderp89vc.php(35): test()\n\
    #1 {main}\n  thrown in /tmp/tmpderp89vc.php on line 27\n"
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$count = 0;\n\
    \tforeach ($nums as $num) {\n\t\tif ($num > 10 && strlen($num) > 1) {\n\t\t\t\
    $str = (string)$num;\n\t\t\tif (substr($str, 0, 1) % 2 == 1 && substr($str, -1)\
    \ % 2 == 1) {\n\t\t\t\t$count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn $count;\n}\n\n\
    echo specialFilter(array(15, -73, 14, -15));\necho \"<br>\";\necho specialFilter(array(33,\
    \ -2, -3, 45, 21, 109));\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br>2
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $greater_than_10\
    \ = array_filter($nums, function($num) {\n        return $num > 10;\n    });\n\
    \    $num_greater_than_10 = count($greater_than_10);\n    $unique_nums = array_unique($greater_than_10);\n\
    \    $num_unique_nums = count($unique_nums);\n    $last_and_first_odd = array_filter($unique_nums,\
    \ function($num) {\n        $last_digit = $num % 10;\n        $first_digit = substr($num,\
    \ 0, 1);\n        if($last_digit % 2 == 1 && $first_digit % 2 == 1) {\n      \
    \      return $num;\n        }\n    });\n    $num_last_and_first_odd = count($last_and_first_odd);\n\
    \    return $num_last_and_first_odd;\n}\n\necho specialFilter(array(15, -73, 14,\
    \ -15));\necho \"<br>\";\necho specialFilter(array(33, -2, -3, 45, 21, 109));\n\
    function candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br>2
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n  $count = 0;\n\
    \  foreach ($nums as $num) {\n    $n = abs($num);\n    if ($n > 10 && $n % 2 !=\
    \ 0 && ($n / (10 ** (strlen($n) - 1))) % 2 != 0) {\n      $count++;\n    }\n \
    \ }\n  return $count;\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 1.5 to int loses precision\
    \ in /tmp/tmp_4h4tqle.php on line 14\n\nDeprecated: Implicit conversion from float\
    \ 7.3 to int loses precision in /tmp/tmp_4h4tqle.php on line 14\n\nDeprecated:\
    \ Implicit conversion from float 1.5 to int loses precision in /tmp/tmp_4h4tqle.php\
    \ on line 14\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_4h4tqle.php:27\n\
    Stack trace:\n#0 /tmp/tmp_4h4tqle.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp_4h4tqle.php\
    \ on line 27\n"
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$total = 0;\n\
    \tforeach ($nums as $num) {\n\t\t$first = substr($num, 0, 1);\n\t\t$last = substr($num,\
    \ -1);\n\t\tif ($num > 10 && $first % 2 != 0 && $last % 2 != 0) {\n\t\t\t$total++;\n\
    \t\t}\n\t}\n\treturn $total;\n}\n\nfunction candidate(...$args) {\n    return\
    \ specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $n) {\n        if ($n > 10) {\n            $d1 = (int)substr($n,\
    \ 0, 1);\n            $d2 = (int)substr($n, -1);\n            if ($d1 % 2 != 0\
    \ && $d2 % 2 != 0) {\n                $count++;\n            }\n        }\n  \
    \  }\n    return $count;\n}\n\necho specialFilter(array(15, -73, 14, -15));\n\
    function candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$count = 0;\n\
    \tforeach ($nums as $num) {\n\t\tif ($num > 10 && ($num % 2 != 0) && (isFirstOrLastDigitOdd($num)))\
    \ {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function isFirstOrLastDigitOdd()\
    \ in /tmp/tmp8azyn36n.php:13\nStack trace:\n#0 /tmp/tmp8azyn36n.php(21): specialFilter(Array)\n\
    #1 /tmp/tmp8azyn36n.php(26): candidate(Array)\n#2 /tmp/tmp8azyn36n.php(34): test()\n\
    #3 {main}\n  thrown in /tmp/tmp8azyn36n.php on line 13\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$count = 0;\n\
    \tforeach ($nums as $num) {\n\t\t$firstDigit = (int) floor($num / 10);\n\t\t$lastDigit\
    \ = $num % 10;\n\t\tif ($num > 10 && ($firstDigit % 2 == 1 || $lastDigit % 2 ==\
    \ 1)) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwxt9jjwc.php:28\n\
    Stack trace:\n#0 /tmp/tmpwxt9jjwc.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpwxt9jjwc.php\
    \ on line 28\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$count = 0;\n\
    \tforeach ($nums as $num) {\n\t\tif (abs($num) > 10) {\n\t\t\t$num = abs($num);\n\
    \t\t\t$first_digit = $num % 10;\n\t\t\t$num /= 10;\n\t\t\twhile ($num > 10) {\n\
    \t\t\t\t$num /= 10;\n\t\t\t}\n\t\t\t$last_digit = $num;\n\t\t\tif ($first_digit\
    \ % 2 != 0 && $last_digit % 2 != 0) {\n\t\t\t\t$count++;\n\t\t\t}\n\t\t}\n\t}\n\
    \treturn $count;\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 1.5 to int loses precision\
    \ in /tmp/tmpu_2_q6kp.php on line 21\n\nDeprecated: Implicit conversion from float\
    \ 7.3 to int loses precision in /tmp/tmpu_2_q6kp.php on line 21\n\nDeprecated:\
    \ Implicit conversion from float 1.5 to int loses precision in /tmp/tmpu_2_q6kp.php\
    \ on line 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu_2_q6kp.php:35\n\
    Stack trace:\n#0 /tmp/tmpu_2_q6kp.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpu_2_q6kp.php\
    \ on line 35\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$greater = 0;\n\
    \t$results = 0;\n\tfor ($i = 0; $i < count($nums); $i++) {\n\t\tif ($nums[$i]\
    \ > 10) {\n\t\t\t$greater++;\n\t\t}\n\t}\n\tfor ($i = 0; $i < count($nums); $i++)\
    \ {\n\t\tif ($nums[$i] > 10) {\n\t\t\t$firstDigit = floor($nums[$i] / 10);\n\t\
    \t\t$lastDigit = $nums[$i] % 10;\n\t\t\tif ($firstDigit % 2 != 0 && $lastDigit\
    \ % 2 != 0) {\n\t\t\t\t$results++;\n\t\t\t}\n\t\t}\n\t}\n\techo $results;\n}\n\
    specialFilter(array(33, -2, -3, 45, 21, 109));\necho \"<br>\";\nspecialFilter(array(15,\
    \ -73, 14, -15));\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1<br>10\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps0n96bp6.php:38\n\
    Stack trace:\n#0 /tmp/tmps0n96bp6.php(47): test()\n#1 {main}\n  thrown in /tmp/tmps0n96bp6.php\
    \ on line 38\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    return count(array_filter($nums,\
    \ function($n) {\n        return $n > 10 && strlen($n) > 1 && $n % 2 != 0;\n \
    \   }));\n}\n\necho specialFilter(array(15, -73, 14, -15)); // 1\necho specialFilter(array(33,\
    \ -2, -3, 45, 21, 109)); // 2\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqal1j6yy.php:25\n\
    Stack trace:\n#0 /tmp/tmpqal1j6yy.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpqal1j6yy.php\
    \ on line 25\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n  $greaterThanTen\
    \ = array_filter($nums, function($num) {\n    return $num > 10;\n  });\n  return\
    \ array_reduce($greaterThanTen, function($sum, $num) {\n    if ($num < 0) {\n\
    \      $num = -1 * $num;\n    }\n    if ($num % 10 === 1 || $num % 10 === 3 ||\
    \ $num % 10 === 5 || $num % 10 === 7 || $num % 10 === 9) {\n      $sum++;\n  \
    \  }\n    return $sum;\n  }, 0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbqny2ka1.php:32\n\
    Stack trace:\n#0 /tmp/tmpbqny2ka1.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpbqny2ka1.php\
    \ on line 32\n"
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n  $count = 0;\n\
    \  foreach ($nums as $num) {\n    $first_digit = substr($num, 0, 1);\n    $last_digit\
    \ = substr($num, -1);\n    if (($num > 10) && ($first_digit % 2 != 0) && ($last_digit\
    \ % 2 != 0)) {\n      $count++;\n    }\n  }\n  return $count;\n}\n\n$nums = array(15,\
    \ -73, 14, -15);\necho specialFilter($nums) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    '
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $total = 0;\n\
    \    for ($i = 0; $i < count($nums); $i++) {\n        if ($nums[$i] > 10) {\n\
    \            $str = strval($nums[$i]);\n            if ($str[0] % 2 != 0 && $str[strlen($str)\
    \ - 1] % 2 != 0) {\n                $total++;\n            }\n        }\n    }\n\
    \    return $total;\n}\n\necho specialFilter(array(15, -73, 14, -15)) . \"\\n\"\
    ;\necho specialFilter(array(33, -2, -3, 45, 21, 109)) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    2

    '
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if (abs($num) > 10 && $num % 2 != 0) {\n\
    \            $temp = $num;\n            while ($temp > 0) {\n                $first\
    \ = $temp % 10;\n                $last = $temp % 10;\n                $temp =\
    \ (int)($temp / 10);\n            }\n            if ($first % 2 != 0 && $last\
    \ % 2 != 0) {\n                $count++;\n            }\n        }\n    }\n  \
    \  return $count;\n}\n$arr = array(15, -73, 14, -15);\n$arr2 = array(33, -2, -3,\
    \ 45, 21, 109);\necho specialFilter($arr) . PHP_EOL;\necho specialFilter($arr2)\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "3\n2\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsb61h6a9.php:37\n\
    Stack trace:\n#0 /tmp/tmpsb61h6a9.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpsb61h6a9.php\
    \ on line 37\n"
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$count = 0;\n\
    \tforeach ($nums as $num) {\n\t\tif ($num > 10) {\n\t\t\t$firstDigit = substr($num,\
    \ 0, 1);\n\t\t\t$lastDigit = substr($num, -1);\n\t\t\tif ($firstDigit % 2 !==\
    \ 0 && $lastDigit % 2 !== 0) {\n\t\t\t\t$count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10 && $num % 2 == 1 && $num\
    \ % 10 % 2 == 1) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nclass specialFilterTest extends PHPUnit_Framework_TestCase {\n    public\
    \ function testSpecialFilter() {\n        $this->assertEquals(1, specialFilter(array(15,\
    \ -73, 14, -15)));\n        $this->assertEquals(2, specialFilter(array(33, -2,\
    \ -3, 45, 21, 109)));\n    }\n}\n\n$t = new specialFilterTest();\n$t->testSpecialFilter();\n\
    function candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Class \"PHPUnit_Framework_TestCase\" not\
    \ found in /tmp/tmpe4og4yo6.php:20\nStack trace:\n#0 {main}\n  thrown in /tmp/tmpe4og4yo6.php\
    \ on line 20\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $greater_than_10\
    \ = 0;\n    foreach ($nums as $num) {\n        if ($num > 10) {\n            $greater_than_10++;\n\
    \        }\n    }\n    return $greater_than_10;\n}\n\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1fuhhr87.php:26\n\
    Stack trace:\n#0 /tmp/tmp1fuhhr87.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp1fuhhr87.php\
    \ on line 26\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    //$odd_num\
    \ = [];\n    //foreach ($nums as $num) {\n        //if (strlen($num) >= 2 && ($num\
    \ % 2 == 1) && (int)$num[0] % 2 == 1 && (int)$num[-1] % 2 == 1) {\n          \
    \  //$odd_num[] = $num;\n        //}\n    //}\n    $odd_num = array_filter($nums,\
    \ function($num) {\n        return strlen($num) >= 2 && ($num % 2 == 1) && (int)$num[0]\
    \ % 2 == 1 && (int)$num[-1] % 2 == 1;\n    });\n    return count($odd_num);\n\
    }\necho specialFilter(array(15, -73, 14, -15));\necho \"\\n\";\necho specialFilter(array(33,\
    \ -2, -3, 45, 21, 109));\necho \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmp7fjlajiq.php\
    \ on line 18\n0\n\nWarning: Trying to access array offset on value of type int\
    \ in /tmp/tmp7fjlajiq.php on line 18\n\nWarning: Trying to access array offset\
    \ on value of type int in /tmp/tmp7fjlajiq.php on line 18\n\nWarning: Trying to\
    \ access array offset on value of type int in /tmp/tmp7fjlajiq.php on line 18\n\
    \nWarning: Trying to access array offset on value of type int in /tmp/tmp7fjlajiq.php\
    \ on line 18\n0\n\nWarning: Trying to access array offset on value of type int\
    \ in /tmp/tmp7fjlajiq.php on line 18\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp7fjlajiq.php:32\nStack trace:\n#0 /tmp/tmp7fjlajiq.php(40):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp7fjlajiq.php on line 32\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$count = 0;\n\
    \tforeach ($nums as $num) {\n\t\tif ($num < 10 || $num % 2 == 0) {\n\t\t\tcontinue;\n\
    \t\t}\n\t\t$first = getFirstDigit($num);\n\t\t$last = getLastDigit($num);\n\t\t\
    if ($first % 2 == 1 && $last % 2 == 1) {\n\t\t\t$count += 1;\n\t\t}\n\t}\n\treturn\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function getFirstDigit()\
    \ in /tmp/tmp6024an0u.php:16\nStack trace:\n#0 /tmp/tmp6024an0u.php(26): specialFilter(Array)\n\
    #1 /tmp/tmp6024an0u.php(31): candidate(Array)\n#2 /tmp/tmp6024an0u.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmp6024an0u.php on line 16\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$greater_than_10\
    \ = array_filter($nums, function($num) {\n\t\treturn $num > 10;\n\t});\n\t$odd_first_and_last\
    \ = array_filter($greater_than_10, function($num) {\n\t\treturn $num % 2 == 1\
    \ && ($num % 10 == 1 || $num % 10 == 3 || $num % 10 == 5 || $num % 10 == 7 ||\
    \ $num % 10 == 9);\n\t});\n\treturn count($odd_first_and_last);\n}\n\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8lzrd76q.php:27\n\
    Stack trace:\n#0 /tmp/tmp8lzrd76q.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp8lzrd76q.php\
    \ on line 27\n"
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$evenCount =\
    \ 0;\n\tforeach ($nums as $n) {\n\t\tif ($n > 10) {\n\t\t\t$lastDigit = $n % 10;\n\
    \t\t\t$firstDigit = $n;\n\t\t\twhile ($firstDigit >= 10) {\n\t\t\t\t$firstDigit\
    \ = (int)($firstDigit / 10);\n\t\t\t}\n\t\t\t// echo $lastDigit . \" \" . $firstDigit\
    \ . \" \";\n\t\t\tif ($lastDigit % 2 != 0 && $firstDigit % 2 != 0) {\n\t\t\t\t\
    $evenCount++;\n\t\t\t}\n\t\t}\n\t}\n\treturn $evenCount;\n}\necho specialFilter(array(15,\
    \ -73, 14, -15)) . \"<br>\";\necho specialFilter(array(33, -2, -3, 45, 21, 109))\
    \ . \"<br>\";\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br>2<br>
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $result =\
    \ 0;\n    $length = count($nums);\n    for ($i = 0; $i < $length; $i++) {\n  \
    \      $num = $nums[$i];\n        if ($num > 10) {\n            $lastDigit = $num\
    \ % 10;\n            $firstDigit = ($num - $lastDigit) / 10;\n            if ($lastDigit\
    \ % 2 === 1 && $firstDigit % 2 === 1) {\n                $result += 1;\n     \
    \       }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnm5t8gxs.php:33\n\
    Stack trace:\n#0 /tmp/tmpnm5t8gxs.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpnm5t8gxs.php\
    \ on line 33\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $n) {\n        if (abs($n) > 10 && $n % 2 != 0) {\n   \
    \         $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplygott6b.php:26\n\
    Stack trace:\n#0 /tmp/tmplygott6b.php(34): test()\n#1 {main}\n  thrown in /tmp/tmplygott6b.php\
    \ on line 26\n"
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$specialNum\
    \ = 0;\n\tforeach ($nums as $key => $num) {\n\t\tif ($num > 10) {\n\t\t\t$lastNum\
    \ = substr($num, -1);\n\t\t\t$firstNum = substr($num, 0, 1);\n\t\t\tif ($lastNum\
    \ % 2 != 0) {\n\t\t\t\tif ($firstNum % 2 != 0) {\n\t\t\t\t\t$specialNum++;\n\t\
    \t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn $specialNum;\n}\n$nums = array(15, -73,\
    \ 14, -15);\necho specialFilter($nums) . PHP_EOL;\n$nums2 = array(33, -2, -3,\
    \ 45, 21, 109);\necho specialFilter($nums2) . PHP_EOL;\n\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    2

    '
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n  // Your code\
    \ here...\n}\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbeoxpzrh.php:18\n\
    Stack trace:\n#0 /tmp/tmpbeoxpzrh.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpbeoxpzrh.php\
    \ on line 18\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n  $count = 0;\n\
    \  foreach ($nums as $num) {\n    if (strlen($num) > 1 && $num > 10) {\n     \
    \ $first = $num[0];\n      $last = $num[strlen($num) - 1];\n      if ($first %\
    \ 2 != 0 && $last % 2 != 0) {\n        $count++;\n      }\n    }\n  }\n  return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmp1fb3yihx.php\
    \ on line 14\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmp1fb3yihx.php on line 15\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmp1fb3yihx.php on line 14\n\nWarning: Trying to access\
    \ array offset on value of type int in /tmp/tmp1fb3yihx.php on line 15\n\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmp1fb3yihx.php:30\nStack trace:\n\
    #0 /tmp/tmp1fb3yihx.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp1fb3yihx.php\
    \ on line 30\n"
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$result = 0;\n\
    \tforeach ($nums as $num) {\n\t\tif ($num > 10) {\n\t\t\t$numStr = (string)$num;\n\
    \t\t\tif (strlen($numStr) > 1) {\n\t\t\t\tif (strpos(\"13579\", $numStr[0]) !==\
    \ false \n\t\t\t\t\t&& strpos(\"13579\", $numStr[strlen($numStr) - 1]) !== false)\
    \ {\n\t\t\t\t\t$result++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn $result;\n\
    }\n$result = specialFilter(array(15, -73, 14, -15));\necho $result;\necho \"<br>\"\
    ;\n$result = specialFilter(array(33, -2, -3, 45, 21, 109));\necho $result;\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br>2
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        $numStr = (string) $num;\n        if ($num\
    \ > 10 &&\n            $numStr[0] % 2 == 1 &&\n            $numStr[strlen($numStr)\
    \ - 1] % 2 == 1) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\n}\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp34in1etk.php:18\n\
    Stack trace:\n#0 /tmp/tmp34in1etk.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp34in1etk.php\
    \ on line 18\n"
  timestamp: 1659822454
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t// Write your\
    \ code here\n}\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa1ac0ust.php:18\n\
    Stack trace:\n#0 /tmp/tmpa1ac0ust.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpa1ac0ust.php\
    \ on line 18\n"
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        $firstDigit = substr($num, 0, 1);\n  \
    \      $lastDigit = substr($num, -1);\n        if ($num > 10 && ($firstDigit %\
    \ 2 == 1) && ($lastDigit % 2 == 1)) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}\n\necho specialFilter(array(15, -73, 14, -15));\necho \"\
    <br>\";\necho specialFilter(array(33, -2, -3, 45, 21, 109));\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br>2
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$count = 0;\n\
    \tfor ($i = 0; $i < count($nums); $i++) {\n\t\tif ($nums[$i] > 10) {\n\t\t\t$temp\
    \ = $nums[$i];\n\t\t\tif ($temp % 2 != 0) {\n\t\t\t\t$count++;\n\t\t\t}\n\t\t\
    }\n\t}\n\treturn $count;\n}\n\n$my_array = array(15, -73, 14, -15);\necho specialFilter($my_array);\n\
    \nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa5tnm15w.php:33\n\
    Stack trace:\n#0 /tmp/tmpa5tnm15w.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpa5tnm15w.php\
    \ on line 33\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n  $result = 0;\n\
    \  foreach ($nums as $num) {\n    if (strlen($num) > 1 && abs($num) > 10) {\n\
    \      $first = $num[0];\n      $last = substr($num, -1);\n      if ($first %\
    \ 2 !== 0 && $last % 2 !== 0) {\n        $result++;\n      }\n    }\n  }\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmp7m7_mdly.php\
    \ on line 14\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmp7m7_mdly.php on line 14\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmp7m7_mdly.php on line 14\n\nWarning: Trying to access\
    \ array offset on value of type int in /tmp/tmp7m7_mdly.php on line 14\n\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmp7m7_mdly.php:30\nStack trace:\n\
    #0 /tmp/tmp7m7_mdly.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp7m7_mdly.php\
    \ on line 30\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $counter =\
    \ 0;\n    foreach ($nums as $num) {\n        if ($num > 10) {\n            $firstDigit\
    \ = intval($num / 10);\n            $lastDigit = $num % 10;\n            if ($firstDigit\
    \ % 2 != 0 && $lastDigit % 2 != 0) {\n                $counter++;\n          \
    \  }\n        }\n    }\n    return $counter;\n}\n\n$arr1 = array(15, -73, 14,\
    \ -15);\n$arr2 = array(33, -2, -3, 45, 21, 109);\necho specialFilter($arr1) .\
    \ PHP_EOL;\necho specialFilter($arr2) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk7aj4a68.php:35\n\
    Stack trace:\n#0 /tmp/tmpk7aj4a68.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpk7aj4a68.php\
    \ on line 35\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $output =\
    \ [];\n    foreach ($nums as $num) {\n        if ($num > 10) {\n            if\
    \ ($num % 2 != 0 && $num[0] % 2 != 0 && $num[strlen($num) - 1] % 2 != 0) {\n \
    \               $output[] = $num;\n            }\n        }\n    }\n    return\
    \ count($output);\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmplxzb1znz.php\
    \ on line 14\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplxzb1znz.php:28\n\
    Stack trace:\n#0 /tmp/tmplxzb1znz.php(36): test()\n#1 {main}\n  thrown in /tmp/tmplxzb1znz.php\
    \ on line 28\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$l = $nums[0];\n\
    \t$r = $nums[count($nums) - 1];\n\t$l1 = (int)$l;\n\t$r1 = (int)$r;\n\t$count\
    \ = 0;\n\t$count1 = 0;\n\tif ($l1 > 10 && $r1 > 10) {\n\t\t$count1++;\n\t}\n\t\
    if ($l1 % 2 != 0 && $r1 % 2 != 0) {\n\t\t$count++;\n\t}\n\techo $count1 * $count;\n\
    }\nspecialFilter(array(15, -73, 14, -15));\nfunction candidate(...$args) {\n \
    \   return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "00\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy2tovpl5.php:31\n\
    Stack trace:\n#0 /tmp/tmpy2tovpl5.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpy2tovpl5.php\
    \ on line 31\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n   $count = 0;\n\
    \   foreach ($nums as $num) {\n      if ($num > 10 && ($num % 2 != 0)) {\n   \
    \      $count++;\n      }\n   }\n   return $count;\n}\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp3x4kv6t.php:26\n\
    Stack trace:\n#0 /tmp/tmpp3x4kv6t.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpp3x4kv6t.php\
    \ on line 26\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $result =\
    \ array();\n    foreach ($nums as $num) {\n        if ($num > 10) {\n        \
    \    $temp = $num;\n            $first = floor($temp / 10);\n            $last\
    \ = $temp % 10;\n            if ($first % 2 === 1 || $last % 2 === 1) {\n    \
    \            $result[] = $num;\n            }\n        }\n    }\n    return count($result);\n\
    }\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpocegf8jm.php:30\n\
    Stack trace:\n#0 /tmp/tmpocegf8jm.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpocegf8jm.php\
    \ on line 30\n"
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n  $count = 0;\n\
    \  foreach ($nums as $num) {\n    if ($num > 10) {\n      $num_array = str_split($num);\n\
    \      if ($num_array[0] % 2 != 0 && $num_array[count($num_array) - 1] % 2 !=\
    \ 0) {\n        $count++;\n      }\n    }\n  }\n  return $count;\n}\necho specialFilter(array(15,\
    \ -73, 14, -15));\necho \"\\n\";\necho specialFilter(array(33, -2, -3, 45, 21,\
    \ 109));\necho \"\\n\";\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    2

    '
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10 && $num % 2 == 1 && ($num\
    \ % 10) % 2 == 1) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5a07wva5.php:27\n\
    Stack trace:\n#0 /tmp/tmp5a07wva5.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp5a07wva5.php\
    \ on line 27\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$nums = array_filter($nums,\
    \ function($n) { return $n > 10; });\n\t$nums = array_filter($nums, function($n)\
    \ { return $n % 2 != 0; });\n\t$nums = array_filter($nums, function($n) { return\
    \ $n % 10 % 2 != 0; });\n\treturn count($nums);\n}\n\nprint specialFilter(array(15,\
    \ -73, 14, -15));\nprint specialFilter(array(33, -2, -3, 45, 21, 109));\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphggc11vn.php:26\n\
    Stack trace:\n#0 /tmp/tmphggc11vn.php(33): test()\n#1 {main}\n  thrown in /tmp/tmphggc11vn.php\
    \ on line 26\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n  $result = 0;\n\
    \  foreach ($nums as $num) {\n    if (abs($num) > 10) {\n      $digit1 = (int)\
    \ ($num / 10);\n      $digit2 = $num % 10;\n      if ($digit1 % 2 != 0 && $digit2\
    \ % 2 != 0) {\n        $result++;\n      }\n    }\n  }\n  return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5avzllvf.php:30\n\
    Stack trace:\n#0 /tmp/tmp5avzllvf.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp5avzllvf.php\
    \ on line 30\n"
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $numElemsOver10\
    \ = 0;\n    foreach ($nums as $num) {\n        if ($num > 10) {\n            $numString\
    \ = (string)$num;\n            if (strlen($numString) > 1) {\n               \
    \ $firstDigit = (int)$numString[0];\n                $lastDigit = (int)$numString[strlen($numString)\
    \ - 1];\n                if ($firstDigit % 2 != 0 && $lastDigit % 2 != 0) {\n\
    \                    $numElemsOver10++;\n                }\n            }\n  \
    \      }\n    }\n    return $numElemsOver10;\n}\n\n$nums1 = array(15, -73, 14,\
    \ -15);\n$nums2 = array(33, -2, -3, 45, 21, 109);\necho specialFilter($nums1);\n\
    echo \"\\n\";\necho specialFilter($nums2);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    2

    '
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if (abs($num) >= 10) {\n            $lastDigit\
    \ = $num % 10;\n            $num = abs($num);\n            while ($num >= 10)\
    \ {\n                $num = $num / 10;\n            }\n            $firstDigit\
    \ = $num;\n            if ($firstDigit % 2 == 1 && $lastDigit % 2 == 1) {\n  \
    \              $count++;\n            }\n        }\n    }\n    return $count;\n\
    }\n\n$nums = array(15, -73, 14, -15);\necho specialFilter($nums) . \"\\n\";\n\n\
    $nums = array(33, -2, -3, 45, 21, 109);\necho specialFilter($nums) . \"\\n\";\n\
    function candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 1.5 to int loses precision in /tmp/tmp67an66pr.php
    on line 20


    Deprecated: Implicit conversion from float 7.3 to int loses precision in /tmp/tmp67an66pr.php
    on line 20


    Deprecated: Implicit conversion from float 1.4 to int loses precision in /tmp/tmp67an66pr.php
    on line 20


    Deprecated: Implicit conversion from float 1.5 to int loses precision in /tmp/tmp67an66pr.php
    on line 20

    1


    Deprecated: Implicit conversion from float 3.3 to int loses precision in /tmp/tmp67an66pr.php
    on line 20


    Deprecated: Implicit conversion from float 4.5 to int loses precision in /tmp/tmp67an66pr.php
    on line 20


    Deprecated: Implicit conversion from float 2.1 to int loses precision in /tmp/tmp67an66pr.php
    on line 20


    Deprecated: Implicit conversion from float 1.09 to int loses precision in /tmp/tmp67an66pr.php
    on line 20

    2


    Deprecated: Implicit conversion from float 1.5 to int loses precision in /tmp/tmp67an66pr.php
    on line 20


    Deprecated: Implicit conversion from float 7.3 to int loses precision in /tmp/tmp67an66pr.php
    on line 20


    Deprecated: Implicit conversion from float 1.4 to int loses precision in /tmp/tmp67an66pr.php
    on line 20


    Deprecated: Implicit conversion from float 1.5 to int loses precision in /tmp/tmp67an66pr.php
    on line 20


    Deprecated: Implicit conversion from float 3.3 to int loses precision in /tmp/tmp67an66pr.php
    on line 20


    Deprecated: Implicit conversion from float 4.5 to int loses precision in /tmp/tmp67an66pr.php
    on line 20


    Deprecated: Implicit conversion from float 2.1 to int loses precision in /tmp/tmp67an66pr.php
    on line 20


    Deprecated: Implicit conversion from float 1.09 to int loses precision in /tmp/tmp67an66pr.php
    on line 20


    Deprecated: Implicit conversion from float 4.3 to int loses precision in /tmp/tmp67an66pr.php
    on line 20


    Deprecated: Implicit conversion from float 1.2 to int loses precision in /tmp/tmp67an66pr.php
    on line 20


    Deprecated: Implicit conversion from float 9.3 to int loses precision in /tmp/tmp67an66pr.php
    on line 20


    Deprecated: Implicit conver'
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$count = 0;\n\
    \tforeach ($nums as $num) {\n\t\tif ($num > 10) {\n\t\t\t$num = strval($num);\n\
    \t\t\tif (substr($num, 0, 1) % 2 == 1 && substr($num, -1) % 2 == 1) {\n\t\t\t\t\
    $count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn $count;\n}\necho specialFilter(array(15,\
    \ -73, 14, -15));\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t\n}\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjxujll86.php:18\n\
    Stack trace:\n#0 /tmp/tmpjxujll86.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpjxujll86.php\
    \ on line 18\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10 && $num % 2 != 0 && ($num\
    \ % 10) % 2 != 0) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\necho specialFilter(array(15, -73, 14, -15));\necho \"\\n\";\necho specialFilter(array(33,\
    \ -2, -3, 45, 21, 109));\necho \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n4\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7s7f05mo.php:30\n\
    Stack trace:\n#0 /tmp/tmp7s7f05mo.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp7s7f05mo.php\
    \ on line 30\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n}\n\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzmk9kooz.php:18\n\
    Stack trace:\n#0 /tmp/tmpzmk9kooz.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpzmk9kooz.php\
    \ on line 18\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n  $count = 0;\n\
    \  foreach ($nums as $num) {\n    if ($num > 10 && $num % 2 != 0 && $num % 10\
    \ != 0) {\n      $count++;\n    }\n  }\n  return $count;\n}\n\necho specialFilter(array(15,\
    \ -73, 14, -15)) . \"\\n\";\necho specialFilter(array(33, -2, -3, 45, 21, 109))\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n4\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy5u6ip6t.php:29\n\
    Stack trace:\n#0 /tmp/tmpy5u6ip6t.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpy5u6ip6t.php\
    \ on line 29\n"
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n  $count = 0;\n\
    \  foreach ($nums as $num) {\n    if ($num > 10) {\n      $last = $num % 10;\n\
    \      $first = (int) ($num / pow(10, floor(log10($num))));\n      if ($last %\
    \ 2 !== 0 && $first % 2 !== 0) {\n        $count++;\n      }\n    }\n  }\n  return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n  $count = 0;\n\
    \  foreach ($nums as $num) {\n    $len = strlen((string) $num);\n    if ($num\
    \ > 10 && $num[0] % 2 != 0 && $num[$len - 1] % 2 != 0) {\n      $count++;\n  \
    \  }\n  }\n  return $count;\n}\n\necho specialFilter(array(15, -73, 14, -15))\
    \ . PHP_EOL;\necho specialFilter(array(33, -2, -3, 45, 21, 109)) . PHP_EOL;\n\
    function candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmp9u5qx40n.php\
    \ on line 14\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmp9u5qx40n.php on line 14\n0\n\nWarning: Trying to access array offset\
    \ on value of type int in /tmp/tmp9u5qx40n.php on line 14\n\nWarning: Trying to\
    \ access array offset on value of type int in /tmp/tmp9u5qx40n.php on line 14\n\
    \nWarning: Trying to access array offset on value of type int in /tmp/tmp9u5qx40n.php\
    \ on line 14\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmp9u5qx40n.php on line 14\n0\n\nWarning: Trying to access array offset\
    \ on value of type int in /tmp/tmp9u5qx40n.php on line 14\n\nWarning: Trying to\
    \ access array offset on value of type int in /tmp/tmp9u5qx40n.php on line 14\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9u5qx40n.php:29\nStack\
    \ trace:\n#0 /tmp/tmp9u5qx40n.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp9u5qx40n.php\
    \ on line 29\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$new_nums =\
    \ array();\n\tforeach ($nums as $num) {\n\t\tif ($num > 10) {\n\t\t\t$first =\
    \ $num % 10;\n\t\t\t$last = ($num % 100) / 10;\n\t\t\tif ($first % 2 != 0 && $last\
    \ % 2 != 0) {\n\t\t\t\t$new_nums[] = $num;\n\t\t\t}\n\t\t}\n\t}\n\treturn count($new_nums);\n\
    }\necho \"The number of elements in the array that are greater than 10 and both\
    \ first and last digits of a number are odd is \" . specialFilter(array(15, -73,\
    \ 14, -15)) . \"<br>\";\necho \"The number of elements in the array that are greater\
    \ than 10 and both first and last digits of a number are odd is \" . specialFilter(array(33,\
    \ -2, -3, 45, 21, 109)) . \"<br>\";\nfunction candidate(...$args) {\n    return\
    \ specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 1.5 to int loses precision\
    \ in /tmp/tmpgissoujv.php on line 16\nThe number of elements in the array that\
    \ are greater than 10 and both first and last digits of a number are odd is 1<br>\n\
    Deprecated: Implicit conversion from float 3.3 to int loses precision in /tmp/tmpgissoujv.php\
    \ on line 16\n\nDeprecated: Implicit conversion from float 4.5 to int loses precision\
    \ in /tmp/tmpgissoujv.php on line 16\n\nDeprecated: Implicit conversion from float\
    \ 2.1 to int loses precision in /tmp/tmpgissoujv.php on line 16\n\nDeprecated:\
    \ Implicit conversion from float 0.9 to int loses precision in /tmp/tmpgissoujv.php\
    \ on line 16\nThe number of elements in the array that are greater than 10 and\
    \ both first and last digits of a number are odd is 1<br>\nDeprecated: Implicit\
    \ conversion from float 1.5 to int loses precision in /tmp/tmpgissoujv.php on\
    \ line 16\n\nDeprecated: Implicit conversion from float 3.3 to int loses precision\
    \ in /tmp/tmpgissoujv.php on line 16\n\nDeprecated: Implicit conversion from float\
    \ 4.5 to int loses precision in /tmp/tmpgissoujv.php on line 16\n\nDeprecated:\
    \ Implicit conversion from float 2.1 to int loses precision in /tmp/tmpgissoujv.php\
    \ on line 16\n\nDeprecated: Implicit conversion from float 0.9 to int loses precision\
    \ in /tmp/tmpgissoujv.php on line 16\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpgissoujv.php:32\nStack trace:\n#0 /tmp/tmpgissoujv.php(39):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpgissoujv.php on line 32\n"
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n  foreach ($nums\
    \ as $num) {\n    if ($num > 10) {\n      $firstDigit = substr($num, 0, 1);\n\
    \      $lastDigit = substr($num, -1);\n      if ($firstDigit % 2 == 1 && $lastDigit\
    \ % 2 == 1) {\n        $result[] = $num;\n      }\n    }\n  }\n  if (!empty($result))\
    \ {\n    return count($result);\n  } else {\n    return 0;\n  }\n}\n\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$result = 0;\n\
    \tforeach ($nums as $num) {\n\t\t$first = (int) strval($num)[0];\n\t\t$last =\
    \ (int) strval($num)[strlen(strval($num)) - 1];\n\t\tif ($num > 10 && $first %\
    \ 2 != 0 && $last % 2 != 0) {\n\t\t\t$result++;\n\t\t}\n\t}\n\treturn $result;\n\
    }\n\n$nums = array(15, -73, 14, -15);\necho specialFilter($nums);\necho \"\\n\"\
    ;\n\n$nums = array(33, -2, -3, 45, 21, 109);\necho specialFilter($nums);\necho\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    2

    '
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n  $count = 0;\n\
    \  foreach ($nums as $num) {\n    if (is_numeric($num) && strlen($num) > 1) {\n\
    \      $firstDigit = (int)$num[0];\n      $lastDigit = (int)$num[strlen($num)\
    \ - 1];\n      if ($firstDigit % 2 == 1 && $lastDigit % 2 == 1 && $num > 10) {\n\
    \        $count++;\n      }\n    }\n  }\n  return $count;\n}\n\necho specialFilter(array(15,\
    \ -73, 14, -15));\necho \"\\n\";\necho specialFilter(array(33, -2, -3, 45, 21,\
    \ 109));\necho \"\\n\";\necho specialFilter(array(1, -1, 100, -100));\necho \"\
    \\n\";\necho specialFilter(array(0, 33, -2, -3, 45, 21, 109));\necho \"\\n\";\n\
    function candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Warning: Trying to access array offset on value of type int in /tmp/tmpcoxwz60k.php
    on line 14


    Warning: Trying to access array offset on value of type int in /tmp/tmpcoxwz60k.php
    on line 15


    Warning: Trying to access array offset on value of type int in /tmp/tmpcoxwz60k.php
    on line 14


    Warning: Trying to access array offset on value of type int in /tmp/tmpcoxwz60k.php
    on line 15


    Warning: Trying to access array offset on value of type int in /tmp/tmpcoxwz60k.php
    on line 14


    Warning: Trying to access array offset on value of type int in /tmp/tmpcoxwz60k.php
    on line 15


    Warning: Trying to access array offset on value of type int in /tmp/tmpcoxwz60k.php
    on line 14


    Warning: Trying to access array offset on value of type int in /tmp/tmpcoxwz60k.php
    on line 15

    0


    Warning: Trying to access array offset on value of type int in /tmp/tmpcoxwz60k.php
    on line 14


    Warning: Trying to access array offset on value of type int in /tmp/tmpcoxwz60k.php
    on line 15


    Warning: Trying to access array offset on value of type int in /tmp/tmpcoxwz60k.php
    on line 14


    Warning: Trying to access array offset on value of type int in /tmp/tmpcoxwz60k.php
    on line 15


    Warning: Trying to access array offset on value of type int in /tmp/tmpcoxwz60k.php
    on line 14


    Warning: Trying to access array offset on value of type int in /tmp/tmpcoxwz60k.php
    on line 15


    Warning: Trying to access array offset on value of type int in /tmp/tmpcoxwz60k.php
    on line 14


    Warning: Trying to access array offset on value of type int in /tmp/tmpcoxwz60k.php
    on line 15


    Warning: Trying to access array offset on value of type int in /tmp/tmpcoxwz60k.php
    on line 14


    Warning: Trying to access array offset on value of type int in /tmp/tmpcoxwz60k.php
    on line 15


    Warning: Trying to access array offset on value of type int in /tmp/tmpcoxwz60k.php
    on line 14


    Warning: Trying to access array offset on value of type int in /tmp/tmpcoxwz60k.php
    on line 15

    0


    Warning: Trying to access array offset on value of type int in /tmp/tmpcoxwz60k.php
    on line 14


    Warning: Trying to access a'
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n  $count = 0;\n\
    \  for ($i = 0; $i < count($nums); $i++) {\n    if ($nums[$i] > 10) {\n      $firstDigit\
    \ = substr($nums[$i], 0, 1);\n      $lastDigit = substr($nums[$i], -1);\n    \
    \  if ($firstDigit % 2 != 0 && $lastDigit % 2 != 0) {\n        $count += 1;\n\
    \      }\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args) {\n\
    \    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$cnt = 0;\n\t\
    for ($i = 0; $i < count($nums); $i++) {\n\t\tif ($nums[$i] > 10 && $nums[$i] %\
    \ 2 == 1) {\n\t\t\t$k = (int) ($nums[$i] / 10);\n\t\t\tif ($k % 2 == 1) {\n\t\t\
    \t\t$cnt++;\n\t\t\t}\n\t\t}\n\t}\n\treturn $cnt;\n}\n\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn9ri4g7s.php:30\n\
    Stack trace:\n#0 /tmp/tmpn9ri4g7s.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpn9ri4g7s.php\
    \ on line 30\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10 && $num % 2 !== 0 && $num[0]\
    \ % 2 !== 0 && $num[strlen($num) - 1] % 2 !== 0) {\n            $count += 1;\n\
    \        }\n    }\n    return $count;\n}\n\necho specialFilter(array(15, -73,\
    \ 14, -15));\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmp51oh5t59.php\
    \ on line 13\n0\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmp51oh5t59.php on line 13\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp51oh5t59.php:27\nStack trace:\n#0 /tmp/tmp51oh5t59.php(35): test()\n\
    #1 {main}\n  thrown in /tmp/tmp51oh5t59.php on line 27\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $filter =\
    \ create_function('$n', 'return $n > 10 && $n % 2 == 1 && ($n % 10) % 2 == 1;');\n\
    \    return count(array_filter($nums, $filter));\n}\n\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function create_function()\
    \ in /tmp/tmpq8771j0s.php:11\nStack trace:\n#0 /tmp/tmpq8771j0s.php(16): specialFilter(Array)\n\
    #1 /tmp/tmpq8771j0s.php(20): candidate(Array)\n#2 /tmp/tmpq8771j0s.php(29): test()\n\
    #3 {main}\n  thrown in /tmp/tmpq8771j0s.php on line 11\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10 && $num % 2 != 0 && \n \
    \           ($num % 10) % 2 != 0 && \n            ($num / 10) % 2 != 0) {\n  \
    \          $count += 1;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 1.5 to int loses precision\
    \ in /tmp/tmpf2xx3n9d.php on line 15\n\nDeprecated: Implicit conversion from float\
    \ 3.3 to int loses precision in /tmp/tmpf2xx3n9d.php on line 15\n\nDeprecated:\
    \ Implicit conversion from float 4.5 to int loses precision in /tmp/tmpf2xx3n9d.php\
    \ on line 15\n\nDeprecated: Implicit conversion from float 2.1 to int loses precision\
    \ in /tmp/tmpf2xx3n9d.php on line 15\n\nDeprecated: Implicit conversion from float\
    \ 10.9 to int loses precision in /tmp/tmpf2xx3n9d.php on line 15\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpf2xx3n9d.php:29\nStack trace:\n\
    #0 /tmp/tmpf2xx3n9d.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpf2xx3n9d.php\
    \ on line 29\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t// INSERT YOUR\
    \ CODE HERE\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph7s5p31t.php:19\n\
    Stack trace:\n#0 /tmp/tmph7s5p31t.php(28): test()\n#1 {main}\n  thrown in /tmp/tmph7s5p31t.php\
    \ on line 19\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n  $result = 0;\n\
    \  for ($i = 0; $i < count($nums); $i++) {\n    if ($nums[$i] > 10) {\n      $oddDigits\
    \ = array();\n      $firstDigit = floor($nums[$i] / 10);\n      $lastDigit = $nums[$i]\
    \ % 10;\n      if ($firstDigit % 2 == 1 || $firstDigit % 2 == -1) {\n        array_push($oddDigits,\
    \ $firstDigit);\n      }\n      if ($lastDigit % 2 == 1 || $lastDigit % 2 == -1)\
    \ {\n        array_push($oddDigits, $lastDigit);\n      }\n      if (count($oddDigits)\
    \ == 2) {\n        $result++;\n      }\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuv0diewg.php:38\n\
    Stack trace:\n#0 /tmp/tmpuv0diewg.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpuv0diewg.php\
    \ on line 38\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$count = 0;\n\
    \t$flipped_nums = array_reverse($nums);\n\tforeach ($nums as $num) {\n\t\tif ($num\
    \ > 10) {\n\t\t\tif ($num % 2 !== 0 && $flipped_nums[0] % 2 !== 0) {\n\t\t\t\t\
    $count++;\n\t\t\t}\n\t\t}\n\t\tarray_shift($flipped_nums);\n\t}\n\treturn $count;\n\
    }\n\necho specialFilter(array(15, -73, 14, -15)) . \"\\n\";\necho specialFilter(array(33,\
    \ -2, -3, 45, 21, 109)) . \"\\n\";\n\nfunction candidate(...$args) {\n    return\
    \ specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n3\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp909flmhl.php:34\n\
    Stack trace:\n#0 /tmp/tmp909flmhl.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp909flmhl.php\
    \ on line 34\n"
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $arr = [];\n\
    \    foreach ($nums as $n) {\n        if ($n > 10 && (($n % 10) % 2 == 1) && ($n\
    \ / (10 ** (strlen($n) - 1)) % 2 == 1)) {\n            $arr[] = $n;\n        }\n\
    \    }\n    return count($arr);\n}\n\nprint(specialFilter(array(15, -73, 14, -15))\
    \ . \"\\n\");\nprint(specialFilter(array(33, -2, -3, 45, 21, 109)) . \"\\n\");\n\
    function candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 1.5 to int loses precision in /tmp/tmpx9u88v2_.php
    on line 13

    1


    Deprecated: Implicit conversion from float 3.3 to int loses precision in /tmp/tmpx9u88v2_.php
    on line 13


    Deprecated: Implicit conversion from float 4.5 to int loses precision in /tmp/tmpx9u88v2_.php
    on line 13


    Deprecated: Implicit conversion from float 2.1 to int loses precision in /tmp/tmpx9u88v2_.php
    on line 13


    Deprecated: Implicit conversion from float 1.09 to int loses precision in /tmp/tmpx9u88v2_.php
    on line 13

    2


    Deprecated: Implicit conversion from float 1.5 to int loses precision in /tmp/tmpx9u88v2_.php
    on line 13


    Deprecated: Implicit conversion from float 3.3 to int loses precision in /tmp/tmpx9u88v2_.php
    on line 13


    Deprecated: Implicit conversion from float 4.5 to int loses precision in /tmp/tmpx9u88v2_.php
    on line 13


    Deprecated: Implicit conversion from float 2.1 to int loses precision in /tmp/tmpx9u88v2_.php
    on line 13


    Deprecated: Implicit conversion from float 1.09 to int loses precision in /tmp/tmpx9u88v2_.php
    on line 13


    Deprecated: Implicit conversion from float 4.3 to int loses precision in /tmp/tmpx9u88v2_.php
    on line 13


    Deprecated: Implicit conversion from float 9.3 to int loses precision in /tmp/tmpx9u88v2_.php
    on line 13


    Deprecated: Implicit conversion from float 1.25 to int loses precision in /tmp/tmpx9u88v2_.php
    on line 13


    Deprecated: Implicit conversion from float 1.21 to int loses precision in /tmp/tmpx9u88v2_.php
    on line 13


    Deprecated: Implicit conversion from float 1.09 to int loses precision in /tmp/tmpx9u88v2_.php
    on line 13


    Deprecated: Implicit conversion from float 7.1 to int loses precision in /tmp/tmpx9u88v2_.php
    on line 13


    Deprecated: Implicit conversion from float 7.5 to int loses precision in /tmp/tmpx9u88v2_.php
    on line 13


    Deprecated: Implicit conversion from float 2.1 to int loses precision in /tmp/tmpx9u88v2_.php
    on line 13


    Deprecated: Implicit conversion from float 1.9 to int loses precision in /tmp/tmpx9u88v2_.php
    on line 13

    '
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if ($num > 10) {\n            $strNum\
    \ = (string)$num;\n            if (strlen($strNum) >= 2) {\n                if\
    \ ($strNum[0] % 2 !== 0 && $strNum[strlen($strNum) - 1] % 2 !== 0) {\n       \
    \             $count++;\n                }\n            }\n        }\n    }\n\
    \    return $count;\n}\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $arr = array();\n\
    \    foreach ($nums as $num) {\n        if ($num > 10) {\n            $first =\
    \ substr($num, 0, 1);\n            $last = substr($num, -1);\n            if (($first\
    \ % 2 != 0) && ($last % 2 != 0)) {\n                $arr[] = $num;\n         \
    \   }\n        }\n    }\n    $arr_size = count($arr);\n    echo $arr_size;\n}\n\
    $nums = array(15, -73, 14, -15);\nspecialFilter($nums);\necho \"<br>\";\n$nums\
    \ = array(33, -2, -3, 45, 21, 109);\nspecialFilter($nums);\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1<br>20\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphmud5dg_.php:34\n\
    Stack trace:\n#0 /tmp/tmphmud5dg_.php(43): test()\n#1 {main}\n  thrown in /tmp/tmphmud5dg_.php\
    \ on line 34\n"
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$cnt = 0;\n\t\
    foreach ($nums as $num) {\n\t\t$num = abs($num);\n\t\t$first = $num % 10;\n\t\t\
    $last = $num;\n\t\twhile ($last >= 10) {\n\t\t\t$last /= 10;\n\t\t}\n\t\tif ($num\
    \ > 10 && $first % 2 != 0 && $last % 2 != 0) {\n\t\t\t$cnt++;\n\t\t}\n\t}\n\t\
    return $cnt;\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 1.5 to int loses precision\
    \ in /tmp/tmp2huhlptd.php on line 19\n\nDeprecated: Implicit conversion from float\
    \ 7.3 to int loses precision in /tmp/tmp2huhlptd.php on line 19\n\nDeprecated:\
    \ Implicit conversion from float 1.5 to int loses precision in /tmp/tmp2huhlptd.php\
    \ on line 19\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2huhlptd.php:32\n\
    Stack trace:\n#0 /tmp/tmp2huhlptd.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp2huhlptd.php\
    \ on line 32\n"
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$count = 0;\n\
    \tforeach ($nums as $num) {\n\t\t$numStr = strval($num);\n\t\tif (strlen($numStr)\
    \ <= 1) {\n\t\t\tcontinue;\n\t\t}\n\t\t$firstDigit = intval($numStr[0]);\n\t\t\
    $lastDigit = intval($numStr[strlen($numStr) - 1]);\n\t\tif ($firstDigit % 2 !==\
    \ 0 && $lastDigit % 2 !== 0 && $num > 10) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\n}\n\nfunction\
    \ candidate(...$args) {\n    return specialFilter(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45,\
    \ 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43,\
    \ -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjh9lm_4c.php:19\n\
    Stack trace:\n#0 /tmp/tmpjh9lm_4c.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpjh9lm_4c.php\
    \ on line 19\n"
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        if (abs($num) > 10 && $num % 2 == 1) {\n\
    \            $last_digit = abs($num) % 10;\n            $first_digit = (int) (abs($num)\
    \ / pow(10, floor(log10(abs($num)))));\n            if ($last_digit % 2 == 1 &&\
    \ $first_digit % 2 == 1) {\n                $count++;\n            }\n       \
    \ }\n    }\n    return $count;\n}\necho specialFilter(array(15, -73, 14, -15)).PHP_EOL;\n\
    echo specialFilter(array(33, -2, -3, 45, 21, 109)).PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    2

    '
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n  $count = 0;\n\
    \  foreach ($nums as $num) {\n    if ($num > 10) {\n      $firstDigit = substr($num,\
    \ 0, 1);\n      $lastDigit = substr($num, -1);\n      if ($firstDigit % 2 != 0\
    \ && $lastDigit % 2 != 0) {\n        $count++;\n      }\n    }\n  }\n  return\
    \ $count;\n}\n\necho specialFilter(array(15, -73, 14, -15)) . \"\\n\";\necho specialFilter(array(33,\
    \ -2, -3, 45, 21, 109)) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    2

    '
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n}\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpym4h36ed.php:17\n\
    Stack trace:\n#0 /tmp/tmpym4h36ed.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpym4h36ed.php\
    \ on line 17\n"
  timestamp: 1659822454
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n  $count = 0;\n\
    \  foreach ($nums as $num) {\n    if ($num > 10 && isNumberSpecial($num)) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function isNumberSpecial()\
    \ in /tmp/tmphscfov5o.php:13\nStack trace:\n#0 /tmp/tmphscfov5o.php(21): specialFilter(Array)\n\
    #1 /tmp/tmphscfov5o.php(26): candidate(Array)\n#2 /tmp/tmphscfov5o.php(34): test()\n\
    #3 {main}\n  thrown in /tmp/tmphscfov5o.php on line 13\n"
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n  $cnt = 0;\n\
    \  foreach ($nums as $num) {\n    if ($num > 10) {\n      $str = (string) $num;\n\
    \      if (strlen($str) < 2) {\n        $cnt++;\n      } else {\n        $first\
    \ = $str[0];\n        $last = $str[strlen($str) - 1];\n        if (($first % 2\
    \ == 1) && ($last % 2 == 1)) {\n          $cnt++;\n        }\n      }\n    }\n\
    \  }\n  return $cnt;\n}\n\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $count = 0;\n\
    \    foreach ($nums as $num) {\n        $digits = str_split($num);\n        if\
    \ ($num > 10 && count($digits) > 1 && $digits[0] % 2 == 1 && $digits[count($digits)\
    \ - 1] % 2 == 1) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\necho specialFilter(array(15, -73, 14, -15)) . \"\\n\";\necho specialFilter(array(33,\
    \ -2, -3, 45, 21, 109)) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    2

    '
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n\t$count = 0;\n\
    \tforeach ($nums as $num) {\n\t\tif ($num > 10) {\n\t\t\t$first = substr($num,\
    \ 0, 1);\n\t\t\t$last = substr($num, -1);\n\t\t\tif (($first % 2 == 1) && ($last\
    \ % 2 == 1)) {\n\t\t\t\t$count++;\n\t\t\t}\n\t\t}\n\t}\n\treturn $count;\n}\n\n\
    echo specialFilter(array(15, -73, 14, -15));\necho PHP_EOL;\necho specialFilter(array(33,\
    \ -2, -3, 45, 21, 109));\necho PHP_EOL;\nfunction candidate(...$args) {\n    return\
    \ specialFilter(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(5,\
    \ -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15,\
    \ -73, 14, -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    2

    '
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $returnArr\
    \ = [];\n    foreach ($nums as $item) {\n        if ($item > 10) {\n         \
    \   if ($item < 0) {\n                $item = abs($item);\n            }\n   \
    \         $firstLastDigits = [];\n            $firstLastDigits[] = $item % 10;\n\
    \            while ($item > 10) {\n                $item = $item / 10;\n     \
    \       }\n            $firstLastDigits[] = $item;\n            if (($firstLastDigits[0]\
    \ % 2 !== 0) && ($firstLastDigits[1] % 2 !== 0)) {\n                $returnArr[]\
    \ = $item;\n            }\n        }\n    }\n    return count($returnArr);\n}\n\
    echo specialFilter(array(15, -73, 14, -15));\necho specialFilter(array(33, -2,\
    \ -3, 45, 21, 109));\nfunction candidate(...$args) {\n    return specialFilter(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(5, -2, 1, -5)) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(15, -73, 14,\
    \ -15)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(33,\
    \ -2, -3, 45, 21, 109)) !== 2) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1)) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== 0)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 1.5 to int loses precision in /tmp/tmpmqhire56.php
    on line 23

    1

    Deprecated: Implicit conversion from float 3.3 to int loses precision in /tmp/tmpmqhire56.php
    on line 23


    Deprecated: Implicit conversion from float 4.5 to int loses precision in /tmp/tmpmqhire56.php
    on line 23


    Deprecated: Implicit conversion from float 2.1 to int loses precision in /tmp/tmpmqhire56.php
    on line 23


    Deprecated: Implicit conversion from float 1.09 to int loses precision in /tmp/tmpmqhire56.php
    on line 23

    2

    Deprecated: Implicit conversion from float 1.5 to int loses precision in /tmp/tmpmqhire56.php
    on line 23


    Deprecated: Implicit conversion from float 3.3 to int loses precision in /tmp/tmpmqhire56.php
    on line 23


    Deprecated: Implicit conversion from float 4.5 to int loses precision in /tmp/tmpmqhire56.php
    on line 23


    Deprecated: Implicit conversion from float 2.1 to int loses precision in /tmp/tmpmqhire56.php
    on line 23


    Deprecated: Implicit conversion from float 1.09 to int loses precision in /tmp/tmpmqhire56.php
    on line 23


    Deprecated: Implicit conversion from float 4.3 to int loses precision in /tmp/tmpmqhire56.php
    on line 23


    Deprecated: Implicit conversion from float 9.3 to int loses precision in /tmp/tmpmqhire56.php
    on line 23


    Deprecated: Implicit conversion from float 1.25 to int loses precision in /tmp/tmpmqhire56.php
    on line 23


    Deprecated: Implicit conversion from float 1.21 to int loses precision in /tmp/tmpmqhire56.php
    on line 23


    Deprecated: Implicit conversion from float 1.09 to int loses precision in /tmp/tmpmqhire56.php
    on line 23


    Deprecated: Implicit conversion from float 7.1 to int loses precision in /tmp/tmpmqhire56.php
    on line 23


    Deprecated: Implicit conversion from float 7.5 to int loses precision in /tmp/tmpmqhire56.php
    on line 23


    Deprecated: Implicit conversion from float 2.1 to int loses precision in /tmp/tmpmqhire56.php
    on line 23


    Deprecated: Implicit conversion from float 1.9 to int loses precision in /tmp/tmpmqhire56.php
    on line 23

    '
  timestamp: 1660028700
- exit_code: 0
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $special_nums\
    \ = 0;\n    for ($i = 0; $i < count($nums); $i++) {\n        $first_digit = substr($nums[$i],\
    \ 0, 1);\n        $last_digit = substr($nums[$i], -1);\n        if ($nums[$i]\
    \ > 10 && $first_digit % 2 != 0 && $last_digit % 2 != 0) {\n            $special_nums++;\n\
    \        }\n    }\n    return $special_nums;\n}\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028700
- exit_code: 255
  program: "<?php\n// Write a function that takes an array of numbers as input and\
    \ returns \n// the number of elements in the array that are greater than 10 and\
    \ both \n// first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For\
    \ example:\n// >>> specialFilter(array(15, -73, 14, -15))\n// 1\n// >>> specialFilter(array(33,\
    \ -2, -3, 45, 21, 109))\n// 2\nfunction specialFilter($nums) {\n    $result =\
    \ array();\n    foreach ($nums as $num) {\n        $num = (string) abs($num);\n\
    \        if (strlen($num) > 1 && \n            (int) $num[0] % 2 !== 0 &&\n  \
    \          (int) $num[strlen($num) - 1] % 2 !== 0) {\n            $result[] =\
    \ $num;\n        }\n    }\n    return count($result);\n}\n\nfunction candidate(...$args)\
    \ {\n    return specialFilter(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(43, -12, 93,\
    \ 125, 121, 109)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(71,\
    \ -2, -33, 75, 21, 19)) !== 3) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(1)) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8cwt31n6.php:29\n\
    Stack trace:\n#0 /tmp/tmp8cwt31n6.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp8cwt31n6.php\
    \ on line 29\n"
  timestamp: 1660028700

name: HumanEval_35_max_element
language: php
prompt: "<?php\n// Return maximum element in the array.\n// >>> max_element(array(1,\
  \ 2, 3))\n// 3\n// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))\n\
  // 123\nfunction max_element($l) {\n"
tests: "function candidate(...$args) {\n    return max_element(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10))\
  \ !== 124) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["\t$res = $l[0];\n\tforeach ($l as $e) {\n\t\tif ($e > $res) {\n\t\t\
    \t$res = $e;\n\t\t}\n\t}\n\treturn $res;\n}\n", "    $max = $l[0];\n    for ($i\
    \ = 1; $i < count($l); $i++) {\n        if ($l[$i] > $max) {\n            $max\
    \ = $l[$i];\n        }\n    }\n    return $max;\n}\n", "    if (count($l) == 0)\
    \ {\n        throw new Exception('Empty Array');\n    }\n\n    if (count($l) ==\
    \ 1) {\n        return $l[0];\n    }\n\n    $max_element = max_element(array_slice($l,\
    \ 1));\n    if ($l[0] > $max_element) {\n        return $l[0];\n    } else {\n\
    \        return $max_element;\n    }\n}\n\ntry {\n    $l = array();\n    echo\
    \ max_element($l) . PHP_EOL;\n} catch (Exception $e) {\n    echo $e->getMessage()\
    \ . PHP_EOL;\n}\n\ntry {\n    $l = array(1);\n    echo max_element($l) . PHP_EOL;\n\
    } catch (Exception $e) {\n    echo $e->getMessage() . PHP_EOL;\n}\n\ntry {\n \
    \   $l = array(2, 3);\n    echo max_element($l) . PHP_EOL;\n} catch (Exception\
    \ $e) {\n    echo $e->getMessage() . PHP_EOL;\n}\n\ntry {\n    $l = array(2, 3,\
    \ 1);\n    echo max_element($l) . PHP_EOL;\n} catch (Exception $e) {\n    echo\
    \ $e->getMessage() . PHP_EOL;\n}\n\ntry {\n    $l = array(5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10);\n    echo max_element($l) . PHP_EOL;\n} catch (Exception\
    \ $e) {\n    echo $e->getMessage() . PHP_EOL;\n}", "  return count($l) ? $l[0]\
    \ : null;\n}\n", "    $max = $l[0];\n    foreach ($l as $v) {\n        if ($v\
    \ > $max) {\n            $max = $v;\n        }\n    }\n    return $max;\n}\n",
  "    $max = $l[0];\n    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i]\
    \ > $max) {\n            $max = $l[$i];\n        }\n    }\n    return $max;\n\
    }\n", "    $m = $l[0];\n    foreach ($l as $x) {\n        if ($x > $m) {\n   \
    \         $m = $x;\n        }\n    }\n    return $m;\n}\n", "    return array_reduce($l,\
    \ function($max, $i) {\n        return $i > $max ? $i : $max;\n    }, $l[0]);\n\
    }\necho max_element(array(1, 2, 3)) . \"\\n\";\necho max_element(array(5, 3, -5,\
    \ 2, -3, 3, 9, 0, 123, 1, -10)) . \"\\n\";", "\t// Your code goes here.\n\t$max\
    \ = $l[0];\n\t$len = count($l);\n\tfor ($i = 1; $i < $len; $i++) {\n\t\tif ($l[$i]\
    \ > $max) {\n\t\t\t$max = $l[$i];\n\t\t}\n\t}\n\treturn $max;\n}\n", "  if (sizeof($l)\
    \ == 0) {\n    return null;\n  }\n  $max = $l[0];\n  for ($i = 1; $i < sizeof($l);\
    \ $i++) {\n    if ($l[$i] > $max) {\n      $max = $l[$i];\n    }\n  }\n  return\
    \ $max;\n}\n", "  if (count($l) == 0) {\n    return false;\n  }\n  else {\n  \
    \  $max = $l[0];\n    for ($i = 1; $i < count($l); $i++) {\n      if ($l[$i] >\
    \ $max) {\n        $max = $l[$i];\n      }\n    }\n    return $max;\n  }\n}\n",
  "  $max = $l[0];\n  for ($i = 1; $i < count($l); $i++) {\n    if ($l[$i] > $max)\
    \ {\n      $max = $l[$i];\n    }\n  }\n  return $max;\n}\n", "    $max = $l[0];\n\
    \    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i] > $max) {\n    \
    \        $max = $l[$i];\n        }\n    }\n    return $max;\n}\n", "    $max =\
    \ $l[0];\n    foreach ($l as $el) {\n        if ($el > $max) {\n            $max\
    \ = $el;\n        }\n    }\n    return $max;\n}\n", "  if ($l === array()) {\n\
    \    return null;\n  } else {\n    $max = $l[0];\n    foreach ($l as $element)\
    \ {\n      if ($element > $max) {\n        $max = $element;\n      }\n    }\n\
    \    return $max;\n  }\n}", "    if (count($l) === 0) {\n        return null;\n\
    \    } else {\n        $max = $l[0];\n        for ($i = 1; $i < count($l); $i++)\
    \ {\n            if ($l[$i] > $max) {\n                $max = $l[$i];\n      \
    \      }\n        }\n        return $max;\n    }\n}\n", "\t$max = $l[0];\n\tforeach\
    \ ($l as $e) {\n\t\tif ($e > $max) {\n\t\t\t$max = $e;\n\t\t}\n\t}\n\treturn $max;\n\
    }\n", "    $v = $l[0];\n    foreach ($l as $i) {\n        if ($i > $v) {\n   \
    \         $v = $i;\n        }\n    }\n    return $v;\n}\n", "    $max = $l[0];\n\
    \    foreach ($l as $val) {\n        if ($val > $max) {\n            $max = $val;\n\
    \        }\n    }\n    return $max;\n}", "\t$max= $l[0];\n\tfor ($i=1; $i<count($l);\
    \ $i++) {\n\t\tif ($l[$i] > $max) {\n\t\t\t$max= $l[$i];\n\t\t}\n\t}\n\treturn\
    \ $max;\n}\n", "    $result = null;\n    for ($i = 0; $i < count($l); $i++) {\n\
    \        if ($result === null || $l[$i] > $result) {\n            $result = $l[$i];\n\
    \        }\n    }\n    return $result;\n}\n", "    return max($l);\n}\n", "\t\
    // Insert your code here...\n\t$max = $l[0];\n\tforeach ($l as $value) {\n\t\t\
    if ($value > $max) {\n\t\t\t$max = $value;\n\t\t}\n\t}\n\treturn $max;\n}\n",
  "    $result = $l[0];\n    foreach ($l as $e) {\n        if ($e > $result) {\n \
    \           $result = $e;\n        }\n    }\n    return $result;\n}\n", "  //\
    \ REPLACE THIS CODE WITH YOUR max_element() METHOD\n  if (sizeof($l) == 0) {\n\
    \    return 0;\n  } else {\n    $max = $l[0];\n    foreach ($l as $val) {\n  \
    \    if ($val > $max) {\n        $max = $val;\n      }\n    }\n    return $max;\n\
    \  }\n}\n", "  $max = $l[0];\n  foreach ($l as $i) {\n    if ($i > $max) {\n \
    \     $max = $i;\n    }\n  }\n  return $max;\n}\n", "    $m = $l[0];\n    for\
    \ ($i = 1; $i < count($l); $i++) {\n        if ($l[$i] > $m) {\n            $m\
    \ = $l[$i];\n        }\n    }\n    return $m;\n}\n", "    if (count($l) === 0)\
    \ {\n        return null;\n    }\n    $max = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n\
    \    }\n    return $max;\n}\n", "  $max = $l[0];\n  foreach ($l as $element) {\n\
    \    if ($element > $max) {\n      $max = $element;\n    }\n  }\n  return $max;\n\
    }\n", "    return array_reduce($l, function($acc, $x) {\n        return $x > $acc\
    \ ? $x : $acc;\n    }, $l[0]);\n}\n", "\t$n = count($l);\n\t$max = $l[0];\n\t\
    for ($i = 1; $i < $n; $i++) {\n\t\tif ($l[$i] > $max) {\n\t\t\t$max = $l[$i];\n\
    \t\t}\n\t}\n\treturn $max;\n}\n", "\t$max = $l[0];\n\tfor ($i = 1; $i < count($l);\
    \ $i++) {\n\t\tif ($l[$i] > $max) {\n\t\t\t$max = $l[$i];\n\t\t}\n\t}\n\treturn\
    \ $max;\n}\n", "    $acc = $l[0];\n    foreach (array_slice($l, 1) as $el) {\n\
    \        if ($el > $acc) {\n            $acc = $el;\n        }\n    }\n    return\
    \ $acc;\n}\n", "  $max = $l[0];\n  for ($i = 1; $i < count($l); $i++) {\n    if\
    \ ($l[$i] > $max) {\n      $max = $l[$i];\n    }\n  }\n  return $max;\n}\n", " \
    \   $max = $l[0];\n    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i]\
    \ > $max) {\n            $max = $l[$i];\n        }\n    }\n    return $max;\n}",
  "    $max = 0;\n    foreach ($l as $key => $value) {\n        if ($value > $max)\
    \ {\n            $max = $value;\n        }\n    }\n    return $max;\n}\n", " \
    \   $ret = PHP_INT_MIN;\n    foreach ($l as $e) {\n        if ($e > $ret) {\n\
    \            $ret = $e;\n        }\n    }\n    return $ret;\n}\n", "  if (sizeof($l)\
    \ == 0) {\n    return false;\n  }\n  $max = $l[0];\n  for ($i = 1; $i < sizeof($l);\
    \ $i++) {\n    if ($l[$i] > $max) {\n      $max = $l[$i];\n    }\n  }\n  return\
    \ $max;\n}", "    // Your code here.\n}", "  if (count($l) == 0) {\n    return\
    \ NULL;\n  }\n  $current = $l[0];\n  foreach ($l as $element) {\n    if ($element\
    \ > $current) {\n      $current = $element;\n    }\n  }\n  return $current;\n\
    }\n", "    return max($l);\n}\n", "  $max = $l[0];\n  foreach ($l as $value) {\n\
    \    if ($value > $max) {\n      $max = $value;\n    }\n  }\n  return $max;\n\
    }\n", "    $max = NULL;\n    foreach ($l as $el) {\n        if ($max === NULL\
    \ || $el > $max) {\n            $max = $el;\n        }\n    }\n    return $max;\n\
    }", "\treturn $l[count($l) - 1];\n}\n", "    if(count($l) == 0) {\n        return\
    \ null;\n    } else {\n        $max = $l[0];\n        foreach($l as $v) {\n  \
    \          if($v > $max) {\n                $max = $v;\n            }\n      \
    \  }\n        return $max;\n    }\n}\n", "    return $l;\n}\n", "  $max = $l[0];\n\
    \  foreach ($l as $item) {\n    if ($item > $max) $max = $item;\n  }\n  return\
    \ $max;\n}\n", "    $max = $l[0];\n    for ($i = 1; $i < count($l); $i++) {\n\
    \        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n    }\n\
    \    return $max;\n}\n", "    if(!isset($l[0]))\n        return;\n    $max = $l[0];\n\
    \    foreach($l as $v) {\n        if($v > $max)\n            $max = $v;\n    }\n\
    \    return $max;\n}\n", "    $max = $l[0];\n    foreach ($l as $i) {\n      \
    \  if ($i > $max) {\n            $max = $i;\n        }\n    }\n    return $max;\n\
    }\n", "    if (count($l) == 0) {\n        return 0;\n    }\n    $max = $l[0];\n\
    \    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i] > $max) {\n    \
    \        $max = $l[$i];\n        }\n    }\n    return $max;\n}\n", "    if (count($l)\
    \ == 0) {\n        echo \"ERROR: empty array!\\n\";\n        return 0;\n    }\n\
    \n    $m = $l[0];\n    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i]\
    \ > $m) {\n            $m = $l[$i];\n        }\n    }\n    return $m;\n}\n", " \
    \   $m = $l[0];\n    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i]\
    \ > $m) {\n            $m = $l[$i];\n        }\n    }\n    return $m;\n}\n", " \
    \   if (empty($l)) {\n        return null;\n    } else if (count($l) == 1) {\n\
    \        return $l[0];\n    } else {\n        $max_tail = max_element(array_slice($l,\
    \ 1));\n        return $l[0] > $max_tail ? $l[0] : $max_tail;\n    }\n}\n\n$arr\
    \ = array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10);\n$max = max_element($arr);\n\
    echo 'The maximum element in the array is ' . $max . \"\\n\";\n", "    $max =\
    \ $l[0];\n    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i] > $max)\
    \ {\n            $max = $l[$i];\n        }\n    }\n    return $max;\n}\n", " \
    \   $n = count($l);\n    $max = $l[0];\n    for ($i = 1; $i < $n; $i++) {\n  \
    \      if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n    }\n  \
    \  return $max;\n}", "    if (count($l) > 0) {\n        $result = $l[0];\n   \
    \     for ($i = 1; $i < count($l); $i++) {\n            if ($l[$i] > $result)\
    \ {\n                $result = $l[$i];\n            }\n        }\n        return\
    \ $result;\n    } else {\n        return null;\n    }\n}\n", "  $max = $l[0];\n\
    \  for ($i = 1; $i < count($l); $i++) {\n    if ($l[$i] > $max) {\n      $max\
    \ = $l[$i];\n    }\n  }\n  return $max;\n}", "  if (count($l) == 0) {\n    return\
    \ 0;\n  } else {\n    $e = array_shift($l);\n    return max($e, max_element($l));\n\
    \  }\n}\n", "    $a = $l[0];\n    for ($i = 1; $i < count($l); $i++) {\n     \
    \   if ($l[$i] > $a) $a = $l[$i];\n    }\n    return $a;\n}\n", "\t$max = $l[0];\n\
    \tforeach ($l as $v) {\n\t\tif ($v > $max) {\n\t\t\t$max = $v;\n\t\t}\n\t}\n\t\
    return $max;\n}\n", "  if ($l == null) return null;\n  $max = $l[0];\n  foreach\
    \ ($l as $e) {\n    if ($e > $max) $max = $e;\n  }\n  return $max;\n}\n", "  \
    \  $n = count($l);\n    $max = $l[0];\n    for ($i = 1; $i < $n; $i++) {\n   \
    \     if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n    }\n   \
    \ return $max;\n}\n", "  $max = 0;\n  foreach ($l as $num) {\n    if ($num > $max)\
    \ $max = $num;\n  }\n  return $max;\n}", "    if (count($l) == 0) {\n        return\
    \ NULL;\n    }\n    $max = $l[0];\n    for ($i = 1; $i < count($l); $i++) {\n\
    \        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n    }\n\
    \    return $max;\n}\n", "\tif (count($l) == 0) {\n\t\treturn 0;\n\t}\n\t$k =\
    \ $l[0];\n\tforeach ($l as $v) {\n\t\tif ($v > $k) {\n\t\t\t$k = $v;\n\t\t}\n\t\
    }\n\treturn $k;\n}", "\t$max = $l[0];\n\tfor ($i = 1; $i < count($l); $i++) {\n\
    \t\tif ($l[$i] > $max) {\n\t\t\t$max = $l[$i];\n\t\t}\n\t}\n\treturn $max;\n}\n",
  "\t$m = $l[0];\n\tfor ($i = 1; $i < count($l); $i++) {\n\t\tif ($l[$i] > $m) {\n\
    \t\t\t$m = $l[$i];\n\t\t}\n\t}\n\treturn $m;\n}\n", "  // TODO\n}\n", "    //\
    \ TODO\n    $max = $l[0];\n    foreach ($l as $num) {\n        if ($num > $max)\
    \ {\n            $max = $num;\n        }\n    }\n    return $max;\n}\n", "\t$max\
    \ = $l[0];\n\tforeach ($l as $e) {\n\t\tif ($e > $max) $max = $e;\n\t}\n\treturn\
    \ $max;\n}\n", "  $max = NULL;\n  foreach ($l as $i) {\n    if ($max == NULL ||\
    \ $i > $max) {\n      $max = $i;\n    }\n  }\n  return $max;\n}\n\necho max_element(array(1,\
    \ 2, 3));\necho \"\\n\";\necho max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123,\
    \ 1, -10));\necho \"\\n\";", "    if (empty($l)) {\n        return 0;\n    }\n\
    \    $m = $l[0];\n    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i]\
    \ > $m) {\n            $m = $l[$i];\n        }\n    }\n    return $m;\n}", "\t\
    $max = $l[0];\n\tforeach ($l as $i) {\n\t\tif ($i > $max) {\n\t\t\t$max = $i;\n\
    \t\t}\n\t}\n\treturn $max;\n}\n", "\t$max = $l[0];\n\tforeach ($l as $val) {\n\
    \t\tif ($val > $max) {\n\t\t\t$max = $val;\n\t\t}\n\t}\n\treturn $max;\n}\n",
  "    if ($l === array()) {\n        return false;\n    } else {\n        $max =\
    \ $l[0];\n        for ($i = 1; $i < count($l); $i++) {\n            if ($l[$i]\
    \ > $max) {\n                $max = $l[$i];\n            }\n        }\n      \
    \  return $max;\n    }\n}", "\t$max = $l[0];\n\tfor ($i = 1; $i < count($l); $i++)\
    \ {\n\t\tif ($l[$i] > $max) {\n\t\t\t$max = $l[$i];\n\t\t}\n\t}\n\treturn $max;\n\
    }\n", "    $max = $l[0];\n    for ($i = 1; $i < count($l); $i++) {\n        if\
    \ ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n    }\n    return\
    \ $max;\n}\n", "\t// PHP 5.6\n\t// $max = max($l);\n\t$max = $l[0];\n\tforeach\
    \ ($l as $x) {\n\t\tif ($x > $max) {\n\t\t\t$max = $x;\n\t\t}\n\t}\n\treturn $max;\n\
    }\n", "    $max = -INF;\n    foreach ($l as $element) {\n        if ($element\
    \ > $max) {\n            $max = $element;\n        }\n    }\n    return $max;\n\
    }", "\t$max = $l[0];\n\tforeach ($l as $e) {\n\t\tif ($e > $max) {\n\t\t\t$max\
    \ = $e;\n\t\t}\n\t}\n\treturn $max;\n}\n", "  return max($l);\n}\n", "\t$max =\
    \ $l[0];\n\tforeach ($l as $n) {\n\t\tif ($n > $max) {\n\t\t\t$max = $n;\n\t\t\
    }\n\t}\n\treturn $max;\n}\n", "  return array_reduce($l, function($a, $b) { return\
    \ $a > $b ? $a : $b; });\n}\n", "  $res = 0;\n  foreach ($l as $i) {\n    if ($i\
    \ > $res) {\n      $res = $i;\n    }\n  }\n  return $res;\n}\n\necho max_element(array(1,\
    \ 2, 3)), \"\\n\";\necho max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10)),\
    \ \"\\n\";", "    return reduce(function($prev, $curr) {\n        return $prev\
    \ > $curr ? $prev : $curr;\n    }, $l);\n}\n", "  return max($l);\n}", "\tif (sizeof($l)\
    \ < 1) {\n\t\treturn False;\n\t} else {\n\t\t$max = $l[0];\n\t\tforeach ($l as\
    \ $i) {\n\t\t\tif ($i > $max) {\n\t\t\t\t$max = $i;\n\t\t\t}\n\t\t}\n\t\treturn\
    \ $max;\n\t}\n}\n", "  $m = $l[0];\n  for ($i = 1; $i < count($l); $i++) {\n \
    \   if ($l[$i] > $m) {\n      $m = $l[$i];\n    }\n  }\n  return $m;\n}\n", "\t\
    $max = -1;\n\tforeach ($l as $x) {\n\t\tif ($x > $max) {\n\t\t\t$max = $x;\n\t\
    \t}\n\t}\n\treturn $max;\n}\n", "    if(count($l) == 0) {\n        return null;\n\
    \    }\n    if(count($l) == 1) {\n        return $l[0];\n    }\n    $m = max_element(array_slice($l,\
    \ 1));\n    if($l[0] > $m) {\n        return $l[0];\n    }\n    return $m;\n}\n",
  "  $l = $l;\n  $max = 0;\n  for ($i = 0; $i < count($l); $i++) {\n    if ($l[$i]\
    \ > $max) {\n      $max = $l[$i];\n    }\n  }\n  return $max;\n}\n", "  return\
    \ reduce($l, function($a, $b) {\n    return $a > $b ? $a : $b;\n  });\n}\n", " \
    \ $f = function($a, $b) {\n    return $a > $b ? $a : $b;\n  };\n  return foldr($f,\
    \ $l[0], $l);\n}\n", "    // TODO: Your code here.\n}\n", "  if (count($l) ==\
    \ 0) {\n    return 0;\n  }\n  $res = $l[0];\n  for ($i = 1; $i < count($l); $i++)\
    \ {\n    if ($l[$i] > $res) {\n      $res = $l[$i];\n    }\n  }\n  return $res;\n\
    }", "    if (count($l) === 0) {\n        return 0;\n    } else {\n        $last\
    \ = array_pop($l);\n        return max($last, max_element($l));\n    }\n}", " \
    \   return reduce('max', 0, $l);\n}\n", "    return max($l);\n}", "  return $l[0]\
    \ == null ? null :\n    count($l) == 1 ? $l[0] :\n    $l[0] > max_element(array_slice($l,\
    \ 1)) ? $l[0] :\n    max_element(array_slice($l, 1));\n}\n", "  if (count($l)\
    \ == 0) {\n    return false;\n  }\n  $max = $l[0];\n  foreach ($l as $i) {\n \
    \   if ($i > $max) {\n      $max = $i;\n    }\n  }\n  return $max;\n}\n", "  \
    \  $max = -INF;\n    foreach ($l as $item) {\n        if ($item > $max) {\n  \
    \          $max = $item;\n        }\n    }\n    return $max;\n}\n", "  if (count($l)\
    \ == 0) {\n    return null;\n  } else {\n    $max = $l[0];\n    foreach ($l as\
    \ $x) {\n      if ($x > $max) {\n        $max = $x;\n      }\n    }\n    return\
    \ $max;\n  }\n}", "\t// your code goes here\n\treturn NULL;\n}\n", "\treturn $l[count($l)\
    \ - 1];\n}\n", "    if (count($l) == 0) {\n        return 0;\n    } else {\n \
    \       $max = $l[0];\n        for ($i = 1; $i < count($l); $i++) {\n        \
    \    if ($l[$i] > $max) {\n                $max = $l[$i];\n            }\n   \
    \     }\n        return $max;\n    }\n}\n", "    // your code here\n    $big=\
    \ 0;\n    foreach ($l as $v) {\n        if ($v > $big) {\n            $big = $v;\n\
    \        }\n    }\n    return $big;\n}\n", "  return array_reduce($l, function($a,\
    \ $b) {\n    return $a < $b ? $b : $a;\n  });\n}\n", "  return array_reduce($l,\
    \ function($acc, $i) {\n    return max($acc, $i);\n  }, $l[0]);\n}\n", "    return\
    \ 0;\n}\n", "  return (count($l) == 0) ? 0 : max($l);\n}\n", "    return $l[array_search(max($l),\
    \ $l)];\n}\n", "    $m = 0;\n    foreach ($l as $x) {\n        if ($x > $m) {\n\
    \            $m = $x;\n        }\n    }\n    return $m;\n}\n", "    $max = $l[0];\n\
    \    foreach ($l as $val) {\n        if ($val > $max) {\n            $max = $val;\n\
    \        }\n    }\n    return $max;\n}\n", "  $max = $l[0];\n  foreach ($l as\
    \ $e) {\n    if ($e > $max) {\n      $max = $e;\n    }\n  }\n  return $max;\n\
    }\n", "    $l = array_slice($l, 1);\n    if (count($l) == 0) {\n        return\
    \ $l[0];\n    } else {\n        return max($l[0], max_element($l));\n    }\n}",
  "\tif (empty($l)) return 0;\n\t$max = $l[0];\n\tfor ($i = 1; $i < count($l); $i++)\
    \ {\n\t\tif ($l[$i] > $max) $max = $l[$i];\n\t}\n\treturn $max;\n}\n", "    $a\
    \ = $l[0];\n    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i] > $a)\
    \ {\n            $a = $l[$i];\n        }\n    }\n    return $a;\n}\n", "    $max\
    \ = 0;\n    foreach ($l as $value) {\n        if ($value > $max) {\n         \
    \   $max = $value;\n        }\n    }\n    return $max;\n}\n", "    $size = count($l);\n\
    \    if ($size == 0) {\n        return null;\n    } else if ($size == 1) {\n \
    \       return $l[0];\n    } else {\n        $half = $size / 2;\n        $left\
    \ = array_slice($l, 0, $half);\n        $right = array_slice($l, $half);\n   \
    \     $leftMax = max_element($left);\n        $rightMax = max_element($right);\n\
    \        return $leftMax > $rightMax ? $leftMax : $rightMax;\n    }\n}\n", " \
    \   return array_reduce($l, function($a, $b) {\n        return $a > $b ? $a :\
    \ $b;\n    });\n}\n", "\treturn max($l);\n}", "    return $l;\n}\n", "    if ($l\
    \ === array()) {\n        return NULL;\n    } else if (count($l) === 1) {\n  \
    \      return $l[0];\n    } else {\n        $tail = array_slice($l, 1);\n    \
    \    $max_in_tail = max_element($tail);\n        if ($l[0] > $max_in_tail) {\n\
    \            return $l[0];\n        } else {\n            return $max_in_tail;\n\
    \        }\n    }\n}\n", "    $max = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n\
    \    }\n    return $max;\n}", "    return  ((count($l)==0) ? 0 : max($l));\n}\n",
  "    $max = $l[0];\n    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i]\
    \ > $max) {\n            $max = $l[$i];\n        }\n    }\n    return $max;\n\
    }\n", "    return $l[count($l) - 1];\n}\n", "    if (empty($l)) {\n        return;\n\
    \    }\n    $result = array_shift($l);\n    return max_element_helper($l, $result);\n\
    }\n", "    $size = count($l);\n    $max = 0;\n    for ($i = 0; $i < $size; $i++)\
    \ {\n        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n   \
    \ }\n    return $max;\n}\n\n$l = array(1, 2, 3);\necho \"Max element in array\
    \ l = array(1, 2, 3) is: \".max_element($l).\"\\n\";\n$l = array(5, 3, -5, 2,\
    \ -3, 3, 9, 0, 123, 1, -10);\necho \"Max element in array l = array(5, 3, -5,\
    \ 2, -3, 3, 9, 0, 123, 1, -10) is: \".max_element($l).\"\\n\";\n", "  $result\
    \ = $l[0];\n  foreach ($l as $el) {\n    if ($el > $result) $result = $el;\n \
    \ }\n  return $result;\n}\n", "  if (count($l) == 0) {\n    throw new Exception('cannot\
    \ call max_element() with an empty array');\n  }\n  $max = $l[0];\n  for ($i =\
    \ 1; $i < count($l); $i++) {\n    if ($l[$i] > $max) {\n      $max = $l[$i];\n\
    \    }\n  }\n  return $max;\n}\n", "    if (count($l) == 0) return;\n    $max\
    \ = $l[0];\n    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i] > $max)\
    \ $max = $l[$i];\n    }\n    return $max;\n}\n", "    if (count($l) == 0) {\n\
    \        return false;\n    }\n    $max = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n\
    \    }\n    return $max;\n}\n", "  // BEGIN (write your solution here)\n  if (count($l)\
    \ == 0) {\n    return null;\n  }\n  $maxElement = $l[0];\n  foreach ($l as $num)\
    \ {\n    if ($num > $maxElement) {\n      $maxElement = $num;\n    }\n  }\n  return\
    \ $maxElement;\n  // END\n}\n", "\treturn max($l);\n}\n", "    return max($l);\n\
    }\n", "\t$max = $l[0];\n\tforeach ($l as $i) {\n\t\tif ($i > $max) {\n\t\t\t$max\
    \ = $i;\n\t\t}\n\t}\n\treturn $max;\n}\n", "  $max = $l[0];\n  foreach ($l as\
    \ $e) {\n    if ($e > $max) $max = $e;\n  }\n  return $max;\n}\n", "    $max =\
    \ $l[0];\n    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i] > $max)\
    \ {\n            $max = $l[$i];\n        }\n    }\n    return $max;\n}\n", " \
    \ $x = 0;\n  $i = 0;\n  while ($i < count($l)) {\n    if ($l[$i] > $x) {\n   \
    \   $x = $l[$i];\n    }\n    $i++;\n  }\n  return $x;\n}\n", "    return array_reduce($l,\
    \ function($a, $b) {\n        return $a > $b ? $a : $b;\n    });\n}\n", "  //\
    \ Start with first element as the biggest.\n  $max = $l[0];\n  // Iterate through\
    \ array elements, skipping first.\n  for ($i = 1; $i < count($l); $i++) {\n  \
    \  // If new element is bigger, store it.\n    if ($l[$i] > $max) {\n      $max\
    \ = $l[$i];\n    }\n  }\n  // Return maximum element.\n  return $max;\n}\n", " \
    \ if (sizeof($l) == 0) {\n    return 0;\n  }\n  $m = $l[0];\n  for ($i = 1; $i\
    \ < sizeof($l); $i++) {\n    if ($l[$i] > $m) {\n      $m = $l[$i];\n    }\n \
    \ }\n  return $m;\n}\n", "    if (count($l) == 0) {\n        echo '>>> max_element(array())';\n\
    \        return NULL;\n    }\n    $max = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n\
    \    }\n    return $max;\n}\n", "  $acc = $l[0];\n  for ($i = 1; $i < count($l);\
    \ $i++) {\n    if ($l[$i] > $acc) {\n      $acc = $l[$i];\n    }\n  }\n  return\
    \ $acc;\n}\n", "    $max = $l[0];\n    for ($i = 1; $i < count($l); $i++) {\n\
    \        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n    }\n\
    \    return $max;\n}\n", "    $max = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n\
    \    }\n    return $max;\n}\n", "    if (count($l) === 0) {\n        return null;\n\
    \    }\n    $max = $l[0];\n    for ($i = 1; $i < count($l); $i++) {\n        if\
    \ ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n    }\n    return\
    \ $max;\n}\n", "    $max = $l[0];\n    for ($i = 1; $i < count($l); $i++) {\n\
    \        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n    }\n\
    \    return $max;\n}\n", "    $acc = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $acc) {\n            $acc = $l[$i];\n        }\n\
    \    }\n    return $acc;\n}\n", "  $m = $l[0];\n  foreach ($l as $i) {\n    if\
    \ ($i > $m) {\n      $m = $i;\n    }\n  }\n  return $m;\n}\n", "    $max = 0;\n\
    \    for ($i = 0; $i < count($l); $i++) {\n        if ($l[$i] > $max) {\n    \
    \        $max = $l[$i];\n        }\n    }\n    return $max;\n}\n", "  return $l[0]\
    \ < $l[1] ? max_element(array_slice($l, 1)) : $l[0];\n}\n\n$list = array(1, 2,\
    \ 3);\necho \"max_element([1, 2, 3]) should be 3: \" . max_element($list) . \"\
    \\n\";\n$list = array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10);\necho \"max_element([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]) should be 123: \" . max_element($list)\
    \ . \"\\n\";\n", "  // Implement me!\n}\n", "    $max = -999;\n    foreach ($l\
    \ as $item) {\n        if ($item > $max) {\n            $max = $item;\n      \
    \  }\n    }\n    return $max;\n}\n\n$s = [1, 2, 3];\necho max_element($s);\necho\
    \ \"<br>\";\n\n$s = [5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10];\necho max_element($s);\n\
    echo \"<br>\";\n", "\t// ...\n}\n", "  return $l ? max($l[0], max_element(array_slice($l,\
    \ 1))) : 0;\n}\n", "    $result = $l[0];\n    for ($i = 1; $i < count($l); $i++)\
    \ {\n        if ($l[$i] > $result) {\n            $result = $l[$i];\n        }\n\
    \    }\n    return $result;\n}\n", "\t$m = $l[0];\n\tfor ($i = 1; $i < count($l);\
    \ $i++) {\n\t\tif ($l[$i] > $m) {\n\t\t\t$m = $l[$i];\n\t\t}\n\t}\n\treturn $m;\n\
    }\n", "    if ($l == null) return -9999999999;\n    $a = $l[0];\n    $max = max_element(array_slice($l,\
    \ 1));\n    if ($a > $max) {\n        return $a;\n    } else {\n        return\
    \ $max;\n    }\n}", "    $max = $l[0];\n    for ($i = 1; $i < count($l); $i++)\
    \ {\n        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n   \
    \ }\n    return $max;\n}\n\n$l = array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10);\n\
    echo max_element($l) . \"\\n\";\n", "  $max = 0;\n  foreach ($l as $element) {\n\
    \    if ($element > $max) {\n      $max = $element;\n    }\n  }\n  return $max;\n\
    }\nprint(max_element(array(1, 2, 3)));\nprint(max_element(array(5, 3, -5, 2, -3,\
    \ 3, 9, 0, 123, 1, -10)));", "  if (count($l) == 0) {\n    return null;\n  }\n\
    \  $max = $l[0];\n  for ($i = 1; $i < count($l); $i++) {\n    if ($l[$i] > $max)\
    \ {\n      $max = $l[$i];\n    }\n  }\n  return $max;\n}\n", "    $m = $l[0];\n\
    \    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i] > $m) {\n      \
    \      $m = $l[$i];\n        }\n    }\n    return $m;\n}\n\necho max_element(array(1,\
    \ 2, 3)) . \"\\n\";\necho max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1,\
    \ -10)) . \"\\n\";", "\tif (count($l) == 0) {\n\t\treturn null;\n\t}\n\t$max =\
    \ $l[0];\n\tfor ($i = 1; $i < count($l); $i++) {\n\t\tif ($l[$i] > $max) {\n\t\
    \t\t$max = $l[$i];\n\t\t}\n\t}\n\treturn $max;\n}\n", "\t$max = $l[0];\n\tfor\
    \ ($i = 1; $i < count($l); $i++) {\n\t\tif ($l[$i] > $max) {\n\t\t\t$max = $l[$i];\n\
    \t\t}\n\t}\n\treturn $max;\n}\n", "    $max = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n\
    \    }\n    return $max;\n}\n", "    $m = $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $m) {\n            $m = $l[$i];\n        }\n \
    \   }\n    return $m;\n}\n", "\t$m = $l[0];\n\tforeach ($l as $e) {\n\t\tif ($e\
    \ > $m) {\n\t\t\t$m = $e;\n\t\t}\n\t}\n\treturn $m;\n}\n", "  // your code here\n\
    }\n", "  $max = null;\n  foreach ($l as $x) {\n    if ($max == null) {\n     \
    \ $max = $x;\n    } else if ($x > $max) {\n      $max = $x;\n    }\n  }\n  return\
    \ $max;\n}\n", "    $max = $l[0];\n    foreach ($l as $value) {\n        if ($value\
    \ > $max) {\n            $max = $value;\n        }\n    }\n    return $max;\n\
    }\n", "    $max = $l[0];\n    for ($i = 1; $i < count($l); $i++) {\n        if\
    \ ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n    }\n    return\
    \ $max;\n}\n", "    $max = $l[0];\n    foreach ($l as $e) {\n        if ($e >\
    \ $max) {\n            $max = $e;\n        }\n    }\n    return $max;\n}", " \
    \   $b = 0;\n    foreach ($l as $e) {\n        if ($e > $b) {\n            $b\
    \ = $e;\n        }\n    }\n    return $b;\n}", "    $a = $l[0];\n    for ($i =\
    \ 1; $i < count($l); $i++) {\n        if ($l[$i] > $a) {\n            $a = $l[$i];\n\
    \        }\n    }\n    return $a;\n}\n", "    return array_reduce($l, function($m,\
    \ $a) {\n        return max($m, $a);\n    });\n}\n", "  $max = $l[0];\n  for ($i\
    \ = 1; $i < count($l); $i++) {\n    if ($l[$i] > $max) {\n      $max = $l[$i];\n\
    \    }\n  }\n  return $max;\n}\n", "\tif (count($l) == 0) {\n\t\treturn NULL;\n\
    \t}\n\telse {\n\t\t$max = $l[0];\n\t\tfor ($i = 1; $i < count($l); $i++) {\n\t\
    \t\tif ($l[$i] > $max) {\n\t\t\t\t$max = $l[$i];\n\t\t\t}\n\t\t}\n\t\treturn $max;\n\
    \t}\n}\n", "\tforeach ($l as $value) {\n\t\tif (!isset($max)) {\n\t\t\t$max =\
    \ $value;\n\t\t} else {\n\t\t\tif ($value > $max) {\n\t\t\t\t$max = $value;\n\t\
    \t\t}\n\t\t}\n\t}\n\treturn $max;\n}\n", "    $e = $l[0];\n    foreach ($l as\
    \ $x) {\n        if ($x > $e) {\n            $e = $x;\n        }\n    }\n    return\
    \ $e;\n}\n", "\treturn array_reduce($l, function($a, $b) {\n\t\treturn max($a,\
    \ $b);\n\t});\n}\n", "  return 0;\n}\n", "\t$max = $l[0];\n\tforeach ($l as $el)\
    \ {\n\t\tif ($el > $max) {\n\t\t\t$max = $el;\n\t\t}\n\t}\n\treturn $max;\n}\n",
  "  if (count($l) == 0) {\n    return NULL;\n  }\n  $max = $l[0];\n  for ($i = 1;\
    \ $i < count($l); $i++) {\n    if ($l[$i] > $max) {\n      $max = $l[$i];\n  \
    \  }\n  }\n  return $max;\n}\n", "\tif(sizeof($l) == 0) {\n\t\treturn NULL;\n\t\
    }\n\t$max = $l[0];\n\tfor($i = 1; $i < sizeof($l); $i++) {\n\t\tif($l[$i] > $max)\
    \ {\n\t\t\t$max = $l[$i];\n\t\t}\n\t}\n\treturn $max;\n}", "    return max($l);\n\
    }\n", "  $max = 0;\n  foreach ($l as $element) {\n    if ($element > $max) {\n\
    \      $max = $element;\n    }\n  }\n  return $max;\n}\n", "  $r = NULL;\n  foreach\
    \ ($l as $e) {\n    if ($r === NULL) {\n      $r = $e;\n    } else if ($e > $r)\
    \ {\n      $r = $e;\n    }\n  }\n  return $r;\n}\n", "    return max($l);\n}",
  "\tif (count($l) == 0)\n\t\treturn 0;\n\t$m = $l[0];\n\tfor ($i = 1; $i < count($l);\
    \ $i++)\n\t\tif ($l[$i] > $m)\n\t\t\t$m = $l[$i];\n\treturn $m;\n}\n", "    $r\
    \ = $l[0];\n    foreach ($l as $e) {\n        if ($e > $r) {\n            $r =\
    \ $e;\n        }\n    }\n    return $r;\n}", "  return $l[count($l) - 1];\n}\n",
  "\t$max = $l[0];\n\tfor ($i = 1; $i < count($l); $i++) {\n\t\tif ($l[$i] > $max)\
    \ {\n\t\t\t$max = $l[$i];\n\t\t}\n\t}\n\treturn $max;\n}\n", "  if (count($l)\
    \ == 0) {\n    return NULL;\n  } else {\n    $max = $l[0];\n    for ($i = 1; $i\
    \ < count($l); $i++) {\n      if ($l[$i] > $max) {\n        $max = $l[$i];\n \
    \     }\n    }\n    return $max;\n  }\n}\n", "    if (empty($l)) return -1;\n\
    \    $max = $l[0];\n    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i]\
    \ > $max) {\n            $max = $l[$i];\n        }\n    }\n    return $max;\n}",
  "    $result = null;\n    foreach ($l as $x) {\n        if ($result == null || $x\
    \ > $result) {\n            $result = $x;\n        }\n    }\n    return $result;\n\
    }\n", "    $max = $l[0];\n    for ($i = 1; $i < count($l); $i++) {\n        if\
    \ ($l[$i] > $max) {\n            $max = $l[$i];\n        }\n    }\n    return\
    \ $max;\n}\n", "    $max = $l[0];\n    foreach ($l as $i) {\n        if ($i >\
    \ $max) {\n            $max = $i;\n        }\n    }\n    return $max;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

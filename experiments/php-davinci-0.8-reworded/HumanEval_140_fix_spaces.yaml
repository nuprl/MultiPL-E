name: HumanEval_140_fix_spaces
language: php
prompt: "<?php\n// Given a string text, replace all spaces in it with underscores,\
  \ \n// and if a string has more than 2 consecutive spaces, \n// then replace all\
  \ consecutive spaces with - \n// >>> fix_spaces(\" Example\")\n// \"Example\"\n\
  // >>> fix_spaces(\" Example 1\")\n// \"Example_1\"\n// >>> fix_spaces(\" Example\
  \ 2\")\n// \"_Example_2\"\n// >>> fix_spaces(\" Example 3\")\n// \"_Example-3\"\n\
  function fix_spaces($text) {\n"
tests: "function candidate(...$args) {\n    return fix_spaces(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(\"Example\") !== \"Example\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"Mudasir Hanif \") !== \"Mudasir_Hanif_\"\
  ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Yellow Yellow\
  \  Dirty  Fellow\") !== \"Yellow_Yellow__Dirty__Fellow\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"Exa   mple\") !== \"Exa-mple\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"   Exa 1 2 2 mple\") !==\
  \ \"-Exa_1_2_2_mple\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $text = preg_replace('!\\s+!', ' ', $text);\n    $text = str_replace('\
    \ ', '_', $text);\n    return $text;\n}\n\necho fix_spaces(\"    Example\");\n\
    echo \"\\n\";\necho fix_spaces(\" Example 1\");\necho \"\\n\";\necho fix_spaces(\"\
    \ Example 2\");\necho \"\\n\";\necho fix_spaces(\" Example 3\");\necho \"\\n\"\
    ;", "    // TODO implement this function\n    $text = trim($text);\n    $text\
    \ = preg_replace('/\\s+/', '-', $text);\n    $text = str_replace(' ', '_', $text);\n\
    \    return $text;\n}\n", "    $tmp = preg_replace('/\\s{2,}/', '-', $text);\n\
    \    return preg_replace('/\\s/', '_', $tmp);\n}\n$result = fix_spaces(\"Example\"\
    );\nprint $result;", "    return preg_replace('/\\s{2,}/', '-', preg_replace('/\\\
    s/', '_', $text));\n}\n", "    $text = str_replace(\" \", \"_\", $text);\n   \
    \ $text = str_replace(\"  \", \"_\", $text);\n    $text = str_replace(\"__\",\
    \ \"-\", $text);\n    $text = str_replace(\"__\", \"-\", $text);\n    $text =\
    \ str_replace(\"__\", \"-\", $text);\n    $text = str_replace(\"--\", \"-\", $text);\n\
    \    $text = str_replace(\"--\", \"-\", $text);\n    $text = str_replace(\"--\"\
    , \"-\", $text);\n    $text = str_replace(\"--\", \"-\", $text);\n    $text =\
    \ str_replace(\"--\", \"-\", $text);\n    $text = str_replace(\"--\", \"-\", $text);\n\
    \    $text = str_replace(\"--\", \"-\", $text);\n    $text = str_replace(\"--\"\
    , \"-\", $text);\n    $text = str_replace(\"--\", \"-\", $text);\n    $text =\
    \ str_replace(\"--\", \"-\", $text);\n    $text = str_replace(\"--\", \"-\", $text);\n\
    \    $text = str_replace(\"--\", \"-\", $text);\n    $text = str_replace(\"--\"\
    , \"-\", $text);\n    $text = str_replace(\"--\", \"-\", $text);\n    $text =\
    \ str_replace(\"--\", \"-\", $text);\n    $text = str_replace(\"--\", \"-\", $text);\n\
    \    $text = str_replace(\"--\", \"-\", $text);\n    $text = str_replace(\"--\"\
    , \"-\", $text);\n    $text = str_replace(\"--\", \"-\", $text);\n    $text =\
    \ str_replace(\"--\", \"-\", $text);\n    $text = str_replace(\"--\", \"-\", $text);\n\
    \    $text = str_replace(\"--\", \"-\", $text);\n    $text = str_replace(\"--\"\
    , \"-\", $text);\n    $text = str_replace(\"--\", \"-\", $text);\n    $text =\
    \ str_replace(\"--\", \"-\", $text);\n    $text = str_replace(\"--\", \"-\", $text);\n\
    \    $text = str_replace(\"--\", \"-\", $text);\n", "    $text = str_replace(\"\
    \ \", \"_\", $text);\n    $text = str_replace(\"__\", \"-\", $text);\n    return\
    \ $text;\n}\n", "    $result = str_replace(\" \", \"_\", $text);\n    $result\
    \ = str_replace(\"___\", \"-\", $result);\n    $result = str_replace(\"__\", \"\
    -\", $result);\n    return $result;\n}\n\necho fix_spaces(\" Example 1\");\necho\
    \ \"\\n\";\necho fix_spaces(\" Example 2\");\necho \"\\n\";\necho fix_spaces(\"\
    \ Example 3\");\necho \"\\n\";", "    return preg_replace('/\\s\\s+/', '_', $text);\n\
    }\n", "  if (count(explode(\"  \", $text)) > 2) {\n    return str_replace(\" \
    \ \", \"-\", str_replace(\" \", \"_\", $text));\n  } else {\n    return str_replace(\"\
    \ \", \"_\", $text);\n  }\n}\n\necho fix_spaces(\" Example\");\necho fix_spaces(\"\
    \ Example 1\");\necho fix_spaces(\" Example 2\");\necho fix_spaces(\" Example\
    \ 3\");", "\t$array = array(\" \", \"   \", \"    \");\n\t$array2 = array(\"_\"\
    , \"_\", \"_\");\n\t$array3 = array(\"_\", \"-\");\n\t$text = str_replace($array,\
    \ $array2, $text);\n\t$text = str_replace($array2, $array3, $text);\n\treturn\
    \ $text;\n}\n", "    // Write your code here\n    $text = str_replace(\" \", \"\
    _\", $text);\n    $text = str_replace(\"__\", \"-\", $text);\n    return $text;\n\
    }\n", "    $result = str_replace(\" \", \"_\", $text);\n    $res = explode(\"\
    _\", $result);\n    $count = count($res);\n    if($count <= 3) {\n        return\
    \ $result;\n    }\n    else {\n        $result = str_replace(\"_\", \"-\", $result);\n\
    \        return $result;\n    }\n}\n\necho fix_spaces(\" Example\") . PHP_EOL;\n\
    echo fix_spaces(\" Example 1\") . PHP_EOL;\necho fix_spaces(\" Example 2\") .\
    \ PHP_EOL;\necho fix_spaces(\" Example 3\") . PHP_EOL;\necho fix_spaces(\" Example\
    \ 4\") . PHP_EOL;\necho fix_spaces(\" Example 5\") . PHP_EOL;", "    return preg_replace(\"\
    /\\s{2,}/\", \"-\", str_replace(\" \", \"_\", $text));\n}\necho fix_spaces(\"\
    \ Example\") . \"\\n\";\necho fix_spaces(\" Example 1\") . \"\\n\";\necho fix_spaces(\"\
    \ Example 2\") . \"\\n\";\necho fix_spaces(\" Example 3\") . \"\\n\";", "  $text\
    \ = preg_replace('/ {2,}/', '-', $text);\n  $text = preg_replace('/ /', '_', $text);\n\
    \  return $text;\n}\n\necho fix_spaces(\" Example\") . \"<br>\";\necho fix_spaces(\"\
    \ Example 1\") . \"<br>\";\necho fix_spaces(\" Example 2\") . \"<br>\";\necho\
    \ fix_spaces(\" Example 3\") . \"<br>\";", "\t$wordArray = explode(\" \", $text);\n\
    \t$wordArray = array_map('trim', $wordArray);\n\t$wordArray = array_filter($wordArray);\n\
    \t$wordArray = array_values($wordArray);\n\tfor ($i=0; $i < count($wordArray);\
    \ $i++) { \n\t\t$wordArray[$i] = str_replace(\" \", \"_\", $wordArray[$i]);\n\t\
    }\n\t$string = implode(\" \", $wordArray);\n\treturn $string;\n}\n", "  // Write\
    \ your code here\n  // To print results to the standard output you can use print\n\
    \  // Example: print \"Hello world!\";\n\n}\n", "  // your code goes here\n  return\
    \ str_replace(\"  \", \"-\", str_replace(\" \", \"_\", trim($text)));\n}\n\necho\
    \ fix_spaces(\" Example\") . \"\\n\";\necho fix_spaces(\" Example 1\") . \"\\\
    n\";\necho fix_spaces(\" Example 2\") . \"\\n\";\necho fix_spaces(\" Example 3\"\
    ) . \"\\n\";\necho fix_spaces(\" Example 4\") . \"\\n\";\necho fix_spaces(\" Example\
    \ 5\") . \"\\n\";\necho fix_spaces(\" Example 6\") . \"\\n\";\necho fix_spaces(\"\
    \ Example 7\") . \"\\n\";\n", "    $text = trim($text);\n    $text = preg_replace('/\\\
    s+/', '_', $text);\n    $text = preg_replace('/_/', ' ', $text);\n    $text =\
    \ preg_replace('/\\s{2,}/', '-', $text);\n    return $text;\n}\n", "\treturn preg_replace(\"\
    /[\\s]{2,}/\", '-', str_replace(' ', '_', $text));\n}\n", "\t$text = preg_replace('/\\\
    s+/', '_', $text);\n\t$text = preg_replace('/_+/', '-', $text);\n\treturn $text;\n\
    }\n\nprint_r(fix_spaces(\" Example\"));\nprint_r(fix_spaces(\" Example 1\"));\n\
    print_r(fix_spaces(\" Example 2\"));\nprint_r(fix_spaces(\" Example 3\"));", " \
    \   $text = trim($text);\n    $text = str_replace(\" \", \"_\", $text);\n    $text\
    \ = preg_replace(\"/__+/\", \"_\", $text);\n    $text = preg_replace(\"/_+/\"\
    , \"-\", $text);\n    return $text;\n}\n", "    $r = str_replace(\" \", \"_\"\
    , $text);\n    $r = str_replace(\"__\", \"-\", $r);\n    $r = str_replace(\"_\"\
    , \" \", $r);\n    $r = trim($r);\n    return $r;\n}\necho fix_spaces(\" Example\"\
    ) . \"<br>\";\necho fix_spaces(\" Example 1\") . \"<br>\";\necho fix_spaces(\"\
    \ Example 2\") . \"<br>\";\necho fix_spaces(\" Example 3\") . \"<br>\";", "  \
    \  $count = substr_count($text, ' ');\n    echo $count;\n    if ($count > 1) {\n\
    \        $text = str_replace('  ', '-', $text);\n    }\n    $text = str_replace('\
    \ ', '_', $text);\n    return $text;\n}\necho fix_spaces(\" Example 2\");", " \
    \   $count = substr_count($text, ' ');\n    for ($i = 0; $i < $count; $i++) {\n\
    \        if ($i <= 1) {\n            $text = str_replace(' ', '_', $text, $i);\n\
    \        } else {\n            $text = str_replace(' ', '-', $text, $i);\n   \
    \     }\n    }\n    return $text;\n}\n\necho fix_spaces(\" Example\") . PHP_EOL;\n\
    echo fix_spaces(\" Example 1\") . PHP_EOL;\necho fix_spaces(\" Example 2\") .\
    \ PHP_EOL;\necho fix_spaces(\" Example 3\") . PHP_EOL;", "\t$newText = \"\";\n\
    \tfor ($i = 0; $i < strlen($text); $i++) {\n\t\tif ($text[$i] == \" \") {\n\t\t\
    \tif ($i == 0) {\n\t\t\t\t$newText = $newText . $text[$i];\n\t\t\t} else {\n\t\
    \t\t\tif ($newText[strlen($newText) - 1] == \"_\") {\n\t\t\t\t\t$newText = $newText\
    \ . $text[$i];\n\t\t\t\t} else {\n\t\t\t\t\t$newText = $newText . \"_\";\n\t\t\
    \t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t$newText = $newText . $text[$i];\n\t\t}\n\t\
    }\n\treturn $newText;\n}\n\necho fix_spaces(\" Example\");\necho \"<br>\";\necho\
    \ fix_spaces(\" Example 1\");\necho \"<br>\";\necho fix_spaces(\" Example 2\"\
    );\necho \"<br>\";\necho fix_spaces(\" Example 3\");\necho \"<br>\";", "    $arr\
    \ = explode(\" \", $text);\n    $arr = array_filter($arr);\n    if (count($arr)\
    \ <= 2) {\n        return implode(\"_\", $arr);\n    } else {\n        $len =\
    \ strlen($arr[0]);\n        $arr[0] = \"_\".$arr[0];\n        for ($i=1; $i <\
    \ count($arr); $i++) { \n            if (strlen($arr[$i]) != $len) {\n       \
    \         $arr[$i] = \"_\".$arr[$i];\n                $len = strlen($arr[$i]);\n\
    \            } else {\n                $arr[$i] = \"-\".$arr[$i];\n          \
    \  }\n        }\n        return implode(\"\", $arr);\n    }\n}\n\necho fix_spaces(\"\
    Example\").\"\\n\";\necho fix_spaces(\"Example 1\").\"\\n\";\necho fix_spaces(\"\
    Example 2\").\"\\n\";\necho fix_spaces(\"Example 3\").\"\\n\";\necho fix_spaces(\"\
    Example 4\").\"\\n\";\necho fix_spaces(\"Example 5\").\"\\n\";\necho fix_spaces(\"\
    Example 6\").\"\\n\";\necho fix_spaces(\"Example 7\").\"\\n\";\necho fix_spaces(\"\
    Example 8\").\"\\n\";", "    if (is_string($text)) {\n        $replacedText =\
    \ preg_replace('!\\s+!', ' ', $text);\n        $replacedText = preg_replace('!\
    \ ', '_', $replacedText);\n        $replacedText = preg_replace('!_+!', '-', $replacedText);\n\
    \        $replacedText = preg_replace('!^-+!', '', $replacedText);\n        $replacedText\
    \ = preg_replace('!-+$!', '', $replacedText);\n        return $replacedText;\n\
    \    } else {\n        echo 'Invalid input type.';\n    }\n}\n", "    $text =\
    \ str_replace(\" \", \"_\", $text);\n    $text = str_replace(\"__\", \"_\", $text);\n\
    \    $text = str_replace(\"__\", \"-\", $text);\n    return $text;\n}\n\necho\
    \ fix_spaces(\" Example 3\") . \"\\n\";\n", "\t$text = preg_replace('/ /', '_',\
    \ $text);\n\t$text = preg_replace('/__+/', '-', $text);\n\treturn $text;\n}\n\
    echo fix_spaces(\" Example\") . \"<br>\";\necho fix_spaces(\" Example 1\") . \"\
    <br>\";\necho fix_spaces(\" Example 2\") . \"<br>\";\necho fix_spaces(\" Example\
    \ 3\") . \"<br>\";", "    // // $text = str_replace(' ', '_', $text);\n    //\
    \ // $text = str_replace('  ', '_', $text);\n    // // $text = str_replace(' \
    \  ', '-', $text);\n    // // return $text;\n    // return str_replace([' ', '\
    \  ', '   '], ['_', '_', '-'], $text);\n    return preg_replace(['/ {2,}/', '/\
    \ /'], ['-', '_'], $text);\n}\n\nprint fix_spaces(\" Example\");\nprint '<br>';\n\
    print fix_spaces(\" Example 1\");\nprint '<br>';\nprint fix_spaces(\" Example\
    \ 2\");\nprint '<br>';\nprint fix_spaces(\" Example 3\");\nprint '<br>';\nprint\
    \ fix_spaces(\" Example    3\");\nprint '<br>';\nprint fix_spaces(\" Example \
    \   3     \");\nprint '<br>';\nprint fix_spaces(\" Example    3      2   1\");\n\
    print '<br>';\nprint fix_spaces(\" Example    3      2   1 \");\nprint '<br>';",
  "    $text = trim($text);\n    $text = str_replace(\" \", \"_\", $text);\n    return\
    \ $text;\n}\n\n$text = \" Example\";\necho fix_spaces($text) . \"<br>\";\n\n$text\
    \ = \" Example 1\";\necho fix_spaces($text) . \"<br>\";\n\n$text = \" Example\
    \ 2\";\necho fix_spaces($text) . \"<br>\";\n\n$text = \" Example 3\";\necho fix_spaces($text)\
    \ . \"<br>\";\n\n$text = \" Example 4\";\necho fix_spaces($text) . \"<br>\";\n\
    \n$text = \" Example 5\";\necho fix_spaces($text) . \"<br>\";\n\n$text = \" Example\
    \ 6\";\necho fix_spaces($text) . \"<br>\";\n\n$text = \" Example 7\";\necho fix_spaces($text)\
    \ . \"<br>\";\n\n$text = \" Example 8\";\necho fix_spaces($text) . \"<br>\";\n\
    \n$text = \" Example 9\";\necho fix_spaces($text) . \"<br>\";\n\n$text = \" Example\
    \ 10\";\necho fix_spaces($text) . \"<br>\";\n\n$text = \" Example 11\";\necho\
    \ fix_spaces($text) . \"<br>\";\n\n$text = \" Example 12\";\necho fix_spaces($text)\
    \ . \"<br>\";\n\n$text = \" Example 13\";\necho fix_spaces($text) . \"<br>\";\n\
    \n$text = \" Example 14\";\necho fix_spaces($text) . \"<br>\";\n\n$text = \" Example\
    \ 15\";\necho fix_spaces($text) . \"<br>\";\n\n$text = \" Example 16\";\necho\
    \ fix_spaces($text) . \"<br>\";\n\n$text = \" Example 17\";\necho fix_spaces($text)\
    \ . \"<br>\";\n\n$text = \" Example 18\";\necho fix_spaces($text) . \"<br>\";\n\
    \n$text = \" Example 19\";\necho fix_spaces($text) . \"<br>\";\n\n$text = \" Example\
    \ 20\";\necho fix_spaces($text) . \"<br", "\t$text = trim($text);\n\t$text = preg_replace('/\\\
    s{2,}/', '_', $text);\n\t$text = preg_replace('/\\s/', '-', $text);\n\treturn\
    \ $text;\n}\necho fix_spaces(\" Example 4\");", "    $replace_underscore = str_replace(\"\
    \ \", \"_\", $text);\n    $replace_hyphen = str_replace(\"  \", \"-\", $replace_underscore);\n\
    \    $result = str_replace(\" _\", \"_\", $replace_hyphen);\n    return $result;\n\
    }\n\necho fix_spaces(\" Example\") . PHP_EOL;\necho fix_spaces(\" Example 1\"\
    ) . PHP_EOL;\necho fix_spaces(\" Example 2\") . PHP_EOL;\necho fix_spaces(\" Example\
    \ 3\") . PHP_EOL;\n", "    return preg_replace('/ {2,}/', '-', preg_replace('/\
    \ /', '_', $text));\n}\n\necho \"Example: \" . fix_spaces(\" Example 3\") . PHP_EOL;",
  "\t$text = preg_replace('/\\s+/', '_', $text);\n\t$text = preg_replace('/_/', '\
    \ ', $text, 1);\n\treturn $text;\n}", "    return preg_replace('/\\s\\s+/', '-',\
    \ preg_replace('/ /', '_', $text));\n}\n\necho fix_spaces(\" Example\");", "\t\
    // $text = preg_replace('/[ ]{2,}/', '-', $text);\n\t$text = preg_replace('/\\\
    s{2,}/', '-', $text);\n\t$text = str_replace(' ', '_', $text);\n\treturn $text;\n\
    }\n\n$text = ' Example 3';\necho fix_spaces($text);\necho '<br>';\n$text = ' Example\
    \ 2';\necho fix_spaces($text);\necho '<br>';\n$text = ' Example 1';\necho fix_spaces($text);\n\
    echo '<br>';\n$text = ' Example';\necho fix_spaces($text);\necho '<br>';\n", "\t\
    $result = preg_replace('/(?:\\s{2,})/', '-', $text);\n\t$result = preg_replace('/(?:\\\
    s)/', '_', $result);\n\treturn $result;\n}\n", "\t$text = str_replace(\" \", \"\
    _\", $text);\n\t$arr = preg_split(\"/_/\", $text);\n\treturn join(\"_\", $arr);\n\
    }\n\necho fix_spaces(\" Example \");\necho \"\\n\";\necho fix_spaces(\" Example\
    \ 1\");\necho \"\\n\";\necho fix_spaces(\" Example 2\");\necho \"\\n\";\necho\
    \ fix_spaces(\" Example 3\");\necho \"\\n\";\n", "  $prev_space = false;\n  $curr_space\
    \ = false;\n  $consecutive_spaces = 0;\n  $result = \"\";\n  for ($i = 0; $i <\
    \ strlen($text); $i++) {\n    $prev_space = $curr_space;\n    $curr_space = $text[$i]\
    \ == \" \";\n    if ($curr_space && $prev_space) {\n      $consecutive_spaces++;\n\
    \    } else {\n      $consecutive_spaces = 0;\n    }\n    if ($curr_space && $consecutive_spaces\
    \ < 2) {\n      $result .= \"_\";\n    } else if ($curr_space && $consecutive_spaces\
    \ == 2) {\n      $result .= \"-\";\n    } else {\n      $result .= $text[$i];\n\
    \    }\n  }\n  return $result;\n}\n\necho fix_spaces(\"Example\") . PHP_EOL;\n\
    echo fix_spaces(\"Example 1\") . PHP_EOL;\necho fix_spaces(\"Example  2\") . PHP_EOL;\n\
    echo fix_spaces(\"Example   3\") . PHP_EOL;", "    $text = preg_replace('/\\s{2,}/',\
    \ '-', $text);\n    $text = preg_replace('/\\s/', '_', $text);\n    return $text;\n\
    }\n$text=\" Example 3\";\necho fix_spaces($text);\necho \"\\n\";", "    $result\
    \ = '';\n    $count_space = 0;\n    for ($i = 0; $i < strlen($text); $i++) {\n\
    \        if ($text[$i] == ' ') {\n            $count_space++;\n            if\
    \ ($count_space == 1) {\n                $result .= '_';\n            } elseif\
    \ ($count_space == 2) {\n                $result .= '_';\n            } else {\n\
    \                $result .= '-';\n            }\n        } else {\n          \
    \  $result .= $text[$i];\n            $count_space = 0;\n        }\n    }\n  \
    \  return $result;\n}\n\necho fix_spaces(\" Example 3\");", "\t$text = preg_replace('/\\\
    s+/', '_', $text);\n\t$text = preg_replace('/_$/', '', $text);\n\t$text = preg_replace('/^_/',\
    \ '', $text);\n\t$text = preg_replace('/_+/', '-', $text);\n\t$text = preg_replace('/-$/',\
    \ '', $text);\n\t$text = preg_replace('/^-/', '', $text);\n\treturn $text;\n}\n",
  "    $string = str_replace(' ', '_', $text);\n    $n = strpos($string, '_');\n \
    \   if ($n != -1) {\n        $count = 1;\n        $str = '';\n        for ($i\
    \ = $n; $i < strlen($string); $i++) {\n            if ($string[$i] == '_') {\n\
    \                $count++;\n            } else {\n                $count = 1;\n\
    \            }\n            if ($count == 3) {\n                $str .= '-';\n\
    \                $count = 1;\n            } else {\n                $str .= $string[$i];\n\
    \            }\n        }\n        return $str;\n    } else {\n        return\
    \ $string;\n    }\n}\n\necho fix_spaces(\" Example 1\");\necho \"<br>\";\necho\
    \ fix_spaces(\" Example 2\");\necho \"<br>\";\necho fix_spaces(\" Example 3\"\
    );\necho \"<br>\";\necho fix_spaces(\" Example\");\necho \"<br>\";\necho fix_spaces(\"\
    \ Example   4\");\necho \"<br>\";\necho fix_spaces(\" Example   5\");\necho \"\
    <br>\";\necho fix_spaces(\" Example   6\");\necho \"<br>\";", "    $spaces = 0;\n\
    \    $textArray = str_split($text);\n    $textArraySize = count($textArray);\n\
    \    $newText = \"\";\n    for ($i = 0; $i < $textArraySize; $i++) {\n       \
    \ if ($textArray[$i] == \" \") {\n            $spaces++;\n            if ($spaces\
    \ > 2) {\n                $newText .= \"-\";\n            } else {\n         \
    \       $newText .= \"_\";\n            }\n        } else {\n            $spaces\
    \ = 0;\n            $newText .= $textArray[$i];\n        }\n    }\n    return\
    \ $newText;\n}", "\t\n\t$text = preg_replace('/\\s+/', '_', $text);\n\t\n\t$text\
    \ = preg_replace('/_+/', '-', $text);\n\t\n\treturn $text;\n}\n\n", "\n}", " \
    \   $text = trim($text);\n    $text = preg_replace('/\\s+/', ' ', $text);\n  \
    \  $text = str_replace(' ', '_', $text);\n    return $text;\n}\n$text = fix_spaces(\"\
    \ Example 3\");\necho $text;", "    return preg_replace('/[\\s]{2,}/', '-', preg_replace('/[\\\
    s]/', '_', $text));\n}\n", "\t$text = trim($text);\n\t$text = str_replace(\" \"\
    , \"_\", $text);\n\t$text = preg_replace(\"/([\\s_]{2,})/\", \"-\", $text);\n\t\
    return $text;\n}\n\n$text = \" Example\";\necho fix_spaces($text);", "    $text\
    \ = trim($text);\n    $text = str_replace(' ', '_', $text);\n    $text = preg_replace('/_{2,}/',\
    \ '-', $text);\n    return $text;\n}\n\n$text = \" Example\";\n$newText = fix_spaces($text);\n\
    echo($newText);", "    $text = trim($text);\n    $text = preg_replace('/\\s+/',\
    \ '_', $text);\n    $text = preg_replace('/_+/', '-', $text);\n    return $text;\n\
    }\n", "    $text = str_replace(\" \", \"_\", $text);\n    $text = str_replace(\"\
    __\", \"-\", $text);\n    $text = str_replace(\"_\", \" \", $text);\n    return\
    \ trim($text);\n}\necho fix_spaces(\" Example\");\necho fix_spaces(\" Example\
    \ 1\");\necho fix_spaces(\" Example 2\");\necho fix_spaces(\" Example 3\");\n\
    echo fix_spaces(\" Example 4\");\necho fix_spaces(\" Example 5\");\necho fix_spaces(\"\
    \ Example 6\");\necho fix_spaces(\" Example 7\");\necho fix_spaces(\" Example\
    \ 8\");\necho fix_spaces(\" Example 9\");\necho fix_spaces(\" Example 10\");\n\
    echo fix_spaces(\" Example 11\");\necho fix_spaces(\" Example 12\");", "\t$text\
    \ = trim($text);\n\t$text = str_replace(\" \", \"_\", $text);\n\t$text = preg_replace(\"\
    /_{2,}/\", \"_\", $text);\n\t$text = preg_replace(\"/_/\", \"-\", $text);\n\t\
    return $text;\n}\n", "    $text = trim($text);\n    $text = str_replace(' ', '_',\
    \ $text);\n    $arr = explode('_', $text);\n    if (sizeof($arr) > 2) {\n    \
    \    $text = implode('-', $arr);\n    }\n    return $text;\n}\n\necho fix_spaces(\"\
    \ Example\") . \"\\n\";\necho fix_spaces(\" Example 1\") . \"\\n\";\necho fix_spaces(\"\
    \ Example 2\") . \"\\n\";\necho fix_spaces(\" Example 3\") . \"\\n\";\n", "\t\
    $text = trim($text);\n\t$text = str_replace(\" \", \"_\", $text);\n\t$text = str_replace(\"\
    _ _ _\", \"-\", $text);\n\t$text = str_replace(\"_ _\", \"-\", $text);\n\treturn\
    \ $text;\n}\n\necho fix_spaces(\" Example\") . \"\\n\";\necho fix_spaces(\" Example\
    \ 1\") . \"\\n\";\necho fix_spaces(\" Example 2\") . \"\\n\";\necho fix_spaces(\"\
    \ Example 3\") . \"\\n\";\n", "    $text = str_replace(\" \", \"_\", $text);\n\
    \    $text = str_replace(\"__\", \"-\", $text);\n    $text = str_replace(\"__\"\
    , \"-\", $text);\n    return $text;\n}", "    $text = ltrim($text);\n    $result\
    \ = preg_replace('/[\\s]+/', '_', $text);\n    return $result;\n}\necho fix_spaces(\"\
    Example\");\necho \"\\n\";\necho fix_spaces(\"Example 1\");\necho \"\\n\";\necho\
    \ fix_spaces(\"Example  2\");\necho \"\\n\";\necho fix_spaces(\"Example   3\"\
    );\necho \"\\n\";", "    return str_replace(\" \", \"_\", preg_replace(\"/\\s{2,}/\"\
    , \"-\", trim($text)));\n}\n\necho fix_spaces(\" Example\");\necho fix_spaces(\"\
    \ Example 1\");\necho fix_spaces(\" Example 2\");\necho fix_spaces(\" Example\
    \ 3\");\n\necho \"<br>\";\necho \"<br>\";\necho \"<br>\";\necho \"<br>\";\n",
  "    $text = str_replace(\" \", \"_\", $text);\n    $text = str_replace(\"  \",\
    \ \"_\", $text);\n    $text = str_replace(\"  \", \"-\", $text);\n    return $text;\n\
    }\n\necho fix_spaces(\" Example\");\necho fix_spaces(\" Example 1\");\necho fix_spaces(\"\
    \ Example 2\");\necho fix_spaces(\" Example 3\");", "  $text = trim($text);\n\
    \  $c = substr_count($text, \" \");\n  if ($c == 0) return $text;\n  $text = str_replace(\"\
    \ \", \"_\", $text);\n  $text = str_replace(\"_ \", \"_\", $text);\n  if ($c ==\
    \ 1) return $text;\n  $text = str_replace(\"__\", \"-\", $text);\n  return $text;\n\
    }\necho fix_spaces(\" Example\") . \"\\n\";\necho fix_spaces(\" Example 1\") .\
    \ \"\\n\";\necho fix_spaces(\" Example 2\") . \"\\n\";\necho fix_spaces(\" Example\
    \ 3\") . \"\\n\";", "    // Write your code here\n    // To print results to the\
    \ standard output you can use print\n    // Example: print \"Hello world!\";\n\
    \    if(strlen($text) == 0) {\n        return $text;\n    }\n    $text = trim($text);\n\
    \    $len = strlen($text);\n    $space_count = 0;\n    $result = '';\n    for($i\
    \ = 0; $i < $len; $i++) {\n        if($text[$i] != ' ') {\n            $result\
    \ .= $text[$i];\n            $space_count = 0;\n        } else {\n           \
    \ $space_count++;\n            if($space_count == 1) {\n                $result\
    \ .= '_';\n            } else if($space_count == 2) {\n                $result\
    \ .= '-';\n            }\n        }\n    }\n    return $result;\n}\n", "    $new_text\
    \ = '';\n    $all_spaces = preg_split('/ /', $text);\n    foreach ($all_spaces\
    \ as $one_space) {\n        if (!$one_space) {\n            continue;\n      \
    \  }\n        if ($new_text == '') {\n            $new_text = $one_space;\n  \
    \      } else {\n            $new_text .= '_';\n            $new_text .= $one_space;\n\
    \        }\n    }\n    return $new_text;\n}", "    $text = str_replace(\" \",\
    \ \"_\", $text);\n    $text = str_replace(\"__\", \"-\", $text);\n    $text =\
    \ str_replace(\"__\", \"_\", $text);\n    return $text;\n}\necho fix_spaces(\"\
    \ Example 2\");\necho \"\\n\";", "  $text = preg_replace('/\\s+/', '_', $text);\n\
    \  $text = preg_replace('/_+/', '-', $text);\n  return $text;\n}\n", "    $data\
    \ = str_replace(\" \", \"_\", $text);\n    $patterns = array(\n        \"/_+/\"\
    \n    );\n    $replacements = array(\n        \"-\"\n    );\n    return preg_replace($patterns,\
    \ $replacements, $data);\n}", "  $regex = '#\\s{2,}#';\n  return preg_replace($regex,\
    \ '-', str_replace(' ', '_', trim($text)));\n}\n", "\t//return $text;\n\t$result\
    \ = preg_replace('/[ ]{2,}/','_', $text);\n\t$result = preg_replace('/_/','-',\
    \ $result);\n\treturn $result;\n}\n\necho fix_spaces(\" Example 4\");", "\t$text\
    \ = preg_replace('/\\s{1,}/', '_', $text);\n\treturn $text;\n}\n\necho fix_spaces(\"\
    \ Example\");\necho fix_spaces(\" Example 1\");\necho fix_spaces(\" Example 2\"\
    );\necho fix_spaces(\" Example 3\");", "    $text = trim($text);\n    $text =\
    \ preg_replace('/\\s{2,}/', '-', $text);\n    $text = preg_replace('/\\s/', '_',\
    \ $text);\n    return $text;\n}\n\necho fix_spaces(\"Example\");\necho \"\\n\"\
    ;\necho fix_spaces(\"Example 1\");\necho \"\\n\";\necho fix_spaces(\"Example 2\"\
    );\necho \"\\n\";\necho fix_spaces(\"Example 3\");\necho \"\\n\";\necho fix_spaces(\"\
    Example  4\");\necho \"\\n\";\necho fix_spaces(\"Example    5\");\necho \"\\n\"\
    ;\necho fix_spaces(\"Example   6\");\necho \"\\n\";\necho fix_spaces(\"Example\
    \  7\");\necho \"\\n\";\necho fix_spaces(\"Example       8\");\necho \"\\n\";\n\
    echo fix_spaces(\"Example\");\necho \"\\n\";\necho fix_spaces(\"Example 9\");\n\
    echo \"\\n\";\necho fix_spaces(\"Example 10\");\necho \"\\n\";\necho fix_spaces(\"\
    Example    11\");\necho \"\\n\";\necho fix_spaces(\"Example     12\");\necho \"\
    \\n\";", "\t$text = ltrim($text);\n\t$text = preg_replace('/\\s+/', '_', $text);\n\
    \tif (strpos($text, '_') == 0) {\n\t\t$text = substr_replace($text, '', 0, 1);\n\
    \t}\n\t$text = preg_replace('/_/', '-', $text, 1);\n\treturn $text;\n}\necho fix_spaces(\"\
    \ Example 1\");\necho \"\\n\";\necho fix_spaces(\" Example 2\");\necho \"\\n\"\
    ;\necho fix_spaces(\" Example 3\");\necho \"\\n\";", "    $text = str_replace(\"\
    \ \", \"_\", $text);\n    $text = str_replace(\"__\", \"-\", $text);\n    $text\
    \ = str_replace(\"__\", \"_\", $text);\n    return $text;\n}\n", "    return preg_replace('/(\\\
    s{2,})/', '-', preg_replace('/ /', '_', $text));\n}\n\necho fix_spaces(\" Example\"\
    ) . PHP_EOL;\necho fix_spaces(\" Example 1\") . PHP_EOL;\necho fix_spaces(\" Example\
    \ 2\") . PHP_EOL;\necho fix_spaces(\" Example 3\") . PHP_EOL;", "\t// $text =\
    \ preg_replace('/\\s+/', '_', $text);\n\t$text = preg_replace('/\\s\\s/', '_',\
    \ $text);\n\t$text = preg_replace('/\\s\\s\\s/', '-', $text);\n\treturn $text;\n\
    }\n$text = 'Example 2';\nprint_r(fix_spaces($text));", "\treturn preg_replace('/\
    \ {2,}/', '-', preg_replace('/ /', '_', $text));\n}", "    return preg_replace('/(\
    \ +)/', '-', $text);\n}\necho fix_spaces(\" Example 1\");\necho \"\\n\";\necho\
    \ fix_spaces(\" Example 2\");\necho \"\\n\";\necho fix_spaces(\" Example 3\");\n\
    echo \"\\n\";\n", "\t$arr = preg_split('/\\s+/', $text);\n\t$arr = array_filter($arr);\n\
    \t$arr = implode('_', $arr);\n\t$arr = preg_replace('/\\s+/', '-', $arr);\n\t\
    return $arr;\n}\necho fix_spaces(\"Example 1\");\necho '<br>';\necho fix_spaces(\"\
    Example 2\");\necho '<br>';\necho fix_spaces(\"Example 3\");\necho '<br>';\necho\
    \ fix_spaces(\"Example 4\");\necho '<br>';\necho fix_spaces(\"Example 5\");\n\
    echo '<br>';\necho fix_spaces(\"Example 6\");\necho '<br>';\necho fix_spaces(\"\
    Example 7\");\necho '<br>';\necho fix_spaces(\"Example 8\");\necho '<br>';\necho\
    \ fix_spaces(\"Example 9\");\necho '<br>';\necho fix_spaces(\"Example 10\");\n\
    echo '<br>';", "\treturn preg_replace('/ {2,}/', '-', str_replace(' ', '_', $text));\n\
    }", "\t// Write the code here\n}\n", "    $new_text = '';\n    $text = trim($text);\n\
    \    $text = preg_replace('/\\s+/', ' ', $text);\n    for ($i = 0; $i < strlen($text);\
    \ $i++) {\n        if ($text[$i] == ' ') {\n            if ($i == 0 || $i == strlen($text)\
    \ - 1) {\n                $new_text .= $text[$i];\n            } else if ($text[$i\
    \ + 1] == ' ') {\n                $new_text .= '-';\n            } else {\n  \
    \              $new_text .= '_';\n            }\n        } else {\n          \
    \  $new_text .= $text[$i];\n        }\n    }\n    return $new_text;\n}\n", "\t\
    $str = trim($text);\n\t$str = str_replace(' ', '_', $str);\n\t$str = preg_replace('/_+/',\
    \ '-', $str);\n\treturn $str;\n}\n\necho fix_spaces(\" Example\");\necho \"<br>\"\
    ;\necho fix_spaces(\" Example 1\");\necho \"<br>\";\necho fix_spaces(\" Example\
    \ 2\");\necho \"<br>\";\necho fix_spaces(\" Example 3\");\necho \"<br>\";\necho\
    \ fix_spaces(\" Example     4\");\necho \"<br>\";\necho fix_spaces(\" Example\
    \    5\");\necho \"<br>\";\necho fix_spaces(\" Example   6\");\necho \"<br>\"\
    ;\necho fix_spaces(\" Example     7\");\necho \"<br>\";\necho fix_spaces(\" Example\
    \   8\");\necho \"<br>\";\necho fix_spaces(\" Example        9\");\necho \"<br>\"\
    ;\necho fix_spaces(\" Example     10\");\necho \"<br>\";\necho fix_spaces(\" Example\
    \     11\");\necho \"<br>\";\necho fix_spaces(\" Example 12\");\necho \"<br>\"\
    ;\necho fix_spaces(\" Example 13\");\necho \"<br>\";\necho fix_spaces(\" Example\
    \  14\");\necho \"<br>\";\necho fix_spaces(\" Example    15\");\necho \"<br>\"\
    ;\necho fix_spaces(\" Example     16\");\necho \"<br>\";\necho fix_spaces(\" Example\
    \   17\");\necho \"<br>\";\necho fix_spaces(\" Example     18\");\necho \"<br>\"\
    ;\necho fix_spaces(\" Example    19\");\necho \"<br>\";\necho fix_spaces(\" Example\
    \  20\");\necho \"<br>\";\necho fix_spaces(\" Example 21\");\necho \"<br>\";\n\
    echo fix_spaces(\" Example 22\");\necho \"<br>\";\necho fix_spaces(\" Example\
    \     23\");\necho \"<br>\";\necho fix_spaces(\" Example 24\");\necho \"<br>\"\
    ;\necho fix_spaces(\" Example    25\");\necho \"<br>\";\necho fix_spaces(\" Example\
    \     26\");\necho \"<br>\";\necho fix_spaces(\" Example    ", "    $space = array('\
    \ ');\n    $underscore = array('_');\n    $dash = array('-');\n    $counter =\
    \ 0;\n    $array_text = str_split($text);\n    for ($i = 0; $i < count($array_text);\
    \ $i++) {\n        if ($array_text[$i] == ' ') {\n            $counter += 1;\n\
    \        } else {\n            $counter = 0;\n        }\n        if ($counter\
    \ > 2) {\n            $array_text[$i] = '-';\n        }\n    }\n    $text = implode($array_text);\n\
    \    $text = trim($text);\n    if ($text[0] == ' ') {\n        $text = str_replace($space,\
    \ $underscore, $text);\n    }\n    $text = str_replace($space, $underscore, $text);\n\
    \    return $text;\n}\n", "\treturn preg_replace('/\\s\\s+/', '-', preg_replace('/\\\
    s/', '_', $text));\n}\n", "    $text = trim($text);\n    $text = str_replace(\"\
    \ \", \"_\", $text);\n    $text = preg_replace(\"/__+/\", \"-\", $text);\n   \
    \ return $text;\n}\n", "  $text = str_replace(\" \", \"_\", $text);\n  $text =\
    \ str_replace(\"_ _ _ _ _ _ _ _ _ _ _ _ _ _\", \"-\", $text);\n  $text = str_replace(\"\
    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\", \"-\", $text);\n  $text = str_replace(\"_ _ _\
    \ _ _ _ _ _ _ _ _ _ _ _ _ _\", \"-\", $text);\n  $text = str_replace(\"_ _ _ _\
    \ _ _ _ _ _ _ _ _ _ _ _ _ _\", \"-\", $text);\n  $text = str_replace(\"_ _ _ _\
    \ _ _ _ _ _ _ _ _ _ _ _ _ _ _\", \"-\", $text);\n  $text = str_replace(\"_ _ _\
    \ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\", \"-\", $text);\n  $text = str_replace(\"\
    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\", \"-\", $text);\n  $text = str_replace(\"\
    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\", \"-\", $text);\n  $text = str_replace(\"\
    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\", \"-\", $text);\n  $text = str_replace(\"\
    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\", \"-\", $text);\n  $text = str_replace(\"\
    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\", \"-\", $text);\n  $text = str_replace(\"\
    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\", \"-\", $text);\n  $text =\
    \ str_replace(\"_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\", \"-\",\
    \ $text);\n  $text = str_replace(\"_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\
    \ _ _ _ _ _\", \"-\", $text);", "    $text = preg_replace('/ {2,}/', '-', $text);\n\
    \    $text = preg_replace('/ /', '_', $text);\n    return $text;\n}\n", "    $text\
    \ = preg_replace('/\\s+/', '_', $text);\n    $text = preg_replace('/_+/', '-',\
    \ $text);\n    return $text;\n}\n", "    $replaced_text = preg_replace('/\\s+/',\
    \ '_', $text);\n\n    return $replaced_text;\n}\n\n$text = \" Example 3\";\necho\
    \ fix_spaces($text) . \"\\n\";\n", "\t$text = trim($text);\n\t$text = str_replace(\"\
    \ \", \"_\", $text);\n\tif (strpos($text, \"__\") !== false) {\n\t\t$text = str_replace(\"\
    __\", \"-\", $text);\n\t}\n\n\treturn $text;\n}\necho fix_spaces(\" Example\"\
    );\necho \"<br>\";\necho fix_spaces(\" Example 1\");\necho \"<br>\";\necho fix_spaces(\"\
    \ Example 2\");\necho \"<br>\";\necho fix_spaces(\" Example 3\");\necho \"<br>\"\
    ;\n", "    $text = preg_replace('/\\s{2,}/', '-', $text);\n    $text = preg_replace('/\\\
    s/', '_', $text);\n    return $text;\n}", "\t\n\t$result = $text;\n\t\n\t$result\
    \ = preg_replace(\"/  /\", \" \", $result);\n\t$result = preg_replace(\"/  /\"\
    , \" \", $result);\n\t$result = preg_replace(\"/  /\", \" \", $result);\n\t$result\
    \ = preg_replace(\"/  /\", \" \", $result);\n\t$result = preg_replace(\"/  /\"\
    , \" \", $result);\n\t$result = preg_replace(\"/  /\", \" \", $result);\n\t$result\
    \ = preg_replace(\"/  /\", \" \", $result);\n\t$result = preg_replace(\"/  /\"\
    , \" \", $result);\n\t$result = preg_replace(\"/  /\", \" \", $result);\n\t$result\
    \ = preg_replace(\"/  /\", \" \", $result);\n\t$result = preg_replace(\"/  /\"\
    , \" \", $result);\n\t$result = preg_replace(\"/  /\", \" \", $result);\n\t$result\
    \ = preg_replace(\"/  /\", \" \", $result);\n\t$result = preg_replace(\"/  /\"\
    , \" \", $result);\n\t$result = preg_replace(\"/  /\", \" \", $result);\n\t$result\
    \ = preg_replace(\"/  /\", \" \", $result);\n\t$result = preg_replace(\"/  /\"\
    , \" \", $result);\n\t$result = preg_replace(\"/  /\", \" \", $result);\n\t$result\
    \ = preg_replace(\"/  /\", \" \", $result);\n\t$result = preg_replace(\"/  /\"\
    , \" \", $result);\n\t$result = preg_replace(\"/  /\", \" \", $result);\n\t$result\
    \ = preg_replace(\"/  /\", \" \", $result);\n\t$result = preg_replace(\"/  /\"\
    , \" \", $result);\n\t$result = preg_replace(\"/  /\", \" \", $result);\n\t$result\
    \ = preg_replace(\"/  /\", \" \", $result);\n\t$result = preg_replace(\"/  /\"\
    , \" \", $result);\n\t$result = pre", "    $result = preg_replace(\"/[^\\S]{2,}/\"\
    , \"_\", $text);\n    $result = preg_replace(\"/[_]{2,}/\", \"-\", $result);\n\
    \    $result = preg_replace(\"/[^\\S]{1}/\", \"_\", $result);\n    return $result;\n\
    }\n\necho fix_spaces(\" Example 1\").\"\\n\";\necho fix_spaces(\" Example 2\"\
    ).\"\\n\";\necho fix_spaces(\" Example 3\").\"\\n\";\necho fix_spaces(\" Example\
    \ 4\").\"\\n\";", "    $result = str_replace(\" \", \"_\", $text);\n    if (strpos($result,\
    \ '__') !== false) {\n        $result = str_replace(\"__\", \"-\", $result);\n\
    \    }\n    return $result;\n}\n", "    $text = preg_replace('/ /', '_', $text);\n\
    \    $text = preg_replace('/_+/', '-', $text);\n    return $text;\n}\necho fix_spaces(\"\
    \ Example\");\necho fix_spaces(\" Example 1\");\necho fix_spaces(\" Example 2\"\
    );\necho fix_spaces(\" Example 3\");", "    // we need to replace all spaces with\
    \ underscores,\n    // but we also want to replace all consecutive spaces with\
    \ a \"-\"\n    // for example: \"  Example 2  \" should be \"_Example-2_\"\n \
    \   // first thing is to get rid of all the leading and trailing spaces\n    $text\
    \ = trim($text);\n    // now we need to figure out if we need to replace all the\
    \ spaces with a \"-\"\n    // try using the explode function to convert the string\
    \ into an array:\n    $array_of_words = explode(\" \", $text);\n    // now count\
    \ the number of words in the array\n    // if there are more than 2 words, we\
    \ need to replace the spaces with a \"-\"\n    if (count($array_of_words) > 2)\
    \ {\n        // we need to replace the spaces with a \"-\"\n        // figure\
    \ out how to replace a space with a \"-\"\n        $text = str_replace(\" \",\
    \ \"-\", $text);\n    } else {\n        // we need to replace the spaces with\
    \ a \"_\"\n        // figure out how to replace a space with a \"_\"\n       \
    \ $text = str_replace(\" \", \"_\", $text);\n    }\n    return $text;\n}", "\t\
    $string_arr = str_split($text);\n\t$clean_str = \"\";\n\t$previous_letter = \"\
    \";\n\t$space_count = 0;\n\tforeach ($string_arr as $letter) {\n\t\tif ($letter\
    \ == \" \") {\n\t\t\t$space_count += 1;\n\t\t\tif ($space_count > 2) {\n\t\t\t\
    \t$clean_str .= \"-\";\n\t\t\t} else {\n\t\t\t\t$clean_str .= \"_\";\n\t\t\t}\n\
    \t\t} else {\n\t\t\t$clean_str .= $letter;\n\t\t\t$space_count = 0;\n\t\t}\n\t\
    }\n\treturn $clean_str;\n}\necho fix_spaces(\" Example\") . \"\\n\";\necho fix_spaces(\"\
    \ Example 1\") . \"\\n\";\necho fix_spaces(\" Example 2\") . \"\\n\";\necho fix_spaces(\"\
    \ Example 3\") . \"\\n\";", "    $text = preg_replace('!\\s+!', ' ', $text);\n\
    \    $text = str_replace(' ', '_', $text);\n    return $text;\n}", "\t$text =\
    \ preg_replace('/\\s\\s+/', '_', $text);\n\t$text = preg_replace('/\\s/', '_',\
    \ $text);\n\t$text = preg_replace('/_+/', '-', $text);\n\treturn $text;\n}\necho\
    \ fix_spaces(\" Example 1\") . \"\\n\";\necho fix_spaces(\" Example 2\") . \"\\\
    n\";\necho fix_spaces(\" Example 3\") . \"\\n\";", "\treturn preg_replace(\"/(?<!\
    \ )\\s{2,}/\", \"-\", str_replace(\" \", \"_\", trim($text)));\n}\necho fix_spaces(\"\
    Example\");", "    $arr = explode(\" \", $text);\n    $text1 = \"\";\n    for\
    \ ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i] == \"\") {\n      \
    \      $text1 .= \"-\";\n        } else {\n            $text1 .= $arr[$i];\n \
    \       }\n        if ($i != count($arr) - 1) {\n            $text1 .= \"_\";\n\
    \        }\n    }\n    return $text1;\n}\necho fix_spaces(\" Example 1\");\necho\
    \ \"<br>\";\necho fix_spaces(\" Example 2\");\necho \"<br>\";\necho fix_spaces(\"\
    \ Example 3\");", "    $test = explode(\" \", $text);\n    $text = join(\"_\"\
    , $test);\n    $test = explode(\"__\", $text);\n    $text = join(\"-\", $test);\n\
    \    return $text;\n}\n\necho fix_spaces(\" Example\") . \"<br>\";\necho fix_spaces(\"\
    \ Example 1\") . \"<br>\";\necho fix_spaces(\" Example 2\") . \"<br>\";\necho\
    \ fix_spaces(\" Example 3\") . \"<br>\";\n", "  $new_text = preg_replace('/\\\
    s+/', '-', $text);\n  $new_text = str_replace(' ', '_', $new_text);\n  return\
    \ $new_text;\n}\necho fix_spaces(\" Example\");\necho fix_spaces(\" Example 1\"\
    );\necho fix_spaces(\" Example 2\");\necho fix_spaces(\" Example 3\");", "\t$text\
    \ = trim($text);\n\t$arr = str_split($text);\n\t$res = array();\n\tfor ($i = 0;\
    \ $i < count($arr); $i++) {\n\t\tif ($arr[$i] != \" \") {\n\t\t\t$res[] = $arr[$i];\n\
    \t\t} else {\n\t\t\tif ($i != 0 && count($res) != 0 && $res[count($res) - 1] !=\
    \ \"_\") {\n\t\t\t\t$res[] = \"_\";\n\t\t\t}\n\t\t\t$count = 0;\n\t\t\twhile ($i\
    \ < count($arr) && $arr[$i] == \" \") {\n\t\t\t\t$count++;\n\t\t\t\t$i++;\n\t\t\
    \t}\n\t\t\tif ($count > 2) {\n\t\t\t\t$res[] = \"-\";\n\t\t\t}\n\t\t\t$i--;\n\t\
    \t}\n\t}\n\treturn implode(\"\", $res);\n}\necho fix_spaces(\" Example\");\necho\
    \ \"<br>\";\necho fix_spaces(\" Example 1\");\necho \"<br>\";\necho fix_spaces(\"\
    \ Example 2\");\necho \"<br>\";\necho fix_spaces(\" Example 3\");\necho \"<br>\"\
    ;\necho fix_spaces(\"   \");", "    $words = explode(\" \", $text);\n    $fixed_words\
    \ = [];\n    foreach ($words as $word) {\n        if ($word === \"\") {\n    \
    \        $fixed_words[] = \"-\";\n        } else {\n            $fixed_words[]\
    \ = $word;\n        }\n    }\n    $fixed_text = implode(\"_\", $fixed_words);\n\
    \    return $fixed_text;\n}\necho fix_spaces(\" Example\") . \"\\n\";\necho fix_spaces(\"\
    \ Example 1\") . \"\\n\";\necho fix_spaces(\" Example 2\") . \"\\n\";\necho fix_spaces(\"\
    \ Example 3\") . \"\\n\";\n", "    $text = str_replace(\" \", \"-\", $text);\n\
    \    $text = str_replace(\"__\", \"_\", $text);\n    $text = trim($text, '-');\n\
    \    $text = trim($text, '_');\n    return $text;\n}\necho \"fix_spaces(\\\" Example\\\
    \")<br>\";\necho fix_spaces(\" Example\") . \"<br>\";\necho \"fix_spaces(\\\"\
    \ Example 1\\\")<br>\";\necho fix_spaces(\" Example 1\") . \"<br>\";\necho \"\
    fix_spaces(\\\" Example 2\\\")<br>\";\necho fix_spaces(\" Example 2\") . \"<br>\"\
    ;\necho \"fix_spaces(\\\" Example 3\\\")<br>\";\necho fix_spaces(\" Example 3\"\
    ) . \"<br>\";", "    // $rep = preg_replace('/\\s+/', '_', $text);\n    // $rep\
    \ = preg_replace('/\\s{3,}/', '-', $rep);\n    $rep = preg_replace('/\\s{2,}/',\
    \ '_', $text);\n    $rep = preg_replace('/\\s/', '-', $rep);\n    return $rep;\n\
    }\necho fix_spaces(\" Example\") . PHP_EOL;\necho fix_spaces(\" Example 1\") .\
    \ PHP_EOL;\necho fix_spaces(\" Example 2\") . PHP_EOL;\necho fix_spaces(\" Example\
    \ 3\") . PHP_EOL;\necho fix_spaces(\" Example 4\") . PHP_EOL;\necho fix_spaces(\"\
    \ Example 5\") . PHP_EOL;\necho fix_spaces(\" Example 6\") . PHP_EOL;\necho fix_spaces(\"\
    \ Example 7\") . PHP_EOL;\necho fix_spaces(\" Example 8\") . PHP_EOL;\necho fix_spaces(\"\
    \ Example 9\") . PHP_EOL;\necho fix_spaces(\" Example 10\") . PHP_EOL;\necho fix_spaces(\"\
    \ Example     11\") . PHP_EOL;\necho fix_spaces(\" Example    12\") . PHP_EOL;\n\
    echo fix_spaces(\" Example   13\") . PHP_EOL;\necho fix_spaces(\" Example  14\"\
    ) . PHP_EOL;\necho fix_spaces(\" Example 15\") . PHP_EOL;\necho fix_spaces(\"\
    \ Example  16\") . PHP_EOL;\necho fix_spaces(\" Example   17\") . PHP_EOL;\necho\
    \ fix_spaces(\" Example    18\") . PHP_EOL;\necho fix_spaces(\" Example     19\"\
    ) . PHP_EOL;\necho fix_spaces(\" Example     20\") . PHP_EOL;\necho fix_spaces(\"\
    \ Example     21\") . PHP_EOL;\necho fix_spaces(\" Example     22\") . PHP_EOL;\n\
    echo fix_spaces(\" Example     23\") . PHP_EOL;\necho fix_spaces(\" Example  \
    \   24\") . PHP_", "    $result = \"\";\n    $previous_char = \"\";\n    $counter\
    \ = 0;\n    for ($i = 0; $i < strlen($text); $i++) {\n        $char = $text[$i];\n\
    \        if ($char == \" \") {\n            if ($previous_char == \" \") {\n \
    \               $counter++;\n                if ($counter == 2) {\n          \
    \          $result .= \"-\";\n                }\n            } else {\n      \
    \          $result .= \"_\";\n            }\n        } else {\n            $result\
    \ .= $char;\n            $counter = 0;\n        }\n        $previous_char = $char;\n\
    \    }\n    return $result;\n}\n\nprint(fix_spaces(\" Example\") . \"\\n\");\n\
    print(fix_spaces(\" Example 1\") . \"\\n\");\nprint(fix_spaces(\" Example 2\"\
    ) . \"\\n\");\nprint(fix_spaces(\" Example 3\") . \"\\n\");", "    $num_spaces\
    \ = 0;\n    $new_text = '';\n    $prev_char = '';\n    $text_len = strlen($text);\n\
    \    for ($i = 0; $i < $text_len; $i++) {\n        $c = $text[$i];\n        if\
    \ ($c == ' ') {\n            $num_spaces++;\n            if ($num_spaces <= 2)\
    \ {\n                $new_text .= '_';\n            }\n        } else {\n    \
    \        if ($num_spaces > 2) {\n                $new_text .= '-';\n         \
    \   }\n            $new_text .= $c;\n            $num_spaces = 0;\n        }\n\
    \    }\n    return $new_text;\n}\necho fix_spaces(\" Example\") . \"\\n\";\necho\
    \ fix_spaces(\" Example 1\") . \"\\n\";\necho fix_spaces(\" Example 2\") . \"\\\
    n\";\necho fix_spaces(\" Example 3\") . \"\\n\";\necho fix_spaces(\" Example 4\"\
    ) . \"\\n\";\necho fix_spaces(\" Example 5\") . \"\\n\";\necho fix_spaces(\" Example\
    \ 6\") . \"\\n\";\necho fix_spaces(\" Example 7\") . \"\\n\";\necho fix_spaces(\"\
    \ Example 8\") . \"\\n\";\necho fix_spaces(\" Example 9\") . \"\\n\";\necho fix_spaces(\"\
    \ Example 10\") . \"\\n\";\necho fix_spaces(\" Example 11\") . \"\\n\";\necho\
    \ fix_spaces(\" Example 12\") . \"\\n\";\necho fix_spaces(\" Example 13\") . \"\
    \\n\";\necho fix_spaces(\" Example 14\") . \"\\n\";\necho fix_spaces(\" Example\
    \ 15\") . \"\\n\";\necho fix_spaces(\" Example 16\") . \"\\n\";\necho fix_spaces(\"\
    \ Example 17\") . \"\\n\";\necho fix_spaces(\" Example 18\") . \"\\n\";\necho\
    \ fix_spaces(\" Example 19\") . \"\\n\";\necho fix_spaces(\" Example 20\") . \"\
    \\n\";\necho fix_spaces(\" Example 21\") . \"\\n\";\necho fix_spaces(\" Example\
    \ 22\") . \"\\n\";\necho fix_spaces(\" Example", "\t$length = strlen($text);\n\
    \t$output = '';\n\tfor ($i = 0; $i < $length; $i++) {\n\t\tif ($text[$i] == '\
    \ ') {\n\t\t\tif ($i == 0) {\n\t\t\t\t$output .= '_';\n\t\t\t} else if ($text[$i\
    \ - 1] == ' ') {\n\t\t\t\t$output .= '-';\n\t\t\t} else {\n\t\t\t\t$output .=\
    \ '_';\n\t\t\t}\n\t\t} else {\n\t\t\t$output .= $text[$i];\n\t\t}\n\t}\n\treturn\
    \ $output;\n}\n$text = '           Example 3';\necho fix_spaces($text);", "  \
    \  $text = str_replace(\" \", \"_\", $text);\n    $text = str_replace(\"  \",\
    \ \"-\", $text);\n    $text = str_replace(\"   \", \"-\", $text);\n    return\
    \ $text;\n}\n\necho fix_spaces(\" Example\") . \"\\n\";\necho fix_spaces(\" Example\
    \ 1\") . \"\\n\";\necho fix_spaces(\" Example 2\") . \"\\n\";\necho fix_spaces(\"\
    \ Example 3\") . \"\\n\";", "\t$text = preg_replace('/\\s{1,}/', ' ', $text);\n\
    \t$text = preg_replace('/ /', '_', $text);\n\t$text = preg_replace('/_\\s{1,}/',\
    \ '-', $text);\n\treturn $text;\n}\n$text = 'Example';\n$fix_spaces = fix_spaces($text);\n\
    echo $fix_spaces;", "    $preg = preg_replace('/\\s{2,}/','_', $text);\n    $preg\
    \ = preg_replace('/\\s{1}/','_', $preg);\n    $preg = preg_replace('/\\_/','-',\
    \ $preg);\n    return $preg;\n}\n\necho fix_spaces(\" Example\");", "    $text\
    \ = trim($text);\n    $length = strlen($text);\n    $result = array();\n    $i\
    \ = 0;\n    while ($i < $length) {\n        if ($text[$i] == ' ') {\n        \
    \    $current = 1;\n            while ($i < $length-1 && $text[$i+1] == ' ') {\n\
    \                $current++;\n                $i++;\n            }\n         \
    \   if ($current == 1) {\n                $result[] = '_';\n            } else\
    \ {\n                $result[] = '-';\n            }\n        } else {\n     \
    \       $result[] = $text[$i];\n        }\n        $i++;\n    }\n    return implode($result);\n\
    }\n\n$text = \" Example 3\";\necho fix_spaces($text);", "    $spaces = array(\n\
    \        \"\",\n        \" \",\n        \"  \",\n        \"   \",\n        \"\
    \    \",\n        \"     \",\n        \"      \",\n        \"       \",\n    \
    \    \"        \",\n        \"         \",\n        \"          \",\n        \"\
    \           \",\n        \"            \",\n        \"             \",\n     \
    \   \"              \",\n        \"               \",\n        \"            \
    \    \",\n        \"                 \",\n        \"                  \",\n  \
    \      \"                   \",\n        \"                    \",\n        \"\
    \                     \",\n        \"                      \",\n        \"   \
    \                    \",\n        \"                        \",\n        \"  \
    \                       \",\n        \"                          \",\n       \
    \ \"                           \",\n        \"                            \",\n\
    \        \"                             \",\n        \"                      \
    \        \",\n        \"                               \",\n        \"       \
    \                         \",\n        \"                                 \",\n\
    \        \"                                  \",\n        \"                 \
    \                  \",\n        \"                                    \",\n  \
    \      \"                                     \",\n        \"                \
    \                      \",\n        \"                                       \"\
    ,\n        \"                                        \",\n        \"         \
    \                                \",\n        \"                             \
    \             \",\n        \"                                           \",\n\
    \        \"                                            \",\n        \"       \
    \                                      \",\n        \"                       \
    \                       \",\n        \"                                      \
    \         \",\n        \"                                                \",\n\
    \        \"                                                 \",\n        \"  \
    \                                                \",\n        \"             \
    \                                      \",\n        \"                       \
    \                             \",\n        \"                                \
    \                     \",\n        \"                                        \
    \              \",\n        \"                                               \
    \        \",\n        \"                                                     \
    \   \",\n        \"                                                         \"\
    ,\n        \"                                                          \",\n \
    \       \"                                                           \",\n   \
    \     \"                                                            \",\n    \
    \    \"                                                             \",\n    \
    \    \"                                                              \",\n   \
    \     \"                                                               \",\n \
    \       \"                                                                \",\n\
    \        \"                                                                 \"\
    ,\n        \"                                                                \
    \  \",\n        \"                                                           \
    \        \",\n        \"                                                     \
    \               \",\n        \"                                              \
    \                       \",\n        \"                                      \
    \                                \",\n        \"                             \
    \                                          \",\n        \"                   \
    \                                                     \",\n        \"        \
    \                                                                 \",\n      \
    \  \"                                                                        \
    \  \",\n        \"                                                           \
    \                \",\n        \"                                             \
    \                               \",\n        \"                              \
    \                                               \",\n        \"              \
    \  ", "    if (strlen($text) < 2) return $text;\n    if ($text[0] === ' ') {\n\
    \        $text[0] = '_';\n    }\n    for ($i = 1; $i < strlen($text); $i++) {\n\
    \        if ($text[$i] === ' ') {\n            if ($text[$i - 1] === ' ') {\n\
    \                $text[$i] = '-';\n            } else {\n                $text[$i]\
    \ = '_';\n            }\n        }\n    }\n    return $text;\n}\nprint_r(fix_spaces(\"\
    \ Example\"));\necho '<br>';\nprint_r(fix_spaces(\" Example 1\"));\necho '<br>';\n\
    print_r(fix_spaces(\" Example 2\"));\necho '<br>';\nprint_r(fix_spaces(\" Example\
    \ 3\"));\necho '<br>';", "  // YOUR CODE GOES HERE\n}\n", "    $length = strlen($text);\n\
    \    $string = \"\";\n    $counter = 0;\n    for ($i = 0; $i < $length; $i++)\
    \ {\n        if ($text[$i] == \" \") {\n            $counter++;\n            if\
    \ ($counter > 2) {\n                $string .= \"-\";\n            } else {\n\
    \                $string .= \"_\";\n            }\n        } else {\n        \
    \    $string .= $text[$i];\n            $counter = 0;\n        }\n    }\n    return\
    \ $string;\n}\n", "\treturn preg_replace('/\\s+/', '-', str_replace(' ', '_',\
    \ trim($text)));\n}\n", "    $text = trim($text);\n    $text = str_replace(' ',\
    \ '_', $text);\n    $text = preg_replace('/_+/', '-', $text);\n    return $text;\n\
    }\n\necho fix_spaces(\" Example\");\necho fix_spaces(\" Example 1\");\necho fix_spaces(\"\
    \ Example 2\");\necho fix_spaces(\" Example 3\");", "    $text = trim($text);\n\
    \    $text = preg_replace('/\\s+/', '_', $text);\n    $text = preg_replace('/_+/',\
    \ '-', $text);\n    return $text;\n}\necho fix_spaces(\"Example\");\necho \"\\\
    n\";\necho fix_spaces(\"Example 1\");\necho \"\\n\";\necho fix_spaces(\"Example\
    \ 2\");\necho \"\\n\";\necho fix_spaces(\"Example 3\");\necho \"\\n\";\necho fix_spaces(\"\
    Example   4\");\necho \"\\n\";\necho fix_spaces(\"Example  5\");\necho \"\\n\"\
    ;\necho fix_spaces(\"Example    6\");\necho \"\\n\";\necho fix_spaces(\"Example\
    \     7\");\necho \"\\n\";\necho fix_spaces(\"   Example     7\");\necho \"\\\
    n\";", "  return preg_replace('/[ ]{2,}/','_',$text);\n}\necho fix_spaces(\" Example\
    \ 3\");", "    $text = str_replace(\" \", \"_\", $text);\n    $text = str_replace(\"\
    __\", \"-\", $text);\n    return $text;\n}\necho fix_spaces(\" Example\");\necho\
    \ \"\\n\";\necho fix_spaces(\" Example 1\");\necho \"\\n\";\necho fix_spaces(\"\
    \ Example 2\");\necho \"\\n\";\necho fix_spaces(\" Example 3\");\necho \"\\n\"\
    ;", "    // check if text is empty or null\n    if(!$text) {\n        echo \"\
    Please insert a text\";\n        return;\n    }\n    // find space character\n\
    \    $space = \" \";\n    // check if text has space\n    $textHasSpace = strpos($text,\
    \ $space);\n    // check if text has more than one space\n    $textHasMoreThanOneSpace\
    \ = strpos($text, $space, $textHasSpace + 1);\n    // check if text has more than\
    \ two spaces\n    $textHasMoreThanTwoSpaces = strpos($text, $space, $textHasMoreThanOneSpace\
    \ + 1);\n    // function to replace space into underscore\n    function replaceSpaceToUnderscore($text)\
    \ {\n        $replace = str_replace(\" \", \"_\", $text);\n        return $replace;\n\
    \    }\n    // function to replace more than two spaces into dash\n    function\
    \ replaceMoreThanTwoSpacesToDash($text) {\n        $replace = str_replace(\" \"\
    , \"-\", $text);\n        return $replace;\n    }\n    // if text has more than\
    \ two spaces, replace it to dash\n    if($textHasMoreThanTwoSpaces) {\n      \
    \  $text = replaceMoreThanTwoSpacesToDash($text);\n    }\n    // if text has more\
    \ than one space, replace it to underscore\n    else if($textHasMoreThanOneSpace)\
    \ {\n        $text = replaceSpaceToUnderscore($text);\n    }\n    // if text has\
    \ one space, remove it\n    else if($textHasSpace) {\n        $text = str_replace(\"\
    \ \", \"\", $text);\n    }\n    return $text;\n}\n", "    // your code here\n}",
  "    $new_text = preg_replace('/\\s{2,}/', '-', $text);\n    $new_text = preg_replace('/\\\
    s/', '_', $new_text);\n    return $new_text;\n}\n", "    return trim(preg_replace('/(\\\
    s{2,})/', '-', preg_replace('/\\s/', '_', $text)));\n}\n\n$text = \" Example 3\"\
    ;\n\necho fix_spaces($text);", "    $text = preg_replace('/ /', '_', $text);\n\
    \    $text = preg_replace('/([_]{2,})/', '-', $text);\n    return $text;\n}\n",
  "\t$text = trim($text);\n\t$text = str_replace(\" \", \"_\", $text);\n\t$text =\
    \ str_replace(\"_\", \"-\", $text, $count);\n\tif ($count > 2) {\n\t\t$text =\
    \ str_replace(\"-\", \"_\", $text);\n\t}\n\treturn $text;\n}\necho fix_spaces(\"\
    \ Example\") . \"\\n\";\necho fix_spaces(\" Example 1\") . \"\\n\";\necho fix_spaces(\"\
    \ Example 2\") . \"\\n\";\necho fix_spaces(\" Example 3\") . \"\\n\";\necho fix_spaces(\"\
    \ Example 4\") . \"\\n\";\necho fix_spaces(\" Example 5\") . \"\\n\";\n", "  \
    \  // your code here\n}", "    $text = trim($text);\n    if(preg_match(\"/^[A-Za-z]+$/\"\
    , $text)) return $text;\n    $text = preg_replace(\"/\\s{2,}/\", \"-\", $text);\n\
    \    $text = preg_replace(\"/\\s/\", \"_\", $text);\n    return $text;\n}\n",
  "  $text = preg_replace('/ /', '_', $text);\n  $text = preg_replace('/_{2,}/', '-',\
    \ $text);\n  return $text;\n}", "  return preg_replace('/\\s+/', '-', trim($text));\n\
    }\necho fix_spaces(\" Example\");", "    $text = trim($text);\n    $text = str_replace(\"\
    \ \", \"_\", $text);\n    $text = preg_replace(\"/[_]+/\", \"_\", $text);\n  \
    \  $text = preg_replace(\"/[_]+/\", \"-\", $text);\n    $text = preg_replace(\"\
    /-+/\", \"-\", $text);\n    return $text;\n}\n", "    return preg_replace('/\\\
    s\\s+/', '-', preg_replace('/ /', '_', $text));\n}\n", "\t$text = str_replace(\"\
    \ \", \"_\", $text);\n\t$text = str_replace(\"__\", \"_\", $text);\n\t$text =\
    \ str_replace(\"___\", \"-\", $text);\n\treturn $text;\n}\necho fix_spaces(\"\
    \ Example 3\");", "\treturn preg_replace(\"/\\s{2,}/\", \"-\", preg_replace(\"\
    /\\s/\", \"_\", $text));\n}\necho fix_spaces(\"Example\");\necho \"\\n\";\necho\
    \ fix_spaces(\"Example 1\");\necho \"\\n\";\necho fix_spaces(\"Example 2\");\n\
    echo \"\\n\";\necho fix_spaces(\"Example 3\");\necho \"\\n\";\necho fix_spaces(\"\
    Example 4\");\necho \"\\n\";\n", "    $text = trim($text);\n    $text = preg_replace('/\\\
    s+/', ' ', $text);\n    return str_replace(\" \", \"_\", $text);\n}\n", "    $text\
    \ = str_replace(\" \", \"_\", $text);\n    $text = str_replace(\"  \", \"_\",\
    \ $text);\n    $text = str_replace(\"__\", \"-\", $text);\n    return $text;\n\
    }\n\necho fix_spaces(\" Example\") . \"\\n\";\necho fix_spaces(\" Example 1\"\
    ) . \"\\n\";\necho fix_spaces(\" Example 2\") . \"\\n\";\necho fix_spaces(\" Example\
    \ 3\") . \"\\n\";\n", "\t$result = preg_replace(\"/( )+/\", \"-\", $text);\n\t\
    return $result;\n}\n\necho fix_spaces(\" Example\");\necho \"\\n\";\necho fix_spaces(\"\
    \ Example 1\");\necho \"\\n\";\necho fix_spaces(\" Example 2\");\necho \"\\n\"\
    ;\necho fix_spaces(\" Example 3\");\necho \"\\n\";", "    $result = '';\n    $consecutive\
    \ = 0;\n    for ($i = 0; $i < strlen($text); $i++) {\n        if ($text[$i] ==\
    \ ' ') {\n            $consecutive++;\n            if ($consecutive > 2) {\n \
    \               $result = $result . '-';\n            } else {\n             \
    \   $result = $result . '_';\n            }\n        } else {\n            $consecutive\
    \ = 0;\n            $result = $result . $text[$i];\n        }\n    }\n    return\
    \ $result;\n}\n", "    $text_no_space = str_replace(\" \", \"_\", $text);\n  \
    \  $text_no_space = str_replace(\"___\", \"_\", $text_no_space);\n    $text_no_space\
    \ = str_replace(\"___\", \"_\", $text_no_space);\n    $text_no_space = str_replace(\"\
    ___\", \"_\", $text_no_space);\n    $text_no_space = str_replace(\"__\", \"-\"\
    , $text_no_space);\n    return $text_no_space;\n}\n", "    // Write your code\
    \ here\n    // To print results to the standard output you can use print\n   \
    \ // Example: print \"Hello world!\";\n}", "\t$text = trim($text);\n\t$text =\
    \ preg_replace('/\\s+/', '_', $text);\n\treturn $text;\n}\n", "  $text = trim($text);\n\
    \  $text = str_replace(\" \", \"_\", $text);\n  $text = preg_replace(\"/_+/\"\
    , \"-\", $text);\n  return $text;\n}\n\n$text1 = \" Example\";\n$text2 = \" Example\
    \ 1\";\n$text3 = \" Example 2\";\n$text4 = \" Example 3\";\n\necho fix_spaces($text1)\
    \ . \"\\n\";\necho fix_spaces($text2) . \"\\n\";\necho fix_spaces($text3) . \"\
    \\n\";\necho fix_spaces($text4) . \"\\n\";", "\t$text = trim($text);\n\t$text\
    \ = str_replace(\" \", \"_\", $text);\n\t$text = str_replace(\"_ _ _ _\", \"_\"\
    , $text);\n\t$text = str_replace(\"_ _ _\", \"-\", $text);\n\t$text = str_replace(\"\
    _ _\", \"-\", $text);\n\techo $text;\n}\n", "  // split text into an array of\
    \ words\n  $arr = explode(\" \", $text);\n  // remove any empty values (spaces)\n\
    \  $arr = array_filter($arr);\n  // join words with _\n  $text = implode(\"_\"\
    , $arr);\n  // check if a string has more than 2 consecutive spaces\n  $patt =\
    \ \"/_{2,}/\";\n  if (preg_match($patt, $text)) {\n    // replace all consecutive\
    \ spaces with -\n    $text = preg_replace($patt, \"-\", $text);\n  }\n  return\
    \ $text;\n}\n\necho \"Text 1: \" . fix_spaces(\" Example\") . \"\\n\";\necho \"\
    Text 2: \" . fix_spaces(\" Example 1\") . \"\\n\";\necho \"Text 3: \" . fix_spaces(\"\
    \ Example 2\") . \"\\n\";\necho \"Text 4: \" . fix_spaces(\" Example 3\") . \"\
    \\n\";", "    $text = str_replace(\" \", \"_\", $text);\n    $text = str_replace(\"\
    __\", \"-\", $text);\n    $text = str_replace(\"__\", \"-\", $text);\n    $text\
    \ = str_replace(\"__\", \"-\", $text);\n    $text = str_replace(\"__\", \"-\"\
    , $text);\n    $text = str_replace(\"__\", \"-\", $text);\n    $text = str_replace(\"\
    __\", \"-\", $text);\n    $text = str_replace(\"__\", \"-\", $text);\n    $text\
    \ = str_replace(\"__\", \"-\", $text);\n    $text = str_replace(\"__\", \"-\"\
    , $text);\n    $text = str_replace(\"__\", \"-\", $text);\n    $text = str_replace(\"\
    __\", \"-\", $text);\n    $text = str_replace(\"__\", \"-\", $text);\n    $text\
    \ = str_replace(\"__\", \"-\", $text);\n    $text = str_replace(\"__\", \"-\"\
    , $text);\n    $text = str_replace(\"__\", \"-\", $text);\n    $text = str_replace(\"\
    __\", \"-\", $text);\n    $text = str_replace(\"__\", \"-\", $text);\n    $text\
    \ = str_replace(\"__\", \"-\", $text);\n    $text = str_replace(\"__\", \"-\"\
    , $text);\n    $text = str_replace(\"__\", \"-\", $text);\n    $text = str_replace(\"\
    __\", \"-\", $text);\n    $text = str_replace(\"__\", \"-\", $text);\n    $text\
    \ = str_replace(\"__\", \"-\", $text);\n    $text = str_replace(\"__\", \"-\"\
    , $text);\n    $text = str_replace(\"__\", \"-\", $text);\n    $text = str_replace(\"\
    __\", \"-\", $text);\n    $text = str_replace(\"__\", \"-\", $text);\n    $text\
    \ = str_replace(\"__\", \"-\", $text);\n    $text = str_replace(\"__\", \"-\"\
    , $text);\n    $text = str_replace(\"__\", \"-\", $text);\n    $text = str_replace(\"\
    __\", \"-\", $text);\n", "    $text = trim($text);\n    $text = preg_replace('/\\\
    s+/', '_', $text);\n    return preg_replace('/_{2,}/', '-', $text);\n}\n$text\
    \ = \"Example 1\";\n$result = fix_spaces($text);\nprint $result;\nprint \"\\n\"\
    ;\n$text = \"  Example 2\";\n$result = fix_spaces($text);\nprint $result;\nprint\
    \ \"\\n\";\n$text = \"    Example 3\";\n$result = fix_spaces($text);\nprint $result;\n\
    print \"\\n\";", "\t$text=trim($text);\n\t$arr=explode(\" \",$text);\n\t$text=implode(\"\
    _\",$arr);\n\t$arr=explode(\"__\",$text);\n\t$text=implode(\"-\",$arr);\n\treturn\
    \ $text;\n}", "    $a = str_replace(\" \", \"_\", $text);\n    $b = str_replace(\"\
    __\", \"_\", $a);\n    $c = str_replace(\"___\", \"-\", $b);\n    return $c;\n\
    }\n", "    $text = str_replace(\" \", \"_\", $text);\n    $text = str_replace(\"\
    _ _\", \"__\", $text);\n    $text = str_replace(\"_ _\", \"__\", $text);\n   \
    \ $text = str_replace(\"__\", \"_\", $text);\n    $text = str_replace(\"_ _\"\
    , \"__\", $text);\n    $text = str_replace(\"__\", \"_\", $text);\n    $text =\
    \ str_replace(\"_ _\", \"-\", $text);\n    return $text;\n}", "    return preg_replace('/[\
    \ ]{2,}/', '-', preg_replace('/[ ]/', '_', $text));\n}\n", "    $text = str_replace(\"\
    \ \", \"_\", $text);\n    return preg_replace(\"/_+/\", \"-\", $text);\n}\n",
  "  $text = preg_replace('/\\s{2,}/', '-', $text);\n  $text = str_replace(' ', '_',\
    \ $text);\n  return $text;\n}\n\necho fix_spaces(\"Example\");\necho \"\\n\";\n\
    echo fix_spaces(\"Example_1\");\necho \"\\n\";\necho fix_spaces(\"Example 2\"\
    );\necho \"\\n\";\necho fix_spaces(\"Example 3\");\necho \"\\n\";", "    $output\
    \ = [];\n    $cnt = 0;\n    for ($i = 0; $i < strlen($text); $i++) {\n       \
    \ if ($text[$i] == ' ') {\n            $cnt++;\n            if ($cnt > 2) {\n\
    \                $output[] = '-';\n            } else {\n                $output[]\
    \ = '_';\n            }\n        } else {\n            $cnt = 0;\n           \
    \ $output[] = $text[$i];\n        }\n    }\n    return implode('', $output);\n\
    }\n\necho fix_spaces(\" Example 1\");\necho '<br>';\necho fix_spaces(\" Example\
    \ 2\");\necho '<br>';\necho fix_spaces(\" Example 3\");", "    $fixed = str_replace(\"\
    \ \", \"_\", $text);\n    $fixed = str_replace(\"  \", \"\", $fixed);\n    $fixed\
    \ = str_replace(\"_ \", \"_\", $fixed);\n    $fixed = str_replace(\" _\", \"_\"\
    , $fixed);\n    return $fixed;\n}\necho fix_spaces(\" Example\");\necho \"\\n\"\
    ;\necho fix_spaces(\" Example 1\");\necho \"\\n\";\necho fix_spaces(\" Example\
    \ 2\");\necho \"\\n\";\necho fix_spaces(\" Example 3\");\necho \"\\n\";\n", " \
    \   $text = trim($text);\n    $text = str_replace(\" \", \"_\", $text);\n    $text\
    \ = preg_replace(\"/__+/\", \"-\", $text);\n    return $text;\n}", "\t$result\
    \ = $text;\n\t$count = substr_count($text, \" \");\n\t$result = str_replace(\"\
    \ \", \"_\", $result);\n\tfor ($i = 1; $i <= $count; $i++) {\n\t\tif ($i >= 2)\
    \ {\n\t\t\t$result = str_replace(\"__\", \"-\", $result);\n\t\t}\n\t}\n\treturn\
    \ $result;\n}\n\necho fix_spaces(\" Example 1\") . \"<br>\";\necho fix_spaces(\"\
    \ Example 2\") . \"<br>\";\necho fix_spaces(\" Example 3\") . \"<br>\";\necho\
    \ fix_spaces(\" Example 4\") . \"<br>\";\necho fix_spaces(\" Example 5\") . \"\
    <br>\";\necho fix_spaces(\" Example 6\") . \"<br>\";\necho fix_spaces(\" Example\
    \ 7\") . \"<br>\";\necho fix_spaces(\" Example 8\") . \"<br>\";\necho fix_spaces(\"\
    \ Example 9\") . \"<br>\";\necho fix_spaces(\" Example 10\") . \"<br>\";\necho\
    \ fix_spaces(\" Example 11\") . \"<br>\";\necho fix_spaces(\" Example 12\") .\
    \ \"<br>\";\necho fix_spaces(\" Example 13\") . \"<br>\";\n", "    $new_text =\
    \ $text;\n    $new_text = trim($new_text);\n    $new_text = str_replace(\" \"\
    , \"_\", $new_text);\n    $new_text = str_replace(\"_ _\", \"_\", $new_text);\n\
    \    $new_text = str_replace(\"_ _\", \"-\", $new_text);\n    $new_text = str_replace(\"\
    _ _\", \"-\", $new_text);\n    return $new_text;\n}", "    $tmp = explode(\" \"\
    , $text);\n    $current_space = 0;\n    $text = \"\";\n    foreach ($tmp as $item)\
    \ {\n        if (strlen($item) == 0) {\n            $current_space++;\n      \
    \      if ($current_space > 2) {\n                $text .= \"-\";\n          \
    \  } else {\n                $text .= \"_\";\n            }\n        } else {\n\
    \            $current_space = 0;\n            $text .= $item;\n        }\n   \
    \ }\n    return $text;\n}\n\necho fix_spaces(\" Example\");\necho \"\\n\";\necho\
    \ fix_spaces(\" Example 1\");\necho \"\\n\";\necho fix_spaces(\" Example 2\");\n\
    echo \"\\n\";\necho fix_spaces(\" Example 3\");\necho \"\\n\";\necho fix_spaces(\"\
    \ Example 4\");\necho \"\\n\";\necho fix_spaces(\" Example 5\");\necho \"\\n\"\
    ;\necho fix_spaces(\" Example 6\");\necho \"\\n\";\necho fix_spaces(\" Example\
    \ 7\");\necho \"\\n\";\necho fix_spaces(\" Example 8\");\necho \"\\n\";\necho\
    \ fix_spaces(\" Example 9\");\necho \"\\n\";", "\t$a = str_replace(\" \", \"_\"\
    , $text);\n\t$b = preg_replace(\"/__+/\", \"--\", $a);\n\treturn preg_replace(\"\
    /^_+/\", \"\", $b);\n}\n$text = \" Example 2\";\necho fix_spaces($text);", "\t\
    $count = 0;\n\t$text = trim($text);\n\t$text = preg_replace('/\\s+/', '_', $text);\n\
    \tfor ($i=0; $i < strlen($text); $i++) { \n\t\tif ($text[$i] == '_') {\n\t\t\t\
    $count++;\n\t\t} else {\n\t\t\t$count = 0;\n\t\t}\n\t\tif ($count == 3) {\n\t\t\
    \t$i-=2;\n\t\t\t$text[$i] = '-';\n\t\t\t$count = 0;\n\t\t}\n\t}\n\treturn $text;\n\
    }\necho fix_spaces(\"   Example 3\");", "  $text = trim($text);\n  $text = str_replace(\"\
    \ \", \"_\", $text);\n  $text = preg_replace(\"/_{2,}/\", \"-\", $text);\n  return\
    \ $text;\n}", "    $text = str_replace(\" \", \"_\", $text);\n    $text = str_replace(\"\
    __\", \"-\", $text);\n    $text = str_replace(\"___\", \"-\", $text);\n    return\
    \ $text;\n}\n", "    $text = trim($text);\n    $text = str_replace(' ', '_', $text);\n\
    \    $text = preg_replace('/[_]+/', '_', $text);\n    $text = preg_replace('/[_]+-/',\
    \ '-', $text);\n    return $text;\n}\n", "\t$temp = '';\n\t$text_len = strlen($text);\n\
    \tfor ($i = 0; $i < $text_len; $i++) {\n\t\tif ($text[$i] == ' ') {\n\t\t\tif\
    \ ($temp == '') {\n\t\t\t\tcontinue;\n\t\t\t} else {\n\t\t\t\t$temp .= '_';\n\t\
    \t\t}\n\t\t} else {\n\t\t\t$temp .= $text[$i];\n\t\t}\n\t}\n\t$text = $temp;\n\
    \treturn $text;\n}\n$test = fix_spaces(\" Example 3\");\necho $test;\necho \"\
    <br>\";", "    $text = trim($text);\n    // $text = preg_replace('/\\s+/', '_',\
    \ $text);\n    $text = preg_replace(\"/\\s+/\", '_', $text);\n    return $text;\n\
    }\n$text = \" Example 2\";\necho fix_spaces($text);", "    $punctuations = array(\"\
    .\", \",\", \"?\", \";\", \":\", \"!\", \" \");\n    $new_text = str_replace(\"\
    \ \", \"_\", $text);\n    $new_text = str_replace(\"  \", \" \", $new_text);\n\
    \    $new_text = str_replace(\"  \", \"-\", $new_text);\n    foreach ($punctuations\
    \ as $punctuation) {\n        $new_text = str_replace($punctuation . \"_\", $punctuation,\
    \ $new_text);\n    }\n    return $new_text;\n}", "\t$text = str_replace(\" \"\
    , \"_\", $text);\n\t$text = str_replace(\"__\", \"_\", $text);\n\t$text = str_replace(\"\
    ___\", \"-\", $text);\n\treturn $text;\n}", "    $text = preg_replace('/\\s+/',\
    \ '_', $text);\n    $text = preg_replace('/\\s\\s/', '-', $text);\n    return\
    \ $text;\n}\necho fix_spaces(\" Example\") . \"\\n\";\necho fix_spaces(\" Example\
    \ 1\") . \"\\n\";\necho fix_spaces(\" Example 2\") . \"\\n\";\necho fix_spaces(\"\
    \ Example 3\") . \"\\n\";\necho fix_spaces(\" Example 3     4\") . \"\\n\";",
  "\t$text = str_replace(\" \", \"_\", $text);\n\t$text = str_replace(\"__\", \"_\"\
    , $text);\n\t$text = str_replace(\"___\", \"-\", $text);\n\t$text = str_replace(\"\
    ____\", \"-\", $text);\n\treturn $text;\n}\n\necho fix_spaces(\" Example 2\");",
  "  return preg_replace(\"/[ ]{2,}/\", \"_\", $text);\n}\n", "    // $text_array\
    \ = explode(\" \",$text);\n    // $text_array = implode(\"_\",$text_array);\n\
    \    // return $text_array;\n    // $text_array = str_replace(\" \",\"_\",$text);\n\
    \    // return $text_array;\n    return preg_replace(\"/ +/\",\"-\",str_replace(\"\
    \ \",\"_\",$text));\n}\necho fix_spaces(\" Example 3\");", "\t$text= str_replace('\
    \ ', '_', $text);\n\t$text= str_replace('__', '-', $text);\n\treturn $text;\n\
    }\n", "    $arr = str_split($text);\n    $res = \"\";\n    for ($i = 0; $i < count($arr);\
    \ $i++) {\n        if ($arr[$i] == \" \") {\n            if ($res[strlen($res)\
    \ - 1] == \" \") {\n                if ($res[strlen($res) - 2] == \" \") {\n \
    \                   $res = substr($res, 0, strlen($res) - 2) . \"-\";\n      \
    \          } else {\n                    $res = substr($res, 0, strlen($res) -\
    \ 1) . \"_\";\n                }\n            } else {\n                $res .=\
    \ \"_\";\n            }\n        } else {\n            $res .= $arr[$i];\n   \
    \     }\n    }\n    return $res;\n}\necho fix_spaces(\" Example\") . \"<br>\"\
    ;\necho fix_spaces(\" Example 1\") . \"<br>\";\necho fix_spaces(\" Example 2\"\
    ) . \"<br>\";\necho fix_spaces(\" Example 3\") . \"<br>\";\necho fix_spaces(\"\
    \        Example 4\") . \"<br>\";\necho fix_spaces(\"        Example      5  \
    \  \") . \"<br>\";\necho fix_spaces(\"        Example       6\") . \"<br>\";",
  "\treturn preg_replace('/ /', '_', $text);\n}\n", "    // Write code here.\n}\n",
  "    $result = \"\";\n    $current_space_count = 0;\n    for ($i = 0; $i < strlen($text);\
    \ $i++) {\n        if ($text[$i] == \" \") {\n            $current_space_count++;\n\
    \            if ($current_space_count == 1) {\n                $result .= \"_\"\
    ;\n            } else if ($current_space_count > 2) {\n                $result\
    \ .= \"-\";\n            }\n        } else {\n            $result .= $text[$i];\n\
    \            $current_space_count = 0;\n        }\n    }\n    return $result;\n\
    }\n", "    return preg_replace(\"/\\s/\", \"_\", $text);\n}\n", "\t// Split the\
    \ string into an array of words.\n\t$words = explode(\" \", $text);\n\t// Filter\
    \ out empty words.\n\t$words = array_filter($words, function($word) {\n\t\treturn\
    \ $word !== \"\";\n\t});\n\t// Calculate the number of words in the new array.\n\
    \t$word_count = count($words);\n\t// Join the words with underscores.\n\t$text\
    \ = implode(\"_\", $words);\n\t// If there is more than one word, put a dash between\
    \ the second and third.\n\tif ($word_count > 2) {\n\t\t$text = str_replace(\"\
    _\" . $words[1] . \"_\", \"_\" . $words[1] . \"-\", $text);\n\t}\n\t// If there\
    \ is only one word, remove the underscore.\n\tif ($word_count == 1) {\n\t\t$text\
    \ = str_replace(\"_\", \"\", $text);\n\t}\n\t// Return the string.\n\treturn $text;\n\
    }\n", "    $text = trim($text);\n    $text = preg_replace('/\\s+/', ' ', $text);\n\
    \    $text = str_replace(' ', '_', $text);\n    $text = preg_replace('/_+/', '_',\
    \ $text);\n    $text = preg_replace('/_/', '-', $text, 1);\n    return $text;\n\
    }\necho fix_spaces(\"    Example   \");", "    $pattern = '/\\s+/';\n    $replacement\
    \ = '-';\n    return preg_replace($pattern, $replacement, $text);\n}\n\n$string\
    \ = \" Example 3\";\necho fix_spaces($string);", "    $array = explode(\" \",\
    \ $text);\n    $result = \"\";\n    foreach ($array as $x) {\n        if (strlen($x)\
    \ > 0) {\n            $result .= $x.\"_\";\n        }\n    }\n    return rtrim($result,\
    \ \"_\");\n}\necho fix_spaces(\" Example\").\"\\n\";\necho fix_spaces(\" Example\
    \ 1\").\"\\n\";\necho fix_spaces(\" Example 2\").\"\\n\";\necho fix_spaces(\"\
    \ Example 3\").\"\\n\";\n", "    $result = '';\n    $space_count = 0;\n    for\
    \ ($i = 0; $i < strlen($text); $i++) {\n        if ($text[$i] == ' ') {\n    \
    \        $space_count++;\n            if ($space_count == 1) {\n             \
    \   $result .= '_';\n            } else if ($space_count == 2) {\n           \
    \     $result .= '-';\n            }\n        } else {\n            $result .=\
    \ $text[$i];\n            $space_count = 0;\n        }\n    }\n    return $result;\n\
    }\n\n$string = ' Example 3';\n\necho fix_spaces($string);\n", "\t// TODO: your\
    \ code here\n}\necho fix_spaces(\" Example\").\"\\n\";\necho fix_spaces(\" Example\
    \ 1\").\"\\n\";\necho fix_spaces(\" Example 2\").\"\\n\";\necho fix_spaces(\"\
    \ Example 3\").\"\\n\";", "    $text = trim($text);\n    $result = \"\";\n   \
    \ $space_count = 0;\n    for ($i = 0; $i < strlen($text); $i++) {\n        if\
    \ ($text[$i] == \" \") {\n            $space_count++;\n            if ($space_count\
    \ > 2) {\n                $result .= \"-\";\n            } else {\n          \
    \      $result .= \"_\";\n            }\n        } else {\n            $result\
    \ .= $text[$i];\n            $space_count = 0;\n        }\n    }\n    return $result;\n\
    }\n", "    return preg_replace(\"/\\s{2,}/\", \"-\", str_replace(\" \", \"_\"\
    , trim($text)));\n}\n", "    return preg_replace(\"/[ ]{2,}/\", '-', preg_replace(\"\
    /[ ]/\", '_', $text));\n}\n\necho fix_spaces(\" Example\");\necho \"\\n\";\necho\
    \ fix_spaces(\" Example 1\");\necho \"\\n\";\necho fix_spaces(\" Example 2\");\n\
    echo \"\\n\";\necho fix_spaces(\" Example 3\");\necho \"\\n\";\necho fix_spaces(\"\
    \ Example 4\");\necho \"\\n\";", "  // your code here\n}", "    $newtext = preg_replace('/\\\
    s+/', '-', $text);\n    $newtext = str_replace(' ', '_', $newtext);\n    return\
    \ $newtext;\n}\nprint_r(fix_spaces(\" Example 3\"));", "\t$text = trim($text);\n\
    \t$text = preg_replace('/\\s+/', '_', $text);\n\t$text = preg_replace('/\\s{2,}/',\
    \ '-', $text);\n\treturn $text;\n}\necho \"Example:\\n\";\necho fix_spaces(\"\
    Example\");\necho \"\\nExample 1:\\n\";\necho fix_spaces(\"Example 1\");\necho\
    \ \"\\nExample 2:\\n\";\necho fix_spaces(\"Example 2\");\necho \"\\nExample 3:\\\
    n\";\necho fix_spaces(\"Example 3\");", "    $str_1 = str_replace(\" \", \"_\"\
    , $text);\n    $str_2 = str_replace(\"__\", \"-\", $str_1);\n    $str_3 = str_replace(\"\
    __\", \"-\", $str_2);\n    return $str_3;\n}\n", "    $text = trim($text);\n \
    \   $text = str_replace(' ', '_', $text);\n    if (strpos($text, '__') !== false)\
    \ {\n        $text = str_replace('__', '-', $text);\n    }\n    return $text;\n\
    }\necho fix_spaces(\" Example 1\");\necho '<br>';\necho fix_spaces(\" Example\
    \ 2\");\necho '<br>';\necho fix_spaces(\" Example 3\");\necho '<br>';\n", "  \
    \  // your code here\n}\n", "    if ($text) {\n        $text = trim($text);\n\
    \        if (strlen($text) > 2) {\n            $text = preg_replace('/(?<= )(\
    \ )*/', '_', $text);\n            $text = preg_replace('/(?<=_)(_)*/', '-', $text);\n\
    \        }\n    }\n\n    return $text;\n}", "    // Replace all spaces with underscore\n\
    \    $text = str_replace(\" \", \"_\", $text);\n    $text = str_replace(\"__\"\
    , \"-\", $text);\n    // Remove leading underscore\n    if (strlen($text) > 0\
    \ && $text[0] == \"_\")\n        $text = substr($text, 1);\n    return $text;\n\
    }\n\necho fix_spaces(\" Example\") . PHP_EOL;\necho fix_spaces(\" Example 1\"\
    ) . PHP_EOL;\necho fix_spaces(\" Example 2\") . PHP_EOL;\necho fix_spaces(\" Example\
    \ 3\") . PHP_EOL;", "\t$space_count = 0;\n\t$chars = str_split($text);\n\t$result\
    \ = '';\n\tforeach ($chars as $char) {\n\t\tif ($char == ' ') {\n\t\t\t$space_count++;\n\
    \t\t\tif ($space_count <= 2) {\n\t\t\t\t$result .= $char;\n\t\t\t} else {\n\t\t\
    \t\t$result .= '-';\n\t\t\t}\n\t\t} else {\n\t\t\t$space_count = 0;\n\t\t\t$result\
    \ .= $char;\n\t\t}\n\t}\n\treturn $result;\n}\necho fix_spaces(\" Example\") .\
    \ \"\\n\";\necho fix_spaces(\" Example 1\") . \"\\n\";\necho fix_spaces(\" Example\
    \ 2\") . \"\\n\";\necho fix_spaces(\" Example 3\") . \"\\n\";\necho fix_spaces(\"\
    \ Example 4\") . \"\\n\";\necho fix_spaces(\" Example 5\") . \"\\n\";\necho fix_spaces(\"\
    \ Example 6\") . \"\\n\";\necho fix_spaces(\" Example 7\") . \"\\n\";\necho fix_spaces(\"\
    \ Example 8\") . \"\\n\";", "\t$space = \" \";\n\t$underscore = \"_\";\n\t$new_text\
    \ = str_replace($space, $underscore, $text);\n\t$dash = \"-\";\n\t$new_text =\
    \ str_replace(\"__\", $dash, $new_text);\n\treturn $new_text;\n}\n\necho fix_spaces(\"\
    \ Example\");\necho \"\\n\";\necho fix_spaces(\" Example 1\");\necho \"\\n\";\n\
    echo fix_spaces(\" Example 2\");\necho \"\\n\";\necho fix_spaces(\" Example 3\"\
    );", "    // set first char as fixed and set it to none of the spaces\n    $fixed_char\
    \ = '';\n    // loop through text, starting with second char\n    for ($i = 1;\
    \ $i < strlen($text); $i++) {\n        $current_char = $text[$i];\n        //\
    \ if current char is space and last fixed char is space, set current char to underscore\n\
    \        if (is_space($current_char) && is_space($fixed_char)) {\n           \
    \ $text[$i] = '_';\n        }\n        // if current char is space and last fixed\
    \ char is underscore, set current char to hyphen\n        else if (is_space($current_char)\
    \ && $fixed_char == '_') {\n            $text[$i] = '-';\n        }\n        //\
    \ if current char is space and last fixed char is hyphen, set current char to\
    \ underscore\n        else if (is_space($current_char) && $fixed_char == '-')\
    \ {\n            $text[$i] = '_';\n        }\n        // set last fixed char to\
    \ current char\n        $fixed_char = $text[$i];\n    }\n    // return fixed string\n\
    \    return $text;\n}", "\t// preg_replace('/ /', '_', $text);\n\t// preg_replace('/\
    \ {2,}/', '_', $text);\n\t// preg_replace('/ {3,}/', '-', $text);\n\t$text = preg_replace('/\\\
    s{3,}/', '-', $text);\n\t$text = preg_replace('/\\s{2,}/', '_', $text);\n\t$text\
    \ = preg_replace('/ /', '', $text);\n\treturn $text;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

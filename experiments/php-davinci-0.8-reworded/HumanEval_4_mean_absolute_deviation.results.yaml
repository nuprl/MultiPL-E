language: php
name: HumanEval_4_mean_absolute_deviation
results:
- exit_code: 0
  program: "<?php\n// For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is\
    \ the average absolute difference between each\n// element and a centerpoint (mean\
    \ in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n  //\
    \ Calculate the average of input numbers.\n  $n = count($numbers);\n  $sum = 0;\n\
    \  for ($i = 0; $i < $n; $i++) {\n    $sum += $numbers[$i];\n  }\n  $mean = $sum\
    \ / $n;\n\n  // Calculate the sum of absolute difference from the mean.\n  $diff_sum\
    \ = 0;\n  for ($i = 0; $i < $n; $i++) {\n    $diff_sum += abs($numbers[$i] - $mean);\n\
    \  }\n\n  // Return the average absolute difference.\n  return $diff_sum / $n;\n\
    }\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is\
    \ the average absolute difference between each\n// element and a centerpoint (mean\
    \ in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n\t$mean\
    \ = mean($numbers);\n\t$abs = array_map(function($x) use ($mean) {\n\t\treturn\
    \ abs($x - $mean);\n\t}, $numbers);\n\treturn mean($abs);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpj91h2ltn.php:10\n\
    Stack trace:\n#0 /tmp/tmpj91h2ltn.php(18): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpj91h2ltn.php(22): candidate(Array)\n#2 /tmp/tmpj91h2ltn.php(27): test()\n\
    #3 {main}\n  thrown in /tmp/tmpj91h2ltn.php on line 10\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is\
    \ the average absolute difference between each\n// element and a centerpoint (mean\
    \ in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n  $sum\
    \ = 0;\n  $count = count($numbers);\n  $mean = mean($numbers);\n  foreach ($numbers\
    \ as $number) {\n    $sum += abs($number - $mean);\n  }\n  return $sum / $count;\n\
    }\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp7czprp6z.php:12\n\
    Stack trace:\n#0 /tmp/tmp7czprp6z.php(20): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmp7czprp6z.php(24): candidate(Array)\n#2 /tmp/tmp7czprp6z.php(29): test()\n\
    #3 {main}\n  thrown in /tmp/tmp7czprp6z.php on line 12\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is\
    \ the average absolute difference between each\n// element and a centerpoint (mean\
    \ in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n  $mean\
    \ = average($numbers);\n  $absolute_deviations = array();\n  foreach ($numbers\
    \ as $number) {\n    $absolute_deviations[] = abs($number - $mean);\n  }\n  return\
    \ average($absolute_deviations);\n}\n\nfunction candidate(...$args) {\n    return\
    \ mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function average() in\
    \ /tmp/tmps8n88822.php:10\nStack trace:\n#0 /tmp/tmps8n88822.php(19): mean_absolute_deviation(Array)\n\
    #1 /tmp/tmps8n88822.php(23): candidate(Array)\n#2 /tmp/tmps8n88822.php(28): test()\n\
    #3 {main}\n  thrown in /tmp/tmps8n88822.php on line 10\n"
  timestamp: 1659823782
- exit_code: 0
  program: "<?php\n// For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is\
    \ the average absolute difference between each\n// element and a centerpoint (mean\
    \ in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n  $mean\
    \ = array_sum($numbers) / count($numbers);\n  $absolute_deviations = array();\n\
    \  foreach ($numbers as $number) {\n    $absolute_deviations[] = abs($number -\
    \ $mean);\n  }\n  return array_sum($absolute_deviations) / count($absolute_deviations);\n\
    }\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823782
- exit_code: 0
  program: "<?php\n// For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is\
    \ the average absolute difference between each\n// element and a centerpoint (mean\
    \ in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $total\
    \ = count($numbers);\n    $mean = array_sum($numbers) / $total;\n    $deviation\
    \ = array();\n    foreach ($numbers as $number) {\n        $deviation[] = abs($number\
    \ - $mean);\n    }\n    return array_sum($deviation) / $total;\n}\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is\
    \ the average absolute difference between each\n// element and a centerpoint (mean\
    \ in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n\t$n\
    \ = count($numbers);\n\t$sum = 0;\n\t$sum_squares = 0;\n\tfor ($i = 0; $i < $n;\
    \ $i++) {\n\t\t$sum += $numbers[$i];\n\t\t$sum_squares += $numbers[$i] * $numbers[$i];\n\
    \t}\n\t$mean = $sum / $n;\n\t$variance = ($sum_squares - $sum * $sum / $n) / ($n\
    \ - 1);\n\treturn sqrt($variance);\n}\n\nfunction candidate(...$args) {\n    return\
    \ mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyt03g72b.php:27\n\
    Stack trace:\n#0 /tmp/tmpyt03g72b.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpyt03g72b.php\
    \ on line 27\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is\
    \ the average absolute difference between each\n// element and a centerpoint (mean\
    \ in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    //\
    \ Calculate the mean\n    $mean = array_sum($numbers) / count($numbers);\n   \
    \ // And then the mean absolute deviation.\n    $mad = 0.0;\n    foreach ($numbers\
    \ as $number) {\n        $mad += abs($number - $mean);\n    }\n    $mad /= count($numbers);\n\
    \    return $mad;\n}\n\n$file = fopen(\"input.txt\", \"r\");\n$values = [];\n\
    while (($buffer = fgets($file)) !== false) {\n    $values[] = (int) $buffer;\n\
    }\nfclose($file);\n\n$mean = array_sum($values) / count($values);\n\n$mad = mean_absolute_deviation($values);\n\
    echo \"mean=\".$mean.\"\\n\";\necho \"mad=\".$mad.\"\\n\";\necho \"upper=\".(floor($mean\
    \ + $mad)).\"\\n\";\necho \"lower=\".(ceil($mean - $mad)).\"\\n\";\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: fopen(input.txt): Failed to open stream: No such file or directory\
    \ in /tmp/tmp14qg3b14.php on line 21\n\nFatal error: Uncaught TypeError: fgets():\
    \ Argument #1 ($stream) must be of type resource, bool given in /tmp/tmp14qg3b14.php:23\n\
    Stack trace:\n#0 /tmp/tmp14qg3b14.php(23): fgets(false)\n#1 {main}\n  thrown in\
    \ /tmp/tmp14qg3b14.php on line 23\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is\
    \ the average absolute difference between each\n// element and a centerpoint (mean\
    \ in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n  $mean\
    \ = mean($numbers);\n  $absolute_deviations = array();\n  for ($i = 0; $i < count($numbers);\
    \ $i++) {\n    $absolute_deviations[] = abs($numbers[$i] - $mean);\n  }\n  return\
    \ mean($absolute_deviations);\n}\n\nfunction candidate(...$args) {\n    return\
    \ mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmp0sz3wdr7.php:10\n\
    Stack trace:\n#0 /tmp/tmp0sz3wdr7.php(19): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmp0sz3wdr7.php(23): candidate(Array)\n#2 /tmp/tmp0sz3wdr7.php(28): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0sz3wdr7.php on line 10\n"
  timestamp: 1659823782
- exit_code: 0
  program: "<?php\n// For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is\
    \ the average absolute difference between each\n// element and a centerpoint (mean\
    \ in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $deviations\
    \ = array();\n    $mean = array_sum($numbers) / count($numbers);\n    for ($i\
    \ = 0; $i < count($numbers); $i++) {\n        $deviations[] = abs($numbers[$i]\
    \ - $mean);\n    }\n    return array_sum($deviations) / count($deviations);\n\
    }\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is\
    \ the average absolute difference between each\n// element and a centerpoint (mean\
    \ in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = mean($numbers);\n    $deviations = array();\n    foreach ($numbers as $x)\
    \ {\n        $deviations[] = abs($x - $mean);\n    }\n    return mean($deviations);\n\
    }\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmprw83t_ms.php:10\n\
    Stack trace:\n#0 /tmp/tmprw83t_ms.php(18): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmprw83t_ms.php(22): candidate(Array)\n#2 /tmp/tmprw83t_ms.php(27): test()\n\
    #3 {main}\n  thrown in /tmp/tmprw83t_ms.php on line 10\n"
  timestamp: 1659823782
- exit_code: 0
  program: "<?php\n// For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is\
    \ the average absolute difference between each\n// element and a centerpoint (mean\
    \ in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $total\
    \ = 0;\n    $count = count($numbers);\n    $mean = array_sum($numbers) / $count;\n\
    \    foreach ($numbers as $number) {\n        $total += abs($number - $mean);\n\
    \    }\n    return $total / $count;\n}\nfunction candidate(...$args) {\n    return\
    \ mean_absolute_deviation(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0)) !== 0.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is\
    \ the average absolute difference between each\n// element and a centerpoint (mean\
    \ in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n\t$mean\
    \ = mean($numbers);\n\t$abs_differences = array();\n\tforeach ($numbers as $number)\
    \ {\n\t\t$abs_differences[] = abs($number - $mean);\n\t}\n\treturn mean($abs_differences);\n\
    }\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpo9me8mk5.php:10\n\
    Stack trace:\n#0 /tmp/tmpo9me8mk5.php(19): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpo9me8mk5.php(23): candidate(Array)\n#2 /tmp/tmpo9me8mk5.php(28): test()\n\
    #3 {main}\n  thrown in /tmp/tmpo9me8mk5.php on line 10\n"
  timestamp: 1659823782
- exit_code: 0
  program: "<?php\n// For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is\
    \ the average absolute difference between each\n// element and a centerpoint (mean\
    \ in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $length\
    \ = count($numbers);\n    $mean = array_sum($numbers) / $length;\n    $abs_deviation\
    \ = array();\n    foreach ($numbers as $number) {\n        $abs_deviation[] =\
    \ abs($number - $mean);\n    }\n    return array_sum($abs_deviation) / $length;\n\
    }\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823782
- exit_code: 0
  program: "<?php\n// For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is\
    \ the average absolute difference between each\n// element and a centerpoint (mean\
    \ in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n  $mean\
    \ = array_sum($numbers) / count($numbers);\n  $deviations = array();\n  foreach\
    \ ($numbers as $number) {\n    $deviations[] = abs($number - $mean);\n  }\n  return\
    \ array_sum($deviations) / count($deviations);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823782
- exit_code: 0
  program: "<?php\n// For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is\
    \ the average absolute difference between each\n// element and a centerpoint (mean\
    \ in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n\t$sum\
    \ = 0;\n\tforeach ($numbers as $number) {\n\t\t$sum += $number;\n\t}\n\t$avg =\
    \ $sum / count($numbers);\n\t$sum = 0;\n\tforeach ($numbers as $number) {\n\t\t\
    $sum += abs($number - $avg);\n\t}\n\treturn $sum / count($numbers);\n}\n\nfunction\
    \ candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is\
    \ the average absolute difference between each\n// element and a centerpoint (mean\
    \ in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    //\
    \ return 0 if list is empty or it only has one value\n    if (count($numbers)\
    \ <= 1) return 0;\n    // get mean of values\n    $mean = mean($numbers);\n  \
    \  // sum of all differences\n    $sum = 0;\n    foreach ($numbers as $value)\
    \ {\n        $sum += abs($value - $mean);\n    }\n    // return the mean of all\
    \ differences\n    return $sum / count($numbers);\n}\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function mean() in /tmp/tmpwepcyoa8.php:13\n\
    Stack trace:\n#0 /tmp/tmpwepcyoa8.php(23): mean_absolute_deviation(Array)\n#1\
    \ /tmp/tmpwepcyoa8.php(27): candidate(Array)\n#2 /tmp/tmpwepcyoa8.php(32): test()\n\
    #3 {main}\n  thrown in /tmp/tmpwepcyoa8.php on line 13\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is\
    \ the average absolute difference between each\n// element and a centerpoint (mean\
    \ in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n  //\
    \ Remember to sort from smallest to largest, using your sorting algorithm!\n \
    \ $numbers = insertion_sort($numbers);\n  // Find the mean of the array\n  $mean\
    \ = mean($numbers);\n  // Loop through the array, calculating each element's deviation\
    \ from the mean\n  // Add these deviations to a temporary array\n  $deviations\
    \ = array();\n  foreach ($numbers as $number) {\n    $deviations[] = abs($number\
    \ - $mean);\n  }\n  // Return the mean of the deviations.\n  return mean($deviations);\n\
    }\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function insertion_sort()\
    \ in /tmp/tmp6i83yh8k.php:11\nStack trace:\n#0 /tmp/tmp6i83yh8k.php(25): mean_absolute_deviation(Array)\n\
    #1 /tmp/tmp6i83yh8k.php(29): candidate(Array)\n#2 /tmp/tmp6i83yh8k.php(34): test()\n\
    #3 {main}\n  thrown in /tmp/tmp6i83yh8k.php on line 11\n"
  timestamp: 1659823782
- exit_code: 0
  program: "<?php\n// For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is\
    \ the average absolute difference between each\n// element and a centerpoint (mean\
    \ in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n    $mean\
    \ = array_sum($numbers) / count($numbers);\n    $diffs = array();\n    foreach\
    \ ($numbers as $number) {\n        $diffs[] = abs($number - $mean);\n    }\n \
    \   return array_sum($diffs) / count($diffs);\n}\n\nfunction candidate(...$args)\
    \ {\n    return mean_absolute_deviation(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823782
- exit_code: 0
  program: "<?php\n// For a given array of input numbers, calculate Mean Absolute\
    \ Deviation\n// around the mean of this dataset.\n// Mean Absolute Deviation is\
    \ the average absolute difference between each\n// element and a centerpoint (mean\
    \ in this case):\n// MAD = average | x - x_mean |\n// >>> mean_absolute_deviation(array(1.0,\
    \ 2.0, 3.0, 4.0))\n// 1.0\nfunction mean_absolute_deviation($numbers) {\n  //\
    \ Check that array is not empty\n  if (sizeof($numbers) == 0) {\n    return NULL;\n\
    \  }\n  // Calculate mean of the numbers\n  $mean = array_sum($numbers) / sizeof($numbers);\n\
    \  // Calculate deviation from mean for each element\n  $deviation = array();\n\
    \  foreach ($numbers as $number) {\n    $deviation[] = abs($number - $mean);\n\
    \  }\n  // Calculate mean of deviations\n  return array_sum($deviation) / sizeof($deviation);\n\
    }\n\nfunction candidate(...$args) {\n    return mean_absolute_deviation(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0)) !== 0.5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0))\
    \ !== 1.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823782

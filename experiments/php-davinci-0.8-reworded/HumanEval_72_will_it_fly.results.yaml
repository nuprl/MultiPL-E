language: php
name: HumanEval_72_will_it_fly
results:
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$tmpArray = $q;\n\t$counter = count($tmpArray);\n\
    \tfor ($i = 0; $i < $counter; $i++) {\n\t\tif ($tmpArray[$i] != end($tmpArray))\
    \ {\n\t\t\tarray_pop($tmpArray);\n\t\t} else {\n\t\t\tarray_pop($tmpArray);\n\t\
    \t\t$sum = array_sum($q);\n\t\t\tif ($sum <= $w) {\n\t\t\t\treturn true;\n\t\t\
    \t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n}\n\n$q = array(5, 4,\
    \ 3, 2, 1);\n$w = 3;\n\necho will_it_fly($q, $w);\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 1 in /tmp/tmpq1i8l1ek.php on line 21\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpq1i8l1ek.php:45\nStack\
    \ trace:\n#0 /tmp/tmpq1i8l1ek.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpq1i8l1ek.php\
    \ on line 45\n"
  timestamp: 1659824386
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t// your code here\n  $qStr = implode($q);\n\
    \  $qRev = array_reverse($q);\n  $qRevStr = implode($qRev);\n  if ($qStr == $qRevStr)\
    \ {\n    $sum = array_sum($q);\n    if ($sum <= $w) {\n      return true;\n  \
    \  }\n  }\n  return false;\n}\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824386
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\n}\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2xh9lyf1.php:25\n\
    Stack trace:\n#0 /tmp/tmp2xh9lyf1.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp2xh9lyf1.php\
    \ on line 25\n"
  timestamp: 1659824386
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $len = count($q);\n    if ($len % 2 === 0)\
    \ {\n        return array_sum($q) <= $w && $q === array_reverse($q);\n    } else\
    \ {\n        return array_sum($q) <= $w && $q === array_reverse(array_slice($q,\
    \ 1)) && $q[0] < $w;\n    }\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnodqp14p.php:31\n\
    Stack trace:\n#0 /tmp/tmpnodqp14p.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpnodqp14p.php\
    \ on line 31\n"
  timestamp: 1659824386
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpakiuul6s.php:26\n\
    Stack trace:\n#0 /tmp/tmpakiuul6s.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpakiuul6s.php\
    \ on line 26\n"
  timestamp: 1659824386
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\tif (sum($q) <= $w && palindrome($q)) {\n\t\t\
    return true;\n\t}\n\treturn false;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function sum() in /tmp/tmpz2n2eks4.php:18\n\
    Stack trace:\n#0 /tmp/tmpz2n2eks4.php(25): will_it_fly(Array, 9)\n#1 /tmp/tmpz2n2eks4.php(29):\
    \ candidate(Array, 9)\n#2 /tmp/tmpz2n2eks4.php(37): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpz2n2eks4.php on line 18\n"
  timestamp: 1659824386
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $result = 0;\n  $q = (array) $q;\n  $q_reversed\
    \ = array_reverse($q);\n  $q_sum = array_sum($q);\n  $bool = true;\n  if ($q_sum\
    \ <= $w) {\n    for ($i = 0; $i < count($q); $i++) {\n      if ($q[$i] == $q_reversed[$i])\
    \ {\n        $result = true;\n      } else {\n        $result = false;\n     \
    \   break;\n      }\n    }\n  } else {\n    $result = false;\n  }\n  return $result;\n\
    }\n\necho \"Test will_it_fly(array(1, 2), 5)\\n\";\necho will_it_fly(array(1,\
    \ 2), 5) . \"\\n\";\necho \"Test will_it_fly(array(3, 2, 3), 1)\\n\";\necho will_it_fly(array(3,\
    \ 2, 3), 1) . \"\\n\";\necho \"Test will_it_fly(array(3, 2, 3), 9)\\n\";\necho\
    \ will_it_fly(array(3, 2, 3), 9) . \"\\n\";\necho \"Test will_it_fly(array(3),\
    \ 5)\\n\";\necho will_it_fly(array(3), 5) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'Test will_it_fly(array(1, 2), 5)


    Test will_it_fly(array(3, 2, 3), 1)


    Test will_it_fly(array(3, 2, 3), 9)

    1

    Test will_it_fly(array(3), 5)

    1

    '
  timestamp: 1659824386
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$left = 0;\n\t$right = count($q) - 1;\n\t$sum\
    \ = 0;\n\twhile ($left < $right) {\n\t\tif ($q[$left] !== $q[$right]) {\n\t\t\t\
    return false;\n\t\t}\n\t\t$left += 1;\n\t\t$right -= 1;\n\t}\n\tforeach ($q as\
    \ $i) {\n\t\t$sum += $i;\n\t}\n\treturn $sum <= $w;\n}\n$a = array(1, 2);\n$b\
    \ = 5;\n$a1 = array(3, 2, 3);\n$b1 = 1;\n$a2 = array(3, 2, 3);\n$b2 = 9;\n$a3\
    \ = array(3);\n$b3 = 5;\necho \"Q: \";\nprint_r($a);\necho \"<br>\";\necho \"\
    W: \";\nprint_r($b);\necho \"<br>\";\necho \"Will it fly? :\";\necho will_it_fly($a,\
    \ $b);\necho \"<br>\";\necho \"Q: \";\nprint_r($a1);\necho \"<br>\";\necho \"\
    W: \";\nprint_r($b1);\necho \"<br>\";\necho \"Will it fly? :\";\necho will_it_fly($a1,\
    \ $b1);\necho \"<br>\";\necho \"Q: \";\nprint_r($a2);\necho \"<br>\";\necho \"\
    W: \";\nprint_r($b2);\necho \"<br>\";\necho \"Will it fly? :\";\necho will_it_fly($a2,\
    \ $b2);\necho \"<br>\";\necho \"Q: \";\nprint_r($a3);\necho \"<br>\";\necho \"\
    W: \";\nprint_r($b3);\necho \"<br>\";\necho \"Will it fly? :\";\necho will_it_fly($a3,\
    \ $b3);\necho \"<br>\";\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Q: Array\n(\n    [0] => 1\n    [1] => 2\n)\n<br>W: 5<br>Will it fly? :<br>Q:\
    \ Array\n(\n    [0] => 3\n    [1] => 2\n    [2] => 3\n)\n<br>W: 1<br>Will it fly?\
    \ :<br>Q: Array\n(\n    [0] => 3\n    [1] => 2\n    [2] => 3\n)\n<br>W: 9<br>Will\
    \ it fly? :1<br>Q: Array\n(\n    [0] => 3\n)\n<br>W: 5<br>Will it fly? :1<br>"
  timestamp: 1659824386
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$s = array_sum($q);\n\tif($s > $w) {\n\t\treturn\
    \ false;\n\t}\n\t$b = true;\n\t$c = count($q);\n\tfor($i = 0; $i < $c; $i++) {\n\
    \t\tif($q[$i] != $q[$c - $i - 1]) {\n\t\t\t$b = false;\n\t\t\tbreak;\n\t\t}\n\t\
    }\n\treturn $b;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824386
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $n = count($q);\n    $mid =\
    \ floor($n / 2);\n    $h = $mid;\n    if ($n % 2 == 0) {\n        $h--;\n    }\n\
    \    for ($i = 0; $i <= $h; $i++) {\n        $sum += $q[$i];\n        if ($q[$i]\
    \ != $q[$n - $i - 1]) {\n            return false;\n        }\n    }\n    return\
    \ $sum <= $w;\n}\n\n$a = array(1, 2);\n$b = array(3, 2, 3);\n$c = array(3);\n\n\
    function candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824386
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    if (array_sum($q) > $w) {\n        return\
    \ false;\n    }\n    if ($q != array_reverse($q)) {\n        return false;\n \
    \   }\n    return true;\n}\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824386
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $count = count($q);\n    $sum = array_sum($q);\n\
    \    if ($sum > $w) {\n        return false;\n    }\n    $l = 0;\n    $r = $count\
    \ - 1;\n    while ($l < $r) {\n        if ($q[$l] != $q[$r]) {\n            return\
    \ false;\n        }\n        $l++;\n        $r--;\n    }\n    return true;\n}\n\
    function candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824386
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    for ($i = 0; $i < count($q);\
    \ $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum > $w) {\n        return\
    \ false;\n    }\n    for ($i = 0; $i < count($q); $i++) {\n        if ($q[$i]\
    \ != $q[count($q) - 1 - $i]) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\n\necho \"<p>\" . will_it_fly(array(1, 2), 5) . \"</p>\"\
    ;\necho \"<p>\" . will_it_fly(array(3, 2, 3), 1) . \"</p>\";\necho \"<p>\" . will_it_fly(array(3,\
    \ 2, 3), 9) . \"</p>\";\necho \"<p>\" . will_it_fly(array(3), 5) . \"</p>\";\n\
    function candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: <p></p><p></p><p>1</p><p>1</p>
  timestamp: 1659824386
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    for ($i = 0; $i < count($q);\
    \ $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum > $w) {\n        return\
    \ false;\n    }\n    $first = 0;\n    $last = count($q) - 1;\n    while ($first\
    \ < $last) {\n        if ($q[$first] != $q[$last]) {\n            return false;\n\
    \        }\n        $first++;\n        $last--;\n    }\n    return true;\n}\n\n\
    function candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824386
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $len = count($q);\n  $sum = 0;\n  for ($i =\
    \ 0; $i < $len; $i++) {\n    $sum += $q[$i];\n  }\n  $result = $sum <= $w ? true\
    \ : false;\n  for ($i = 0; $i < $len; $i++) {\n    if ($q[$i] != $q[$len - $i\
    \ - 1]) {\n      $result = false;\n      break;\n    }\n  }\n  return $result;\n\
    }\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824386
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $balanced = is_balanced($q);\n  $sum = array_sum($q);\n\
    \  return $balanced && $sum <= $w;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_balanced()\
    \ in /tmp/tmpwrfcl1ah.php:18\nStack trace:\n#0 /tmp/tmpwrfcl1ah.php(24): will_it_fly(Array,\
    \ 9)\n#1 /tmp/tmpwrfcl1ah.php(28): candidate(Array, 9)\n#2 /tmp/tmpwrfcl1ah.php(36):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpwrfcl1ah.php on line 18\n"
  timestamp: 1659824386
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $q = array_map('intval', $q);\n    $sum =\
    \ array_sum($q);\n    $arr = array();\n    $pos = 0;\n    for ($i = 0; $i < count($q);\
    \ $i++) {\n        $arr[$pos] = $q[$i];\n        $pos++;\n    }\n    $back = array();\n\
    \    $pos1 = 0;\n    for ($i = count($q) - 1; $i >= 0; $i--) {\n        $back[$pos1]\
    \ = $q[$i];\n        $pos1++;\n    }\n    if ($sum <= $w && $arr == $back) {\n\
    \        return true;\n    } else {\n        return false;\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824386
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  // Your code here!\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbj9jgoas.php:26\n\
    Stack trace:\n#0 /tmp/tmpbj9jgoas.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpbj9jgoas.php\
    \ on line 26\n"
  timestamp: 1659824386
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $length = count($q);\n    for\
    \ ($i = 0; $i < $length; $i++) {\n        $sum += $q[$i];\n    }\n    for ($i\
    \ = 0; $i < $length / 2; $i++) {\n        if ($q[$i] != $q[$length - $i - 1])\
    \ {\n            return false;\n        }\n    }\n    if ($sum <= $w) {\n    \
    \    return true;\n    }\n    return false;\n}\nfunction candidate(...$args) {\n\
    \    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824386
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    foreach ($q as $item) {\n \
    \       $sum += $item;\n    }\n    if ($sum > $w) {\n        return false;\n \
    \   }\n    $value1 = array_slice($q, 0, count($q) / 2);\n    $value2 = array_slice($q,\
    \ count($q) / 2);\n    $value2 = array_reverse($value2);\n    if ($value1 == $value2)\
    \ {\n        return true;\n    }\n    return false;\n}\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 1.5 to int loses precision\
    \ in /tmp/tmpfymvt8v_.php on line 25\n\nDeprecated: Implicit conversion from float\
    \ 1.5 to int loses precision in /tmp/tmpfymvt8v_.php on line 26\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpfymvt8v_.php:38\nStack trace:\n\
    #0 /tmp/tmpfymvt8v_.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpfymvt8v_.php\
    \ on line 38\n"
  timestamp: 1659824386
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  if(is_array($q)){\n    $sum = 0;\n    $len =\
    \ count($q);\n    for($i = 0; $i < $len; $i++){\n      $sum += $q[$i];\n    }\n\
    \    if($sum <= $w){\n      $is_palindrome = is_palindrome($q);\n      if($is_palindrome){\n\
    \        return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_palindrome()\
    \ in /tmp/tmpp0mkgasf.php:25\nStack trace:\n#0 /tmp/tmpp0mkgasf.php(35): will_it_fly(Array,\
    \ 9)\n#1 /tmp/tmpp0mkgasf.php(39): candidate(Array, 9)\n#2 /tmp/tmpp0mkgasf.php(47):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpp0mkgasf.php on line 25\n"
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = 0;\n\tforeach ($q as $v) {\n\t\t$sum\
    \ += $v;\n\t}\n\treturn $sum <= $w && $q == array_reverse($q);\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  $len = count($q);\n  for ($i =\
    \ 0; $i < $len; $i++) {\n    $sum += $q[$i];\n  }\n  return $sum <= $w && $q ==\
    \ array_reverse($q);\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t// Write your code here\n\t// To print results\
    \ to the standard output you can use print\n\t// Example:\n\t// print \"Hello\
    \ world!\";\n\t$sum = 0;\n\tforeach ($q as $item) {\n\t\t$sum += $item;\n\t}\n\
    \tif ($sum > $w) {\n\t\treturn false;\n\t} else {\n\t\t$q_first = array_slice($q,\
    \ 0, floor(count($q) / 2));\n\t\t$q_second = array_slice($q, floor(count($q) /\
    \ 2));\n\t\t$i = 0;\n\t\tforeach ($q_first as $key => $value) {\n\t\t\tif ($value\
    \ == $q_second[count($q_second) - $i - 1]) {\n\t\t\t\t$i += 1;\n\t\t\t} else {\n\
    \t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}\n$q = array(3,\
    \ 2, 3);\n$w = 9;\nprint will_it_fly($q, $w);\nfunction candidate(...$args) {\n\
    \    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    // Your code here\n    $bal = true;\n    $sum\
    \ = 0;\n    for ($i = 0; $i < sizeof($q); $i++) {\n        $sum += $q[$i];\n \
    \       if ($q[$i] != $q[sizeof($q) - 1 - $i]) {\n            $bal = false;\n\
    \        }\n    }\n    if ($sum <= $w && $bal) {\n        return true;\n    }\
    \ else {\n        return false;\n    }\n}\n\nfunction candidate(...$args) {\n\
    \    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = 0;\n\t$length = count($q);\n\t$half =\
    \ floor($length / 2);\n\tfor ($i = 0; $i < $half; $i++) {\n\t\t$sum += $q[$i];\n\
    \t\tif ($i !== $length - $i - 1) $sum += $q[$length - $i - 1];\n\t}\n\treturn\
    \ ($sum <= $w && $sum == $q[$half - 1] + $q[$half]);\n}\n\n$q = array(3, 2, 3);\n\
    $w = 1;\necho will_it_fly($q, $w);\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1fidar39.php:37\n\
    Stack trace:\n#0 /tmp/tmp1fidar39.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp1fidar39.php\
    \ on line 37\n"
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $revArr = array_reverse($q);\n    $sum = array_sum($q);\n\
    \    if( $sum <= $w && $q == $revArr) {\n        return true;\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\treturn false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4rp627sv.php:26\n\
    Stack trace:\n#0 /tmp/tmp4rp627sv.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp4rp627sv.php\
    \ on line 26\n"
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\treturn $w >= array_sum($q) && is_palindrome($q);\n\
    }\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_palindrome()\
    \ in /tmp/tmpn7hpiqgk.php:18\nStack trace:\n#0 /tmp/tmpn7hpiqgk.php(22): will_it_fly(Array,\
    \ 9)\n#1 /tmp/tmpn7hpiqgk.php(26): candidate(Array, 9)\n#2 /tmp/tmpn7hpiqgk.php(34):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpn7hpiqgk.php on line 18\n"
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$total = 0;\n\tforeach ($q as $item) {\n\t\t\
    $total += $item;\n\t}\n\tif ($total > $w) {\n\t\treturn false;\n\t}\n\tif ($q\
    \ == array_reverse($q)) {\n\t\treturn true;\n\t}\n\treturn false;\n}\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $middle = floor(count($q) / 2);\n    for ($i\
    \ = 0; $i < $middle; $i++) {\n        if ($q[$i] != $q[count($q) - $i - 1]) {\n\
    \            return false;\n        }\n    }\n    return array_sum($q) <= $w;\n\
    }\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n   $total = array_sum($q);\n   if ($total <= $w)\
    \ {\n     return is_palindrome($q);\n   }\n   return false;\n}\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_palindrome()\
    \ in /tmp/tmpaxfq4jdn.php:20\nStack trace:\n#0 /tmp/tmpaxfq4jdn.php(25): will_it_fly(Array,\
    \ 9)\n#1 /tmp/tmpaxfq4jdn.php(29): candidate(Array, 9)\n#2 /tmp/tmpaxfq4jdn.php(37):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpaxfq4jdn.php on line 20\n"
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $count = count($q);\n  $sum = array_sum($q);\n\
    \  $arr = [];\n  $j = $count-1;\n  for ($i=0; $i < $count; $i++) {\n    $arr[$i]\
    \ = $q[$j];\n    $j--;\n  }\n  if ($sum <= $w && $arr == $q) {\n    return true;\n\
    \  } else {\n    return false;\n  }\n}\n\nfunction candidate(...$args) {\n   \
    \ return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    // Write your code here\n    // To print results\
    \ to the standard output you can use print\n    // Example:\n    // print \"Hello\
    \ world!\";\n    $sum = 0;\n    $mid = floor(count($q)/2);\n    $end = count($q)-1;\n\
    \    for($i=0; $i<$mid; $i++){\n        $sum += $q[$i];\n        if ($q[$i] !=\
    \ $q[$end - $i]) return false;\n    }\n    $sum += $q[$mid];\n    if ($sum <=\
    \ $w) return true;\n    return false;\n}\nfunction candidate(...$args) {\n   \
    \ return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    if(array_sum($q) <= $w && array_sum($q) ==\
    \ array_sum(array_reverse($q))){\n        return true;\n    }\n    return false;\n\
    }\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphirx9_gs.php:30\n\
    Stack trace:\n#0 /tmp/tmphirx9_gs.php(37): test()\n#1 {main}\n  thrown in /tmp/tmphirx9_gs.php\
    \ on line 30\n"
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $l = count($q);\n  $s = array_sum($q);\n  if\
    \ ($s <= $w) {\n    if ($l == 1) {\n      return true;\n    }\n    for ($i = 0;\
    \ $i < $l; $i++) {\n      if ($q[$i] != $q[$l - 1 - $i]) {\n        return false;\n\
    \      }\n    }\n    return true;\n  }\n  return false;\n}\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    foreach ($q as $e) {\n    \
    \    $sum += $e;\n    }\n    if ($sum > $w) {\n        return false;\n    }\n\
    \    return $q == array_reverse($q);\n}\n\nfunction candidate(...$args) {\n  \
    \  return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    if ($w < array_sum($q)) {\n        return\
    \ false;\n    }\n    $i = 0;\n    $j = count($q) - 1;\n    while ($i < $j) {\n\
    \        if ($q[$i] != $q[$j]) {\n            return false;\n        }\n     \
    \   $i++;\n        $j--;\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    // Write your code here\n    // To print results\
    \ to the standard output you can use print\n    // Example:\n    // print 'Hello\
    \ world!';\n    $length = count($q);\n    $sum = 0;\n    for ($i = 0; $i < $length;\
    \ $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum > $w) {\n        return\
    \ false;\n    }\n    if ($length == 1) {\n        return true;\n    }\n    $i\
    \ = 0;\n    $j = $length - 1;\n    while ($i < $j) {\n        if ($q[$i] != $q[$j])\
    \ {\n            return false;\n        }\n        $i++;\n        $j--;\n    }\n\
    \    return true;\n}\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    // Write your code here\n    // To print results\
    \ to the standard output you can use print\n    // Example:\n    // print \"Hello\
    \ world!\";\n}\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjr4uu8qj.php:28\n\
    Stack trace:\n#0 /tmp/tmpjr4uu8qj.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpjr4uu8qj.php\
    \ on line 28\n"
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = 0;\n\t$len = count($q);\n\tforeach ($q\
    \ as $e) {\n\t\t$sum += $e;\n\t}\n\tif ($sum > $w) {\n\t\treturn false;\n\t}\n\
    \tfor ($i = 0; $i < floor($len / 2); $i++) {\n\t\tif ($q[$i] != $q[$len - $i -\
    \ 1]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n$q = array(3, 2,\
    \ 3);\n$w = 9;\n\nif (will_it_fly($q, $w)) {\n\techo \"true\\n\";\n} else {\n\t\
    echo \"false\\n\";\n}\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'true

    '
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    if (sum($q) <= $w) {\n        $q = implode($q);\n\
    \        if ($q == strrev($q)) {\n            return true;\n        }\n    }\n\
    \    return false;\n}\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function sum() in /tmp/tmpsd0rb_ye.php:18\n\
    Stack trace:\n#0 /tmp/tmpsd0rb_ye.php(27): will_it_fly(Array, 9)\n#1 /tmp/tmpsd0rb_ye.php(31):\
    \ candidate(Array, 9)\n#2 /tmp/tmpsd0rb_ye.php(39): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpsd0rb_ye.php on line 18\n"
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $count = count($q);\n    $total\
    \ = $count/2;\n    $i = 0;\n    while($i < $total) {\n        if($q[$i] != $q[$count\
    \ - ($i + 1)]) {\n            return false;\n        }\n        $sum += $q[$i];\n\
    \        $i++;\n    }\n    if($sum <= $w) {\n        return true;\n    }\n   \
    \ return false;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $arr = array_count_values($q);\n  $sum = array_sum($q);\n\
    \  $max = max($q);\n  $string = implode('', $q);\n  $rev = strrev($string);\n\
    \  $palindrome = ($string == $rev) ? true : false;\n  if ($sum <= $w && $palindrome)\
    \ {\n    return true;\n  } else {\n    return false;\n  }\n}\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  for ($i = 0; $i < count($q); $i++)\
    \ {\n    $sum += $q[$i];\n  }\n  if ($sum <= $w) {\n    $reverse = array_reverse($q);\n\
    \    if ($q == $reverse) {\n      return true;\n    }\n  }\n  return false;\n\
    }\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $weight = 0;\n    foreach ($q as $q_item)\
    \ {\n        $weight += $q_item;\n    }\n    if ($weight > $w) {\n        return\
    \ false;\n    }\n    $weight = 0;\n    $max_index = count($q) - 1;\n    $middle_index\
    \ = (int) $max_index / 2;\n    foreach ($q as $index => $q_item) {\n        if\
    \ ($index < $middle_index) {\n            $weight += $q_item;\n        } elseif\
    \ ($index == $middle_index) {\n            if ($max_index % 2 != 0) {\n      \
    \          $weight += $q_item;\n            }\n        } else {\n            $max_index--;\n\
    \            $weight -= $q_item;\n        }\n    }\n    if ($weight != 0) {\n\
    \        return false;\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    if (max($q) > $w) {\n        return false;\n\
    \    } else {\n        $sum = array_sum($q);\n        if ($sum > $w) {\n     \
    \       return false;\n        } else {\n            return true;\n        }\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8_lxab4w.php:36\n\
    Stack trace:\n#0 /tmp/tmp8_lxab4w.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp8_lxab4w.php\
    \ on line 36\n"
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $j = count($q) - 1;\n    for\
    \ ($i = 0; $i < count($q); $i++) {\n        $sum += $q[$i];\n        if ($sum\
    \ > $w) {\n            return false;\n        }\n        if ($q[$i] != $q[$j])\
    \ {\n            return false;\n        }\n        $j--;\n    }\n    return true;\n\
    }\nprint will_it_fly(array(1, 2), 5);\nprint will_it_fly(array(3, 2, 3), 1);\n\
    print will_it_fly(array(3, 2, 3), 9);\nprint will_it_fly(array(3), 5);\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  if (is_balanced($q) && is_balanced($q) == true)\
    \ {\n    $sum = array_sum($q);\n    if ($sum <= $w) {\n      return true;\n  \
    \  }\n  }\n  return false;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_balanced()\
    \ in /tmp/tmpqe3zeky5.php:18\nStack trace:\n#0 /tmp/tmpqe3zeky5.php(28): will_it_fly(Array,\
    \ 9)\n#1 /tmp/tmpqe3zeky5.php(32): candidate(Array, 9)\n#2 /tmp/tmpqe3zeky5.php(40):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpqe3zeky5.php on line 18\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    // Write your code here\n    // To print results\
    \ to the standard output you can use print\n    // Example:\n    // print \"Hello\
    \ world!\";\n}\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjr4uu8qj.php:28\n\
    Stack trace:\n#0 /tmp/tmpjr4uu8qj.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpjr4uu8qj.php\
    \ on line 28\n"
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $balance = true;\n  $sum = 0;\n  for ($i = 0;\
    \ $i < count($q); $i++) {\n    $sum += $q[$i];\n    if ($q[$i] != $q[count($q)\
    \ - $i - 1]) {\n      $balance = false;\n    }\n  }\n  if ($sum <= $w && $balance\
    \ == true) {\n    return true;\n  } else {\n    return false;\n  }\n}\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    if(!is_array($q)) {\n        return false;\n\
    \    }\n    if(array_sum($q) > $w) {\n        return false;\n    }\n    $q_reversed\
    \ = array_reverse($q);\n    $q_imploded = implode('', $q);\n    $q_reversed_imploded\
    \ = implode('', $q_reversed);\n    if($q_imploded === $q_reversed_imploded) {\n\
    \        return true;\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t// Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnmix20xd.php:25\n\
    Stack trace:\n#0 /tmp/tmpnmix20xd.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpnmix20xd.php\
    \ on line 25\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = 0;\n\t$num = count($q);\n\tfor ($i =\
    \ 0; $i < $num; $i++) {\n\t\t$sum += $q[$i];\n\t}\n\tif ($sum > $w) {\n\t\treturn\
    \ false;\n\t}\n\tfor ($i = 0; $i < $num / 2; $i++) {\n\t\tif ($q[$i] != $q[$num\
    \ - $i - 1]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n$q = array(1,\
    \ 2);\n$w = 5;\nprint_r(will_it_fly($q, $w));\necho \"\\n\";\n$q = array(3, 2,\
    \ 3);\n$w = 1;\nprint_r(will_it_fly($q, $w));\necho \"\\n\";\n$q = array(3, 2,\
    \ 3);\n$w = 9;\nprint_r(will_it_fly($q, $w));\necho \"\\n\";\n$q = array(3);\n\
    $w = 5;\nprint_r(will_it_fly($q, $w));\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '


    1

    1

    '
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    foreach ($q as $num) {\n  \
    \      $sum += $num;\n    }\n    if ($sum <= $w) {\n        $first = array_slice($q,\
    \ 0, floor(count($q) / 2));\n        $reverse = array_reverse(array_slice($q,\
    \ ceil(count($q) / 2)));\n        if ($first == $reverse) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $q_rev = array_reverse($q);\n\
    \    if ($q === $q_rev) {\n        foreach ($q as $item) {\n            $sum +=\
    \ $item;\n        }\n        if ($sum <= $w) {\n            return true;\n   \
    \     }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $s = array_sum($q);\n  $b = is_palindrome($q);\n\
    \  if (($s <= $w) && ($b)) {\n    return true;\n  } else {\n    return false;\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_palindrome()\
    \ in /tmp/tmphovxzyf_.php:19\nStack trace:\n#0 /tmp/tmphovxzyf_.php(28): will_it_fly(Array,\
    \ 9)\n#1 /tmp/tmphovxzyf_.php(32): candidate(Array, 9)\n#2 /tmp/tmphovxzyf_.php(40):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmphovxzyf_.php on line 19\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  for ($i = 0; $i < count($q); $i++)\
    \ {\n    $sum += $q[$i];\n  }\n  if ($sum > $w) {\n    return false;\n  }\n  for\
    \ ($i = 0; $i < count($q); $i++) {\n    if ($q[$i] != $q[count($q) - 1 - $i])\
    \ {\n      return false;\n    }\n  }\n  return true;\n}\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  if (array_sum($q) <= $w) {\n    for ($i = 0;\
    \ $i < floor(count($q) / 2); $i++) {\n      if ($q[$i] != $q[count($q) - 1 - $i])\
    \ {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n\
    }\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  // BEGIN (write your solution here)\n  $sum\
    \ = array_sum($q);\n  $mid = (int) count($q) / 2;\n  $left = array_slice($q, 0,\
    \ $mid);\n  $right = array_slice($q, -$mid);\n  $isBalanced = $left == array_reverse($right);\n\
    \  $isLightEnough = $sum <= $w;\n  return $isBalanced && $isLightEnough;\n  //\
    \ END\n}\n\n$q = array(3, 2, 3);\n$w = 9;\n\necho will_it_fly($q, $w);\n\n$q =\
    \ array(1, 2);\n$w = 5;\n\necho will_it_fly($q, $w);\n\n$q = array(3, 2, 3);\n\
    $w = 1;\n\necho will_it_fly($q, $w);\n\n$q = array(3);\n$w = 5;\n\necho will_it_fly($q,\
    \ $w);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 1.5 to int loses precision\
    \ in /tmp/tmpykcoqcss.php on line 21\n\nDeprecated: Implicit conversion from float\
    \ -1.5 to int loses precision in /tmp/tmpykcoqcss.php on line 22\n1\nDeprecated:\
    \ Implicit conversion from float 1.5 to int loses precision in /tmp/tmpykcoqcss.php\
    \ on line 21\n\nDeprecated: Implicit conversion from float -1.5 to int loses precision\
    \ in /tmp/tmpykcoqcss.php on line 22\n\nDeprecated: Implicit conversion from float\
    \ 0.5 to int loses precision in /tmp/tmpykcoqcss.php on line 21\n\nDeprecated:\
    \ Implicit conversion from float -0.5 to int loses precision in /tmp/tmpykcoqcss.php\
    \ on line 22\n\nDeprecated: Implicit conversion from float 1.5 to int loses precision\
    \ in /tmp/tmpykcoqcss.php on line 21\n\nDeprecated: Implicit conversion from float\
    \ -1.5 to int loses precision in /tmp/tmpykcoqcss.php on line 22\n\nDeprecated:\
    \ Implicit conversion from float 0.5 to int loses precision in /tmp/tmpykcoqcss.php\
    \ on line 21\n\nDeprecated: Implicit conversion from float -0.5 to int loses precision\
    \ in /tmp/tmpykcoqcss.php on line 22\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpykcoqcss.php:55\nStack trace:\n#0 /tmp/tmpykcoqcss.php(61):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpykcoqcss.php on line 55\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  \n  $q_length = count($q);\n  $q_sum = array_sum($q);\n\
    \  $q_even = $q_length % 2 == 0;\n  $q_first_part = [];\n  $q_second_part = [];\n\
    \  $q_equal = true;\n  \n  if ($q_sum > $w) {\n    return false;\n  }\n  \n  if\
    \ ($q_even) {\n    $q_first_part = array_slice($q, 0, $q_length / 2);\n    $q_second_part\
    \ = array_slice($q, $q_length / 2);\n  } else {\n    $q_first_part = array_slice($q,\
    \ 0, floor($q_length / 2));\n    $q_second_part = array_slice($q, ceil($q_length\
    \ / 2));\n  }\n  \n  $q_second_part = array_reverse($q_second_part);\n  \n  for\
    \ ($i = 0; $i < count($q_first_part); $i++) {\n    if ($q_first_part[$i] != $q_second_part[$i])\
    \ {\n      $q_equal = false;\n    }\n  }\n  \n  return $q_equal;\n  \n}\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    if (array_sum($q) > $w) {\n        return\
    \ false;\n    } else {\n        if (array_sum($q) == $w) {\n            return\
    \ true;\n        } else {\n            if (is_array_palindrome($q)) {\n      \
    \          return true;\n            } else {\n                return false;\n\
    \            }\n        }\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_array_palindrome()\
    \ in /tmp/tmp454fl1xu.php:24\nStack trace:\n#0 /tmp/tmp454fl1xu.php(34): will_it_fly(Array,\
    \ 9)\n#1 /tmp/tmp454fl1xu.php(38): candidate(Array, 9)\n#2 /tmp/tmp454fl1xu.php(46):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmp454fl1xu.php on line 24\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n// write your code here\n  $size = count($q);\n\
    \  $sum = 0;\n  $check = 0;\n  $max = 0;\n  for ($i = 0; $i < $size; $i++) {\n\
    \    $sum += $q[$i];\n    $max = max($max, $q[$i]);\n  }\n  if ($sum <= $w) {\n\
    \    for ($i = 0; $i < $size; $i++) {\n      if ($q[$i] == $q[$size - 1 - $i])\
    \ {\n        $check += 1;\n      }\n    }\n    if ($check == $size) {\n      return\
    \ true;\n    }\n  }\n  return false;\n}\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = 0;\n\tfor ($i = 0; $i < count($q); $i++)\
    \ {\n\t\t$sum += $q[$i];\n\t}\n\tif ($sum > $w) {\n\t\treturn false;\n\t}\n\t\
    $rev = array_reverse($q);\n\tfor ($i = 0; $i < count($q); $i++) {\n\t\tif ($q[$i]\
    \ != $rev[$i]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  for ($i = 0; $i < count($q); $i++)\
    \ {\n    $sum += $q[$i];\n  }\n  if ($sum > $w) {\n    return false;\n  }\n  if\
    \ (is_palindrome($q)) {\n    return true;\n  }\n  return false;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_palindrome()\
    \ in /tmp/tmppax4rmnj.php:25\nStack trace:\n#0 /tmp/tmppax4rmnj.php(32): will_it_fly(Array,\
    \ 9)\n#1 /tmp/tmppax4rmnj.php(36): candidate(Array, 9)\n#2 /tmp/tmppax4rmnj.php(44):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmppax4rmnj.php on line 25\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $palindrome = false;\n  $sum = 0;\n  for ($i\
    \ = 0; $i < count($q); $i++) {\n    if ($q[$i] == $q[count($q) - $i - 1]) {\n\
    \      $palindrome = true;\n    } else {\n      $palindrome = false;\n      break;\n\
    \    }\n    $sum += $q[$i];\n  }\n  if ($palindrome == true && $sum <= $w) {\n\
    \    return true;\n  } else {\n    return false;\n  }\n}\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$r = array_map(function($n) { return $n+1; },\
    \ $q);\n\t$R = array_map(function($n) { return $n+1; }, array_reverse($q));\n\t\
    $t = array_sum($q);\n\tif($t > $w) return false;\n\tif($t == $w) return true;\n\
    \tif($t < $w && $r == $R) return true;\n\treturn false;\n}\n\n$a = array(1, 2);\n\
    $b = 5;\n$c = array(3, 2, 3);\n$d = 1;\n$e = 9;\n$f = array(3);\n$g = 5;\necho\
    \ '<pre>';\necho 'will_it_fly(array(1, 2), 5) = ';\nvar_dump(will_it_fly($a, $b));\n\
    echo 'will_it_fly(array(3, 2, 3), 1) = ';\nvar_dump(will_it_fly($c, $d));\necho\
    \ 'will_it_fly(array(3, 2, 3), 9) = ';\nvar_dump(will_it_fly($c, $e));\necho 'will_it_fly(array(3),\
    \ 5) = ';\nvar_dump(will_it_fly($f, $g));\necho '</pre>';\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>will_it_fly(array(1, 2), 5) = bool(false)\nwill_it_fly(array(3, 2,\
    \ 3), 1) = bool(false)\nwill_it_fly(array(3, 2, 3), 9) = bool(true)\nwill_it_fly(array(3),\
    \ 5) = bool(true)\n</pre>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptub5a3dp.php:53\n\
    Stack trace:\n#0 /tmp/tmptub5a3dp.php(57): test()\n#1 {main}\n  thrown in /tmp/tmptub5a3dp.php\
    \ on line 53\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  foreach ($q as $x) {\n    $sum\
    \ += $x;\n  }\n  if ($sum > $w) {\n    return false;\n  }\n  $b = 0;\n  foreach\
    \ ($q as $x) {\n    $b += $x;\n    $w -= $x;\n    if ($b == $w) {\n      return\
    \ true;\n    }\n  }\n  return false;\n}\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5t52hwtc.php:40\n\
    Stack trace:\n#0 /tmp/tmp5t52hwtc.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp5t52hwtc.php\
    \ on line 40\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$weight = 0;\n\t$isPalindrome = true;\n\tfor\
    \ ($i = 0; $i < count($q); $i++) {\n\t\t$weight += $q[$i];\n\t\tif ($q[$i] !=\
    \ $q[count($q) - 1 - $i]) {\n\t\t\t$isPalindrome = false;\n\t\t}\n\t}\n\tif ($weight\
    \ <= $w && $isPalindrome) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\
    \t}\n}\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\tif (count($q) < 2) {\n\t\treturn true;\n\t}\n\
    \t\n\t$sum = 0;\n\tfor ($i = 0; $i < count($q); $i++) {\n\t\t$sum += $q[$i];\n\
    \t}\n\t\n\tif ($sum > $w) {\n\t\treturn false;\n\t}\n\t\n\t$a = 0;\n\t$b = count($q)\
    \ - 1;\n\twhile ($a < $b) {\n\t\tif ($q[$a] != $q[$b]) {\n\t\t\treturn false;\n\
    \t\t}\n\t\t$a++;\n\t\t$b--;\n\t}\n\t\n\treturn true;\n}\n\nclass will_it_flyTest\
    \ extends \\PHPUnit_Framework_TestCase {\n\tpublic function testExamples() {\n\
    \t\t$this->assertEquals(false, will_it_fly(array(1, 2), 5));\n\t\t$this->assertEquals(false,\
    \ will_it_fly(array(3, 2, 3), 1));\n\t\t$this->assertEquals(true, will_it_fly(array(3,\
    \ 2, 3), 9));\n\t\t$this->assertEquals(true, will_it_fly(array(3), 5));\n\t}\n\
    }\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Class \"PHPUnit_Framework_TestCase\" not\
    \ found in /tmp/tmp69pc8sqo.php:44\nStack trace:\n#0 {main}\n  thrown in /tmp/tmp69pc8sqo.php\
    \ on line 44\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $max_weight = $w;\n  $q_length = count($q);\n\
    \  // compute q weight\n  $q_weight = 0;\n  for ($i = 0; $i < $q_length; $i++)\
    \ {\n    $q_weight += $q[$i];\n  }\n  // check q weight\n  if ($q_weight > $max_weight)\
    \ {\n    return false;\n  }\n  // check q balance\n  $first_half = array_slice($q,\
    \ 0, ceil($q_length / 2));\n  $first_half_rev = array_reverse($first_half);\n\
    \  $last_half = array_slice($q, floor($q_length / 2));\n  if (count(array_diff($first_half,\
    \ $first_half_rev)) !== 0) {\n    return false;\n  }\n  return true;\n}\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps4jn4xhf.php:44\n\
    Stack trace:\n#0 /tmp/tmps4jn4xhf.php(51): test()\n#1 {main}\n  thrown in /tmp/tmps4jn4xhf.php\
    \ on line 44\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$q = array_values($q);\n\t$q_sum = array_sum($q);\n\
    \t$q_len = count($q);\n\tif ($q_sum > $w) return false;\n\tfor ($i = 0; $i < $q_len;\
    \ $i++) {\n\t\tif ($q[$i] != $q[$q_len - $i - 1]) return false;\n\t}\n\treturn\
    \ true;\n}\n\necho will_it_fly(array(1, 2), 5) ? 'true' : 'false'; // should be\
    \ false\necho PHP_EOL;\necho will_it_fly(array(3, 2, 3), 1) ? 'true' : 'false';\
    \ // should be false\necho PHP_EOL;\necho will_it_fly(array(3, 2, 3), 9) ? 'true'\
    \ : 'false'; // should be true\necho PHP_EOL;\necho will_it_fly(array(3), 5) ?\
    \ 'true' : 'false'; // should be true\necho PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'false

    false

    true

    true

    '
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $isPalindrome = true;\n   \
    \ $c = count($q);\n    for ($i = 0; $i < $c; $i++) {\n        $sum += $q[$i];\n\
    \        if ($isPalindrome) {\n            $isPalindrome = $q[$i] == $q[$c - $i\
    \ - 1];\n        }\n    }\n    return $sum <= $w && $isPalindrome;\n}\n\nvar_dump(will_it_fly(array(1,\
    \ 2), 5));\nvar_dump(will_it_fly(array(3, 2, 3), 1));\nvar_dump(will_it_fly(array(3,\
    \ 2, 3), 9));\nvar_dump(will_it_fly(array(3), 5));\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'bool(false)

    bool(false)

    bool(true)

    bool(true)

    '
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $len = count($q);\n    if ($len == 1) {\n\
    \        return true;\n    }\n    $sum = 0;\n    for ($i = 0; $i < $len; $i++)\
    \ {\n        $sum += $q[$i];\n    }\n    if ($sum > $w) {\n        return false;\n\
    \    }\n    $half = $len / 2;\n    for ($i = 0; $i < $half; $i++) {\n        if\
    \ ($q[$i] != $q[$len - $i - 1]) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $palindrome = true;\n  $sum = 0;\n  $i = 0;\n\
    \  while ($i < count($q)) {\n    $sum += $q[$i];\n    if ($q[$i] != $q[count($q)\
    \ - 1 - $i]) {\n      $palindrome = false;\n    }\n    $i++;\n  }\n  return $palindrome\
    \ && $sum <= $w;\n}\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    foreach ($q as $e) {\n    \
    \    $sum += $e;\n    }\n    if ($sum > $w) return false;\n    $head = 0;\n  \
    \  $tail = count($q) - 1;\n    while ($head < $tail) {\n        if ($q[$head]\
    \ != $q[$tail]) return false;\n        $head++;\n        $tail--;\n    }\n   \
    \ return true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  if (array_sum($q) > $w) {\n    return false;\n\
    \  }\n  $r = array_reverse($q);\n  if ($q == $r) {\n    return true;\n  }\n  return\
    \ false;\n}\n\necho will_it_fly(array(1, 2), 5).\"\\n\";\necho will_it_fly(array(3,\
    \ 2, 3), 1).\"\\n\";\necho will_it_fly(array(3, 2, 3), 9).\"\\n\";\necho will_it_fly(array(3),\
    \ 5).\"\\n\";\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '


    1

    1

    '
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\n}\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2xh9lyf1.php:25\n\
    Stack trace:\n#0 /tmp/tmp2xh9lyf1.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp2xh9lyf1.php\
    \ on line 25\n"
  timestamp: 1659824386
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $n = count($q);\n  $i = 0;\n  $j = $n - 1;\n\
    \  $sum = 0;\n  while ($i < $j) {\n    if ($q[$i] != $q[$j]) return false;\n \
    \   $i++;\n    $j--;\n  }\n  while ($i < $n) {\n    $sum += $q[$i];\n    $i++;\n\
    \  }\n  return $sum <= $w;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $q_length = count($q);\n  $q_sum = array_sum($q);\n\
    \  if ($q_sum <= $w) {\n    for ($i = 0; $i < floor($q_length / 2); $i++) {\n\
    \      if ($q[$i] !== $q[$q_length - $i - 1]) {\n        return false;\n     \
    \ }\n    }\n    return true;\n  }\n  return false;\n}\n\necho will_it_fly(array(1,\
    \ 2), 5); // false\necho \"\\n\";\necho will_it_fly(array(3, 2, 3), 1); // false\n\
    echo \"\\n\";\necho will_it_fly(array(3, 2, 3), 9); // true\necho \"\\n\";\necho\
    \ will_it_fly(array(3), 5); // true\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '


    1

    1

    '
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $p = count($q);\n    $s = 0;\n    for ($i\
    \ = 0; $i < $p; $i++) {\n        $s += $q[$i];\n    }\n    if ($s > $w) {\n  \
    \      return false;\n    }\n    $t = 0;\n    $v = floor($p / 2);\n    for ($i\
    \ = 0; $i < $v; $i++) {\n        $t += $q[$i];\n    }\n    if ($p % 2) {\n   \
    \     $t += $q[$v];\n    }\n    for ($i = $v; $i < $p; $i++) {\n        $t -=\
    \ $q[$i];\n    }\n    return $t == 0;\n}\nfunction candidate(...$args) {\n   \
    \ return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    // BEGIN\n    $len = count($q);\n    $sum\
    \ = 0;\n    for ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n\
    \    $len = intval($len/2);\n    $is_palindrome = true;\n    for ($i = 0; $i <\
    \ $len; $i++) {\n        if ($q[$i] != $q[$len - $i - 1]) {\n            $is_palindrome\
    \ = false;\n            break;\n        }\n    }\n    return $is_palindrome &&\
    \ $sum <= $w;\n    // END\n}\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpagnrbmt1.php:41\n\
    Stack trace:\n#0 /tmp/tmpagnrbmt1.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpagnrbmt1.php\
    \ on line 41\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t// YOUR CODE HERE\n  $is_palindrome = true;\n\
    \  $sum = 0;\n  $max_pos = count($q)-1;\n  for ($i=0; $i < count($q); $i++) {\n\
    \    $sum += $q[$i];\n    if ($q[$i] != $q[$max_pos-$i]) {\n      $is_palindrome\
    \ = false;\n    }\n  }\n  return $is_palindrome && $sum <= $w;\n}\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    foreach ($q as $v) {\n    \
    \    $sum += $v;\n    }\n    return $sum <= $w && $q == array_reverse($q);\n}\n\
    function candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t// TODO\n}\nfunction candidate(...$args) {\n\
    \    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw7is9q_x.php:25\n\
    Stack trace:\n#0 /tmp/tmpw7is9q_x.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpw7is9q_x.php\
    \ on line 25\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    if (is_palindrome($q) && sum($q) <= $w) {\n\
    \        return true;\n    }\n    return false;\n}\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_palindrome()\
    \ in /tmp/tmpy81rhht1.php:18\nStack trace:\n#0 /tmp/tmpy81rhht1.php(24): will_it_fly(Array,\
    \ 9)\n#1 /tmp/tmpy81rhht1.php(28): candidate(Array, 9)\n#2 /tmp/tmpy81rhht1.php(36):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpy81rhht1.php on line 18\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    // Write your code here\n    // To print results\
    \ to the standard output you can use print\n    // Example:\n    // print 'Hello\
    \ world!';\n}\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgt24_bt5.php:28\n\
    Stack trace:\n#0 /tmp/tmpgt24_bt5.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpgt24_bt5.php\
    \ on line 28\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjc4dx61k.php:25\n\
    Stack trace:\n#0 /tmp/tmpjc4dx61k.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpjc4dx61k.php\
    \ on line 25\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $arrlength = count($q);\n    $sum = 0;\n \
    \   for($x = 0; $x < $arrlength; $x++) {\n        $sum = $sum + $q[$x];\n    }\n\
    \    if($sum <= $w){\n        $f = 0;\n        $r = $arrlength - 1;\n        while($f\
    \ < $r){\n            if($q[$f] != $q[$r]){\n                return false;\n \
    \           }\n            $f++;\n            $r--;\n        }\n        return\
    \ true;\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    for ($i = 0; $i < count($q);\
    \ $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum > $w) {\n        return\
    \ false;\n    }\n    $first_half = array_slice($q, 0, count($q) / 2);\n    $second_half\
    \ = array_slice($q, count($q) / 2);\n    if (implode(\"\", $first_half) == implode(\"\
    \", array_reverse($second_half))) {\n        return true;\n    }\n    return false;\n\
    }\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 1.5 to int loses precision\
    \ in /tmp/tmplf3g6jo8.php on line 25\n\nDeprecated: Implicit conversion from float\
    \ 1.5 to int loses precision in /tmp/tmplf3g6jo8.php on line 26\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmplf3g6jo8.php:37\nStack trace:\n\
    #0 /tmp/tmplf3g6jo8.php(45): test()\n#1 {main}\n  thrown in /tmp/tmplf3g6jo8.php\
    \ on line 37\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    return $sum\
    \ <= $w && $q == array_reverse($q);\n}\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum=0;\n  for($i=0;$i<count($q);$i++){\n  \
    \    $sum+=$q[$i];\n  }\n  if($sum>$w){\n    return false;\n  }\n  $qrev=array_reverse($q);\n\
    \  if($qrev===$q){\n    return true;\n  }else{\n    return false;\n  }\n}\n\n\
    function candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n   // your code here\n}\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpncnqzdda.php:25\n\
    Stack trace:\n#0 /tmp/tmpncnqzdda.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpncnqzdda.php\
    \ on line 25\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $isBalanced = true;\n  $totalWeight = 0;\n \
    \ for ($i = 0; $i < count($q); $i++) {\n    $totalWeight += $q[$i];\n    if ($q[$i]\
    \ !== $q[count($q) - 1 - $i]) {\n      $isBalanced = false;\n    }\n  }\n  if\
    \ ($isBalanced && $totalWeight <= $w) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $arr = $q;\n    $sum = array_sum($arr);\n\
    \    if ($sum <= $w) {\n        $arr_reverse = array_reverse($arr);\n        if\
    \ ($arr == $arr_reverse) {\n            return true;\n        }\n    } else {\n\
    \        return false;\n    }\n}\necho will_it_fly(array(3, 2, 3), 9) . PHP_EOL;\n\
    function candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkya_tnaw.php:36\n\
    Stack trace:\n#0 /tmp/tmpkya_tnaw.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpkya_tnaw.php\
    \ on line 36\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    // Write your code here\n    // To print results\
    \ to the standard output you can use print\n    // Example:\n    // print \"Hello\
    \ world!\";\n    $sum = 0;\n    for ($i = 0; $i < count($q); $i++) {\n       \
    \ $sum += $q[$i];\n    }\n    if ($sum > $w) return false;\n    for ($i = 0; $i\
    \ < floor(count($q) / 2); $i++) {\n        if ($q[$i] != $q[count($q) - $i - 1])\
    \ return false;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n\
    \    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$n = count($q);\n\t$sum = 0;\n\t$i = 0;\n\t\
    while ($i < $n / 2) {\n\t\tif ($q[$i] != $q[$n - $i - 1])\n\t\t\treturn false;\n\
    \t\t$sum += $q[$i] + $q[$n - $i - 1];\n\t\t$i++;\n\t}\n\tif ($n % 2 == 1)\n\t\t\
    $sum += $q[$i];\n\treturn $sum <= $w;\n}\n\necho will_it_fly(array(1, 2), 5) .\
    \ \"\\n\";\necho will_it_fly(array(3, 2, 3), 1) . \"\\n\";\necho will_it_fly(array(3,\
    \ 2, 3), 9) . \"\\n\";\necho will_it_fly(array(3), 5) . \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\n\n\n\nWarning: Undefined array key 1 in /tmp/tmpznpiraoq.php on line\
    \ 28\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpznpiraoq.php:42\n\
    Stack trace:\n#0 /tmp/tmpznpiraoq.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpznpiraoq.php\
    \ on line 42\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $total = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $total += $q[$i];\n    }\n    if ($total\
    \ > $w) {\n        return false;\n    }\n    for ($i = 0; $i < $len / 2; $i++)\
    \ {\n        if ($q[$i] != $q[$len - $i - 1]) {\n            return false;\n \
    \       }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    $i = 0;\n    $j = $len - 1;\n    while\
    \ ($i < $j) {\n        if ($q[$i] != $q[$j]) {\n            return false;\n  \
    \      }\n        $i++;\n        $j--;\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  // echo \"THIS IS Q \" . $q . \"\\n\";\n  $q\
    \ = array_sum($q);\n  echo $q . \"\\n\";\n  // return ($q < $w);\n}\nwill_it_fly(array(3,\
    \ 2, 3), 9);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "8\n8\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa3dl2x7e.php:29\n\
    Stack trace:\n#0 /tmp/tmpa3dl2x7e.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpa3dl2x7e.php\
    \ on line 29\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  $palindrome = true;\n  $n = count($q);\n\
    \  for ($i = 0; $i < $n / 2; $i++) {\n    if ($q[$i] !== $q[$n - $i - 1]) {\n\
    \      $palindrome = false;\n    }\n    $sum += $q[$i];\n  }\n  if ($n % 2) {\n\
    \    $sum += $q[$n / 2];\n  }\n  return $palindrome && $sum <= $w;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 1.5 to int loses precision\
    \ in /tmp/tmpluj3firr.php on line 28\n\nDeprecated: Implicit conversion from float\
    \ 0.5 to int loses precision in /tmp/tmpluj3firr.php on line 28\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpluj3firr.php:40\nStack trace:\n\
    #0 /tmp/tmpluj3firr.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpluj3firr.php\
    \ on line 40\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  // Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzmsq8cg7.php:25\n\
    Stack trace:\n#0 /tmp/tmpzmsq8cg7.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpzmsq8cg7.php\
    \ on line 25\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $qsum = array_sum($q);\n    if ($qsum <= $w)\
    \ {\n        $q = array_values($q);\n        for ($i = 0; $i < count($q) / 2;\
    \ $i++) {\n            if ($q[$i] != $q[count($q) - 1 - $i]) {\n             \
    \   return false;\n            }\n        }\n        return true;\n    }\n   \
    \ return false;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    $reverse =\
    \ array_reverse($q);\n    $is_balanced = array_diff($q, $reverse) == array() ?\
    \ true : false;\n    if ($sum <= $w && $is_balanced) {\n        return true;\n\
    \    } else {\n        return false;\n    }\n}\necho will_it_fly(array(1, 2),\
    \ 5);\necho will_it_fly(array(3, 2, 3), 1);\necho will_it_fly(array(3, 2, 3),\
    \ 9);\necho will_it_fly(array(3), 5);\n\necho '<br />';\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "111<br />\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpepqd76uw.php:44\n\
    Stack trace:\n#0 /tmp/tmpepqd76uw.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpepqd76uw.php\
    \ on line 44\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $odd = 0;\n    $even = 0;\n    $balance =\
    \ 0;\n    $arrLen = count($q);\n    for ($i = 0; $i < $arrLen; $i++) {\n     \
    \   if ($i % 2 == 0) {\n            $even += $q[$i];\n        } else {\n     \
    \       $odd += $q[$i];\n        }\n    }\n    $balance = abs($even - $odd);\n\
    \    return $balance <= $w;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_ysugj0o.php:39\n\
    Stack trace:\n#0 /tmp/tmp_ysugj0o.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp_ysugj0o.php\
    \ on line 39\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    if(is_palindrome($q) && array_sum($q) <= $w)\
    \ return true;\n    return false;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_palindrome()\
    \ in /tmp/tmpboznv918.php:18\nStack trace:\n#0 /tmp/tmpboznv918.php(23): will_it_fly(Array,\
    \ 9)\n#1 /tmp/tmpboznv918.php(27): candidate(Array, 9)\n#2 /tmp/tmpboznv918.php(35):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpboznv918.php on line 18\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    if (is_palindrome($q) && array_sum($q) <=\
    \ $w) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\
    function candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_palindrome()\
    \ in /tmp/tmp0absp_dn.php:18\nStack trace:\n#0 /tmp/tmp0absp_dn.php(25): will_it_fly(Array,\
    \ 9)\n#1 /tmp/tmp0absp_dn.php(29): candidate(Array, 9)\n#2 /tmp/tmp0absp_dn.php(37):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmp0absp_dn.php on line 18\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  if (is_array($q)) {\n    if (is_numeric($w))\
    \ {\n      $sum = 0;\n      $bool = false;\n      $array = array();\n      foreach\
    \ ($q as $value) {\n        $sum += $value;\n        array_push($array, $value);\n\
    \      }\n      if ($sum <= $w) {\n        $bool = true;\n      }\n      if ($array\
    \ === array_reverse($array)) {\n        $bool = true;\n      }\n      return $bool;\n\
    \    }\n  }\n}\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjzd48c3l.php:43\n\
    Stack trace:\n#0 /tmp/tmpjzd48c3l.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpjzd48c3l.php\
    \ on line 43\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = 0;\n\tforeach ($q as $i) {\n\t\t$sum\
    \ += $i;\n\t}\n\tif ($sum <= $w) {\n\t\tif ($q == array_reverse($q)) {\n\t\t\t\
    return 'true';\n\t\t}\n\t}\n\treturn 'false';\n}\n\n$q = array(1, 2);\n$w = 5;\n\
    echo will_it_fly($q, $w);\n\necho \"\\n\";\n\n$q = array(3, 2, 3);\n$w = 1;\n\
    echo will_it_fly($q, $w);\n\necho \"\\n\";\n\n$q = array(3, 2, 3);\n$w = 9;\n\
    echo will_it_fly($q, $w);\n\necho \"\\n\";\n\n$q = array(3);\n$w = 5;\necho will_it_fly($q,\
    \ $w);\n\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "false\nfalse\ntrue\ntrue\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpf2oudepc.php:59\nStack trace:\n#0 /tmp/tmpf2oudepc.php(67): test()\n\
    #1 {main}\n  thrown in /tmp/tmpf2oudepc.php on line 59\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    for ($i = 0; $i < count($q);\
    \ $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum > $w) {\n        return\
    \ false;\n    } else {\n        if ($sum != $w) {\n            return false;\n\
    \        } else {\n            $rev_q = array_reverse($q);\n            for ($i\
    \ = 0; $i < count($q); $i++) {\n                if ($q[$i] != $rev_q[$i]) {\n\
    \                    return false;\n                }\n            }\n       \
    \     return true;\n        }\n    }\n}\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp77gbf78u.php:43\n\
    Stack trace:\n#0 /tmp/tmp77gbf78u.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp77gbf78u.php\
    \ on line 43\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$l = 0;\n\t$r = count($q) - 1;\n\t$sum = 0;\n\
    \twhile ($l < $r) {\n\t\tif ($q[$l] != $q[$r]) {\n\t\t\treturn false;\n\t\t}\n\
    \t\t$l++;\n\t\t$r--;\n\t}\n\tforeach ($q as $v) {\n\t\t$sum += $v;\n\t}\n\treturn\
    \ $sum <= $w;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    // Write your code here\n    // To print results\
    \ to the standard output you can use print\n    // Example:\n    // print \"Hello\
    \ world!\";\n    \n    if(empty($q)){\n        return false;\n    }\n    \n  \
    \  $sum = 0;\n    $a = array();\n    foreach($q as $key => $value){\n        $sum\
    \ += $value;\n        $a[] = $value;\n    }\n    \n    if($sum > $w){\n      \
    \  return false;\n    }\n    \n    if(count($a) % 2 == 0){\n        $m = count($a)\
    \ / 2;\n    }else{\n        $m = (count($a) + 1) / 2;\n    }\n    \n    $first\
    \ = array_slice($a, 0, $m);\n    $second = array_slice($a, $m);\n    $reverse\
    \ = array_reverse($second);\n    \n    if($first == $reverse){\n        return\
    \ true;\n    }else{\n        return false;\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3xnsyz_k.php:59\n\
    Stack trace:\n#0 /tmp/tmp3xnsyz_k.php(67): test()\n#1 {main}\n  thrown in /tmp/tmp3xnsyz_k.php\
    \ on line 59\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    foreach ($q as $int) {\n  \
    \      $sum += $int;\n    }\n    if ($sum > $w) {\n        return false;\n   \
    \ }\n    $q = array_slice($q, 0, count($q) / 2);\n    $q_reverse = array_reverse($q);\n\
    \    $q = array_values($q);\n    $q_reverse = array_values($q_reverse);\n    foreach\
    \ ($q as $key => $val) {\n        if ($val != $q_reverse[$key]) {\n          \
    \  return false;\n        }\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 1.5 to int loses precision\
    \ in /tmp/tmp8eq_iajm.php on line 25\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp8eq_iajm.php:42\nStack trace:\n#0 /tmp/tmp8eq_iajm.php(49):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp8eq_iajm.php on line 42\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t// Write your code here...\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3krl0ew7.php:26\n\
    Stack trace:\n#0 /tmp/tmp3krl0ew7.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp3krl0ew7.php\
    \ on line 26\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  for ($i = 0; $i < count($q); $i++)\
    \ {\n    $sum += $q[$i];\n  }\n  $rev = array_reverse($q);\n  if ($sum <= $w &&\
    \ $q == $rev) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\n$q\
    \ = array(3, 2, 3);\n$w = 9;\necho will_it_fly($q, $w);\necho \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    '
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    foreach ($q as $e) {\n    \
    \    $sum += $e;\n    }\n    $rev = array_reverse($q);\n    return $sum <= $w\
    \ && $q == $rev;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $qSum = array_sum($q);\n    if ($qSum <= $w)\
    \ {\n        if (count($q) == 1) {\n            return true;\n        }\n    \
    \    $qRev = array_reverse($q);\n        if ($q == $qRev) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $r = array_reverse($q);\n  if ($r == $q){\n\
    \  \t$sum = array_sum($q);\n  \tif ($sum <= $w){\n  \t\treturn true;\n  \t}\n\
    \  }\n  return false;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    $i = 0;\n    $j = $len - 1;\n    while\
    \ ($i < $j) {\n        if ($q[$i] != $q[$j]) {\n            return false;\n  \
    \      }\n        $i++;\n        $j--;\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    if(is_palindrome($q) && (array_sum($q) <=\
    \ $w)) {\n        return true;\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_palindrome()\
    \ in /tmp/tmpiacrl6tl.php:18\nStack trace:\n#0 /tmp/tmpiacrl6tl.php(25): will_it_fly(Array,\
    \ 9)\n#1 /tmp/tmpiacrl6tl.php(29): candidate(Array, 9)\n#2 /tmp/tmpiacrl6tl.php(37):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpiacrl6tl.php on line 18\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    // Your code here.\n    $sum = 0;\n    $len\
    \ = count($q);\n    for ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n\
    \    }\n    if ($sum > $w) {\n        return false;\n    }\n    $mid = intval($len\
    \ / 2);\n    $part1 = array_slice($q, 0, $mid);\n    $part2 = array_slice($q,\
    \ $mid);\n    if ($len % 2) {\n        array_pop($part2);\n    }\n    $part2 =\
    \ array_reverse($part2);\n    if ($part1 === $part2) {\n        return true;\n\
    \    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_xjjhbkv.php:45\n\
    Stack trace:\n#0 /tmp/tmp_xjjhbkv.php(53): test()\n#1 {main}\n  thrown in /tmp/tmp_xjjhbkv.php\
    \ on line 45\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum_of_elements = array_sum($q);\n  $is_palindrome\
    \ = $q == array_reverse($q);\n  if($sum_of_elements <= $w && $is_palindrome) {\n\
    \    return true;\n  } else {\n    return false;\n  }\n}\n\necho will_it_fly(array(1,\
    \ 2), 5) . \"\\n\";\necho will_it_fly(array(3, 2, 3), 1) . \"\\n\";\necho will_it_fly(array(3,\
    \ 2, 3), 9) . \"\\n\";\necho will_it_fly(array(3), 5) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '


    1

    1

    '
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    // Write your code here\n    // To print results\
    \ to the standard output you can use print\n    // Example:\n    // print \"Hello\
    \ world!\";\n}\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjr4uu8qj.php:28\n\
    Stack trace:\n#0 /tmp/tmpjr4uu8qj.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpjr4uu8qj.php\
    \ on line 28\n"
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    if (sum($q) <= $w && is_array($q) && is_int($w))\
    \ {\n        return true;\n    } else {\n        return false;\n    }\n}\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function sum() in /tmp/tmpebbirp2b.php:18\n\
    Stack trace:\n#0 /tmp/tmpebbirp2b.php(25): will_it_fly(Array, 9)\n#1 /tmp/tmpebbirp2b.php(29):\
    \ candidate(Array, 9)\n#2 /tmp/tmpebbirp2b.php(37): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpebbirp2b.php on line 18\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  $n = count($q);\n  $h = floor($n\
    \ / 2);\n  for ($i = 0; $i < $h; $i++) {\n    if ($q[$i] != $q[$n - $i - 1]) {\n\
    \      return false;\n    }\n    $sum += $q[$i];\n  }\n  if ($n % 2) {\n    $sum\
    \ += $q[$h];\n  }\n  return $sum <= $w;\n}\nfunction candidate(...$args) {\n \
    \   return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $q_sum = array_sum($q);\n    $q_balanced =\
    \ is_palindrome($q);\n    return $q_sum <= $w && $q_balanced;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_palindrome()\
    \ in /tmp/tmpdk7mozrw.php:19\nStack trace:\n#0 /tmp/tmpdk7mozrw.php(24): will_it_fly(Array,\
    \ 9)\n#1 /tmp/tmpdk7mozrw.php(28): candidate(Array, 9)\n#2 /tmp/tmpdk7mozrw.php(36):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpdk7mozrw.php on line 19\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $q_sum = array_sum($q);\n  $q_length = count($q);\n\
    \  if ($q_sum <= $w && $q == array_reverse($q)) {\n    return true;\n  } else\
    \ {\n    return false;\n  }\n}\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  for ($i = 0; $i < count($q); $i++)\
    \ {\n    $sum += $q[$i];\n  }\n  if ($sum > $w) {\n    return false;\n  }\n  $arr\
    \ = $q;\n  rsort($arr);\n  if ($arr == $q) {\n    return true;\n  }\n  return\
    \ false;\n}\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0i1r9sr2.php:37\n\
    Stack trace:\n#0 /tmp/tmp0i1r9sr2.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp0i1r9sr2.php\
    \ on line 37\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\treturn is_balanced($q) && array_sum($q) <= $w;\n\
    }\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_balanced()\
    \ in /tmp/tmp2wu5qil3.php:18\nStack trace:\n#0 /tmp/tmp2wu5qil3.php(22): will_it_fly(Array,\
    \ 9)\n#1 /tmp/tmp2wu5qil3.php(26): candidate(Array, 9)\n#2 /tmp/tmp2wu5qil3.php(34):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmp2wu5qil3.php on line 18\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = 0;\n\tforeach ($q as $s) {\n\t\t$sum\
    \ += $s;\n\t}\n\t$half = count($q) / 2;\n\t$len = count($q);\n\tfor ($i = 0; $i\
    \ < $half; $i++) {\n\t\tif ($q[$i] != $q[$len - $i - 1]) {\n\t\t\treturn false;\n\
    \t\t}\n\t}\n\tif ($sum <= $w) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n\
    function candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $q_total = array_sum($q);\n    $q_length =\
    \ count($q);\n    $q_is_palindrome = true;\n    for ($i = 0; $i < intval($q_length\
    \ / 2); $i++) {\n        if ($q[$i] != $q[$q_length - $i - 1]) {\n           \
    \ $q_is_palindrome = false;\n            break;\n        }\n    }\n    return\
    \ $q_total <= $w && $q_is_palindrome;\n}\nfunction candidate(...$args) {\n   \
    \ return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\n}\n\nif(!isset($_GET['test'])) {\n    echo 'Please\
    \ specify the test case id.';\n    exit;\n}\n\n$test = $_GET['test'];\nswitch($test)\
    \ {\n    case 'example':\n        $data = array(\n            'q' => array(1,\
    \ 2),\n            'w' => 5,\n            'expected' => false\n        );\n  \
    \      break;\n    case 'example1':\n        $data = array(\n            'q' =>\
    \ array(3, 2, 3),\n            'w' => 1,\n            'expected' => false\n  \
    \      );\n        break;\n    case 'example2':\n        $data = array(\n    \
    \        'q' => array(3, 2, 3),\n            'w' => 9,\n            'expected'\
    \ => true\n        );\n        break;\n    case 'example3':\n        $data = array(\n\
    \            'q' => array(3),\n            'w' => 5,\n            'expected' =>\
    \ true\n        );\n        break;\n    case 'example4':\n        $data = array(\n\
    \            'q' => array(2, 4, 2),\n            'w' => 7,\n            'expected'\
    \ => true\n        );\n        break;\n    case 'example5':\n        $data = array(\n\
    \            'q' => array(3, 2, 3),\n            'w' => 8,\n            'expected'\
    \ => true\n        );\n        break;\n    case 'example6':\n        $data = array(\n\
    \            'q' => array(2, 5, 2),\n            'w' => 10,\n            'expected'\
    \ => true\n        );\n        break;\n    case 'example7':\n        $data = array(\n\
    \            'q' => array(2, 4, 4, 2),\n            'w' => 9,\n            'expected'\
    \ => true\n        );\n        break;\n    case 'example8':\n        $data = array(\n\
    \            'q' => array(4, 4, 2, 4, 4),\n            'w' => 9,\n           \
    \ 'expected' => true\n        );\n        break;\n    case 'example9':\n     \
    \   $\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting variable or
    "{" or "$" in /tmp/tmptx_5r23r.php on line 93

    '
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  // TODO: implement this function, then remove\
    \ this comment.\n  $count = count($q);\n  $sum = 0;\n  for ($i = 0; $i < $count;\
    \ $i++) {\n    $sum += $q[$i];\n  }\n  if ($sum > $w) {\n    return false;\n \
    \ }\n  $mid = round($count / 2);\n  $i = 0;\n  while ($i < $mid) {\n    if ($q[$i]\
    \ != $q[$count - $i - 1]) {\n      return false;\n    }\n    $i++;\n  }\n  return\
    \ true;\n}\n\n$tests = array(\n  'Test 1' => array(\n    'input' => array(\n \
    \     array(1, 2),\n      5,\n    ),\n    'expected' => false,\n  ),\n  'Test\
    \ 2' => array(\n    'input' => array(\n      array(3, 2, 3),\n      1,\n    ),\n\
    \    'expected' => false,\n  ),\n  'Test 3' => array(\n    'input' => array(\n\
    \      array(3, 2, 3),\n      9,\n    ),\n    'expected' => true,\n  ),\n  'Test\
    \ 4' => array(\n    'input' => array(\n      array(3),\n      5,\n    ),\n   \
    \ 'expected' => true,\n  ),\n);\n\nforeach ($tests as $name => $test) {\n  echo\
    \ \"$name: \";\n  $result = will_it_fly($test['input'][0], $test['input'][1]);\n\
    \  if ($result == $test['expected']) {\n    echo 'SUCCESS';\n  }\n  else {\n \
    \   echo 'FAILURE';\n  }\n  echo \"\\n\";\n}\nfunction candidate(...$args) {\n\
    \    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'Test 1: SUCCESS

    Test 2: SUCCESS

    Test 3: SUCCESS

    Test 4: SUCCESS

    '
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  // Write your code here...\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsiyijtr6.php:26\n\
    Stack trace:\n#0 /tmp/tmpsiyijtr6.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpsiyijtr6.php\
    \ on line 26\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $n = count($q);\n    $sum = 0;\n    for ($i\
    \ = 0; $i < $n; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum > $w) {\n\
    \        return false;\n    }\n    for ($i = 0; $i < $n; $i++) {\n        if ($q[$i]\
    \ != $q[$n - $i - 1]) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $total = 0;\n  foreach ($q as $value) {\n  \
    \  $total += $value;\n  }\n  if ($total <= $w) {\n    $palin = new Palindrome();\n\
    \    if ($palin->isPalindrome($q)) {\n      return true;\n    }\n  }\n  return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Class \"Palindrome\" not found in /tmp/tmpbt0z_5s4.php:23\n\
    Stack trace:\n#0 /tmp/tmpbt0z_5s4.php(32): will_it_fly(Array, 9)\n#1 /tmp/tmpbt0z_5s4.php(36):\
    \ candidate(Array, 9)\n#2 /tmp/tmpbt0z_5s4.php(44): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpbt0z_5s4.php on line 23\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$total = 0;\n\tforeach ($q as $item) {\n\t\t\
    $total += $item;\n\t}\n\tif ($total > $w) {\n\t\treturn false;\n\t}\n\t$a = array_slice($q,\
    \ 0, (int)ceil(count($q)/2));\n\t$b = array_slice($q, (int)floor(count($q)/2));\n\
    \t$b = array_reverse($b);\n\tif ($a === $b) {\n\t\treturn true;\n\t}\n\treturn\
    \ false;\n}\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpakiuul6s.php:26\n\
    Stack trace:\n#0 /tmp/tmpakiuul6s.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpakiuul6s.php\
    \ on line 26\n"
  timestamp: 1659824386
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  $is_balanced = true;\n  foreach\
    \ ($q as $el) {\n    $sum += $el;\n  }\n  if ($sum > $w) {\n    return false;\n\
    \  }\n  for ($i = 0; $i < count($q) / 2; $i++) {\n    if ($q[$i] != $q[count($q)\
    \ - $i - 1]) {\n      $is_balanced = false;\n    }\n  }\n  return $is_balanced;\n\
    }\n$q = array(3, 2, 3);\n$w = 9;\necho will_it_fly($q, $w);\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $maxWeight = $w;\n    $currentWeight = 0;\n\
    \    $temp = array();\n    for ($i = 0; $i < count($q); $i++) {\n        $currentWeight\
    \ += $q[$i];\n        array_push($temp, $q[$i]);\n    }\n    if ($currentWeight\
    \ <= $maxWeight) {\n        if (is_palindrome($temp)) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n  \
    \  return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_palindrome()\
    \ in /tmp/tmpwqq4p5nw.php:26\nStack trace:\n#0 /tmp/tmpwqq4p5nw.php(34): will_it_fly(Array,\
    \ 9)\n#1 /tmp/tmpwqq4p5nw.php(38): candidate(Array, 9)\n#2 /tmp/tmpwqq4p5nw.php(46):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpwqq4p5nw.php on line 26\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $n = count($q);\n  $sum = 0;\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $sum += $q[$i];\n  }\n  if ($sum > $w) {\n    return false;\n\
    \  }\n  $start = 0;\n  $end = $n - 1;\n  while ($start < $end) {\n    if ($q[$start]\
    \ != $q[$end]) {\n      return false;\n    }\n    $start++;\n    $end--;\n  }\n\
    \  return true;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\tif($w < 0){\n\t\treturn false;\n\t}\n\t$sum\
    \ = 0;\n\t$q2 = array_reverse($q);\n\tif(count($q) != count($q2)){\n\t\treturn\
    \ false;\n\t}\n\tforeach($q as $index => $value){\n\t\tif($value != $q2[$index]){\n\
    \t\t\treturn false;\n\t\t}\n\t\t$sum += $value;\n\t}\n\tif($sum <= $w){\n\t\t\
    return true;\n\t}\n\treturn false;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $palindrome = array_reverse($q);\n    $sum\
    \ = array_sum($q);\n    return $q == $palindrome && $sum <= $w;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  for ($i = 0; $i < count($q); $i++)\
    \ {\n    $sum += $q[$i];\n  }\n  if ($sum <= $w) {\n    $palindrome = true;\n\
    \    for ($i = 0; $i < (count($q) / 2); $i++) {\n      if ($q[$i] != $q[count($q)\
    \ - $i - 1]) {\n        $palindrome = false;\n      }\n    }\n    if ($palindrome)\
    \ {\n      return true;\n    }\n  }\n  return false;\n}\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  if (is_balanced($q) && $w >= array_sum($q))\
    \ {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_balanced()\
    \ in /tmp/tmp7agm1cqz.php:18\nStack trace:\n#0 /tmp/tmp7agm1cqz.php(26): will_it_fly(Array,\
    \ 9)\n#1 /tmp/tmp7agm1cqz.php(30): candidate(Array, 9)\n#2 /tmp/tmp7agm1cqz.php(38):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmp7agm1cqz.php on line 18\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $half = ceil(count($q) / 2);\n\
    \    for ($i = 0; $i < $half; $i++) {\n        $sum += $q[$i];\n        if ($q[$i]\
    \ != $q[count($q) - $i - 1]) {\n            return false;\n        }\n    }\n\
    \    return $sum <= $w;\n}\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  if (is_null($q) || empty($q)) {\n    return\
    \ false;\n  }\n  $sum = array_sum($q);\n  if ($sum > $w) {\n    return false;\n\
    \  }\n  $reverse = array_reverse($q);\n  if ($q == $reverse) {\n    return true;\n\
    \  }\n  return false;\n}\necho will_it_fly(array(1, 2), 5) . \"\\n\";\necho will_it_fly(array(3,\
    \ 2, 3), 1) . \"\\n\";\necho will_it_fly(array(3, 2, 3), 9) . \"\\n\";\necho will_it_fly(array(3),\
    \ 5) . \"\\n\";\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '


    1

    1

    '
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $qLen = count($q);\n    $qSum = array_sum($q);\n\
    \    if($qSum <= $w) {\n        $qHalf = intval($qLen / 2);\n        $isPalindrome\
    \ = true;\n        for($i = 0; $i < $qHalf; $i++) {\n            if($q[$i] !=\
    \ $q[$qLen - $i - 1]) {\n                $isPalindrome = false;\n            \
    \    break;\n            }\n        }\n        return $isPalindrome;\n    }\n\
    \    return false;\n}\n$q = array(3, 2, 3);\n$w = 9;\necho will_it_fly($q, $w);\n\
    function candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $arraySum = array_sum($q);\n  if ($arraySum\
    \ <= $w) {\n    $palindrome = is_palindrome($q);\n    if ($palindrome) {\n   \
    \   return true;\n    }\n  }\n  return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_palindrome()\
    \ in /tmp/tmpb3_uk3mt.php:20\nStack trace:\n#0 /tmp/tmpb3_uk3mt.php(29): will_it_fly(Array,\
    \ 9)\n#1 /tmp/tmpb3_uk3mt.php(33): candidate(Array, 9)\n#2 /tmp/tmpb3_uk3mt.php(41):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpb3_uk3mt.php on line 20\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$q = array_values($q);\n\t$qlength = count($q);\n\
    \tif ($qlength == 1) {\n\t\tif ($q[0] <= $w) return true;\n\t\telse return false;\n\
    \t}\n\tif ($qlength % 2 == 0) {\n\t\tfor ($i = 0; $i < $qlength / 2; $i++) {\n\
    \t\t\tif ($q[$i] != $q[$qlength - $i - 1]) return false;\n\t\t}\n\t} else {\n\t\
    \tfor ($i = 0; $i < floor($qlength / 2); $i++) {\n\t\t\tif ($q[$i] != $q[$qlength\
    \ - $i - 1]) return false;\n\t\t}\n\t}\n\t$count = 0;\n\tforeach ($q as $key =>\
    \ $value) {\n\t\t$count += $value;\n\t}\n\tif ($count <= $w) return true;\n\t\
    else return false;\n}\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $len = count($q);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    }\n    for ($i = 0; $i < $len / 2; $i++) {\n\
    \        if ($q[$i] != $q[$len - $i - 1]) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n$arr = array(1, 2);\n$w = 5;\nvar_dump(will_it_fly($arr,\
    \ $w));\n$arr = array(3, 2, 3);\n$w = 1;\nvar_dump(will_it_fly($arr, $w));\n$arr\
    \ = array(3, 2, 3);\n$w = 9;\nvar_dump(will_it_fly($arr, $w));\n$arr = array(3);\n\
    $w = 5;\nvar_dump(will_it_fly($arr, $w));\nfunction candidate(...$args) {\n  \
    \  return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'bool(false)

    bool(false)

    bool(true)

    bool(true)

    '
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\tif (count($q) == 1 || array_sum($q) <= $w) {\n\
    \t\treturn true;\n\t}\n\t\n\t$q_copy = $q;\n\t$q_cnt = count($q);\n\t$i = 0;\n\
    \t\n\tforeach ($q as $element) {\n\t\tif ($element != $q_copy[$q_cnt - 1 - $i])\
    \ {\n\t\t\treturn false;\n\t\t}\n\t\t$i++;\n\t}\n\t\n\treturn true;\n}\n\necho\
    \ will_it_fly(array(1, 2), 5) . \"\\n\";\necho will_it_fly(array(3, 2, 3), 1)\
    \ . \"\\n\";\necho will_it_fly(array(3, 2, 3), 9) . \"\\n\";\necho will_it_fly(array(3),\
    \ 5) . \"\\n\";\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n1\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr43zx8lx.php:47\n\
    Stack trace:\n#0 /tmp/tmpr43zx8lx.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpr43zx8lx.php\
    \ on line 47\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $count = count($q);\n    if ($count == 1)\
    \ {\n        return true;\n    }\n    $sum = 0;\n    $position = 0;\n    while\
    \ ($position < $count) {\n        $sum += $q[$position];\n        $position++;\n\
    \    }\n    if ($sum > $w) {\n        return false;\n    }\n    $i = 0;\n    $j\
    \ = $count - 1;\n    while ($i < $j) {\n        if ($q[$i] != $q[$j]) {\n    \
    \        return false;\n        }\n        $i++;\n        $j--;\n    }\n    return\
    \ true;\n}\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    if(empty($q)) {\n        return true;\n  \
    \  }\n    $count = count($q);\n    $sum = array_sum($q);\n    $first = $q[0];\n\
    \    $last = $q[$count - 1];\n    if($first !== $last) {\n        return false;\n\
    \    }\n    if($sum > $w) {\n        return false;\n    }\n    array_shift($q);\n\
    \    array_pop($q);\n    return will_it_fly($q, $w);\n}\necho will_it_fly(array(3,\
    \ 2, 3), 9);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $size = count($q);\n    for\
    \ ($i = 0; $i < $size; $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum >\
    \ $w) {\n        return false;\n    } else {\n        $palindrome = true;\n  \
    \      for ($i = 0; $i < $size; $i++) {\n            if ($q[$i] != $q[$size -\
    \ $i - 1]) {\n                $palindrome = false;\n            }\n        }\n\
    \        return $palindrome;\n    }\n}\n$q = array(1, 2);\n$w = 5;\necho will_it_fly($q,\
    \ $w);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $quantity = 0;\n  foreach ($q as $key => $value)\
    \ {\n    $quantity += $value;\n  }\n  if ($quantity > $w) {\n    return FALSE;\n\
    \  }\n  $reverseArray = array_reverse($q);\n  if ($q == $reverseArray) {\n   \
    \ return TRUE;\n  }\n  return FALSE;\n}\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $bal = true;\n  $len = count($q);\n  for ($i\
    \ = 0; $i < $len / 2; $i++) {\n    if ($q[$i] != $q[$len - $i - 1]) {\n      $bal\
    \ = false;\n      break;\n    }\n  }\n  if ($bal) {\n    $sum = 0;\n    foreach\
    \ ($q as $value) {\n      $sum += $value;\n    }\n    if ($sum <= $w) {\n    \
    \  return true;\n    }\n  }\n  return false;\n}\n\n$q = array(3, 2, 3);\n$w =\
    \ 10;\nprint \"Will it fly? \" . will_it_fly($q, $w) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'Will it fly? 1

    '
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$count = count($q);\n\t$first = 0;\n\t$last\
    \ = $count - 1;\n\t$sum = 0;\n\t$balanced = true;\n\twhile($first <= $last) {\n\
    \t\tif($q[$first] != $q[$last]) {\n\t\t\t$balanced = false;\n\t\t}\n\t\t$sum +=\
    \ $q[$first];\n\t\t$first++;\n\t\t$last--;\n\t}\n\tif($sum <= $w && $balanced)\
    \ {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  $len = count($q);\n  $half = $len\
    \ / 2;\n  $check = false;\n  if($len % 2 === 0) {\n    $check = true;\n  }\n \
    \ for($i = 0; $i < $half; $i++) {\n    $sum += $q[$i];\n    if($check) {\n   \
    \   if($q[$i] != $q[$len - $i - 1]) {\n        return false;\n      }\n    } else\
    \ {\n      if($q[$i] != $q[$len - $i - 2]) {\n        return false;\n      }\n\
    \    }\n  }\n  if($check) {\n    for($i = $half; $i < $len; $i++) {\n      $sum\
    \ += $q[$i];\n    }\n  }\n  if($sum <= $w) {\n    return true;\n  }\n  return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpht3pyncr.php:53\n\
    Stack trace:\n#0 /tmp/tmpht3pyncr.php(61): test()\n#1 {main}\n  thrown in /tmp/tmpht3pyncr.php\
    \ on line 53\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  // Write your code here\n  // To print results\
    \ to the standard output you can use print\n  // Example:\n  // print 'Hello world!';\n\
    \  if($w > array_sum($q)) {\n      return true;\n  }\n  else {\n      return false;\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfxrglikj.php:36\n\
    Stack trace:\n#0 /tmp/tmpfxrglikj.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpfxrglikj.php\
    \ on line 36\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  $len = count($q);\n  for ($i =\
    \ 0; $i < $len; $i++) {\n    $sum += $q[$i];\n  }\n  if ($sum > $w) {\n    return\
    \ false;\n  }\n  $temp = $q;\n  rsort($temp);\n  return $temp == $q;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzgoyei5i.php:36\n\
    Stack trace:\n#0 /tmp/tmpzgoyei5i.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpzgoyei5i.php\
    \ on line 36\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$str = implode(\"\", $q);\n\t$str_rev = strrev($str);\n\
    \t$sum = array_sum($q);\n\tif(strcmp($str, $str_rev) == 0) {\n\t\tif($sum <= $w)\
    \ {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nvar_dump(will_it_fly(array(1,\
    \ 2), 5));\nvar_dump(will_it_fly(array(3, 2, 3), 1));\nvar_dump(will_it_fly(array(3,\
    \ 2, 3), 9));\nvar_dump(will_it_fly(array(3), 5));\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'bool(false)

    bool(false)

    bool(true)

    bool(true)

    '
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $result = false;\n    if (isset($q)) {\n \
    \       if (array_sum($q) <= $w) {\n            $qLength = count($q);\n      \
    \      $qPalindrome = true;\n            for ($i = 0; $i < $qLength / 2; $i++)\
    \ {\n                if ($q[$i] != $q[$qLength - $i - 1]) {\n                \
    \    $qPalindrome = false;\n                    break;\n                }\n  \
    \          }\n            if ($qPalindrome) {\n                $result = true;\n\
    \            }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  for ($i = 0; $i < count($q); $i++)\
    \ {\n    $sum += $q[$i];\n  }\n  $sum += $q[0];\n  if ($sum <= $w) {\n    return\
    \ true;\n  } else {\n    return false;\n  }\n}\n\necho will_it_fly(array(1, 2),\
    \ 5);\necho \"<br>\";\necho will_it_fly(array(3, 2, 3), 1);\necho \"<br>\";\n\
    echo will_it_fly(array(3, 2, 3), 9);\necho \"<br>\";\necho will_it_fly(array(3),\
    \ 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1<br><br><br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpscg1s5u9.php:42\n\
    Stack trace:\n#0 /tmp/tmpscg1s5u9.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpscg1s5u9.php\
    \ on line 42\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    for ($i = 0; $i < count($q);\
    \ $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum > $w) {\n        return\
    \ false;\n    }\n    for ($i = 0; $i < count($q) / 2; $i++) {\n        if ($q[$i]\
    \ != $q[count($q) - $i - 1]) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\necho will_it_fly(array(1, 2), 5);\necho \"<br/>\";\necho\
    \ will_it_fly(array(3, 2, 3), 1);\necho \"<br/>\";\necho will_it_fly(array(3,\
    \ 2, 3), 9);\necho \"<br/>\";\necho will_it_fly(array(3), 5);\necho \"<br/>\"\
    ;\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: <br/><br/>1<br/>1<br/>
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  $i = 0;\n  $j = count($q) - 1;\n\
    \  while($i < $j) {\n    if($q[$i] != $q[$j]) {\n      return false;\n    }\n\
    \    $i++;\n    $j--;\n  }\n  foreach($q as $num) {\n    $sum += $num;\n  }\n\
    \  if($sum <= $w) {\n    return true;\n  }\n  return false;\n}\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $rev = array_reverse($q);\n    if ($q == $rev)\
    \ {\n        $sum = array_sum($q);\n        if ($sum <= $w) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $qSum = array_sum($q);\n    $qReverse = array_reverse($q);\n\
    \    $qReverseSum = array_sum($qReverse);\n    if ($qSum <= $w && $qSum == $qReverseSum)\
    \ {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqk5lvd_i.php:34\n\
    Stack trace:\n#0 /tmp/tmpqk5lvd_i.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpqk5lvd_i.php\
    \ on line 34\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    for ($i = 0; $i < count($q);\
    \ $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum > $w) {\n        return\
    \ false;\n    }\n    if (is_palindrome($q)) {\n        return true;\n    }\n \
    \   return false;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_palindrome()\
    \ in /tmp/tmpnatb3mjb.php:25\nStack trace:\n#0 /tmp/tmpnatb3mjb.php(32): will_it_fly(Array,\
    \ 9)\n#1 /tmp/tmpnatb3mjb.php(36): candidate(Array, 9)\n#2 /tmp/tmpnatb3mjb.php(44):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpnatb3mjb.php on line 25\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$array_len = count($q);\n\tif ($array_len ==\
    \ 1) {\n\t\tif ($q[0] <= $w) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\t$half_len = $array_len / 2;\n\t\t$a1 = array_slice($q,\
    \ 0, $half_len);\n\t\t$a2 = array_slice($q, $half_len);\n\t\tif (array_sum($a1)\
    \ <= $w && array_sum($a2) <= $w && implode($a1) == strrev(implode($a2))) {\n\t\
    \t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n}\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 1.5 to int loses precision\
    \ in /tmp/tmpntjg_01d.php on line 27\n\nDeprecated: Implicit conversion from float\
    \ 1.5 to int loses precision in /tmp/tmpntjg_01d.php on line 28\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpntjg_01d.php:41\nStack trace:\n\
    #0 /tmp/tmpntjg_01d.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpntjg_01d.php\
    \ on line 41\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    // Write your code here\n    // To print results\
    \ to the standard output you can use print\n    // Example:\n    // print \"Hello\
    \ world!\";\n}\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjr4uu8qj.php:28\n\
    Stack trace:\n#0 /tmp/tmpjr4uu8qj.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpjr4uu8qj.php\
    \ on line 28\n"
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  if ($w < array_sum($q)) {\n    return false;\n\
    \  }\n  elseif (is_palindrome($q)) {\n    return true;\n  }\n  else {\n    return\
    \ false;\n  }\n}\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_palindrome()\
    \ in /tmp/tmpmztqe3mq.php:21\nStack trace:\n#0 /tmp/tmpmztqe3mq.php(29): will_it_fly(Array,\
    \ 9)\n#1 /tmp/tmpmztqe3mq.php(33): candidate(Array, 9)\n#2 /tmp/tmpmztqe3mq.php(41):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpmztqe3mq.php on line 21\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $i = 0;\n  $j = count($q) - 1;\n  while ($i\
    \ < $j) {\n    if ($q[$i] !== $q[$j]) {\n      return false;\n    }\n    $i++;\n\
    \    $j--;\n  }\n  return array_sum($q) <= $w;\n}\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t\n}\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6v7zb937.php:25\n\
    Stack trace:\n#0 /tmp/tmp6v7zb937.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp6v7zb937.php\
    \ on line 25\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $len = count($q);\n    if ($len === 1) {\n\
    \        return ($q[0] <= $w);\n    }\n    if ($len === 2) {\n        if ($q[0]\
    \ !== $q[1]) {\n            return false;\n        }\n        if ($q[0] + $q[1]\
    \ > $w) {\n            return false;\n        }\n        return true;\n    }\n\
    \    $sum = 0;\n    for ($i = 0; $i < $len; $i++) {\n        $sum += $q[$i];\n\
    \    }\n    if ($sum > $w) {\n        return false;\n    }\n    $j = $len - 1;\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if ($q[$i] !== $q[$j]) {\n     \
    \       return false;\n        }\n        $j--;\n    }\n    return true;\n}\n\n\
    function candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  $palindrome = true;\n  $len = count($q);\n\
    \  $half = floor($len / 2);\n  if ($len % 2 == 0) {\n    for ($i = 0; $i < $half;\
    \ $i++) {\n      $sum += $q[$i];\n      if ($q[$i] != $q[$len - 1 - $i]) {\n \
    \       $palindrome = false;\n      }\n    }\n  } else {\n    for ($i = 0; $i\
    \ < $half; $i++) {\n      $sum += $q[$i];\n      if ($q[$i] != $q[$len - 1 - $i])\
    \ {\n        $palindrome = false;\n      }\n    }\n    $sum += $q[$half];\n  }\n\
    \  if ($sum <= $w && $palindrome) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\n\n$q = array(1, 2);\n$w = 5;\necho will_it_fly($q, $w) . \"\\\
    n\";\n$q = array(3, 2, 3);\n$w = 1;\necho will_it_fly($q, $w) . \"\\n\";\n$q =\
    \ array(3, 2, 3);\n$w = 9;\necho will_it_fly($q, $w) . \"\\n\";\n$q = array(3);\n\
    $w = 5;\necho will_it_fly($q, $w) . \"\\n\";\n\nfunction candidate(...$args) {\n\
    \    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '


    1

    1

    '
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    for ($i = 0; $i < count($q);\
    \ $i++) {\n        $sum += $q[$i];\n    }\n    if ($sum > $w) {\n        return\
    \ false;\n    } else {\n        $length = count($q);\n        for ($j = 0; $j\
    \ < ($length/2); $j++) {\n            if ($q[$j] != $q[$length - $j - 1]) {\n\
    \                return false;\n            }\n        }\n        return true;\n\
    \    }\n}\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  $stack = [];\n  $balanced = true;\n\
    \  foreach ($q as $item) {\n    $sum += $item;\n    if ($sum > $w) {\n      return\
    \ false;\n    }\n    array_push($stack, $item);\n  }\n  foreach ($q as $item)\
    \ {\n    if (array_pop($stack) != $item) {\n      $balanced = false;\n    }\n\
    \  }\n  return $balanced;\n}\n\necho will_it_fly(array(1, 2), 5); //false\necho\
    \ will_it_fly(array(3, 2, 3), 1); //false\necho will_it_fly(array(3, 2, 3), 9);\
    \ //true\necho will_it_fly(array(3), 5); //true\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $sum = 0;\n    $leftIndex = 0;\n    $rightIndex\
    \ = count($q) - 1;\n    while ($leftIndex < $rightIndex) {\n        if ($q[$leftIndex]\
    \ != $q[$rightIndex]) {\n            return false;\n        }\n        $leftIndex++;\n\
    \        $rightIndex--;\n    }\n    foreach ($q as $x) {\n        $sum += $x;\n\
    \    }\n    return $sum <= $w;\n}\necho will_it_fly(array(1, 2), 5);\necho \"\\\
    n\";\necho will_it_fly(array(3, 2, 3), 1);\necho \"\\n\";\necho will_it_fly(array(3,\
    \ 2, 3), 9);\necho \"\\n\";\necho will_it_fly(array(3), 5);\necho \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '


    1

    1

    '
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $temp = array_values($q);\n    $sum = 0;\n\
    \    for ($i = 0; $i < count($temp); $i++) {\n        $sum += $temp[$i];\n   \
    \ }\n    if ($sum > $w) {\n        return false;\n    }\n    else {\n        $result\
    \ = false;\n        $size = count($temp);\n        for ($i = 0; $i < $size / 2;\
    \ $i++) {\n            if ($temp[$i] == $temp[$size - $i - 1]) {\n           \
    \     $result = true;\n            }\n            else {\n                $result\
    \ = false;\n                break;\n            }\n        }\n        return $result;\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $i = 0;\n    $sum = 0;\n    while ($i < count($q))\
    \ {\n        $sum += $q[$i];\n        $i++;\n    }\n    if ($sum <= $w) {\n  \
    \      if (is_palindrome($q)) {\n            return true;\n        }\n    }\n\
    \    return false;\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_palindrome()\
    \ in /tmp/tmp4ba1ffi1.php:25\nStack trace:\n#0 /tmp/tmp4ba1ffi1.php(33): will_it_fly(Array,\
    \ 9)\n#1 /tmp/tmp4ba1ffi1.php(37): candidate(Array, 9)\n#2 /tmp/tmp4ba1ffi1.php(45):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmp4ba1ffi1.php on line 25\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $i = 0;\n    $j = count($q) - 1;\n    $is_balanced\
    \ = TRUE;\n    $total = 0;\n    while ($i < $j) {\n        if ($q[$i] != $q[$j])\
    \ {\n            $is_balanced = FALSE;\n            break;\n        }\n      \
    \  $i++;\n        $j--;\n    }\n    foreach ($q as $i) {\n        $total += $i;\n\
    \    }\n    return $is_balanced && $total <= $w;\n}\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum_w = array_sum($q);\n\t$nb_w = count($q);\n\
    \t$max_w = $w;\n\t$balanced = true;\n\tif ($sum_w <= $max_w && $nb_w >= 2) {\n\
    \t\tfor ($i = 0; $i < ($nb_w / 2); $i++) {\n\t\t\tif ($q[$i] !== $q[$nb_w - $i\
    \ - 1]) {\n\t\t\t\t$balanced = false;\n\t\t\t}\n\t\t}\n\t} else {\n\t\t$balanced\
    \ = false;\n\t}\n\treturn $balanced;\n}\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4rejyokq.php:40\n\
    Stack trace:\n#0 /tmp/tmp4rejyokq.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp4rejyokq.php\
    \ on line 40\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = 0;\n\tfor ($i = 0; $i < count($q); $i++)\
    \ {\n\t\t$sum += $q[$i];\n\t}\n\tif ($sum > $w) {\n\t\treturn false;\n\t}\n\t\
    $r = array_reverse($q);\n\tif ($q == $r) {\n\t\treturn true;\n\t}\n\treturn false;\n\
    }\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    if(array_sum($q) > $w) {\n        return false;\n\
    \    }\n    $first = array_slice($q, 0, floor(count($q) / 2));\n    $second =\
    \ array_slice($q, -floor(count($q) / 2));\n    if($first === array_reverse($second))\
    \ {\n        return true;\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw54jn02c.php:36\n\
    Stack trace:\n#0 /tmp/tmpw54jn02c.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpw54jn02c.php\
    \ on line 36\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $s = $q[0];\n    $arr = array_reverse($q);\n\
    \    $p = $arr[0];\n    $sum = 0;\n    foreach ($q as $value) {\n        $sum\
    \ += $value;\n    }\n    $check = $sum <= $w;\n    if ($s === $p && $check) {\n\
    \        return true;\n    } else {\n        return false;\n    }\n}\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $weight = 0;\n  foreach ($q as $item) {\n  \
    \  $weight += $item;\n  }\n  $weight += count($q);\n  return $weight <= $w &&\
    \ is_palindrome($q);\n}\n\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc4zefbk1.php:31\n\
    Stack trace:\n#0 /tmp/tmpc4zefbk1.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpc4zefbk1.php\
    \ on line 31\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t// Your code here\n}\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnmix20xd.php:25\n\
    Stack trace:\n#0 /tmp/tmpnmix20xd.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpnmix20xd.php\
    \ on line 25\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  if(array_sum($q) <= $w) {\n    if($q == array_reverse($q))\
    \ {\n      return true;\n    }\n  }\n  return false;\n}\n\n$tests = [\n  [\n \
    \   'input' => [array(1, 2), 5],\n    'expected' => false\n  ],\n  [\n    'input'\
    \ => [array(3, 2, 3), 1],\n    'expected' => false\n  ],\n  [\n    'input' =>\
    \ [array(3, 2, 3), 9],\n    'expected' => true\n  ],\n  [\n    'input' => [array(3),\
    \ 5],\n    'expected' => true\n  ],\n];\n\n$fails = 0;\nforeach($tests as $test)\
    \ {\n  $result = call_user_func_array('will_it_fly', $test['input']);\n  if($result\
    \ !== $test['expected']) {\n    echo \"Failed test 'will_it_fly' on input \" .\
    \ implode(', ', $test['input']) . \". Got '$result', but expected '{$test['expected']}'\\\
    n\";\n    $fails++;\n  }\n}\n\necho \"$fails tests failed.\\n\";\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0 tests failed.

    '
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$q = is_array($q) ? $q : array($q);\n\treturn\
    \ (array_sum($q) <= $w) && (is_palindrome($q));\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_palindrome()\
    \ in /tmp/tmpkm7qmc3f.php:19\nStack trace:\n#0 /tmp/tmpkm7qmc3f.php(23): will_it_fly(Array,\
    \ 9)\n#1 /tmp/tmpkm7qmc3f.php(27): candidate(Array, 9)\n#2 /tmp/tmpkm7qmc3f.php(35):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpkm7qmc3f.php on line 19\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $weight = array_sum($q);\n  $balanced = $q ==\
    \ array_reverse($q);\n  return $weight <= $w && $balanced;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    if (array_sum($q) > $w) {\n        return\
    \ false;\n    }\n    $r = array_reverse($q);\n    for ($i = 0; $i < count($q);\
    \ $i++) {\n        if ($q[$i] != $r[$i]) {\n            return false;\n      \
    \  }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  // sum array elements\n  $arr_sum = array_sum($q);\n\
    \  // return true if the sum is less than or equal the maximum weight\n  if ($arr_sum\
    \ <= $w) {\n    // reverse the array\n    $reverse_arr = array_reverse($q);\n\
    \    // count elements in arrays\n    $arr_len = count($q);\n    $reverse_arr_len\
    \ = count($reverse_arr);\n    // return true if the arrays have the same length\
    \ and if all the elements are equal\n    if ($arr_len == $reverse_arr_len) {\n\
    \      $is_equal = true;\n      for ($i = 0; $i < $arr_len; $i++) {\n        if\
    \ ($q[$i] != $reverse_arr[$i]) {\n          $is_equal = false;\n        }\n  \
    \    }\n      return $is_equal;\n    }\n  }\n  return false;\n}\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    $a1 = array_sum($q);\n    $a2 = array_reverse($q);\n\
    \    $a3 = array_sum($a2);\n    if ($a1 <= $w) {\n        if ($a1 == $a3) {\n\
    \            return true;\n        } else {\n            return false;\n     \
    \   }\n    } else {\n        return false;\n    }\n}\nprint_r(will_it_fly(array(1,\
    \ 2), 5));\nprint_r(will_it_fly(array(3, 2, 3), 1));\nprint_r(will_it_fly(array(3,\
    \ 2, 3), 9));\nprint_r(will_it_fly(array(3), 5));\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "111\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppxup9prb.php:42\n\
    Stack trace:\n#0 /tmp/tmppxup9prb.php(49): test()\n#1 {main}\n  thrown in /tmp/tmppxup9prb.php\
    \ on line 42\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    if (is_balanced($q) && array_sum($q) <= $w)\
    \ {\n        return true;\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_balanced()\
    \ in /tmp/tmp4vohypxr.php:18\nStack trace:\n#0 /tmp/tmp4vohypxr.php(25): will_it_fly(Array,\
    \ 9)\n#1 /tmp/tmp4vohypxr.php(29): candidate(Array, 9)\n#2 /tmp/tmp4vohypxr.php(37):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmp4vohypxr.php on line 18\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    if (empty($q)) return true;\n    $q = array_map(function($x)\
    \ { return abs($x); }, $q);\n    $sum = array_sum($q);\n    if ($sum > $w) return\
    \ false;\n    $len = count($q);\n    $j = $len - 1;\n    for ($i = 0; $i < $len;\
    \ $i++) {\n        if ($q[$i] !== $q[$j]) return false;\n        $j--;\n    }\n\
    \    return true;\n}\n\n$tests = array(\n    array(\n        'q' => array(1, 2),\n\
    \        'w' => 5,\n        'expected' => false,\n    ),\n    array(\n       \
    \ 'q' => array(3, 2, 3),\n        'w' => 1,\n        'expected' => false,\n  \
    \  ),\n    array(\n        'q' => array(3, 2, 3),\n        'w' => 9,\n       \
    \ 'expected' => true,\n    ),\n    array(\n        'q' => array(3),\n        'w'\
    \ => 5,\n        'expected' => true,\n    ),\n    array(\n        'q' => array(3,\
    \ 2, 2, 3),\n        'w' => 10,\n        'expected' => true,\n    ),\n    array(\n\
    \        'q' => array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1),\n\
    \        'w' => 100,\n        'expected' => true,\n    ),\n    array(\n      \
    \  'q' => array(9, 10, 7, 8, 5, 6, 3, 4, 1, 2, -1, -2, -3, -4, -5, -6, -7, -8,\
    \ -9, -10),\n        'w' => 100,\n        'expected' => true,\n    ),\n    array(\n\
    \        'q' => array(9, 10, 7, 8, 5, 6, 3, 4, 1, 2, -1, -2, -3, -4,\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpw5qdby28.php on line 69

    '
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $n = count($q);\n  if ( $n < 1 ) {\n    return\
    \ false;\n  }\n  $l = 0;\n  $r = $n - 1;\n  $sum = 0;\n  while ( $l < $r ) {\n\
    \    if ( $q[$l] != $q[$r] ) {\n      return false;\n    }\n    $sum += $q[$l];\n\
    \    $l++;\n    $r--;\n  }\n  $sum += $q[$l];\n  return $sum <= $w;\n}\n\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n  $sum = 0;\n  $reversed = array_reverse($q);\n\
    \  if ($q == $reversed) {\n    foreach ($q as $element) {\n      $sum += $element;\n\
    \    }\n    if ($sum <= $w) {\n      return true;\n    }\n  }\n  return false;\n\
    }\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\n}\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2xh9lyf1.php:25\n\
    Stack trace:\n#0 /tmp/tmp2xh9lyf1.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp2xh9lyf1.php\
    \ on line 25\n"
  timestamp: 1659824386
- exit_code: 0
  program: "<?php\n// Write a function that returns true if the object q will fly,\
    \ and false otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ array) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// >>> will_it_fly(array(1, 2), 5)\n// false\n// # 1+2\
    \ is less than the maximum possible weight, but it's unbalanced.\n// >>> will_it_fly(array(3,\
    \ 2, 3), 1)\n// false\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// >>> will_it_fly(array(3, 2, 3), 9)\n// true\n// # 3+2+3\
    \ is less than the maximum possible weight, and it's balanced.\n// >>> will_it_fly(array(3),\
    \ 5)\n// true\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n    // Write your code here\n    // To print results\
    \ to the standard output you can use print\n    // Example:\n    // print \"Hello\
    \ world!\";\n    $flyable = false;\n    $objectWeight = array_sum($q);\n    if\
    \ ($objectWeight <= $w && is_array($q)) {\n        $reverseArray = array_reverse($q);\n\
    \        if ($q == $reverseArray) {\n            $flyable = true;\n        }\n\
    \    }\n    return $flyable;\n}\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884

name: HumanEval_104_unique_digits
language: php
prompt: "<?php\n// Given an array of positive integers x. return a sorted array of\
  \ all \n// elements that hasn't any even digit.\n// Note: Returned array should\
  \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
  \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
  \ 10))\n// array()\nfunction unique_digits($x) {\n"
tests: "function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
  function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
  \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
  \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if\
  \ (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) {\
  \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $result = [];\n    foreach ($x as $n) {\n        $digits = str_split($n);\n\
    \        $has_even = FALSE;\n        foreach ($digits as $digit) {\n         \
    \   if ($digit % 2 == 0) {\n                $has_even = TRUE;\n              \
    \  break;\n            }\n        }\n        if (!$has_even) {\n            $result[]\
    \ = $n;\n        }\n    }\n    sort($result);\n    return $result;\n}\necho \"\
    Unique Digits\\n\";\n$tests = [\n    [15, 33, 1422, 1],\n    [152, 323, 1422,\
    \ 10],\n    [1, 2, 3, 4, 5, 6, 7, 8, 9],\n    [10, 12, 14, 16, 18, 20, 22, 24,\
    \ 26],\n    [2, 4, 6, 8, 10, 12, 14, 16, 18],\n    [1, 1, 2, 2, 3, 3, 4, 4, 5,\
    \ 5, 6, 6, 7, 7, 8, 8, 9, 9],\n    [10, 12, 14, 16, 18, 20, 22, 24, 26,\n    \
    \ 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9],\n    [10, 12, 14, 16,\
    \ 18, 20, 22, 24, 26,\n     2, 4, 6, 8, 10, 12, 14, 16, 18,\n     1, 1, 2, 2,\
    \ 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9],\n];\nforeach ($tests as $test) {\n\
    \    echo \"Input: [\";\n    echo implode(\", \", $test);\n    echo \"]\\n\";\n\
    \    echo \"Output: [\";\n    echo implode(\", \", unique_digits($test));\n  \
    \  echo \"]\\n\";\n}\n", "    // Fill this in\n    $count = 0;\n    $ret = array();\n\
    \    foreach ($x as $val) {\n        $digit = $val;\n        while ($digit > 0)\
    \ {\n            $remainder = $digit % 10;\n            if ($remainder % 2 ==\
    \ 0) {\n                $count++;\n                break;\n            }\n   \
    \         $digit = $digit / 10;\n        }\n        if ($count == 0)\n       \
    \     array_push($ret, $val);\n        $count = 0;\n    }\n    sort($ret);\n \
    \   return $ret;\n}\n\nif (__FILE__ == $_SERVER['SCRIPT_FILENAME']) {\n    print_r(unique_digits(array(15,\
    \ 33, 1422, 1)));\n    print_r(unique_digits(array(152, 323, 1422, 10)));\n}",
  "  if (empty($x)) {\n    return;\n  }\n  if (sizeof($x) == 1) {\n    return $x;\n\
    \  }\n  $result = array();\n  foreach ($x as $number) {\n    $flag = checkEven($number);\n\
    \    if ($flag == 1) {\n      array_push($result, $number);\n    }\n  }\n  //\
    \ sort in asscending order\n  sort($result);\n  return $result;\n}\n", "    $i\
    \ = 0;\n    foreach ($x as $key => $value) {\n        if (strlen($value) === 1\
    \ && $value != 1) {\n            unset($x[$key]);\n        } elseif (strlen($value)\
    \ === 2 && $value != 1) {\n            if ($value % 2 === 0) {\n             \
    \   unset($x[$key]);\n            }\n        } elseif (strlen($value) === 3 &&\
    \ $value != 1) {\n            if ($value % 2 === 0) {\n                unset($x[$key]);\n\
    \            } elseif ($value % 3 === 0) {\n                unset($x[$key]);\n\
    \            }\n        } elseif (strlen($value) === 4 && $value != 1) {\n   \
    \         if ($value % 2 === 0) {\n                unset($x[$key]);\n        \
    \    } elseif ($value % 3 === 0) {\n                unset($x[$key]);\n       \
    \     } elseif ($value % 4 === 0) {\n                unset($x[$key]);\n      \
    \      }\n        } elseif (strlen($value) === 5 && $value != 1) {\n         \
    \   if ($value % 2 === 0) {\n                unset($x[$key]);\n            } elseif\
    \ ($value % 3 === 0) {\n                unset($x[$key]);\n            } elseif\
    \ ($value % 4 === 0) {\n                unset($x[$key]);\n            } elseif\
    \ ($value % 5 === 0) {\n                unset($x[$key]);\n            }\n    \
    \    } elseif (strlen($value) === 6 && $value != 1) {\n            if ($value\
    \ % 2 === 0) {\n                unset($x[$key]);\n            } elseif ($value\
    \ % 3 === 0) {\n                unset($x[$key]);\n            } elseif ($value\
    \ % 4 === 0) {\n                unset($x[$key]);\n            } elseif ($value\
    \ % 5 === 0) {\n                unset($x[$key]);\n            } elseif ($value\
    \ % 6 === 0) {\n                unset($x[$key]);\n            }\n        } elseif\
    \ (strlen($value) === 7", "\tforeach ($x as $value) {\n\t\t$y = str_split($value);\n\
    \t\tforeach ($y as $value) {\n\t\t\tif ($value%2 == 0) {\n\t\t\t\t$z[] = $value;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn $z;\n}\necho \"array(15, 33, 1422, 1)) => \";\n\
    print_r(unique_digits(array(15, 33, 1422, 1)));\necho \"<br>\";\necho \"array(152,\
    \ 323, 1422, 10)) => \";\nprint_r(unique_digits(array(152, 323, 1422, 10)));\n\
    echo \"<br>\";\necho \"array(15, 33, 102, 1)) => \";\nprint_r(unique_digits(array(15,\
    \ 33, 102, 1)));\necho \"<br>\";\necho \"array(152, 323, 222, 10)) => \";\nprint_r(unique_digits(array(152,\
    \ 323, 222, 10)));", "  // SOLUTION GOES HERE\n  return array();\n}\n", "  $y\
    \ = array();\n  foreach ($x as $i) {\n    $z = unique_digits_helper($i);\n   \
    \ if ($z != \"\") {\n      array_push($y, $z);\n    }\n  }\n  sort($y);\n  return\
    \ $y;\n}", "  $y = array();\n  $count = 0;\n  foreach ($x as $key => $value) {\n\
    \    if ($value == 1 || $value == 3 || $value == 5 || $value == 7 || $value ==\
    \ 9) {\n      $y[$count] = $value;\n      $count = $count + 1;\n    }\n  }\n \
    \ return $y;\n}\n", '}', "    // Write your code here\n}\nprint_r(unique_digits(array(152,\
    \ 323, 1422, 10)));", "    $out = array();\n    foreach ($x as $v) {\n       \
    \ if (stripos(strval($v), '2') === false && stripos(strval($v), '4') === false\
    \ && stripos(strval($v), '6') === false && stripos(strval($v), '8') === false)\
    \ {\n            $out[] = $v;\n        }\n    }\n    sort($out);\n    return $out;\n\
    }\n", "  $result = array();\n  foreach ($x as $num) {\n    if (!has_even_digit($num))\
    \ {\n      $result[] = $num;\n    }\n  }\n  sort($result);\n  return $result;\n\
    }\n", "\t$y = array();\n\tforeach ($x as $i) {\n\t\tif(!preg_match('/[2468]/',\
    \ $i)) {\n\t\t\t$y[] = $i;\n\t\t}\n\t}\n\treturn $y;\n}\n", "\t$final = array();\n\
    \tforeach ($x as $i => $v) {\n\t\t$y = str_split($v);\n\t\t$flag = 0;\n\t\tforeach\
    \ ($y as $i => $v) {\n\t\t\tif ($v%2==0) {\n\t\t\t\t$flag = 1;\n\t\t\t\tbreak;\n\
    \t\t\t}\n\t\t}\n\t\tif ($flag==0)\n\t\t\tarray_push($final, $v);\n\t}\n\treturn\
    \ $final;\n}\n", "    $result = [];\n    foreach ($x as $i) {\n        $length\
    \ = strlen($i);\n        $remainder = $i;\n        $even = false;\n        for\
    \ ($j = 0; $j < $length; $j++) {\n            $digit = $remainder % 10;\n    \
    \        if ($digit % 2 == 0) {\n                $even = true;\n             \
    \   break;\n            }\n            $remainder = ($remainder - $digit) / 10;\n\
    \        }\n        if (!$even) {\n            $result[] = $i;\n        }\n  \
    \  }\n    sort($result);\n    return $result;\n}\n", "\t$len = count($x);\n\t\
    for ($i = 0; $i < $len; $i++) {\n\t\t$str = strval($x[$i]);\n\t\tfor ($j = 0;\
    \ $j < strlen($str); $j++) {\n\t\t\tif ($str[$j] % 2 == 0) {\n\t\t\t\tunset($x[$i]);\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn $x;\n}\n\n$x = array(152, 323, 1422,\
    \ 10);\n$y = unique_digits($x);\n\nprint_r($y);\n", "\t// your code here\n   \
    \ for($i=0;$i<count($x);$i++){\n        if(strpos($x[$i],\"2\")==true || strpos($x[$i],\"\
    4\")==true || strpos($x[$i],\"6\")==true || strpos($x[$i],\"8\")==true){\n   \
    \         $x[$i]=\"\";\n        }\n    }\n    return array_values(array_filter($x));\n\
    }\n\n$r = unique_digits(array(15, 33, 1422, 1));\nprint_r($r);", "\t$temp = [];\n\
    \t$counter = 0;\n\tfor ($i=0; $i < count($x); $i++) { \n\t\t$x[$i] = str_split($x[$i]);\n\
    \t\tfor ($j=0; $j < count($x[$i]); $j++) { \n\t\t\tif ($x[$i][$j] % 2 !== 0) {\n\
    \t\t\t\t$counter++;\n\t\t\t}\n\t\t}\n\t\tif ($counter === count($x[$i])) {\n\t\
    \t\t$temp[] = implode($x[$i]);\n\t\t}\n\t\t$counter = 0;\n\t}\n\tsort($temp);\n\
    \treturn $temp;\n}\nprint_r(unique_digits(array(15, 33, 1422, 1)));\necho '<br>';\n\
    print_r(unique_digits(array(152, 323, 1422, 10)));", "  return array_filter($x,\
    \ function($i) {\n    for (; $i; $i /= 10)\n      if (!($i % 10 % 2))\n      \
    \  return false;\n    return true;\n  });\n}", "\t$ret = array();\n\tforeach ($x\
    \ as $num) {\n\t\tif (strpos(strval($num), '2') === false &&\n\t\t\tstrpos(strval($num),\
    \ '4') === false &&\n\t\t\tstrpos(strval($num), '6') === false &&\n\t\t\tstrpos(strval($num),\
    \ '8') === false &&\n\t\t\tstrpos(strval($num), '0') === false) {\n\t\t\t$ret[]\
    \ = $num;\n\t\t}\n\t}\n\treturn $ret;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

name: HumanEval_104_unique_digits
language: php
prompt: "<?php\n// Given an array of positive integers x. return a sorted array of\
  \ all \n// elements that hasn't any even digit.\n// Note: Returned array should\
  \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
  \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
  \ 10))\n// array()\nfunction unique_digits($x) {\n"
tests: "function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
  function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
  \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
  \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if\
  \ (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) {\
  \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $result = [];\n    foreach ($x as $n) {\n        $digits = str_split($n);\n\
    \        $has_even = FALSE;\n        foreach ($digits as $digit) {\n         \
    \   if ($digit % 2 == 0) {\n                $has_even = TRUE;\n              \
    \  break;\n            }\n        }\n        if (!$has_even) {\n            $result[]\
    \ = $n;\n        }\n    }\n    sort($result);\n    return $result;\n}\necho \"\
    Unique Digits\\n\";\n$tests = [\n    [15, 33, 1422, 1],\n    [152, 323, 1422,\
    \ 10],\n    [1, 2, 3, 4, 5, 6, 7, 8, 9],\n    [10, 12, 14, 16, 18, 20, 22, 24,\
    \ 26],\n    [2, 4, 6, 8, 10, 12, 14, 16, 18],\n    [1, 1, 2, 2, 3, 3, 4, 4, 5,\
    \ 5, 6, 6, 7, 7, 8, 8, 9, 9],\n    [10, 12, 14, 16, 18, 20, 22, 24, 26,\n    \
    \ 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9],\n    [10, 12, 14, 16,\
    \ 18, 20, 22, 24, 26,\n     2, 4, 6, 8, 10, 12, 14, 16, 18,\n     1, 1, 2, 2,\
    \ 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9],\n];\nforeach ($tests as $test) {\n\
    \    echo \"Input: [\";\n    echo implode(\", \", $test);\n    echo \"]\\n\";\n\
    \    echo \"Output: [\";\n    echo implode(\", \", unique_digits($test));\n  \
    \  echo \"]\\n\";\n}\n", "    // Fill this in\n    $count = 0;\n    $ret = array();\n\
    \    foreach ($x as $val) {\n        $digit = $val;\n        while ($digit > 0)\
    \ {\n            $remainder = $digit % 10;\n            if ($remainder % 2 ==\
    \ 0) {\n                $count++;\n                break;\n            }\n   \
    \         $digit = $digit / 10;\n        }\n        if ($count == 0)\n       \
    \     array_push($ret, $val);\n        $count = 0;\n    }\n    sort($ret);\n \
    \   return $ret;\n}\n\nif (__FILE__ == $_SERVER['SCRIPT_FILENAME']) {\n    print_r(unique_digits(array(15,\
    \ 33, 1422, 1)));\n    print_r(unique_digits(array(152, 323, 1422, 10)));\n}",
  "  if (empty($x)) {\n    return;\n  }\n  if (sizeof($x) == 1) {\n    return $x;\n\
    \  }\n  $result = array();\n  foreach ($x as $number) {\n    $flag = checkEven($number);\n\
    \    if ($flag == 1) {\n      array_push($result, $number);\n    }\n  }\n  //\
    \ sort in asscending order\n  sort($result);\n  return $result;\n}\n", "    $i\
    \ = 0;\n    foreach ($x as $key => $value) {\n        if (strlen($value) === 1\
    \ && $value != 1) {\n            unset($x[$key]);\n        } elseif (strlen($value)\
    \ === 2 && $value != 1) {\n            if ($value % 2 === 0) {\n             \
    \   unset($x[$key]);\n            }\n        } elseif (strlen($value) === 3 &&\
    \ $value != 1) {\n            if ($value % 2 === 0) {\n                unset($x[$key]);\n\
    \            } elseif ($value % 3 === 0) {\n                unset($x[$key]);\n\
    \            }\n        } elseif (strlen($value) === 4 && $value != 1) {\n   \
    \         if ($value % 2 === 0) {\n                unset($x[$key]);\n        \
    \    } elseif ($value % 3 === 0) {\n                unset($x[$key]);\n       \
    \     } elseif ($value % 4 === 0) {\n                unset($x[$key]);\n      \
    \      }\n        } elseif (strlen($value) === 5 && $value != 1) {\n         \
    \   if ($value % 2 === 0) {\n                unset($x[$key]);\n            } elseif\
    \ ($value % 3 === 0) {\n                unset($x[$key]);\n            } elseif\
    \ ($value % 4 === 0) {\n                unset($x[$key]);\n            } elseif\
    \ ($value % 5 === 0) {\n                unset($x[$key]);\n            }\n    \
    \    } elseif (strlen($value) === 6 && $value != 1) {\n            if ($value\
    \ % 2 === 0) {\n                unset($x[$key]);\n            } elseif ($value\
    \ % 3 === 0) {\n                unset($x[$key]);\n            } elseif ($value\
    \ % 4 === 0) {\n                unset($x[$key]);\n            } elseif ($value\
    \ % 5 === 0) {\n                unset($x[$key]);\n            } elseif ($value\
    \ % 6 === 0) {\n                unset($x[$key]);\n            }\n        } elseif\
    \ (strlen($value) === 7", "\tforeach ($x as $value) {\n\t\t$y = str_split($value);\n\
    \t\tforeach ($y as $value) {\n\t\t\tif ($value%2 == 0) {\n\t\t\t\t$z[] = $value;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn $z;\n}\necho \"array(15, 33, 1422, 1)) => \";\n\
    print_r(unique_digits(array(15, 33, 1422, 1)));\necho \"<br>\";\necho \"array(152,\
    \ 323, 1422, 10)) => \";\nprint_r(unique_digits(array(152, 323, 1422, 10)));\n\
    echo \"<br>\";\necho \"array(15, 33, 102, 1)) => \";\nprint_r(unique_digits(array(15,\
    \ 33, 102, 1)));\necho \"<br>\";\necho \"array(152, 323, 222, 10)) => \";\nprint_r(unique_digits(array(152,\
    \ 323, 222, 10)));", "  // SOLUTION GOES HERE\n  return array();\n}\n", "  $y\
    \ = array();\n  foreach ($x as $i) {\n    $z = unique_digits_helper($i);\n   \
    \ if ($z != \"\") {\n      array_push($y, $z);\n    }\n  }\n  sort($y);\n  return\
    \ $y;\n}", "  $y = array();\n  $count = 0;\n  foreach ($x as $key => $value) {\n\
    \    if ($value == 1 || $value == 3 || $value == 5 || $value == 7 || $value ==\
    \ 9) {\n      $y[$count] = $value;\n      $count = $count + 1;\n    }\n  }\n \
    \ return $y;\n}\n", '}', "    // Write your code here\n}\nprint_r(unique_digits(array(152,\
    \ 323, 1422, 10)));", "    $out = array();\n    foreach ($x as $v) {\n       \
    \ if (stripos(strval($v), '2') === false && stripos(strval($v), '4') === false\
    \ && stripos(strval($v), '6') === false && stripos(strval($v), '8') === false)\
    \ {\n            $out[] = $v;\n        }\n    }\n    sort($out);\n    return $out;\n\
    }\n", "  $result = array();\n  foreach ($x as $num) {\n    if (!has_even_digit($num))\
    \ {\n      $result[] = $num;\n    }\n  }\n  sort($result);\n  return $result;\n\
    }\n", "\t$y = array();\n\tforeach ($x as $i) {\n\t\tif(!preg_match('/[2468]/',\
    \ $i)) {\n\t\t\t$y[] = $i;\n\t\t}\n\t}\n\treturn $y;\n}\n", "\t$final = array();\n\
    \tforeach ($x as $i => $v) {\n\t\t$y = str_split($v);\n\t\t$flag = 0;\n\t\tforeach\
    \ ($y as $i => $v) {\n\t\t\tif ($v%2==0) {\n\t\t\t\t$flag = 1;\n\t\t\t\tbreak;\n\
    \t\t\t}\n\t\t}\n\t\tif ($flag==0)\n\t\t\tarray_push($final, $v);\n\t}\n\treturn\
    \ $final;\n}\n", "    $result = [];\n    foreach ($x as $i) {\n        $length\
    \ = strlen($i);\n        $remainder = $i;\n        $even = false;\n        for\
    \ ($j = 0; $j < $length; $j++) {\n            $digit = $remainder % 10;\n    \
    \        if ($digit % 2 == 0) {\n                $even = true;\n             \
    \   break;\n            }\n            $remainder = ($remainder - $digit) / 10;\n\
    \        }\n        if (!$even) {\n            $result[] = $i;\n        }\n  \
    \  }\n    sort($result);\n    return $result;\n}\n", "\t$len = count($x);\n\t\
    for ($i = 0; $i < $len; $i++) {\n\t\t$str = strval($x[$i]);\n\t\tfor ($j = 0;\
    \ $j < strlen($str); $j++) {\n\t\t\tif ($str[$j] % 2 == 0) {\n\t\t\t\tunset($x[$i]);\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn $x;\n}\n\n$x = array(152, 323, 1422,\
    \ 10);\n$y = unique_digits($x);\n\nprint_r($y);\n", "\t// your code here\n   \
    \ for($i=0;$i<count($x);$i++){\n        if(strpos($x[$i],\"2\")==true || strpos($x[$i],\"\
    4\")==true || strpos($x[$i],\"6\")==true || strpos($x[$i],\"8\")==true){\n   \
    \         $x[$i]=\"\";\n        }\n    }\n    return array_values(array_filter($x));\n\
    }\n\n$r = unique_digits(array(15, 33, 1422, 1));\nprint_r($r);", "\t$temp = [];\n\
    \t$counter = 0;\n\tfor ($i=0; $i < count($x); $i++) { \n\t\t$x[$i] = str_split($x[$i]);\n\
    \t\tfor ($j=0; $j < count($x[$i]); $j++) { \n\t\t\tif ($x[$i][$j] % 2 !== 0) {\n\
    \t\t\t\t$counter++;\n\t\t\t}\n\t\t}\n\t\tif ($counter === count($x[$i])) {\n\t\
    \t\t$temp[] = implode($x[$i]);\n\t\t}\n\t\t$counter = 0;\n\t}\n\tsort($temp);\n\
    \treturn $temp;\n}\nprint_r(unique_digits(array(15, 33, 1422, 1)));\necho '<br>';\n\
    print_r(unique_digits(array(152, 323, 1422, 10)));", "  return array_filter($x,\
    \ function($i) {\n    for (; $i; $i /= 10)\n      if (!($i % 10 % 2))\n      \
    \  return false;\n    return true;\n  });\n}", "\t$ret = array();\n\tforeach ($x\
    \ as $num) {\n\t\tif (strpos(strval($num), '2') === false &&\n\t\t\tstrpos(strval($num),\
    \ '4') === false &&\n\t\t\tstrpos(strval($num), '6') === false &&\n\t\t\tstrpos(strval($num),\
    \ '8') === false &&\n\t\t\tstrpos(strval($num), '0') === false) {\n\t\t\t$ret[]\
    \ = $num;\n\t\t}\n\t}\n\treturn $ret;\n}\n", "\t// hint: use a helper function\
    \ to determine if a given number has an even digit\n\t$result = array();\n\tforeach\
    \ ($x as $k => $v) {\n\t\tif (!has_even_digit($v))\n\t\t\t$result[] = $v;\n\t\
    }\n\tsort($result);\n\treturn $result;\n}", "\t$array_unique_digits = array();\n\
    \tforeach ($x as $value) {\n\t\tif (strpos($value, '2') === false && strpos($value,\
    \ '4') === false && strpos($value, '6') === false && strpos($value, '8') === false)\
    \ {\n\t\t\tarray_push($array_unique_digits, $value);\n\t\t}\n\t}\n\tsort($array_unique_digits);\n\
    \treturn $array_unique_digits;\n}\n\n$x = array(15, 33, 1422, 1);\necho \"Given\
    \ an array of positive integers x. return a sorted array of all \nelements that\
    \ hasn't any even digit. \\nNote: Returned array should be sorted in increasing\
    \ order.\\nFor example:\\n>>> unique_digits(array(15, 33, 1422, 1))\\n\";\n$r\
    \ = unique_digits($x);\nprint_r($r);\necho \"\\n\";\n", "    $result = array();\n\
    \    foreach ($x as $i) {\n        $result[$i] = 1;\n    }\n    foreach ($x as\
    \ $i) {\n        $num = $i;\n        $found = false;\n        while ($num > 0)\
    \ {\n            $digit = $num % 10;\n            if ($digit % 2 == 0) {\n   \
    \             unset($result[$i]);\n                $found = true;\n          \
    \      break;\n            }\n            $num = (int)($num / 10);\n        }\n\
    \    }\n    ksort($result);\n    return array_keys($result);\n}\n", "    return\
    \ array_values(array_filter($x, function($v) {\n        return !strstr($v, '2')\
    \ && !strstr($v, '4') && !strstr($v, '6') && !strstr($v, '8');\n    }));\n}\n\n\
    print_r(unique_digits(array(15, 33, 1422, 1)));\nprint_r(unique_digits(array(152,\
    \ 323, 1422, 10)));", "    return array_filter($x, function($item) {\n       \
    \ if ($item == 0) return false;\n        while ($item) {\n            if ($item\
    \ % 2 == 0) return false;\n            $item /= 10;\n        }\n        return\
    \ true;\n    });\n}\n\necho \"Assignment 3\\n\";\n$a = array(15, 33, 1422, 1);\n\
    $b = array(152, 323, 1422, 10);\nprint_r(unique_digits($a));\nprint_r(unique_digits($b));\n\
    echo \"\\n\";\n", "  // your code goes here...\n}", "\tforeach ($x as $k => $v)\
    \ {\n\t\t$x[$k] = (string)$v;\n\t}\n\t$result = array();\n\tforeach ($x as $k\
    \ => $v) {\n\t\t$char = str_split($v);\n\t\tforeach ($char as $c) {\n\t\t\tif\
    \ ($c%2 == 0) {\n\t\t\t\tunset($x[$k]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\
    \tforeach ($x as $k => $v) {\n\t\t$result[] = (int)$v;\n\t}\n\tsort($result);\n\
    \treturn $result;\n}\n\nprint_r(unique_digits(array(15, 33, 1422, 1)));\nprint_r(unique_digits(array(152,\
    \ 323, 1422, 10)));\n", "  // TODO: Implement me\n}\n", "  $list = array();\n\
    \  foreach ($x as $val) {\n    if (strlen($val) == 1) {\n      $list[] = $val;\n\
    \    } else {\n      $has_even = false;\n      for ($i = 0; $i < strlen($val);\
    \ $i++) {\n        if ($val[$i] % 2 == 0) {\n          $has_even = true;\n   \
    \       break;\n        }\n      }\n      if (!$has_even) {\n        $list[] =\
    \ $val;\n      }\n    }\n  }\n  sort($list);\n  return $list;\n}\n", "    $y =\
    \ array();\n    foreach ($x as $i) {\n        $t = $i % 10;\n        $i = $i /\
    \ 10;\n        while ($i > 0) {\n            if ($i % 10 % 2 == 0) {\n       \
    \         break;\n            }\n            $i = $i / 10;\n        }\n      \
    \  if ($i == 0) {\n            array_push($y, $t);\n        }\n    }\n    sort($y);\n\
    \    return $y;\n}\nprint_r(unique_digits(array(15, 33, 1422, 1)));\necho \"\\\
    n\";\nprint_r(unique_digits(array(152, 323, 1422, 10)));", "  $res = array();\n\
    \  foreach ($x as $i) {\n    $test = true;\n    while ($i > 0) {\n      if (($i\
    \ % 10) % 2 == 0) {\n        $test = false;\n        break;\n      }\n      $i\
    \ = floor($i / 10);\n    }\n    if ($test) {\n      $res[] = $i;\n    }\n  }\n\
    \  sort($res);\n  return $res;\n}\n", "    $result = array();\n    foreach ($x\
    \ as $number) {\n        $is_odd = true;\n        while ($number > 0) {\n    \
    \        $digit = $number % 10;\n            if ($digit % 2 == 0) {\n        \
    \        $is_odd = false;\n                break;\n            }\n           \
    \ $number = $number / 10;\n        }\n        if ($is_odd) {\n            $result[]\
    \ = $number;\n        }\n    }\n    sort($result);\n    return $result;\n}\n",
  "    $newArray = [];\n    foreach ($x as $value) {\n        if (str_split($value)\
    \ % 2 != 0) {\n            array_push($newArray, $value);\n        }\n    }\n\
    \    return $newArray;\n}\n\nprint_r(unique_digits(array(152, 323, 1422, 10)));",
  "  $result = array();\n  for ($i = 0; $i < count($x); $i++) {\n    $num = $x[$i];\n\
    \    $has_even = false;\n    while ($num != 0) {\n      $remainder = $num % 10;\n\
    \      if ($remainder % 2 == 0) {\n        $has_even = true;\n        break;\n\
    \      }\n      $num = (int)($num / 10);\n    }\n    if (!$has_even) {\n     \
    \ array_push($result, $x[$i]);\n    }\n  }\n  sort($result);\n  return $result;\n\
    }\n\n$x = array(15, 33, 1422, 1);\necho implode(', ', unique_digits($x)) . PHP_EOL;\n\
    \n$x = array(152, 323, 1422, 10);\necho implode(', ', unique_digits($x)) . PHP_EOL;",
  "    $return_array = array();\n    foreach ($x as $n) {\n        $num_str = strval($n);\n\
    \        $is_even = false;\n        for ($i = 0; $i < strlen($num_str); $i++)\
    \ {\n            if ($num_str[$i] % 2 == 0) {\n                $is_even = true;\n\
    \                break;\n            }\n        }\n        if (!$is_even) {\n\
    \            array_push($return_array, $n);\n        }\n    }\n    sort($return_array);\n\
    \    return $return_array;\n}\n", "\t// Write your code here...\n\t$x = array_filter($x,\
    \ function($element) {\n\t\t$e = str_split($element);\n\t\treturn !in_array('2',\
    \ $e) && !in_array('4', $e) && !in_array('6', $e) && !in_array('8', $e);\n\t});\n\
    \tsort($x);\n\treturn $x;\n}\necho json_encode(unique_digits(array(152, 323, 1422,\
    \ 10)));", "\t$result = array();\n\tfor ($i = 0; $i < count($x); $i++) {\n\t\t\
    $num = $x[$i];\n\t\t$is_odd = true;\n\t\twhile ($num != 0) {\n\t\t\t$digit = $num\
    \ % 10;\n\t\t\tif ($digit % 2 == 0) {\n\t\t\t\t$is_odd = false;\n\t\t\t\tbreak;\n\
    \t\t\t}\n\t\t\t$num = (int)($num / 10);\n\t\t}\n\t\tif ($is_odd) {\n\t\t\tarray_push($result,\
    \ $x[$i]);\n\t\t}\n\t}\n\tsort($result);\n\treturn $result;\n}\n", "\t$answer\
    \ = array();\n\tforeach ($x as $item) {\n\t\tif (preg_match('/[02468]/', $item)\
    \ === 0) {\n\t\t\t$answer[] = $item;\n\t\t}\n\t}\n\tsort($answer);\n\treturn $answer;\n\
    }\necho implode(', ', unique_digits(array(15, 33, 1422, 1)));", "    $result =\
    \ [];\n    $solution = '';\n    foreach ($x as $num) {\n        $numToStr = (string)$num;\n\
    \        $numToStrLen = strlen($numToStr);\n        for ($i = 0; $i < $numToStrLen;\
    \ $i++) {\n            if ($numToStr[$i] % 2 == 0) {\n                break;\n\
    \            } else {\n                $solution = $num;\n            }\n    \
    \    }\n        if ($solution) {\n            array_push($result, $solution);\n\
    \        }\n    }\n    return $result;\n}", "  $result = array();\n  foreach ($x\
    \ as $value) {\n    $unique = true;\n    $str = strval($value);\n    for ($i =\
    \ 0; $i < strlen($str); $i++) {\n      if ($str[$i] % 2 == 0) {\n        $unique\
    \ = false;\n        break;\n      }\n    }\n    if ($unique) {\n      array_push($result,\
    \ $value);\n    }\n  }\n  return $result;\n}", "  // Insert code here\n}", " \
    \ $result = array();\n  foreach ($x as $value) {\n    $digits = str_split($value);\n\
    \    $even = false;\n    foreach ($digits as $digit) {\n      if ($digit % 2 ==\
    \ 0) {\n        $even = true;\n        break;\n      }\n    }\n    if (!$even)\
    \ {\n      $result[] = $value;\n    }\n  }\n  sort($result);\n  return $result;\n\
    }\n\n$list = array(15, 33, 1422, 1);\nprint_r(unique_digits($list));", "\t$l =\
    \ count($x);\n\t$u = [];\n\tfor ($i = 0; $i < $l; $i++) {\n\t\t$curr = $x[$i];\n\
    \t\t$has_even = 0;\n\t\twhile ($curr) {\n\t\t\t$r = $curr % 10;\n\t\t\tif ($r\
    \ % 2 == 0) {\n\t\t\t\t$has_even = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t$curr =\
    \ $curr / 10;\n\t\t}\n\t\tif (!$has_even) {\n\t\t\t$u[] = $x[$i];\n\t\t}\n\t}\n\
    \treturn $u;\n}\n$arr = array(15, 33, 1422, 1);\nvar_dump(unique_digits($arr));\n\
    $arr = array(152, 323, 1422, 10);\nvar_dump(unique_digits($arr));", "    $arr\
    \ = array();\n    foreach ($x as $v) {\n        $str = (string)$v;\n        $found\
    \ = false;\n        foreach (str_split($str) as $c) {\n            if (is_even($c))\
    \ {\n                $found = true;\n                break;\n            }\n \
    \       }\n        if (!$found) {\n            $arr[] = $v;\n        }\n    }\n\
    \    sort($arr);\n    return $arr;\n}\n", "    $result = [];\n    foreach ($x\
    \ as $number) {\n        if (strlen($number) === 1) {\n            array_push($result,\
    \ $number);\n        } else {\n            $stringNumber = strval($number);\n\
    \            $containsEvenDigit = false;\n            for ($i = 0; $i < strlen($stringNumber);\
    \ $i++) {\n                if ($stringNumber[$i] === '0' || $stringNumber[$i]\
    \ === '2' || $stringNumber[$i] === '4' || $stringNumber[$i] === '6' || $stringNumber[$i]\
    \ === '8') {\n                    $containsEvenDigit = true;\n               \
    \     break;\n                }\n            }\n            if (!$containsEvenDigit)\
    \ {\n                array_push($result, $number);\n            }\n        }\n\
    \    }\n    sort($result);\n    return $result;\n}\nprint_r(unique_digits(array(15,\
    \ 33, 1422, 1)));\nprint_r(unique_digits(array(152, 323, 1422, 10)));", "    $even_digits\
    \ = array(0, 2, 4, 6, 8);\n    $array_to_return = array();\n    foreach ($x as\
    \ $element) {\n        $digit_array = array();\n        if (!is_int($element))\
    \ {\n            continue;\n        }\n        if ($element == 0) {\n        \
    \    $array_to_return[] = $element;\n            continue;\n        }\n      \
    \  $element_str = (string)$element;\n        $digit_array = str_split($element_str);\n\
    \        $count = 0;\n        foreach ($digit_array as $digit) {\n           \
    \ if (in_array($digit, $even_digits)) {\n                break;\n            }\n\
    \            $count++;\n        }\n        if ($count == count($digit_array))\
    \ {\n            $array_to_return[] = $element;\n        }\n    }\n    sort($array_to_return);\n\
    \    return $array_to_return;\n}\n\n$input = array(15, 33, 1422, 1);\nprint_r(unique_digits($input));",
  "\t// $x = array(15, 33, 1422, 1);\n\t$result = array();\n\tforeach ($x as $key\
    \ => $val) {\n\t\t$curVal = $val;\n\t\t$lastDigit = substr($curVal, -1);\n\t\t\
    if ($lastDigit % 2 == 0) {\n\t\t\tcontinue;\n\t\t}\n\t\telse {\n\t\t\t$result[]\
    \ = $val;\n\t\t}\n\t}\n\tsort($result);\n\treturn $result;\n}", "\n}\n\nprint_r(unique_digits(array(15,\
    \ 33, 1422, 1)));\nprint_r(unique_digits(array(152, 323, 1422, 10)));\n", "  \
    \  $result = array();\n    foreach ($x as $key => $value) {\n        if (strpos($value,\
    \ '2') === false &&\n            strpos($value, '4') === false &&\n          \
    \  strpos($value, '6') === false &&\n            strpos($value, '8') === false\
    \ &&\n            strpos($value, '0') === false) {\n            $result[] = $value;\n\
    \        }\n    }\n    asort($result);\n    return $result;\n}\necho 'unique_digits(array(15,\
    \ 33, 1422, 1)) : '.print_r(unique_digits(array(15, 33, 1422, 1)), true);\necho\
    \ 'unique_digits(array(152, 323, 1422, 10)) : '.print_r(unique_digits(array(152,\
    \ 323, 1422, 10)), true);", "  $r = array();\n  foreach ($x as $a) {\n    if (!preg_match('/[02468]/',\
    \ $a)) {\n      $r[] = $a;\n    }\n  }\n  sort($r);\n  return $r;\n}", "  $return\
    \ = array();\n  foreach ($x as $value) {\n    $even_digit = false;\n    $str =\
    \ (string)$value;\n    for ($i = 0; $i < strlen($str); $i++) {\n      if ((int)$str[$i]\
    \ % 2 == 0) {\n        $even_digit = true;\n        break;\n      }\n    }\n \
    \   if (!$even_digit) {\n      $return[] = $value;\n    }\n  }\n  sort($return);\n\
    \  return $return;\n}\n", "\t$evens = [0, 2, 4, 6, 8];\n\t$odds = [1, 3, 5, 7,\
    \ 9];\n\t$digits = [];\n\tforeach ($x as $num) {\n\t\t$string = (string)$num;\n\
    \t\t$all_odd = TRUE;\n\t\tforeach (str_split($string) as $digit) {\n\t\t\tif (in_array($digit,\
    \ $evens)) {\n\t\t\t\t$all_odd = FALSE;\n\t\t\t}\n\t\t}\n\t\tif ($all_odd) {\n\
    \t\t\t$digits[] = $num;\n\t\t}\n\t}\n\treturn sort($digits);\n}\n", "    $result\
    \ = array();\n    foreach ($x as $value) {\n        if (!strpbrk($value, '02468'))\
    \ {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n \
    \   return $result;\n}", "    $result = array();\n    $k = 0;\n    for ($i = 0;\
    \ $i < count($x); $i++) {\n        $temp = $x[$i];\n        $j = 0;\n        while\
    \ ($temp > 0) {\n            $digit = $temp % 10;\n            if ($digit % 2\
    \ == 0) {\n                $j = 1;\n                break;\n            }\n  \
    \          $temp = floor($temp / 10);\n        }\n        if ($j == 0) {\n   \
    \         $result[$k] = $x[$i];\n            $k = $k + 1;\n        }\n    }\n\
    \    sort($result);\n    return $result;\n}\n", "    $digits = [];\n    foreach\
    \ ($x as $value) {\n        $digits[] = $value % 10;\n        $digits[] = floor($value\
    \ / 10) % 10;\n        $digits[] = floor($value / 100) % 10;\n        $digits[]\
    \ = floor($value / 1000) % 10;\n    }\n    $digits = array_unique($digits);\n\
    \    $digits = array_filter($digits, function($digit) {\n        return !is_even($digit);\n\
    \    });\n    return $digits;\n}\n", "    $unique_digits = [];\n    foreach ($x\
    \ as $i) {\n        if (has_unique_digits($i)) {\n            $unique_digits[]\
    \ = $i;\n        }\n    }\n    sort($unique_digits);\n    return $unique_digits;\n\
    }\n", "    $result = array();\n    foreach ($x as $num) {\n        if (!has_even_digit($num))\
    \ {\n            $result[] = $num;\n        }\n    }\n    sort($result);\n   \
    \ return $result;\n}\n", "\t$answer = array();\n\t$even_numbers = array(0, 2,\
    \ 4, 6, 8);\n\tforeach ($x as $number) {\n\t\t$isEven = FALSE;\n\t\t$temp_number\
    \ = $number;\n\t\twhile ($temp_number > 0) {\n\t\t\t$digit = $temp_number % 10;\n\
    \t\t\tif (in_array($digit, $even_numbers)) {\n\t\t\t\t$isEven = TRUE;\n\t\t\t\t\
    break;\n\t\t\t}\n\t\t\t$temp_number = (int)($temp_number / 10);\n\t\t}\n\t\tif\
    \ (!$isEven) {\n\t\t\tarray_push($answer, $number);\n\t\t}\n\t}\n\tsort($answer);\n\
    \treturn $answer;\n}\n", "\t$res = array();\n\tforeach ($x as $value) {\n\t\t\
    if(!has_even_digit($value))\n\t\t\t$res[] = $value;\n\t}\n\tsort($res);\n\treturn\
    \ $res;\n}\n", "    // Fill this in...\n}\n", "    foreach ($x as $n) {\n    \
    \    if ($n < 10) {\n            $y[] = $n;\n        } else {\n            $result\
    \ = array_unique(str_split($n));\n            if (!in_array(0, $result) && !in_array(2,\
    \ $result) && !in_array(4, $result) && !in_array(6, $result) && !in_array(8, $result))\
    \ {\n                $y[] = $n;\n            }\n        }\n    }\n    sort($y);\n\
    \    return $y;\n}\n\nprint_r(unique_digits(array(15, 33, 1422, 1)));", "\t//\
    \ your code goes here!\n}", "\t// Your code here...\n}\n\nprint_r(unique_digits(array(15,\
    \ 33, 1422, 1)));\necho \"\\n\";\nprint_r(unique_digits(array(152, 323, 1422,\
    \ 10)));\necho \"\\n\";\n", "\t$new = [];\n\t$len = count($x);\n\tfor ($i = 0;\
    \ $i < $len; $i++) {\n\t\t$check = str_split($x[$i]);\n\t\tif (in_array(0, $check)\
    \ || in_array(2, $check) || in_array(4, $check) || in_array(6, $check) || in_array(8,\
    \ $check)) {\n\t\t\tcontinue;\n\t\t} else {\n\t\t\tarray_push($new, $x[$i]);\n\
    \t\t}\n\t}\n\tsort($new);\n\treturn $new;\n}", "  $y = [];\n  foreach ($x as $num)\
    \ {\n    if (strpos(strval($num), '2') === false && strpos(strval($num), '4')\
    \ === false && strpos(strval($num), '6') === false && strpos(strval($num), '8')\
    \ === false) {\n      $y[] = $num;\n    }\n  }\n  sort($y);\n  return $y;\n}",
  "\t$uniqdigits = [];\n\tforeach ($x as $num) {\n\t\tif (strpos($num, '2') === false\
    \ && strpos($num, '4') === false && strpos($num, '6') === false && strpos($num,\
    \ '8') === false) {\n\t\t\t$uniqdigits[] = $num;\n\t\t}\n\t}\n\tsort($uniqdigits);\n\
    \treturn $uniqdigits;\n}\n", "    $result = [];\n    foreach ($x as $item) {\n\
    \        $str = (string)$item;\n        $isFound = false;\n        for ($i = 0;\
    \ $i < strlen($str); $i++) {\n            if ((int)$str[$i] % 2 === 0) {\n   \
    \             $isFound = true;\n                break;\n            }\n      \
    \  }\n        if (!$isFound) {\n            $result[] = $item;\n        }\n  \
    \  }\n    sort($result);\n    return $result;\n}\n", "    $has_even_digit = function($n)\
    \ {\n        $digits = str_split($n);\n        foreach ($digits as $digit) {\n\
    \            if ($digit % 2 == 0) {\n                return True;\n          \
    \  }\n        }\n        return False;\n    };\n    $filtered = array_filter($x,\
    \ $has_even_digit);\n    $filtered = array_values($filtered);\n    return $filtered;\n\
    }\n", "  // write your solution here...\n}", "  $res = array();\n  foreach ($x\
    \ as $val) {\n    $str = (string)$val;\n    if (strpos($str, '2') === false &&\n\
    \        strpos($str, '4') === false &&\n        strpos($str, '6') === false &&\n\
    \        strpos($str, '8') === false) {\n      $res[] = $val;\n    }\n  }\n  sort($res);\n\
    \  return $res;\n}\n\necho \"unique_digits(array(15, 33, 1422, 1))\\n\";\nvar_dump(unique_digits(array(15,\
    \ 33, 1422, 1)));\necho \"unique_digits(array(152, 323, 1422, 10))\\n\";\nvar_dump(unique_digits(array(152,\
    \ 323, 1422, 10)));", "    return array_filter($x, function($n) {\n        return\
    \ $n == (int) str_replace(['2', '4', '6', '8', '0'], '', $n);\n    });\n}\n",
  "    // Place code here\n}\n\n$a = array(152, 323, 1422, 10);\nvar_dump(unique_digits($a));",
  "  // Write your code here\n}", "  $results = [];\n  foreach ($x as $num) {\n  \
    \  $string = strval($num);\n    if (strpos($string, '2') === false &&\n      \
    \  strpos($string, '4') === false &&\n        strpos($string, '6') === false &&\n\
    \        strpos($string, '8') === false) {\n      $results[] = $num;\n    }\n\
    \  }\n  sort($results);\n  return $results;\n}\necho implode(\", \", unique_digits([15,\
    \ 33, 1422, 1])) . \"\\n\";\necho implode(\", \", unique_digits([152, 323, 1422,\
    \ 10])) . \"\\n\";", "    $ret = array();\n    foreach ($x as $num) {\n      \
    \  $chars = str_split($num);\n        $not_unique = False;\n        foreach ($chars\
    \ as $c) {\n            if (($c % 2) == 0) {\n                $not_unique = True;\n\
    \                break;\n            }\n        }\n        if (!$not_unique) {\n\
    \            $ret[] = $num;\n        }\n    }\n    sort($ret);\n    return $ret;\n\
    }\n", "  $res = array();\n  foreach ($x as $key => $value) {\n    if (!preg_match('/2|4|6|8/',\
    \ $value)) {\n      $res[] = $value;\n    }\n  }\n  return $res;\n}", "\tforeach\
    \ ($x as $key => $value) {\n\t\t$string = (string)$value;\n\t\tforeach (str_split($string)\
    \ as $char) {\n\t\t\tif ((int)$char % 2 == 0) {\n\t\t\t\tunset($x[$key]);\n\t\t\
    \t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tsort($x);\n\treturn $x;\n}", "  $out = array();\n\
    \  foreach ($x as $num) {\n    $found = FALSE;\n    $digits = (string)$num;\n\
    \    for ($i = 0; $i < strlen($digits); $i++) {\n      if (intval($digits[$i])\
    \ % 2 == 0) {\n        $found = TRUE;\n        break;\n      }\n    }\n    if\
    \ (!$found) $out[] = $num;\n  }\n  sort($out);\n  return $out;\n}\n\n$input =\
    \ array(15, 33, 1422, 1);\n$output = unique_digits($input);\nforeach ($output\
    \ as $item) {\n  echo \"$item\\n\";\n}\n", "    $even = array(0, 2, 4, 6, 8);\n\
    \    $count = count($x);\n    $no_even = array();\n    for ($i = 0; $i < $count;\
    \ $i++) {\n        $num = $x[$i];\n        while ($num != 0) {\n            $digit\
    \ = $num % 10;\n            if (in_array($digit, $even)) {\n                continue\
    \ 2;\n            }\n            $num = (int)($num / 10);\n        }\n       \
    \ $no_even[] = $x[$i];\n    }\n    sort($no_even);\n    return $no_even;\n}\n",
  "    $ev = array();\n    $ev1 = array();\n    for ($i = 0; $i < count($x); $i++)\
    \ {\n        if ($x[$i] > 9) {\n            $ev[$i] = $x[$i];\n        }\n   \
    \ }\n    for ($i = 0; $i < count($ev); $i++) {\n        $ev[$i] = str_split($ev[$i]);\n\
    \    }\n    for ($i = 0; $i < count($ev); $i++) {\n        for ($j = 0; $j < count($ev[$i]);\
    \ $j++) {\n            if ($ev[$i][$j] % 2 != 0) {\n                if (!in_array($ev[$i][$j],\
    \ $ev1)) {\n                    $ev1[$i] = $ev[$i][$j];\n                }\n \
    \           }\n        }\n    }\n    return $ev1;\n}\n", "    if (!is_array($x))\
    \ {\n        return false;\n    }\n    //$even = 0;\n    $odd = array();\n   \
    \ $even = array();\n    foreach ($x as $key => $value) {\n        if ($value %\
    \ 2 == 0) {\n            $even[] = $value;\n        } else {\n            $odd[]\
    \ = $value;\n        }\n    }\n    if (count($even) == 0) {\n        sort($odd);\n\
    \        return $odd;\n    } else {\n        return array();\n    }\n}\n", " \
    \ // YOUR CODE GOES HERE\n  $sorted = [];\n  for ($i = 0; $i < count($x); $i++)\
    \ {\n    $temp = $x[$i];\n    $hasEven = False;\n    while ($temp > 0) {\n   \
    \   $digit = $temp % 10;\n      if ($digit % 2 == 0) {\n        $hasEven = True;\n\
    \        break;\n      }\n      $temp = floor($temp / 10);\n    }\n    if (!$hasEven)\
    \ {\n      array_push($sorted, $x[$i]);\n    }\n  }\n  sort($sorted);\n  return\
    \ $sorted;\n}\n\nprint_r(unique_digits(array(15, 33, 1422, 1)));\necho \"\\n\"\
    ;\nprint_r(unique_digits(array(152, 323, 1422, 10)));", "    $result = [];\n \
    \   foreach ($x as $value) {\n        if (strlen(strval($value)) <= 3) {\n   \
    \         $result[] = $value;\n        }\n    }\n    return $result;\n}", "  \
    \  $y = [];\n    foreach ($x as $value) {\n        $digits = str_split($value);\n\
    \        $is_even = False;\n        foreach ($digits as $digit) {\n          \
    \  if ($digit % 2 == 0) {\n                $is_even = True;\n                break;\n\
    \            }\n        }\n        if (!$is_even) {\n            $y[] = $value;\n\
    \        }\n    }\n    return $y;\n}\n$x = [15, 33, 1422, 1];\n$y = unique_digits($x);\n\
    sort($y);\nvar_dump($y);\n$x = [152, 323, 1422, 10];\n$y = unique_digits($x);\n\
    sort($y);\nvar_dump($y);\n", "\t$result = array();\n\tforeach ($x as $number)\
    \ {\n\t\tif ($number < 10) {\n\t\t\tarray_push($result, $number);\n\t\t} else\
    \ {\n\t\t\t$number = (string)$number;\n\t\t\t$length = strlen($number);\n\t\t\t\
    $valid = true;\n\t\t\tfor ($i = 0; $i < $length; $i++) {\n\t\t\t\tif ($number[$i]\
    \ % 2 == 0) {\n\t\t\t\t\t$valid = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\
    }\n\t\t\tif ($valid) {\n\t\t\t\tarray_push($result, $number);\n\t\t\t}\n\t\t}\n\
    \t}\n\tsort($result);\n\treturn $result;\n}", "\t$result = array();\n\tforeach\
    \ ($x as $value) {\n\t\t$str = strval($value);\n\t\t$has_even = false;\n\t\tfor\
    \ ($i = 0; $i < strlen($str); $i++) {\n\t\t\tif ($str[$i] % 2 == 0) {\n\t\t\t\t\
    $has_even = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!$has_even) {\n\t\t\
    \tarray_push($result, $value);\n\t\t}\n\t}\n\tsort($result);\n\treturn $result;\n\
    }\n\n$x = array(15, 33, 1422, 1);\n$y = array(152, 323, 1422, 10);\necho 'array(1,\
    \ 15, 33) = ';\nprint_r(unique_digits($x));\necho 'array() = ';\nprint_r(unique_digits($y));",
  "    $unique_digits = array();\n    $even_digits = array();\n    foreach ($x as\
    \ $value) {\n        $value_array = str_split($value);\n        if (array_intersect($value_array,\
    \ $even_digits)) {\n            continue;\n        } else {\n            $unique_digits[]\
    \ = $value;\n        }\n    }\n    return $unique_digits;\n}\n", "\tfor ($i =\
    \ 0; $i < count($x); $i++) {\n\t\tif (even_digit($x[$i])) {\n\t\t\tunset($x[$i]);\n\
    \t\t}\n\t}\n\tsort($x);\n\treturn $x;\n}", "    $evens = array(0, 2, 4, 6, 8);\n\
    \    foreach ($x as $k => $v) {\n        $digits = str_split($v);\n        foreach\
    \ ($digits as $d) {\n            if (in_array($d, $evens)) {\n               \
    \ unset($x[$k]);\n                break;\n            }\n        }\n    }\n  \
    \  sort($x);\n    return $x;\n}\n", "    $new_arr = [];\n    foreach ($x as $number)\
    \ {\n        $number_to_string = (string)$number;\n        $has_even_digit = false;\n\
    \        for ($i = 0; $i < strlen($number_to_string); $i++) {\n            if\
    \ ($number_to_string[$i] % 2 == 0) {\n                $has_even_digit = true;\n\
    \                break;\n            }\n        }\n        if (!$has_even_digit)\
    \ {\n            $new_arr[] = $number;\n        }\n    }\n    sort($new_arr);\n\
    \    return $new_arr;\n}\n\n$x = [15, 33, 1422, 1];\necho \"<pre>\";\nprint_r(unique_digits($x));\n\
    echo \"</pre>\";", "\t$newArray = [];\n\tforeach ($x as $value) {\n\t\tif (strlen(strval($value))\
    \ == 1) {\n\t\t\tarray_push($newArray, $value);\n\t\t} else {\n\t\t\t$flag = true;\n\
    \t\t\tfor ($i = 0; $i < strlen(strval($value)); $i++) {\n\t\t\t\tif (strval($value)[$i]\
    \ % 2 == 0) {\n\t\t\t\t\t$flag = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\
    \t\t\tif ($flag) {\n\t\t\t\tarray_push($newArray, $value);\n\t\t\t}\n\t\t}\n\t\
    }\n\tsort($newArray);\n\treturn $newArray;\n}\necho \"<pre>\";\nprint_r(unique_digits(array(10,\
    \ 151, 23, 41, 55, 75, 123, 404, 58, 149)));\necho \"</pre>\";\n", "    $unique_arr\
    \ = [];\n    foreach ($x as $value) {\n        if(preg_match(\"/^[13579]+$/\"\
    , $value)) {\n            array_push($unique_arr, $value);\n        }\n    }\n\
    \    sort($unique_arr);\n    return $unique_arr;\n}\necho \"<pre>\";\nprint_r(unique_digits(array(15,\
    \ 33, 1422, 1)));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(unique_digits(array(152,\
    \ 323, 1422, 10)));\necho \"</pre>\";", "    if(empty($x)) return;\n    $result\
    \ = [];\n    foreach($x as $value) {\n        if(strpos($value, '2') == false\
    \ && strpos($value, '4') == false && strpos($value, '6') == false && strpos($value,\
    \ '8') == false) {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}", "    $array = array();\n    for ($i = 0; $i < count($x);\
    \ $i++) {\n        $string = strval($x[$i]);\n        $even = false;\n       \
    \ for ($j = 0; $j < strlen($string); $j++) {\n            if ($string[$j] == \"\
    0\" || $string[$j] == \"2\" || $string[$j] == \"4\" || $string[$j] == \"6\" ||\
    \ $string[$j] == \"8\") {\n                $even = true;\n            }\n    \
    \    }\n        if ($even == false) {\n            array_push($array, $x[$i]);\n\
    \        }\n    }\n    sort($array);\n    return $array;\n}\n\necho \"<pre>\"\
    ;\nprint_r(unique_digits(array(15, 33, 1422, 1)));\necho \"</pre>\";\necho \"\
    <pre>\";\nprint_r(unique_digits(array(152, 323, 1422, 10)));\necho \"</pre>\"\
    ;\n", "    $length = count($x);\n    for ($i = 0; $i < $length; $i++) {\n    \
    \    $j = 0;\n        $flag = 0;\n        while ($x[$i] != 0) {\n            $mod\
    \ = $x[$i] % 10;\n            if ($mod % 2 == 0) {\n                $flag = 1;\n\
    \                break;\n            }\n            $x[$i] = intval($x[$i] / 10);\n\
    \        }\n        if ($flag == 1) {\n            unset($x[$i]);\n        }\n\
    \    }\n    sort($x);\n    return $x;\n}\n\n$arr = array(152, 323, 1422, 10);\n\
    $sorted_arr = unique_digits($arr);\nprint_r($sorted_arr);", "\t$nums = array();\n\
    \t$nums = $x;\n\t$new = array();\n\tforeach ($nums as $num) {\n\t\t$digits = array();\n\
    \t\t$digits = str_split($num);\n\t\t$is_even = false;\n\t\tfor ($i = 0; $i < count($digits);\
    \ $i++) {\n\t\t\tif ($digits[$i] % 2 == 0) {\n\t\t\t\t$is_even = true;\n\t\t\t\
    }\n\t\t}\n\t\tif ($is_even == false) {\n\t\t\tarray_push($new, $num);\n\t\t}\n\
    \t}\n\tsort($new);\n\treturn $new;\n}\n", "    $y = array();\n    for ($i = 0;\
    \ $i < count($x); $i++) {\n        if (!is_even($x[$i])) {\n            array_push($y,\
    \ $x[$i]);\n        }\n    }\n    return $y;\n}", "}\n", "    $odds = array();\n\
    \    $evens = array();\n    foreach ($x as $n) {\n        if ($n % 2 == 0) {\n\
    \            $evens[] = $n;\n        } else {\n            $odds[] = $n;\n   \
    \     }\n    }\n    return array_diff($odds, $evens);\n}\nprint_r(unique_digits(array(15,\
    \ 33, 1422, 1)));\nprint_r(unique_digits(array(152, 323, 1422, 10)));\n", "  $is_odd\
    \ = function($element) {\n    $sum = 0;\n    for ($i = 0; $i < strlen($element);\
    \ $i++) {\n      $sum += $element[$i];\n    }\n    return ($sum % 2 == 0);\n \
    \ };\n  $filtered = array_filter($x, $is_odd);\n  $diff = array_diff($x, $filtered);\n\
    \  sort($diff);\n  return $diff;\n}\necho '<pre>';\nvar_dump(unique_digits(array(15,\
    \ 33, 1422, 1)));\nvar_dump(unique_digits(array(152, 323, 1422, 10)));\necho '</pre>';",
  "  foreach ($x as $i) {\n    $str = (string)$i;\n    if (strpos($str, '2') === false\
    \ &&\n        strpos($str, '4') === false &&\n        strpos($str, '6') === false\
    \ &&\n        strpos($str, '8') === false &&\n        strpos($str, '0') === false)\
    \ {\n        $res[] = $i;\n    }\n  }\n  if (!empty($res)) {\n    return $res;\n\
    \  } else {\n    return array();\n  }\n}\n", "\t//echo $x[0];\n\t$counter = 0;\n\
    \t$last_digit = \"\";\n\tforeach ($x as $num) {\n\t\tif(!($num > 9)) {\n\t\t\t\
    $result[] = $num;\n\t\t} else {\n\t\t\tdo {\n\t\t\t\t$last_digit = $num % 10;\n\
    \t\t\t\tif($last_digit % 2 == 0) {\n\t\t\t\t\t$counter++;\n\t\t\t\t}\n\t\t\t\t\
    $num = floor($num / 10);\n\t\t\t} while ($num > 9);\n\t\t\tif($num % 2 == 0) {\n\
    \t\t\t\t$counter++;\n\t\t\t}\n\t\t\tif($counter == 0) {\n\t\t\t\t$result[] = $num;\n\
    \t\t\t}\n\t\t\t$counter = 0;\n\t\t}\n\t}\n\tsort($result);\n\treturn $result;\n\
    }", "    $result = [];\n    foreach ($x as $num) {\n        if (strlen($num) ==\
    \ 1) {\n            $result[] = $num;\n        } else {\n            $flag = 0;\n\
    \            for ($i = 0; $i < strlen($num); $i++) {\n                if ($num[$i]\
    \ % 2 == 0) {\n                    $flag = 1;\n                    break;\n  \
    \              }\n            }\n            if ($flag == 0) {\n             \
    \   $result[] = $num;\n            }\n        }\n    }\n    sort($result);\n \
    \   return $result;\n}\n", "    $d = [];\n    foreach ($x as $v) {\n        for\
    \ ($i = 0; $i < strlen($v); $i++) {\n            if (strpos('02468', $v[$i]) !==\
    \ false) {\n                $d[$v] = false;\n                break;\n        \
    \    }\n        }\n        if (!isset($d[$v])) {\n            $d[$v] = true;\n\
    \        }\n    }\n    return array_keys(array_filter($d));\n}\necho var_export(unique_digits([15,\
    \ 33, 1422, 1]), true), PHP_EOL;\necho var_export(unique_digits([152, 323, 1422,\
    \ 10]), true), PHP_EOL;", "    $arr = [];\n    foreach ($x as $item) {\n     \
    \   $even = false;\n        $number = (string)$item;\n        for ($i = 0; $i\
    \ < strlen($number); $i++) {\n            if ($number[$i] % 2 == 0) {\n      \
    \          $even = true;\n                break;\n            }\n        }\n \
    \       if (!$even) {\n            $arr[] = $item;\n        }\n    }\n    sort($arr);\n\
    \    return $arr;\n}\n$array = array(15, 33, 1422, 1);\nprint_r(unique_digits($array));\n\
    echo \"<br>\";\n$array = array(152, 323, 1422, 10);\nprint_r(unique_digits($array));",
  "  $output = array();\n  for ($i = 0; $i < count($x); $i++) {\n    $isUnique = true;\n\
    \    $characters = str_split($x[$i]);\n    for ($j = 0; $j < count($characters);\
    \ $j++) {\n      if ($characters[$j] == '2' || $characters[$j] == '4' || $characters[$j]\
    \ == '6' || $characters[$j] == '8') {\n        $isUnique = false;\n      }\n \
    \   }\n    if ($isUnique) {\n      array_push($output, $x[$i]);\n    }\n  }\n\
    \  sort($output);\n  return $output;\n}\n", "    // your code here\n}\n", "  \
    \  if(!is_array($x)) return false;\n    $size = count($x);\n    if($size == 0)\
    \ return array();\n    $res = array();\n    for($i = 0; $i < $size; $i++) {\n\
    \        $has_even = false;\n        $el = $x[$i];\n        while($el > 0) {\n\
    \            $digit = $el % 10;\n            if($digit % 2 == 0) {\n         \
    \       $has_even = true;\n                break;\n            }\n           \
    \ $el = intval($el / 10);\n        }\n        if(!$has_even) $res[] = $x[$i];\n\
    \    }\n    sort($res);\n    return $res;\n}\n$arr = array(15, 33, 1422, 1);\n\
    print_r(unique_digits($arr));", "\t$unique_arr = array();\n\tforeach ($x as $i)\
    \ {\n\t\t$is_unique = TRUE;\n\t\t$str = (string)$i;\n\t\t$len = strlen($str);\n\
    \t\tfor ($j = 0; $j < $len; $j++) {\n\t\t\tif ($str[$j] % 2 == 0) {\n\t\t\t\t\
    $is_unique = FALSE;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ($is_unique) {\n\t\
    \t\tarray_push($unique_arr, $i);\n\t\t}\n\t}\n\tsort($unique_arr);\n\treturn $unique_arr;\n\
    }\n\n$x = array(15, 33, 1422, 1);\nprint_r(unique_digits($x));\n$x = array(152,\
    \ 323, 1422, 10);\nprint_r(unique_digits($x));", "    foreach ($x as $key => $value)\
    \ {\n        $explode = str_split($value);\n        foreach ($explode as $k =>\
    \ $v) {\n            if ($v % 2 == 0) {\n                unset($x[$key]);\n  \
    \          }\n        }\n    }\n    sort($x);\n    return $x;\n}\nprint_r(unique_digits(array(15,\
    \ 33, 1422, 1)));", "\t// Your code here...\n\t$arr = array();\n\t$arrnew = array();\n\
    \tfor($i=0;$i<count($x);$i++){\n\t\t$arr = str_split($x[$i]);\n\t\tfor($j=0;$j<count($arr);$j++){\n\
    \t\t\tif($arr[$j]%2==0){\n\t\t\t\t$arrnew[$i] = $x[$i];\n\t\t\t\tbreak;\n\t\t\t\
    }\n\t\t}\n\t}\n\treturn array_diff($x,$arrnew);\n}\nprint_r(unique_digits(array(15,\
    \ 33, 1422, 1)));\nprint_r(unique_digits(array(152, 323, 1422, 10)));", "    $result\
    \ = [];\n    foreach ($x as $element) {\n        $digits = array_map('intval',\
    \ str_split($element));\n        if (in_array(0, $digits) || in_array(2, $digits)\
    \ || in_array(4, $digits) || in_array(6, $digits) || in_array(8, $digits)) {\n\
    \            continue;\n        } else {\n            $result[] = $element;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n", "    $u = array();\n\
    \    $len = count($x);\n    for ($i = 0; $i < $len; $i++) {\n        $flag = 0;\n\
    \        $n = $x[$i];\n        while ($n != 0) {\n            $d = $n % 10;\n\
    \            if (($d % 2) == 0) {\n                $flag = 1;\n              \
    \  break;\n            }\n            $n = $n / 10;\n        }\n        if ($flag\
    \ == 0) {\n            array_push($u, $x[$i]);\n        }\n    }\n    return $u;\n\
    }", "\t$y = array();\n\t$z = array();\n\t$result = array();\n\tfor ($i = 0; $i\
    \ < count($x); $i++) {\n\t\tif (!in_array($x[$i], $y)) {\n\t\t\t$y[] = $x[$i];\n\
    \t\t}\n\t}\n\tfor ($i = 0; $i < count($y); $i++) {\n\t\tif (!in_array($y[$i],\
    \ $z)) {\n\t\t\t$z[] = $y[$i];\n\t\t}\n\t}\n\tfor ($i = 0; $i < count($z); $i++)\
    \ {\n\t\tif (!strstr($z[$i], '2') && !strstr($z[$i], '4') && !strstr($z[$i], '6')\
    \ && !strstr($z[$i], '8')) {\n\t\t\t$result[] = $z[$i];\n\t\t}\n\t}\n\t$result\
    \ = array_unique($result);\n\tsort($result);\n\treturn $result;\n}\n$x = array(152,\
    \ 323, 1422, 10);\necho \"<pre>\";\nprint_r(unique_digits($x));\necho \"</pre>\"\
    ;", "\t$y = [];\n\tforeach ($x as $x1) {\n\t\t$z = true;\n\t\twhile ($x1 > 0)\
    \ {\n\t\t\tif (($x1 % 10) % 2 == 0) {\n\t\t\t\t$z = false;\n\t\t\t\tbreak;\n\t\
    \t\t}\n\t\t\t$x1 = $x1 / 10;\n\t\t}\n\t\tif ($z) {\n\t\t\t$y[] = $x1;\n\t\t}\n\
    \t}\n\treturn $y;\n}", "    foreach ($x as $num) {\n        if (even_digit($num))\
    \ {\n            $new_x[] = $num;\n        }\n    }\n    asort($new_x);\n    return\
    \ $new_x;\n}\n", "  // Your code here\n}", "\t$even = array(0, 2, 4, 6, 8);\n\t\
    $even_list = array();\n\tforeach ($x as $key => $value) {\n\t\t$even_list[$key]\
    \ = \"\";\n\t\tfor ($i = 0; $i < strlen($value); $i++) {\n\t\t\tif (in_array($value[$i],\
    \ $even)) {\n\t\t\t\t$even_list[$key] .= $value[$i];\n\t\t\t}\n\t\t}\n\t}\n\t\
    return $even_list;\n}\n", "\t$result = array();\n\tforeach ($x as $y) {\n\t\t\
    if (isUnique($y)) {\n\t\t\t$result[] = $y;\n\t\t}\n\t}\n\tsort($result);\n\treturn\
    \ $result;\n}\n", "  $even = array();\n  foreach ($x as $key => $value) {\n  \
    \  for ($i = 0; $i < strlen($value); $i++) {\n      if ($value[$i] % 2 == 0) {\n\
    \        $even[] = $value;\n        break;\n      }\n    }\n  }\n  $array = array_diff($x,\
    \ $even);\n  sort($array);\n  return $array;\n}\n\nprint_r(unique_digits(array(15,\
    \ 33, 1422, 1)));\necho \"\\n\";\nprint_r(unique_digits(array(152, 323, 1422,\
    \ 10)));\necho \"\\n\";\n", "    return array_values(array_filter($x, function($item)\
    \ {\n        return !strpbrk($item, '02468');\n    }));\n}\n", "  $result = array();\n\
    \  foreach ($x as $number) {\n    $number_as_string = (string) $number;\n    $has_even_digit\
    \ = false;\n    foreach (str_split($number_as_string) as $digit) {\n      if (($digit\
    \ % 2) == 0) {\n        $has_even_digit = true;\n        break;\n      }\n   \
    \ }\n    if (!$has_even_digit) {\n      $result[] = $number;\n    }\n  }\n  sort($result);\n\
    \  return $result;\n}\n", "    \n    // before returning, sort by numerical value\
    \ with optional parameter\n    sort($x, SORT_NUMERIC);\n    \n    // loop through\
    \ each element in array\n    foreach ($x as $key => $value) {\n        \n    \
    \    // convert integer to string\n        $value = (string)$value;\n        \n\
    \        // loop through each character in string\n        for ($i = 0; $i < strlen($value);\
    \ $i++) {\n            \n            // if character is even, unset the element\n\
    \            if ($value[$i] % 2 == 0) {\n                unset($x[$key]);\n  \
    \          }\n        }\n    }\n    \n    // return the array\n    return $x;\n\
    }", "    // Write your code here\n    $array_of_unique_digits = [];\n    foreach\
    \ ($x as $num) {\n        $array_of_num = str_split($num);\n        $array_of_unique_digits[]\
    \ = array_unique($array_of_num);\n    }\n    var_dump($array_of_unique_digits);\n\
    }\n", "\n}\n", "    $oddNum = [];\n    foreach ($x as $num) {\n        $stringNum\
    \ = strval($num);\n        $arrayStringNum = str_split($stringNum);\n        for\
    \ ($i = 0; $i < count($arrayStringNum); $i++) {\n            if ($arrayStringNum[$i]\
    \ % 2 == 0) {\n                break;\n            } else if ($i == count($arrayStringNum)\
    \ - 1) {\n                array_push($oddNum, $num);\n            }\n        }\n\
    \    }\n    return $oddNum;\n}\n", "\t// TODO\n}", "\t$first_result = array();\n\
    \t$second_result = array();\n\tforeach ($x as $value) {\n\t\t$first_result[] =\
    \ $value;\n\t}\n\tforeach ($first_result as $value) {\n\t\t$second_result = array_unique(str_split($value));\n\
    \t\t$third_result = array_diff($second_result, array('0', '2', '4', '6', '8'));\n\
    \t\tif (count($third_result) == count($second_result)) {\n\t\t\t$last_result[]\
    \ = $value;\n\t\t}\n\t}\n\tif (isset($last_result)) {\n\t\tsort($last_result);\n\
    \t\treturn $last_result;\n\t} else {\n\t\treturn $last_result = array();\n\t}\n\
    }\n", "  $res = [];\n  foreach ($x as $item) {\n    $arr = str_split($item);\n\
    \    $match = preg_grep('/[2,4,6,8]/', $arr);\n    if (count($match) == 0) {\n\
    \      $res[] = $item;\n    }\n  }\n  sort($res);\n  return $res;\n}\n\n$res =\
    \ unique_digits([15, 33, 1422, 1]);\nprint_r($res);\n$res = unique_digits([152,\
    \ 323, 1422, 10]);\nprint_r($res);", "    $num_arr = [];\n    foreach ($x as $val)\
    \ {\n        if (strpbrk($val, '02468')) {\n            continue;\n        } else\
    \ {\n            $num_arr[] = $val;\n        }\n    }\n    sort($num_arr);\n \
    \   return $num_arr;\n}\necho \"Test 1: \";\nvar_dump(unique_digits(array(15,\
    \ 33, 1422, 1)));\necho \"Test 2: \";\nvar_dump(unique_digits(array(152, 323,\
    \ 1422, 10)));\n", "    $result = [];\n    foreach ($x as $value) {\n        if\
    \ (strpos($value, '2') === false && strpos($value, '4') === false && strpos($value,\
    \ '6') === false && strpos($value, '8') === false) {\n            $result[] =\
    \ $value;\n        }\n    }\n    sort($result);\n    return $result;\n}\nprint_r(unique_digits(array(15,\
    \ 33, 1422, 1)));\necho '<br>';\nprint_r(unique_digits(array(152, 323, 1422, 10)));\n",
  "\t\n}\n\necho '<h1>unique_digits</h1>';\necho '<pre>';\nprint_r(unique_digits(array(15,\
    \ 33, 1422, 1)));\necho '</pre>';\n\necho '<pre>';\nprint_r(unique_digits(array(152,\
    \ 323, 1422, 10)));\necho '</pre>';", "\t$uniques = array();\n\t$all = array();\n\
    \tforeach ($x as $num) {\n\t\t$digits = str_split($num);\n\t\t$has_even = false;\n\
    \t\tforeach ($digits as $digit) {\n\t\t\tif ($digit % 2 == 0) {\n\t\t\t\t$has_even\
    \ = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!$has_even) {\n\t\t\t$uniques[]\
    \ = $num;\n\t\t}\n\t\t$all[] = $num;\n\t}\n\tsort($uniques);\n\tsort($all);\n\t\
    echo '<pre>';\n\tprint_r($uniques);\n\tprint_r($all);\n\techo '</pre>';\n}\nunique_digits(array(15,\
    \ 33, 1422, 1));\nunique_digits(array(152, 323, 1422, 10));", "\t$x = array_filter($x,\
    \ function($n) {\n\t\twhile ($n > 0) {\n\t\t\tif ($n % 2 == 0) {\n\t\t\t\treturn\
    \ false;\n\t\t\t}\n\t\t\t$n /= 10;\n\t\t}\n\t\treturn true;\n\t});\n\tsort($x);\n\
    \treturn $x;\n}\nprint_r(unique_digits(array(15, 33, 1422, 1)));\nprint_r(unique_digits(array(152,\
    \ 323, 1422, 10)));", "    //your code here\n}\n", "  $even = array(0, 2, 4, 6,\
    \ 8);\n  $count = 0;\n  $str = strval($x[$count]);\n  $num = (int)$str;\n  $result\
    \ = array();\n  while($count < count($x)) {\n    $num = (int)$str;\n    while($num\
    \ != 0) {\n      $digit = $num % 10;\n      if(in_array($digit, $even)) {\n  \
    \      $count++;\n        $str = strval($x[$count]);\n        break;\n      }\n\
    \      $num = (int)($num / 10);\n    }\n    if($num == 0) {\n      array_push($result,\
    \ $x[$count]);\n      $count++;\n      $str = strval($x[$count]);\n    }\n  }\n\
    \  sort($result);\n  return $result;\n}\n", "\t\n\t$list = array();\n\t$even =\
    \ array();\n\t$even[] = 0;\n\t$even[] = 2;\n\t$even[] = 4;\n\t$even[] = 6;\n\t\
    $even[] = 8;\n\t\n\tforeach ($x as $i) {\n\t\t$s = (string)$i;\n\t\tfor ($j =\
    \ 0; $j < strlen($s); $j++) {\n\t\t\t$char = $s[$j];\n\t\t\tif (in_array($char,\
    \ $even)) {\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\tif ($j == strlen($s) - 1)\
    \ {\n\t\t\t\t\t$list[] = $i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tsort($list);\n\
    \treturn $list;\n}\n", "\t$uniqueArr = array();\n\tforeach ($x as $y) {\n\t\t\
    // Check for even number digits\n\t\tif (!hasEvenDigit($y)) {\n\t\t\tarray_push($uniqueArr,\
    \ $y);\n\t\t}\n\t}\n\t// Sort the array\n\tsort($uniqueArr);\n\treturn $uniqueArr;\n\
    }\n", "    $set = [];\n    foreach ($x as $num) {\n        if (!has_even_digit($num))\
    \ {\n            $set[] = $num;\n        }\n    }\n    sort($set);\n    return\
    \ $set;\n}\n", "    $newArray = [];\n    $count = 0;\n    for ($i = 0; $i < count($x);\
    \ $i++) {\n        $num = $x[$i];\n        while ($num > 0) {\n            $digit\
    \ = $num % 10;\n            if ($digit % 2 == 0) {\n                break;\n \
    \           }\n            $num = floor($num / 10);\n            $count++;\n \
    \       }\n        if ($count == strlen($x[$i])) {\n            array_push($newArray,\
    \ $x[$i]);\n        }\n        $count = 0;\n    }\n    sort($newArray);\n    return\
    \ $newArray;\n}\nprint_r(unique_digits(array(15, 33, 1422, 1)));\necho \"<br />\"\
    ;\nprint_r(unique_digits(array(152, 323, 1422, 10)));", "    $result = [];\n \
    \   foreach ($x as $v) {\n        if (strpos($v, '2') === false &&\n         \
    \   strpos($v, '4') === false &&\n            strpos($v, '6') === false &&\n \
    \           strpos($v, '8') === false) {\n            $result[] = $v;\n      \
    \  }\n    }\n    sort($result);\n    return $result;\n}\n\n$array = array(15,\
    \ 33, 1422, 1);\nprint_r(unique_digits($array));\necho \"\\n\";\n\n$array = array(152,\
    \ 323, 1422, 10);\nprint_r(unique_digits($array));\necho \"\\n\";", '}', "  $array\
    \ = array();\n  foreach ($x as $element) {\n    if (strpos(strval($element), \"\
    2\") === false && strpos(strval($element), \"4\") === false && strpos(strval($element),\
    \ \"6\") === false && strpos(strval($element), \"8\") === false && strpos(strval($element),\
    \ \"0\") === false) {\n      array_push($array, $element);\n    }\n  }\n  sort($array);\n\
    \  return $array;\n}", "  $arr = $x;\n  for ($i = 0; $i < count($arr); $i++) {\n\
    \    $number = $arr[$i];\n    while ($number > 0) {\n      $currentDigit = $number\
    \ % 10;\n      if ($currentDigit % 2 == 0) {\n        unset($arr[$i]);\n     \
    \   break;\n      }\n      $number = $number / 10;\n    }\n  }\n  asort($arr);\n\
    \  return $arr;\n}", "    $result = [];\n    foreach ($x as $number) {\n     \
    \   $number = strval($number);\n        $has_even_digit = false;\n        for\
    \ ($i = 0; $i < strlen($number); $i++) {\n            if ($number[$i] % 2 == 0)\
    \ {\n                $has_even_digit = true;\n                break;\n       \
    \     }\n        }\n        if (!$has_even_digit) {\n            $result[] = intval($number);\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n", "    // your\
    \ code here\n}\n", "  $result = array();\n  for ($i = 0; $i < count($x); $i++)\
    \ {\n    if ($x[$i] > 0) {\n      $str = (string)$x[$i];\n      if (!preg_match('/[2468]/',\
    \ $str)) {\n        array_push($result, $x[$i]);\n      }\n    }\n  }\n  sort($result);\n\
    \  return $result;\n}\nprint_r(unique_digits(array(15, 33, 1422, 1)));\nprint_r(unique_digits(array(152,\
    \ 323, 1422, 10)));", "    $new_arr = [];\n    for ($i = 0; $i < count($x); $i++)\
    \ {\n        $num = $x[$i];\n        $str = strval($num);\n        if (strpos($str,\
    \ '2') === false && strpos($str, '4') === false && strpos($str, '6') === false\
    \ && strpos($str, '8') === false) {\n            array_push($new_arr, $num);\n\
    \        }\n    }\n    sort($new_arr);\n    return $new_arr;\n}\nprint_r(unique_digits(array(15,\
    \ 33, 1422, 1)));\necho '<br>';\nprint_r(unique_digits(array(152, 323, 1422, 10)));",
  "\t\n\treturn $x;\n}", "    $array = array();\n    for ($i = 0; $i < count($x);\
    \ $i++) {\n        if ($x[$i] < 10) {\n            array_push($array, $x[$i]);\n\
    \        } else {\n            if ($x[$i] < 100) {\n                if (strpos($x[$i],\
    \ '2') === false && strpos($x[$i], '4') === false && strpos($x[$i], '6') === false\
    \ && strpos($x[$i], '8') === false) {\n                    array_push($array,\
    \ $x[$i]);\n                }\n            } else {\n                if ($x[$i]\
    \ < 1000) {\n                    if (strpos($x[$i], '2') === false && strpos($x[$i],\
    \ '4') === false && strpos($x[$i], '6') === false && strpos($x[$i], '8') === false)\
    \ {\n                        array_push($array, $x[$i]);\n                   \
    \ }\n                } else {\n                    if (strpos($x[$i], '2') ===\
    \ false && strpos($x[$i], '4') === false && strpos($x[$i], '6') === false && strpos($x[$i],\
    \ '8') === false) {\n                        array_push($array, $x[$i]);\n   \
    \                 }\n                }\n            }\n        }\n    }\n    return\
    \ $array;\n}", "  $odd_digits = array();\n  foreach ($x as $i) {\n    if (strlen($i)\
    \ > 1) {\n      $i = str_split($i);\n      $has_even = false;\n      foreach ($i\
    \ as $digit) {\n        if ($digit % 2 == 0) {\n          $has_even = true;\n\
    \        }\n      }\n      if (!$has_even) {\n        $odd_digits[] = implode($i);\n\
    \      }\n    } else {\n      $odd_digits[] = $i;\n    }\n  }\n  sort($odd_digits);\n\
    \  return $odd_digits;\n}\necho '<pre>';\nprint_r(unique_digits(array(15, 33,\
    \ 1422, 1)));\necho '</pre>';", "    // $x = array(15, 33, 1422, 1);\n    $x =\
    \ array(152, 323, 1422, 10);\n    $sorted_x = array();\n    $sorted_x_0 = array();\n\
    \    for ($i = 0; $i < count($x); $i++) {\n        $flag = 0;\n        $x_str\
    \ = (string)$x[$i];\n        for ($j = 0; $j < strlen($x_str); $j++) {\n     \
    \       if ($x_str[$j] % 2 == 0) {\n                $flag = 1;\n             \
    \   break;\n            }\n        }\n        if ($flag == 0) {\n            $sorted_x[]\
    \ = $x[$i];\n        }\n    }\n    sort($sorted_x);\n    print_r($sorted_x);\n\
    }\nunique_digits(array(15, 33, 1422, 1));\nunique_digits(array(152, 323, 1422,\
    \ 10));", "\t$result = array();\n\t$flag = true;\n\t//$x = array(152, 323, 1422,\
    \ 10);\n\tforeach ($x as $value) {\n\t\twhile ($value>=10) {\n\t\t\t$value = array_sum(str_split($value));\n\
    \t\t\t//echo $value . \"\\n\";\n\t\t}\n\t\tif ($value%2==0) {\n\t\t\t$flag = false;\n\
    \t\t}\n\t\tif ($flag) {\n\t\t\t$result[] = $value;\n\t\t}\n\t\t$flag = true;\n\
    \t}\n\treturn $result;\n}\n$a = array(152, 323, 1422, 10);\nprint_r(unique_digits($a));",
  "    $arr = array();\n    foreach ($x as $i) {\n        if ($i % 2 == 0) {\n   \
    \         array_push($arr, $i);\n        }\n    }\n    return $arr;\n}", "\t$res\
    \ = array();\n\tforeach ($x as $el) {\n\t\tif (strpos((string)$el, '2') === false\
    \ &&\n\t\t\tstrpos((string)$el, '4') === false &&\n\t\t\tstrpos((string)$el, '6')\
    \ === false &&\n\t\t\tstrpos((string)$el, '8') === false) {\n\t\t\t$res[] = $el;\n\
    \t\t}\n\t}\n\tsort($res);\n\treturn $res;\n}", "  // your code here...\n}", " \
    \ $elements = [];\n  for ($i = 0; $i < count($x); $i++) {\n    $num = $x[$i];\n\
    \    $digits = [];\n    while ($num > 0) {\n      $digits[] = $num % 10;\n   \
    \   $num = (int)($num / 10);\n    }\n    if (!has_even_digit($digits)) {\n   \
    \   $elements[] = $x[$i];\n    }\n  }\n  sort($elements);\n  return $elements;\n\
    }\n", "  for ($i = 0; $i < count($x); $i++) {\n    $str = strval($x[$i]);\n  \
    \  if (strpos($str, '2') !== false || strpos($str, '4') !== false || strpos($str,\
    \ '6') !== false || strpos($str, '8') !== false) {\n      unset($x[$i]);\n   \
    \ }\n  }\n  return $x;\n}\n$x = array(15, 33, 1422, 1);\nprint_r(unique_digits($x));\n\
    echo \"\\n\";\n$x = array(152, 323, 1422, 10);\nprint_r(unique_digits($x));\n\
    echo \"\\n\";", "\t$y = array();\n\tforeach ($x as $value) {\n\t\tif ($value %\
    \ 2 != 0) {\n\t\t\t$y[] = $value;\n\t\t}\n\t}\n\treturn $y;\n}", "\t$y = $x;\n\
    \tsort($y);\n\tfor ($i = 0; $i < count($y); $i++) {\n\t\t$y[$i] = (string)$y[$i];\n\
    \t\tfor ($j = 0; $j < strlen($y[$i]); $j++) {\n\t\t\tif ((int)$y[$i][$j] % 2 ==\
    \ 0) {\n\t\t\t\t$z[] = (int)$y[$i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tif\
    \ (!isset($z))\n\t\treturn $y;\n\t$l = 0;\n\tforeach ($y as $m) {\n\t\t$flag =\
    \ false;\n\t\tforeach ($z as $k) {\n\t\t\tif ($m == $k) {\n\t\t\t\t$flag = true;\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!$flag)\n\t\t\t$r[$l++] = $m;\n\t}\n\t\
    return $r;\n}\n\necho '<pre>';\nprint_r(unique_digits(array(15, 33, 1422, 1)));\n\
    echo '</pre>';\necho '<pre>';\nprint_r(unique_digits(array(152, 323, 1422, 10)));\n\
    echo '</pre>';\n", "    foreach ($x as $i => $v) {\n        $s = str_split($v);\n\
    \        foreach ($s as $ii => $vv) {\n            if ($vv % 2 == 0) {\n     \
    \           unset($x[$i]);\n                break;\n            }\n        }\n\
    \    }\n    return $x;\n}\necho '<pre>';\nprint_r(unique_digits(array(15, 33,\
    \ 1422, 1)));\nprint_r(unique_digits(array(152, 323, 1422, 10)));\necho '</pre>';\n",
  "\tforeach ($x as $a) {\n\t\t$str = strval($a);\n\t\tif (!preg_match('/[02468]/',\
    \ $str)) {\n\t\t\t$arr[] = $a;\n\t\t}\n\t}\n\tif (empty($arr)) {\n\t\treturn $arr;\n\
    \t}\n\tsort($arr);\n\treturn $arr;\n}\n\nprint_r(unique_digits(array(15, 33, 1422,\
    \ 1)));\necho \"\\n\";\nprint_r(unique_digits(array(152, 323, 1422, 10)));\necho\
    \ \"\\n\";\n", "  $result = array();\n  foreach ($x as $y) {\n    if (strstr($y,\
    \ '2') == FALSE && strstr($y, '4') == FALSE\n        && strstr($y, '6') == FALSE\
    \ && strstr($y, '8') == FALSE) {\n      $result[] = $y;\n    }\n  }\n  sort($result);\n\
    \  return $result;\n}\n", "    // Your code here\n    $result = [];\n    foreach\
    \ ($x as $num) {\n      if (unique($num)) {\n        $result[] = $num;\n     \
    \ }\n    }\n    sort($result);\n    return $result;\n}\n", "\t$i = 0;\n\twhile\
    \ ($i < count($x)) {\n\t\tif (strlen($x[$i]) == 1) {\n\t\t\t++$i;\n\t\t} else\
    \ {\n\t\t\t$num = $x[$i];\n\t\t\t$num = str_split($num);\n\t\t\tforeach ($num\
    \ as $n) {\n\t\t\t\tif ($n % 2 == 0) {\n\t\t\t\t\tarray_splice($x, $i, 1);\n\t\
    \t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t++$i;\n\t\t}\n\t}\n\tsort($x);\n\treturn\
    \ $x;\n}\n", "    $result = [];\n    foreach ($x as $element) {\n        $str\
    \ = (string)$element;\n        if (strpos($str, '2') === false && strpos($str,\
    \ '4') === false\n                && strpos($str, '6') === false && strpos($str,\
    \ '8') === false\n                && strpos($str, '0') === false) {\n        \
    \    $result[] = $element;\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n", '}', "\tforeach ($x as $number) {\n\t\t$digits = str_split($number);\n\t\
    \tforeach ($digits as $digit) {\n\t\t\tif ($digit % 2 == 0) {\n\t\t\t\tbreak;\n\
    \t\t\t}\n\t\t}\n\t\tif ($digit % 2 == 0) {\n\t\t\tunset($x[$number]);\n\t\t}\n\
    \t}\n\tsort($x);\n\treturn $x;\n}\n$arr = array(15, 33, 1422, 1);\nprint_r(unique_digits($arr));\n\
    $arr2 = array(152, 323, 1422, 10);\nprint_r(unique_digits($arr2));", "    $arr\
    \ = array();\n    foreach ($x as $element) {\n        if ($element == 0) {\n \
    \           continue;\n        }\n        $num = $element;\n        $found = false;\n\
    \        while ($num != 0) {\n            $rem = $num % 10;\n            if ($rem\
    \ == 0 || $rem == 2 || $rem == 4 || $rem == 6 || $rem == 8) {\n              \
    \  $found = true;\n                break;\n            }\n            $num = intval($num\
    \ / 10);\n        }\n        if (!$found) {\n            $arr[] = $element;\n\
    \        }\n    }\n    sort($arr);\n    return $arr;\n}\necho '<pre>';\nprint_r(unique_digits(array(15,\
    \ 33, 1422, 1)));\nprint_r(unique_digits(array(152, 323, 1422, 10)));\necho '</pre>';",
  "    return array_values(array_filter($x, function($num) {\n        return preg_match(\"\
    /[02468]/\", (string)$num) == 0;\n    }));\n}\n", "    $a = [];\n    foreach ($x\
    \ as $y) {\n        if (strlen(strval($y)) == strlen(preg_replace('/[02468]/',\
    \ '', strval($y)))) {\n            $a[] = $y;\n        }\n    }\n    return count($a)\
    \ == 0 ? [] : sorted($a);\n}", "    $result = [];\n    foreach ($x as $val) {\n\
    \        if (!has_even_digit($val)) {\n            $result[] = $val;\n       \
    \ }\n    }\n    sort($result);\n    return $result;\n}\n", "\t// return array_filter($x,\
    \ 'isOdd');\n\t// $res = array();\n\t// foreach ($x as $val) {\n\t// \tif (isOdd($val))\
    \ $res[] = $val;\n\t// }\n\t// return $res;\n\t$y = array();\n\tforeach ($x as\
    \ $val) {\n\t\t$str = (string)$val;\n\t\t$count = 0;\n\t\tfor ($i = 0; $i < strlen($str);\
    \ $i++) {\n\t\t\tif ($str[$i] % 2 == 0) {\n\t\t\t\t$count++;\n\t\t\t}\n\t\t}\n\
    \t\tif ($count == 0) {\n\t\t\t$y[] = $val;\n\t\t}\n\t}\n\tsort($y);\n\treturn\
    \ $y;\n}\n", "\t$evens = array('0', '2', '4', '6', '8');\n\t$y = array();\n\t\
    foreach ($x as $val) {\n\t\t$val = strval($val);\n\t\t$num = 0;\n\t\tforeach (str_split($val)\
    \ as $digit) {\n\t\t\tif (in_array($digit, $evens)) {\n\t\t\t\t$num++;\n\t\t\t\
    }\n\t\t}\n\t\tif ($num === 0) {\n\t\t\t$y[] = $val;\n\t\t}\n\t}\n\tsort($y);\n\
    \treturn $y;\n}\n\nprint_r(unique_digits(array(15, 33, 1422, 1)));\nprint_r(unique_digits(array(152,\
    \ 323, 1422, 10)));", "    $numbers = array();\n    $evens = array('0', '2', '4',\
    \ '6', '8');\n    foreach ($x as $num) {\n        $num = (string) $num;\n    \
    \    $has_even = false;\n        foreach ($evens as $even) {\n            if (strpos($num,\
    \ $even) !== false) {\n                $has_even = true;\n                break;\n\
    \            }\n        }\n        if (!$has_even) {\n            $numbers[] =\
    \ $num;\n        }\n    }\n    sort($numbers);\n    return $numbers;\n}", "  \
    \  $r = array();\n    foreach ($x as $i) {\n        if (preg_match('/(?:[02468])/',\
    \ (string)$i)) {\n            continue;\n        }\n        $r[] = $i;\n    }\n\
    \    sort($r);\n    return $r;\n}", "  $result = array();\n  foreach ($x as $i)\
    \ {\n    $i_str = strval($i);\n    if (strpos($i_str, '2') === false and\n   \
    \     strpos($i_str, '4') === false and\n        strpos($i_str, '6') === false\
    \ and\n        strpos($i_str, '8') === false) {\n      $result[] = $i;\n    }\n\
    \  }\n  sort($result);\n  return $result;\n}\n", "    $result = [];\n    foreach\
    \ ($x as $num) {\n        $digits = str_split($num);\n        $hasEven = false;\n\
    \        foreach ($digits as $digit) {\n            if ($digit % 2 == 0) {\n \
    \               $hasEven = true;\n                break;\n            }\n    \
    \    }\n        if (!$hasEven) {\n            $result[] = $num;\n        }\n \
    \   }\n    sort($result);\n    return $result;\n}\n$arr = [15, 33, 1422, 1];\n\
    echo \"Input: \";\necho \"[\";\nfor ($i = 0; $i < count($arr); $i++) {\n    echo\
    \ $arr[$i];\n    if ($i != count($arr) - 1) {\n        echo \", \";\n    }\n}\n\
    echo \"]\";\necho \"<br>\";\necho \"Output: \";\necho \"[\";\n$arr = unique_digits($arr);\n\
    for ($i = 0; $i < count($arr); $i++) {\n    echo $arr[$i];\n    if ($i != count($arr)\
    \ - 1) {\n        echo \", \";\n    }\n}\necho \"]\";", "  $result = array();\n\
    \  foreach ($x as $value) {\n    if (!has_even_digit($value)) {\n      $result[]\
    \ = $value;\n    }\n  }\n  sort($result);\n  return $result;\n}\n", "\n}", "\t\
    $res = array();\n\tforeach ($x as $i) {\n\t\tif (!unique($i)) {\n\t\t\t$res[]\
    \ = $i;\n\t\t}\n\t}\n\tsort($res);\n\treturn $res;\n}\n", "  return array_filter($x,\
    \ function($n) {\n    return (bool)preg_match('/^[^24680]+$/', \"$n\");\n  });\n\
    }\n\nprint_r(unique_digits(array(15, 33, 1422, 1)));\nprint_r(unique_digits(array(152,\
    \ 323, 1422, 10)));", "    $arrEven = array();\n    $arrOdd = array();\n    $arrX\
    \ = array();\n    $arrReturn = array();\n    foreach ($x as $key => $value) {\n\
    \        $arrX[$key] = $value;\n        $arrEven[$key] = 0;\n        $arrOdd[$key]\
    \ = 0;\n    }\n    foreach ($arrX as $key => $value) {\n        for ($i = 0; $i\
    \ < strlen($value); $i++) {\n            if (intval($value[$i]) % 2 === 0) {\n\
    \                $arrEven[$key]++;\n            } else {\n                $arrOdd[$key]++;\n\
    \            }\n        }\n    }\n    for ($i = 0; $i < count($arrEven); $i++)\
    \ {\n        if ($arrEven[$i] === 0) {\n            $arrReturn[] = $arrX[$i];\n\
    \        }\n    }\n    return $arrReturn;\n}\nprint_r(unique_digits(array(15,\
    \ 33, 1422, 1)));\necho \"<br>\";\nprint_r(unique_digits(array(152, 323, 1422,\
    \ 10)));", "  $result = array();\n  foreach ($x as $number) {\n    $numberStr\
    \ = strval($number);\n    $hasEven = false;\n    for ($i = 0; $i < strlen($numberStr);\
    \ $i++) {\n      if ($numberStr[$i] % 2 == 0) {\n        $hasEven = true;\n  \
    \      break;\n      }\n    }\n    if (!$hasEven) {\n      array_push($result,\
    \ $number);\n    }\n  }\n  sort($result);\n  return $result;\n}\necho(implode(',\
    \ ', unique_digits(array(15, 33, 1422, 1))));\necho \"\\n\";\necho(implode(',\
    \ ', unique_digits(array(152, 323, 1422, 10))));\necho \"\\n\";", "\t$len = count($x);\n\
    \t$tmp = [];\n\tfor ($i = 0; $i < $len; $i++) {\n\t\t$hasEven = false;\n\t\t$num\
    \ = $x[$i];\n\t\twhile ($num > 0) {\n\t\t\t$digit = $num % 10;\n\t\t\tif ($digit\
    \ % 2 == 0) {\n\t\t\t\t$hasEven = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t$num =\
    \ intval($num / 10);\n\t\t}\n\t\tif (!$hasEven) {\n\t\t\t$tmp[] = $x[$i];\n\t\t\
    }\n\t}\n\treturn $tmp;\n}\n", "    foreach ($x as $k => $v) {\n        while ($v\
    \ >= 10) {\n            if (($v % 10) % 2 == 0) {\n                unset($x[$k]);\n\
    \                break;\n            }\n            $v /= 10;\n        }\n   \
    \ }\n    sort($x);\n    return $x;\n}", "\t// Write your code here\n\t$result\
    \ = array();\n\tfor ($i = 0; $i < count($x); $i++) {\n\t\t$number = $x[$i];\n\t\
    \t$hasEvenDigit = false;\n\t\twhile ($number > 0) {\n\t\t\t$digit = $number %\
    \ 10;\n\t\t\tif ($digit % 2 == 0) {\n\t\t\t\t$hasEvenDigit = true;\n\t\t\t\tbreak;\n\
    \t\t\t}\n\t\t\t$number = floor($number / 10);\n\t\t}\n\t\tif (!$hasEvenDigit)\
    \ {\n\t\t\tarray_push($result, $x[$i]);\n\t\t}\n\t}\n\treturn $result;\n}\n",
  "\tforeach ($x as $key => $value) {\n\t\t$result = str_split($value);\n\t\t$unique\
    \ = array_unique($result);\n\t\tif (sizeof($result) !== sizeof($unique)) {\n\t\
    \t\tunset($x[$key]);\n\t\t}\n\t}\n\tsort($x);\n\treturn $x;\n}\n", "  $y = array();\n\
    \  for ($i = 0; $i < count($x); $i++) {\n    if (preg_match(\"/[13579]/\", $x[$i]))\
    \ {\n      array_push($y, $x[$i]);\n    }\n  }\n  sort($y);\n  return $y;\n}\n\
    print_r(unique_digits(array(152, 323, 1422, 10)));", "\t// $x is an array of integers\n\
    \t// Return a sorted array of all elements that has no even digit\n\t$arr = [];\n\
    \t$y = [];\n\t$str;\n\t$str2;\n\tfor ($i = 0; $i < count($x); $i++) {\n\t\t$str\
    \ = strval($x[$i]);\n\t\t$str2 = str_split($str);\n\t\tfor ($j = 0; $j < count($str2);\
    \ $j++) {\n\t\t\tif ($str2[$j] % 2 == 0) {\n\t\t\t\tarray_push($arr, $x[$i]);\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tsort($arr);\n\tfor ($i = 0; $i < count($x);\
    \ $i++) {\n\t\tif (!in_array($x[$i], $arr)) {\n\t\t\tarray_push($y, $x[$i]);\n\
    \t\t}\n\t}\n\tsort($y);\n\treturn $y;\n}", "  return array_filter($x, function($i)\
    \ {\n    return !preg_match('/[2468]/', (string)$i);\n  });\n}\nprint_r(unique_digits(array(15,\
    \ 33, 1422, 1)));", "  $result = array();\n  foreach ($x as $k) {\n    if (strpos($k,\
    \ '2') === false && strpos($k, '4') === false && strpos($k, '6') === false &&\
    \ strpos($k, '8') === false) {\n      $result[] = $k;\n    }\n  }\n  sort($result);\n\
    \  return $result;\n}\n", "    $result = [];\n    foreach ($x as $item) {\n  \
    \      $str = strval($item);\n        $has_even = false;\n        for ($i = 0;\
    \ $i < strlen($str); $i++) {\n            if ($str[$i] % 2 == 0) {\n         \
    \       $has_even = true;\n                break;\n            }\n        }\n\
    \        if (!$has_even) {\n            $result[] = $item;\n        }\n    }\n\
    \    sort($result);\n    return $result;\n}\n", "\t//your code here\n}\n", " \
    \ $r = [];\n  foreach ($x as $e) {\n    if (strlen(strval($e)) == 1) {\n     \
    \ $r[] = $e;\n    } else {\n      $even = False;\n      for ($i = 0; $i < strlen(strval($e));\
    \ $i++) {\n        if (intval(strval($e)[$i]) % 2 == 0) {\n          $even = True;\n\
    \          break;\n        }\n      }\n      if (!$even) {\n        $r[] = $e;\n\
    \      }\n    }\n  }\n  sort($r);\n  return $r;\n}\n", '}', "  $arr = [];\n  $even\
    \ = false;\n  foreach ($x as $key => $value) {\n    while($value > 0) {\n    \
    \  $mod = $value % 10;\n      if($mod % 2 == 0) {\n        $even = true;\n   \
    \     break;\n      }\n      $value = $value / 10;\n    }\n    if($even == false)\
    \ {\n      array_push($arr, $x[$key]);\n    }\n    $even = false;\n  }\n  return\
    \ sort($arr);\n}\nprint_r(unique_digits(array(15, 33, 1422, 1)));\necho '<br>';\n\
    print_r(unique_digits(array(152, 323, 1422, 10)));", "  $even_digits = array(0,\
    \ 2, 4, 6, 8);\n  $result = array();\n  foreach ($x as $item) {\n    $digits =\
    \ str_split($item);\n    $match = 0;\n    foreach ($digits as $d) {\n      if\
    \ (in_array($d, $even_digits)) {\n        $match = 1;\n        break;\n      }\n\
    \    }\n    if ($match == 0) {\n      $result[] = $item;\n    }\n  }\n  sort($result);\n\
    \  return $result;\n}\nprint_r(unique_digits(array(15, 33, 1422, 1)));\nprint_r(unique_digits(array(152,\
    \ 323, 1422, 10)));\n", "  $output = array();\n  foreach ($x as $item) {\n   \
    \ if (preg_match('/^([1-9]+)$/', strval($item))) {\n      $output[] = $item;\n\
    \    }\n  }\n  return $output;\n}\n", "\t$result = array();\n\tforeach ($x as\
    \ $number) {\n\t\t$flag = 0;\n\t\twhile ($number != 0) {\n\t\t\t$current = $number\
    \ % 10;\n\t\t\tif (($current % 2) == 0) {\n\t\t\t\t$flag = 1;\n\t\t\t\tbreak;\n\
    \t\t\t}\n\t\t\t$number = (int)($number / 10);\n\t\t}\n\t\tif ($flag == 0)\n\t\t\
    \tarray_push($result, $number);\n\t}\n\tsort($result);\n\treturn $result;\n}\n\
    \nprint_r(unique_digits(array(15, 33, 1422, 1)));"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

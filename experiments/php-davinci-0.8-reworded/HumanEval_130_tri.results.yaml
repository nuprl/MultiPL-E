language: php
name: HumanEval_130_tri
results:
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    if($n == 0) return\
    \ [1];\n    $result = [1, 3, 2];\n    for($i = 3; $i <= $n; $i++) {\n        if($i\
    \ % 2 == 0) {\n            $result[] = 1 + $i / 2;\n        } else {\n       \
    \     $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n     \
    \   }\n    }\n    return $result;\n}\n\n$n = 3;\nprint_r(tri($n));\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmp0h0omn8y.php on line 25\nArray\n\
    (\n    [0] => 1\n    [1] => 3\n    [2] => 2\n    [3] => 5\n)\n\nWarning: Undefined\
    \ array key 4 in /tmp/tmp0h0omn8y.php on line 25\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp0h0omn8y.php:38\nStack trace:\n#0 /tmp/tmp0h0omn8y.php(50):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp0h0omn8y.php on line 38\n"
  timestamp: 1659823541
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    if($n == 0) return\
    \ array(1);\n    $out = array(1, 3, 2);\n    $i = 3;\n    while($i <= $n) {\n\
    \        if($i % 2 == 0) {\n            $out[] = 1 + $i / 2;\n        } else {\n\
    \            $out[] = $out[$i - 1] + $out[$i - 2] + $out[$i + 1];\n        }\n\
    \        $i++;\n    }\n    return $out;\n}\nfunction candidate(...$args) {\n \
    \   return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpksh6o0_2.php on line 26\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpksh6o0_2.php:37\nStack\
    \ trace:\n#0 /tmp/tmpksh6o0_2.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpksh6o0_2.php\
    \ on line 37\n"
  timestamp: 1659823541
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n\t// your code\n}\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm2ga71vr.php:26\n\
    Stack trace:\n#0 /tmp/tmpm2ga71vr.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpm2ga71vr.php\
    \ on line 26\n"
  timestamp: 1659823541
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    $result = array();\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        $result[] = function($i) {\n    \
    \        if ($i === 1) return 3;\n            if ($i % 2 === 0) return 1 + $i\
    \ / 2;\n            return tri($i - 1) + tri($i - 2) + tri($i + 1);\n        }\
    \ ($i);\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "(" in /tmp/tmp4ekfarmf.php on line
    25

    '
  timestamp: 1659823541
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  $start = array(1, 3,\
    \ 2);\n  for ($i = 0; $i < $n; $i++) {\n    $val = ($i % 2) ? (($start[$i-1] +\
    \ $start[$i-2] + $start[$i+1]) % 3) : ($i / 2);\n    array_push($start, $val);\n\
    \  }\n  return $start;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key -1 in /tmp/tmpuecvhzxh.php on line 21\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpuecvhzxh.php:32\nStack\
    \ trace:\n#0 /tmp/tmpuecvhzxh.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpuecvhzxh.php\
    \ on line 32\n"
  timestamp: 1659823541
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    $result = [];\n \
    \   $i = 0;\n    while ($i <= $n) {\n        if ($i === 0) {\n            $result[]\
    \ = 1;\n        } elseif ($i === 1) {\n            $result[] = 3;\n        } elseif\
    \ ($i === 2) {\n            $result[] = 2;\n        } elseif ($i % 2 === 0) {\n\
    \            $result[] = 1 + $i / 2;\n        } else {\n            $result[]\
    \ = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n        $i++;\n\
    \    }\n    return $result;\n}\n\nprint_r(tri(4));\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmp767xxr2o.php on line 31\nArray\n\
    (\n    [0] => 1\n    [1] => 3\n    [2] => 2\n    [3] => 5\n    [4] => 3\n)\n\n\
    Warning: Undefined array key 4 in /tmp/tmp767xxr2o.php on line 31\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmp767xxr2o.php:44\nStack trace:\n\
    #0 /tmp/tmp767xxr2o.php(56): test()\n#1 {main}\n  thrown in /tmp/tmp767xxr2o.php\
    \ on line 44\n"
  timestamp: 1659823541
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    if($n === 0) return\
    \ [];\n    $result = [];\n    $prev = $prev2 = $prev3 = 0;\n    $result[0] = 1;\n\
    \    $result[1] = 3;\n    $result[2] = 2;\n    for($i = 3; $i <= $n; $i++) {\n\
    \        if($i % 2 === 0) {\n            $result[$i] = 1 + $i / 2;\n        }\
    \ else {\n            $result[$i] = $result[$i - 1] + $result[$i - 2] + $result[$i\
    \ + 1];\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmp_hve6yis.php on line 29\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp_hve6yis.php:39\nStack\
    \ trace:\n#0 /tmp/tmp_hve6yis.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp_hve6yis.php\
    \ on line 39\n"
  timestamp: 1659823541
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    if ($n < 0) return\
    \ 0;\n    $tri = [1, 3, 2];\n    for ($i = 3; $i <= $n; $i++) {\n        $tri[$i]\
    \ = $i % 2 == 0 ? 1 + $i / 2 : $tri[$i - 1] + $tri[$i - 2] + $tri[$i + 1];\n \
    \   }\n    return $tri;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpbs0wjiqe.php on line 22\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpbs0wjiqe.php:32\nStack\
    \ trace:\n#0 /tmp/tmpbs0wjiqe.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpbs0wjiqe.php\
    \ on line 32\n"
  timestamp: 1659823541
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    $arr = [3,2,1];\n\
    \    $i = 2;\n    while ($i < $n) {\n        $arr[] = $arr[$i] + $arr[$i - 1]\
    \ + $arr[$i - 2];\n        $i++;\n    }\n    return $arr;\n}\n\necho '<pre>';\n\
    print_r(tri(3));\necho '</pre>';\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 3\n    [1] => 2\n    [2] => 1\n    [3] => 6\n\
    )\n</pre>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi0gl0jkf.php:36\n\
    Stack trace:\n#0 /tmp/tmpi0gl0jkf.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpi0gl0jkf.php\
    \ on line 36\n"
  timestamp: 1659823541
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  if ($n == 0) {\n  \
    \  return array(1);\n  }\n  $result = array(1, 3, 2);\n  for ($i = 3; $i <= $n;\
    \ $i++) {\n    if ($i % 2 == 0) {\n      $result[] = 1 + $i / 2;\n    } else {\n\
    \      $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n    }\n\
    \  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmp8k05cou1.php on line 27\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp8k05cou1.php:38\nStack\
    \ trace:\n#0 /tmp/tmp8k05cou1.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp8k05cou1.php\
    \ on line 38\n"
  timestamp: 1659823541
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  $numbers = array();\n\
    \  for ($i = 1; $i <= $n; $i++) {\n    $numbers[] = triRecurse($i);\n  }\n  return\
    \ $numbers;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function triRecurse()\
    \ in /tmp/tmpxrull5_t.php:21\nStack trace:\n#0 /tmp/tmpxrull5_t.php(27): tri(3)\n\
    #1 /tmp/tmpxrull5_t.php(31): candidate(3)\n#2 /tmp/tmpxrull5_t.php(43): test()\n\
    #3 {main}\n  thrown in /tmp/tmpxrull5_t.php on line 21\n"
  timestamp: 1659823541
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n\n}\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp76dsni66.php:26\n\
    Stack trace:\n#0 /tmp/tmp76dsni66.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp76dsni66.php\
    \ on line 26\n"
  timestamp: 1659823541
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    if ( $n == 0 ) {\n\
    \        return [];\n    } else if ( $n == 1 ) {\n        return [1];\n    } else\
    \ if ( $n == 2 ) {\n        return [1, 3];\n    } else {\n        return [1, 3,\
    \ 2];\n    }\n}\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy30uglqs.php:34\n\
    Stack trace:\n#0 /tmp/tmpy30uglqs.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpy30uglqs.php\
    \ on line 34\n"
  timestamp: 1659823541
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  $array = array();\n\
    \  for ($i = 1; $i <= $n + 1; $i++) {\n    if ($i === 1) {\n      $array[] = 3;\n\
    \    } else if ($i === 2) {\n      $array[] = 2;\n    } else if ($i === 3) {\n\
    \      $array[] = 8;\n    } else if ($i % 2 === 0) {\n      $array[] = $i / 2;\n\
    \    } else {\n      $array[] = $array[$i - 2] + $array[$i - 3] + $array[$i -\
    \ 1];\n    }\n  }\n  return $array;\n}\nprint_r(tri(3));\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 3\n    [1] => 2\n    [2] => 8\n    [3] => 2\n)\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpe47krtk6.php:41\nStack\
    \ trace:\n#0 /tmp/tmpe47krtk6.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpe47krtk6.php\
    \ on line 41\n"
  timestamp: 1659823541
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n\t$seq = array(3, 2,\
    \ 8);\n\tif ($n < 3) {\n\t\t$seq = array_slice($seq, 0, $n + 1);\n\t} else {\n\
    \t\tfor ($i = 3; $i <= $n; $i++) {\n\t\t\t$seq[] = ($i % 2 == 0) ? (1 + $i / 2)\
    \ : ($seq[$i - 1] + $seq[$i - 2] + $seq[$i - 3]);\n\t\t}\n\t}\n\treturn $seq;\n\
    }\n\n$n = 3;\n\nprint_r(tri($n));\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 3\n    [1] => 2\n    [2] => 8\n    [3] => 13\n)\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp7qy_ia4a.php:38\nStack\
    \ trace:\n#0 /tmp/tmp7qy_ia4a.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp7qy_ia4a.php\
    \ on line 38\n"
  timestamp: 1659823541
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  $result = array();\n\
    \  $result[0] = 1;\n  $result[1] = 3;\n  $result[2] = 2;\n  for ($i = 3; $i <=\
    \ $n; $i++) {\n    if ($i % 2 == 0) {\n      $result[$i] = 1 + $i / 2;\n    }\
    \ else {\n      $result[$i] = $result[$i - 1] + $result[$i - 2] + $result[$i +\
    \ 1];\n    }\n  }\n  return $result;\n}\n\n$n = 3;\nvar_dump(tri($n));\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmp6_gpm87_.php on line 27\narray(4)\
    \ {\n  [0]=>\n  int(1)\n  [1]=>\n  int(3)\n  [2]=>\n  int(2)\n  [3]=>\n  int(5)\n\
    }\n\nWarning: Undefined array key 4 in /tmp/tmp6_gpm87_.php on line 27\n\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmp6_gpm87_.php:40\nStack trace:\n\
    #0 /tmp/tmp6_gpm87_.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp6_gpm87_.php\
    \ on line 40\n"
  timestamp: 1659823541
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    $result = array();\n\
    \    $result[0] = 1;\n    $result[1] = 3;\n    $result[2] = 2;\n    if ($n > 2)\
    \ {\n        for ($i = 3; $i <= $n; $i++) {\n            if ($i % 2 == 0) {\n\
    \                $result[$i] = 1 + ($i / 2);\n            } else {\n         \
    \       $result[$i] = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n \
    \           }\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpj3txkt0s.php on line 28\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpj3txkt0s.php:40\nStack\
    \ trace:\n#0 /tmp/tmpj3txkt0s.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpj3txkt0s.php\
    \ on line 40\n"
  timestamp: 1659823541
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    if($n <= 2) {\n \
    \       return [1, 3, 2];\n    } else {\n        $r = tri($n - 1);\n        $t\
    \ = $r[$n - 1] + $r[$n - 2] + $r[$n - 3];\n        array_push($r, $t);\n     \
    \   return $r;\n    }\n}\nprint_r(tri(10));\nfunction candidate(...$args) {\n\
    \    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 2\n    [3] => 6\n    [4]\
    \ => 11\n    [5] => 19\n    [6] => 36\n    [7] => 66\n    [8] => 121\n    [9]\
    \ => 223\n    [10] => 410\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpji9nxf_t.php:34\nStack trace:\n#0 /tmp/tmpji9nxf_t.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmpji9nxf_t.php on line 34\n"
  timestamp: 1659823541
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    $seq = array(3, 2,\
    \ 8);\n    for ($i = 3; $i <= $n; $i++) {\n        $seq[] = $i % 2 == 0 ? 1 +\
    \ $i / 2 : $seq[$i - 1] + $seq[$i - 2] + $seq[$i + 1];\n    }\n    return $seq;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpc9trjz23.php on line 21\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpc9trjz23.php:31\nStack\
    \ trace:\n#0 /tmp/tmpc9trjz23.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpc9trjz23.php\
    \ on line 31\n"
  timestamp: 1659823541
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  $result = array(1,\
    \ 3, 2);\n  if($n < 3) {\n    return array_slice($result, 0, $n);\n  }\n  for($i\
    \ = 3; $i <= $n; $i++) {\n    if($i % 2 == 0) {\n      $result[] = 1 + $i / 2;\n\
    \    } else {\n      $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i\
    \ + 1];\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmph9wletxw.php on line 27\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmph9wletxw.php:38\nStack\
    \ trace:\n#0 /tmp/tmph9wletxw.php(50): test()\n#1 {main}\n  thrown in /tmp/tmph9wletxw.php\
    \ on line 38\n"
  timestamp: 1659823541
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  if ($n == 0) {\n  \
    \  return [];\n  } elseif ($n == 1) {\n    return [3];\n  } elseif ($n == 2) {\n\
    \    return [3, 2];\n  } elseif ($n == 3) {\n    return [3, 2, 8];\n  } else {\n\
    \    return array_merge([3, 2, 8], tri($n - 1));\n  }\n}\necho implode(', ', tri(10));\n\
    function candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "3, 2, 8, 3, 2, 8, 3, 2, 8, 3, 2, 8, 3, 2, 8, 3, 2, 8, 3, 2, 8, 3, 2, 8\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpfcq13qmq.php:37\nStack\
    \ trace:\n#0 /tmp/tmpfcq13qmq.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpfcq13qmq.php\
    \ on line 37\n"
  timestamp: 1659979157
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n\t\n}\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwu4kvn4y.php:26\n\
    Stack trace:\n#0 /tmp/tmpwu4kvn4y.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpwu4kvn4y.php\
    \ on line 26\n"
  timestamp: 1659979157
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n\t$tri = array(3);\n\t\
    if($n == 0) {\n\t\treturn array();\n\t}\n\tif($n == 1) {\n\t\treturn $tri;\n\t\
    }\n\tfor($i = 1; $i < $n; $i++) {\n\t\tif($i % 2 == 0) {\n\t\t\t$tri[] = 1 + $i\
    \ / 2;\n\t\t} else {\n\t\t\t$tri[] = $tri[$i - 1] + $tri[$i - 2] + $tri[$i + 1];\n\
    \t\t}\n\t}\n\treturn $tri;\n}\n\nprint_r(tri(4));\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key -1 in /tmp/tmp6smvfelo.php on line 30\n\n\
    Warning: Undefined array key 2 in /tmp/tmp6smvfelo.php on line 30\n\nWarning:\
    \ Undefined array key 4 in /tmp/tmp6smvfelo.php on line 30\nArray\n(\n    [0]\
    \ => 3\n    [1] => 3\n    [2] => 2\n    [3] => 5\n)\n\nWarning: Undefined array\
    \ key -1 in /tmp/tmp6smvfelo.php on line 30\n\nWarning: Undefined array key 2\
    \ in /tmp/tmp6smvfelo.php on line 30\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp6smvfelo.php:42\nStack trace:\n#0 /tmp/tmp6smvfelo.php(54):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp6smvfelo.php on line 42\n"
  timestamp: 1659979157
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    $result = [];\n \
    \   $index = 1;\n    while ($index <= $n) {\n        if ($index === 1) {\n   \
    \         $result[] = 3;\n        } else if ($index % 2 === 0) {\n           \
    \ $result[] = 1 + $index / 2;\n        } else {\n            $result[] = $result[$index\
    \ - 2] + $result[$index - 1] + $result[$index + 1];\n        }\n        $index\
    \ += 1;\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 2 in /tmp/tmprhneqohp.php on line 27\n\n\
    Warning: Undefined array key 4 in /tmp/tmprhneqohp.php on line 27\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmprhneqohp.php:38\nStack trace:\n\
    #0 /tmp/tmprhneqohp.php(50): test()\n#1 {main}\n  thrown in /tmp/tmprhneqohp.php\
    \ on line 38\n"
  timestamp: 1659979157
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  $tri = array(1, 3,\
    \ 2);\n  for ($i = 3; $i <= $n; $i++) {\n    if ($i % 2 == 0) {\n      $tri[]\
    \ = 1 + $i / 2;\n    } else {\n      $tri[] = $tri[$i - 1] + $tri[$i - 2] + $tri[$i\
    \ + 1];\n    }\n  }\n  return $tri;\n}\necho var_dump(tri(3));\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmppz69abrz.php on line 24\narray(4)\
    \ {\n  [0]=>\n  int(1)\n  [1]=>\n  int(3)\n  [2]=>\n  int(2)\n  [3]=>\n  int(5)\n\
    }\n\nWarning: Undefined array key 4 in /tmp/tmppz69abrz.php on line 24\n\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmppz69abrz.php:35\nStack trace:\n\
    #0 /tmp/tmppz69abrz.php(47): test()\n#1 {main}\n  thrown in /tmp/tmppz69abrz.php\
    \ on line 35\n"
  timestamp: 1659979157
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    $tribonacci = [3,\
    \ 2, 1];\n    if ($n < 3) {\n        return $tribonacci;\n    }\n    for ($i =\
    \ 0; $i < $n - 2; $i++) {\n        $tribonacci[] = $tribonacci[$i] + $tribonacci[$i\
    \ + 1] + $tribonacci[$i + 2];\n    }\n    return $tribonacci;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf6l5jj7a.php:34\n\
    Stack trace:\n#0 /tmp/tmpf6l5jj7a.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpf6l5jj7a.php\
    \ on line 34\n"
  timestamp: 1659979157
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  $result = [];\n  $a\
    \ = 3;\n  $b = 2;\n  $c = 1;\n  $result[0] = $a;\n  $result[1] = $b;\n  $result[2]\
    \ = $c;\n  for ($i = 3; $i <= $n; $i++) {\n    $tri = $a + $b + $c;\n    array_push($result,\
    \ $tri);\n    $a = $b;\n    $b = $c;\n    $c = $tri;\n  }\n  return $result;\n\
    }\n\n$result = tri(3);\nforeach ($result as $tri) {\n  echo $tri . \" \";\n}\n\
    function candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "3 2 1 6 \nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr8_24jrg.php:45\n\
    Stack trace:\n#0 /tmp/tmpr8_24jrg.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpr8_24jrg.php\
    \ on line 45\n"
  timestamp: 1659979157
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  $sequence = array(3);\n\
    \  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 2 == 0) {\n      $sequence[] =\
    \ $i / 2;\n    } else {\n      $sequence[] = $sequence[$i - 1] + $sequence[$i\
    \ - 2] + $sequence[$i - 3];\n    }\n  }\n  return $sequence;\n}\necho tri(3);\n\
    function candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key -1 in /tmp/tmp6l8cwvyo.php on line 24\n\n\
    Warning: Undefined array key -2 in /tmp/tmp6l8cwvyo.php on line 24\n\nWarning:\
    \ Array to string conversion in /tmp/tmp6l8cwvyo.php on line 29\nArray\nWarning:\
    \ Undefined array key -1 in /tmp/tmp6l8cwvyo.php on line 24\n\nWarning: Undefined\
    \ array key -2 in /tmp/tmp6l8cwvyo.php on line 24\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp6l8cwvyo.php:35\nStack trace:\n#0 /tmp/tmp6l8cwvyo.php(47):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp6l8cwvyo.php on line 35\n"
  timestamp: 1659979157
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  $i = 1;\n  $result\
    \ = array();\n  while($i <= $n) {\n    if ($i == 1) {\n      $result[] = 3;\n\
    \    } elseif ($i == 2) {\n      $result[] = 2;\n    } elseif ($i == 3) {\n  \
    \    $result[] = 8;\n    } else {\n      $result[] = $result[$i - 1] + $result[$i\
    \ - 2] + $result[$i - 3];\n    }\n    $i++;\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyfoq9hy8.php:41\n\
    Stack trace:\n#0 /tmp/tmpyfoq9hy8.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpyfoq9hy8.php\
    \ on line 41\n"
  timestamp: 1659979157
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    $arr = [1, 3, 2];\n\
    \    for ($i = 3; $i <= $n; $i++) {\n        if ($i % 2 == 0) $arr[] = 1 + ($i\
    \ / 2);\n        else $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n \
    \   }\n    return $arr;\n}\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpkd0q56wm.php on line 22\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpkd0q56wm.php:31\nStack\
    \ trace:\n#0 /tmp/tmpkd0q56wm.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpkd0q56wm.php\
    \ on line 31\n"
  timestamp: 1659979157
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    $k = floor($n / 2);\n\
    \    $s = 1 + $k;\n    $t = 3;\n    if ($n % 2 === 0) {\n        return [$s, $t];\n\
    \    }\n    $tris = [1, 1, $t];\n    for ($i = 1; $i < $k; $i++) {\n        $s\
    \ = $tris[$i] + $tris[$i - 1] + $tris[$i + 1];\n        $tris[] = $s;\n    }\n\
    \    $tris[] = $t;\n    return $tris;\n}\necho implode(', ', tri(3)) . PHP_EOL;\n\
    echo implode(', ', tri(5)) . PHP_EOL;\necho implode(', ', tri(10)) . PHP_EOL;\n\
    echo implode(', ', tri(100)) . PHP_EOL;\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1, 1, 3, 3\n1, 1, 3, 5, 3\n6, 3\n51, 3\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpq6qbkrcp.php:42\nStack trace:\n#0 /tmp/tmpq6qbkrcp.php(54):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpq6qbkrcp.php on line 42\n"
  timestamp: 1659979157
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n\t// Add code here\n\
    \  $result = array();\n  $result[0] = 1;\n  $result[1] = 3;\n  $result[2] = 2;\n\
    \  for ($i = 3; $i <= $n; $i++) {\n    if ($i % 2 === 0) {\n      $result[$i]\
    \ = (1 + $i / 2);\n    } else {\n      $result[$i] = ($result[$i - 1] + $result[$i\
    \ - 2] + $result[$i + 1]);\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmp08sirbw7.php on line 28\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp08sirbw7.php:39\nStack\
    \ trace:\n#0 /tmp/tmp08sirbw7.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp08sirbw7.php\
    \ on line 39\n"
  timestamp: 1659979157
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    // Your code goes\
    \ here\n    $t = [3, 2, 1];\n    for ($i = 2; $i < $n; $i++) {\n        if ($i\
    \ % 2 == 0) {\n            $t[] = 1 + ($i / 2);\n        } else {\n          \
    \  $t[] = $t[$i - 1] + $t[$i - 2] + $t[$i + 1];\n        }\n    }\n    return\
    \ $t;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxikke8dc.php:36\n\
    Stack trace:\n#0 /tmp/tmpxikke8dc.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpxikke8dc.php\
    \ on line 36\n"
  timestamp: 1659979157
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  $result = [];\n  if($n\
    \ >= 1) {\n    $result[0] = 3;\n  }\n  if($n >= 2) {\n    $result[1] = 2;\n  }\n\
    \  if($n >= 3) {\n    $result[2] = 8;\n  }\n  for($i = 3; $i <= $n; $i++) {\n\
    \    $result[$i] = $result[$i - 1] + $result[$i - 2] + $result[$i - 3];\n  }\n\
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1pesfgt7.php:40\n\
    Stack trace:\n#0 /tmp/tmp1pesfgt7.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp1pesfgt7.php\
    \ on line 40\n"
  timestamp: 1659979157
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    $tribonacci = array(1,\
    \ 3, 2);\n    $tribonacci[$n] = 0;\n    for ($i = 3; $i <= $n; $i++) {\n     \
    \   if ($i % 2 == 0) {\n            $tribonacci[$i] = 1 + ($i / 2);\n        }\
    \ else {\n            $tribonacci[$i] = $tribonacci[$i - 1] + $tribonacci[$i -\
    \ 2] + $tribonacci[$i + 1];\n        }\n    }\n    return $tribonacci;\n}\n\n\
    function candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmp3k0mxqtk.php on line 25\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp3k0mxqtk.php:36\nStack\
    \ trace:\n#0 /tmp/tmp3k0mxqtk.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp3k0mxqtk.php\
    \ on line 36\n"
  timestamp: 1659979157
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  $tri = array(3);\n\
    \  for ($i = 1; $i <= $n; $i++) {\n    $tri[$i] = ($i % 2 == 0) ? (1 + ($i / 2))\
    \ : ($tri[$i - 1] + $tri[$i - 2] + $tri[$i + 1]);\n  }\n  return $tri;\n}\n\n\
    echo implode(', ', tri(3));\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key -1 in /tmp/tmpw5n9gkj2.php on line 21\n\n\
    Warning: Undefined array key 2 in /tmp/tmpw5n9gkj2.php on line 21\n\nWarning:\
    \ Undefined array key 4 in /tmp/tmpw5n9gkj2.php on line 21\n3, 3, 2, 5\nWarning:\
    \ Undefined array key -1 in /tmp/tmpw5n9gkj2.php on line 21\n\nWarning: Undefined\
    \ array key 2 in /tmp/tmpw5n9gkj2.php on line 21\n\nWarning: Undefined array key\
    \ 4 in /tmp/tmpw5n9gkj2.php on line 21\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpw5n9gkj2.php:32\nStack trace:\n#0 /tmp/tmpw5n9gkj2.php(44):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpw5n9gkj2.php on line 32\n"
  timestamp: 1659979157
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n\t$arr = array(1, 3,\
    \ 2);\n\tif($n < 3) {\n\t\treturn array_slice($arr, 0, $n + 1);\n\t}\n\tfor($i\
    \ = 3; $i <= $n; $i++) {\n\t\tif($i % 2 === 0) {\n\t\t\t$arr[] = 1 + ($i / 2);\n\
    \t\t} else {\n\t\t\t$arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n\t\t\
    }\n\t}\n\treturn $arr;\n}\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpcx_v493w.php on line 27\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpcx_v493w.php:37\nStack\
    \ trace:\n#0 /tmp/tmpcx_v493w.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpcx_v493w.php\
    \ on line 37\n"
  timestamp: 1659979157
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  $arr = [1, 3, 2];\n\
    \  for ($i = 3; $i <= $n; $i++) {\n    if ($i % 2 === 0) {\n      $arr[] = 1 +\
    \ ($i / 2);\n    } else {\n      $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i\
    \ + 1];\n    }\n  }\n  return $arr;\n}\n\nfunction candidate(...$args) {\n   \
    \ return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !==\
    \ array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmp4niyetkl.php on line 24\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp4niyetkl.php:35\nStack\
    \ trace:\n#0 /tmp/tmp4niyetkl.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp4niyetkl.php\
    \ on line 35\n"
  timestamp: 1659979157
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  $res = [];\n  for ($i\
    \ = 0; $i <= $n; $i++) {\n    if ($i == 0) {\n      $res[] = 1;\n    } elseif\
    \ ($i == 1) {\n      $res[] = 3;\n    } elseif ($i == 2) {\n      $res[] = 2;\n\
    \    } elseif ($i % 2 == 0) {\n      $res[] = 1 + $i / 2;\n    } else {\n    \
    \  $res[] = $res[$i - 1] + $res[$i - 2] + $res[$i + 1];\n    }\n  }\n  return\
    \ $res;\n}\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpyij4dpxj.php on line 30\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpyij4dpxj.php:40\nStack\
    \ trace:\n#0 /tmp/tmpyij4dpxj.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpyij4dpxj.php\
    \ on line 40\n"
  timestamp: 1659979157
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  if ($n == 0) {\n  \
    \  return array();\n  }\n  if ($n == 1) {\n    return array(3);\n  }\n  if ($n\
    \ == 2) {\n    return array(3, 2);\n  }\n  $result = array(3, 2, 8);\n  for ($i\
    \ = 3; $i <= $n; $i++) {\n    if ($i % 2 == 0) {\n      $result[] = 1 + ($i /\
    \ 2);\n    } else {\n      $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i\
    \ + 1];\n    }\n  }\n  return $result;\n}\nfunction candidate(...$args) {\n  \
    \  return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !==\
    \ array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmp1t9n_jhd.php on line 33\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp1t9n_jhd.php:43\nStack\
    \ trace:\n#0 /tmp/tmp1t9n_jhd.php(55): test()\n#1 {main}\n  thrown in /tmp/tmp1t9n_jhd.php\
    \ on line 43\n"
  timestamp: 1659979157
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    $array = array();\n\
    \    for ($i = 1; $i <= $n + 1; $i++) {\n        if ($i == 1) {\n            $array[]\
    \ = 3;\n        } elseif ($i % 2 == 0) {\n            $array[] = 1 + $i / 2;\n\
    \        } else {\n            $array[] = $array[$i - 2] + $array[$i - 3] + $array[$i\
    \ - 1];\n        }\n    }\n    return $array;\n}\n$n = readline('Enter a number:\
    \ ');\nprint_r(tri($n));\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function readline() in\
    \ /tmp/tmpqvs7cf31.php:31\nStack trace:\n#0 {main}\n  thrown in /tmp/tmpqvs7cf31.php\
    \ on line 31\n"
  timestamp: 1659979157
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  if ($n == 0) {\n  \
    \  return array();\n  }\n  $tri_arr = array(1, 3, 2);\n  for ($i = 3; $i <= $n;\
    \ $i++) {\n    if ($i % 2 == 0) {\n      $tri_arr[] = 1 + $i / 2;\n    } else\
    \ {\n      $tri_arr[] = $tri_arr[$i - 1] + $tri_arr[$i - 2] + $tri_arr[$i + 1];\n\
    \    }\n  }\n  return $tri_arr;\n}\nprint_r(tri(3));\nprint_r(tri(4));\nprint_r(tri(5));\n\
    print_r(tri(6));\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpz6d3sh9s.php on line 27\nArray\n\
    (\n    [0] => 1\n    [1] => 3\n    [2] => 2\n    [3] => 5\n)\n\nWarning: Undefined\
    \ array key 4 in /tmp/tmpz6d3sh9s.php on line 27\nArray\n(\n    [0] => 1\n   \
    \ [1] => 3\n    [2] => 2\n    [3] => 5\n    [4] => 3\n)\n\nWarning: Undefined\
    \ array key 4 in /tmp/tmpz6d3sh9s.php on line 27\n\nWarning: Undefined array key\
    \ 6 in /tmp/tmpz6d3sh9s.php on line 27\nArray\n(\n    [0] => 1\n    [1] => 3\n\
    \    [2] => 2\n    [3] => 5\n    [4] => 3\n    [5] => 8\n)\n\nWarning: Undefined\
    \ array key 4 in /tmp/tmpz6d3sh9s.php on line 27\n\nWarning: Undefined array key\
    \ 6 in /tmp/tmpz6d3sh9s.php on line 27\nArray\n(\n    [0] => 1\n    [1] => 3\n\
    \    [2] => 2\n    [3] => 5\n    [4] => 3\n    [5] => 8\n    [6] => 4\n)\n\nWarning:\
    \ Undefined array key 4 in /tmp/tmpz6d3sh9s.php on line 27\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpz6d3sh9s.php:41\nStack trace:\n#0 /tmp/tmpz6d3sh9s.php(53):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpz6d3sh9s.php on line 41\n"
  timestamp: 1659979157
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    if ($n == 0) {\n\
    \        return [];\n    }\n    $t = [1, 3, 2];\n    if ($n == 1) {\n        return\
    \ [1];\n    }\n    if ($n == 2) {\n        return [1, 3];\n    }\n    if ($n ==\
    \ 3) {\n        return [1, 3, 2];\n    }\n    for ($i = 3; $i < $n; $i++) {\n\
    \        if ($i % 2 == 0) {\n            $t[] = 1 + $i / 2;\n        } else {\n\
    \            $t[] = $t[$i - 1] + $t[$i - 2] + $t[$i + 1];\n        }\n    }\n\
    \    return $t;\n}\n\nprint_r(tri(10));\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpsoair8tn.php on line 36\n\n\
    Warning: Undefined array key 6 in /tmp/tmpsoair8tn.php on line 36\n\nWarning:\
    \ Undefined array key 8 in /tmp/tmpsoair8tn.php on line 36\n\nWarning: Undefined\
    \ array key 10 in /tmp/tmpsoair8tn.php on line 36\nArray\n(\n    [0] => 1\n  \
    \  [1] => 3\n    [2] => 2\n    [3] => 5\n    [4] => 3\n    [5] => 8\n    [6] =>\
    \ 4\n    [7] => 12\n    [8] => 5\n    [9] => 17\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpsoair8tn.php:48\nStack trace:\n#0 /tmp/tmpsoair8tn.php(60):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpsoair8tn.php on line 48\n"
  timestamp: 1659979157
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    if($n < 1) return\
    \ 0;\n    $ans = [1, 3, 2];\n    if($n == 1) return $ans;\n    $ans[] = 8;\n \
    \   if($n == 2) return $ans;\n    $ans[] = 11;\n    if($n == 3) return $ans;\n\
    \    for($i = 4; $i <= $n; $i++) {\n        $ans[] = $ans[$i - 1] + $ans[$i -\
    \ 2] + $ans[$i - 3];\n    }\n    return $ans;\n}\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnxiy22o5.php:36\n\
    Stack trace:\n#0 /tmp/tmpnxiy22o5.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpnxiy22o5.php\
    \ on line 36\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n\t$result = [];\n\tfor\
    \ ($i = 1; $i <= $n; $i++) {\n\t\tif ($i % 2 == 0) {\n\t\t\t$result[] = 1 + $i\
    \ / 2;\n\t\t} else {\n\t\t\t$result[] = $result[$i - 1] + $result[$i - 2] + $result[$i\
    \ + 1];\n\t\t}\n\t}\n\treturn $result;\n}\nprint_r(tri(5));\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpj9fjuq49.php on line 24\n\n\
    Warning: Undefined array key -1 in /tmp/tmpj9fjuq49.php on line 24\n\nWarning:\
    \ Undefined array key 2 in /tmp/tmpj9fjuq49.php on line 24\n\nWarning: Undefined\
    \ array key 2 in /tmp/tmpj9fjuq49.php on line 24\n\nWarning: Undefined array key\
    \ 4 in /tmp/tmpj9fjuq49.php on line 24\n\nWarning: Undefined array key 4 in /tmp/tmpj9fjuq49.php\
    \ on line 24\n\nWarning: Undefined array key 6 in /tmp/tmpj9fjuq49.php on line\
    \ 24\nArray\n(\n    [0] => 0\n    [1] => 2\n    [2] => 2\n    [3] => 3\n    [4]\
    \ => 3\n)\n\nWarning: Undefined array key 0 in /tmp/tmpj9fjuq49.php on line 24\n\
    \nWarning: Undefined array key -1 in /tmp/tmpj9fjuq49.php on line 24\n\nWarning:\
    \ Undefined array key 2 in /tmp/tmpj9fjuq49.php on line 24\n\nWarning: Undefined\
    \ array key 2 in /tmp/tmpj9fjuq49.php on line 24\n\nWarning: Undefined array key\
    \ 4 in /tmp/tmpj9fjuq49.php on line 24\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpj9fjuq49.php:35\nStack trace:\n#0 /tmp/tmpj9fjuq49.php(47):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpj9fjuq49.php on line 35\n"
  timestamp: 1659979157
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  if ($n == 0) return\
    \ array(1);\n  $i = 0;\n  $result = array(1, 3, 2);\n  while ($i < $n - 1) {\n\
    \    $result[] = end($result) % 2 == 0 ? end($result) / 2 : end($result) - 1 +\
    \ end($result) - 2 + end($result) + 1;\n    $i++;\n  }\n  return $result;\n}\n\
    function candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2hsl8xab.php:33\n\
    Stack trace:\n#0 /tmp/tmp2hsl8xab.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp2hsl8xab.php\
    \ on line 33\n"
  timestamp: 1659979157
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n\t$l = [3, 1, 2];\n\t\
    while (count($l) <= $n) {\n\t\t$last = end($l);\n\t\tif ($last % 2 == 0) {\n\t\
    \t\t$l[] = 1 + $last / 2;\n\t\t} else {\n\t\t\t$l[] = $l[count($l) - 1] + $l[count($l)\
    \ - 2] + $l[count($l) - 3];\n\t\t}\n\t}\n\treturn $l;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjm2u3rvm.php:36\n\
    Stack trace:\n#0 /tmp/tmpjm2u3rvm.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpjm2u3rvm.php\
    \ on line 36\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    $tri = array(1, 3,\
    \ 2);\n    if ($n > 2) {\n        for ($i = 3; $i <= $n; $i++) {\n           \
    \ if ($i % 2) {\n                $tri[$i] = $tri[$i - 1] + $tri[$i - 2] + $tri[$i\
    \ + 1];\n            } else {\n                $tri[$i] = 1 + ($i / 2);\n    \
    \        }\n        }\n    }\n    return $tri;\n}\nprint_r(tri(3));\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmp8rqp3dzu.php on line 23\nArray\n\
    (\n    [0] => 1\n    [1] => 3\n    [2] => 2\n    [3] => 5\n)\n\nWarning: Undefined\
    \ array key 4 in /tmp/tmp8rqp3dzu.php on line 23\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp8rqp3dzu.php:37\nStack trace:\n#0 /tmp/tmp8rqp3dzu.php(49):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp8rqp3dzu.php on line 37\n"
  timestamp: 1659979157
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    $nums = array();\n\
    \    for ($i = 1; $i <= $n + 1; $i++) {\n        if ($i == 1) {\n            $nums[]\
    \ = 3;\n        } else if ($i == 2) {\n            $nums[] = 2;\n        } else\
    \ if ($i == 3) {\n            $nums[] = 8;\n        } else {\n            $nums[]\
    \ = $nums[$i - 2] + $nums[$i - 3] + $nums[$i - 4];\n        }\n    }\n    return\
    \ $nums;\n}\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1,\
    \ 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63,\
    \ 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl70ir6wx.php:38\n\
    Stack trace:\n#0 /tmp/tmpl70ir6wx.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpl70ir6wx.php\
    \ on line 38\n"
  timestamp: 1659979157
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n\tif($n == 0) return\
    \ array(0);\n\t$a = array(1, 3, 2);\n\tfor($i = 3; $i <= $n; $i++) {\n\t\t$a[$i]\
    \ = ($i % 2 == 0) ? (1 + $i / 2) : ($a[$i - 1] + $a[$i - 2] + $a[$i + 1]);\n\t\
    }\n\treturn $a;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmp_vhwtwuv.php on line 22\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp_vhwtwuv.php:32\nStack\
    \ trace:\n#0 /tmp/tmp_vhwtwuv.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp_vhwtwuv.php\
    \ on line 32\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  $n++;\n  $result[0]\
    \ = 1;\n  $result[1] = 3;\n  $result[2] = 2;\n  if ($n == 1) {\n    return array($result[0]);\n\
    \  }\n  if ($n == 2) {\n    return array($result[0], $result[1]);\n  }\n  if ($n\
    \ == 3) {\n    return array($result[0], $result[1], $result[2]);\n  }\n  for ($i\
    \ = 3; $i < $n; $i++) {\n    if ($i % 2 == 0) {\n      $result[$i] = 1 + $i /\
    \ 2;\n    } else {\n      $result[$i] = $result[$i - 1] + $result[$i - 2] + $result[$i\
    \ + 1];\n    }\n  }\n  return $result;\n}\nprint_r(tri(3));\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmp5jy5ryaq.php on line 36\nArray\n\
    (\n    [0] => 1\n    [1] => 3\n    [2] => 2\n    [3] => 5\n)\n\nWarning: Undefined\
    \ array key 4 in /tmp/tmp5jy5ryaq.php on line 36\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp5jy5ryaq.php:47\nStack trace:\n#0 /tmp/tmp5jy5ryaq.php(59):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp5jy5ryaq.php on line 47\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  $arr = array(1, 3,\
    \ 2);\n  $i = 0;\n  while($i < $n) {\n    $a = $arr[$i];\n    $b = $arr[$i + 1];\n\
    \    $c = $arr[$i + 2];\n    if(($i + 1) % 2 == 0) {\n      $d = 1 + ($i + 1)\
    \ / 2;\n    } else {\n      $d = $a + $b + $c;\n    }\n    $arr[] = $d;\n    $i++;\n\
    \  }\n  return $arr;\n}\n$n = 3;\n$arr = tri($n);\necho \"<pre>\";\nprint_r($arr);\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 2\n    [3] => 6\n\
    \    [4] => 2\n    [5] => 10\n)\n</pre>\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmphkv3wumj.php:45\nStack trace:\n#0 /tmp/tmphkv3wumj.php(57):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmphkv3wumj.php on line 45\n"
  timestamp: 1659979157
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  $a = array();\n  for\
    \ ($i = 0; $i <= $n; $i++) {\n    if ($i == 0) {\n      $a[$i] = 1;\n    } elseif\
    \ ($i == 1) {\n      $a[$i] = 3;\n    } elseif ($i == 2) {\n      $a[$i] = 2;\n\
    \    } elseif ($i % 2 == 0) {\n      $a[$i] = 1 + $i / 2;\n    } else {\n    \
    \  $a[$i] = $a[$i - 1] + $a[$i - 2] + $a[$i + 1];\n    }\n  }\n  return $a;\n\
    }\necho \"<pre>\";\nprint_r(tri(0));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(tri(1));\n\
    echo \"</pre>\";\n\necho \"<pre>\";\nprint_r(tri(2));\necho \"</pre>\";\n\necho\
    \ \"<pre>\";\nprint_r(tri(3));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(tri(4));\n\
    echo \"</pre>\";\n\necho \"<pre>\";\nprint_r(tri(5));\necho \"</pre>\";\n\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n)\n</pre><pre>Array\n(\n    [0] => 1\n   \
    \ [1] => 3\n)\n</pre><pre>Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 2\n\
    )\n</pre><pre>\nWarning: Undefined array key 4 in /tmp/tmptg1eaw89.php on line\
    \ 30\nArray\n(\n    [0] => 1\n    [1] => 3\n    [2] => 2\n    [3] => 5\n)\n</pre><pre>\n\
    Warning: Undefined array key 4 in /tmp/tmptg1eaw89.php on line 30\nArray\n(\n\
    \    [0] => 1\n    [1] => 3\n    [2] => 2\n    [3] => 5\n    [4] => 3\n)\n</pre><pre>\n\
    Warning: Undefined array key 4 in /tmp/tmptg1eaw89.php on line 30\n\nWarning:\
    \ Undefined array key 6 in /tmp/tmptg1eaw89.php on line 30\nArray\n(\n    [0]\
    \ => 1\n    [1] => 3\n    [2] => 2\n    [3] => 5\n    [4] => 3\n    [5] => 8\n\
    )\n</pre>\nWarning: Undefined array key 4 in /tmp/tmptg1eaw89.php on line 30\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmptg1eaw89.php:64\nStack\
    \ trace:\n#0 /tmp/tmptg1eaw89.php(76): test()\n#1 {main}\n  thrown in /tmp/tmptg1eaw89.php\
    \ on line 64\n"
  timestamp: 1659979157
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  if ($n == 0) return\
    \ 1;\n  if ($n == 1) return 3;\n  if ($n == 2) return 2;\n  $array = array(1,\
    \ 3, 2);\n  for ($i = 3; $i <= $n; $i++) {\n    if ($i % 2) {\n      $array[$i]\
    \ = $array[$i - 3] + $array[$i - 2] + $array[$i - 1];\n    } else {\n      $array[$i]\
    \ = $i / 2 + 1;\n    }\n  }\n  return $array;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbmot1vdf.php:38\n\
    Stack trace:\n#0 /tmp/tmpbmot1vdf.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpbmot1vdf.php\
    \ on line 38\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  $tri = array(1, 3,\
    \ 2);\n  for ($i = 0; $i < $n; $i++) {\n    if (count($tri) > $n) {\n      break;\n\
    \    }\n    if (count($tri) % 2 == 0) {\n      $tri[] = 1 + count($tri) / 2;\n\
    \    } else {\n      $tri[] = $tri[count($tri) - 1] + $tri[count($tri) - 2] +\
    \ $tri[count($tri) + 1];\n    }\n  }\n  return $tri;\n}\nprint_r(tri(3));\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpfv_6_7rp.php on line 27\nArray\n\
    (\n    [0] => 1\n    [1] => 3\n    [2] => 2\n    [3] => 5\n)\n\nWarning: Undefined\
    \ array key 4 in /tmp/tmpfv_6_7rp.php on line 27\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpfv_6_7rp.php:38\nStack trace:\n#0 /tmp/tmpfv_6_7rp.php(50):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpfv_6_7rp.php on line 38\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    $tribonacci = [3,\
    \ 2, 1];\n    for ($i = 3; $i <= $n; $i++) {\n        $tribonacci[$i] = $tribonacci[$i\
    \ - 1] + $tribonacci[$i - 2] + $tribonacci[$i - 3];\n    }\n    return $tribonacci;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_2oagx7l.php:31\n\
    Stack trace:\n#0 /tmp/tmp_2oagx7l.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp_2oagx7l.php\
    \ on line 31\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    $output = [];\n \
    \   for ($i = 1; $i <= $n; $i++) {\n        $output[] = tri2($i);\n    }\n   \
    \ return $output;\n}\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function tri2() in /tmp/tmp_tqfcaay.php:21\n\
    Stack trace:\n#0 /tmp/tmp_tqfcaay.php(26): tri(3)\n#1 /tmp/tmp_tqfcaay.php(30):\
    \ candidate(3)\n#2 /tmp/tmp_tqfcaay.php(42): test()\n#3 {main}\n  thrown in /tmp/tmp_tqfcaay.php\
    \ on line 21\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    if ($n == 0) {\n\
    \        return array(1);\n    } else if ($n == 1) {\n        return array(1,\
    \ 3);\n    } else if ($n == 2) {\n        return array(1, 3, 2);\n    } else {\n\
    \        return array_merge(array(1, 3, 2), helper($n - 3));\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function helper() in /tmp/tmpyj9zoq_b.php:26\n\
    Stack trace:\n#0 /tmp/tmpyj9zoq_b.php(31): tri(3)\n#1 /tmp/tmpyj9zoq_b.php(35):\
    \ candidate(3)\n#2 /tmp/tmpyj9zoq_b.php(47): test()\n#3 {main}\n  thrown in /tmp/tmpyj9zoq_b.php\
    \ on line 26\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    $n++;\n    for ($i\
    \ = 0; $i < $n; $i++) {\n        $tri[$i] = 0;\n    }\n    $tri[0] = 1;\n    $tri[1]\
    \ = 3;\n    $tri[2] = 2;\n    for ($i = 3; $i < $n; $i++) {\n        if ($i %\
    \ 2 == 0) {\n            $tri[$i] = 1 + $i / 2;\n        } else {\n          \
    \  $tri[$i] = $tri[$i - 1] + $tri[$i - 2] + $tri[$i + 1];\n        }\n    }\n\
    \    return $tri;\n}\nprint_r(tri(3));\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpxh9cfots.php on line 30\nArray\n\
    (\n    [0] => 1\n    [1] => 3\n    [2] => 2\n    [3] => 5\n)\n\nWarning: Undefined\
    \ array key 4 in /tmp/tmpxh9cfots.php on line 30\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpxh9cfots.php:41\nStack trace:\n#0 /tmp/tmpxh9cfots.php(53):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpxh9cfots.php on line 41\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    $seq = array(1, 3,\
    \ 2);\n    for ($i = 3; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n      \
    \      $seq[] = 1 + ($i / 2);\n        } else {\n            $seq[] = $seq[$i\
    \ - 1] + $seq[$i - 2] + $seq[$i + 1];\n        }\n    }\n    return $seq;\n}\n\
    \nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpny_rr61p.php on line 24\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpny_rr61p.php:35\nStack\
    \ trace:\n#0 /tmp/tmpny_rr61p.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpny_rr61p.php\
    \ on line 35\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  if ($n === 0) return\
    \ [1];\n  if ($n === 1) return [1, 3];\n  if ($n === 2) return [1, 3, 2];\n  $a\
    \ = [1, 3, 2];\n  for ($i = 3; $i <= $n; $i++) {\n    $a[] = $i % 2 === 0 ? $i\
    \ / 2 : $a[$i - 1] + $a[$i - 2] + $a[$i + 1];\n  }\n  return $a;\n}\nprint_r(tri(3));\n\
    function candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpfzwp1rqs.php on line 24\nArray\n\
    (\n    [0] => 1\n    [1] => 3\n    [2] => 2\n    [3] => 5\n)\n\nWarning: Undefined\
    \ array key 4 in /tmp/tmpfzwp1rqs.php on line 24\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpfzwp1rqs.php:34\nStack trace:\n#0 /tmp/tmpfzwp1rqs.php(46):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpfzwp1rqs.php on line 34\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n\t$tri[0] = 0;\n\t$tri[1]\
    \ = 3;\n\tfor ($i = 2; $i <= $n; $i++) {\n\t\tif ($i % 2 == 0) {\n\t\t\t$tri[$i]\
    \ = 1 + $i / 2;\n\t\t} else {\n\t\t\t$tri[$i] = $tri[$i - 1] + $tri[$i - 2] +\
    \ $tri[$i + 1];\n\t\t}\n\t}\n\t\n\treturn $tri;\n}\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpfa_31rlx.php on line 25\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpfa_31rlx.php:36\nStack\
    \ trace:\n#0 /tmp/tmpfa_31rlx.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpfa_31rlx.php\
    \ on line 36\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    if ($n == 0) {\n\
    \        return [];\n    } else if ($n == 1) {\n        return [3];\n    } else\
    \ if ($n == 2) {\n        return [3, 2];\n    } else {\n        $result = [3,\
    \ 2, 8];\n        for ($i = 3; $i <= $n; $i++) {\n            if ($i % 2 == 0)\
    \ {\n                $result[] = 1 + $i / 2;\n            } else {\n         \
    \       $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n   \
    \         }\n        }\n        return $result;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpf_6nj9u5.php on line 31\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpf_6nj9u5.php:43\nStack\
    \ trace:\n#0 /tmp/tmpf_6nj9u5.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpf_6nj9u5.php\
    \ on line 43\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  $ret = array(1, 3,\
    \ 2);\n  if ($n > 2) {\n    for ($i = 3; $i <= $n; $i++) {\n      if ($i % 2 ==\
    \ 0) {\n        $ret[] = 1 + $i / 2;\n      } else {\n        $ret[] = $ret[$i\
    \ - 1] + $ret[$i - 2] + $ret[$i + 1];\n      }\n    }\n  }\n  return $ret;\n}\n\
    print_r(tri(3));\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpgqbyijlk.php on line 25\nArray\n\
    (\n    [0] => 1\n    [1] => 3\n    [2] => 2\n    [3] => 5\n)\n\nWarning: Undefined\
    \ array key 4 in /tmp/tmpgqbyijlk.php on line 25\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpgqbyijlk.php:37\nStack trace:\n#0 /tmp/tmpgqbyijlk.php(49):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpgqbyijlk.php on line 37\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    $tribonacci = [1,\
    \ 3, 2];\n    for ($i = 0; $i < $n; $i++) {\n        $tribonacci[] = (($i + 1)\
    \ % 2) ? $tribonacci[$i] + $tribonacci[$i - 1] + $tribonacci[$i + 1] : 1 + (($i\
    \ + 1) / 2);\n    }\n    return $tribonacci;\n}\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key -1 in /tmp/tmpny529j5g.php on line 21\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpny529j5g.php:30\nStack\
    \ trace:\n#0 /tmp/tmpny529j5g.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpny529j5g.php\
    \ on line 30\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    $arr = [1, 3, 2];\n\
    \    for ($i = 3; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n            $arr[]\
    \ = 1 + ($i / 2);\n        } else {\n            $arr[] = $arr[$i - 1] + $arr[$i\
    \ - 2] + $arr[$i + 1];\n        }\n    }\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpj1pjm7c6.php on line 24\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpj1pjm7c6.php:35\nStack\
    \ trace:\n#0 /tmp/tmpj1pjm7c6.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpj1pjm7c6.php\
    \ on line 35\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    if ($n == 0) {\n\
    \        return [1];\n    }\n    if ($n == 1) {\n        return [1, 3];\n    }\n\
    \    if ($n == 2) {\n        return [1, 3, 2];\n    }\n    $tribonacci = [1, 3,\
    \ 2];\n    for ($i = 3; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n      \
    \      $tribonacci[] = 1 + $i / 2;\n        } else {\n            $tribonacci[]\
    \ = $tribonacci[$i - 1] + $tribonacci[$i - 2] + $tribonacci[$i + 1];\n       \
    \ }\n    }\n    return $tribonacci;\n}\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpmzpoyzxu.php on line 33\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpmzpoyzxu.php:43\nStack\
    \ trace:\n#0 /tmp/tmpmzpoyzxu.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpmzpoyzxu.php\
    \ on line 43\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  if ($n == 0) {\n  \
    \  return array(0);\n  } else if ($n == 1) {\n    return array(1, 3);\n  } else\
    \ if ($n == 2) {\n    return array(1, 3, 2);\n  } else {\n    $tri = array(1,\
    \ 3, 2);\n    for ($i = 3; $i <= $n; $i++) {\n      if ($i % 2 == 0) {\n     \
    \   $val = 1 + $i / 2;\n      } else {\n        $val = $tri[$i - 1] + $tri[$i\
    \ - 2] + $tri[$i + 1];\n      }\n      $tri[] = $val;\n    }\n    return $tri;\n\
    \  }\n}\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpp06gsvbn.php on line 31\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpp06gsvbn.php:43\nStack\
    \ trace:\n#0 /tmp/tmpp06gsvbn.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpp06gsvbn.php\
    \ on line 43\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n\t$results = array(1,\
    \ 3, 2);\n\t$m = 0;\n\tfor ($i = 3; $i <= $n; $i++) {\n\t\tif ($i % 2 == 0) {\n\
    \t\t\t$results[$i] = 1 + $i / 2;\n\t\t} else {\n\t\t\t$results[$i] = $results[$i\
    \ - 1] + $results[$i - 2] + $results[$i + 1];\n\t\t}\n\t}\n\treturn $results;\n\
    }\nprint_r(tri(3));\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmp18hzp5ni.php on line 25\nArray\n\
    (\n    [0] => 1\n    [1] => 3\n    [2] => 2\n    [3] => 5\n)\n\nWarning: Undefined\
    \ array key 4 in /tmp/tmp18hzp5ni.php on line 25\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp18hzp5ni.php:36\nStack trace:\n#0 /tmp/tmp18hzp5ni.php(48):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp18hzp5ni.php on line 36\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    $fib = [3, 3, 3];\n\
    \    for ($i = 2; $i < $n; $i++) {\n        $fib[$i + 1] = ($i % 2 == 0) ? $fib[$i]\
    \ + $fib[$i - 1] + 1 + ($i / 2) : $fib[$i] + $fib[$i - 1] + $fib[$i - 2];\n  \
    \  }\n    return $fib;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxd55j0xy.php:31\n\
    Stack trace:\n#0 /tmp/tmpxd55j0xy.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpxd55j0xy.php\
    \ on line 31\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  $result = [];\n  if\
    \ ($n === 0) {\n    return $result;\n  }\n  if ($n >= 1) {\n    $result[] = 1;\n\
    \  }\n  if ($n >= 2) {\n    $result[] = 3;\n  }\n  if ($n >= 3) {\n    $result[]\
    \ = 2;\n  }\n  if ($n > 3) {\n    for ($i = 3; $i < $n; $i++) {\n      $result[]\
    \ = $result[$i - 1] + $result[$i - 2] + $result[$i - 3];\n    }\n  }\n  return\
    \ $result;\n}\necho \"<pre>\";\nprint_r(tri(3));\nprint_r(tri(0));\nprint_r(tri(1));\n\
    print_r(tri(2));\nprint_r(tri(4));\nprint_r(tri(5));\nprint_r(tri(6));\nprint_r(tri(7));\n\
    print_r(tri(8));\nprint_r(tri(9));\nprint_r(tri(10));\nprint_r(tri(11));\nprint_r(tri(12));\n\
    print_r(tri(13));\nprint_r(tri(14));\nprint_r(tri(15));\nprint_r(tri(16));\nprint_r(tri(17));\n\
    print_r(tri(18));\nprint_r(tri(19));\nprint_r(tri(20));\necho \"</pre>\";\n\n\
    function candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 2\n)\nArray\n(\n\
    )\nArray\n(\n    [0] => 1\n)\nArray\n(\n    [0] => 1\n    [1] => 3\n)\nArray\n\
    (\n    [0] => 1\n    [1] => 3\n    [2] => 2\n    [3] => 6\n)\nArray\n(\n    [0]\
    \ => 1\n    [1] => 3\n    [2] => 2\n    [3] => 6\n    [4] => 11\n)\nArray\n(\n\
    \    [0] => 1\n    [1] => 3\n    [2] => 2\n    [3] => 6\n    [4] => 11\n    [5]\
    \ => 19\n)\nArray\n(\n    [0] => 1\n    [1] => 3\n    [2] => 2\n    [3] => 6\n\
    \    [4] => 11\n    [5] => 19\n    [6] => 36\n)\nArray\n(\n    [0] => 1\n    [1]\
    \ => 3\n    [2] => 2\n    [3] => 6\n    [4] => 11\n    [5] => 19\n    [6] => 36\n\
    \    [7] => 66\n)\nArray\n(\n    [0] => 1\n    [1] => 3\n    [2] => 2\n    [3]\
    \ => 6\n    [4] => 11\n    [5] => 19\n    [6] => 36\n    [7] => 66\n    [8] =>\
    \ 121\n)\nArray\n(\n    [0] => 1\n    [1] => 3\n    [2] => 2\n    [3] => 6\n \
    \   [4] => 11\n    [5] => 19\n    [6] => 36\n    [7] => 66\n    [8] => 121\n \
    \   [9] => 223\n)\nArray\n(\n    [0] => 1\n    [1] => 3\n    [2] => 2\n    [3]\
    \ => 6\n    [4] => 11\n    [5] => 19\n    [6] => 36\n    [7] => 66\n    [8] =>\
    \ 121\n    [9] => 223\n    [10] => 410\n)\nArray\n(\n    [0] => 1\n    [1] =>\
    \ 3\n    [2] => 2\n    [3] => 6\n    [4] => 11\n    [5] => 19\n    [6] => 36\n\
    \    [7] => 66\n    [8] => 121\n    [9] => 223\n    [10] => 410\n    [11] => 754\n\
    )\nArray\n(\n    [0] => 1\n    [1] => 3\n    [2] => 2\n    [3] => 6\n    [4] =>\
    \ 11\n    [5] => 19\n    [6] => 36\n    [7] => 66\n    [8] => 121\n    [9] =>\
    \ 223\n    [10] => 410\n    [11] => 754\n    [12] => 1387\n)\nArray\n(\n    [0]\
    \ => 1\n    [1] => 3\n    [2] => 2\n    [3] => 6\n    [4] => 11\n    [5] => 19\n\
    \    [6] => 36\n    [7] => 66\n    [8] => 121\n    [9] => 223\n    [10] => 410\n\
    \    [11] => 754\n    [12] => 1387\n    [13] => 2551\n)\nArray\n(\n    [0] =>\
    \ 1\n    [1] => 3\n    [2] => 2\n    [3] => 6\n    [4] => 11\n    [5] => 19\n\
    \    [6] => 36\n    [7] => 66\n    [8] => 121\n    [9] => 223\n    [10] => 410\n\
    \    [11] => 754\n    [12] => 1387\n    [13] => 2551\n    [14] => 4692\n)\nArray\n\
    (\n    [0] => 1\n    [1] => 3\n    [2] => 2\n    [3] => 6\n    [4] => 11\n   \
    \ [5] => 19\n    [6] => 36\n    [7] => 66\n    [8] => 121\n    [9] => 223\n  \
    \  [10] => 410\n    [11] => 754\n    [12] => 1387\n    [13] => 2"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n\t$array = [1, 3, 2];\n\
    \t$i = 3;\n\twhile ($i < $n + 1) {\n\t\tif ($i % 2 == 0) {\n\t\t\t$array[] = 1\
    \ + $i / 2;\n\t\t} else {\n\t\t\t$array[] = $array[$i - 1] + $array[$i - 2] +\
    \ $array[$i + 1];\n\t\t}\n\t\t$i++;\n\t}\n\treturn $array;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpis03pn85.php on line 25\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpis03pn85.php:37\nStack\
    \ trace:\n#0 /tmp/tmpis03pn85.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpis03pn85.php\
    \ on line 37\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  if ($n === 0) {\n \
    \   return array();\n  }\n  if ($n === 1) {\n    return array(3);\n  }\n  if ($n\
    \ === 2) {\n    return array(3, 2);\n  }\n  $out = array(3, 2, 8);\n  for ($i\
    \ = 3; $i <= $n; $i++) {\n    if ($i % 2 === 0) {\n      $out[] = 1 + $i / 2;\n\
    \    } else {\n      $out[] = $out[$i - 1] + $out[$i - 2] + $out[$i + 1];\n  \
    \  }\n  }\n  return $out;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmplarpry44.php on line 33\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmplarpry44.php:44\nStack\
    \ trace:\n#0 /tmp/tmplarpry44.php(56): test()\n#1 {main}\n  thrown in /tmp/tmplarpry44.php\
    \ on line 44\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  // your code here\n\
    }\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa471mrzd.php:26\n\
    Stack trace:\n#0 /tmp/tmpa471mrzd.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpa471mrzd.php\
    \ on line 26\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    $arr = array(3,2,8);\n\
    \    for ($i = 2; $i < $n; $i++) {\n        $next = array_sum(array_slice($arr,\
    \ -3));\n        array_push($arr, $next);\n    }\n    return $arr;\n}\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4o9_rl7i.php:31\n\
    Stack trace:\n#0 /tmp/tmp4o9_rl7i.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp4o9_rl7i.php\
    \ on line 31\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    $res = [];\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $res[] = 0;\n\
    \        } elseif ($i == 1) {\n            $res[] = 3;\n        } elseif ($i ==\
    \ 2) {\n            $res[] = 2;\n        } elseif ($i % 2 == 0) {\n          \
    \  $res[] = $i / 2;\n        } else {\n            $res[] = $res[$i - 1] + $res[$i\
    \ - 2] + $res[$i + 1];\n        }\n    }\n    return $res;\n}\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmp5552pee7.php on line 30\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp5552pee7.php:40\nStack\
    \ trace:\n#0 /tmp/tmp5552pee7.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp5552pee7.php\
    \ on line 40\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    $array = array();\n\
    \    for ($i = 1; $i <= $n + 1; $i++) {\n        if ($i == 1) {\n            $array[]\
    \ = 3;\n        } elseif ($i % 2 == 0) {\n            $array[] = 1 + $i / 2;\n\
    \        } else {\n            $array[] = $array[$i - 2] + $array[$i - 3] + $array[$i];\n\
    \        }\n    }\n    return $array;\n}\nprint_r(tri(3));\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 3 in /tmp/tmptwf2so24.php on line 26\nArray\n\
    (\n    [0] => 3\n    [1] => 2\n    [2] => 5\n    [3] => 3\n)\n\nWarning: Undefined\
    \ array key 3 in /tmp/tmptwf2so24.php on line 26\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmptwf2so24.php:37\nStack trace:\n#0 /tmp/tmptwf2so24.php(49):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmptwf2so24.php on line 37\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  if($n == 0) return\
    \ array(0);\n  $result = array(3);\n  for($i = 1; $i < $n; $i++) {\n    if($i\
    \ % 2) {\n      $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n\
    \    } else {\n      $result[] = 1 + $i / 2;\n    }\n  }\n  return $result;\n\
    }\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key -1 in /tmp/tmpko22p7ey.php on line 23\n\n\
    Warning: Undefined array key 2 in /tmp/tmpko22p7ey.php on line 23\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpko22p7ey.php:35\nStack trace:\n\
    #0 /tmp/tmpko22p7ey.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpko22p7ey.php\
    \ on line 35\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    $array = [1, 3, 2];\n\
    \    for ($i = 3; $i <= $n; $i++) {\n        if ($i % 2 === 0) {\n           \
    \ $array[] = 1 + ($i / 2);\n        } else {\n            $array[] = $array[$i\
    \ - 1] + $array[$i - 2] + $array[$i + 1];\n        }\n    }\n    return $array;\n\
    }\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpyzfj9lre.php on line 24\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpyzfj9lre.php:34\nStack\
    \ trace:\n#0 /tmp/tmpyzfj9lre.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpyzfj9lre.php\
    \ on line 34\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  $output = array();\n\
    \  for ($i = 1; $i <= $n; $i++) {\n    if ($i == 1) {\n      $output[] = 3;\n\
    \    } else if ($i % 2 == 0) {\n      $output[] = (1 + $i / 2);\n    } else {\n\
    \      $output[] = $output[$i - 2] + $output[$i - 1] + $output[$i];\n    }\n \
    \ }\n  return $output;\n}\nprint_r(tri(4));\nfunction candidate(...$args) {\n\
    \    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 2 in /tmp/tmpzgdhwgm5.php on line 26\n\n\
    Warning: Undefined array key 3 in /tmp/tmpzgdhwgm5.php on line 26\nArray\n(\n\
    \    [0] => 3\n    [1] => 2\n    [2] => 2\n    [3] => 3\n)\n\nWarning: Undefined\
    \ array key 2 in /tmp/tmpzgdhwgm5.php on line 26\n\nWarning: Undefined array key\
    \ 3 in /tmp/tmpzgdhwgm5.php on line 26\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpzgdhwgm5.php:37\nStack trace:\n#0 /tmp/tmpzgdhwgm5.php(49):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpzgdhwgm5.php on line 37\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    $result = [];\n \
    \   for ($i = 1; $i <= $n + 1; $i++) {\n        if ($i == 1) {\n            $result[]\
    \ = 3;\n        } elseif ($i == 2) {\n            $result[] = 2;\n        } elseif\
    \ ($i == 3) {\n            $result[] = 8;\n        } elseif ($i % 2 == 0) {\n\
    \            $result[] = ($i / 2) + 1;\n        } else {\n            $result[]\
    \ = $result[$i - 1] + $result[$i - 2] + $result[$i - 3];\n        }\n    }\n \
    \   return $result;\n}\necho \"<pre>\";\nprint_r(tri(3));\necho \"</pre>\";\n\
    function candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 3\n    [1] => 2\n    [2] => 8\n    [3] => 3\n\
    )\n</pre>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa8bw888j.php:43\n\
    Stack trace:\n#0 /tmp/tmpa8bw888j.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpa8bw888j.php\
    \ on line 43\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    if($n == 0) return\
    \ 0;\n    $result = array(1, 3, 2);\n    if($n <= 3) return array_slice($result,\
    \ 0, $n);\n    while(count($result) <= $n) {\n        $odd = $result[count($result)\
    \ - 1] + $result[count($result) - 2] + $result[count($result) - 3];\n        array_push($result,\
    \ $odd);\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n  \
    \  return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !==\
    \ array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6mu5pvne.php:34\n\
    Stack trace:\n#0 /tmp/tmp6mu5pvne.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp6mu5pvne.php\
    \ on line 34\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  if ($n == 0) {\n  \
    \  return array(1);\n  }\n  if ($n == 1) {\n    return array(1, 3);\n  }\n  if\
    \ ($n == 2) {\n    return array(1, 3, 2);\n  }\n  $res = array(1, 3, 2);\n  for\
    \ ($i = 3; $i <= $n; $i++) {\n    if ($i % 2 == 0) {\n      $res[] = $i / 2 +\
    \ 1;\n    } else {\n      $res[] = $res[$i - 1] + $res[$i - 2] + $res[$i - 3];\n\
    \    }\n  }\n  return $res;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3gqgi75z.php:44\n\
    Stack trace:\n#0 /tmp/tmp3gqgi75z.php(56): test()\n#1 {main}\n  thrown in /tmp/tmp3gqgi75z.php\
    \ on line 44\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  if ($n <= 0) return\
    \ array();\n  else if ($n == 1) return array(3);\n  else if ($n == 2) return array(3,\
    \ 2);\n  else {\n    $arr = array(3, 2, 8);\n    for ($i = 2; $i < $n; $i++) {\n\
    \      if ($i % 2 == 0)\n        $arr[] = 1 + $i / 2;\n      else\n        $arr[]\
    \ = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n    }\n    return $arr;\n  }\n\
    }\n\necho '<pre>';\nvar_dump(tri(3));\nvar_dump(tri(4));\nvar_dump(tri(5));\n\
    var_dump(tri(6));\nvar_dump(tri(7));\nvar_dump(tri(8));\nvar_dump(tri(9));\nvar_dump(tri(10));\n\
    var_dump(tri(11));\nvar_dump(tri(12));\nvar_dump(tri(13));\nvar_dump(tri(14));\n\
    var_dump(tri(15));\nvar_dump(tri(16));\nvar_dump(tri(17));\nvar_dump(tri(18));\n\
    var_dump(tri(19));\nvar_dump(tri(20));\nvar_dump(tri(21));\nvar_dump(tri(22));\n\
    var_dump(tri(23));\nvar_dump(tri(24));\nvar_dump(tri(25));\nvar_dump(tri(26));\n\
    var_dump(tri(27));\nvar_dump(tri(28));\nvar_dump(tri(29));\nvar_dump(tri(30));\n\
    var_dump(tri(31));\nvar_dump(tri(32));\nvar_dump(tri(33));\nvar_dump(tri(34));\n\
    var_dump(tri(35));\nvar_dump(tri(36));\nvar_dump(tri(37));\nvar_dump(tri(38));\n\
    var_dump(tri(39));\nvar_dump(tri(40));\nvar_dump(tri(41));\nvar_dump(\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpzjeoz3_6.php on line 75

    '
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    $arr = [1, 3, 2];\n\
    \    if ($n < 3) return array_slice($arr, 0, $n + 1);\n    for ($i = 3; $i <=\
    \ $n; $i++) {\n        $arr[] = $i % 2 == 0 ? $i / 2 : ($arr[$i - 2] + $arr[$i\
    \ - 1] + $arr[$i + 1]);\n    }\n    return $arr;\n}\nprint_r(tri(6));\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpnmpex8ub.php on line 22\n\n\
    Warning: Undefined array key 6 in /tmp/tmpnmpex8ub.php on line 22\nArray\n(\n\
    \    [0] => 1\n    [1] => 3\n    [2] => 2\n    [3] => 5\n    [4] => 2\n    [5]\
    \ => 7\n    [6] => 3\n)\n\nWarning: Undefined array key 4 in /tmp/tmpnmpex8ub.php\
    \ on line 22\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnmpex8ub.php:32\n\
    Stack trace:\n#0 /tmp/tmpnmpex8ub.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpnmpex8ub.php\
    \ on line 32\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  $result = [];\n  $a\
    \ = 0;\n  $b = 0;\n  $c = 3;\n  for ($i = 0; $i <= $n; $i++) {\n    if ($i < 2)\
    \ {\n      $result[] = 0;\n    } else if ($i === 2) {\n      $result[] = 3;\n\
    \    } else {\n      $a = $b;\n      $b = $c;\n      $c = $a + $b + $c;\n    \
    \  $result[] = $c;\n    }\n  }\n  return $result;\n}\nprint_r(tri(3));\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 0\n    [1] => 0\n    [2] => 3\n    [3] => 6\n)\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpf949y3qm.php:43\nStack\
    \ trace:\n#0 /tmp/tmpf949y3qm.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpf949y3qm.php\
    \ on line 43\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n\t$result = [];\n\tfor\
    \ ($i = 1; $i <= $n; $i++) {\n\t\tif ($i == 1) {\n\t\t\t$result[] = 3;\n\t\t}\
    \ else if ($i == 2) {\n\t\t\t$result[] = 1 + (2 / 2);\n\t\t} else if ($i == 3)\
    \ {\n\t\t\t$result[] = $result[1] + $result[0] + $result[2];\n\t\t} else {\n\t\
    \t\tif ($i % 2 == 0) {\n\t\t\t\t$result[] = 1 + ($i / 2);\n\t\t\t} else {\n\t\t\
    \t\t$result[] = $result[$i - 2] + $result[$i - 3] + $result[$i - 1];\n\t\t\t}\n\
    \t\t}\n\t}\n\treturn $result;\n}\nprint_r(tri(3));\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 2 in /tmp/tmp0x265bij.php on line 26\nArray\n\
    (\n    [0] => 3\n    [1] => 2\n    [2] => 5\n)\n\nWarning: Undefined array key\
    \ 2 in /tmp/tmp0x265bij.php on line 26\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp0x265bij.php:43\nStack trace:\n#0 /tmp/tmp0x265bij.php(55):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp0x265bij.php on line 43\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n\t$tribonacci = array(1,\
    \ 3, 2);\n\tif($n == 1) return array(1);\n\tif($n == 2) return array(1, 3);\n\t\
    if($n == 3) return array(1, 3, 2);\n\t$i = 3;\n\t$m = 0;\n\twhile($i <= $n) {\n\
    \t\tif($i % 2 == 0) {\n\t\t\t$tribonacci[$i] = 1 + ($i / 2);\n\t\t} else {\n\t\
    \t\t$tribonacci[$i] = $tribonacci[$i - 1] + $tribonacci[$i - 2] + $tribonacci[$i\
    \ + 1];\n\t\t}\n\t\t$i++;\n\t}\n\treturn $tribonacci;\n}\necho implode(\", \"\
    , tri(3));\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1, 3, 2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplucu0csl.php:41\n\
    Stack trace:\n#0 /tmp/tmplucu0csl.php(53): test()\n#1 {main}\n  thrown in /tmp/tmplucu0csl.php\
    \ on line 41\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    // if ($n == 1) return\
    \ array(1, 3);\n    // if ($n == 2) return array(1, 3, 2);\n    // if ($n == 3)\
    \ return array(1, 3, 2, 8);\n    // if ($n == 4) return array(1, 3, 2, 8, 5);\n\
    \    // if ($n == 5) return array(1, 3, 2, 8, 5, 13);\n    // if ($n == 6) return\
    \ array(1, 3, 2, 8, 5, 13, 21);\n    // if ($n == 7) return array(1, 3, 2, 8,\
    \ 5, 13, 21, 34);\n    // if ($n == 8) return array(1, 3, 2, 8, 5, 13, 21, 34,\
    \ 55);\n    // if ($n == 9) return array(1, 3, 2, 8, 5, 13, 21, 34, 55, 89);\n\
    \    // if ($n == 10) return array(1, 3, 2, 8, 5, 13, 21, 34, 55, 89, 144);\n\
    \    // if ($n == 11) return array(1, 3, 2, 8, 5, 13, 21, 34, 55, 89, 144, 233);\n\
    \    // if ($n == 12) return array(1, 3, 2, 8, 5, 13, 21, 34, 55, 89, 144, 233,\
    \ 377);\n    // if ($n == 13) return array(1, 3, 2, 8, 5, 13, 21, 34, 55, 89,\
    \ 144, 233, 377, 610);\n    // if ($n == 14) return array(1, 3, 2, 8, 5, 13, 21,\
    \ 34, 55, 89, 144, 233, 377, 610, 987);\n    // if ($n == 15) return array(1,\
    \ 3, 2, 8, 5, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597);\n    // if ($n\
    \ == 16) return array(1, 3, 2, 8, 5, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987,\
    \ 1597, 2584);\n    // if ($n == 17) return\nfunction candidate(...$args) {\n\
    \    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 18 in /tmp/tmpqwual8mg.php on line 53

    '
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    $arr = array();\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        if ($i == 1) {\n            $arr[]\
    \ = 3;\n        } elseif ($i == 2) {\n            $arr[] = 2;\n        } elseif\
    \ ($i == 3) {\n            $arr[] = 8;\n        } elseif ($i % 2 == 0) {\n   \
    \         $arr[] = $i / 2;\n        } else {\n            $arr[] = $arr[$i - 1]\
    \ + $arr[$i - 2] + $arr[$i - 3];\n        }\n    }\n    return $arr;\n}\nprint_r(tri(3));\n\
    function candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 3\n    [1] => 2\n    [2] => 8\n)\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp9u6mvqa3.php:41\nStack trace:\n#0 /tmp/tmp9u6mvqa3.php(53):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp9u6mvqa3.php on line 41\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    $result = array();\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        if ($i === 1) {\n            $result[]\
    \ = 3;\n        } else if ($i % 2 === 0) {\n            $result[] = 1 + $i / 2;\n\
    \        } else {\n            $result[] = $result[$i - 2] + $result[$i - 1] +\
    \ $result[$i];\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 2 in /tmp/tmp8gxbl5q4.php on line 26\n\n\
    Warning: Undefined array key 3 in /tmp/tmp8gxbl5q4.php on line 26\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmp8gxbl5q4.php:37\nStack trace:\n\
    #0 /tmp/tmp8gxbl5q4.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp8gxbl5q4.php\
    \ on line 37\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    if($n==1) return\
    \ 3;\n    if($n%2 == 0) return floor(1 + $n/2);\n    return tri($n-1) + tri($n-2)\
    \ + tri($n+1);\n}\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1i12vw2j.php:28\n\
    Stack trace:\n#0 /tmp/tmp1i12vw2j.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp1i12vw2j.php\
    \ on line 28\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  if($n == 0) {\n   \
    \ return array(1);\n  }\n  $arr = array(1, 3, 2);\n  for($i = 3; $i <= $n; $i++)\
    \ {\n    if($i % 2 == 0) {\n      $arr[] = 1 + ($i / 2);\n    } else {\n     \
    \ $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n    }\n  }\n  return $arr;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpv_x8hiyf.php on line 27\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpv_x8hiyf.php:38\nStack\
    \ trace:\n#0 /tmp/tmpv_x8hiyf.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpv_x8hiyf.php\
    \ on line 38\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  $x = 3;\n  $y = 1;\n\
    \  $z = 2;\n  $a = array($x, $y, $z);\n  for ($i = 2; $i < $n; $i++) {\n    $t\
    \ = $x + $y + $z;\n    $a[] = $t;\n    $x = $y;\n    $y = $z;\n    $z = $t;\n\
    \  }\n  return $a;\n}\n$n = 3;\nprint_r(tri($n));\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 3\n    [1] => 1\n    [2] => 2\n    [3] => 6\n)\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpa8jhlnk8.php:39\nStack\
    \ trace:\n#0 /tmp/tmpa8jhlnk8.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpa8jhlnk8.php\
    \ on line 39\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    $arr = array();\n\
    \    $arr[0] = 1;\n    $arr[1] = 3;\n    for ($i = 2; $i <= $n; $i++) {\n    \
    \    if ($i % 2 == 0) {\n            $arr[$i] = 1 + ($i / 2);\n        } else\
    \ {\n            $arr[$i] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n    \
    \    }\n    }\n    return $arr;\n}\nprint_r(tri(3));\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpz06g8o3b.php on line 26\nArray\n\
    (\n    [0] => 1\n    [1] => 3\n    [2] => 2\n    [3] => 5\n)\n\nWarning: Undefined\
    \ array key 4 in /tmp/tmpz06g8o3b.php on line 26\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpz06g8o3b.php:37\nStack trace:\n#0 /tmp/tmpz06g8o3b.php(49):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpz06g8o3b.php on line 37\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  // your code\n}\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjy3j6ft3.php:26\n\
    Stack trace:\n#0 /tmp/tmpjy3j6ft3.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpjy3j6ft3.php\
    \ on line 26\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  $res = [];\n  if ($n\
    \ > 0) {\n    $res = [1, 3, 2];\n    for ($i = 3; $i <= $n; $i++) {\n      if\
    \ ($i % 2 === 0) {\n        $res[] = 1 + $i / 2;\n      } else {\n        $res[]\
    \ = $res[$i - 1] + $res[$i - 2] + $res[$i + 1];\n      }\n    }\n  }\n  return\
    \ $res;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1,\
    \ 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63,\
    \ 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmp8g8151aq.php on line 26\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp8g8151aq.php:38\nStack\
    \ trace:\n#0 /tmp/tmp8g8151aq.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp8g8151aq.php\
    \ on line 38\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  // tri(1) = 3\n  //\
    \ tri(n) = 1 + n / 2, if n is even.\n  // tri(n) =  tri(n - 1) + tri(n - 2) +\
    \ tri(n + 1), if n is odd.\n  // F = 1, 1, 2, 4, 7, 13, 24, 44, 81, 149, 274,\
    \ 504, 927, 1705, 3136, 5768, 10609, 19513, 35890, 66012, 121415, 223317, 410744,\
    \ 755476, 1389537, 2555757, 4700770, 8646064, 15902591, 29249425, 53798080, 98950096,\
    \ 181997601, 334745777, 615693474, 1132436852, 2082876103\n\n  // Initialize an\
    \ array of the first 5 numbers of the Tribonacci sequence\n  $arr = [1, 1, 2,\
    \ 4, 7];\n  // if $n = 0, return an empty array\n  if ($n == 0) {\n    return\
    \ [];\n  }\n  // if $n = 1, return an array with the first number of the Tribonacci\
    \ sequence\n  if ($n == 1) {\n    return [1];\n  }\n  // for $n > 1, return an\
    \ array with the first $n + 1 numbers of the Tribonacci sequence\n  for ($i =\
    \ 0; $i < $n; $i++) {\n    $arr[] = $arr[$i] + $arr[$i + 1] + $arr[$i + 2];\n\
    \  }\n  return $arr;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyijtopho.php:46\n\
    Stack trace:\n#0 /tmp/tmpyijtopho.php(58): test()\n#1 {main}\n  thrown in /tmp/tmpyijtopho.php\
    \ on line 46\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  if ($n === 0) {\n \
    \   return [];\n  }\n  if ($n === 1) {\n    return [3];\n  }\n  $res = [3, 1,\
    \ 2];\n  for ($i = 2; $i < $n; $i++) {\n    $res[] = ($i % 2) ? $res[$i] + $res[$i\
    \ - 1] + $res[$i + 1] : 1 + ($i / 2);\n  }\n  return $res;\n}\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp26ia4izg.php:36\n\
    Stack trace:\n#0 /tmp/tmp26ia4izg.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp26ia4izg.php\
    \ on line 36\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n\n}\n$a = array('foo',\
    \ 'bar', 'baz');\narray_walk($a, 'print');\narray_walk($a, function ($value, $key)\
    \ {\n  print \"$key: $value\\n\";\n});\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_walk(): Argument #2 ($callback)\
    \ must be a valid callback, function \"print\" not found or invalid function name\
    \ in /tmp/tmp34tt0zks.php:22\nStack trace:\n#0 /tmp/tmp34tt0zks.php(22): array_walk(Array,\
    \ 'print')\n#1 {main}\n  thrown in /tmp/tmp34tt0zks.php on line 22\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  $arr = [3, 2, 1];\n\
    \  if ($n < 3) {\n    array_splice($arr, $n);\n    return $arr;\n  }\n  for ($i\
    \ = 0; $i < $n - 2; $i++) {\n    $arr[] = $arr[$i] + $arr[$i + 1] + $arr[$i +\
    \ 2];\n  }\n  return $arr;\n}\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbg5cpaez.php:34\n\
    Stack trace:\n#0 /tmp/tmpbg5cpaez.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbg5cpaez.php\
    \ on line 34\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    $result = array();\n\
    \    for ($i = 1; $i <= $n + 1; $i++) {\n        if ($i == 1) {\n            $result[]\
    \ = 3;\n        } elseif ($i % 2 == 0) {\n            $result[] = 1 + $i / 2;\n\
    \        } else {\n            $result[] = $result[$i - 2] + $result[$i - 3] +\
    \ $result[$i - 1];\n        }\n    }\n    return $result;\n}\nprint_r(tri(4));\n\
    function candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 2 in /tmp/tmpo840pi4a.php on line 26\n\n\
    Warning: Undefined array key 4 in /tmp/tmpo840pi4a.php on line 26\nArray\n(\n\
    \    [0] => 3\n    [1] => 2\n    [2] => 5\n    [3] => 3\n    [4] => 8\n)\n\nWarning:\
    \ Undefined array key 2 in /tmp/tmpo840pi4a.php on line 26\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpo840pi4a.php:37\nStack trace:\n#0 /tmp/tmpo840pi4a.php(49):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpo840pi4a.php on line 37\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  $res = array(3);\n\
    \  for ($i = 1; $i <= $n; $i++) {\n    if ($i % 2 == 0) {\n      $res[] = 1 +\
    \ $i / 2;\n    } else {\n      $res[] = $res[$i - 1] + $res[$i - 2] + $res[$i\
    \ + 1];\n    }\n  }\n  return $res;\n}\n\nprint_r(tri(3));\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key -1 in /tmp/tmpe0yeai4z.php on line 24\n\n\
    Warning: Undefined array key 2 in /tmp/tmpe0yeai4z.php on line 24\n\nWarning:\
    \ Undefined array key 4 in /tmp/tmpe0yeai4z.php on line 24\nArray\n(\n    [0]\
    \ => 3\n    [1] => 3\n    [2] => 2\n    [3] => 5\n)\n\nWarning: Undefined array\
    \ key -1 in /tmp/tmpe0yeai4z.php on line 24\n\nWarning: Undefined array key 2\
    \ in /tmp/tmpe0yeai4z.php on line 24\n\nWarning: Undefined array key 4 in /tmp/tmpe0yeai4z.php\
    \ on line 24\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe0yeai4z.php:37\n\
    Stack trace:\n#0 /tmp/tmpe0yeai4z.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpe0yeai4z.php\
    \ on line 37\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    return array_map(\n\
    \        function($n) {\n            if ($n < 2) {\n                return 3;\n\
    \            }\n            return tri($n - 1) + tri($n - 2) + tri($n + 1);\n\
    \        },\n        range(0, $n)\n    );\n}\n\nfunction candidate(...$args) {\n\
    \    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    20480 bytes) in /tmp/tmp5i85fme0.php on line 26

    '
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    // Your code here\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp59sjos_b.php:27\n\
    Stack trace:\n#0 /tmp/tmp59sjos_b.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp59sjos_b.php\
    \ on line 27\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    $result = array();\n\
    \    for ($i = 1; $i <= $n + 1; $i++) {\n        if ($i == 1) {\n            $result[]\
    \ = 3;\n        } else if ($i % 2 == 0) {\n            $result[] = 1 + $i / 2;\n\
    \        } else {\n            $result[] = $result[$i - 2] + $result[$i - 3] +\
    \ $result[$i];\n        }\n    }\n    return $result;\n}\n\nprint_r(tri(3));\n\
    function candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 3 in /tmp/tmpzse2lhcq.php on line 26\nArray\n\
    (\n    [0] => 3\n    [1] => 2\n    [2] => 5\n    [3] => 3\n)\n\nWarning: Undefined\
    \ array key 3 in /tmp/tmpzse2lhcq.php on line 26\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpzse2lhcq.php:38\nStack trace:\n#0 /tmp/tmpzse2lhcq.php(50):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpzse2lhcq.php on line 38\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  $ret = [];\n  for ($i\
    \ = 0; $i <= $n; $i++) {\n    if ($i == 0) {\n      $ret[] = 1;\n    } elseif\
    \ ($i == 1) {\n      $ret[] = 3;\n    } elseif ($i == 2) {\n      $ret[] = 2;\n\
    \    } elseif ($i % 2 == 0) {\n      $ret[] = 1 + $i / 2;\n    } else {\n    \
    \  $ret[] = $ret[$i - 1] + $ret[$i - 2] + $ret[$i + 1];\n    }\n  }\n  return\
    \ $ret;\n}\necho var_export(tri(3), true) . \"\\n\"; // array(1, 3, 2, 8)\necho\
    \ var_export(tri(5), true) . \"\\n\"; // array(1, 3, 2, 8, 5, 11)\n\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmp4wd61p7f.php on line 30\narray\
    \ (\n  0 => 1,\n  1 => 3,\n  2 => 2,\n  3 => 5,\n)\n\nWarning: Undefined array\
    \ key 4 in /tmp/tmp4wd61p7f.php on line 30\n\nWarning: Undefined array key 6 in\
    \ /tmp/tmp4wd61p7f.php on line 30\narray (\n  0 => 1,\n  1 => 3,\n  2 => 2,\n\
    \  3 => 5,\n  4 => 3,\n  5 => 8,\n)\n\nWarning: Undefined array key 4 in /tmp/tmp4wd61p7f.php\
    \ on line 30\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4wd61p7f.php:43\n\
    Stack trace:\n#0 /tmp/tmp4wd61p7f.php(55): test()\n#1 {main}\n  thrown in /tmp/tmp4wd61p7f.php\
    \ on line 43\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    $result = [];\n \
    \   $tribonacci = function($n) use (&$tribonacci, &$result) {\n        if (isset($result[$n]))\
    \ {\n            return $result[$n];\n        }\n        if ($n === 1) {\n   \
    \         return 3;\n        }\n        if ($n % 2 === 0) {\n            return\
    \ 1 + $n / 2;\n        }\n        return $tribonacci($n - 1) + $tribonacci($n\
    \ - 2) + $tribonacci($n + 1);\n    };\n    for ($i = 1; $i <= $n; $i++) {\n  \
    \      $result[$i] = $tribonacci($i);\n    }\n    return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk9vu5zb4.php:42\n\
    Stack trace:\n#0 /tmp/tmpk9vu5zb4.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpk9vu5zb4.php\
    \ on line 42\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm677mswy.php:27\n\
    Stack trace:\n#0 /tmp/tmpm677mswy.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpm677mswy.php\
    \ on line 27\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n\t$result = [];\n\t\n\
    \t$result[0] = 1;\n\t$result[1] = 3;\n\t$result[2] = 2;\n\t$result[3] = 8;\n\t\
    \n\tfor ($i = 4; $i <= $n; $i++) {\n\t\tif ($i % 2 == 0) {\n\t\t\t$result[$i]\
    \ = 1 + $i / 2;\n\t\t} else {\n\t\t\t$result[$i] = $result[$i - 1] + $result[$i\
    \ - 2] + $result[$i + 1];\n\t\t}\n\t}\n\t\n\treturn $result;\n}\n\nprint_r(tri(3));\n\
    function candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 2\n    [3] => 8\n)\n\n\
    Warning: Undefined array key 6 in /tmp/tmpicbl7orp.php on line 30\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpicbl7orp.php:45\nStack trace:\n\
    #0 /tmp/tmpicbl7orp.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpicbl7orp.php\
    \ on line 45\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    $tribArr = array(1,\
    \ 3, 2);\n    for ($i = 2; $i < $n; $i++) {\n        if ($i % 2 == 0) {\n    \
    \        $tribArr[] = 1 + $i / 2;\n        } else {\n            $tribArr[] =\
    \ $tribArr[$i - 1] + $tribArr[$i - 2] + $tribArr[$i + 1];\n        }\n    }\n\
    \    return $tribArr;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyq7u03ss.php:35\n\
    Stack trace:\n#0 /tmp/tmpyq7u03ss.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpyq7u03ss.php\
    \ on line 35\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  $triArr = array(1 =>\
    \ 3);\n  for ($i = 2; $i <= $n; $i++) {\n    if ($i % 2 == 0) {\n      $triArr[$i]\
    \ = 1 + ($i / 2);\n    } else {\n      $triArr[$i] = $triArr[$i - 1] + $triArr[$i\
    \ - 2] + $triArr[$i + 1];\n    }\n  }\n  return $triArr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmppm5kfs18.php on line 24\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmppm5kfs18.php:35\nStack\
    \ trace:\n#0 /tmp/tmppm5kfs18.php(47): test()\n#1 {main}\n  thrown in /tmp/tmppm5kfs18.php\
    \ on line 35\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n\t$tri = [3, 1, 2];\n\
    \tif ($n == 0) {\n\t\treturn [];\n\t}\n\tif ($n == 1) {\n\t\treturn [3];\n\t}\n\
    \tif ($n == 2) {\n\t\treturn [3, 1];\n\t}\n\tfor ($i = 0; $i < $n - 2; $i++) {\n\
    \t\tif ($i % 2 == 0) {\n\t\t\t$tri[] = 1 + ($i + 2) / 2;\n\t\t} else {\n\t\t\t\
    $tri[] = $tri[$i] + $tri[$i - 1] + $tri[$i + 1];\n\t\t}\n\t}\n\treturn $tri;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbfgh5750.php:44\n\
    Stack trace:\n#0 /tmp/tmpbfgh5750.php(56): test()\n#1 {main}\n  thrown in /tmp/tmpbfgh5750.php\
    \ on line 44\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    if ($n == 0) return\
    \ [1];\n    if ($n == 1) return [1, 3];\n    if ($n == 2) return [1, 3, 2];\n\
    \    $fib = [1, 3, 2];\n    for ($i = 2; $i < $n; $i++) {\n        $fib[] = $fib[$i]\
    \ + $fib[$i - 1] + $fib[$i - 2];\n    }\n    return $fib;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0vo1s3yp.php:34\n\
    Stack trace:\n#0 /tmp/tmp0vo1s3yp.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp0vo1s3yp.php\
    \ on line 34\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    $tri = [3, 2, 1];\n\
    \    for ($i = 3; $i <= $n; $i++) {\n        $tri[$i] = $tri[$i - 1] + $tri[$i\
    \ - 2] + $tri[$i - 3];\n    }\n    return $tri;\n}\necho \"<pre>\";\nprint_r(tri(3));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 3\n    [1] => 2\n    [2] => 1\n    [3] => 6\n\
    )\n</pre>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphgfrq2xa.php:33\n\
    Stack trace:\n#0 /tmp/tmphgfrq2xa.php(45): test()\n#1 {main}\n  thrown in /tmp/tmphgfrq2xa.php\
    \ on line 33\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  $sequence = [1, 3,\
    \ 2];\n  for ($i = 3; $i <= $n; $i++) {\n    if ($i % 2 === 0) {\n      $sequence[]\
    \ = 1 + $i / 2;\n    } else {\n      $sequence[] = $sequence[$i - 1] + $sequence[$i\
    \ - 2] + $sequence[$i + 1];\n    }\n  }\n  return $sequence;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpz2mgtqnq.php on line 24\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpz2mgtqnq.php:35\nStack\
    \ trace:\n#0 /tmp/tmpz2mgtqnq.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpz2mgtqnq.php\
    \ on line 35\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  $sequence = array(1,\
    \ 3, 2);\n  if ($n <= 3) {\n    return array_slice($sequence, 0, $n + 1);\n  }\n\
    \  for ($i = 3; $i <= $n; $i++) {\n    if ($i % 2 == 0) {\n      $sequence[] =\
    \ 1 + $i / 2;\n    } else {\n      $sequence[] = $sequence[$i - 1] + $sequence[$i\
    \ - 2] + $sequence[$i + 1];\n    }\n  }\n  return $sequence;\n}\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpopfa2uu0.php:37\n\
    Stack trace:\n#0 /tmp/tmpopfa2uu0.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpopfa2uu0.php\
    \ on line 37\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    if ($n == 0) {\n\
    \        return array(1);\n    }\n    if ($n == 1) {\n        return array(1,\
    \ 3);\n    }\n    if ($n == 2) {\n        return array(1, 3, 2);\n    }\n    $arr\
    \ = array(1, 3, 2);\n    for ($i = 3; $i <= $n; $i++) {\n        if ($i % 2 ==\
    \ 0) {\n            $arr[] = 1 + $i / 2;\n        } else {\n            $arr[]\
    \ = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n        }\n    }\n    return\
    \ $arr;\n}\nprint_r(tri(10));\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpbtefphkc.php on line 33\n\n\
    Warning: Undefined array key 6 in /tmp/tmpbtefphkc.php on line 33\n\nWarning:\
    \ Undefined array key 8 in /tmp/tmpbtefphkc.php on line 33\n\nWarning: Undefined\
    \ array key 10 in /tmp/tmpbtefphkc.php on line 33\nArray\n(\n    [0] => 1\n  \
    \  [1] => 3\n    [2] => 2\n    [3] => 5\n    [4] => 3\n    [5] => 8\n    [6] =>\
    \ 4\n    [7] => 12\n    [8] => 5\n    [9] => 17\n    [10] => 6\n)\n\nWarning:\
    \ Undefined array key 4 in /tmp/tmpbtefphkc.php on line 33\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpbtefphkc.php:44\nStack trace:\n#0 /tmp/tmpbtefphkc.php(56):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpbtefphkc.php on line 44\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    $result = array();\n\
    \    for ($i = 1; $i <= $n + 1; $i++) {\n        if ($i == 1) {\n            $result[]\
    \ = 3;\n        } elseif ($i % 2 == 0) {\n            $result[] = 1 + ($i / 2);\n\
    \        } else {\n            $result[] = $result[$i - 2] + $result[$i - 3] +\
    \ $result[$i];\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 3 in /tmp/tmpxu4y90wf.php on line 26\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpxu4y90wf.php:37\nStack\
    \ trace:\n#0 /tmp/tmpxu4y90wf.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpxu4y90wf.php\
    \ on line 37\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    $result = array();\n\
    \    if ($n == 0) {\n        return $result;\n    }\n    if ($n == 1) {\n    \
    \    $result[] = 3;\n        return $result;\n    }\n    $result[] = 3;\n    $result[]\
    \ = 2;\n    $result[] = 8;\n    for ($i = 3; $i < $n; $i++) {\n        if ($i\
    \ % 2 == 0) {\n            $result[] = 1 + $i / 2;\n        } else {\n       \
    \     $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n     \
    \   }\n    }\n    return $result;\n}\necho \"<pre>\";\nprint_r(tri(3));\necho\
    \ \"</pre>\";\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1,\
    \ 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63,\
    \ 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 3\n    [1] => 2\n    [2] => 8\n)\n</pre>\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmpekqxr_h_.php:47\nStack trace:\n\
    #0 /tmp/tmpekqxr_h_.php(59): test()\n#1 {main}\n  thrown in /tmp/tmpekqxr_h_.php\
    \ on line 47\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    $r = array(1, 3,\
    \ 2);\n    if ($n < 3) {\n        return array_slice($r, 0, $n + 1);\n    }\n\
    \    while ($n-- > 2) {\n        $x = array_shift($r);\n        $r[count($r)]\
    \ = $x + $r[count($r) - 1] + $r[count($r) - 2];\n    }\n    return $r;\n}\n\n\
    $n = 9;\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsk7n6owi.php:37\n\
    Stack trace:\n#0 /tmp/tmpsk7n6owi.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpsk7n6owi.php\
    \ on line 37\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    $results = [1, 3,\
    \ 2];\n    for ($i = 3; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n      \
    \      $results[] = 1 + $i / 2;\n        } else {\n            $results[] = $results[$i\
    \ - 1] + $results[$i - 2] + $results[$i + 1];\n        }\n    }\n    return $results;\n\
    }\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmphevcazzp.php on line 24\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmphevcazzp.php:34\nStack\
    \ trace:\n#0 /tmp/tmphevcazzp.php(46): test()\n#1 {main}\n  thrown in /tmp/tmphevcazzp.php\
    \ on line 34\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    $array = array();\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        if($i == 1)\n            $array[]\
    \ = 3;\n        else if($i % 2 == 0)\n            $array[] = 1 + $i / 2;\n   \
    \     else\n            $array[] = $array[$i - 2] + $array[$i - 1] + $array[$i\
    \ + 1];\n    }\n    return $array;\n}\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 2 in /tmp/tmpmz90b698.php on line 26\n\n\
    Warning: Undefined array key 4 in /tmp/tmpmz90b698.php on line 26\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpmz90b698.php:35\nStack trace:\n\
    #0 /tmp/tmpmz90b698.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpmz90b698.php\
    \ on line 35\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    $a = 0;\n    $b =\
    \ 1;\n    $c = 1;\n    $r = [$c];\n    for ($i = 0; $i < $n; $i++) {\n       \
    \ $a = $b;\n        $b = $c;\n        $c = $a + $b + $c;\n        $r[] = $c;\n\
    \    }\n    return $r;\n}\nprint_r(tri(4));\nfunction candidate(...$args) {\n\
    \    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 7\n    [3] => 17\n   \
    \ [4] => 41\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzvyqkww2.php:37\n\
    Stack trace:\n#0 /tmp/tmpzvyqkww2.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpzvyqkww2.php\
    \ on line 37\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    $result = [];\n \
    \   for ($i = 1; $i <= $n + 1; $i++) {\n        $num = 0;\n        if ($i == 1)\
    \ {\n            $num = 3;\n        } elseif ($i % 2 === 0) {\n            $num\
    \ = 1 + ($i / 2);\n        } else {\n            $num = tri($i - 1) + tri($i -\
    \ 2) + tri($i + 1);\n        }\n        $result[] = $num;\n    }\n    return $result;\n\
    }\nvar_dump(tri(3));\nvar_dump(tri(2));\nvar_dump(tri(1));\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    262144 bytes) in /tmp/tmpcqoytiq1.php on line 27

    '
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    $a = [3, 1, 2];\n\
    \    $i = 3;\n    if ($n <= 2) return [3, 1, 2];\n    while ($i <= $n) {\n   \
    \     if ($i % 2 == 0) {\n            $a[] = 1 + ($i / 2);\n        } else {\n\
    \            $a[] = $a[$i - 1] + $a[$i - 2] + $a[$i + 1];\n        }\n       \
    \ $i++;\n    }\n    return $a;\n}\nprint_r(tri(3));\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpg_pd51dz.php on line 26\nArray\n\
    (\n    [0] => 3\n    [1] => 1\n    [2] => 2\n    [3] => 3\n)\n\nWarning: Undefined\
    \ array key 4 in /tmp/tmpg_pd51dz.php on line 26\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpg_pd51dz.php:38\nStack trace:\n#0 /tmp/tmpg_pd51dz.php(50):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpg_pd51dz.php on line 38\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    $result = [];\n \
    \   $result[0] = 3;\n    $result[1] = 1;\n    $result[2] = 2;\n    for ($i = 3;\
    \ $i <= $n; $i++) {\n        if ($i % 2 === 0) {\n            $result[$i] = 1\
    \ + $i / 2;\n        } else {\n            $result[$i] = $result[$i - 1] + $result[$i\
    \ - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n}\necho \"<pre>\"\
    ;\nprint_r(tri(3));\necho \"</pre>\";\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>\nWarning: Undefined array key 4 in /tmp/tmpxj_fwylk.php on line 27\n\
    Array\n(\n    [0] => 3\n    [1] => 1\n    [2] => 2\n    [3] => 3\n)\n</pre>\n\
    Warning: Undefined array key 4 in /tmp/tmpxj_fwylk.php on line 27\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpxj_fwylk.php:40\nStack trace:\n\
    #0 /tmp/tmpxj_fwylk.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpxj_fwylk.php\
    \ on line 40\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n\t$tribonacci = array(1,\
    \ 3, 2);\n\t$i = 3;\n\t$num = 8;\n\twhile($i < $n) {\n\t\tif($i % 2 == 0) {\n\t\
    \t\t$num = 1 + $i / 2;\n\t\t} else {\n\t\t\t$num = $tribonacci[$i - 1] + $tribonacci[$i\
    \ - 2] + $tribonacci[$i + 1];\n\t\t}\n\t\t$tribonacci[] = $num;\n\t\t$i++;\n\t\
    }\n\tprint_r($tribonacci);\n}\ntri(5);\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmp_iowu9b2.php on line 26\nArray\n\
    (\n    [0] => 1\n    [1] => 3\n    [2] => 2\n    [3] => 5\n    [4] => 3\n)\nArray\n\
    (\n    [0] => 1\n    [1] => 3\n    [2] => 2\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp_iowu9b2.php:39\nStack trace:\n#0 /tmp/tmp_iowu9b2.php(51):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp_iowu9b2.php on line 39\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    if ($n < 1) return\
    \ [];\n    $arr = [3];\n    $arr[] = 1 + $n / 2;\n    $i = 2;\n    while ($i <=\
    \ $n) {\n        $val = tri($i - 1) + tri($i - 2) + tri($i + 1);\n        $arr[]\
    \ = $val;\n        $i++;\n    }\n    return $arr;\n}\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate
    20480 bytes) in /tmp/tmp2_0ao5_f.php on line 21

    '
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  // your code here\n\
    \  $res = array();\n  for ($i = 1; $i <= $n; $i++) {\n    if ($i == 1) {\n   \
    \   $res[] = 3;\n    } else if ($i == 2) {\n      $res[] = 2;\n    } else if ($i\
    \ == 3) {\n      $res[] = 8;\n    } else {\n      $res[] = $res[$i - 2] + $res[$i\
    \ - 3] + $res[$i - 4];\n    }\n  }\n  return $res;\n}\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvy8_kkns.php:39\n\
    Stack trace:\n#0 /tmp/tmpvy8_kkns.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpvy8_kkns.php\
    \ on line 39\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    $base = [3, 2, 1];\n\
    \    if($n == 0) return [1];\n    if($n < 3) return $base;\n    $res = [];\n \
    \   for($i = 0; $i <= $n; $i++){\n        if($i < 3) {\n            $res[] = $base[$i];\n\
    \        } else {\n            $res[] = $res[$i - 1] + $res[$i - 2] + $res[$i\
    \ - 3];\n        }\n    }\n    return $res;\n}\nfunction candidate(...$args) {\n\
    \    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7pffc7nz.php:37\n\
    Stack trace:\n#0 /tmp/tmp7pffc7nz.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp7pffc7nz.php\
    \ on line 37\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    if ($n == 0) {\n\
    \        return array(1);\n    }\n    if ($n == 1) {\n        return array(1,\
    \ 3);\n    }\n    if ($n == 2) {\n        return array(1, 3, 2);\n    }\n    $t\
    \ = array(1, 3, 2);\n    for ($i = 3; $i <= $n; $i++) {\n        if ($i % 2 ==\
    \ 0) {\n            $t[] = 1 + $i / 2;\n        } else {\n            $t[] = $t[$i\
    \ - 1] + $t[$i - 2] + $t[$i + 1];\n        }\n    }\n    return $t;\n}\n\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmp0q89gfp8.php on line 33\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp0q89gfp8.php:44\nStack\
    \ trace:\n#0 /tmp/tmp0q89gfp8.php(56): test()\n#1 {main}\n  thrown in /tmp/tmp0q89gfp8.php\
    \ on line 44\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    if ($n === 0) {\n\
    \        return [];\n    }\n    if ($n === 1) {\n        return [3];\n    }\n\
    \    if ($n === 2) {\n        return [3, 2];\n    }\n    $arr = [];\n    $arr[0]\
    \ = 3;\n    $arr[1] = 2;\n    $arr[2] = 8;\n    $i = 3;\n    while ($i <= $n)\
    \ {\n        $arr[$i] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i - 3];\n        $i++;\n\
    \    }\n    return $arr;\n}\n\n$result = tri(4);\nprint_r($result);\necho \"<br/>\"\
    ;\n\n$result = tri(5);\nprint_r($result);\necho \"<br/>\";\n\n$result = tri(7);\n\
    print_r($result);\necho \"<br/>\";\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 3\n    [1] => 2\n    [2] => 8\n    [3] => 13\n   \
    \ [4] => 23\n)\n<br/>Array\n(\n    [0] => 3\n    [1] => 2\n    [2] => 8\n    [3]\
    \ => 13\n    [4] => 23\n    [5] => 44\n)\n<br/>Array\n(\n    [0] => 3\n    [1]\
    \ => 2\n    [2] => 8\n    [3] => 13\n    [4] => 23\n    [5] => 44\n    [6] =>\
    \ 80\n    [7] => 147\n)\n<br/>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpwpmkmzti.php:56\nStack trace:\n#0 /tmp/tmpwpmkmzti.php(68): test()\n\
    #1 {main}\n  thrown in /tmp/tmpwpmkmzti.php on line 56\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    $tribonacci = array(1,\
    \ 3, 2);\n    for ($i = 3; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n   \
    \         $tribonacci[$i] = 1 + ($i / 2);\n        } else {\n            $tribonacci[$i]\
    \ = $tribonacci[$i - 1] + $tribonacci[$i - 2] + $tribonacci[$i + 1];\n       \
    \ }\n    }\n    return $tribonacci;\n}\n\necho '<pre>';\nprint_r(tri(3));\nprint_r(tri(7));\n\
    print_r(tri(0));\nprint_r(tri(1));\necho '</pre>';\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>\nWarning: Undefined array key 4 in /tmp/tmppqx6j860.php on line 24\n\
    Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 2\n    [3] => 5\n)\n\nWarning:\
    \ Undefined array key 4 in /tmp/tmppqx6j860.php on line 24\n\nWarning: Undefined\
    \ array key 6 in /tmp/tmppqx6j860.php on line 24\n\nWarning: Undefined array key\
    \ 8 in /tmp/tmppqx6j860.php on line 24\nArray\n(\n    [0] => 1\n    [1] => 3\n\
    \    [2] => 2\n    [3] => 5\n    [4] => 3\n    [5] => 8\n    [6] => 4\n    [7]\
    \ => 12\n)\nArray\n(\n    [0] => 1\n    [1] => 3\n    [2] => 2\n)\nArray\n(\n\
    \    [0] => 1\n    [1] => 3\n    [2] => 2\n)\n</pre>\nWarning: Undefined array\
    \ key 4 in /tmp/tmppqx6j860.php on line 24\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmppqx6j860.php:41\nStack trace:\n#0 /tmp/tmppqx6j860.php(53):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmppqx6j860.php on line 41\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n\t$arr = [1, 3, 2];\n\
    \t$result = [];\n\tfor ($i = 0; $i <= $n; $i++) {\n\t\tif (count($arr) == ($n\
    \ + 1)) {\n\t\t\tbreak;\n\t\t}\n\t\tif ($i % 2 == 0) {\n\t\t\t$result[$i] = 1\
    \ + $i / 2;\n\t\t} else {\n\t\t\t$result[$i] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i\
    \ + 1];\n\t\t}\n\t\t$arr = $result;\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key -1 in /tmp/tmpbkrdok1k.php on line 28\n\n\
    Warning: Undefined array key 2 in /tmp/tmpbkrdok1k.php on line 28\n\nWarning:\
    \ Undefined array key 4 in /tmp/tmpbkrdok1k.php on line 28\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpbkrdok1k.php:40\nStack trace:\n#0 /tmp/tmpbkrdok1k.php(52):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpbkrdok1k.php on line 40\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    $tri = [1, 3, 2];\n\
    \    for ($i = 3; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n            $tri[]\
    \ = $i / 2 + 1;\n        } else {\n            $tri[] = $tri[$i - 1] + $tri[$i\
    \ - 2] + $tri[$i + 1];\n        }\n    }\n    return $tri;\n}\necho tri(5);\n\
    function candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpncbol153.php on line 24\n\n\
    Warning: Undefined array key 6 in /tmp/tmpncbol153.php on line 24\n\nWarning:\
    \ Array to string conversion in /tmp/tmpncbol153.php on line 29\nArray\nWarning:\
    \ Undefined array key 4 in /tmp/tmpncbol153.php on line 24\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpncbol153.php:35\nStack trace:\n#0 /tmp/tmpncbol153.php(47):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpncbol153.php on line 35\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  $a = array(3);\n  $i\
    \ = 0;\n  while ($i < $n) {\n    $a[$i + 1] = $i % 2 == 0 ? 1 + $i / 2 : $a[$i\
    \ - 1] + $a[$i - 2] + $a[$i + 1];\n    $i++;\n  }\n  return $a;\n}\necho '<pre>';\n\
    var_dump(tri(3));\necho '</pre>';\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>\nWarning: Undefined array key -1 in /tmp/tmp6cik9y9p.php on line\
    \ 22\n\nWarning: Undefined array key 2 in /tmp/tmp6cik9y9p.php on line 22\narray(4)\
    \ {\n  [0]=>\n  int(3)\n  [1]=>\n  int(1)\n  [2]=>\n  int(3)\n  [3]=>\n  int(2)\n\
    }\n</pre>\nWarning: Undefined array key -1 in /tmp/tmp6cik9y9p.php on line 22\n\
    \nWarning: Undefined array key 2 in /tmp/tmp6cik9y9p.php on line 22\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmp6cik9y9p.php:35\nStack trace:\n\
    #0 /tmp/tmp6cik9y9p.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp6cik9y9p.php\
    \ on line 35\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    if($n == 0) {\n \
    \       return array(0);\n    }\n    $tri = array(1, 3, 2);\n    for($i = 3; $i\
    \ <= $n; $i++) {\n        if($i % 2 == 0) {\n            $tri[$i] = 1 + ($i /\
    \ 2);\n        } else {\n            $tri[$i] = $tri[$i - 1] + $tri[$i - 2] +\
    \ $tri[$i + 1];\n        }\n    }\n    return $tri;\n}\nprint_r(tri(3));\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmppzdw7h2s.php on line 27\nArray\n\
    (\n    [0] => 1\n    [1] => 3\n    [2] => 2\n    [3] => 5\n)\n\nWarning: Undefined\
    \ array key 4 in /tmp/tmppzdw7h2s.php on line 27\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmppzdw7h2s.php:38\nStack trace:\n#0 /tmp/tmppzdw7h2s.php(50):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmppzdw7h2s.php on line 38\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    $result = array();\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        if ($i == 1) {\n            $result[]\
    \ = 3;\n        } else if ($i % 2 == 0) {\n            $result[] = 1 + $i / 2;\n\
    \        } else {\n            $result[] = $result[$i - 2] + $result[$i - 1] +\
    \ $result[$i];\n        }\n    }\n    return $result;\n}\nprint_r(tri(4));\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 2 in /tmp/tmpzkl_gxdt.php on line 26\n\n\
    Warning: Undefined array key 3 in /tmp/tmpzkl_gxdt.php on line 26\nArray\n(\n\
    \    [0] => 3\n    [1] => 2\n    [2] => 2\n    [3] => 3\n)\n\nWarning: Undefined\
    \ array key 2 in /tmp/tmpzkl_gxdt.php on line 26\n\nWarning: Undefined array key\
    \ 3 in /tmp/tmpzkl_gxdt.php on line 26\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpzkl_gxdt.php:37\nStack trace:\n#0 /tmp/tmpzkl_gxdt.php(49):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpzkl_gxdt.php on line 37\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    // TODO\n}\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph5ouu_8y.php:26\n\
    Stack trace:\n#0 /tmp/tmph5ouu_8y.php(38): test()\n#1 {main}\n  thrown in /tmp/tmph5ouu_8y.php\
    \ on line 26\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  if ($n == 0) {\n  \
    \  return 0;\n  }\n  if ($n == 1) {\n    return 3;\n  }\n  if ($n == 2) {\n  \
    \  return 2;\n  }\n  if ($n % 2 == 0) {\n    return 1 + $n / 2;\n  }\n  else {\n\
    \    return tri($n - 1) + tri($n - 2) + tri($n + 1);\n  }\n}\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpne2bgtjj.php:40\n\
    Stack trace:\n#0 /tmp/tmpne2bgtjj.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpne2bgtjj.php\
    \ on line 40\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  if ($n == 0) return\
    \ [1];\n  $result = [1, 3, 2];\n  $x = 4;\n  while ($x <= $n) {\n    $result[]\
    \ = $x % 2 == 0 ? $x / 2 : $result[$x - 1] + $result[$x - 2] + $result[$x - 3];\n\
    \    $x++;\n  }\n  return $result;\n}\nprint_r(tri(3));\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 2\n)\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp8tbaqsmm.php:34\nStack trace:\n#0 /tmp/tmp8tbaqsmm.php(46):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp8tbaqsmm.php on line 34\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  $tribonacci = [];\n\
    \  $start = 0;\n  for ($i = 0; $i <= $n; $i++) {\n    $tribonacci[$i] = tribonacci($start);\n\
    \    $start++;\n  }\n  return $tribonacci;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function tribonacci()\
    \ in /tmp/tmprxonknsq.php:22\nStack trace:\n#0 /tmp/tmprxonknsq.php(29): tri(3)\n\
    #1 /tmp/tmprxonknsq.php(33): candidate(3)\n#2 /tmp/tmprxonknsq.php(45): test()\n\
    #3 {main}\n  thrown in /tmp/tmprxonknsq.php on line 22\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n\t$arr = [1, 3, 2];\n\
    \t$i = 3;\n\twhile ($i <= $n) {\n\t\tif ($i % 2 == 0) {\n\t\t\t$arr[] = 1 + $i\
    \ / 2;\n\t\t} else {\n\t\t\t$arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n\
    \t\t}\n\t\t$i++;\n\t}\n\treturn $arr;\n}\necho tri(3);\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpvy7vulbr.php on line 25\n\n\
    Warning: Array to string conversion in /tmp/tmpvy7vulbr.php on line 31\nArray\n\
    Warning: Undefined array key 4 in /tmp/tmpvy7vulbr.php on line 25\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpvy7vulbr.php:37\nStack trace:\n\
    #0 /tmp/tmpvy7vulbr.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpvy7vulbr.php\
    \ on line 37\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    $arr[] = 1;\n   \
    \ $arr[] = 3;\n    $arr[] = 2;\n    $arr[] = 8;\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        if ($i == 0) {\n            $arr[] = 3;\n        } else if ($i %\
    \ 2 == 0) {\n            $arr[] = 1 + $i / 2;\n        } else {\n            $arr[]\
    \ = $arr[$i] + $arr[$i - 1] + $arr[$i + 1];\n        }\n    }\n    return $arr;\n\
    }\necho implode(\"\\n\", tri(3));\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n3\n2\n8\n3\n6\n2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9q12fc6a.php:40\n\
    Stack trace:\n#0 /tmp/tmp9q12fc6a.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp9q12fc6a.php\
    \ on line 40\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  if($n == 0) return\
    \ array(1);\n  $r = array(1, 3, 2);\n  for($i = 3; $i <= $n; $i++) {\n    $r[]\
    \ = $i % 2 == 0 ? 1 + ($i / 2) : $r[$i - 1] + $r[$i - 2] + $r[$i + 1];\n  }\n\
    \  return $r;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmprlykc7b7.php on line 22\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmprlykc7b7.php:32\nStack\
    \ trace:\n#0 /tmp/tmprlykc7b7.php(44): test()\n#1 {main}\n  thrown in /tmp/tmprlykc7b7.php\
    \ on line 32\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    $arr = array();\n\
    \    for ($i = 1; $i <= $n + 1; $i++) {\n        if ($i == 1) {\n            $arr[]\
    \ = 3;\n        } elseif ($i % 2 == 0) {\n            $arr[] = 1 + $i / 2;\n \
    \       } else {\n            $arr[] = $arr[$i - 2] + $arr[$i - 3] + $arr[$i -\
    \ 1];\n        }\n    }\n    return $arr;\n}\nprint_r(tri(3));\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 2 in /tmp/tmph_pttg72.php on line 26\nArray\n\
    (\n    [0] => 3\n    [1] => 2\n    [2] => 5\n    [3] => 3\n)\n\nWarning: Undefined\
    \ array key 2 in /tmp/tmph_pttg72.php on line 26\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmph_pttg72.php:37\nStack trace:\n#0 /tmp/tmph_pttg72.php(49):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmph_pttg72.php on line 37\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  $results = [];\n  $results[0]\
    \ = 1;\n  $results[1] = 3;\n  $results[2] = 2;\n  for ($i = 3; $i <= $n; $i++)\
    \ {\n    if ($i % 2 == 0) {\n      $results[$i] = 1 + $i / 2;\n    } else {\n\
    \      $results[$i] = $results[$i - 1] + $results[$i - 2] + $results[$i + 1];\n\
    \    }\n  }\n  return $results;\n}\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmputg2thbv.php on line 27\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmputg2thbv.php:37\nStack\
    \ trace:\n#0 /tmp/tmputg2thbv.php(49): test()\n#1 {main}\n  thrown in /tmp/tmputg2thbv.php\
    \ on line 37\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    if ($n == 0) {\n\
    \        return [1];\n    }\n    if ($n == 1) {\n        return [1, 3];\n    }\n\
    \    if ($n == 2) {\n        return [1, 3, 2];\n    }\n    $result = [1, 3, 2];\n\
    \    for ($i = 3; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n            $result[]\
    \ = 1 + ($i / 2);\n        } else {\n            $result[] = $result[$i - 1] +\
    \ $result[$i - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpyd_v49o2.php on line 33\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpyd_v49o2.php:44\nStack\
    \ trace:\n#0 /tmp/tmpyd_v49o2.php(56): test()\n#1 {main}\n  thrown in /tmp/tmpyd_v49o2.php\
    \ on line 44\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n\tif ($n === 0) {\n\t\
    \treturn array(1);\n\t}\n\tif ($n === 1) {\n\t\treturn array(1, 3);\n\t}\n\tif\
    \ ($n === 2) {\n\t\treturn array(1, 3, 2);\n\t}\n\t$result = array(1, 3, 2);\n\
    \tfor ($i = 3; $i <= $n; $i++) {\n\t\tif ($i % 2 == 0) {\n\t\t\t$result[] = 1\
    \ + ($i / 2);\n\t\t} else {\n\t\t\t$result[] = $result[$i - 1] + $result[$i -\
    \ 2] + $result[$i + 1];\n\t\t}\n\t}\n\treturn $result;\n}\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmp9buf4r6v.php on line 33\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp9buf4r6v.php:43\nStack\
    \ trace:\n#0 /tmp/tmp9buf4r6v.php(55): test()\n#1 {main}\n  thrown in /tmp/tmp9buf4r6v.php\
    \ on line 43\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    if ($n == 0) return\
    \ [0];\n    if ($n == 1) return [0, 3];\n    if ($n == 2) return [0, 3, 1];\n\
    \    $arr = [0, 3, 1];\n    for ($i = 3; $i <= $n; $i++) {\n        if ($i % 2\
    \ == 0) {\n            $arr[] = floor(1 + $i / 2);\n        } else {\n       \
    \     $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n        }\n    }\n\
    \    return $arr;\n}\nprint_r(tri(4));\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpcsk22vtr.php on line 27\nArray\n\
    (\n    [0] => 0\n    [1] => 3\n    [2] => 1\n    [3] => 4\n    [4] => 3\n)\n\n\
    Warning: Undefined array key 4 in /tmp/tmpcsk22vtr.php on line 27\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpcsk22vtr.php:38\nStack trace:\n\
    #0 /tmp/tmpcsk22vtr.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpcsk22vtr.php\
    \ on line 38\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  $arr = array();\n \
    \ $arr[0] = 1;\n  $arr[1] = 3;\n  $arr[2] = 2;\n  for ($i = 3; $i <= $n; $i++)\
    \ {\n    if ($i % 2 == 0) {\n      $arr[$i] = 1 + $i / 2;\n    } else {\n    \
    \  $arr[$i] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n    }\n  }\n  return\
    \ $arr;\n}\n\necho json_encode(tri(3));\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpx56wlcw8.php on line 27\n[1,3,2,5]\n\
    Warning: Undefined array key 4 in /tmp/tmpx56wlcw8.php on line 27\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpx56wlcw8.php:39\nStack trace:\n\
    #0 /tmp/tmpx56wlcw8.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpx56wlcw8.php\
    \ on line 39\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    $result = [];\n \
    \   for ($i = 1; $i <= $n + 1; $i++) {\n        if ($i == 1) {\n            $result[]\
    \ = 3;\n        } elseif ($i % 2 == 0) {\n            $result[] = 1 + $i / 2;\n\
    \        } else {\n            $result[] = $result[$i - 2] + $result[$i - 3] +\
    \ $result[$i];\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 3 in /tmp/tmp36nx_0qu.php on line 26\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp36nx_0qu.php:37\nStack\
    \ trace:\n#0 /tmp/tmp36nx_0qu.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp36nx_0qu.php\
    \ on line 37\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    $result = array();\n\
    \    for ($i = 1; $i <= $n + 1; $i++) {\n        if ($i == 1) {\n            $result[]\
    \ = 3;\n        } else if ($i % 2 == 0) {\n            $result[] = 1 + ($i / 2);\n\
    \        } else {\n            $result[] = $result[$i - 2] + $result[$i - 3] +\
    \ $result[$i - 1];\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 2 in /tmp/tmp7vvknqi5.php on line 26\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp7vvknqi5.php:37\nStack\
    \ trace:\n#0 /tmp/tmp7vvknqi5.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp7vvknqi5.php\
    \ on line 37\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    if ($n == 0) {\n\
    \        return array(1);\n    }\n    if ($n == 1) {\n        return array(1,\
    \ 3);\n    }\n    if ($n == 2) {\n        return array(1, 3, 2);\n    }\n    $arr\
    \ = array(1, 3, 2);\n    for ($i = 3; $i <= $n; $i++) {\n        if ($i % 2 ==\
    \ 0) {\n            $arr[] = 1 + $i / 2;\n        } else {\n            $arr[]\
    \ = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n        }\n    }\n    return\
    \ $arr;\n}\n\nvar_dump(tri(1));\nvar_dump(tri(2));\nvar_dump(tri(3));\nvar_dump(tri(4));\n\
    var_dump(tri(6));\nvar_dump(tri(8));\nvar_dump(tri(10));\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "array(2) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(3)\n}\narray(3) {\n  [0]=>\n\
    \  int(1)\n  [1]=>\n  int(3)\n  [2]=>\n  int(2)\n}\n\nWarning: Undefined array\
    \ key 4 in /tmp/tmpz102lweh.php on line 33\narray(4) {\n  [0]=>\n  int(1)\n  [1]=>\n\
    \  int(3)\n  [2]=>\n  int(2)\n  [3]=>\n  int(5)\n}\n\nWarning: Undefined array\
    \ key 4 in /tmp/tmpz102lweh.php on line 33\narray(5) {\n  [0]=>\n  int(1)\n  [1]=>\n\
    \  int(3)\n  [2]=>\n  int(2)\n  [3]=>\n  int(5)\n  [4]=>\n  int(3)\n}\n\nWarning:\
    \ Undefined array key 4 in /tmp/tmpz102lweh.php on line 33\n\nWarning: Undefined\
    \ array key 6 in /tmp/tmpz102lweh.php on line 33\narray(7) {\n  [0]=>\n  int(1)\n\
    \  [1]=>\n  int(3)\n  [2]=>\n  int(2)\n  [3]=>\n  int(5)\n  [4]=>\n  int(3)\n\
    \  [5]=>\n  int(8)\n  [6]=>\n  int(4)\n}\n\nWarning: Undefined array key 4 in\
    \ /tmp/tmpz102lweh.php on line 33\n\nWarning: Undefined array key 6 in /tmp/tmpz102lweh.php\
    \ on line 33\n\nWarning: Undefined array key 8 in /tmp/tmpz102lweh.php on line\
    \ 33\narray(9) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(3)\n  [2]=>\n  int(2)\n  [3]=>\n\
    \  int(5)\n  [4]=>\n  int(3)\n  [5]=>\n  int(8)\n  [6]=>\n  int(4)\n  [7]=>\n\
    \  int(12)\n  [8]=>\n  int(5)\n}\n\nWarning: Undefined array key 4 in /tmp/tmpz102lweh.php\
    \ on line 33\n\nWarning: Undefined array key 6 in /tmp/tmpz102lweh.php on line\
    \ 33\n\nWarning: Undefined array key 8 in /tmp/tmpz102lweh.php on line 33\n\n\
    Warning: Undefined array key 10 in /tmp/tmpz102lweh.php on line 33\narray(11)\
    \ {\n  [0]=>\n  int(1)\n  [1]=>\n  int(3)\n  [2]=>\n  int(2)\n  [3]=>\n  int(5)\n\
    \  [4]=>\n  int(3)\n  [5]=>\n  int(8)\n  [6]=>\n  int(4)\n  [7]=>\n  int(12)\n\
    \  [8]=>\n  int(5)\n  [9]=>\n  int(17)\n  [10]=>\n  int(6)\n}\n\nWarning: Undefined\
    \ array key 4 in /tmp/tmpz102lweh.php on line 33\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpz102lweh.php:52\nStack trace:\n#0 /tmp/tmpz102lweh.php(64):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpz102lweh.php on line 52\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    // TODO: here's the\
    \ code.\n    if ($n == 0) {\n        return [0];\n    }\n    $result = [1, 3,\
    \ 2];\n    if ($n <= 3) {\n        return array_slice($result, 0, $n + 1);\n \
    \   }\n    for ($i = 3; $i < $n; $i++) {\n        $val = 0;\n        if ($i %\
    \ 2 == 0) {\n            $val = 1 + ($i / 2);\n        } else {\n            $val\
    \ = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n        $result[]\
    \ = $val;\n    }\n    return $result;\n}\n\nvar_dump(tri(2));\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "array(3) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(3)\n  [2]=>\n  int(2)\n}\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmplvpxjdmy.php:46\nStack\
    \ trace:\n#0 /tmp/tmplvpxjdmy.php(58): test()\n#1 {main}\n  thrown in /tmp/tmplvpxjdmy.php\
    \ on line 46\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n\tif($n <= 0) return\
    \ array();\n\t$a = array(1, 3, 2);\n\tif($n == 1) return array_slice($a, 0, 1);\n\
    \tif($n == 2) return array_slice($a, 0, 2);\n\tif($n == 3) return $a;\n\t$i =\
    \ 3;\n\twhile($i <= $n) {\n\t\tif($i % 2 == 0) $a[] = 1 + $i / 2;\n\t\telse $a[]\
    \ = $a[$i - 1] + $a[$i - 2] + $a[$i + 1];\n\t\t$i++;\n\t}\n\treturn $a;\n}\necho\
    \ \"<pre>\";\nprint_r(tri(3));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 2\n)\n</pre>\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmp09061gvg.php:40\nStack trace:\n\
    #0 /tmp/tmp09061gvg.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp09061gvg.php\
    \ on line 40\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n\t$arr = array(1, 3,\
    \ 2);\n\t\n\tfor ($i = 3; $i <= $n; $i++) {\n\t\tif ($i % 2 == 0) {\n\t\t\t$arr[]\
    \ = 1 + $i / 2;\n\t\t} else {\n\t\t\t$arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i\
    \ + 1];\n\t\t}\n\t}\n\t\n\treturn $arr;\n}\n\nprint_r(tri(3));\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpy2p1wow8.php on line 25\nArray\n\
    (\n    [0] => 1\n    [1] => 3\n    [2] => 2\n    [3] => 5\n)\n\nWarning: Undefined\
    \ array key 4 in /tmp/tmpy2p1wow8.php on line 25\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpy2p1wow8.php:38\nStack trace:\n#0 /tmp/tmpy2p1wow8.php(50):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpy2p1wow8.php on line 38\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  $arr = [3, 2, 1];\n\
    \  $i = 0;\n  while ($i < $n) {\n    $arr[] = $arr[$i] + $arr[$i + 1] + $arr[$i\
    \ + 2];\n    $i++;\n  }\n  return $arr;\n}\nprint_r(tri(3));\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 3\n    [1] => 2\n    [2] => 1\n    [3] => 6\n    [4]\
    \ => 9\n    [5] => 16\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf7qcn1f5.php:33\n\
    Stack trace:\n#0 /tmp/tmpf7qcn1f5.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpf7qcn1f5.php\
    \ on line 33\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n\tif($n == 0) return\
    \ [0];\n\t$seq = [1,3,2];\n\t$i = 3;\n\twhile($i < $n + 1) {\n\t\t$val = 1 + $i\
    \ / 2;\n\t\tif($i % 2 == 0) {\n\t\t\t$seq[] = $val;\n\t\t} else {\n\t\t\t$seq[]\
    \ = $seq[$i - 1] + $seq[$i - 2] + $seq[$i + 1];\n\t\t}\n\t\t$i++;\n\t}\n\treturn\
    \ $seq;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1,\
    \ 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63,\
    \ 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpaw70_vmp.php on line 27\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpaw70_vmp.php:39\nStack\
    \ trace:\n#0 /tmp/tmpaw70_vmp.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpaw70_vmp.php\
    \ on line 39\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n\tif($n == 0) return\
    \ 0;\n\tif($n == 1) return 1;\n\tif($n == 2) return 1;\n\tif($n % 2 == 0) return\
    \ 1 + $n / 2;\n\treturn tri($n - 1) + tri($n - 2) + tri($n + 1);\n}\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdwcik0sl.php:30\n\
    Stack trace:\n#0 /tmp/tmpdwcik0sl.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpdwcik0sl.php\
    \ on line 30\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  $res = array(1, 3,\
    \ 2);\n  for ($i = 3; $i <= $n; $i++) {\n    if ($i % 2 == 0) {\n      $res[]\
    \ = 1 + ($i / 2);\n    } else {\n      $res[] = $res[$i - 1] + $res[$i - 2] +\
    \ $res[$i + 1];\n    }\n  }\n  return $res;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpdl_3bblt.php on line 24\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpdl_3bblt.php:35\nStack\
    \ trace:\n#0 /tmp/tmpdl_3bblt.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpdl_3bblt.php\
    \ on line 35\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n\t$arr = array(3, 2,\
    \ 8);\n\tfor ($i = 0; $i < $n; $i++) {\n\t\t$arr[] = ($i + 1) % 2 ? $arr[count($arr)\
    \ - 1] + $arr[count($arr) - 2] + $arr[count($arr) - 3] : ($i + 1) / 2;\n\t}\n\t\
    return $arr;\n}\nprint_r(tri(2));\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 3\n    [1] => 2\n    [2] => 8\n    [3] => 13\n   \
    \ [4] => 1\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp15dfp9no.php:31\n\
    Stack trace:\n#0 /tmp/tmp15dfp9no.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp15dfp9no.php\
    \ on line 31\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    $tri = array(1, 3,\
    \ 2);\n    if ($n == 0) {\n        return array(1);\n    } elseif ($n == 1) {\n\
    \        return array(1, 3);\n    } elseif ($n == 2) {\n        return array(1,\
    \ 3, 2);\n    } else {\n        while (count($tri) < $n + 1) {\n            $tri[count($tri)]\
    \ = $tri[count($tri) - 3] + $tri[count($tri) - 2] + $tri[count($tri) - 1];\n \
    \       }\n        return $tri;\n    }\n}\nfunction candidate(...$args) {\n  \
    \  return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !==\
    \ array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp95upao8b.php:38\n\
    Stack trace:\n#0 /tmp/tmp95upao8b.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp95upao8b.php\
    \ on line 38\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    if ($n <= 0) {\n\
    \        return [1];\n    }\n    $result = [1, 3, 2];\n    for ($i = 3; $i <=\
    \ $n; $i++) {\n        if ($i % 2 === 0) {\n            $result[] = 1 + $i / 2;\n\
    \        } else {\n            $result[] = $result[$i - 1] + $result[$i - 2] +\
    \ $result[$i + 1];\n        }\n    }\n    return $result;\n}\necho '<pre>';\n\
    print_r(tri(3));\necho '</pre>';\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>\nWarning: Undefined array key 4 in /tmp/tmpbtq4uqg7.php on line 27\n\
    Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 2\n    [3] => 5\n)\n</pre>\n\
    Warning: Undefined array key 4 in /tmp/tmpbtq4uqg7.php on line 27\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpbtq4uqg7.php:40\nStack trace:\n\
    #0 /tmp/tmpbtq4uqg7.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpbtq4uqg7.php\
    \ on line 40\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    // Write your code\
    \ here\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1,\
    \ 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63,\
    \ 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr_s6ncos.php:27\n\
    Stack trace:\n#0 /tmp/tmpr_s6ncos.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpr_s6ncos.php\
    \ on line 27\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm677mswy.php:27\n\
    Stack trace:\n#0 /tmp/tmpm677mswy.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpm677mswy.php\
    \ on line 27\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  $arr = [1, 3, 2];\n\
    \  if ($n < 3) {\n    return $arr;\n  }\n  for ($i = 3; $i <= $n; $i++) {\n  \
    \  if ($i % 2 == 0) {\n      $arr[] = 1 + $i / 2;\n    } else {\n      $arr[]\
    \ = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n    }\n  }\n  return $arr;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpdctj6mef.php on line 27\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpdctj6mef.php:38\nStack\
    \ trace:\n#0 /tmp/tmpdctj6mef.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpdctj6mef.php\
    \ on line 38\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    $arr = array();\n\
    \    for ($i = 1; $i <= $n + 1; $i++) {\n        if ($i == 1) {\n            $arr[]\
    \ = 3;\n        } else if ($i % 2 == 0) {\n            $arr[] = $i / 2;\n    \
    \    } else {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i - 3];\n\
    \        }\n    }\n    return $arr;\n}\n\nprint_r(tri(3));\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 2 in /tmp/tmp75kth4a4.php on line 26\nArray\n\
    (\n    [0] => 3\n    [1] => 1\n    [2] => 4\n    [3] => 2\n)\n\nWarning: Undefined\
    \ array key 2 in /tmp/tmp75kth4a4.php on line 26\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp75kth4a4.php:38\nStack trace:\n#0 /tmp/tmp75kth4a4.php(50):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp75kth4a4.php on line 38\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n\t$tris = array(1, 3,\
    \ 2);\n\tfor ($i = 0; $i < $n - 2; $i++) {\n\t\t$tris[] = $tris[$i] + $tris[$i\
    \ + 1] + $tris[$i + 2];\n\t}\n\treturn $tris;\n}\nprint_r(tri(10));\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 2\n    [3] => 6\n    [4]\
    \ => 11\n    [5] => 19\n    [6] => 36\n    [7] => 66\n    [8] => 121\n    [9]\
    \ => 223\n    [10] => 410\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp89a1rnxd.php:31\nStack trace:\n#0 /tmp/tmp89a1rnxd.php(43): test()\n\
    #1 {main}\n  thrown in /tmp/tmp89a1rnxd.php on line 31\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n\t$arr = array(1, 3,\
    \ 2);\n\tfor ($i = 3; $i <= $n; $i++) {\n\t\tif ($i % 2 === 0) {\n\t\t\t$arr[]\
    \ = $i / 2;\n\t\t} else {\n\t\t\t$arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i\
    \ + 1];\n\t\t}\n\t}\n\treturn $arr;\n}\necho \"<pre>\";\nprint_r(tri(7));\necho\
    \ \"</pre>\";\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1,\
    \ 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63,\
    \ 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>\nWarning: Undefined array key 4 in /tmp/tmpzisoqxdc.php on line 24\n\
    \nWarning: Undefined array key 6 in /tmp/tmpzisoqxdc.php on line 24\n\nWarning:\
    \ Undefined array key 8 in /tmp/tmpzisoqxdc.php on line 24\nArray\n(\n    [0]\
    \ => 1\n    [1] => 3\n    [2] => 2\n    [3] => 5\n    [4] => 2\n    [5] => 7\n\
    \    [6] => 3\n    [7] => 10\n)\n</pre>\nWarning: Undefined array key 4 in /tmp/tmpzisoqxdc.php\
    \ on line 24\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzisoqxdc.php:37\n\
    Stack trace:\n#0 /tmp/tmpzisoqxdc.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpzisoqxdc.php\
    \ on line 37\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n\t// Write your code\
    \ here\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1,\
    \ 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63,\
    \ 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgvftm9pg.php:27\n\
    Stack trace:\n#0 /tmp/tmpgvftm9pg.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpgvftm9pg.php\
    \ on line 27\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  if ($n == 0) return\
    \ array(1);\n  if ($n == 1) return array(1, 3);\n  if ($n == 2) return array(1,\
    \ 3, 2);\n  $arr = array(1, 3, 2);\n  for ($i = 2; $i < $n; $i++) {\n    if ($i\
    \ % 2 == 0) {\n      $val = 1 + ($i / 2);\n    } else {\n      $val = $arr[$i\
    \ - 1] + $arr[$i - 2] + $arr[$i + 1];\n    }\n    $arr[] = $val;\n  }\n  return\
    \ $arr;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1,\
    \ 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63,\
    \ 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpywet_ytj.php:39\n\
    Stack trace:\n#0 /tmp/tmpywet_ytj.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpywet_ytj.php\
    \ on line 39\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n\t$arr = array(1, 3,\
    \ 2);\n\tfor ($i = 3; $i <= $n; $i++) {\n\t\tif ($i % 2 == 0) {\n\t\t\t$arr[]\
    \ = 1 + $i / 2;\n\t\t} else {\n\t\t\t$arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i\
    \ + 1];\n\t\t}\n\t}\n\treturn $arr;\n}\nprint_r(tri(3));\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpsw9gjnbr.php on line 24\nArray\n\
    (\n    [0] => 1\n    [1] => 3\n    [2] => 2\n    [3] => 5\n)\n\nWarning: Undefined\
    \ array key 4 in /tmp/tmpsw9gjnbr.php on line 24\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpsw9gjnbr.php:35\nStack trace:\n#0 /tmp/tmpsw9gjnbr.php(47):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpsw9gjnbr.php on line 35\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    $result = [];\n \
    \   if($n == 1) {\n        $result[] = 3;\n    }\n    else if($n == 2) {\n   \
    \     $result[] = 3;\n        $result[] = 2;\n    }\n    else if($n == 3) {\n\
    \        $result[] = 3;\n        $result[] = 2;\n        $result[] = 8;\n    }\n\
    \    else {\n        $result[] = 3;\n        $result[] = 2;\n        $result[]\
    \ = 8;\n        $n -= 3;\n        while($n--) {\n            $last = array_pop($result);\n\
    \            $secondLast = array_pop($result);\n            $thirdLast = array_pop($result);\n\
    \            if($last % 2 == 0) {\n                $result[] = $thirdLast;\n \
    \               $result[] = $secondLast;\n                $result[] = $last +\
    \ 1 + ($last / 2);\n            }\n            else {\n                $result[]\
    \ = $thirdLast;\n                $result[] = $secondLast;\n                $result[]\
    \ = $last + $secondLast + $thirdLast;\n            }\n        }\n    }\n    return\
    \ $result;\n}\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1,\
    \ 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63,\
    \ 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo2aif5fl.php:60\n\
    Stack trace:\n#0 /tmp/tmpo2aif5fl.php(72): test()\n#1 {main}\n  thrown in /tmp/tmpo2aif5fl.php\
    \ on line 60\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    $arr = array(1, 3,\
    \ 2);\n    if ($n < 3) {\n        return array_slice($arr, 0, $n + 1);\n    }\n\
    \    for ($i = 3; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n            $arr[]\
    \ = 1 + $i / 2;\n        } else {\n            $arr[] = $arr[$i - 1] + $arr[$i\
    \ - 2] + $arr[$i + 1];\n        }\n    }\n    return $arr;\n}\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmptvnskgff.php on line 27\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmptvnskgff.php:37\nStack\
    \ trace:\n#0 /tmp/tmptvnskgff.php(49): test()\n#1 {main}\n  thrown in /tmp/tmptvnskgff.php\
    \ on line 37\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n\t$arr = array(1, 3,\
    \ 2);\n\t$i = 3;\n\twhile ($i <= $n) {\n\t\tif ($i % 2 == 0) {\n\t\t\t$arr[] =\
    \ 1 + $i / 2;\n\t\t} else {\n\t\t\t$arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i\
    \ + 1];\n\t\t}\n\t\t$i++;\n\t}\n\treturn $arr;\n}\n\necho \"<pre>\";\nprint_r(tri(7));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>\nWarning: Undefined array key 4 in /tmp/tmp_stl23js.php on line 25\n\
    \nWarning: Undefined array key 6 in /tmp/tmp_stl23js.php on line 25\n\nWarning:\
    \ Undefined array key 8 in /tmp/tmp_stl23js.php on line 25\nArray\n(\n    [0]\
    \ => 1\n    [1] => 3\n    [2] => 2\n    [3] => 5\n    [4] => 3\n    [5] => 8\n\
    \    [6] => 4\n    [7] => 12\n)\n</pre>\nWarning: Undefined array key 4 in /tmp/tmp_stl23js.php\
    \ on line 25\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_stl23js.php:40\n\
    Stack trace:\n#0 /tmp/tmp_stl23js.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp_stl23js.php\
    \ on line 40\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  $tribonacci = array(1,\
    \ 3, 2);\n  if ($n > 2) {\n    for ($i = 3; $i <= $n; $i++) {\n      if ($i %\
    \ 2 == 0) {\n        $tribonacci[$i] = 1 + ($i / 2);\n      } else {\n       \
    \ $tribonacci[$i] = $tribonacci[$i - 1] + $tribonacci[$i - 2] + $tribonacci[$i\
    \ + 1];\n      }\n    }\n  }\n  return $tribonacci;\n}\necho \"tri(3)\\n\";\n\
    print_r(tri(3));\necho \"tri(2)\\n\";\nprint_r(tri(2));\necho \"tri(4)\\n\";\n\
    print_r(tri(4));\necho \"tri(8)\\n\";\nprint_r(tri(8));\necho \"tri(10)\\n\";\n\
    print_r(tri(10));\necho \"tri(12)\\n\";\nprint_r(tri(12));\necho \"tri(20)\\n\"\
    ;\nprint_r(tri(20));\necho \"tri(18)\\n\";\nprint_r(tri(18));\necho \"tri(24)\\\
    n\";\nprint_r(tri(24));\necho \"tri(28)\\n\";\nprint_r(tri(28));\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "tri(3)\n\nWarning: Undefined array key 4 in /tmp/tmpyzo5f_rh.php on line\
    \ 25\nArray\n(\n    [0] => 1\n    [1] => 3\n    [2] => 2\n    [3] => 5\n)\ntri(2)\n\
    Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 2\n)\ntri(4)\n\nWarning: Undefined\
    \ array key 4 in /tmp/tmpyzo5f_rh.php on line 25\nArray\n(\n    [0] => 1\n   \
    \ [1] => 3\n    [2] => 2\n    [3] => 5\n    [4] => 3\n)\ntri(8)\n\nWarning: Undefined\
    \ array key 4 in /tmp/tmpyzo5f_rh.php on line 25\n\nWarning: Undefined array key\
    \ 6 in /tmp/tmpyzo5f_rh.php on line 25\n\nWarning: Undefined array key 8 in /tmp/tmpyzo5f_rh.php\
    \ on line 25\nArray\n(\n    [0] => 1\n    [1] => 3\n    [2] => 2\n    [3] => 5\n\
    \    [4] => 3\n    [5] => 8\n    [6] => 4\n    [7] => 12\n    [8] => 5\n)\ntri(10)\n\
    \nWarning: Undefined array key 4 in /tmp/tmpyzo5f_rh.php on line 25\n\nWarning:\
    \ Undefined array key 6 in /tmp/tmpyzo5f_rh.php on line 25\n\nWarning: Undefined\
    \ array key 8 in /tmp/tmpyzo5f_rh.php on line 25\n\nWarning: Undefined array key\
    \ 10 in /tmp/tmpyzo5f_rh.php on line 25\nArray\n(\n    [0] => 1\n    [1] => 3\n\
    \    [2] => 2\n    [3] => 5\n    [4] => 3\n    [5] => 8\n    [6] => 4\n    [7]\
    \ => 12\n    [8] => 5\n    [9] => 17\n    [10] => 6\n)\ntri(12)\n\nWarning: Undefined\
    \ array key 4 in /tmp/tmpyzo5f_rh.php on line 25\n\nWarning: Undefined array key\
    \ 6 in /tmp/tmpyzo5f_rh.php on line 25\n\nWarning: Undefined array key 8 in /tmp/tmpyzo5f_rh.php\
    \ on line 25\n\nWarning: Undefined array key 10 in /tmp/tmpyzo5f_rh.php on line\
    \ 25\n\nWarning: Undefined array key 12 in /tmp/tmpyzo5f_rh.php on line 25\nArray\n\
    (\n    [0] => 1\n    [1] => 3\n    [2] => 2\n    [3] => 5\n    [4] => 3\n    [5]\
    \ => 8\n    [6] => 4\n    [7] => 12\n    [8] => 5\n    [9] => 17\n    [10] =>\
    \ 6\n    [11] => 23\n    [12] => 7\n)\ntri(20)\n\nWarning: Undefined array key\
    \ 4 in /tmp/tmpyzo5f_rh.php on line 25\n\nWarning: Undefined array key 6 in /tmp/tmpyzo5f_rh.php\
    \ on line 25\n\nWarning: Undefined array key 8 in /tmp/tmpyzo5f_rh.php on line\
    \ 25\n\nWarning: Undefined array key 10 in /tmp/tmpyzo5f_rh.php on line 25\n\n\
    Warning: Undefined array key 12 in /tmp/tmpyzo5f_rh.php on line 25\n\nWarning:\
    \ Undefined array key 14 in /tmp/tmpyzo5f_rh.php on lin"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  // $sum = 3;\n  //\
    \ for ($i = 1; $i <= $n; $i++) {\n  //   $sum += $i;\n  // }\n  // return $sum;\n\
    \  $arr = [];\n  $arr[0] = 1;\n  $arr[1] = 3;\n  $arr[2] = 2;\n  for ($i = 3;\
    \ $i <= $n; $i++) {\n    $tri = $arr[$i - 1] + $arr[$i - 2] + $arr[$i - 3];\n\
    \    $arr[$i] = $tri;\n  }\n  return $arr;\n}\n\necho tri(6);\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Array to string conversion in /tmp/tmpyh9o120z.php on line 35\n\
    Array\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyh9o120z.php:41\n\
    Stack trace:\n#0 /tmp/tmpyh9o120z.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpyh9o120z.php\
    \ on line 41\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    if ($n == 0) {\n\
    \        return [1];\n    } elseif ($n == 1) {\n        return [1, 3];\n    }\
    \ elseif ($n == 2) {\n        return [1, 3, 2];\n    } else {\n        $arr =\
    \ tri($n - 1);\n        $new_item = 0;\n        if ($n % 2 == 0) {\n         \
    \   $new_item = $n / 2 + 1;\n        } else {\n            $new_item = $arr[count($arr)\
    \ - 1] + $arr[count($arr) - 2] + $arr[count($arr) - 3];\n        }\n        array_push($arr,\
    \ $new_item);\n        return $arr;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2xfsmp78.php:43\n\
    Stack trace:\n#0 /tmp/tmp2xfsmp78.php(55): test()\n#1 {main}\n  thrown in /tmp/tmp2xfsmp78.php\
    \ on line 43\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n\treturn null;\n}\n\n\
    function candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjxywgmfg.php:27\n\
    Stack trace:\n#0 /tmp/tmpjxywgmfg.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpjxywgmfg.php\
    \ on line 27\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n\t$m = [3, 1, 2];\n\t\
    for ($i = 0; $i < $n; $i++) {\n\t\tif ($i % 2 == 0)\n\t\t\t$m[] = $m[$i + 1] /\
    \ 2 + 1;\n\t\telse\n\t\t\t$m[] = $m[$i] + $m[$i - 1] + $m[$i + 1];\n\t}\n\treturn\
    \ $m;\n}\n$test = tri(3);\nvar_dump($test);\n\nfunction candidate(...$args) {\n\
    \    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "array(6) {\n  [0]=>\n  int(3)\n  [1]=>\n  int(1)\n  [2]=>\n  int(2)\n \
    \ [3]=>\n  float(1.5)\n  [4]=>\n  int(6)\n  [5]=>\n  float(1.75)\n}\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmppc9rki30.php:36\nStack trace:\n\
    #0 /tmp/tmppc9rki30.php(48): test()\n#1 {main}\n  thrown in /tmp/tmppc9rki30.php\
    \ on line 36\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n\t$seq = [3, 2, 1];\n\
    \tif ($n < 3) {\n\t\t$seq = array_slice($seq, 0, $n + 1);\n\t} else {\n\t\tfor\
    \ ($i = 3; $i <= $n; $i++) {\n\t\t\tif ($i % 2 == 0) {\n\t\t\t\t$seq[] = 1 + $i\
    \ / 2;\n\t\t\t} else {\n\t\t\t\t$seq[] = $seq[$i - 1] + $seq[$i - 2] + $seq[$i\
    \ + 1];\n\t\t\t}\n\t\t}\n\t}\n\treturn $seq;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpsgu_2mg9.php on line 27\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpsgu_2mg9.php:39\nStack\
    \ trace:\n#0 /tmp/tmpsgu_2mg9.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpsgu_2mg9.php\
    \ on line 39\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  $trib = [1, 3, 2];\n\
    \  for ($i = 3; $i <= $n; $i++) {\n    $trib[] = $i % 2 === 0 ? 1 + $i / 2 : $trib[$i\
    \ - 1] + $trib[$i - 2] + $trib[$i + 1];\n  }\n  return $trib;\n}\nprint_r(tri(3));\n\
    print_r(tri(6));\nprint_r(tri(7));\nprint_r(tri(8));\nprint_r(tri(9));\nprint_r(tri(10));\n\
    print_r(tri(11));\nprint_r(tri(12));\nprint_r(tri(13));\nprint_r(tri(14));\nprint_r(tri(15));\n\
    print_r(tri(16));\nprint_r(tri(17));\nprint_r(tri(18));\nprint_r(tri(19));\nprint_r(tri(20));\n\
    print_r(tri(21));\nprint_r(tri(22));\nprint_r(tri(23));\nprint_r(tri(24));\nprint_r(tri(25));\n\
    print_r(tri(26));\nprint_r(tri(27));\nprint_r(tri(28));\nprint_r(tri(29));\nprint_r(tri(30));\n\
    print_r(tri(31));\nprint_r(tri(32));\nprint_r(tri(33));\nprint_r(tri(34));\nprint_r(tri(35));\n\
    print_r(tri(36));\nprint_r(tri(37));\nprint_r(tri(38));\nprint_r(tri(39));\nprint_r(tri(40));\n\
    print_r(tri(41));\nprint_r(tri(42));\nprint_r(tri(43));\nprint_r(tri(44));\nprint_r(tri(45));\n\
    print_r(tri(46));\nprint_r(tri(47));\nprint_r(tri(48));\nprint_r(tri(49));\nprint_r(tri(50));\n\
    print_r(\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpleoben7k.php on line 72

    '
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  // Write your code\
    \ here\n}\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmtb5f6hi.php:26\n\
    Stack trace:\n#0 /tmp/tmpmtb5f6hi.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpmtb5f6hi.php\
    \ on line 26\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    $arr = array(1, 3,\
    \ 2);\n    for ($i = 3; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n      \
    \      $arr[] = $i + $i / 2;\n        } else {\n            $arr[] = $arr[$i -\
    \ 1] + $arr[$i - 2] + $arr[$i + 1];\n        }\n    }\n    return $arr;\n}\n\n\
    function candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpdse7jiib.php on line 24\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpdse7jiib.php:35\nStack\
    \ trace:\n#0 /tmp/tmpdse7jiib.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpdse7jiib.php\
    \ on line 35\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    $res = [];\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        if ($i === 0) {\n            $res[] = 0;\n\
    \        } elseif ($i === 1) {\n            $res[] = 1;\n        } elseif ($i\
    \ === 2) {\n            $res[] = 1;\n        } else {\n            $res[] = $res[$i\
    \ - 1] + $res[$i - 2] + $res[$i - 3];\n        }\n    }\n    return $res;\n}\n\
    \nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmxcri04l.php:39\n\
    Stack trace:\n#0 /tmp/tmpmxcri04l.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpmxcri04l.php\
    \ on line 39\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  if ($n <= 0) return\
    \ [];\n  if ($n == 1) return [3];\n  if ($n == 2) return [3, 2];\n  $result =\
    \ [3, 2, 8];\n  for ($i = 3; $i <= $n; $i++) {\n    $result[] = $i % 2 == 0 ?\
    \ (1 + $i / 2) : ($result[$i - 1] + $result[$i - 2] + $result[$i + 1]);\n  }\n\
    \  return $result;\n}\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmptdsl9btx.php on line 24\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmptdsl9btx.php:33\nStack\
    \ trace:\n#0 /tmp/tmptdsl9btx.php(45): test()\n#1 {main}\n  thrown in /tmp/tmptdsl9btx.php\
    \ on line 33\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  $seq = array(1, 3,\
    \ 2);\n  for ($i = 0; $i < $n; $i++) {\n    $seq[] = ($i % 2 == 0) ? $seq[$i]\
    \ / 2 + 1 : $seq[$i - 1] + $seq[$i - 2] + $seq[$i + 1];\n  }\n  return $seq;\n\
    }\nprint_r(tri(2));\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key -1 in /tmp/tmpd9eczh7o.php on line 21\n\
    Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 2\n    [3] => 1.5\n    [4] =>\
    \ 3\n)\n\nWarning: Undefined array key -1 in /tmp/tmpd9eczh7o.php on line 21\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd9eczh7o.php:31\nStack\
    \ trace:\n#0 /tmp/tmpd9eczh7o.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpd9eczh7o.php\
    \ on line 31\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  if ($n == 0) return\
    \ [];\n  if ($n == 1) return [1];\n  if ($n == 2) return [1, 3];\n  if ($n ==\
    \ 3) return [1, 3, 2];\n  $result = [1, 3, 2];\n  for ($i = 0; $i < $n - 3; $i++)\
    \ {\n    $t = $result[$i] + $result[$i + 1] + $result[$i + 2];\n    array_push($result,\
    \ $t);\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnwktajmx.php:36\n\
    Stack trace:\n#0 /tmp/tmpnwktajmx.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpnwktajmx.php\
    \ on line 36\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n\t$result = array();\n\
    \tif ($n == 0) {\n\t\treturn $result;\n\t}\n\t$result[0] = 3;\n\tif ($n == 1)\
    \ {\n\t\treturn $result;\n\t}\n\t$result[1] = 1;\n\tif ($n == 2) {\n\t\treturn\
    \ $result;\n\t}\n\t$result[2] = 2;\n\tfor ($i = 3; $i <= $n; $i++) {\n\t\tif ($i\
    \ % 2 == 0) {\n\t\t\t$result[$i] = 1 + $i / 2;\n\t\t} else {\n\t\t\t$result[$i]\
    \ = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n\t\t}\n\t}\n\treturn\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpk_10osh6.php on line 36\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpk_10osh6.php:47\nStack\
    \ trace:\n#0 /tmp/tmpk_10osh6.php(59): test()\n#1 {main}\n  thrown in /tmp/tmpk_10osh6.php\
    \ on line 47\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    if ($n == 0) return\
    \ [1];\n    if ($n == 1) return [1, 3];\n    if ($n == 2) return [1, 3, 2];\n\
    \    $result = [1, 3, 2];\n    for ($i = 3; $i <= $n; $i++) {\n        if ($i\
    \ % 2 == 0) {\n            $x = 1 + ($i / 2);\n            $result[] = $x;\n \
    \       } else {\n            $n1 = $result[$i - 1];\n            $n2 = $result[$i\
    \ - 2];\n            $n3 = $result[$i + 1];\n            $x = $n1 + $n2 + $n3;\n\
    \            $result[] = $x;\n        }\n    }\n    return $result;\n}\necho \"\
    <pre>\";\nprint_r(tri(3));\necho \"</pre>\";\nfunction candidate(...$args) {\n\
    \    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>\nWarning: Undefined array key 4 in /tmp/tmpagkzm7aj.php on line 30\n\
    Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 2\n    [3] => 5\n)\n</pre>\n\
    Warning: Undefined array key 4 in /tmp/tmpagkzm7aj.php on line 30\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpagkzm7aj.php:45\nStack trace:\n\
    #0 /tmp/tmpagkzm7aj.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpagkzm7aj.php\
    \ on line 45\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    // Fill in your code\
    \ here!\n    $seq = [3, 2, 1];\n    for ($i = 3; $i <= $n; $i++) {\n        $seq[]\
    \ = $seq[$i - 1] + $seq[$i - 2] + $seq[$i - 3];\n    }\n    return $seq;\n}\n\n\
    function candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj8uc9lbp.php:32\n\
    Stack trace:\n#0 /tmp/tmpj8uc9lbp.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpj8uc9lbp.php\
    \ on line 32\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n\t$arr = array(1, 3,\
    \ 2);\n\t$flag = 3;\n\t$sum = 0;\n\tif ($n == 0) {\n\t\t$arr = array();\n\t} else\
    \ if ($n == 1) {\n\t\t$arr = array(1);\n\t} else if ($n == 2) {\n\t\t$arr = array(1,\
    \ 3);\n\t} else if ($n == 3) {\n\t\t$arr = array(1, 3, 2);\n\t} else {\n\t\tfor\
    \ ($i = 3; $i < $n; $i++) {\n\t\t\t$flag++;\n\t\t\tif ($flag % 2 == 0) {\n\t\t\
    \t\t$sum = 1 + $flag / 2;\n\t\t\t} else {\n\t\t\t\t$sum = $arr[$i - 1] + $arr[$i\
    \ - 2] + $arr[$i - 3];\n\t\t\t}\n\t\t\tarray_push($arr, $sum);\n\t\t}\n\t}\n\t\
    return $arr;\n}\n\nprint_r(tri(3));\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 2\n)\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpc45q_6q5.php:50\nStack trace:\n#0 /tmp/tmpc45q_6q5.php(62):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpc45q_6q5.php on line 50\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    // your code here!\n\
    }\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp24fhl83i.php:26\n\
    Stack trace:\n#0 /tmp/tmp24fhl83i.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp24fhl83i.php\
    \ on line 26\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    $result = array();\n\
    \    for ($i = 1; $i <= $n + 1; $i++) {\n        if ($i == 1) {\n            $result[]\
    \ = 3;\n        } else if ($i % 2 == 0) {\n            $result[] = 1 + ($i / 2);\n\
    \        } else {\n            $result[] = $result[$i - 2] + $result[$i - 3] +\
    \ $result[$i];\n        }\n    }\n    return $result;\n}\n\necho print_r(tri(3),\
    \ true);\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 3 in /tmp/tmps8e6vqrr.php on line 26\nArray\n\
    (\n    [0] => 3\n    [1] => 2\n    [2] => 5\n    [3] => 3\n)\n\nWarning: Undefined\
    \ array key 3 in /tmp/tmps8e6vqrr.php on line 26\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmps8e6vqrr.php:38\nStack trace:\n#0 /tmp/tmps8e6vqrr.php(50):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmps8e6vqrr.php on line 38\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  $sequence = [3, 2,\
    \ 1];\n  if ($n == 0) {\n    return [1];\n  }\n  if ($n == 1) {\n    return [1,\
    \ 3];\n  }\n  if ($n == 2) {\n    return [1, 3, 2];\n  }\n  for ($i = 3; $i <=\
    \ $n; $i++) {\n    if ($i % 2 == 0) {\n      $sequence[] = 1 + $i / 2;\n    }\
    \ else {\n      $sequence[] = $sequence[$i - 1] + $sequence[$i - 2] + $sequence[$i\
    \ + 1];\n    }\n  }\n  return $sequence;\n}\nprint_r(tri(3));\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpyejvhf1v.php on line 33\nArray\n\
    (\n    [0] => 3\n    [1] => 2\n    [2] => 1\n    [3] => 3\n)\n\nWarning: Undefined\
    \ array key 4 in /tmp/tmpyejvhf1v.php on line 33\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpyejvhf1v.php:44\nStack trace:\n#0 /tmp/tmpyejvhf1v.php(56):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpyejvhf1v.php on line 44\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n    $array = array();\n\
    \    for ($i = 1; $i <= $n; $i++) {\n        if($i == 1) {\n            $array[]\
    \ = 3;\n        }\n        else if($i == 2) {\n            $array[] = 2;\n   \
    \     }\n        else if($i == 3) {\n            $array[] = 8;\n        }\n  \
    \      else {\n            $array[] = $array[$i - 2] + $array[$i - 3] + $array[$i\
    \ - 4];\n        }\n    }\n    return $array;\n}\nprint_r(tri(3));\n\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 3\n    [1] => 2\n    [2] => 8\n)\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp_ceuknos.php:43\nStack trace:\n#0 /tmp/tmp_ceuknos.php(55):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp_ceuknos.php on line 43\n"
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  $result = array();\n\
    \  for ($i = 1; $i <= $n + 1; $i++) {\n    if ($i == 1) {\n      $result[] = 3;\n\
    \    } else if ($i % 2 == 0) {\n      $result[] = 1 + $i / 2;\n    } else {\n\
    \      $result[] = $result[$i - 2] + $result[$i - 3] + $result[$i];\n    }\n \
    \ }\n  return $result;\n}\necho var_dump(tri(3));\necho var_dump(tri(4));\necho\
    \ var_dump(tri(5));\necho var_dump(tri(6));\necho var_dump(tri(7));\necho var_dump(tri(8));\n\
    echo var_dump(tri(9));\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 3 in /tmp/tmpxf3yqe0f.php on line 26\narray(4)\
    \ {\n  [0]=>\n  int(3)\n  [1]=>\n  int(2)\n  [2]=>\n  int(5)\n  [3]=>\n  int(3)\n\
    }\n\nWarning: Undefined array key 3 in /tmp/tmpxf3yqe0f.php on line 26\n\nWarning:\
    \ Undefined array key 5 in /tmp/tmpxf3yqe0f.php on line 26\narray(5) {\n  [0]=>\n\
    \  int(3)\n  [1]=>\n  int(2)\n  [2]=>\n  int(5)\n  [3]=>\n  int(3)\n  [4]=>\n\
    \  int(8)\n}\n\nWarning: Undefined array key 3 in /tmp/tmpxf3yqe0f.php on line\
    \ 26\n\nWarning: Undefined array key 5 in /tmp/tmpxf3yqe0f.php on line 26\narray(6)\
    \ {\n  [0]=>\n  int(3)\n  [1]=>\n  int(2)\n  [2]=>\n  int(5)\n  [3]=>\n  int(3)\n\
    \  [4]=>\n  int(8)\n  [5]=>\n  int(4)\n}\n\nWarning: Undefined array key 3 in\
    \ /tmp/tmpxf3yqe0f.php on line 26\n\nWarning: Undefined array key 5 in /tmp/tmpxf3yqe0f.php\
    \ on line 26\n\nWarning: Undefined array key 7 in /tmp/tmpxf3yqe0f.php on line\
    \ 26\narray(7) {\n  [0]=>\n  int(3)\n  [1]=>\n  int(2)\n  [2]=>\n  int(5)\n  [3]=>\n\
    \  int(3)\n  [4]=>\n  int(8)\n  [5]=>\n  int(4)\n  [6]=>\n  int(12)\n}\n\nWarning:\
    \ Undefined array key 3 in /tmp/tmpxf3yqe0f.php on line 26\n\nWarning: Undefined\
    \ array key 5 in /tmp/tmpxf3yqe0f.php on line 26\n\nWarning: Undefined array key\
    \ 7 in /tmp/tmpxf3yqe0f.php on line 26\narray(8) {\n  [0]=>\n  int(3)\n  [1]=>\n\
    \  int(2)\n  [2]=>\n  int(5)\n  [3]=>\n  int(3)\n  [4]=>\n  int(8)\n  [5]=>\n\
    \  int(4)\n  [6]=>\n  int(12)\n  [7]=>\n  int(5)\n}\n\nWarning: Undefined array\
    \ key 3 in /tmp/tmpxf3yqe0f.php on line 26\n\nWarning: Undefined array key 5 in\
    \ /tmp/tmpxf3yqe0f.php on line 26\n\nWarning: Undefined array key 7 in /tmp/tmpxf3yqe0f.php\
    \ on line 26\n\nWarning: Undefined array key 9 in /tmp/tmpxf3yqe0f.php on line\
    \ 26\narray(9) {\n  [0]=>\n  int(3)\n  [1]=>\n  int(2)\n  [2]=>\n  int(5)\n  [3]=>\n\
    \  int(3)\n  [4]=>\n  int(8)\n  [5]=>\n  int(4)\n  [6]=>\n  int(12)\n  [7]=>\n\
    \  int(5)\n  [8]=>\n  int(17)\n}\n\nWarning: Undefined array key 3 in /tmp/tmpxf3yqe0f.php\
    \ on line 26\n\nWarning: Undefined array key 5 in /tmp/tmpxf3yqe0f.php on line\
    \ 26\n\nWarning: Undefined array key 7 in /tmp/tmpxf3yqe0f.php on line 26\n\n\
    Warning: Undefined array key 9 in /tmp/tmpxf3yqe0f.php on line 26\narray(10) {\n\
    \  [0]=>\n  int(3)\n "
  timestamp: 1659979158
- exit_code: 255
  program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ an array of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // >>> tri(3)\n// array(1, 3, 2, 8)\nfunction tri($n) {\n  if ($n == 0) {\n  \
    \  return [];\n  }\n  if ($n == 1) {\n    return [3];\n  }\n  if ($n == 2) {\n\
    \    return [3, 2];\n  }\n  $arr = [3, 2, 8];\n  for ($i = 3; $i <= $n; $i++)\
    \ {\n    if ($i % 2 == 0) {\n      $arr[] = 1 + $i / 2;\n    } else {\n      $arr[]\
    \ = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n    }\n  }\n  return $arr;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpnx2emssd.php on line 33\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpnx2emssd.php:44\nStack\
    \ trace:\n#0 /tmp/tmpnx2emssd.php(56): test()\n#1 {main}\n  thrown in /tmp/tmpnx2emssd.php\
    \ on line 44\n"
  timestamp: 1659979158

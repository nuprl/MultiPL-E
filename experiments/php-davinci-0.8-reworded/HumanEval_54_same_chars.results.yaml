language: php
name: HumanEval_54_same_chars
results:
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    if (strlen($s0) !== strlen($s1))\
    \ return false;\n    $counts = [];\n    for ($i = 0; $i < strlen($s0); $i++) {\n\
    \        $counts[$s0[$i]] = 0;\n    }\n    for ($i = 0; $i < strlen($s0); $i++)\
    \ {\n        $counts[$s0[$i]]++;\n    }\n    for ($i = 0; $i < strlen($s1); $i++)\
    \ {\n        $counts[$s1[$i]]--;\n    }\n    for ($i = 0; $i < strlen($s0); $i++)\
    \ {\n        if ($counts[$s0[$i]] !== 0) return false;\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxhhnnmnu.php:38\n\
    Stack trace:\n#0 /tmp/tmpxhhnnmnu.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpxhhnnmnu.php\
    \ on line 38\n"
  timestamp: 1659824629
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $chars = array();\n    $len0\
    \ = strlen($s0);\n    $len1 = strlen($s1);\n    for ($i = 0; $i < $len0; $i++)\
    \ {\n        $chars[$s0[$i]] = ($chars[$s0[$i]] ?? 0) + 1;\n    }\n    for ($i\
    \ = 0; $i < $len1; $i++) {\n        $chars[$s1[$i]] = ($chars[$s1[$i]] ?? 0) -\
    \ 1;\n    }\n    foreach ($chars as $c => $count) {\n        if ($count !== 0)\
    \ {\n            return false;\n        }\n    }\n    return true;\n}\nfunction\
    \ candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\"\
    , \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\"\
    , \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgll1tvpa.php:37\n\
    Stack trace:\n#0 /tmp/tmpgll1tvpa.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpgll1tvpa.php\
    \ on line 37\n"
  timestamp: 1659824629
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n  $len0 = strlen($s0);\n  $len1\
    \ = strlen($s1);\n  if ($len0 != $len1) {\n    return false;\n  }\n  for ($i =\
    \ 0; $i < $len0; $i++) {\n    $c = $s0[$i];\n    $found = false;\n    for ($j\
    \ = 0; $j < $len1; $j++) {\n      if ($s1[$j] == $c) {\n        $found = true;\n\
    \        break;\n      }\n    }\n    if (!$found) {\n      return false;\n   \
    \ }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn77opbgk.php:42\n\
    Stack trace:\n#0 /tmp/tmpn77opbgk.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpn77opbgk.php\
    \ on line 42\n"
  timestamp: 1659824629
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n  $arr0 = str_split($s0);\n  $arr1\
    \ = str_split($s1);\n  $cnt0 = array_count_values($arr0);\n  $cnt1 = array_count_values($arr1);\n\
    \  $check = 0;\n  if (count($cnt0) == count($cnt1)) {\n    foreach ($cnt0 as $key0\
    \ => $value0) {\n      foreach ($cnt1 as $key1 => $value1) {\n        if (($key0\
    \ == $key1) && ($value0 == $value1)) {\n          $check += 1;\n        }\n  \
    \    }\n    }\n  }\n  if (count($cnt0) == $check) {\n    return true;\n  } else\
    \ {\n    return false;\n  }\n}\n\necho same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) . \"\\n\";\necho same_chars(\"abcd\", \"dddddddabc\") . \"\\n\";\necho same_chars(\"\
    dddddddabc\", \"abcd\") . \"\\n\";\necho same_chars(\"eabcd\", \"dddddddabc\"\
    ) . \"\\n\";\necho same_chars(\"abcd\", \"dddddddabce\") . \"\\n\";\necho same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") . \"\\n\";\nfunction candidate(...$args) {\n\
    \    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\n\n\n\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppfui9bbe.php:48\n\
    Stack trace:\n#0 /tmp/tmppfui9bbe.php(57): test()\n#1 {main}\n  thrown in /tmp/tmppfui9bbe.php\
    \ on line 48\n"
  timestamp: 1659824629
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $s0_arr = str_split($s0);\n\
    \    $s1_arr = str_split($s1);\n    foreach ($s0_arr as $s0_char) {\n        $index\
    \ = array_search($s0_char, $s1_arr);\n        if ($index === false) {\n      \
    \      return false;\n        }\n        unset($s1_arr[$index]);\n    }\n    return\
    \ true;\n}\n\nvar_dump(same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"));\nvar_dump(same_chars(\"\
    abcd\", \"dddddddabc\"));\nvar_dump(same_chars(\"dddddddabc\", \"abcd\"));\nvar_dump(same_chars(\"\
    eabcd\", \"dddddddabc\"));\nvar_dump(same_chars(\"abcd\", \"dddddddabce\"));\n\
    var_dump(same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"));\nfunction candidate(...$args)\
    \ {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "bool(true)\nbool(true)\nbool(false)\nbool(false)\nbool(true)\nbool(false)\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqfocih9o.php:41\nStack\
    \ trace:\n#0 /tmp/tmpqfocih9o.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpqfocih9o.php\
    \ on line 41\n"
  timestamp: 1659824629
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    if (strlen($s0) != strlen($s1))\
    \ {\n        return false;\n    }\n    for ($i = 0; $i < strlen($s0); $i++) {\n\
    \        $c = $s0[$i];\n        $j = strpos($s1, $c);\n        if ($j === false)\
    \ {\n            return false;\n        }\n        $s1 = substr($s1, 0, $j) .\
    \ substr($s1, $j + 1);\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo9syts5r.php:35\n\
    Stack trace:\n#0 /tmp/tmpo9syts5r.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpo9syts5r.php\
    \ on line 35\n"
  timestamp: 1659824629
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $a0 = count_chars($s0, 1);\n\
    \    $a1 = count_chars($s1, 1);\n    if (count($a0) != count($a1)) {\n       \
    \ return false;\n    }\n    foreach ($a0 as $k => $v) {\n        if (!array_key_exists($k,\
    \ $a1) || $a1[$k] != $v) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpundxtilg.php:34\n\
    Stack trace:\n#0 /tmp/tmpundxtilg.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpundxtilg.php\
    \ on line 34\n"
  timestamp: 1659824629
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $s0_array = str_split($s0);\n\
    \    $s1_array = str_split($s1);\n    sort($s0_array);\n    sort($s1_array);\n\
    \    return implode($s0_array) == implode($s1_array);\n}\nfunction candidate(...$args)\
    \ {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb_cst86u.php:27\n\
    Stack trace:\n#0 /tmp/tmpb_cst86u.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpb_cst86u.php\
    \ on line 27\n"
  timestamp: 1659824629
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $map = [];\n    for ($i = 0;\
    \ $i < strlen($s0); $i++) {\n        $c = $s0[$i];\n        if (!array_key_exists($c,\
    \ $map)) {\n            $map[$c] = 0;\n        }\n        $map[$c] += 1;\n   \
    \ }\n    for ($i = 0; $i < strlen($s1); $i++) {\n        $c = $s1[$i];\n     \
    \   if (!array_key_exists($c, $map)) {\n            return false;\n        }\n\
    \        $map[$c] -= 1;\n        if ($map[$c] < 0) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n   \
    \ return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdd9n99li.php:42\n\
    Stack trace:\n#0 /tmp/tmpdd9n99li.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpdd9n99li.php\
    \ on line 42\n"
  timestamp: 1659824629
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n  $s0_array = str_split($s0);\n\
    \  $s1_array = str_split($s1);\n  $n0 = count($s0_array);\n  $n1 = count($s1_array);\n\
    \  $s0_array = array_unique($s0_array);\n  $s1_array = array_unique($s1_array);\n\
    \  return ($n0 - count($s0_array) == $n1 - count($s1_array)) && count(array_diff($s0_array,\
    \ $s1_array)) == 0;\n}\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdxuwz1u4.php:30\n\
    Stack trace:\n#0 /tmp/tmpdxuwz1u4.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpdxuwz1u4.php\
    \ on line 30\n"
  timestamp: 1659824629
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n  if (strlen($s0) != strlen($s1))\
    \ {\n    return false;\n  }\n  $strs = array($s0, $s1);\n  $totals = array_fill(0,\
    \ 26, 0);\n  for ($i = 0; $i < 2; $i++) {\n    for ($j = 0; $j < strlen($strs[$i]);\
    \ $j++) {\n      $totals[ord($strs[$i][$j]) - ord('a')] += 1;\n    }\n  }\n  for\
    \ ($i = 0; $i < 26; $i++) {\n    if ($totals[$i] % 2 != 0) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_e2endjp.php:39\n\
    Stack trace:\n#0 /tmp/tmp_e2endjp.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp_e2endjp.php\
    \ on line 39\n"
  timestamp: 1659824629
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n  $n0 = strlen($s0);\n  $n1 = strlen($s1);\n\
    \  if ($n0 != $n1) return false;\n  $chars = [];\n  for ($i = 0; $i < $n0; $i++)\
    \ {\n    $c = $s0[$i];\n    if (!isset($chars[$c])) $chars[$c] = 0;\n    $chars[$c]++;\n\
    \  }\n  for ($i = 0; $i < $n1; $i++) {\n    $c = $s1[$i];\n    if (!isset($chars[$c]))\
    \ return false;\n    $chars[$c]--;\n    if ($chars[$c] < 0) return false;\n  }\n\
    \  return true;\n}\n\n$s0 = 'eabcdzzzz';\n$s1 = 'dddzzzzzzzddeddabc';\n\n$r =\
    \ same_chars($s0, $s1);\necho $r ? 'true' : 'false';\necho \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\"\
    , \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\"\
    , \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "false\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0yccypit.php:45\n\
    Stack trace:\n#0 /tmp/tmp0yccypit.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp0yccypit.php\
    \ on line 45\n"
  timestamp: 1659824629
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n  $same = true;\n  $combined = $s0\
    \ . $s1;\n  for ($i = 0; $i < strlen($combined); $i++) {\n    $char = $combined[$i];\n\
    \    $same = $same && count(str_split($s0, 1)) == count(str_split($s1, 1));\n\
    \  }\n  return $same;\n}\n\n$tests = [\n  [[\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ], true],\n  [[\"abcd\", \"dddddddabc\"], true],\n  [[\"dddddddabc\", \"abcd\"\
    ], true],\n  [[\"eabcd\", \"dddddddabc\"], false],\n  [[\"abcd\", \"dddddddabce\"\
    ], false],\n  [[\"eabcdzzzz\", \"dddzzzzzzzddddabc\"], false],\n];\n\nforeach\
    \ ($tests as $test) {\n  $result = same_chars($test[0][0], $test[0][1]);\n  if\
    \ ($result !== $test[1]) {\n    echo \"Test failed:\\n\";\n    echo json_encode($test[0])\
    \ . \"\\n\";\n    echo \"Expected: \" . json_encode($test[1]) . \"\\n\";\n   \
    \ echo \"Got: \" . json_encode($result) . \"\\n\";\n  }\n}\nfunction candidate(...$args)\
    \ {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Test failed:\n[\"eabcdzzzz\",\"dddzzzzzzzddeddabc\"]\nExpected: true\n\
    Got: false\nTest failed:\n[\"abcd\",\"dddddddabc\"]\nExpected: true\nGot: false\n\
    Test failed:\n[\"dddddddabc\",\"abcd\"]\nExpected: true\nGot: false\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpkv9yy168.php:48\nStack trace:\n\
    #0 /tmp/tmpkv9yy168.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpkv9yy168.php\
    \ on line 48\n"
  timestamp: 1659824629
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $count0 = [];\n    $count1 =\
    \ [];\n    for ($i = 0; $i < strlen($s0); $i++) {\n        $count0[$s0[$i]] =\
    \ isset($count0[$s0[$i]]) ? $count0[$s0[$i]] + 1 : 1;\n    }\n    for ($i = 0;\
    \ $i < strlen($s1); $i++) {\n        $count1[$s1[$i]] = isset($count1[$s1[$i]])\
    \ ? $count1[$s1[$i]] + 1 : 1;\n    }\n    return $count0 == $count1;\n}\n\nfunction\
    \ candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\"\
    , \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\"\
    , \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgivg6y0c.php:32\n\
    Stack trace:\n#0 /tmp/tmpgivg6y0c.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpgivg6y0c.php\
    \ on line 32\n"
  timestamp: 1659824629
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    return collect(str_split($s0))->filter(function\
    \ ($char) use ($s1) {\n        return collect(str_split($s1))->contains($char);\n\
    \    })->count() == strlen($s0);\n}\n\nfunction candidate(...$args) {\n    return\
    \ same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function collect() in\
    \ /tmp/tmp4nn8pm4v.php:16\nStack trace:\n#0 /tmp/tmp4nn8pm4v.php(22): same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddedd...')\n#1 /tmp/tmp4nn8pm4v.php(26): candidate('eabcdzzzz', 'dddzzzzzzzddedd...')\n\
    #2 /tmp/tmp4nn8pm4v.php(35): test()\n#3 {main}\n  thrown in /tmp/tmp4nn8pm4v.php\
    \ on line 16\n"
  timestamp: 1659824629
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n  $count = 0;\n  $flag = false;\n\
    \  for ($i = 0; $i < strlen($s0); $i++) {\n    for ($j = 0; $j < strlen($s1);\
    \ $j++) {\n      if ($s0[$i] == $s1[$j]) {\n        $count++;\n        unset($s1[$j]);\n\
    \        break;\n      }\n    }\n  }\n  if ($count == strlen($s0)) {\n    $flag\
    \ = true;\n  }\n  return $flag;\n}\n\n$s0 = \"eabcdzzzz\";\n$s1 = \"dddzzzzzzzddeddabc\"\
    ;\necho same_chars($s0, $s1);\nfunction candidate(...$args) {\n    return same_chars(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Cannot unset string offsets in /tmp/tmpi9ay6ji2.php:22\n\
    Stack trace:\n#0 /tmp/tmpi9ay6ji2.php(35): same_chars('eabcdzzzz', 'dddzzzzzzzddedd...')\n\
    #1 {main}\n  thrown in /tmp/tmpi9ay6ji2.php on line 22\n"
  timestamp: 1659824629
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n  $a = str_split($s0);\n  $b = str_split($s1);\n\
    \  $a = array_count_values($a);\n  $b = array_count_values($b);\n  foreach ($a\
    \ as $k => $v) {\n    if (!array_key_exists($k, $b) || $b[$k] < $v) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n$s0 = \"eabcdzzzz\";\n$s1 = \"dddzzzzzzzddeddabc\"\
    ;\necho $s0 . \" and \" . $s1 . \" has the same characters? \" . (same_chars($s0,\
    \ $s1) ? \"true\" : \"false\") . \"\\n\";\n\n$s0 = \"abcd\";\n$s1 = \"dddddddabc\"\
    ;\necho $s0 . \" and \" . $s1 . \" has the same characters? \" . (same_chars($s0,\
    \ $s1) ? \"true\" : \"false\") . \"\\n\";\n\n$s0 = \"dddddddabc\";\n$s1 = \"abcd\"\
    ;\necho $s0 . \" and \" . $s1 . \" has the same characters? \" . (same_chars($s0,\
    \ $s1) ? \"true\" : \"false\") . \"\\n\";\n\n$s0 = \"eabcd\";\n$s1 = \"dddddddabc\"\
    ;\necho $s0 . \" and \" . $s1 . \" has the same characters? \" . (same_chars($s0,\
    \ $s1) ? \"true\" : \"false\") . \"\\n\";\n\n$s0 = \"abcd\";\n$s1 = \"dddddddabce\"\
    ;\necho $s0 . \" and \" . $s1 . \" has the same characters? \" . (same_chars($s0,\
    \ $s1) ? \"true\" : \"false\") . \"\\n\";\n\n$s0 = \"eabcdzzzz\";\n$s1 = \"dddzzzzzzzddddabc\"\
    ;\necho $s0 . \" and \" . $s1 . \" has the same characters?\nfunction candidate(...$args)\
    \ {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "eabcdzzzz", expecting "," or
    ";" in /tmp/tmplck0iawa.php on line 55

    '
  timestamp: 1659824629
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    if (strlen($s0) != strlen($s1))\
    \ return false;\n    $s0 = preg_split('//', $s0, -1, PREG_SPLIT_NO_EMPTY);\n \
    \   $s1 = preg_split('//', $s1, -1, PREG_SPLIT_NO_EMPTY);\n    sort($s0);\n  \
    \  sort($s1);\n    return $s0 == $s1;\n}\n\nfunction candidate(...$args) {\n \
    \   return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxe4fwbq5.php:29\n\
    Stack trace:\n#0 /tmp/tmpxe4fwbq5.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpxe4fwbq5.php\
    \ on line 29\n"
  timestamp: 1659824629
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n\tif (strlen($s0) != strlen($s1))\
    \ {\n\t\treturn false;\n\t}\n\t$len = strlen($s0);\n\tfor ($i = 0; $i < $len;\
    \ $i++) {\n\t\t$pos = strpos($s1, $s0[$i]);\n\t\tif ($pos === false) {\n\t\t\t\
    return false;\n\t\t}\n\t\t$s1 = substr_replace($s1, '*', $pos, 1);\n\t}\n\treturn\
    \ true;\n}\necho \"<pre>\";\necho same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    );\necho \"\\n\";\necho same_chars(\"abcd\", \"dddddddabc\");\necho \"\\n\";\n\
    echo same_chars(\"dddddddabc\", \"abcd\");\necho \"\\n\";\necho same_chars(\"\
    eabcd\", \"dddddddabc\");\necho \"\\n\";\necho same_chars(\"abcd\", \"dddddddabce\"\
    );\necho \"\\n\";\necho same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\");\necho\
    \ \"</pre>\";\nfunction candidate(...$args) {\n    return same_chars(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>\n\n\n\n\n</pre>\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpb5qnduew.php:47\nStack trace:\n#0 /tmp/tmpb5qnduew.php(56): test()\n\
    #1 {main}\n  thrown in /tmp/tmpb5qnduew.php on line 47\n"
  timestamp: 1659824629
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $arr_s0 = str_split($s0);\n\
    \    $arr_s1 = str_split($s1);\n    $arr_s0_count = array_count_values($arr_s0);\n\
    \    $arr_s1_count = array_count_values($arr_s1);\n    if (count($arr_s0_count)\
    \ == count($arr_s1_count)) {\n        for ($i = 0; $i < count($arr_s0_count);\
    \ $i++) {\n            if ($arr_s0_count[$arr_s0[$i]] == $arr_s1_count[$arr_s0[$i]])\
    \ {\n                continue;\n            } else {\n                return false;\n\
    \            }\n        }\n        return true;\n    } else {\n        return\
    \ false;\n    }\n}\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpznokz9hf.php:39\n\
    Stack trace:\n#0 /tmp/tmpznokz9hf.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpznokz9hf.php\
    \ on line 39\n"
  timestamp: 1659824629
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n  $s0 = str_split($s0);\n  $s1 =\
    \ str_split($s1);\n  sort($s0);\n  sort($s1);\n  return $s0 == $s1;\n}\n\nfunction\
    \ candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\"\
    , \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\"\
    , \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjdlruive.php:28\n\
    Stack trace:\n#0 /tmp/tmpjdlruive.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpjdlruive.php\
    \ on line 28\n"
  timestamp: 1660029069
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n\t$d0 = [];\n\t$d1 = [];\n\t\n\t\
    $len0 = strlen($s0);\n\t$len1 = strlen($s1);\n\t\n\tfor ($i = 0; $i < $len0; $i++)\
    \ {\n\t\t$d0[$s0[$i]] = ($d0[$s0[$i]] ?? 0) + 1;\n\t}\n\t\n\tfor ($i = 0; $i <\
    \ $len1; $i++) {\n\t\t$d1[$s1[$i]] = ($d1[$s1[$i]] ?? 0) + 1;\n\t}\n\t\n\treturn\
    \ $d0 == $d1;\n}\n\necho same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") . \"\
    \\n\";\necho same_chars(\"abcd\", \"dddddddabc\") . \"\\n\";\necho same_chars(\"\
    dddddddabc\", \"abcd\") . \"\\n\";\necho same_chars(\"eabcd\", \"dddddddabc\"\
    ) . \"\\n\";\necho same_chars(\"abcd\", \"dddddddabce\") . \"\\n\";\necho same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") . \"\\n\";\nfunction candidate(...$args) {\n\
    \    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\n\n\n\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt9ncehjp.php:44\n\
    Stack trace:\n#0 /tmp/tmpt9ncehjp.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpt9ncehjp.php\
    \ on line 44\n"
  timestamp: 1660029069
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n  // Your code here\n  for ($i =\
    \ 0; $i < strlen($s0); $i++) {\n    $c = $s0[$i];\n    $pos = strpos($s1, $c);\n\
    \    if ($pos !== false) {\n      $s1 = substr_replace($s1, '', $pos, 1);\n  \
    \  } else {\n      return false;\n    }\n  }\n  return true;\n}\n\nvar_dump(same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\"));\nvar_dump(same_chars(\"abcd\", \"dddddddabc\"\
    ));\nvar_dump(same_chars(\"dddddddabc\", \"abcd\"));\nvar_dump(same_chars(\"eabcd\"\
    , \"dddddddabc\"));\nvar_dump(same_chars(\"abcd\", \"dddddddabce\"));\nvar_dump(same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\"));\nfunction candidate(...$args) {\n    return\
    \ same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "bool(true)\nbool(true)\nbool(false)\nbool(false)\nbool(true)\nbool(false)\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6r3mslvc.php:42\nStack\
    \ trace:\n#0 /tmp/tmp6r3mslvc.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp6r3mslvc.php\
    \ on line 42\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    // Your code goes here.\n  \
    \  $s0Len = strlen($s0);\n    $s1Len = strlen($s1);\n    $s0Arr = [];\n    $s1Arr\
    \ = [];\n    for ($i = 0; $i < $s0Len; $i++) {\n        if (!isset($s0Arr[$s0[$i]]))\
    \ {\n            $s0Arr[$s0[$i]] = 1;\n        } else {\n            $s0Arr[$s0[$i]]++;\n\
    \        }\n    }\n    for ($i = 0; $i < $s1Len; $i++) {\n        if (!isset($s1Arr[$s1[$i]]))\
    \ {\n            $s1Arr[$s1[$i]] = 1;\n        } else {\n            $s1Arr[$s1[$i]]++;\n\
    \        }\n    }\n    foreach ($s0Arr as $k => $v) {\n        if (!isset($s1Arr[$k])\
    \ || $s1Arr[$k] !== $v) {\n            return false;\n        }\n    }\n    foreach\
    \ ($s1Arr as $k => $v) {\n        if (!isset($s0Arr[$k]) || $s0Arr[$k] !== $v)\
    \ {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\"\
    , \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\"\
    , \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8mq9713t.php:53\n\
    Stack trace:\n#0 /tmp/tmp8mq9713t.php(62): test()\n#1 {main}\n  thrown in /tmp/tmp8mq9713t.php\
    \ on line 53\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $s0_chars = str_split($s0);\n\
    \    $s1_chars = str_split($s1);\n    $same_chars = true;\n    foreach ($s0_chars\
    \ as $s0_char) {\n        if (!in_array($s0_char, $s1_chars)) {\n            $same_chars\
    \ = false;\n            break;\n        }\n    }\n    return $same_chars;\n}\n\
    \necho same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\");\necho \"\\n\";\necho\
    \ same_chars(\"abcd\", \"dddddddabc\");\necho \"\\n\";\necho same_chars(\"dddddddabc\"\
    , \"abcd\");\necho \"\\n\";\necho same_chars(\"eabcd\", \"dddddddabc\");\necho\
    \ \"\\n\";\necho same_chars(\"abcd\", \"dddddddabce\");\necho \"\\n\";\necho same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\");\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n1\n\n1\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp492o_j2o.php:49\n\
    Stack trace:\n#0 /tmp/tmp492o_j2o.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp492o_j2o.php\
    \ on line 49\n"
  timestamp: 1660029069
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    if (strlen($s0) != strlen($s1))\
    \ {\n        return false;\n    }\n    for ($i = 0; $i < strlen($s0); $i++) {\n\
    \        $found = false;\n        for ($j = 0; $j < strlen($s1); $j++) {\n   \
    \         if ($s0[$i] == $s1[$j]) {\n                $found = true;\n        \
    \        $s1[$j] = null;\n                break;\n            }\n        }\n \
    \       if (!$found) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph8_hw45u.php:40\n\
    Stack trace:\n#0 /tmp/tmph8_hw45u.php(49): test()\n#1 {main}\n  thrown in /tmp/tmph8_hw45u.php\
    \ on line 40\n"
  timestamp: 1660029069
- exit_code: 0
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $s0_arr = str_split($s0);\n\
    \    $s1_arr = str_split($s1);\n    $s0_set = array_unique($s0_arr);\n    $s1_set\
    \ = array_unique($s1_arr);\n    sort($s0_set);\n    sort($s1_set);\n    return\
    \ $s0_set == $s1_set;\n}\nfunction candidate(...$args) {\n    return same_chars(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n  $c0 = array_count_values(str_split($s0));\n\
    \  $c1 = array_count_values(str_split($s1));\n  return !(array_diff_assoc($c0,\
    \ $c1) || array_diff_assoc($c1, $c0));\n}\nvar_dump(same_chars(\"eabcdzzzz\",\
    \ \"dddzzzzzzzddeddabc\"));\nvar_dump(same_chars(\"abcd\", \"dddddddabc\"));\n\
    var_dump(same_chars(\"dddddddabc\", \"abcd\"));\nvar_dump(same_chars(\"eabcd\"\
    , \"dddddddabc\"));\nvar_dump(same_chars(\"abcd\", \"dddddddabce\"));\nvar_dump(same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\"));\nfunction candidate(...$args) {\n    return\
    \ same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "bool(false)\nbool(false)\nbool(false)\nbool(false)\nbool(false)\nbool(false)\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmploagodcs.php:31\nStack\
    \ trace:\n#0 /tmp/tmploagodcs.php(40): test()\n#1 {main}\n  thrown in /tmp/tmploagodcs.php\
    \ on line 31\n"
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $arr0 = str_split($s0);\n  \
    \  $arr1 = str_split($s1);\n    return !array_diff($arr0, $arr1) && !array_diff($arr1,\
    \ $arr0);\n}\n\n$same_chars = function($s0, $s1) {\n    return count_chars($s0,\
    \ 1) == count_chars($s1, 1);\n};\n\n$same_chars = function($s0, $s1) {\n    $h0\
    \ = array_count_values(str_split($s0));\n    $h1 = array_count_values(str_split($s1));\n\
    \    return $h0 == $h1;\n};\n\n$same_chars = function($s0, $s1) {\n    $h0 = array_count_values(str_split($s0));\n\
    \    $h1 = array_count_values(str_split($s1));\n    foreach($h0 as $c => $count)\
    \ {\n        if ($count != $h1[$c]) return false;\n    }\n    return true;\n};\n\
    \nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n  $a0 = str_split($s0);\n  $a1 =\
    \ str_split($s1);\n  if (count($a0) != count($a1)) {\n    return false;\n  }\n\
    \  $counts = [];\n  foreach ($a0 as $v) {\n    if (!isset($counts[$v])) {\n  \
    \    $counts[$v] = 0;\n    }\n    $counts[$v]++;\n  }\n  foreach ($a1 as $v) {\n\
    \    if (!isset($counts[$v])) {\n      return false;\n    }\n    $counts[$v]--;\n\
    \    if ($counts[$v] < 0) {\n      return false;\n    }\n  }\n  return true;\n\
    }\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm72rhjk0.php:45\n\
    Stack trace:\n#0 /tmp/tmpm72rhjk0.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpm72rhjk0.php\
    \ on line 45\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    // TODO\n}\n\nfunction candidate(...$args)\
    \ {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpulxgbipk.php:24\n\
    Stack trace:\n#0 /tmp/tmpulxgbipk.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpulxgbipk.php\
    \ on line 24\n"
  timestamp: 1660029069
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_split($s0);\n    $s1\
    \ = str_split($s1);\n    // $s0 = str_split(str_replace(' ', '', strtolower($s0)));\n\
    \    // $s1 = str_split(str_replace(' ', '', strtolower($s1)));\n    sort($s0);\n\
    \    sort($s1);\n    print_r($s0);\n    print_r($s1);\n    if ($s0 == $s1) {\n\
    \        return true;\n    } else {\n        return false;\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\"\
    , \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\"\
    , \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => a\n    [1] => b\n    [2] => c\n    [3] => d\n    [4]\
    \ => e\n    [5] => z\n    [6] => z\n    [7] => z\n    [8] => z\n)\nArray\n(\n\
    \    [0] => a\n    [1] => b\n    [2] => c\n    [3] => d\n    [4] => d\n    [5]\
    \ => d\n    [6] => d\n    [7] => d\n    [8] => d\n    [9] => d\n    [10] => e\n\
    \    [11] => z\n    [12] => z\n    [13] => z\n    [14] => z\n    [15] => z\n \
    \   [16] => z\n    [17] => z\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpjmdq59i9.php:36\nStack trace:\n#0 /tmp/tmpjmdq59i9.php(45): test()\n\
    #1 {main}\n  thrown in /tmp/tmpjmdq59i9.php on line 36\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    if (strlen($s0) != strlen($s1))\
    \ return false;\n    $dict = [];\n    for ($i = 0; $i < strlen($s0); $i++) {\n\
    \        $c = $s0[$i];\n        if (!array_key_exists($c, $dict)) {\n        \
    \    $dict[$c] = 0;\n        }\n        $dict[$c]++;\n    }\n    for ($i = 0;\
    \ $i < strlen($s1); $i++) {\n        $c = $s1[$i];\n        if (!array_key_exists($c,\
    \ $dict)) {\n            return false;\n        }\n        $dict[$c]--;\n    \
    \    if ($dict[$c] < 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\necho same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") ? \"true\"\
    \ : \"false\";\necho \"\\n\";\necho same_chars(\"abcd\", \"dddddddabc\") ? \"\
    true\" : \"false\";\necho \"\\n\";\necho same_chars(\"dddddddabc\", \"abcd\")\
    \ ? \"true\" : \"false\";\necho \"\\n\";\necho same_chars(\"eabcd\", \"dddddddabc\"\
    ) ? \"true\" : \"false\";\necho \"\\n\";\necho same_chars(\"abcd\", \"dddddddabce\"\
    ) ? \"true\" : \"false\";\necho \"\\n\";\necho same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) ? \"true\" : \"false\";\necho \"\\n\";\nfunction candidate(...$args) {\n   \
    \ return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "false\nfalse\nfalse\nfalse\nfalse\nfalse\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpd3k3mwvi.php:54\nStack trace:\n#0 /tmp/tmpd3k3mwvi.php(63):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpd3k3mwvi.php on line 54\n"
  timestamp: 1660029069
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $a0 = str_split($s0);\n    $a1\
    \ = str_split($s1);\n    $c0 = array_count_values($a0);\n    $c1 = array_count_values($a1);\n\
    \    return $c0 == $c1;\n}\nfunction candidate(...$args) {\n    return same_chars(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdjmujhsc.php:27\n\
    Stack trace:\n#0 /tmp/tmpdjmujhsc.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdjmujhsc.php\
    \ on line 27\n"
  timestamp: 1660029069
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n\t$hash = [];\n\tfor ($i = 0; $i\
    \ < strlen($s0); $i++) {\n\t\t$c = $s0[$i];\n\t\tif (array_key_exists($c, $hash))\
    \ {\n\t\t\t$hash[$c]++;\n\t\t} else {\n\t\t\t$hash[$c] = 1;\n\t\t}\n\t}\n\tfor\
    \ ($i = 0; $i < strlen($s1); $i++) {\n\t\t$c = $s1[$i];\n\t\tif (array_key_exists($c,\
    \ $hash)) {\n\t\t\t$hash[$c]--;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t\
    }\n\tforeach ($hash as $key => $value) {\n\t\tif ($value !== 0) {\n\t\t\treturn\
    \ false;\n\t\t}\n\t}\n\treturn true;\n}\n\n$input0 = \"eabcdzzzz\";\n$input1 =\
    \ \"dddzzzzzzzddeddabc\";\nprint_r(same_chars($input0, $input1) . \"\\n\");\n\n\
    $input0 = \"abcd\";\n$input1 = \"dddddddabc\";\nprint_r(same_chars($input0, $input1)\
    \ . \"\\n\");\n\n$input0 = \"dddddddabc\";\n$input1 = \"abcd\";\nprint_r(same_chars($input0,\
    \ $input1) . \"\\n\");\n\n$input0 = \"eabcd\";\n$input1 = \"dddddddabc\";\nprint_r(same_chars($input0,\
    \ $input1) . \"\\n\");\n\n$input0 = \"abcd\";\n$input1 = \"dddddddabce\";\nprint_r(same_chars($input0,\
    \ $input1) . \"\\n\");\n\n$input0 = \"eabcdzzzz\";\n$input1 = \"dddzzzzzzzddddabc\"\
    ;\nprint_r(same_chars($input0, $input1) . \"\\n\");\nfunction candidate(...$args)\
    \ {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\n\n\n\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpecumxp1b.php:69\n\
    Stack trace:\n#0 /tmp/tmpecumxp1b.php(78): test()\n#1 {main}\n  thrown in /tmp/tmpecumxp1b.php\
    \ on line 69\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n\tfor ($i = 0; $i < strlen($s0);\
    \ $i++) {\n\t\tif ($s0[$i] != $s1[$i]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\t\
    return true;\n}\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4_nhkypp.php:29\n\
    Stack trace:\n#0 /tmp/tmp4_nhkypp.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4_nhkypp.php\
    \ on line 29\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n\t$arr1 = [];\n\t$arr2 = [];\n\t\
    \n\tfor ($i = 0; $i < strlen($s0); $i++) {\n\t\t$k = $s0[$i];\n\t\tif (isset($arr1[$k]))\n\
    \t\t\t$arr1[$k]++;\n\t\telse\n\t\t\t$arr1[$k] = 1;\n\t}\n\t\n\tfor ($i = 0; $i\
    \ < strlen($s1); $i++) {\n\t\t$k = $s1[$i];\n\t\tif (isset($arr2[$k]))\n\t\t\t\
    $arr2[$k]++;\n\t\telse\n\t\t\t$arr2[$k] = 1;\n\t}\n\t\n\treturn $arr1 == $arr2;\n\
    }\n\nassert(same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"));\nassert(same_chars(\"\
    abcd\", \"dddddddabc\"));\nassert(same_chars(\"dddddddabc\", \"abcd\"));\nassert(!same_chars(\"\
    eabcd\", \"dddddddabc\"));\nassert(!same_chars(\"abcd\", \"dddddddabce\"));\n\
    assert(!same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"));\nfunction candidate(...$args)\
    \ {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught AssertionError: assert(same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')) in /tmp/tmp91aap8fu.php:38\nStack trace:\n#0 /tmp/tmp91aap8fu.php(38):\
    \ assert(false, 'assert(same_cha...')\n#1 {main}\n  thrown in /tmp/tmp91aap8fu.php\
    \ on line 38\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $result = 0;\n    $s0 = str_split($s0);\n\
    \    $s1 = str_split($s1);\n    foreach ($s0 as $key => $value) {\n        if(count(array_keys($s1,\
    \ $value)) != 0){\n            unset($s1[array_keys($s1, $value)[0]]);\n     \
    \       $result++;\n        }\n    }\n    return $result == count($s0);\n}\n\n\
    function candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3_3q7vup.php:35\n\
    Stack trace:\n#0 /tmp/tmp3_3q7vup.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp3_3q7vup.php\
    \ on line 35\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $chars = [];\n    for ($i =\
    \ 0; $i < strlen($s0); $i++) {\n        $chars[$s0[$i]] = true;\n    }\n    for\
    \ ($i = 0; $i < strlen($s1); $i++) {\n        if (!isset($chars[$s1[$i]])) {\n\
    \            return false;\n        }\n    }\n    return true;\n}\n$ret = same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\");\necho $ret . PHP_EOL;\n$ret = same_chars(\"\
    abcd\", \"dddddddabc\");\necho $ret . PHP_EOL;\n$ret = same_chars(\"dddddddabc\"\
    , \"abcd\");\necho $ret . PHP_EOL;\n$ret = same_chars(\"eabcd\", \"dddddddabc\"\
    );\necho $ret . PHP_EOL;\n$ret = same_chars(\"abcd\", \"dddddddabce\");\necho\
    \ $ret . PHP_EOL;\n$ret = same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\");\n\
    echo $ret . PHP_EOL;\nfunction candidate(...$args) {\n    return same_chars(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n1\n1\n\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqm2v2j4m.php:47\n\
    Stack trace:\n#0 /tmp/tmpqm2v2j4m.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpqm2v2j4m.php\
    \ on line 47\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $cs0 = count_chars($s0, 1);\n\
    \    $cs1 = count_chars($s1, 1);\n    foreach($cs0 as $c => $n) {\n        if\
    \ (isset($cs1[$c])) {\n            if ($cs1[$c] != $n) {\n                return\
    \ false;\n            }\n        } else {\n            return false;\n       \
    \ }\n    }\n    return true;\n}\n\nif (isset($argv[1])) {\n    $s0 = $argv[1];\n\
    \    $s1 = $argv[2];\n    if (same_chars($s0, $s1)) {\n        echo \"true\\n\"\
    ;\n    } else {\n        echo \"false\\n\";\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzirbzu7k.php:44\n\
    Stack trace:\n#0 /tmp/tmpzirbzu7k.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpzirbzu7k.php\
    \ on line 44\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n  //$ss0 = array_unique(str_split($s0));\n\
    \  //$ss1 = array_unique(str_split($s1));\n  $ss0 = str_split($s0);\n  $ss1 =\
    \ str_split($s1);\n  sort($ss0);\n  sort($ss1);\n  $s00 = implode('', $ss0);\n\
    \  $s11 = implode('', $ss1);\n  return $s00 == $s11;\n}\necho same_chars(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\");\necho \"\\n\";\necho same_chars(\"abcd\", \"dddddddabc\"\
    );\necho \"\\n\";\necho same_chars(\"dddddddabc\", \"abcd\");\necho \"\\n\";\n\
    echo same_chars(\"eabcd\", \"dddddddabc\");\necho \"\\n\";\necho same_chars(\"\
    abcd\", \"dddddddabce\");\necho \"\\n\";\necho same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    );\necho \"\\n\";\nfunction candidate(...$args) {\n    return same_chars(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\n\n\n\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn17i0591.php:43\n\
    Stack trace:\n#0 /tmp/tmpn17i0591.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpn17i0591.php\
    \ on line 43\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    if (strlen($s0) !== strlen($s1))\
    \ {\n        return false;\n    }\n    $s0_arr = str_split($s0);\n    $s1_arr\
    \ = str_split($s1);\n    sort($s0_arr);\n    sort($s1_arr);\n    return $s0_arr\
    \ === $s1_arr;\n}\n\necho same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") ?\
    \ \"true\\n\" : \"false\\n\";\necho same_chars(\"abcd\", \"dddddddabc\") ? \"\
    true\\n\" : \"false\\n\";\necho same_chars(\"dddddddabc\", \"abcd\") ? \"true\\\
    n\" : \"false\\n\";\necho same_chars(\"eabcd\", \"dddddddabc\") ? \"true\\n\"\
    \ : \"false\\n\";\necho same_chars(\"abcd\", \"dddddddabce\") ? \"true\\n\" :\
    \ \"false\\n\";\necho same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") ? \"true\\\
    n\" : \"false\\n\";\nfunction candidate(...$args) {\n    return same_chars(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "false\nfalse\nfalse\nfalse\nfalse\nfalse\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp8byftj1x.php:37\nStack trace:\n#0 /tmp/tmp8byftj1x.php(46):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp8byftj1x.php on line 37\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n  $temp0 = str_split($s0);\n  $temp1\
    \ = str_split($s1);\n  $t0 = count($temp0);\n  $t1 = count($temp1);\n  if ($t0\
    \ > $t1) {\n    $temp2 = $temp0;\n    $temp0 = $temp1;\n    $temp1 = $temp2;\n\
    \  }\n  sort($temp0);\n  sort($temp1);\n  for ($i = 0; $i < count($temp0); $i++)\
    \ {\n    if ($temp0[$i] !== $temp1[$i]) {\n      return false;\n    }\n  }\n \
    \ return true;\n}\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptynw2b1z.php:40\n\
    Stack trace:\n#0 /tmp/tmptynw2b1z.php(49): test()\n#1 {main}\n  thrown in /tmp/tmptynw2b1z.php\
    \ on line 40\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n  $unique_chars = [];\n  for ($i\
    \ = 0; $i < strlen($s0); $i++) {\n    $unique_chars[$s0[$i]] = true;\n  }\n  for\
    \ ($i = 0; $i < strlen($s1); $i++) {\n    if (!isset($unique_chars[$s1[$i]]))\
    \ {\n      return false;\n    }\n  }\n  return true;\n}\necho same_chars(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") ? \"true\\n\" : \"false\\n\";\necho same_chars(\"abcd\"\
    , \"dddddddabc\") ? \"true\\n\" : \"false\\n\";\necho same_chars(\"dddddddabc\"\
    , \"abcd\") ? \"true\\n\" : \"false\\n\";\necho same_chars(\"eabcd\", \"dddddddabc\"\
    ) ? \"true\\n\" : \"false\\n\";\necho same_chars(\"abcd\", \"dddddddabce\") ?\
    \ \"true\\n\" : \"false\\n\";\necho same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) ? \"true\\n\" : \"false\\n\";\nfunction candidate(...$args) {\n    return same_chars(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "true\ntrue\ntrue\ntrue\nfalse\ntrue\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpoi2rfgev.php:41\nStack trace:\n#0 /tmp/tmpoi2rfgev.php(47):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpoi2rfgev.php on line 41\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n\tif (strlen($s0) != strlen($s1))\
    \ return false;\n\t$hash0 = $hash1 = array();\n\tfor ($i = 0; $i < strlen($s0);\
    \ $i++) {\n\t\t$hash0[$s0[$i]]++;\n\t\t$hash1[$s1[$i]]++;\n\t}\n\treturn $hash0\
    \ == $hash1;\n}\n\nassert(same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") ==\
    \ true);\nassert(same_chars(\"abcd\", \"dddddddabc\") == true);\nassert(same_chars(\"\
    dddddddabc\", \"abcd\") == true);\nassert(same_chars(\"eabcd\", \"dddddddabc\"\
    ) == false);\nassert(same_chars(\"abcd\", \"dddddddabce\") == false);\nassert(same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n\nfunction candidate(...$args)\
    \ {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught AssertionError: assert(same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc') == true) in /tmp/tmp7k2pasnx.php:25\nStack trace:\n#0\
    \ /tmp/tmp7k2pasnx.php(25): assert(false, 'assert(same_cha...')\n#1 {main}\n \
    \ thrown in /tmp/tmp7k2pasnx.php on line 25\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n  $a0 = str_split($s0);\n  $a1 =\
    \ str_split($s1);\n  sort($a0);\n  sort($a1);\n  return $a0 == $a1;\n}\n\nvar_dump(same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\"));\nvar_dump(same_chars(\"abcd\", \"dddddddabc\"\
    ));\nvar_dump(same_chars(\"dddddddabc\", \"abcd\"));\nvar_dump(same_chars(\"eabcd\"\
    , \"dddddddabc\"));\nvar_dump(same_chars(\"abcd\", \"dddddddabce\"));\nvar_dump(same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\"));\nfunction candidate(...$args) {\n    return\
    \ same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "bool(false)\nbool(false)\nbool(false)\nbool(false)\nbool(false)\nbool(false)\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmphskuz4ti.php:34\nStack\
    \ trace:\n#0 /tmp/tmphskuz4ti.php(43): test()\n#1 {main}\n  thrown in /tmp/tmphskuz4ti.php\
    \ on line 34\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $a = str_split($s0);\n    $b\
    \ = str_split($s1);\n    $res = TRUE;\n    $i = 0;\n    while ($i < count($a)\
    \ && $res) {\n        $k = 0;\n        $found = FALSE;\n        while ($k < count($b)\
    \ && !$found) {\n            if ($a[$i] == $b[$k]) {\n                $found =\
    \ TRUE;\n                unset($b[$k]);\n            }\n            $k++;\n  \
    \      }\n        if (!$found) $res = FALSE;\n        $i++;\n    }\n    return\
    \ $res;\n}\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 12 in /tmp/tmpvomyf_6a.php on line 24\n\n\
    Warning: Undefined array key 12 in /tmp/tmpvomyf_6a.php on line 24\n\nWarning:\
    \ Undefined array key 15 in /tmp/tmpvomyf_6a.php on line 24\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpvomyf_6a.php:41\nStack trace:\n#0 /tmp/tmpvomyf_6a.php(50):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpvomyf_6a.php on line 41\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n  $map = [];\n  for ($i = 0; $i\
    \ < strlen($s0); $i++) {\n    $c = $s0[$i];\n    if (!isset($map[$c])) {\n   \
    \   $map[$c] = 1;\n    } else {\n      $map[$c] += 1;\n    }\n  }\n  for ($i =\
    \ 0; $i < strlen($s1); $i++) {\n    $c = $s1[$i];\n    if (!isset($map[$c])) {\n\
    \      return false;\n    } else {\n      $map[$c] -= 1;\n      if ($map[$c] <\
    \ 0) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\"\
    , \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\"\
    , \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp166rjzq0.php:44\n\
    Stack trace:\n#0 /tmp/tmp166rjzq0.php(53): test()\n#1 {main}\n  thrown in /tmp/tmp166rjzq0.php\
    \ on line 44\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $s0 = str_split($s0);\n    $s1\
    \ = str_split($s1);\n    $ret = array_diff($s0, $s1);\n    return count($ret)\
    \ == 0;\n}\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzxrwnb_6.php:31\n\
    Stack trace:\n#0 /tmp/tmpzxrwnb_6.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpzxrwnb_6.php\
    \ on line 31\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $s0_chars = str_split($s0);\n\
    \    $s1_chars = str_split($s1);\n    $s0_counts = [];\n    $s1_counts = [];\n\
    \    for ($i = 0; $i < count($s0_chars); $i++) {\n        if (!array_key_exists($s0_chars[$i],\
    \ $s0_counts)) {\n            $s0_counts[$s0_chars[$i]] = 1;\n        } else {\n\
    \            $s0_counts[$s0_chars[$i]] += 1;\n        }\n    }\n    for ($i =\
    \ 0; $i < count($s1_chars); $i++) {\n        if (!array_key_exists($s1_chars[$i],\
    \ $s1_counts)) {\n            $s1_counts[$s1_chars[$i]] = 1;\n        } else {\n\
    \            $s1_counts[$s1_chars[$i]] += 1;\n        }\n    }\n    foreach ($s0_counts\
    \ as $key => $value) {\n        if (!array_key_exists($key, $s1_counts)) {\n \
    \           return false;\n        }\n        if ($s0_counts[$key] != $s1_counts[$key])\
    \ {\n            return false;\n        }\n    }\n    return true;\n}\nfunction\
    \ candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\"\
    , \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\"\
    , \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1x5hbej4.php:49\n\
    Stack trace:\n#0 /tmp/tmp1x5hbej4.php(58): test()\n#1 {main}\n  thrown in /tmp/tmp1x5hbej4.php\
    \ on line 49\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    return count_chars($s0, 1) ==\
    \ count_chars($s1, 1);\n}\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6_93pgu_.php:24\n\
    Stack trace:\n#0 /tmp/tmp6_93pgu_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp6_93pgu_.php\
    \ on line 24\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n  if (strlen($s0) != strlen($s1))\
    \ {\n    return false;\n  }\n\n  $map = [];\n  for ($i = 0; $i < strlen($s0);\
    \ $i++) {\n    $char = $s0[$i];\n    if (!array_key_exists($char, $map)) {\n \
    \     $map[$char] = 1;\n    } else {\n      $map[$char]++;\n    }\n  }\n\n  for\
    \ ($i = 0; $i < strlen($s1); $i++) {\n    $char = $s1[$i];\n    if (!array_key_exists($char,\
    \ $map)) {\n      return false;\n    } else {\n      $map[$char]--;\n      if\
    \ ($map[$char] < 0) {\n        return false;\n      }\n    }\n  }\n\n  return\
    \ true;\n}\nfunction candidate(...$args) {\n    return same_chars(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph91jybl7.php:49\n\
    Stack trace:\n#0 /tmp/tmph91jybl7.php(58): test()\n#1 {main}\n  thrown in /tmp/tmph91jybl7.php\
    \ on line 49\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $arr0 = str_split($s0);\n  \
    \  $arr1 = str_split($s1);\n    $tmp0 = [];\n    $tmp1 = [];\n    foreach ($arr0\
    \ as $value) {\n        if (!in_array($value, $tmp0)) {\n            $tmp0[] =\
    \ $value;\n        }\n    }\n    foreach ($arr1 as $value) {\n        if (!in_array($value,\
    \ $tmp1)) {\n            $tmp1[] = $value;\n        }\n    }\n    return $tmp0\
    \ == $tmp1;\n}\nfunction candidate(...$args) {\n    return same_chars(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp24oeycg_.php:37\n\
    Stack trace:\n#0 /tmp/tmp24oeycg_.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp24oeycg_.php\
    \ on line 37\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $arr0 = str_split($s0);\n  \
    \  $arr1 = str_split($s1);\n    $arrs = array_merge($arr0, $arr1);\n    $len =\
    \ count($arrs);\n    $arrs = array_unique($arrs);\n    $len = $len - count($arrs);\n\
    \    return ($len == 0);\n}\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxm6keqyq.php:30\n\
    Stack trace:\n#0 /tmp/tmpxm6keqyq.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpxm6keqyq.php\
    \ on line 30\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $c0 = str_split($s0);\n    $c1\
    \ = str_split($s1);\n    sort($c0);\n    sort($c1);\n    $c0 = implode($c0);\n\
    \    $c1 = implode($c1);\n    return $c0 == $c1;\n}\n\nfunction candidate(...$args)\
    \ {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm9lyvrwr.php:30\n\
    Stack trace:\n#0 /tmp/tmpm9lyvrwr.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpm9lyvrwr.php\
    \ on line 30\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $str = \"\";\n    for ($i =\
    \ 0; $i < strlen($s0); $i++) {\n        $s = substr($s0, $i, 1);\n        if (strpos($s1,\
    \ $s) !== false) {\n            $str .= $s;\n        }\n    }\n    $s1 = str_replace($str,\
    \ \"\", $s1);\n    return $s1 === \"\";\n}\necho same_chars(\"eabcdzzzz\", \"\
    dddzzzzzzzddeddabc\") ? \"true\" : \"false\";\necho same_chars(\"abcd\", \"dddddddabc\"\
    ) ? \"true\" : \"false\";\necho same_chars(\"dddddddabc\", \"abcd\") ? \"true\"\
    \ : \"false\";\necho same_chars(\"eabcd\", \"dddddddabc\") ? \"true\" : \"false\"\
    ;\necho same_chars(\"abcd\", \"dddddddabce\") ? \"true\" : \"false\";\necho same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") ? \"true\" : \"false\";\nfunction candidate(...$args)\
    \ {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "falsefalsefalsefalsefalsefalse\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpuoodnquc.php:37\nStack trace:\n#0 /tmp/tmpuoodnquc.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmpuoodnquc.php on line 37\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $chars0 = str_split($s0);\n\
    \    $chars1 = str_split($s1);\n    $chars0_count = array_count_values($chars0);\n\
    \    $chars1_count = array_count_values($chars1);\n    return $chars0_count ==\
    \ $chars1_count;\n}\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73qnxzxo.php:28\n\
    Stack trace:\n#0 /tmp/tmp73qnxzxo.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp73qnxzxo.php\
    \ on line 28\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $len_s0 = strlen($s0);\n   \
    \ $len_s1 = strlen($s1);\n    $chars_s0 = array();\n    $chars_s1 = array();\n\
    \    if ($len_s0 != $len_s1) {\n        return false;\n    }\n    for ($i = 0;\
    \ $i < $len_s0; $i++) {\n        if (!isset($chars_s0[$s0[$i]])) {\n         \
    \   $chars_s0[$s0[$i]] = 1;\n        } else {\n            $chars_s0[$s0[$i]]++;\n\
    \        }\n        if (!isset($chars_s1[$s1[$i]])) {\n            $chars_s1[$s1[$i]]\
    \ = 1;\n        } else {\n            $chars_s1[$s1[$i]]++;\n        }\n    }\n\
    \    foreach ($chars_s0 as $char => $times) {\n        if (!isset($chars_s1[$char])\
    \ || $chars_s1[$char] != $times) {\n            return false;\n        }\n   \
    \ }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_l3csbed.php:48\n\
    Stack trace:\n#0 /tmp/tmp_l3csbed.php(57): test()\n#1 {main}\n  thrown in /tmp/tmp_l3csbed.php\
    \ on line 48\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $m0 = array_count_values(str_split($s0));\n\
    \    $m1 = array_count_values(str_split($s1));\n    return $m0 == $m1;\n}\nfunction\
    \ candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\"\
    , \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\"\
    , \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeucv1fut.php:25\n\
    Stack trace:\n#0 /tmp/tmpeucv1fut.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpeucv1fut.php\
    \ on line 25\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $s0_list = str_split($s0);\n\
    \    $s1_list = str_split($s1);\n    sort($s0_list);\n    sort($s1_list);\n  \
    \  return join(\"\", $s0_list) == join(\"\", $s1_list);\n}\n\nfunction candidate(...$args)\
    \ {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpee20v0rp.php:28\n\
    Stack trace:\n#0 /tmp/tmpee20v0rp.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpee20v0rp.php\
    \ on line 28\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $count = 0;\n    for ($i = 0;\
    \ $i < strlen($s0); $i++) {\n        for ($j = 0; $j < strlen($s1); $j++) {\n\
    \            if ($s0[$i] == $s1[$j]) {\n                $count++;\n          \
    \      break;\n            }\n        }\n    }\n    if ($count == strlen($s0))\
    \ {\n        echo \"true\" . \"\\n\";\n    } else {\n        echo \"false\" .\
    \ \"\\n\";\n    }\n}\n\nsame_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\");\nsame_chars(\"\
    abcd\", \"dddddddabc\");\nsame_chars(\"dddddddabc\", \"abcd\");\nsame_chars(\"\
    eabcd\", \"dddddddabc\");\nsame_chars(\"abcd\", \"dddddddabce\");\nsame_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\");\nfunction candidate(...$args) {\n    return\
    \ same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "true\ntrue\ntrue\nfalse\ntrue\nfalse\ntrue\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpxeo1yvyy.php:43\nStack trace:\n#0 /tmp/tmpxeo1yvyy.php(52):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpxeo1yvyy.php on line 43\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n  $n0 = strlen($s0);\n  $n1 = strlen($s1);\n\
    \  $min = min($n0, $n1);\n  $max = max($n0, $n1);\n  for ($i = 0; $i < $min; $i++)\
    \ {\n    if ($s0[$i] != $s1[$i]) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\nfunction candidate(...$args) {\n    return same_chars(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpygtgwnje.php:32\n\
    Stack trace:\n#0 /tmp/tmpygtgwnje.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpygtgwnje.php\
    \ on line 32\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n  $a0 = str_split($s0);\n  $a1 =\
    \ str_split($s1);\n  if (count($a0) !== count($a1)) {\n    return false;\n  }\n\
    \  sort($a0);\n  sort($a1);\n  return $a0 === $a1;\n}\n\necho same_chars(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") . PHP_EOL;\necho same_chars(\"abcd\", \"dddddddabc\"\
    ) . PHP_EOL;\necho same_chars(\"dddddddabc\", \"abcd\") . PHP_EOL;\necho same_chars(\"\
    eabcd\", \"dddddddabc\") . PHP_EOL;\necho same_chars(\"abcd\", \"dddddddabce\"\
    ) . PHP_EOL;\necho same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") . PHP_EOL;\n\
    function candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\n\n\n\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjc4zighd.php:37\n\
    Stack trace:\n#0 /tmp/tmpjc4zighd.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpjc4zighd.php\
    \ on line 37\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    if (strlen($s0) == strlen($s1))\
    \ {\n        $count0 = str_split($s0);\n        $count1 = str_split($s1);\n  \
    \      $sum0 = 0;\n        $sum1 = 0;\n        foreach ($count0 as $key0 => $value0)\
    \ {\n            $sum0 += ord($value0);\n        }\n        foreach ($count1 as\
    \ $key1 => $value1) {\n            $sum1 += ord($value1);\n        }\n       \
    \ if ($sum0 == $sum1) {\n            return 'true';\n        } else {\n      \
    \      return 'false';\n        }\n    } else {\n        return 'false';\n   \
    \ }\n}\n\necho same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") . \"\\n\";\n\
    echo same_chars(\"abcd\", \"dddddddabc\") . \"\\n\";\necho same_chars(\"dddddddabc\"\
    , \"abcd\") . \"\\n\";\necho same_chars(\"eabcd\", \"dddddddabc\") . \"\\n\";\n\
    echo same_chars(\"abcd\", \"dddddddabce\") . \"\\n\";\necho same_chars(\"eabcdzzzz\"\
    , \"dddzzzzzzzddddabc\") . \"\\n\";\n\nfunction candidate(...$args) {\n    return\
    \ same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "false\nfalse\nfalse\nfalse\nfalse\nfalse\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpl6k358pp.php:49\nStack trace:\n#0 /tmp/tmpl6k358pp.php(58):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpl6k358pp.php on line 49\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $sorted0 = str_split($s0);\n\
    \    sort($sorted0);\n    $sorted1 = str_split($s1);\n    sort($sorted1);\n  \
    \  return $sorted0 == $sorted1;\n}\n\nvar_dump(same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ));\nvar_dump(same_chars(\"abcd\", \"dddddddabc\"));\nvar_dump(same_chars(\"dddddddabc\"\
    , \"abcd\"));\nvar_dump(same_chars(\"eabcd\", \"dddddddabc\"));\nvar_dump(same_chars(\"\
    abcd\", \"dddddddabce\"));\nvar_dump(same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ));\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "bool(false)\nbool(false)\nbool(false)\nbool(false)\nbool(false)\nbool(false)\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgceqd8x9.php:34\nStack\
    \ trace:\n#0 /tmp/tmpgceqd8x9.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpgceqd8x9.php\
    \ on line 34\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n\tif(strlen($s0) === strlen($s1))\
    \ {\n\t\treturn false;\n\t}\n\t$arr0 = str_split($s0);\n\t$arr1 = str_split($s1);\n\
    \t$counter0 = array_count_values($arr0);\n\t$counter1 = array_count_values($arr1);\n\
    \tforeach($counter0 as $char=>$occur) {\n\t\tif(array_key_exists($char, $counter1))\
    \ {\n\t\t\tif($occur === $counter1[$char]) {\n\t\t\t\tcontinue;\n\t\t\t} else\
    \ {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\
    \t}\n\treturn true;\n}\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4d2k171u.php:42\n\
    Stack trace:\n#0 /tmp/tmp4d2k171u.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp4d2k171u.php\
    \ on line 42\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    if (strlen($s0) != strlen($s1))\
    \ return false;\n    $map0 = char_map($s0);\n    $map1 = char_map($s1);\n    return\
    \ ($map0 == $map1);\n}\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpazw9at83.php:27\n\
    Stack trace:\n#0 /tmp/tmpazw9at83.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpazw9at83.php\
    \ on line 27\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n  $s0 = preg_replace('/\\s+/', '',\
    \ $s0);\n  $s1 = preg_replace('/\\s+/', '', $s1);\n  $s0 = str_split($s0);\n \
    \ $s1 = str_split($s1);\n  // Function to check if every value of first array\
    \ is present in the second\n  // array.\n  return count(array_intersect($s0, $s1))\
    \ == count($s0);\n}\n\necho same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")\
    \ ? 'true' : 'false';\necho PHP_EOL;\necho same_chars(\"abcd\", \"dddddddabc\"\
    ) ? 'true' : 'false';\necho PHP_EOL;\necho same_chars(\"dddddddabc\", \"abcd\"\
    ) ? 'true' : 'false';\necho PHP_EOL;\necho same_chars(\"eabcd\", \"dddddddabc\"\
    ) ? 'true' : 'false';\necho PHP_EOL;\necho same_chars(\"abcd\", \"dddddddabce\"\
    ) ? 'true' : 'false';\necho PHP_EOL;\necho same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) ? 'true' : 'false';\necho PHP_EOL;\nfunction candidate(...$args) {\n    return\
    \ same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "true\ntrue\ntrue\nfalse\ntrue\nfalse\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpivy90opb.php:46\nStack trace:\n#0 /tmp/tmpivy90opb.php(51):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpivy90opb.php on line 46\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n  $a0 = str_split($s0);\n  $a1 =\
    \ str_split($s1);\n  if (count($a0) != count($a1)) return false;\n  sort($a0);\n\
    \  sort($a1);\n  return $a0 == $a1;\n}\n\nfunction candidate(...$args) {\n   \
    \ return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8sppkc1i.php:29\n\
    Stack trace:\n#0 /tmp/tmp8sppkc1i.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp8sppkc1i.php\
    \ on line 29\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n  $chars = array();\n  $length =\
    \ 0;\n  for ($i = 0; $i < strlen($s0); $i++) {\n    $chars[$s0[$i]] = true;\n\
    \    $length++;\n  }\n  for ($i = 0; $i < strlen($s1); $i++) {\n    if (isset($chars[$s1[$i]]))\
    \ {\n      $length--;\n    }\n  }\n  return $length == 0;\n}\nfunction candidate(...$args)\
    \ {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphvl6lwwf.php:34\n\
    Stack trace:\n#0 /tmp/tmphvl6lwwf.php(43): test()\n#1 {main}\n  thrown in /tmp/tmphvl6lwwf.php\
    \ on line 34\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $matches = 0;\n    $arr0 = str_split($s0);\n\
    \    $arr1 = str_split($s1);\n    for ($i = 0; $i < count($arr0); $i++) {\n  \
    \      for ($j = 0; $j < count($arr1); $j++) {\n            if ($arr0[$i] == $arr1[$j])\
    \ {\n                $matches++;\n                $arr1[$j] = \"0\";\n       \
    \         break;\n            }\n        }\n    }\n    return $matches == count($arr0);\n\
    }\n\necho same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") . \"\\n\";\necho same_chars(\"\
    abcd\", \"dddddddabc\") . \"\\n\";\necho same_chars(\"dddddddabc\", \"abcd\")\
    \ . \"\\n\";\necho same_chars(\"eabcd\", \"dddddddabc\") . \"\\n\";\necho same_chars(\"\
    abcd\", \"dddddddabce\") . \"\\n\";\necho same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) . \"\\n\";\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n\n\n1\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxw95y2lo.php:45\n\
    Stack trace:\n#0 /tmp/tmpxw95y2lo.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpxw95y2lo.php\
    \ on line 45\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $arr0 = [];\n    $arr1 = [];\n\
    \    for ($i = 0; $i < strlen($s0); $i++) {\n        if (in_array($s0[$i], $arr0))\
    \ {\n            $key = array_search($s0[$i], $arr0);\n            $arr0[$key]\
    \ = $arr0[$key] + 1;\n        } else {\n            $arr0[] = $s0[$i];\n     \
    \       $arr0[] = 1;\n        }\n    }\n    for ($i = 0; $i < strlen($s1); $i++)\
    \ {\n        if (in_array($s1[$i], $arr1)) {\n            $key = array_search($s1[$i],\
    \ $arr1);\n            $arr1[$key] = $arr1[$key] + 1;\n        } else {\n    \
    \        $arr1[] = $s1[$i];\n            $arr1[] = 1;\n        }\n    }\n    sort($arr0);\n\
    \    sort($arr1);\n    if ($arr0 == $arr1) {\n        return \"true\";\n    }\
    \ else {\n        return \"false\";\n    }\n}\necho same_chars(\"eabcdzzzz\",\
    \ \"dddzzzzzzzddeddabc\") . \"<br>\";\necho same_chars(\"abcd\", \"dddddddabc\"\
    ) . \"<br>\";\necho same_chars(\"dddddddabc\", \"abcd\") . \"<br>\";\necho same_chars(\"\
    eabcd\", \"dddddddabc\") . \"<br>\";\necho same_chars(\"abcd\", \"dddddddabce\"\
    ) . \"<br>\";\necho same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") . \"<br>\"\
    ;\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string +\
    \ int in /tmp/tmp7p1ycm6g.php:21\nStack trace:\n#0 /tmp/tmp7p1ycm6g.php(44): same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddedd...')\n#1 {main}\n  thrown in /tmp/tmp7p1ycm6g.php on line 21\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n  $r = true;\n  $l = strlen($s0);\n\
    \  for ($i = 0; $i < $l; $i++) {\n    $c = $s0[$i];\n    $p = strpos($s1, $c);\n\
    \    if ($p === false) {\n      $r = false;\n      break;\n    }\n    $s1 = substr($s1,\
    \ 0, $p) . substr($s1, $p + 1);\n  }\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptv4fuz0n.php:37\n\
    Stack trace:\n#0 /tmp/tmptv4fuz0n.php(44): test()\n#1 {main}\n  thrown in /tmp/tmptv4fuz0n.php\
    \ on line 37\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n\tif (strlen($s0) != strlen($s1))\
    \ {\n\t\treturn false;\n\t}\n\tfor ($i = 0; $i < strlen($s0); $i++) {\n\t\tif\
    \ (strpos($s1, $s0[$i]) === false) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl5q2wmf7.php:32\n\
    Stack trace:\n#0 /tmp/tmpl5q2wmf7.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpl5q2wmf7.php\
    \ on line 32\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n\tif (strlen($s0) != strlen($s1))\
    \ {\n\t\treturn false;\n\t}\n\tfor ($i = 0; $i < strlen($s0); $i++) {\n\t\tif\
    \ (strpos($s1, $s0[$i]) === false) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn\
    \ true;\n}\n\necho same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") ? \"true\"\
    \ : \"false\";\necho \"<br>\";\necho same_chars(\"abcd\", \"dddddddabc\") ? \"\
    true\" : \"false\";\necho \"<br>\";\necho same_chars(\"dddddddabc\", \"abcd\"\
    ) ? \"true\" : \"false\";\necho \"<br>\";\necho same_chars(\"eabcd\", \"dddddddabc\"\
    ) ? \"true\" : \"false\";\necho \"<br>\";\necho same_chars(\"abcd\", \"dddddddabce\"\
    ) ? \"true\" : \"false\";\necho \"<br>\";\necho same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) ? \"true\" : \"false\";\nfunction candidate(...$args) {\n    return same_chars(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "false<br>false<br>false<br>false<br>false<br>false\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpc32wc29b.php:43\nStack trace:\n#0 /tmp/tmpc32wc29b.php(52):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpc32wc29b.php on line 43\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n  // TODO\n}\nfunction candidate(...$args)\
    \ {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_d6rawkd.php:23\n\
    Stack trace:\n#0 /tmp/tmp_d6rawkd.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp_d6rawkd.php\
    \ on line 23\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    // your solution here...\n \
    \   if (strlen($s0) == strlen($s1)) {\n        for ($i = 0; $i < strlen($s0);\
    \ $i++) {\n            if (strpos($s1, $s0[$i]) === false) {\n               \
    \ return false;\n            }\n        }\n        return true;\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyr8if70x.php:33\n\
    Stack trace:\n#0 /tmp/tmpyr8if70x.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpyr8if70x.php\
    \ on line 33\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $a0 = str_split($s0);\n    $a1\
    \ = str_split($s1);\n    $c = array_merge($a0, $a1);\n    $c = array_unique($c);\n\
    \    $c = array_fill_keys($c, 0);\n    foreach ($a0 as $ch) {\n        $c[$ch]++;\n\
    \    }\n    foreach ($a1 as $ch) {\n        $c[$ch]--;\n    }\n    foreach ($c\
    \ as $n) {\n        if ($n != 0) return false;\n    }\n    return true;\n}\nfunction\
    \ candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\"\
    , \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\"\
    , \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjelyyb7f.php:37\n\
    Stack trace:\n#0 /tmp/tmpjelyyb7f.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpjelyyb7f.php\
    \ on line 37\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $r0 = array_count_values(str_split($s0));\n\
    \    $r1 = array_count_values(str_split($s1));\n    return ($r0 == $r1);\n}\n\n\
    function candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp64jeimov.php:26\n\
    Stack trace:\n#0 /tmp/tmp64jeimov.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp64jeimov.php\
    \ on line 26\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $a0 = str_split($s0);\n    $a1\
    \ = str_split($s1);\n    sort($a0);\n    sort($a1);\n    return $a0 == $a1;\n\
    }\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa2l4e3zv.php:27\n\
    Stack trace:\n#0 /tmp/tmpa2l4e3zv.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpa2l4e3zv.php\
    \ on line 27\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n  $arr0 = str_split($s0);\n  $arr1\
    \ = str_split($s1);\n  sort($arr0);\n  sort($arr1);\n  return $arr0 == $arr1;\n\
    }\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0nehcvcq.php:28\n\
    Stack trace:\n#0 /tmp/tmp0nehcvcq.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp0nehcvcq.php\
    \ on line 28\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $a0 = str_split($s0);\n    $a1\
    \ = str_split($s1);\n    sort($a0);\n    sort($a1);\n    $s2 = implode('', $a0);\n\
    \    $s3 = implode('', $a1);\n    return $s2 == $s3;\n}\n\nfunction candidate(...$args)\
    \ {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8vtf29zq.php:30\n\
    Stack trace:\n#0 /tmp/tmp8vtf29zq.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp8vtf29zq.php\
    \ on line 30\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $arr = str_split($s0);\n   \
    \ $arr1 = str_split($s1);\n    $arr_count = array_count_values($arr);\n    $arr1_count\
    \ = array_count_values($arr1);\n    if(array_diff_assoc($arr_count, $arr1_count)\
    \ == NULL)\n        return true;\n    else\n        return false;\n}\necho same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\");\necho \"<br>\";\necho same_chars(\"abcd\"\
    , \"dddddddabc\");\necho \"<br>\";\necho same_chars(\"dddddddabc\", \"abcd\");\n\
    echo \"<br>\";\necho same_chars(\"eabcd\", \"dddddddabc\");\necho \"<br>\";\n\
    echo same_chars(\"abcd\", \"dddddddabce\");\necho \"<br>\";\necho same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\");\necho \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<br><br><br><br><br><br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpcabn9zbn.php:42\nStack trace:\n#0 /tmp/tmpcabn9zbn.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmpcabn9zbn.php on line 42\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n\tif (strlen($s0) != strlen($s1))\
    \ {\n\t\treturn false;\n\t}\n\t$s0c = str_split($s0);\n\t$s1c = str_split($s1);\n\
    \tforeach ($s0c as $c) {\n\t\t$key = array_search($c, $s1c);\n\t\tif ($key ===\
    \ false) {\n\t\t\treturn false;\n\t\t}\n\t\tunset($s1c[$key]);\n\t}\n\treturn\
    \ true;\n}\nfunction candidate(...$args) {\n    return same_chars(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbr3g_1ia.php:35\n\
    Stack trace:\n#0 /tmp/tmpbr3g_1ia.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpbr3g_1ia.php\
    \ on line 35\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    if (strlen($s0) == strlen($s1))\
    \ {\n        for ($i = 0; $i < strlen($s0); $i++) {\n            if (substr_count($s0,\
    \ $s0[$i]) !== substr_count($s1, $s0[$i]))\n                return false;\n  \
    \      }\n        return true;\n    }\n    return false;\n}\n\necho same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") . \"\\n\";\necho same_chars(\"abcd\", \"\
    dddddddabc\") . \"\\n\";\necho same_chars(\"dddddddabc\", \"abcd\") . \"\\n\"\
    ;\necho same_chars(\"eabcd\", \"dddddddabc\") . \"\\n\";\necho same_chars(\"abcd\"\
    , \"dddddddabce\") . \"\\n\";\necho same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) . \"\\n\";\nfunction candidate(...$args) {\n    return same_chars(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\n\n\n\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpme4twd9q.php:37\n\
    Stack trace:\n#0 /tmp/tmpme4twd9q.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpme4twd9q.php\
    \ on line 37\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n\t$counts = [];\n\t$length = strlen($s0);\n\
    \tfor ($i = 0; $i < $length; $i++) {\n\t\t$counts[$s0[$i]]++;\n\t}\n\t$length\
    \ = strlen($s1);\n\tfor ($i = 0; $i < $length; $i++) {\n\t\t$counts[$s1[$i]]--;\n\
    \t}\n\tforeach ($counts as $count) {\n\t\tif ($count !== 0) {\n\t\t\treturn false;\n\
    \t\t}\n\t}\n\treturn true;\n}\n\necho same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) . \"<br>\";\necho same_chars(\"abcd\", \"dddddddabc\") . \"<br>\";\necho same_chars(\"\
    dddddddabc\", \"abcd\") . \"<br>\";\necho same_chars(\"eabcd\", \"dddddddabc\"\
    ) . \"<br>\";\necho same_chars(\"abcd\", \"dddddddabce\") . \"<br>\";\necho same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") . \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Warning: Undefined array key "e" in /tmp/tmp7o14b_lq.php on line 19


    Warning: Undefined array key "a" in /tmp/tmp7o14b_lq.php on line 19


    Warning: Undefined array key "b" in /tmp/tmp7o14b_lq.php on line 19


    Warning: Undefined array key "c" in /tmp/tmp7o14b_lq.php on line 19


    Warning: Undefined array key "d" in /tmp/tmp7o14b_lq.php on line 19


    Warning: Undefined array key "z" in /tmp/tmp7o14b_lq.php on line 19

    <br>

    Warning: Undefined array key "a" in /tmp/tmp7o14b_lq.php on line 19


    Warning: Undefined array key "b" in /tmp/tmp7o14b_lq.php on line 19


    Warning: Undefined array key "c" in /tmp/tmp7o14b_lq.php on line 19


    Warning: Undefined array key "d" in /tmp/tmp7o14b_lq.php on line 19

    <br>

    Warning: Undefined array key "d" in /tmp/tmp7o14b_lq.php on line 19


    Warning: Undefined array key "a" in /tmp/tmp7o14b_lq.php on line 19


    Warning: Undefined array key "b" in /tmp/tmp7o14b_lq.php on line 19


    Warning: Undefined array key "c" in /tmp/tmp7o14b_lq.php on line 19

    <br>

    Warning: Undefined array key "e" in /tmp/tmp7o14b_lq.php on line 19


    Warning: Undefined array key "a" in /tmp/tmp7o14b_lq.php on line 19


    Warning: Undefined array key "b" in /tmp/tmp7o14b_lq.php on line 19


    Warning: Undefined array key "c" in /tmp/tmp7o14b_lq.php on line 19


    Warning: Undefined array key "d" in /tmp/tmp7o14b_lq.php on line 19

    <br>

    Warning: Undefined array key "a" in /tmp/tmp7o14b_lq.php on line 19


    Warning: Undefined array key "b" in /tmp/tmp7o14b_lq.php on line 19


    Warning: Undefined array key "c" in /tmp/tmp7o14b_lq.php on line 19


    Warning: Undefined array key "d" in /tmp/tmp7o14b_lq.php on line 19


    Warning: Undefined array key "e" in /tmp/tmp7o14b_lq.php on line 23

    <br>

    Warning: Undefined array key "e" in /tmp/tmp7o14b_lq.php on line 19


    Warning: Undefined array key "a" in /tmp/tmp7o14b_lq.php on line 19


    Warning: Undefined array key "b" in /tmp/tmp7o14b_lq.php on line 19


    Warning: Undefined array key "c" in /tmp/tmp7o14b_lq.php on line 19


    Warning: Undefined array key "d" in /tmp/tmp7o14b_lq.php on line 19


    Warning: Undefined array k'
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $len0 = strlen($s0);\n    $len1\
    \ = strlen($s1);\n    if ($len0 != $len1) {\n        return false;\n    }\n  \
    \  $array0 = str_split($s0);\n    $array1 = str_split($s1);\n    sort($array0);\n\
    \    sort($array1);\n    for ($i = 0; $i < $len0; $i++) {\n        if ($array0[$i]\
    \ != $array1[$i]) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvo04_b27.php:38\n\
    Stack trace:\n#0 /tmp/tmpvo04_b27.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpvo04_b27.php\
    \ on line 38\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n  $string0 = str_split($s0);\n \
    \ $string1 = str_split($s1);\n  sort($string0);\n  sort($string1);\n  return implode($string0)\
    \ == implode($string1);\n}\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1ma2xrdk.php:28\n\
    Stack trace:\n#0 /tmp/tmp1ma2xrdk.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp1ma2xrdk.php\
    \ on line 28\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n  return count_chars($s0) == count_chars($s1);\n\
    }\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1zi6sxbn.php:24\n\
    Stack trace:\n#0 /tmp/tmp1zi6sxbn.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp1zi6sxbn.php\
    \ on line 24\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n  $counts = [];\n  $n = strlen($s0);\n\
    \  for ($i = 0; $i < $n; $i++) {\n    $counts[$s0[$i]] = 0;\n  }\n  for ($i =\
    \ 0; $i < $n; $i++) {\n    $counts[$s0[$i]] += 1;\n  }\n  for ($i = 0; $i < $n;\
    \ $i++) {\n    $counts[$s1[$i]] -= 1;\n  }\n  foreach ($counts as $v) {\n    if\
    \ ($v != 0) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\"\
    , \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\"\
    , \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn3pv4489.php:40\n\
    Stack trace:\n#0 /tmp/tmpn3pv4489.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpn3pv4489.php\
    \ on line 40\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n\t$a0 = str_split($s0);\n\t$a1 =\
    \ str_split($s1);\n\tsort($a0);\n\tsort($a1);\n\tif ($a0 === $a1) {\n\t\treturn\
    \ true;\n\t}\n\treturn false;\n}\n\nfunction candidate(...$args) {\n    return\
    \ same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr4udn4kt.php:31\n\
    Stack trace:\n#0 /tmp/tmpr4udn4kt.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpr4udn4kt.php\
    \ on line 31\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    // assume $s0 and $s1 only contains\
    \ ASCII characters\n    $a0 = array_fill(0, 128, 0);\n    $a1 = array_fill(0,\
    \ 128, 0);\n    $len0 = strlen($s0);\n    $len1 = strlen($s1);\n    if ($len0\
    \ != $len1) return false;\n    for ($i = 0; $i < $len0; $i++) {\n        $ord\
    \ = ord($s0[$i]);\n        $a0[$ord]++;\n        $ord = ord($s1[$i]);\n      \
    \  $a1[$ord]++;\n    }\n    for ($i = 0; $i < 128; $i++) {\n        if ($a0[$i]\
    \ != $a1[$i]) return false;\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1np6h21y.php:39\n\
    Stack trace:\n#0 /tmp/tmp1np6h21y.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp1np6h21y.php\
    \ on line 39\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n  $arr0 = count_chars($s0, 1);\n\
    \  $arr1 = count_chars($s1, 1);\n  return $arr0 == $arr1;\n}\n\nfunction candidate(...$args)\
    \ {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphrnxla02.php:26\n\
    Stack trace:\n#0 /tmp/tmphrnxla02.php(35): test()\n#1 {main}\n  thrown in /tmp/tmphrnxla02.php\
    \ on line 26\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n\t$count0 = count_chars($s0, 1);\n\
    \t$count1 = count_chars($s1, 1);\n\tif (count($count0) != count($count1)) return\
    \ false;\n\t$sum0 = array_sum($count0);\n\t$sum1 = array_sum($count1);\n\tif ($sum0\
    \ != $sum1) return false;\n\tforeach ($count0 as $i => $v) {\n\t\tif (!array_key_exists($i,\
    \ $count1)) return false;\n\t\tif ($count0[$i] != $count1[$i]) return false;\n\
    \t}\n\treturn true;\n}\n\nassert(same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ));\nassert(same_chars(\"abcd\", \"dddddddabc\"));\nassert(same_chars(\"dddddddabc\"\
    , \"abcd\"));\nassert(!same_chars(\"eabcd\", \"dddddddabc\"));\nassert(!same_chars(\"\
    abcd\", \"dddddddabce\"));\nassert(!same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ));\necho \"All test passed\\n\";\nfunction candidate(...$args) {\n    return\
    \ same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught AssertionError: assert(same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')) in /tmp/tmp1u4xsz82.php:29\nStack trace:\n#0 /tmp/tmp1u4xsz82.php(29):\
    \ assert(false, 'assert(same_cha...')\n#1 {main}\n  thrown in /tmp/tmp1u4xsz82.php\
    \ on line 29\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $arr0 = str_split($s0);\n  \
    \  $arr1 = str_split($s1);\n    sort($arr0);\n    sort($arr1);\n    return implode($arr0)\
    \ == implode($arr1);\n}\n\n$strings = [\n    [\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ],\n    [\"abcd\", \"dddddddabc\"],\n    [\"dddddddabc\", \"abcd\"],\n    [\"\
    eabcd\", \"dddddddabc\"],\n    [\"abcd\", \"dddddddabce\"],\n    [\"eabcdzzzz\"\
    , \"dddzzzzzzzddddabc\"],\n];\n\nforeach ($strings as $s) {\n    echo same_chars($s[0],\
    \ $s[1]) . PHP_EOL;\n}\nfunction candidate(...$args) {\n    return same_chars(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\n\n\n\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2b35e09i.php:40\n\
    Stack trace:\n#0 /tmp/tmp2b35e09i.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp2b35e09i.php\
    \ on line 40\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n\t$a0 = str_split($s0);\n\t$a1 =\
    \ str_split($s1);\n\t$a0_count = array_count_values($a0);\n\t$a1_count = array_count_values($a1);\n\
    \tforeach ($a0_count as $key => $value) {\n\t\tif (!isset($a1_count[$key]) ||\
    \ $a1_count[$key] < $value) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n\
    }\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw1loy8de.php:34\n\
    Stack trace:\n#0 /tmp/tmpw1loy8de.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpw1loy8de.php\
    \ on line 34\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $s1_counts = array_count_values(str_split($s1));\n\
    \    $s0_counts = array_count_values(str_split($s0));\n    $s1_letters = array_keys($s1_counts);\n\
    \    $s0_letters = array_keys($s0_counts);\n    $dups = array_intersect($s1_letters,\
    \ $s0_letters);\n    $dups_counts = array_map(function($letter) use ($s1_counts,\
    \ $s0_counts) {\n        return $s1_counts[$letter] == $s0_counts[$letter];\n\
    \    }, $dups);\n    return array_reduce($dups_counts, function($carry, $item)\
    \ {\n        return $carry && $item;\n    }, true);\n}\necho \"True cases:\\n\"\
    ;\nvar_dump(same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"));\nvar_dump(same_chars(\"\
    abcd\", \"dddddddabc\"));\nvar_dump(same_chars(\"dddddddabc\", \"abcd\"));\necho\
    \ \"False cases:\\n\";\nvar_dump(same_chars(\"eabcd\", \"dddddddabc\"));\nvar_dump(same_chars(\"\
    abcd\", \"dddddddabce\"));\nvar_dump(same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ));\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "True cases:\nbool(false)\nbool(false)\nbool(false)\nFalse cases:\nbool(false)\n\
    bool(false)\nbool(false)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp38ur922n.php:41\n\
    Stack trace:\n#0 /tmp/tmp38ur922n.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp38ur922n.php\
    \ on line 41\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n\t$arr0 = str_split($s0);\n\t$arr1\
    \ = str_split($s1);\n\tsort($arr0);\n\tsort($arr1);\n\tif (implode(\"\", $arr0)\
    \ == implode(\"\", $arr1)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\
    \t}\n}\n\n$s0 = \"eabcdzzzz\";\n$s1 = \"dddzzzzzzzddeddabc\";\n$s2 = \"dddzzzzzzzddddabc\"\
    ;\necho same_chars($s0, $s1) . \"<br>\";\necho same_chars($s0, $s2) . \"<br>\"\
    ;\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<br><br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp65ykcyw7.php:38\n\
    Stack trace:\n#0 /tmp/tmp65ykcyw7.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp65ykcyw7.php\
    \ on line 38\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n  if(count_chars($s0, 3) === count_chars($s1,\
    \ 3)) {\n    return \"true\";\n  } else {\n    return \"false\";\n  }\n}\n\nfunction\
    \ candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\"\
    , \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\"\
    , \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpztm8auip.php:28\n\
    Stack trace:\n#0 /tmp/tmpztm8auip.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpztm8auip.php\
    \ on line 28\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n}\nfunction candidate(...$args)\
    \ {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprauwdfx0.php:22\n\
    Stack trace:\n#0 /tmp/tmprauwdfx0.php(31): test()\n#1 {main}\n  thrown in /tmp/tmprauwdfx0.php\
    \ on line 22\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    // YOUR CODE GOES HERE\n}\n\
    echo same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") ? \"true\\n\" : \"false\\\
    n\";\necho same_chars(\"abcd\", \"dddddddabc\") ? \"true\\n\" : \"false\\n\";\n\
    echo same_chars(\"dddddddabc\", \"abcd\") ? \"true\\n\" : \"false\\n\";\necho\
    \ same_chars(\"eabcd\", \"dddddddabc\") ? \"true\\n\" : \"false\\n\";\necho same_chars(\"\
    abcd\", \"dddddddabce\") ? \"true\\n\" : \"false\\n\";\necho same_chars(\"eabcdzzzz\"\
    , \"dddzzzzzzzddddabc\") ? \"true\\n\" : \"false\\n\";\n\necho \"\\n\\n\";\n\n\
    function candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "false\nfalse\nfalse\nfalse\nfalse\nfalse\n\n\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpa0fr4yj6.php:32\nStack trace:\n#0 /tmp/tmpa0fr4yj6.php(41):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpa0fr4yj6.php on line 32\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    if(strlen($s0) != strlen($s1))\
    \ {\n        return false;\n    }\n    $m = array();\n    for($i = 0; $i < strlen($s0);\
    \ $i++) {\n        $ch = $s0[$i];\n        if(!array_key_exists($ch, $m)) {\n\
    \            $m[$ch] = 0;\n        }\n        $m[$ch]++;\n    }\n    for($i =\
    \ 0; $i < strlen($s1); $i++) {\n        $ch = $s1[$i];\n        if(!array_key_exists($ch,\
    \ $m)) {\n            return false;\n        }\n        $m[$ch]--;\n        if($m[$ch]\
    \ < 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\n\
    var_dump(same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"));\nvar_dump(same_chars(\"\
    abcd\", \"dddddddabc\"));\nvar_dump(same_chars(\"dddddddabc\", \"abcd\"));\nvar_dump(same_chars(\"\
    eabcd\", \"dddddddabc\"));\nvar_dump(same_chars(\"abcd\", \"dddddddabce\"));\n\
    var_dump(same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"));\nfunction candidate(...$args)\
    \ {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "bool(false)\nbool(false)\nbool(false)\nbool(false)\nbool(false)\nbool(false)\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_az_66ao.php:51\nStack\
    \ trace:\n#0 /tmp/tmp_az_66ao.php(60): test()\n#1 {main}\n  thrown in /tmp/tmp_az_66ao.php\
    \ on line 51\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $cnts = [];\n    for ($i = 0;\
    \ $i < strlen($s0); $i++) {\n        $cnts[$s0[$i]] = 0;\n    }\n    for ($i =\
    \ 0; $i < strlen($s1); $i++) {\n        $cnts[$s1[$i]] = 0;\n    }\n    for ($i\
    \ = 0; $i < strlen($s0); $i++) {\n        $cnts[$s0[$i]]++;\n    }\n    for ($i\
    \ = 0; $i < strlen($s1); $i++) {\n        $cnts[$s1[$i]]--;\n    }\n    $is_same\
    \ = true;\n    foreach ($cnts as $k => $v) {\n        if ($v != 0) {\n       \
    \     $is_same = false;\n            break;\n        }\n    }\n    return $is_same;\n\
    }\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp__gsdcuc.php:44\n\
    Stack trace:\n#0 /tmp/tmp__gsdcuc.php(53): test()\n#1 {main}\n  thrown in /tmp/tmp__gsdcuc.php\
    \ on line 44\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n\tif (strlen($s0) != strlen($s1))\
    \ return false;\n\t$chars = [];\n\tfor ($i = 0; $i < strlen($s0); $i++) {\n\t\t\
    $chars[$s0[$i]]++;\n\t\t$chars[$s1[$i]]--;\n\t}\n\tforeach ($chars as $c => $n)\
    \ {\n\t\tif ($n != 0) return false;\n\t}\n\treturn true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaup7mknr.php:33\n\
    Stack trace:\n#0 /tmp/tmpaup7mknr.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpaup7mknr.php\
    \ on line 33\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $a0 = str_split($s0);\n    $a1\
    \ = str_split($s1);\n    sort($a0);\n    sort($a1);\n    $s0 = implode($a0);\n\
    \    $s1 = implode($a1);\n    return $s0 == $s1;\n}\necho same_chars(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") ? \"true\" : \"false\";\necho \"\\n\";\necho same_chars(\"\
    abcd\", \"dddddddabc\") ? \"true\" : \"false\";\necho \"\\n\";\necho same_chars(\"\
    dddddddabc\", \"abcd\") ? \"true\" : \"false\";\necho \"\\n\";\necho same_chars(\"\
    eabcd\", \"dddddddabc\") ? \"true\" : \"false\";\necho \"\\n\";\necho same_chars(\"\
    abcd\", \"dddddddabce\") ? \"true\" : \"false\";\necho \"\\n\";\necho same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") ? \"true\" : \"false\";\necho \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\"\
    , \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\"\
    , \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "false\nfalse\nfalse\nfalse\nfalse\nfalse\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpckdw201y.php:41\nStack trace:\n#0 /tmp/tmpckdw201y.php(50):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpckdw201y.php on line 41\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    return strlen($s0) === strlen($s1)\
    \ && str_split(count_chars($s0, 1)) === str_split(count_chars($s1, 1));\n}\n\n\
    function candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxklkrmg2.php:24\n\
    Stack trace:\n#0 /tmp/tmpxklkrmg2.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpxklkrmg2.php\
    \ on line 24\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    if(strlen($s0) == strlen($s1)){\n\
    \        for($i = 0; $i < strlen($s0); $i++){\n            if(!strpos($s1, $s0[$i])){\n\
    \                return false;\n            }\n        }\n        return true;\n\
    \    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpku_vroye.php:32\n\
    Stack trace:\n#0 /tmp/tmpku_vroye.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpku_vroye.php\
    \ on line 32\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n  $s0 = str_split($s0);\n  $s1 =\
    \ str_split($s1);\n  foreach ($s0 as $char) {\n    $i = array_search($char, $s1);\n\
    \    if ($i === false) return false;\n    unset($s1[$i]);\n  }\n  return true;\n\
    }\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppzpcx1_j.php:33\n\
    Stack trace:\n#0 /tmp/tmppzpcx1_j.php(40): test()\n#1 {main}\n  thrown in /tmp/tmppzpcx1_j.php\
    \ on line 33\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n\t$letters = \"\";\n\t$c = 0;\n\t\
    for ($i = 0; $i < strlen($s0); $i++) {\n\t\t$c = ord($s0[$i]);\n\t\t$letters[$c]\
    \ = $letters[$c] + 1;\n\t}\n\tfor ($i = 0; $i < strlen($s1); $i++) {\n\t\t$c =\
    \ ord($s1[$i]);\n\t\t$letters[$c] = $letters[$c] - 1;\n\t}\n\tfor ($i = 0; $i\
    \ < 256; $i++) {\n\t\tif ($letters[$i] != 0) {\n\t\t\treturn false;\n\t\t}\n\t\
    }\n\treturn true;\n}\necho same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") .\
    \ \"<br>\";\necho same_chars(\"abcd\", \"dddddddabc\") . \"<br>\";\necho same_chars(\"\
    dddddddabc\", \"abcd\") . \"<br>\";\necho same_chars(\"eabcd\", \"dddddddabc\"\
    ) . \"<br>\";\necho same_chars(\"abcd\", \"dddddddabce\") . \"<br>\";\necho same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") . \"<br>\";\necho \"<br>\";\n\nfunction candidate(...$args)\
    \ {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Uninitialized string offset 101 in /tmp/tmpuhxq9nlf.php on line\
    \ 20\n\nFatal error: Uncaught TypeError: Unsupported operand types: string + int\
    \ in /tmp/tmpuhxq9nlf.php:20\nStack trace:\n#0 /tmp/tmpuhxq9nlf.php(33): same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddedd...')\n#1 {main}\n  thrown in /tmp/tmpuhxq9nlf.php on line 20\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n\t// TODO: Implement this function.\n\
    \tif(strlen($s0) == strlen($s1)){\n\t\t$s1 = str_split($s1);\n\t\tsort($s1);\n\
    \t\t$s1 = implode($s1);\n\t\t$s0 = str_split($s0);\n\t\tsort($s0);\n\t\t$s0 =\
    \ implode($s0);\n\t\tif($s0 === $s1){\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptbve2isg.php:36\n\
    Stack trace:\n#0 /tmp/tmptbve2isg.php(45): test()\n#1 {main}\n  thrown in /tmp/tmptbve2isg.php\
    \ on line 36\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n\t$s = array();\n\tfor ($i = 0;\
    \ $i < strlen($s0); $i++) {\n\t\t$s[$s0[$i]]++;\n\t}\n\tfor ($i = 0; $i < strlen($s1);\
    \ $i++) {\n\t\t$s[$s1[$i]]--;\n\t}\n\tforeach ($s as $k => $v) {\n\t\tif ($v !=\
    \ 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\nfunction candidate(...$args)\
    \ {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key \"e\" in /tmp/tmpkr_h6i33.php on line 18\n\
    \nWarning: Undefined array key \"a\" in /tmp/tmpkr_h6i33.php on line 18\n\nWarning:\
    \ Undefined array key \"b\" in /tmp/tmpkr_h6i33.php on line 18\n\nWarning: Undefined\
    \ array key \"c\" in /tmp/tmpkr_h6i33.php on line 18\n\nWarning: Undefined array\
    \ key \"d\" in /tmp/tmpkr_h6i33.php on line 18\n\nWarning: Undefined array key\
    \ \"z\" in /tmp/tmpkr_h6i33.php on line 18\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpkr_h6i33.php:35\nStack trace:\n#0 /tmp/tmpkr_h6i33.php(44):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpkr_h6i33.php on line 35\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n\treturn count_chars($s0, 1) ==\
    \ count_chars($s1, 1);\n}\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfvwn2pbi.php:24\n\
    Stack trace:\n#0 /tmp/tmpfvwn2pbi.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpfvwn2pbi.php\
    \ on line 24\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n  if (strlen($s0) != strlen($s1))\
    \ {\n    return false;\n  }\n\n  $chars = str_split($s0);\n  $count = array_count_values($chars);\n\
    \n  foreach (str_split($s1) as $char) {\n    if (empty($count[$char])) {\n   \
    \   return false;\n    }\n\n    $count[$char]--;\n  }\n\n  return true;\n}\n\n\
    function candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv7zxm6ra.php:39\n\
    Stack trace:\n#0 /tmp/tmpv7zxm6ra.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpv7zxm6ra.php\
    \ on line 39\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n  if (strlen($s0) !== strlen($s1))\
    \ return false;\n  $counts = [];\n  for ($i = 0; $i < strlen($s0); $i++) {\n \
    \   $c = $s0[$i];\n    if (!isset($counts[$c])) $counts[$c] = 0;\n    $counts[$c]++;\n\
    \  }\n  for ($i = 0; $i < strlen($s1); $i++) {\n    $c = $s1[$i];\n    if (!isset($counts[$c]))\
    \ return false;\n    $counts[$c]--;\n    if ($counts[$c] === 0) unset($counts[$c]);\n\
    \  }\n  return count($counts) === 0;\n}\n\nfunction candidate(...$args) {\n  \
    \  return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpipl_maei.php:37\n\
    Stack trace:\n#0 /tmp/tmpipl_maei.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpipl_maei.php\
    \ on line 37\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    if (strlen($s0) != strlen($s1))\
    \ {\n        return false;\n    }\n\n    $len = strlen($s0);\n    for ($i = 0;\
    \ $i < $len; $i++) {\n        $c = $s0[$i];\n        $idx = strpos($s1, $c);\n\
    \        if ($idx === false) {\n            return false;\n        } else {\n\
    \            $s1 = substr_replace($s1, '', $idx, 1);\n        }\n    }\n\n   \
    \ return true;\n}\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8nyn6fub.php:39\n\
    Stack trace:\n#0 /tmp/tmp8nyn6fub.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp8nyn6fub.php\
    \ on line 39\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n  $characters = [];\n  for ($i =\
    \ 0; $i < strlen($s0); $i++) {\n    $characters[$s0[$i]] = $characters[$s0[$i]]\
    \ ?? 0;\n    $characters[$s0[$i]]++;\n  }\n  for ($i = 0; $i < strlen($s1); $i++)\
    \ {\n    $characters[$s1[$i]] = $characters[$s1[$i]] ?? 0;\n    $characters[$s1[$i]]--;\n\
    \  }\n  foreach ($characters as $value) {\n    if ($value != 0) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\nfunction candidate(...$args) {\n    return\
    \ same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpygt64zrl.php:37\n\
    Stack trace:\n#0 /tmp/tmpygt64zrl.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpygt64zrl.php\
    \ on line 37\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $s0_chars = str_split($s0);\n\
    \    $s1_chars = str_split($s1);\n    $s0_counts = [];\n    $s1_counts = [];\n\
    \    for ($i = 0; $i < count($s0_chars); $i++) {\n        if (!isset($s0_counts[$s0_chars[$i]]))\
    \ {\n            $s0_counts[$s0_chars[$i]] = 0;\n        }\n        $s0_counts[$s0_chars[$i]]\
    \ += 1;\n    }\n    for ($i = 0; $i < count($s1_chars); $i++) {\n        if (!isset($s1_counts[$s1_chars[$i]]))\
    \ {\n            $s1_counts[$s1_chars[$i]] = 0;\n        }\n        $s1_counts[$s1_chars[$i]]\
    \ += 1;\n    }\n    for ($i = 0; $i < count($s0_chars); $i++) {\n        if ($s0_counts[$s0_chars[$i]]\
    \ !== $s1_counts[$s0_chars[$i]]) {\n            return false;\n        }\n   \
    \ }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa60c82jx.php:45\n\
    Stack trace:\n#0 /tmp/tmpa60c82jx.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpa60c82jx.php\
    \ on line 45\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n  $c1 = str_split($s0);\n  $c2 =\
    \ str_split($s1);\n  sort($c1);\n  sort($c2);\n  return $c1 == $c2;\n}\n\nassert(same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\"));\nassert(same_chars(\"abcd\", \"dddddddabc\"\
    ));\nassert(same_chars(\"dddddddabc\", \"abcd\"));\nassert(!same_chars(\"eabcd\"\
    , \"dddddddabc\"));\nassert(!same_chars(\"abcd\", \"dddddddabce\"));\nassert(!same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\"));\nfunction candidate(...$args) {\n    return\
    \ same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught AssertionError: assert(same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')) in /tmp/tmp30g2lvwk.php:23\nStack trace:\n#0 /tmp/tmp30g2lvwk.php(23):\
    \ assert(false, 'assert(same_cha...')\n#1 {main}\n  thrown in /tmp/tmp30g2lvwk.php\
    \ on line 23\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $a0 = str_split($s0);\n    $a1\
    \ = str_split($s1);\n    sort($a0);\n    sort($a1);\n    return $a0 == $a1;\n\
    }\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu0c02aj8.php:28\n\
    Stack trace:\n#0 /tmp/tmpu0c02aj8.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpu0c02aj8.php\
    \ on line 28\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $chars = [];\n    $len = strlen($s0);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        $chars[$s0[$i]] = $s0[$i];\n   \
    \ }\n    $len = strlen($s1);\n    for ($i = 0; $i < $len; $i++) {\n        if\
    \ (!isset($chars[$s1[$i]])) {\n            return false;\n        }\n    }\n \
    \   return true;\n}\n\nassert(same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) === true);\nassert(same_chars(\"abcd\", \"dddddddabc\") === true);\nassert(same_chars(\"\
    dddddddabc\", \"abcd\") === true);\nassert(same_chars(\"eabcd\", \"dddddddabc\"\
    ) === false);\nassert(same_chars(\"abcd\", \"dddddddabce\") === false);\nassert(same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") === false);\nfunction candidate(...$args)\
    \ {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught AssertionError: assert(same_chars('eabcd', 'dddddddabc')\
    \ === false) in /tmp/tmpji9mbxrl.php:33\nStack trace:\n#0 /tmp/tmpji9mbxrl.php(33):\
    \ assert(false, 'assert(same_cha...')\n#1 {main}\n  thrown in /tmp/tmpji9mbxrl.php\
    \ on line 33\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $c0 = str_split($s0);\n    $c1\
    \ = str_split($s1);\n    sort($c0);\n    sort($c1);\n    return $c0 == $c1;\n\
    }\nvar_dump(same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"));\nvar_dump(same_chars(\"\
    abcd\", \"dddddddabc\"));\nvar_dump(same_chars(\"dddddddabc\", \"abcd\"));\nvar_dump(same_chars(\"\
    eabcd\", \"dddddddabc\"));\nvar_dump(same_chars(\"abcd\", \"dddddddabce\"));\n\
    var_dump(same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"));\nfunction candidate(...$args)\
    \ {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "bool(false)\nbool(false)\nbool(false)\nbool(false)\nbool(false)\nbool(false)\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyhlz_18z.php:33\nStack\
    \ trace:\n#0 /tmp/tmpyhlz_18z.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpyhlz_18z.php\
    \ on line 33\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n\t$a0 = str_split($s0);\n\t$a1 =\
    \ str_split($s1);\n\tsort($a0);\n\tsort($a1);\n\t$s0 = implode($a0);\n\t$s1 =\
    \ implode($a1);\n\treturn $s0 == $s1;\n}\n\necho same_chars(\"eabcdzzzz\", \"\
    dddzzzzzzzddeddabc\") ? 'true' : 'false';\necho \"\\n\";\necho same_chars(\"abcd\"\
    , \"dddddddabc\") ? 'true' : 'false';\necho \"\\n\";\necho same_chars(\"dddddddabc\"\
    , \"abcd\") ? 'true' : 'false';\necho \"\\n\";\necho same_chars(\"eabcd\", \"\
    dddddddabc\") ? 'true' : 'false';\necho \"\\n\";\necho same_chars(\"abcd\", \"\
    dddddddabce\") ? 'true' : 'false';\necho \"\\n\";\necho same_chars(\"eabcdzzzz\"\
    , \"dddzzzzzzzddddabc\") ? 'true' : 'false';\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "false\nfalse\nfalse\nfalse\nfalse\nfalse\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpfkruja6j.php:42\nStack trace:\n#0 /tmp/tmpfkruja6j.php(51):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpfkruja6j.php on line 42\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $s0_arr = str_split($s0);\n\
    \    $s1_arr = str_split($s1);\n    sort($s0_arr);\n    sort($s1_arr);\n    return\
    \ $s0_arr == $s1_arr;\n}\nfunction candidate(...$args) {\n    return same_chars(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3wnu3kfa.php:27\n\
    Stack trace:\n#0 /tmp/tmp3wnu3kfa.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp3wnu3kfa.php\
    \ on line 27\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n  if (strlen($s0) != strlen($s1))\
    \ {\n    return false;\n  }\n  $a = str_split($s0);\n  sort($a);\n  $b = str_split($s1);\n\
    \  sort($b);\n  for ($i = 0; $i < count($a); $i++) {\n    if ($a[$i] != $b[$i])\
    \ {\n      return false;\n    }\n  }\n  return true;\n}\n\nassert(same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true);\nassert(same_chars(\"abcd\", \"\
    dddddddabc\") == true);\nassert(same_chars(\"dddddddabc\", \"abcd\") == true);\n\
    assert(same_chars(\"eabcd\", \"dddddddabc\") == false);\nassert(same_chars(\"\
    abcd\", \"dddddddabce\") == false);\nassert(same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) == false);\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught AssertionError: assert(same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc') == true) in /tmp/tmpxyt17fmh.php:31\nStack trace:\n#0\
    \ /tmp/tmpxyt17fmh.php(31): assert(false, 'assert(same_cha...')\n#1 {main}\n \
    \ thrown in /tmp/tmpxyt17fmh.php on line 31\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n  $a0 = str_split($s0);\n  $a1 =\
    \ str_split($s1);\n  sort($a0);\n  sort($a1);\n  return $a0 == $a1;\n}\n\nfunction\
    \ candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\"\
    , \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\"\
    , \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp44t3yv9i.php:28\n\
    Stack trace:\n#0 /tmp/tmp44t3yv9i.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp44t3yv9i.php\
    \ on line 28\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n  $h0 = [];\n  $h1 = [];\n  for\
    \ ($i = 0; $i < strlen($s0); $i++) {\n    $h0[$s0[$i]]++;\n  }\n  for ($i = 0;\
    \ $i < strlen($s1); $i++) {\n    $h1[$s1[$i]]++;\n  }\n  return $h0 == $h1;\n\
    }\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key \"e\" in /tmp/tmpq20sb1kk.php on line 19\n\
    \nWarning: Undefined array key \"a\" in /tmp/tmpq20sb1kk.php on line 19\n\nWarning:\
    \ Undefined array key \"b\" in /tmp/tmpq20sb1kk.php on line 19\n\nWarning: Undefined\
    \ array key \"c\" in /tmp/tmpq20sb1kk.php on line 19\n\nWarning: Undefined array\
    \ key \"d\" in /tmp/tmpq20sb1kk.php on line 19\n\nWarning: Undefined array key\
    \ \"z\" in /tmp/tmpq20sb1kk.php on line 19\n\nWarning: Undefined array key \"\
    d\" in /tmp/tmpq20sb1kk.php on line 22\n\nWarning: Undefined array key \"z\" in\
    \ /tmp/tmpq20sb1kk.php on line 22\n\nWarning: Undefined array key \"e\" in /tmp/tmpq20sb1kk.php\
    \ on line 22\n\nWarning: Undefined array key \"a\" in /tmp/tmpq20sb1kk.php on\
    \ line 22\n\nWarning: Undefined array key \"b\" in /tmp/tmpq20sb1kk.php on line\
    \ 22\n\nWarning: Undefined array key \"c\" in /tmp/tmpq20sb1kk.php on line 22\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq20sb1kk.php:32\nStack\
    \ trace:\n#0 /tmp/tmpq20sb1kk.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpq20sb1kk.php\
    \ on line 32\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n  if (strlen($s0) != strlen($s1))\
    \ {\n    return false;\n  }\n  $letters = [];\n  for ($i = 0; $i < strlen($s0);\
    \ $i++) {\n    $char = $s0[$i];\n    if (!array_key_exists($char, $letters)) {\n\
    \      $letters[$char] = 0;\n    }\n    $letters[$char]++;\n  }\n  for ($i = 0;\
    \ $i < strlen($s1); $i++) {\n    $char = $s1[$i];\n    if (!array_key_exists($char,\
    \ $letters)) {\n      return false;\n    }\n    $letters[$char]--;\n    if ($letters[$char]\
    \ < 0) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp01anilv0.php:45\n\
    Stack trace:\n#0 /tmp/tmp01anilv0.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp01anilv0.php\
    \ on line 45\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n  if (strlen($s0) != strlen($s1))\
    \ return false;\n  $count0 = count_chars($s0, 1);\n  $count1 = count_chars($s1,\
    \ 1);\n  ksort($count0);\n  ksort($count1);\n  return $count0 == $count1;\n}\n\
    function candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7yr_o7ch.php:28\n\
    Stack trace:\n#0 /tmp/tmp7yr_o7ch.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp7yr_o7ch.php\
    \ on line 28\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $arr0 = str_split($s0);\n  \
    \  $arr1 = str_split($s1);\n    sort($arr0);\n    sort($arr1);\n    return $arr0\
    \ == $arr1;\n}\n\necho same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") ? \"\
    true\" : \"false\";\necho \"<br>\";\necho same_chars(\"abcd\", \"dddddddabc\"\
    ) ? \"true\" : \"false\";\necho \"<br>\";\necho same_chars(\"dddddddabc\", \"\
    abcd\") ? \"true\" : \"false\";\necho \"<br>\";\necho same_chars(\"eabcd\", \"\
    dddddddabc\") ? \"true\" : \"false\";\necho \"<br>\";\necho same_chars(\"abcd\"\
    , \"dddddddabce\") ? \"true\" : \"false\";\necho \"<br>\";\necho same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") ? \"true\" : \"false\";\necho \"<br>\";\n\n\
    function candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "false<br>false<br>false<br>false<br>false<br>false<br>\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpuryab8kl.php:41\nStack trace:\n#0 /tmp/tmpuryab8kl.php(50):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpuryab8kl.php on line 41\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    if (strlen($s0) != strlen($s1))\
    \ {\n        return false;\n    }\n\n    for ($i = 0; $i < strlen($s0); $i++)\
    \ {\n        $ch = $s0[$i];\n        $pos = strpos($s1, $ch);\n        if ($pos\
    \ === false) {\n            return false;\n        } else {\n            $s1 =\
    \ substr_replace($s1, '', $pos, 1);\n        }\n    }\n\n    return true;\n}\n\
    \nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpil0elfcf.php:38\n\
    Stack trace:\n#0 /tmp/tmpil0elfcf.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpil0elfcf.php\
    \ on line 38\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $array_s0 = str_split($s0);\n\
    \    $array_s1 = str_split($s1);\n    if(count($array_s0) != count($array_s1)){\n\
    \        return false;\n    } else {\n        foreach($array_s0 as $char){\n \
    \           if(!in_array($char, $array_s1)){\n                return false;\n\
    \            }\n        }\n        return true;\n    }\n}\necho same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") ? \"true\" : \"false\";\necho \"<br>\";\n\
    echo same_chars(\"abcd\", \"dddddddabc\") ? \"true\" : \"false\";\necho \"<br>\"\
    ;\necho same_chars(\"dddddddabc\", \"abcd\") ? \"true\" : \"false\";\necho \"\
    <br>\";\necho same_chars(\"eabcd\", \"dddddddabc\") ? \"true\" : \"false\";\n\
    echo \"<br>\";\necho same_chars(\"abcd\", \"dddddddabce\") ? \"true\" : \"false\"\
    ;\necho \"<br>\";\necho same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") ? \"\
    true\" : \"false\";\nfunction candidate(...$args) {\n    return same_chars(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "false<br>false<br>false<br>false<br>false<br>false\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpc8rvt7lq.php:45\nStack trace:\n#0 /tmp/tmpc8rvt7lq.php(54):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpc8rvt7lq.php on line 45\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n\t$l0 = strlen($s0);\n\t$l1 = strlen($s1);\n\
    \tif ($l0 !== $l1) {\n\t\treturn false;\n\t}\n\tfor ($i = 0; $i < $l0; $i++) {\n\
    \t\t$c = $s0[$i];\n\t\t$cnt = 0;\n\t\tfor ($j = 0; $j < $l0; $j++) {\n\t\t\tif\
    \ ($s0[$j] === $c) {\n\t\t\t\t$cnt++;\n\t\t\t}\n\t\t}\n\t\t$cnt2 = 0;\n\t\tfor\
    \ ($j = 0; $j < $l1; $j++) {\n\t\t\tif ($s1[$j] === $c) {\n\t\t\t\t$cnt2++;\n\t\
    \t\t}\n\t\t}\n\t\tif ($cnt !== $cnt2) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn\
    \ true;\n}\nfunction candidate(...$args) {\n    return same_chars(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd9yakpzb.php:46\n\
    Stack trace:\n#0 /tmp/tmpd9yakpzb.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpd9yakpzb.php\
    \ on line 46\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n  $map0 = [];\n  $map1 = [];\n \
    \ for ($i = 0; $i < strlen($s0); $i++) {\n    $map0[$s0[$i]] = 1;\n  }\n  for\
    \ ($i = 0; $i < strlen($s1); $i++) {\n    $map1[$s1[$i]] = 1;\n  }\n  return array_keys($map0)\
    \ == array_keys($map1);\n}\n\n$tests = [\n  ['eabcdzzzz', 'dddzzzzzzzddeddabc',\
    \ true],\n  ['abcd', 'dddddddabc', true],\n  ['dddddddabc', 'abcd', true],\n \
    \ ['eabcd', 'dddddddabc', false],\n  ['abcd', 'dddddddabce', false],\n  ['eabcdzzzz',\
    \ 'dddzzzzzzzddddabc', false],\n];\n\nforeach ($tests as $test) {\n  $ret = same_chars($test[0],\
    \ $test[1]);\n  if ($ret != $test[2]) {\n    echo \"Test failed:\\n$test[0]\\\
    n$test[1]\\n$ret\\n$test[2]\\n\";\n  }\n}\nfunction candidate(...$args) {\n  \
    \  return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Test failed:\neabcdzzzz\ndddzzzzzzzddeddabc\n\n1\nTest failed:\nabcd\n\
    dddddddabc\n\n1\nTest failed:\ndddddddabc\nabcd\n\n1\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp8vjkyrck.php:47\nStack trace:\n#0 /tmp/tmp8vjkyrck.php(56):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp8vjkyrck.php on line 47\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $map = [];\n    for ($i = 0;\
    \ $i < strlen($s0); $i++) {\n        $char = $s0[$i];\n        if (!array_key_exists($char,\
    \ $map)) {\n            $map[$char] = 1;\n        } else {\n            $map[$char]++;\n\
    \        }\n    }\n    for ($i = 0; $i < strlen($s1); $i++) {\n        $char =\
    \ $s1[$i];\n        if (!array_key_exists($char, $map)) {\n            return\
    \ false;\n        } else {\n            $map[$char]--;\n            if ($map[$char]\
    \ < 0) {\n                return false;\n            }\n        }\n    }\n   \
    \ return true;\n}\nfunction candidate(...$args) {\n    return same_chars(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpohx20ky4.php:43\n\
    Stack trace:\n#0 /tmp/tmpohx20ky4.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpohx20ky4.php\
    \ on line 43\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $len = strlen($s0);\n    $len1\
    \ = strlen($s1);\n    $i = 0;\n    $arr = [];\n    if ($len == $len1) {\n    \
    \    $arr = str_split($s0);\n        sort($arr);\n        $arr1 = str_split($s1);\n\
    \        sort($arr1);\n        for ($i = 0; $i < $len; $i++) {\n            if\
    \ ($arr[$i] != $arr1[$i]) {\n                break;\n            }\n        }\n\
    \        if ($i == $len) {\n            return true;\n        }\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd046cnck.php:42\n\
    Stack trace:\n#0 /tmp/tmpd046cnck.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpd046cnck.php\
    \ on line 42\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n  $a0 = str_split($s0);\n  $a1 =\
    \ str_split($s1);\n  sort($a0);\n  sort($a1);\n  return $a0 == $a1;\n}\nfunction\
    \ candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\"\
    , \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\"\
    , \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxe9ymyi5.php:27\n\
    Stack trace:\n#0 /tmp/tmpxe9ymyi5.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpxe9ymyi5.php\
    \ on line 27\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $chars = [];\n    for ($i =\
    \ 0; $i < strlen($s0); $i++) {\n        $chars[$s0[$i]] = 1;\n    }\n    for ($i\
    \ = 0; $i < strlen($s1); $i++) {\n        if (!isset($chars[$s1[$i]])) {\n   \
    \         return false;\n        }\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2hgzlthd.php:35\n\
    Stack trace:\n#0 /tmp/tmp2hgzlthd.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp2hgzlthd.php\
    \ on line 35\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n\t$c0 = str_split($s0);\n\t$c1 =\
    \ str_split($s1);\n\t$c0 = array_count_values($c0);\n\t$c1 = array_count_values($c1);\n\
    \tasort($c0);\n\tasort($c1);\n\treturn $c0 == $c1;\n}\n\necho same_chars(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") . \"\\n\";\necho same_chars(\"abcd\", \"dddddddabc\"\
    ) . \"\\n\";\necho same_chars(\"dddddddabc\", \"abcd\") . \"\\n\";\necho same_chars(\"\
    eabcd\", \"dddddddabc\") . \"\\n\";\necho same_chars(\"abcd\", \"dddddddabce\"\
    ) . \"\\n\";\necho same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") . \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\n\n\n\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp686t8e12.php:36\n\
    Stack trace:\n#0 /tmp/tmp686t8e12.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp686t8e12.php\
    \ on line 36\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $s0_letters = [];\n    $s1_letters\
    \ = [];\n    $s0_len = strlen($s0);\n    $s1_len = strlen($s1);\n    for ($i =\
    \ 0; $i < $s0_len; $i++) {\n        $s0_letters[$s0[$i]]++;\n    }\n    for ($i\
    \ = 0; $i < $s1_len; $i++) {\n        $s1_letters[$s1[$i]]++;\n    }\n    foreach\
    \ ($s0_letters as $k => $v) {\n        if (!array_key_exists($k, $s1_letters)\
    \ || $s1_letters[$k] !== $v) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key \"e\" in /tmp/tmptgv749ad.php on line 21\n\
    \nWarning: Undefined array key \"a\" in /tmp/tmptgv749ad.php on line 21\n\nWarning:\
    \ Undefined array key \"b\" in /tmp/tmptgv749ad.php on line 21\n\nWarning: Undefined\
    \ array key \"c\" in /tmp/tmptgv749ad.php on line 21\n\nWarning: Undefined array\
    \ key \"d\" in /tmp/tmptgv749ad.php on line 21\n\nWarning: Undefined array key\
    \ \"z\" in /tmp/tmptgv749ad.php on line 21\n\nWarning: Undefined array key \"\
    d\" in /tmp/tmptgv749ad.php on line 24\n\nWarning: Undefined array key \"z\" in\
    \ /tmp/tmptgv749ad.php on line 24\n\nWarning: Undefined array key \"e\" in /tmp/tmptgv749ad.php\
    \ on line 24\n\nWarning: Undefined array key \"a\" in /tmp/tmptgv749ad.php on\
    \ line 24\n\nWarning: Undefined array key \"b\" in /tmp/tmptgv749ad.php on line\
    \ 24\n\nWarning: Undefined array key \"c\" in /tmp/tmptgv749ad.php on line 24\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmptgv749ad.php:39\nStack\
    \ trace:\n#0 /tmp/tmptgv749ad.php(48): test()\n#1 {main}\n  thrown in /tmp/tmptgv749ad.php\
    \ on line 39\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $hash_s0 = \"\";\n    $hash_s1\
    \ = \"\";\n    $num_s0 = array();\n    $num_s1 = array();\n    for ($i = 0; $i\
    \ < strlen($s0); $i++) {\n        $char = $s0[$i];\n        if (!isset($num_s0[$char]))\
    \ {\n            $num_s0[$char] = 0;\n        }\n        $num_s0[$char] += 1;\n\
    \    }\n    for ($i = 0; $i < strlen($s1); $i++) {\n        $char = $s1[$i];\n\
    \        if (!isset($num_s1[$char])) {\n            $num_s1[$char] = 0;\n    \
    \    }\n        $num_s1[$char] += 1;\n    }\n    if (strlen($s0) != strlen($s1))\
    \ {\n        return false;\n    }\n    foreach ($num_s0 as $key => $value) {\n\
    \        if (!isset($num_s1[$key])) {\n            return false;\n        }\n\
    \        if ($num_s0[$key] != $num_s1[$key]) {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n\n$s0 = \"eabcdzzzz\";\n$s1 = \"dddzzzzzzzddeddabc\"\
    ;\nvar_dump(same_chars($s0, $s1));\n\n$s0 = \"abcd\";\n$s1 = \"dddddddabc\";\n\
    var_dump(same_chars($s0, $s1));\n\n$s0 = \"dddddddabc\";\n$s1 = \"abcd\";\nvar_dump(same_chars($s0,\
    \ $s1));\n\n$s0 = \"eabcd\";\n$s1 = \"dddddddabc\";\nvar_dump(same_chars($s0,\
    \ $s1));\n\n$s0 = \"abcd\";\n$s1 = \"dddddddabce\";\nvar_dump(same_ch\nfunction\
    \ candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\"\
    , \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\"\
    , \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmp3ez75kfg.php
    on line 67

    '
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n  // Write your code here\n  //\
    \ To print results to the standard output you can use print\n  // Example: print\
    \ \"Hello world!\";\n  $s0 = preg_replace('/\\s+/', '', $s0);\n  $s1 = preg_replace('/\\\
    s+/', '', $s1);\n  print $s0.PHP_EOL;\n  print $s1.PHP_EOL;\n  $s0 = str_split($s0);\n\
    \  $s1 = str_split($s1);\n  $is_same = true;\n  $l0 = sizeof($s0);\n  $l1 = sizeof($s1);\n\
    \  $j = 0;\n  for ($i = 0; $i < $l0; $i++) {\n    if ($s0[$i] == $s1[$j]) {\n\
    \      $j++;\n    } else {\n      $j = 0;\n      $is_same = false;\n    }\n  }\n\
    \  if ($j != $l1) {\n    $is_same = false;\n  }\n  return $is_same;\n}\n\n$s0\
    \ = \"eabcdzzzz\";\n$s1 = \"dddzzzzzzzddeddabc\";\nprint same_chars($s0, $s1).PHP_EOL;\n\
    \n$s0 = \"abcd\";\n$s1 = \"dddddddabc\";\nprint same_chars($s0, $s1).PHP_EOL;\n\
    \n$s0 = \"dddddddabc\";\n$s1 = \"abcd\";\nprint same_chars($s0, $s1).PHP_EOL;\n\
    \n$s0 = \"eabcd\";\n$s1 = \"dddddddabc\";\nprint same_chars($s0, $s1).PHP_EOL;\n\
    \n$s0 = \"abcd\";\n$s1 = \"dddddddabce\";\nprint same_chars($s0, $s1).PHP_EOL;\n\
    \n$s0 = \"eabcdzzzz\";\n$s1 = \"dddzz\nfunction candidate(...$args) {\n    return\
    \ same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "eabcdzzzz" in /tmp/tmps0vdjjyf.php
    on line 70

    '
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    if (count_chars($s0, 1) == count_chars($s1,\
    \ 1))\n        return true;\n    else\n        return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4mngs2y0.php:27\n\
    Stack trace:\n#0 /tmp/tmp4mngs2y0.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp4mngs2y0.php\
    \ on line 27\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    if (strlen($s0) == strlen($s1))\
    \ {\n        $n0 = str_split($s0);\n        $n1 = str_split($s1);\n        sort($n0);\n\
    \        sort($n1);\n        if ($n0 == $n1) {\n            return true;\n   \
    \     }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return\
    \ same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqt_4leky.php:33\n\
    Stack trace:\n#0 /tmp/tmpqt_4leky.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpqt_4leky.php\
    \ on line 33\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n  $c0 = str_split($s0);\n  $c1 =\
    \ str_split($s1);\n  sort($c0);\n  sort($c1);\n  $s0 = join('', $c0);\n  $s1 =\
    \ join('', $c1);\n  return $s0 == $s1;\n}\n\nprint same_chars(\"eabcdzzzz\", \"\
    dddzzzzzzzddeddabc\") ? \"true\\n\" : \"false\\n\";\nprint same_chars(\"abcd\"\
    , \"dddddddabc\") ? \"true\\n\" : \"false\\n\";\nprint same_chars(\"dddddddabc\"\
    , \"abcd\") ? \"true\\n\" : \"false\\n\";\nprint same_chars(\"eabcd\", \"dddddddabc\"\
    ) ? \"true\\n\" : \"false\\n\";\nprint same_chars(\"abcd\", \"dddddddabce\") ?\
    \ \"true\\n\" : \"false\\n\";\nprint same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) ? \"true\\n\" : \"false\\n\";\nfunction candidate(...$args) {\n    return same_chars(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "false\nfalse\nfalse\nfalse\nfalse\nfalse\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpz1zclajw.php:36\nStack trace:\n#0 /tmp/tmpz1zclajw.php(45):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpz1zclajw.php on line 36\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n\t$s1_cnt = count_chars($s1, 1);\n\
    \t$s0_cnt = count_chars($s0, 1);\n\tforeach ($s0_cnt as $k => $v) {\n\t\tif ($s1_cnt[$k]\
    \ != $v)\n\t\t\treturn false;\n\t}\n\treturn true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxs0kjdku.php:30\n\
    Stack trace:\n#0 /tmp/tmpxs0kjdku.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpxs0kjdku.php\
    \ on line 30\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    if (strlen($s0) == strlen($s1))\
    \ {\n        return sort_str($s0) == sort_str($s1);\n    }\n    return false;\n\
    }\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj49ilhal.php:27\n\
    Stack trace:\n#0 /tmp/tmpj49ilhal.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpj49ilhal.php\
    \ on line 27\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $a0 = str_split($s0);\n    $a1\
    \ = str_split($s1);\n    sort($a0);\n    sort($a1);\n    return $a0 == $a1;\n\
    }\nvar_dump(same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"));\nvar_dump(same_chars(\"\
    abcd\", \"dddddddabc\"));\nvar_dump(same_chars(\"dddddddabc\", \"abcd\"));\nvar_dump(same_chars(\"\
    eabcd\", \"dddddddabc\"));\nvar_dump(same_chars(\"abcd\", \"dddddddabce\"));\n\
    var_dump(same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"));\nfunction candidate(...$args)\
    \ {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "bool(false)\nbool(false)\nbool(false)\nbool(false)\nbool(false)\nbool(false)\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_0o4az8j.php:33\nStack\
    \ trace:\n#0 /tmp/tmp_0o4az8j.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp_0o4az8j.php\
    \ on line 33\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    if (strlen($s0) !== strlen($s1))\
    \ {\n        return false;\n    }\n    $s1_arr = str_split($s1);\n    foreach\
    \ (str_split($s0) as $s0_char) {\n        $key = array_search($s0_char, $s1_arr);\n\
    \        if ($key === false) {\n            return false;\n        }\n       \
    \ unset($s1_arr[$key]);\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp829_k2uh.php:35\n\
    Stack trace:\n#0 /tmp/tmp829_k2uh.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp829_k2uh.php\
    \ on line 35\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n  return sort(str_split($s0)) ==\
    \ sort(str_split($s1));\n}\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nNotice: Only variables should be passed by reference in /tmp/tmpxdjgnu7s.php\
    \ on line 16\n\nNotice: Only variables should be passed by reference in /tmp/tmpxdjgnu7s.php\
    \ on line 16\n\nNotice: Only variables should be passed by reference in /tmp/tmpxdjgnu7s.php\
    \ on line 16\n\nNotice: Only variables should be passed by reference in /tmp/tmpxdjgnu7s.php\
    \ on line 16\n\nNotice: Only variables should be passed by reference in /tmp/tmpxdjgnu7s.php\
    \ on line 16\n\nNotice: Only variables should be passed by reference in /tmp/tmpxdjgnu7s.php\
    \ on line 16\n\nNotice: Only variables should be passed by reference in /tmp/tmpxdjgnu7s.php\
    \ on line 16\n\nNotice: Only variables should be passed by reference in /tmp/tmpxdjgnu7s.php\
    \ on line 16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxdjgnu7s.php:27\n\
    Stack trace:\n#0 /tmp/tmpxdjgnu7s.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpxdjgnu7s.php\
    \ on line 27\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n}\nfunction candidate(...$args)\
    \ {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprauwdfx0.php:22\n\
    Stack trace:\n#0 /tmp/tmprauwdfx0.php(31): test()\n#1 {main}\n  thrown in /tmp/tmprauwdfx0.php\
    \ on line 22\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n  $l0 = strlen($s0);\n  $l1 = strlen($s1);\n\
    \  if ($l0 !== $l1) {\n    return false;\n  }\n  for ($i = 0; $i < $l0; $i++)\
    \ {\n    $c = $s0[$i];\n    $pos = strpos($s1, $c);\n    if ($pos === false) {\n\
    \      return false;\n    }\n    $s1 = substr_replace($s1, '', $pos, 1);\n  }\n\
    \  return true;\n}\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1sxb_85c.php:37\n\
    Stack trace:\n#0 /tmp/tmp1sxb_85c.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp1sxb_85c.php\
    \ on line 37\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    if (strlen($s0) != strlen($s1))\
    \ {\n        return false;\n    }\n    $c0 = count_chars($s0, 1);\n    $c1 = count_chars($s1,\
    \ 1);\n    return $c0 == $c1;\n}\n\nfunction candidate(...$args) {\n    return\
    \ same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaer7lcwg.php:29\n\
    Stack trace:\n#0 /tmp/tmpaer7lcwg.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpaer7lcwg.php\
    \ on line 29\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $s0array = str_split($s0);\n\
    \    $s1array = str_split($s1);\n    sort($s0array);\n    sort($s1array);\n  \
    \  return $s0array == $s1array;\n}\nfunction candidate(...$args) {\n    return\
    \ same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzsasoodo.php:27\n\
    Stack trace:\n#0 /tmp/tmpzsasoodo.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpzsasoodo.php\
    \ on line 27\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n}\n\nfunction candidate(...$args)\
    \ {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7lsfy73e.php:23\n\
    Stack trace:\n#0 /tmp/tmp7lsfy73e.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp7lsfy73e.php\
    \ on line 23\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n\t$a = array_count_values(str_split($s0));\n\
    \t$b = array_count_values(str_split($s1));\n\tif (count($a) != count($b)) {\n\t\
    \treturn false;\n\t}\n\tforeach ($a as $k => $v) {\n\t\tif (!isset($b[$k]) ||\
    \ $b[$k] != $v) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n$tests\
    \ = [\n\t[\"abcd\", \"abcd\"],\n\t[\"abcd\", \"abcd123\"],\n\t[\"eabcd\", \"dddddddabc\"\
    ],\n\t[\"abcd\", \"dddddddabc\"],\n\t[\"dddddddabc\", \"abcd\"],\n\t[\"abcd\"\
    , \"dddddddabce\"],\n\t[\"eabcdzzzz\", \"dddzzzzzzzddddabc\"],\n];\nforeach ($tests\
    \ as $test) {\n\t$result = same_chars($test[0], $test[1]);\n\t$msg = $result ?\
    \ \"PASS\" : \"FAIL\";\n\techo \"$msg: {$test[0]} | {$test[1]} = $result\\n\"\
    ;\n}\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "PASS: abcd | abcd = 1\nFAIL: abcd | abcd123 = \nFAIL: eabcd | dddddddabc\
    \ = \nFAIL: abcd | dddddddabc = \nFAIL: dddddddabc | abcd = \nFAIL: abcd | dddddddabce\
    \ = \nFAIL: eabcdzzzz | dddzzzzzzzddddabc = \n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmply_b1qp8.php:48\nStack trace:\n#0 /tmp/tmply_b1qp8.php(57):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmply_b1qp8.php on line 48\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $chars0 = str_split($s0);\n\
    \    $chars1 = str_split($s1);\n    sort($chars0);\n    sort($chars1);\n    $s0\
    \ = implode($chars0);\n    $s1 = implode($chars1);\n    return $s0 == $s1;\n}\n\
    \n$tests = [\n    ['eabcdzzzz', 'dddzzzzzzzddeddabc', true],\n    ['abcd', 'dddddddabc',\
    \ true],\n    ['dddddddabc', 'abcd', true],\n    ['eabcd', 'dddddddabc', false],\n\
    \    ['abcd', 'dddddddabce', false],\n    ['eabcdzzzz', 'dddzzzzzzzddddabc', false],\n\
    ];\n\nforeach ($tests as $test) {\n    $s0 = $test[0];\n    $s1 = $test[1];\n\
    \    $expected = $test[2];\n    $result = same_chars($s0, $s1);\n    echo $result\
    \ == $expected ? \"passed: $s0 $s1\\n\" : \"*** failed: $s0 $s1\\n\";\n}\nfunction\
    \ candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\"\
    , \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\"\
    , \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "*** failed: eabcdzzzz dddzzzzzzzddeddabc\n*** failed: abcd dddddddabc\n\
    *** failed: dddddddabc abcd\npassed: eabcd dddddddabc\npassed: abcd dddddddabce\n\
    passed: eabcdzzzz dddzzzzzzzddddabc\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmplgt5ihtx.php:46\nStack trace:\n#0 /tmp/tmplgt5ihtx.php(55): test()\n\
    #1 {main}\n  thrown in /tmp/tmplgt5ihtx.php on line 46\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    // START\n}\n\nfunction candidate(...$args)\
    \ {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpun4itsii.php:24\n\
    Stack trace:\n#0 /tmp/tmpun4itsii.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpun4itsii.php\
    \ on line 24\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $l0 = strlen($s0);\n    $l1\
    \ = strlen($s1);\n    $l = min($l0, $l1);\n    $ss0 = substr($s0, 0, $l);\n  \
    \  $ss1 = substr($s1, 0, $l);\n    $s0_array = str_split($ss0);\n    $s1_array\
    \ = str_split($ss1);\n    sort($s0_array);\n    sort($s1_array);\n    $s0_sorted\
    \ = implode($s0_array);\n    $s1_sorted = implode($s1_array);\n    return ($s0_sorted\
    \ == $s1_sorted);\n}\n\n$arr1 = array(\n    array(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ),\n    array(\"abcd\", \"dddddddabc\"),\n    array(\"dddddddabc\", \"abcd\"),\n\
    \    array(\"eabcd\", \"dddddddabc\"),\n    array(\"abcd\", \"dddddddabce\"),\n\
    \    array(\"eabcdzzzz\", \"dddzzzzzzzddddabc\")\n);\n\nforeach ($arr1 as $key\
    \ => $value) {\n    var_dump(same_chars($value[0], $value[1]));\n}\n\necho \"\
    <br>\";\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "bool(false)\nbool(false)\nbool(false)\nbool(false)\nbool(false)\nbool(false)\n\
    <br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzmoz0x0d.php:50\n\
    Stack trace:\n#0 /tmp/tmpzmoz0x0d.php(59): test()\n#1 {main}\n  thrown in /tmp/tmpzmoz0x0d.php\
    \ on line 50\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n  // Compute unique characters in\
    \ strings.\n  $map0 = char_map($s0);\n  $map1 = char_map($s1);\n  // Compute union\
    \ of characters.\n  $union = array_unique(array_merge(array_keys($map0), array_keys($map1)));\n\
    \  // Check if both strings have the same number of characters.\n  foreach ($union\
    \ as $c) {\n    if (!isset($map0[$c]) || !isset($map1[$c])) return false;\n  \
    \  if ($map0[$c] != $map1[$c]) return false;\n  }\n  return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\"\
    , \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\"\
    , \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function char_map() in\
    \ /tmp/tmp7knf3fvr.php:17\nStack trace:\n#0 /tmp/tmp7knf3fvr.php(30): same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddedd...')\n#1 /tmp/tmp7knf3fvr.php(34): candidate('eabcdzzzz', 'dddzzzzzzzddedd...')\n\
    #2 /tmp/tmp7knf3fvr.php(43): test()\n#3 {main}\n  thrown in /tmp/tmp7knf3fvr.php\
    \ on line 17\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n  $c0 = [];\n  $c1 = [];\n  for\
    \ ($i = 0; $i < strlen($s0); $i++) {\n    if (!array_key_exists($s0[$i], $c0))\
    \ {\n      $c0[$s0[$i]] = 1;\n    } else {\n      $c0[$s0[$i]] += 1;\n    }\n\
    \  }\n  for ($i = 0; $i < strlen($s1); $i++) {\n    if (!array_key_exists($s1[$i],\
    \ $c1)) {\n      $c1[$s1[$i]] = 1;\n    } else {\n      $c1[$s1[$i]] += 1;\n \
    \   }\n  }\n  if (count($c0) != count($c1)) {\n    return false;\n  }\n  foreach\
    \ ($c0 as $k => $v) {\n    if (!array_key_exists($k, $c1) || $c1[$k] != $v) {\n\
    \      return false;\n    }\n  }\n  return true;\n}\nfunction candidate(...$args)\
    \ {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvqy6qjt4.php:47\n\
    Stack trace:\n#0 /tmp/tmpvqy6qjt4.php(56): test()\n#1 {main}\n  thrown in /tmp/tmpvqy6qjt4.php\
    \ on line 47\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $a0 = str_split($s0);\n    $a1\
    \ = str_split($s1);\n    $c0 = array_count_values($a0);\n    $c1 = array_count_values($a1);\n\
    \    $c0 = array_diff_assoc($c0, $c1);\n    return empty($c0);\n}\n\nfunction\
    \ candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\"\
    , \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\"\
    , \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3vvfcglb.php:29\n\
    Stack trace:\n#0 /tmp/tmp3vvfcglb.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp3vvfcglb.php\
    \ on line 29\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $cnt = array_fill(0, 26, 0);\n\
    \    $base = ord('a');\n    for ($i = 0; $i < strlen($s0); $i++) {\n        $cnt[ord($s0[$i])\
    \ - $base]++;\n    }\n    for ($i = 0; $i < strlen($s1); $i++) {\n        $cnt[ord($s1[$i])\
    \ - $base]--;\n    }\n    for ($i = 0; $i < 26; $i++) {\n        if ($cnt[$i]\
    \ != 0) return false;\n    }\n    return true;\n}\n\nclass SameCharsTest extends\
    \ PHPUnit_Framework_TestCase {\n    public function testSameChars() {\n      \
    \  $this->assertTrue(same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"));\n   \
    \     $this->assertTrue(same_chars(\"abcd\", \"dddddddabc\"));\n        $this->assertTrue(same_chars(\"\
    dddddddabc\", \"abcd\"));\n        $this->assertFalse(same_chars(\"eabcd\", \"\
    dddddddabc\"));\n        $this->assertFalse(same_chars(\"abcd\", \"dddddddabce\"\
    ));\n        $this->assertFalse(same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ));\n    }\n}\nfunction candidate(...$args) {\n    return same_chars(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Class \"PHPUnit_Framework_TestCase\" not\
    \ found in /tmp/tmpbweihu9v.php:30\nStack trace:\n#0 {main}\n  thrown in /tmp/tmpbweihu9v.php\
    \ on line 30\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $c0 = [];\n    $c1 = [];\n \
    \   for ($i = 0; $i < strlen($s0); $i++) {\n        if (!array_key_exists($s0[$i],\
    \ $c0)) {\n            $c0[$s0[$i]] = 1;\n        } else {\n            $c0[$s0[$i]]++;\n\
    \        }\n    }\n    for ($i = 0; $i < strlen($s1); $i++) {\n        if (!array_key_exists($s1[$i],\
    \ $c1)) {\n            $c1[$s1[$i]] = 1;\n        } else {\n            $c1[$s1[$i]]++;\n\
    \        }\n    }\n    if (count($c0) != count($c1)) {\n        return false;\n\
    \    }\n    foreach ($c0 as $char => $count) {\n        if (!array_key_exists($char,\
    \ $c1) || $c1[$char] != $count) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\n\necho same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) . \"\\n\";\necho same_chars(\"abcd\", \"dddddddabc\") . \"\\n\";\necho same_chars(\"\
    dddddddabc\", \"abcd\") . \"\\n\";\necho same_chars(\"eabcd\", \"dddddddabc\"\
    ) . \"\\n\";\necho same_chars(\"abcd\", \"dddddddabce\") . \"\\n\";\necho same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") . \"\\n\";\nfunction candidate(...$args) {\n\
    \    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\n\n\n\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo93uq0xn.php:54\n\
    Stack trace:\n#0 /tmp/tmpo93uq0xn.php(63): test()\n#1 {main}\n  thrown in /tmp/tmpo93uq0xn.php\
    \ on line 54\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    // Your code here\n}\nfunction\
    \ candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\"\
    , \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\"\
    , \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsnnhr8w_.php:23\n\
    Stack trace:\n#0 /tmp/tmpsnnhr8w_.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpsnnhr8w_.php\
    \ on line 23\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n\t$s0 = str_split($s0);\n\t$s1 =\
    \ str_split($s1);\n\t\n\tsort($s0);\n\tsort($s1);\n\t\n\treturn $s0 == $s1;\n\
    }\n\necho same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") ? \"true\\n\" : \"\
    false\\n\";\necho same_chars(\"abcd\", \"dddddddabc\") ? \"true\\n\" : \"false\\\
    n\";\necho same_chars(\"dddddddabc\", \"abcd\") ? \"true\\n\" : \"false\\n\";\n\
    echo same_chars(\"eabcd\", \"dddddddabc\") ? \"true\\n\" : \"false\\n\";\necho\
    \ same_chars(\"abcd\", \"dddddddabce\") ? \"true\\n\" : \"false\\n\";\necho same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") ? \"true\\n\" : \"false\\n\";\n\nfunction\
    \ candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\"\
    , \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\"\
    , \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "false\nfalse\nfalse\nfalse\nfalse\nfalse\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmparae92t6.php:37\nStack trace:\n#0 /tmp/tmparae92t6.php(46):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmparae92t6.php on line 37\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    if (strlen($s0) != strlen($s1))\
    \ {\n        return false;\n    }\n    $s0_array = str_split($s0);\n    $s1_array\
    \ = str_split($s1);\n    sort($s0_array);\n    sort($s1_array);\n    for ($i =\
    \ 0; $i < strlen($s0); $i++) {\n        if ($s0_array[$i] != $s1_array[$i]) {\n\
    \            return false;\n        }\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\"\
    , \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\"\
    , \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp21u8m_7r.php:36\n\
    Stack trace:\n#0 /tmp/tmp21u8m_7r.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp21u8m_7r.php\
    \ on line 36\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $a0 = str_split($s0);\n    $a1\
    \ = str_split($s1);\n    sort($a0);\n    sort($a1);\n    return implode(\"\",\
    \ $a0) == implode(\"\", $a1);\n}\n\nfunction candidate(...$args) {\n    return\
    \ same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc0rr5lt8.php:28\n\
    Stack trace:\n#0 /tmp/tmpc0rr5lt8.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpc0rr5lt8.php\
    \ on line 28\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $len0 = strlen($s0);\n    $len1\
    \ = strlen($s1);\n    if ($len0 !== $len1) {\n        return false;\n    }\n\n\
    \    // count chars in $s0\n    $counter = [];\n    for ($i = 0; $i < $len0; $i++)\
    \ {\n        $c = $s0[$i];\n        if (isset($counter[$c])) {\n            $counter[$c]++;\n\
    \        } else {\n            $counter[$c] = 1;\n        }\n    }\n\n    // count\
    \ chars in $s1\n    for ($i = 0; $i < $len1; $i++) {\n        $c = $s1[$i];\n\
    \        if (isset($counter[$c])) {\n            $counter[$c]--;\n        } else\
    \ {\n            return false;\n        }\n    }\n\n    // check the counter\n\
    \    foreach ($counter as $c => $count) {\n        if ($count !== 0) {\n     \
    \       return false;\n        }\n    }\n\n    return true;\n}\n\necho same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") ? \"true\\n\" : \"false\\n\";\necho same_chars(\"\
    abcd\", \"dddddddabc\") ? \"true\\n\" : \"false\\n\";\necho same_chars(\"dddddddabc\"\
    , \"abcd\") ? \"true\\n\" : \"false\\n\";\necho same_chars(\"eabcd\", \"dddddddabc\"\
    ) ? \"true\\n\" : \"false\\n\";\necho same_chars(\"abcd\", \"dddddddabce\") ?\
    \ \"true\\n\" : \"false\\n\";\necho same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ) ? \"true\\n\" : \"false\\n\";\nfunction candidate(...$args) {\n    return same_chars(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "false\nfalse\nfalse\nfalse\nfalse\nfalse\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpfmofg0qz.php:64\nStack trace:\n#0 /tmp/tmpfmofg0qz.php(73):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpfmofg0qz.php on line 64\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n  $s0_counts = get_counts($s0);\n\
    \  $s1_counts = get_counts($s1);\n  if (count($s0_counts) != count($s1_counts))\
    \ {\n    return false;\n  }\n\n  foreach ($s0_counts as $char => $count) {\n \
    \   if (!(array_key_exists($char, $s1_counts) && $s1_counts[$char] == $count))\
    \ {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function get_counts()\
    \ in /tmp/tmp2995chsl.php:16\nStack trace:\n#0 /tmp/tmp2995chsl.php(32): same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddedd...')\n#1 /tmp/tmp2995chsl.php(36): candidate('eabcdzzzz', 'dddzzzzzzzddedd...')\n\
    #2 /tmp/tmp2995chsl.php(45): test()\n#3 {main}\n  thrown in /tmp/tmp2995chsl.php\
    \ on line 16\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    return count_chars($s0, 1) ==\
    \ count_chars($s1, 1);\n}\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6_93pgu_.php:24\n\
    Stack trace:\n#0 /tmp/tmp6_93pgu_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp6_93pgu_.php\
    \ on line 24\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $array0 = array_count_values(str_split($s0));\n\
    \    $array1 = array_count_values(str_split($s1));\n    return  ($array0 == $array1);\n\
    }\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9fvf9so2.php:26\n\
    Stack trace:\n#0 /tmp/tmp9fvf9so2.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp9fvf9so2.php\
    \ on line 26\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    // Write your code here\n  \
    \  // To print results to the standard output you can use print\n    // Example:\
    \ print \"Hello world!\";\n}\nfunction candidate(...$args) {\n    return same_chars(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph592_p2v.php:25\n\
    Stack trace:\n#0 /tmp/tmph592_p2v.php(34): test()\n#1 {main}\n  thrown in /tmp/tmph592_p2v.php\
    \ on line 25\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $a0 = str_split($s0);\n    $a1\
    \ = str_split($s1);\n    sort($a0);\n    sort($a1);\n    return $a0 == $a1;\n\
    }\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu0c02aj8.php:28\n\
    Stack trace:\n#0 /tmp/tmpu0c02aj8.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpu0c02aj8.php\
    \ on line 28\n"
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $count0 = count_chars($s0, 3);\n\
    \    $count1 = count_chars($s1, 3);\n    if (strlen($count0) != strlen($count1))\
    \ {\n        return false;\n    } else {\n        return $count0 == $count1;\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n}\n\nfunction candidate(...$args)\
    \ {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7lsfy73e.php:23\n\
    Stack trace:\n#0 /tmp/tmp7lsfy73e.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp7lsfy73e.php\
    \ on line 23\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $counts0 = count_chars($s0);\n\
    \    $counts1 = count_chars($s1);\n    return $counts0 == $counts1;\n}\n\nfunction\
    \ candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\"\
    , \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\"\
    , \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjuzmmxum.php:26\n\
    Stack trace:\n#0 /tmp/tmpjuzmmxum.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpjuzmmxum.php\
    \ on line 26\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n\t$a0 = str_split($s0);\n\t$a1 =\
    \ str_split($s1);\n\t$sc = true;\n\tfor ($i = 0; $i < count($a0); $i++) {\n\t\t\
    if (isset($a1[$i])) {\n\t\t\tif ($a0[$i] != $a1[$i]) {\n\t\t\t\t$sc = false;\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t} else {\n\t\t\t$sc = false;\n\t\t\tbreak;\n\t\t\
    }\n\t}\n\tif (count($a0) != count($a1)) {\n\t\t$sc = false;\n\t}\n\treturn $sc;\n\
    }\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2z23ergf.php:41\n\
    Stack trace:\n#0 /tmp/tmp2z23ergf.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp2z23ergf.php\
    \ on line 41\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $s0_chars = str_split($s0);\n\
    \    $s1_chars = str_split($s1);\n    $s0_chars_count = array_count_values($s0_chars);\n\
    \    $s1_chars_count = array_count_values($s1_chars);\n    foreach ($s0_chars_count\
    \ as $char => $count) {\n        if (!isset($s1_chars_count[$char]) || $s1_chars_count[$char]\
    \ !== $count) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4cvp2lge.php:33\n\
    Stack trace:\n#0 /tmp/tmp4cvp2lge.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp4cvp2lge.php\
    \ on line 33\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $char_array = array();\n   \
    \ $len = strlen($s0);\n    for ($i = 0; $i < $len; $i++) {\n        $char_array[$s0[$i]]\
    \ = 1;\n    }\n    $len = strlen($s1);\n    for ($i = 0; $i < $len; $i++) {\n\
    \        if (array_key_exists($s1[$i], $char_array)) {\n            unset($char_array[$s1[$i]]);\n\
    \        }\n    }\n    if (count($char_array) === 0) {\n        return true;\n\
    \    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpezhvz3vu.php:42\n\
    Stack trace:\n#0 /tmp/tmpezhvz3vu.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpezhvz3vu.php\
    \ on line 42\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $test_array0 = str_split($s0);\n\
    \    $test_array1 = str_split($s1);\n    foreach ($test_array0 as $char) {\n \
    \       if (in_array($char, $test_array1)) {\n            unset($test_array1[array_search($char,\
    \ $test_array1)]);\n        } else {\n            return false;\n        }\n \
    \   }\n    if (count($test_array1) == 0) {\n        return true;\n    } else {\n\
    \        return false;\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkyahkgvn.php:37\n\
    Stack trace:\n#0 /tmp/tmpkyahkgvn.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpkyahkgvn.php\
    \ on line 37\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $s0Array = str_split($s0);\n\
    \    $s1Array = str_split($s1);\n    $s0Count = array_count_values($s0Array);\n\
    \    $s1Count = array_count_values($s1Array);\n    if ($s0Count == $s1Count) {\n\
    \        return true;\n    } else {\n        return false;\n    }\n}\nfunction\
    \ candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\"\
    , \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\"\
    , \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqv56353e.php:31\n\
    Stack trace:\n#0 /tmp/tmpqv56353e.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpqv56353e.php\
    \ on line 31\n"
  timestamp: 1660029070
- exit_code: 0
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $c0 = count_chars($s0, 3);\n\
    \    $c1 = count_chars($s1, 3);\n    if (strlen($c0) != strlen($c1)) {\n     \
    \   return false;\n    }\n\n    $i = 0;\n    while ($i < strlen($c0)) {\n    \
    \    if ($c0[$i] != $c1[$i]) {\n            return false;\n        }\n       \
    \ $i++;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $count = array_fill(0, 256,\
    \ 0);\n    $sum = 0;\n    for ($i = 0; $i < strlen($s0); $i++) {\n        $count[ord($s0[$i])]++;\n\
    \        $sum++;\n    }\n    for ($i = 0; $i < strlen($s1); $i++) {\n        $count[ord($s1[$i])]--;\n\
    \        $sum--;\n    }\n    for ($i = 0; $i < 256; $i++) {\n        if ($count[$i]\
    \ != 0) {\n            return false;\n        }\n    }\n    return $sum == 0;\n\
    }\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbjw_qeu3.php:39\n\
    Stack trace:\n#0 /tmp/tmpbjw_qeu3.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpbjw_qeu3.php\
    \ on line 39\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $map = [];\n    $result = true;\n\
    \    if (strlen($s0) === strlen($s1)) {\n        for ($i = 0; $i < strlen($s0);\
    \ $i++) {\n            if (!isset($map[$s0[$i]])) {\n                $map[$s0[$i]]\
    \ = 0;\n            }\n            $map[$s0[$i]]++;\n        }\n        for ($i\
    \ = 0; $i < strlen($s1); $i++) {\n            if (!isset($map[$s1[$i]])) {\n \
    \               $result = false;\n                break;\n            }\n    \
    \        $map[$s1[$i]]--;\n            if ($map[$s1[$i]] < 0) {\n            \
    \    $result = false;\n                break;\n            }\n        }\n    }\
    \ else {\n        $result = false;\n    }\n    return $result;\n}\n\nvar_dump(same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\"));\nvar_dump(same_chars(\"abcd\", \"dddddddabc\"\
    ));\nvar_dump(same_chars(\"dddddddabc\", \"abcd\"));\nvar_dump(same_chars(\"eabcd\"\
    , \"dddddddabc\"));\nvar_dump(same_chars(\"abcd\", \"dddddddabce\"));\nvar_dump(same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\"));\nfunction candidate(...$args) {\n    return\
    \ same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "bool(false)\nbool(false)\nbool(false)\nbool(false)\nbool(false)\nbool(false)\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8zvpt1_i.php:53\nStack\
    \ trace:\n#0 /tmp/tmp8zvpt1_i.php(62): test()\n#1 {main}\n  thrown in /tmp/tmp8zvpt1_i.php\
    \ on line 53\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $arr0 = str_split($s0);\n  \
    \  $arr1 = str_split($s1);\n    sort($arr0);\n    sort($arr1);\n    return $arr0\
    \ == $arr1;\n}\n\nassert(same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"));\n\
    assert(same_chars(\"abcd\", \"dddddddabc\"));\nassert(same_chars(\"dddddddabc\"\
    , \"abcd\"));\nassert(!same_chars(\"eabcd\", \"dddddddabc\"));\nassert(!same_chars(\"\
    abcd\", \"dddddddabce\"));\nassert(!same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    ));\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught AssertionError: assert(same_chars('eabcdzzzz',\
    \ 'dddzzzzzzzddeddabc')) in /tmp/tmpxqave2di.php:23\nStack trace:\n#0 /tmp/tmpxqave2di.php(23):\
    \ assert(false, 'assert(same_cha...')\n#1 {main}\n  thrown in /tmp/tmpxqave2di.php\
    \ on line 23\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n}\n\nfunction candidate(...$args)\
    \ {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7lsfy73e.php:23\n\
    Stack trace:\n#0 /tmp/tmp7lsfy73e.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp7lsfy73e.php\
    \ on line 23\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n  $len0 = strlen($s0);\n  $len1\
    \ = strlen($s1);\n  if ($len0 != $len1) {\n    return false;\n  }\n  for ($i =\
    \ 0; $i < $len0; $i++) {\n    $c = $s0[$i];\n    $pos = strpos($s1, $c);\n   \
    \ if ($pos === false) {\n      return false;\n    }\n    $s1 = substr_replace($s1,\
    \ '', $pos, 1);\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n  \
    \  return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0guu9cxa.php:37\n\
    Stack trace:\n#0 /tmp/tmp0guu9cxa.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp0guu9cxa.php\
    \ on line 37\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n\t$a0 = str_split($s0);\n\t$a1 =\
    \ str_split($s1);\n\tsort($a0);\n\tsort($a1);\n\treturn implode($a0) == implode($a1);\n\
    }\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdh07rmme.php:28\n\
    Stack trace:\n#0 /tmp/tmpdh07rmme.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpdh07rmme.php\
    \ on line 28\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $counts = array_fill(0, 26,\
    \ 0);\n    for ($i = 0; $i < strlen($s0); $i++) {\n        $counts[ord($s0[$i])\
    \ - ord('a')]++;\n    }\n    for ($i = 0; $i < strlen($s1); $i++) {\n        $counts[ord($s1[$i])\
    \ - ord('a')]--;\n    }\n    for ($i = 0; $i < 26; $i++) {\n        if ($counts[$i]\
    \ != 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\n\
    function candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpesgbg85i.php:36\n\
    Stack trace:\n#0 /tmp/tmpesgbg85i.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpesgbg85i.php\
    \ on line 36\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    // I would just do a split on\
    \ each word then just sort and check to see if they equal each other.\n    //\n\
    \    $sorted0 = str_split($s0);\n    $sorted1 = str_split($s1);\n    sort($sorted0);\n\
    \    sort($sorted1);\n    $sorted0 = implode(\"\", $sorted0);\n    $sorted1 =\
    \ implode(\"\", $sorted1);\n    // print_r($sorted0);\n    // print_r($sorted1);\n\
    \    if ($sorted0 == $sorted1) {\n        return true;\n    } else {\n       \
    \ return false;\n    }\n}\n\necho same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    );\necho \"\\n\";\necho same_chars(\"abcd\", \"dddddddabc\");\necho \"\\n\";\n\
    echo same_chars(\"dddddddabc\", \"abcd\");\necho \"\\n\";\necho same_chars(\"\
    eabcd\", \"dddddddabc\");\necho \"\\n\";\necho same_chars(\"abcd\", \"dddddddabce\"\
    );\necho \"\\n\";\necho same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\");\n\n\
    function candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\n\n\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnlvj2cse.php:50\n\
    Stack trace:\n#0 /tmp/tmpnlvj2cse.php(59): test()\n#1 {main}\n  thrown in /tmp/tmpnlvj2cse.php\
    \ on line 50\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $s0len = strlen($s0);\n    $s1len\
    \ = strlen($s1);\n    $s0arr = str_split($s0);\n    $s1arr = str_split($s1);\n\
    \    $s0arr = array_count_values($s0arr);\n    $s1arr = array_count_values($s1arr);\n\
    \    if ($s0len > $s1len) {\n        foreach ($s0arr as $key => $value) {\n  \
    \          if (empty($s1arr[$key]) || $s1arr[$key] < $value) {\n             \
    \   return false;\n            }\n        }\n    } elseif ($s0len < $s1len) {\n\
    \        foreach ($s1arr as $key => $value) {\n            if (empty($s0arr[$key])\
    \ || $s0arr[$key] < $value) {\n                return false;\n            }\n\
    \        }\n    } else {\n        foreach ($s0arr as $key => $value) {\n     \
    \       if (empty($s1arr[$key]) || $s1arr[$key] != $value) {\n               \
    \ return false;\n            }\n        }\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\"\
    , \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\"\
    , \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkjlocczj.php:49\n\
    Stack trace:\n#0 /tmp/tmpkjlocczj.php(58): test()\n#1 {main}\n  thrown in /tmp/tmpkjlocczj.php\
    \ on line 49\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n  $s0 = str_split($s0);\n  $s1 =\
    \ str_split($s1);\n  $s0_char_count = array_count_values($s0);\n  $s1_char_count\
    \ = array_count_values($s1);\n  return $s0_char_count == $s1_char_count;\n}\n\
    function candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprkkbd06h.php:27\n\
    Stack trace:\n#0 /tmp/tmprkkbd06h.php(36): test()\n#1 {main}\n  thrown in /tmp/tmprkkbd06h.php\
    \ on line 27\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n\t$s0 = str_split($s0);\n\t$s1 =\
    \ str_split($s1);\n\tsort($s0);\n\tsort($s1);\n\treturn $s0 == $s1;\n}\n\nfunction\
    \ candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\"\
    , \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\"\
    , \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaufxzyij.php:28\n\
    Stack trace:\n#0 /tmp/tmpaufxzyij.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpaufxzyij.php\
    \ on line 28\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $a0 = str_split($s0);\n    $a1\
    \ = str_split($s1);\n    sort($a0);\n    sort($a1);\n    return $a0 == $a1;\n\
    }\n\n$tests = [\n    [\n        'in' => [\n            's0' => 'eabcdzzzz',\n\
    \            's1' => 'dddzzzzzzzddeddabc',\n        ],\n        'out' => true,\n\
    \    ],\n    [\n        'in' => [\n            's0' => 'abcd',\n            's1'\
    \ => 'dddddddabc',\n        ],\n        'out' => true,\n    ],\n    [\n      \
    \  'in' => [\n            's0' => 'dddddddabc',\n            's1' => 'abcd',\n\
    \        ],\n        'out' => true,\n    ],\n    [\n        'in' => [\n      \
    \      's0' => 'eabcd',\n            's1' => 'dddddddabc',\n        ],\n     \
    \   'out' => false,\n    ],\n    [\n        'in' => [\n            's0' => 'abcd',\n\
    \            's1' => 'dddddddabce',\n        ],\n        'out' => false,\n   \
    \ ],\n    [\n        'in' => [\n            's0' => 'eabcdzzzz',\n           \
    \ 's1' => 'dddzzzzzzzddddabc',\n        ],\n        'out' => false,\n    ],\n\
    ];\n\nforeach ($tests as $t) {\n    $s0 = $t['in']['s0'];\n    $s1 = $t['in']['s1'];\n\
    \    $r = same_chars($s0, $s1);\n    echo \"s0='$s0', s1='$s1', r=$r, expect={$t['out']}\\\
    n\";\n}\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "s0='eabcdzzzz', s1='dddzzzzzzzddeddabc', r=, expect=1\ns0='abcd', s1='dddddddabc',\
    \ r=, expect=1\ns0='dddddddabc', s1='abcd', r=, expect=1\ns0='eabcd', s1='dddddddabc',\
    \ r=, expect=\ns0='abcd', s1='dddddddabce', r=, expect=\ns0='eabcdzzzz', s1='dddzzzzzzzddddabc',\
    \ r=, expect=\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd0n8a75s.php:79\n\
    Stack trace:\n#0 /tmp/tmpd0n8a75s.php(88): test()\n#1 {main}\n  thrown in /tmp/tmpd0n8a75s.php\
    \ on line 79\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $has_char_counts = function($s)\
    \ {\n        $counts = [];\n        $len = strlen($s);\n        for ($i = 0; $i\
    \ < $len; $i++) {\n            $char = $s[$i];\n            if (isset($counts[$char]))\
    \ {\n                $counts[$char] += 1;\n            } else {\n            \
    \    $counts[$char] = 1;\n            }\n        }\n        return $counts;\n\
    \    };\n\n    $counts0 = $has_char_counts($s0);\n    $counts1 = $has_char_counts($s1);\n\
    \n    return $counts0 == $counts1;\n}\n\nfunction candidate(...$args) {\n    return\
    \ same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\"\
    , \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxv4i8yfh.php:41\n\
    Stack trace:\n#0 /tmp/tmpxv4i8yfh.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpxv4i8yfh.php\
    \ on line 41\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    $arr1 = str_split($s0);\n  \
    \  $arr2 = str_split($s1);\n    sort($arr1);\n    sort($arr2);\n    return $arr1\
    \ == $arr2;\n}\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnxqfxthy.php:28\n\
    Stack trace:\n#0 /tmp/tmpnxqfxthy.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpnxqfxthy.php\
    \ on line 28\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    return str_split(str_replace(\"\
    \ \", \"\", $s0)) == str_split(str_replace(\" \", \"\", $s1));\n}\nfunction candidate(...$args)\
    \ {\n    return same_chars(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\", \"dddddddabc\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"dddddddabc\", \"abcd\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\", \"aaccc\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphkqbhak2.php:23\n\
    Stack trace:\n#0 /tmp/tmphkqbhak2.php(32): test()\n#1 {main}\n  thrown in /tmp/tmphkqbhak2.php\
    \ on line 23\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    if (strlen($s0) != strlen($s1))\
    \ {\n        return false;\n    }\n    $char_count0 = [];\n    $char_count1 =\
    \ [];\n    for ($i = 0; $i < strlen($s0); $i++) {\n        $char0 = $s0[$i];\n\
    \        $char1 = $s1[$i];\n        if (!isset($char_count0[$char0])) {\n    \
    \        $char_count0[$char0] = 0;\n        }\n        if (!isset($char_count1[$char1]))\
    \ {\n            $char_count1[$char1] = 0;\n        }\n        $char_count0[$char0]\
    \ += 1;\n        $char_count1[$char1] += 1;\n    }\n    foreach ($char_count0\
    \ as $char => $count) {\n        if (!isset($char_count1[$char]) || $char_count1[$char]\
    \ != $count) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprb_pgp_6.php:46\n\
    Stack trace:\n#0 /tmp/tmprb_pgp_6.php(55): test()\n#1 {main}\n  thrown in /tmp/tmprb_pgp_6.php\
    \ on line 46\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n\t$array_s0 = str_split($s0);\n\t\
    $array_s1 = str_split($s1);\n\t$array_s0_unique = array_unique($array_s0);\n\t\
    $array_s1_unique = array_unique($array_s1);\n\tif (count($array_s0_unique) ==\
    \ count($array_s1_unique)) {\n\t\t$check = 0;\n\t\tforeach ($array_s0_unique as\
    \ $key => $value) {\n\t\t\t$count_s0 = substr_count($s0, $value);\n\t\t\t$count_s1\
    \ = substr_count($s1, $value);\n\t\t\tif ($count_s0 != $count_s1) {\n\t\t\t\t\
    $check += 1;\n\t\t\t}\n\t\t}\n\t\tif ($check == 0) {\n\t\t\treturn true;\n\t\t\
    } else {\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\n\
    function candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\"\
    , \"dddddddabc\") !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"dddddddabc\", \"abcd\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eabcd\", \"dddddddabc\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabcf\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\", \"aaccc\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvbmg_smp.php:43\n\
    Stack trace:\n#0 /tmp/tmpvbmg_smp.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpvbmg_smp.php\
    \ on line 43\n"
  timestamp: 1660029070
- exit_code: 255
  program: "<?php\n// Check if two words have the same characters.\n// >>> same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddeddabc\")\n// true\n// >>> same_chars(\"abcd\", \"\
    dddddddabc\")\n// true\n// >>> same_chars(\"dddddddabc\", \"abcd\")\n// true\n\
    // >>> same_chars(\"eabcd\", \"dddddddabc\")\n// false\n// >>> same_chars(\"abcd\"\
    , \"dddddddabce\")\n// false\n// >>> same_chars(\"eabcdzzzz\", \"dddzzzzzzzddddabc\"\
    )\n// false\nfunction same_chars($s0, $s1) {\n    // TODO\n}\n\n$failures = 0;\n\
    if (!same_chars(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\")) {\n    echo \"Failed same_chars\
    \ test 1\\n\";\n    $failures += 1;\n}\nif (!same_chars(\"abcd\", \"dddddddabc\"\
    )) {\n    echo \"Failed same_chars test 2\\n\";\n    $failures += 1;\n}\nif (!same_chars(\"\
    dddddddabc\", \"abcd\")) {\n    echo \"Failed same_chars test 3\\n\";\n    $failures\
    \ += 1;\n}\nif (same_chars(\"eabcd\", \"dddddddabc\")) {\n    echo \"Failed same_chars\
    \ test 4\\n\";\n    $failures += 1;\n}\nif (same_chars(\"abcd\", \"dddddddabce\"\
    )) {\n    echo \"Failed same_chars test 5\\n\";\n    $failures += 1;\n}\nif (same_chars(\"\
    eabcdzzzz\", \"dddzzzzzzzddddabc\")) {\n    echo \"Failed same_chars test 6\\\
    n\";\n    $failures += 1;\n}\nif ($failures > 0) {\n    echo \"You have failed\
    \ $failures tests!\\n\";\n} else {\n    echo \"All test passed!\\n\";\n}\nfunction\
    \ candidate(...$args) {\n    return same_chars(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\", \"dddddddabc\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"dddddddabc\"\
    , \"abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eabcd\", \"dddddddabc\") !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcd\", \"dddddddabcf\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\"\
    , \"aaccc\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Failed same_chars test 1\nFailed same_chars test 2\nFailed same_chars test\
    \ 3\nYou have failed 3 tests!\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmplp_xtl3y.php:54\nStack trace:\n#0 /tmp/tmplp_xtl3y.php(63): test()\n\
    #1 {main}\n  thrown in /tmp/tmplp_xtl3y.php on line 54\n"
  timestamp: 1660029070

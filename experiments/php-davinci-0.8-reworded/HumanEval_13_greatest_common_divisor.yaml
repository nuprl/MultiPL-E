name: HumanEval_13_greatest_common_divisor
language: php
prompt: "<?php\n// Return a greatest common divisor of two integers a and b\n// >>>\
  \ greatest_common_divisor(3, 5)\n// 1\n// >>> greatest_common_divisor(25, 15)\n\
  // 5\nfunction greatest_common_divisor($a, $b) {\n"
tests: "function candidate(...$args) {\n    return greatest_common_divisor(...$args);\n\
  }\n\nfunction test(): void {\n    if (candidate(3, 7) !== 1) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(10, 15) !== 5) { throw new Exception(\"Test\
  \ failed!\"); }\n    if (candidate(49, 14) !== 7) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(144, 60) !== 12) { throw new Exception(\"Test failed!\"\
  ); }\n}\n\ntest();"
completions: ["    $gcd = 1;\n    $biggest = $a > $b ? $a : $b;\n    $smallest = $a\
    \ < $b ? $a : $b;\n    for ($i = 1; $i <= $smallest; $i++) {\n        if ($biggest\
    \ % $i == 0 && $smallest % $i == 0) {\n            $gcd = $i;\n        }\n   \
    \ }\n    return $gcd;\n}\n", "    return ($a % $b) ? greatest_common_divisor($b,\
    \ $a % $b) : $b;\n}\n", "    if ($a > $b) {\n        $a = $a - $b;\n    } else\
    \ {\n        $b = $b - $a;\n    }\n    return greatest_common_divisor($a, $b);\n\
    }", "  if ($a < $b) {\n    $tmp = $a;\n    $a = $b;\n    $b = $tmp;\n  }\n  if\
    \ ($b == 0) {\n    return $a;\n  }\n  return greatest_common_divisor($b, $a %\
    \ $b);\n}\n", "    if ($a % $b == 0) {\n        return $b;\n    }\n    return\
    \ greatest_common_divisor($b, $a % $b);\n}", "    if ($a == 0) {\n        return\
    \ $b;\n    }\n    return greatest_common_divisor($b % $a, $a);\n}", "    // HOMEWORK\n\
    \    // Please complete this function\n    if($a == 0 || $b == 0) {\n        return\
    \ 0;\n    }\n\n    if($a < $b) {\n        $temp = $a;\n        $a = $b;\n    \
    \    $b = $temp;\n    }\n\n    while ($b != 0) {\n        $temp = $a % $b;\n \
    \       $a = $b;\n        $b = $temp;\n    }\n\n    return $a;\n}", "    $a =\
    \ abs($a);\n    $b = abs($b);\n    if ($a == 0 || $b == 0) {\n        return 1;\n\
    \    }\n    while ($a != $b) {\n        if ($a > $b) {\n            $a = $a -\
    \ $b;\n        } else {\n            $b = $b - $a;\n        }\n    }\n    return\
    \ $a;\n}\n", "    if ($a == 0) {\n        return $b;\n    } else if ($b == 0)\
    \ {\n        return $a;\n    } else if ($a == $b) {\n        return $a;\n    }\n\
    \    return greatest_common_divisor($b, $a % $b);\n}\n", "\twhile ($b != 0) {\n\
    \t\t$t = $b;\n\t\t$b = $a % $b;\n\t\t$a = $t;\n\t}\n\treturn $a;\n}\n", "    if\
    \ ($a < $b) {\n        $tmp = $a;\n        $a = $b;\n        $b = $tmp;\n    }\n\
    \    while ($b != 0) {\n        $tmp = $a % $b;\n        $a = $b;\n        $b\
    \ = $tmp;\n    }\n    return $a;\n}\n\n$handle = fopen(\"php://stdin\", \"r\"\
    );\n$t = fgets($handle);\n$results = array();\n\nfor ($i = 0; $i < $t; $i++) {\n\
    \    $n = fgets($handle);\n    $prods = array();\n    for ($j = 0; $j < $n; $j++)\
    \ {\n        $line = fgets($handle);\n        list($x, $y) = explode(' ', $line);\n\
    \        $prods[] = greatest_common_divisor($x, $y);\n    }\n    $result = array_product($prods);\n\
    \    $results[] = $result;\n}\n\nforeach ($results as $result) {\n    echo $result\
    \ . \"\\n\";\n}", "    return $b ? greatest_common_divisor($b, $a % $b) : $a;\n\
    }\n", "    // Your code here\n}", "    // Write code here\n    if ($a == 0 ||\
    \ $b == 0) return 0;\n    if ($a == $b) return $a;\n    if ($a > $b) {\n     \
    \   return greatest_common_divisor($a - $b, $b);\n    } else {\n        return\
    \ greatest_common_divisor($a, $b - $a);\n    }\n}\necho greatest_common_divisor(25,\
    \ 15);", "    if ($a < $b) {\n        $temp = $a;\n        $a = $b;\n        $b\
    \ = $temp;\n    }\n    return ($a % $b) ? greatest_common_divisor($b, $a % $b)\
    \ : $b;\n}\n", "    if ($a % $b === 0) {\n        return $b;\n    } else {\n \
    \       return greatest_common_divisor($b, $a % $b);\n    }\n}\n\necho '>>> greatest_common_divisor(3,\
    \ 5)' . PHP_EOL;\necho greatest_common_divisor(3, 5) . PHP_EOL;\necho '>>> greatest_common_divisor(25,\
    \ 15)' . PHP_EOL;\necho greatest_common_divisor(25, 15) . PHP_EOL;", "  $gcd =\
    \ 1;\n  for ($i = 2; $i <= min($a, $b); $i++) {\n    if ($a % $i == 0 && $b %\
    \ $i == 0) {\n      $gcd = $i;\n    }\n  }\n  return $gcd;\n}\n", "\tif ($a <\
    \ $b) {\n\t\t$c = $a;\n\t\t$a = $b;\n\t\t$b = $c;\n\t}\n\twhile($b) {\n\t\t$c\
    \ = $a % $b;\n\t\t$a = $b;\n\t\t$b = $c;\n\t}\n\treturn $a;\n}", "  if ($a ==\
    \ 0) return $b;\n  else return greatest_common_divisor($b % $a, $a);\n}\n", " \
    \   if ($a == 0 || $b == 0) {\n        return max($a, $b);\n    }\n\n    if ($a\
    \ == $b) {\n        return $a;\n    }\n\n    if ($a > $b) {\n        return greatest_common_divisor($a\
    \ - $b, $b);\n    } else {\n        return greatest_common_divisor($a, $b - $a);\n\
    \    }\n}\n", "    $r = $a % $b;\n    while ($r > 0) {\n        $a = $b;\n   \
    \     $b = $r;\n        $r = $a % $b;\n    }\n    return $b;\n}\n", "    return\
    \ $b ? greatest_common_divisor($b, $a % $b) : $a;\n}\n", "  if ($a == 0) {\n \
    \   return $b;\n  }\n  if ($b == 0) {\n    return $a;\n  }\n  if ($a > $b) {\n\
    \    return greatest_common_divisor($a % $b, $b);\n  }\n  return greatest_common_divisor($a,\
    \ $b % $a);\n}\n", "    if ($a == 0) {\n        return $b;\n    }\n    return\
    \ greatest_common_divisor($b % $a, $a);\n}\n", "  if ($a == 0 || $b == 0) {\n\
    \    return 0;\n  }\n  if ($a == $b) {\n    return $a;\n  }\n  if ($a > $b) {\n\
    \    return greatest_common_divisor($a - $b, $b);\n  }\n  return greatest_common_divisor($a,\
    \ $b - $a);\n}\n", "\t$result = 1;\n\t$min = min($a, $b);\n\tfor ($i = 2; $i <=\
    \ $min; $i++) {\n\t\tif ($a % $i == 0 && $b % $i == 0) {\n\t\t\t$result = $i;\n\
    \t\t}\n\t}\n\treturn $result;\n}\n", "\tif ($a == 0) {\n\t\treturn $b;\n\t} elseif\
    \ ($b == 0) {\n\t\treturn $a;\n\t} else {\n\t\treturn greatest_common_divisor($b,\
    \ $a % $b);\n\t}\n}\n", "    if ($a == 0) {\n        return $b;\n    } else if\
    \ ($b == 0) {\n        return $a;\n    }\n    if ($a > $b) {\n        return greatest_common_divisor($a\
    \ - $b, $b);\n    } else {\n        return greatest_common_divisor($a, $b - $a);\n\
    \    }\n}\n", "    if ($a == 0) {\n        return $b;\n    } else if ($b == 0)\
    \ {\n        return $a;\n    }\n    else {\n        if ($a >= $b) {\n        \
    \    return greatest_common_divisor($a % $b, $b);\n        } else {\n        \
    \    return greatest_common_divisor($a, $b % $a);\n        }\n    }\n}\n", " \
    \ while ($b != 0) {\n    $r = $a % $b;\n    $a = $b;\n    $b = $r;\n  }\n  return\
    \ $a;\n}\n", "    if ($a < $b) {\n        $tmp = $a;\n        $a = $b;\n     \
    \   $b = $tmp;\n    }\n    $div = 1;\n    for ($i = 1; $i <= $b; $i++) {\n   \
    \     if ($a % $i == 0 && $b % $i == 0) {\n            $div = $i;\n        }\n\
    \    }\n    return $div;\n}\n", "    if ($a > $b) {\n        $x = $a;\n      \
    \  $y = $b;\n    } else {\n        $x = $b;\n        $y = $a;\n    }\n    while\
    \ ($y) {\n        $r = $x % $y;\n        $x = $y;\n        $y = $r;\n    }\n \
    \   return $x;\n}\n", "    if ($a % $b == 0) {\n        return $b;\n    }\n  \
    \  return greatest_common_divisor($b, $a % $b);\n}\n", "    if ($a === 0) return\
    \ $b;\n    if ($b === 0) return $a;\n    if ($a >= $b) {\n        return greatest_common_divisor($a\
    \ % $b, $b);\n    } else {\n        return greatest_common_divisor($a, $b % $a);\n\
    \    }\n}\n\necho \"greatest_common_divisor(3, 5): \", greatest_common_divisor(3,\
    \ 5), PHP_EOL;\necho \"greatest_common_divisor(25, 15): \", greatest_common_divisor(25,\
    \ 15), PHP_EOL;", "  $gcd = 1;\n  $min = min($a, $b);\n  for ($i = 1; $i <= $min;\
    \ $i++) {\n    if ($a % $i == 0 && $b % $i == 0) {\n      $gcd = $i;\n    }\n\
    \  }\n  return $gcd;\n}\n", "  if ($a % $b == 0) {\n    return $b;\n  } else {\n\
    \    return greatest_common_divisor($b, $a % $b);\n  }\n}\n", "    if ($a == 0)\
    \ {\n        return $b;\n    }\n    while ($b != 0) {\n        if ($a > $b) {\n\
    \            $a = $a - $b;\n        } else {\n            $b = $b - $a;\n    \
    \    }\n    }\n    return $a;\n}\n", "    if ($a % $b == 0) {\n        return\
    \ $b;\n    } else {\n        return greatest_common_divisor($b, $a % $b);\n  \
    \  }\n}\n", "  $min = $a < $b ? $a : $b;\n  for ($i = $min; $i > 0; $i--) {\n\
    \    if ($a % $i == 0 && $b % $i == 0) {\n      return $i;\n    }\n  }\n}\n",
  "    // Make sure the numbers $a and $b are both positive\n    $a = abs($a);\n \
    \   $b = abs($b);\n    if ($a == 0 || $b == 0) {\n        return max($a, $b);\n\
    \    }\n    $c = min($a, $b);\n    $d = max($a, $b);\n    $e = $d % $c;\n    if\
    \ ($e == 0) {\n        return $c;\n    }\n    return greatest_common_divisor($c,\
    \ $e);\n}\n", "    if (empty($a) || empty($b)) {\n        return 0;\n    }\n\n\
    \    while ($a != $b) {\n        if ($a > $b) {\n            $a = $a - $b;\n \
    \       } else {\n            $b = $b - $a;\n        }\n    }\n\n    return $a;\n\
    }\n", "    return (($a % $b) > 0) ? greatest_common_divisor($b, $a % $b) : $b;\n\
    }\n", "\tif ($a == 0) {\n\t\treturn $b;\n\t}\n\tif ($b == 0) {\n\t\treturn $a;\n\
    \t}\n\tif ($a > $b) {\n\t\treturn greatest_common_divisor($a % $b, $b);\n\t} else\
    \ {\n\t\treturn greatest_common_divisor($a, $b % $a);\n\t}\n}\n", "    if ($a\
    \ == 0 || $b == 0) {\n        return abs(max($a, $b));\n    }\n    $a = abs($a);\n\
    \    $b = abs($b);\n    while ($a != $b) {\n        if ($a > $b) {\n         \
    \   $a = $a - $b;\n        } else {\n            $b = $b - $a;\n        }\n  \
    \  }\n    return $a;\n}\n", "    if ($a < $b) {\n        return greatest_common_divisor($b,\
    \ $a);\n    }\n    while ($b != 0) {\n        $tmp = $a % $b;\n        $a = $b;\n\
    \        $b = $tmp;\n    }\n    return $a;\n}\n\nvar_dump(greatest_common_divisor(3,\
    \ 5));\nvar_dump(greatest_common_divisor(25, 15));", "    return $b === 0 ? $a\
    \ : greatest_common_divisor($b, $a % $b);\n}\n", "  if ($a == 0) {\n    return\
    \ $b;\n  }\n  if ($b == 0) {\n    return $a;\n  }\n  if ($a == $b) {\n    return\
    \ $a;\n  }\n  if ($a > $b) {\n    return greatest_common_divisor($a - $b, $b);\n\
    \  }\n  return greatest_common_divisor($a, $b - $a);\n}\n\necho greatest_common_divisor(8,\
    \ 12) . \"\\n\";\necho greatest_common_divisor(11, 34) . \"\\n\";\necho greatest_common_divisor(2,\
    \ 8) . \"\\n\";\necho greatest_common_divisor(25, 15) . \"\\n\";\necho greatest_common_divisor(11,\
    \ 12) . \"\\n\";\necho greatest_common_divisor(13, 30) . \"\\n\";\necho greatest_common_divisor(47,\
    \ 30) . \"\\n\";\necho greatest_common_divisor(48, 18) . \"\\n\";\necho greatest_common_divisor(15,\
    \ 18) . \"\\n\";\necho greatest_common_divisor(18, 15) . \"\\n\";\necho greatest_common_divisor(30,\
    \ 15) . \"\\n\";\necho greatest_common_divisor(15, 30) . \"\\n\";\necho greatest_common_divisor(1,\
    \ 30) . \"\\n\";\necho greatest_common_divisor(30, 1) . \"\\n\";\necho greatest_common_divisor(0,\
    \ 30) . \"\\n\";\necho greatest_common_divisor(30, 0) . \"\\n\";\necho greatest_common_divisor(30,\
    \ 30) . \"\\n\";\necho greatest_common_divisor(3, 5) . \"\\n\";\necho greatest_common_divisor(7,\
    \ 21) . \"\\n\";\necho greatest_common_divisor(21, 7) . \"\\n\";", "    $y = max($a,\
    \ $b);\n    $x = min($a, $b);\n    $res = 0;\n    $rest = 0;\n    do {\n     \
    \   $rest = $y % $x;\n        $res = $x;\n        $x = $rest;\n    } while ($rest\
    \ != 0);\n    return $res;\n}\n\necho \"greatest_common_divisor(3, 5) = \" . greatest_common_divisor(3,\
    \ 5) . \"\\n\";\necho \"greatest_common_divisor(25, 15) = \" . greatest_common_divisor(25,\
    \ 15) . \"\\n\";\n", "    if ($a == 0 || $b == 0) {\n        return 0;\n    }\n\
    \    if ($a < $b) {\n        $a = $a + $b;\n        $b = $a - $b;\n        $a\
    \ = $a - $b;\n    }\n    $rest = $a % $b;\n    if ($rest == 0) {\n        return\
    \ $b;\n    }\n    return greatest_common_divisor($b, $rest);\n}\necho greatest_common_divisor(3,\
    \ 5);\necho greatest_common_divisor(25, 15);\necho greatest_common_divisor(25,\
    \ 0);\necho greatest_common_divisor(0, 15);\necho greatest_common_divisor(0, 0);",
  "    $min = min($a, $b);\n    $max = max($a, $b);\n    $remainder = $max % $min;\n\
    \    if ($remainder === 0) {\n        return $min;\n    } else {\n        return\
    \ greatest_common_divisor($min, $remainder);\n    }\n}\n", "  if ($a == 0) {\n\
    \    return $b;\n  }\n  if ($b == 0) {\n    return $a;\n  }\n  $r = $a % $b;\n\
    \  return greatest_common_divisor($b, $r);\n}\n", "    $min = $a < $b ? $a : $b;\n\
    \    $max = $a > $b ? $a : $b;\n    $divisor = $min;\n    while ($divisor >= 1)\
    \ {\n        if ($max % $divisor == 0 && $min % $divisor == 0) {\n           \
    \ return $divisor;\n        }\n        $divisor--;\n    }\n}\n", "    // BEGIN\
    \ (write your solution here)\n\tif($a < $b) {\n\t\t$c = $a;\n\t\t$a = $b;\n\t\t\
    $b = $c;\n\t}\n\tif($a % $b == 0) {\n\t\treturn $b;\n\t} else {\n\t\treturn greatest_common_divisor($b,\
    \ $a % $b);\n\t}\n    // END\n}\n", "    $d = 0;\n    while ($a % 2 == 0 && $b\
    \ % 2 == 0) {\n        $a /= 2;\n        $b /= 2;\n        $d++;\n    }\n    while\
    \ ($a != $b) {\n        if ($a % 2 == 0) {\n            $a /= 2;\n        } elseif\
    \ ($b % 2 == 0) {\n            $b /= 2;\n        } elseif ($a > $b) {\n      \
    \      $a = ($a - $b) / 2;\n        } else {\n            $b = ($b - $a) / 2;\n\
    \        }\n    }\n    return $a * pow(2, $d);\n}\n", "    $i = 1;\n    while\
    \ ($i <= $a) {\n        if ($a % $i == 0 && $b % $i == 0) {\n            $i++;\n\
    \        } else {\n            $i++;\n        }\n    }\n    return $i;\n}\n",
  "  if ($a == 0) {\n    return $b;\n  } else if ($b == 0) {\n    return $a;\n  }\
    \ else if ($a >= $b) {\n    return greatest_common_divisor($a - $b, $b);\n  }\
    \ else {\n    return greatest_common_divisor($a, $b - $a);\n  }\n}\n", "    if\
    \ ($a === 0) return $b;\n    return greatest_common_divisor($b % $a, $a);\n}\n",
  "\t// YOUR CODE HERE\n\t// Replace this with your code\n}\n", "    if ($a < $b)\
    \ {\n        $temp = $a;\n        $a = $b;\n        $b = $temp;\n    }\n    return\
    \ ($a % $b == 0) ? $b : greatest_common_divisor($b, $a % $b);\n}\n$result = greatest_common_divisor(5,\
    \ 3);\nprint($result);\necho \"\\n\";\n", "\tif ($a == 0 || $b == 0) {\n\t\treturn\
    \ 0;\n\t}\n\t$a = abs($a);\n\t$b = abs($b);\n\twhile ($a != $b) {\n\t\tif ($a\
    \ > $b) {\n\t\t\t$a = $a - $b;\n\t\t} else {\n\t\t\t$b = $b - $a;\n\t\t}\n\t}\n\
    \treturn $a;\n}\n", "  if ($a === 0 || $b === 0) {\n    return 0;\n  }\n  if ($a\
    \ % $b === 0) {\n    return $b;\n  }\n  return greatest_common_divisor($b, $a\
    \ % $b);\n}\n", "\tif ($a == 0 || $b == 0)\n\t\treturn abs(max($a, $b));\n\t$r\
    \ = $a % $b;\n\treturn ($r != 0) ? greatest_common_divisor($b, $r) : abs($b);\n\
    }\n", "\t$min = min($a, $b);\n\t$max = max($a, $b);\n\t\n\tif ($min == $max) {\n\
    \t\treturn $min;\n\t}\n\t\n\t$divisor = $min;\n\t$start = $divisor - 1;\n\twhile\
    \ ($start > 1) {\n\t\tif ($min % $start == 0 && $max % $start == 0) {\n\t\t\t\
    $divisor = $start;\n\t\t\tbreak;\n\t\t}\n\t\t\n\t\t$start--;\n\t}\n\t\n\treturn\
    \ $divisor;\n}", "    $gcd = 1;\n    for ($i = 1; $i <= $a and $i <= $b; $i++)\
    \ {\n        if ($a % $i == 0 and $b % $i == 0) {\n            $gcd = $i;\n  \
    \      }\n    }\n    return $gcd;\n}\n", "  $gcd = 1;\n  for ($d = 1; $d <= min($a,\
    \ $b); $d++) {\n    if ($a % $d == 0 && $b % $d == 0) {\n      $gcd = $d;\n  \
    \  }\n  }\n  return $gcd;\n}\n", "    // if $a < $b, swap them\n    if ($a < $b)\
    \ {\n        $tmp = $a;\n        $a = $b;\n        $b = $tmp;\n    }\n    if ($b\
    \ == 0) {\n        return $a;\n    }\n    $r = $a % $b;\n    return greatest_common_divisor($b,\
    \ $r);\n}", "    // Fill in code here\n    if ($a == 0 || $b == 0) {\n       \
    \ return 0;\n    }\n    if ($a == $b) {\n        return $a;\n    }\n    if ($a\
    \ > $b) {\n        return greatest_common_divisor($a - $b, $b);\n    }\n    return\
    \ greatest_common_divisor($a, $b - $a);\n}\n", "    $min = min($a, $b);\n    $max\
    \ = max($a, $b);\n    while ($min !== 0) {\n        $tmp = $min;\n        $min\
    \ = $max % $min;\n        $max = $tmp;\n    }\n    return $max;\n}\n", "    if($a\
    \ == 0 || $b == 0) return abs(max($a, $b));\n    $r = $a % $b;\n    return ($r\
    \ != 0) ? greatest_common_divisor($b, $r) : abs($b);\n}\n", "    if ($a == 0 ||\
    \ $b == 0) {\n        return 0;\n    }\n    while ($a != $b) {\n        if ($a\
    \ > $b) {\n            $a = $a - $b;\n        } else {\n            $b = $b -\
    \ $a;\n        }\n    }\n    return $a;\n}\n", "\tif ($a < 0) $a = -$a;\n\tif\
    \ ($b < 0) $b = -$b;\n\tif ($a > $b) {\n\t\t$t = $a;\n\t\t$a = $b;\n\t\t$b = $t;\n\
    \t}\n\twhile ($a > 0) {\n\t\t$t = $a;\n\t\t$a = $b % $a;\n\t\t$b = $t;\n\t}\n\t\
    return $b;\n}\n", "\tif ($a == 0 || $b == 0) {\n\t\treturn $a+$b;\n\t}\n\t$r =\
    \ $a % $b;\n\treturn greatest_common_divisor($b, $r);\n}", "    $r = $a % $b;\n\
    \    if ($r == 0) {\n        return $b;\n    } else {\n        return greatest_common_divisor($b,\
    \ $r);\n    }\n}\n", "\twhile ($b != 0) {\n\t\t$tmp = $a % $b;\n\t\t$a = $b;\n\
    \t\t$b = $tmp;\n\t}\n\treturn $a;\n}\necho \"gcd(3, 5) = \".greatest_common_divisor(3,\
    \ 5).\"\\n\";\necho \"gcd(25, 15) = \".greatest_common_divisor(25, 15).\"\\n\"\
    ;\n", "    if ($a < 0) {\n        $a = -$a;\n    }\n    if ($b < 0) {\n      \
    \  $b = -$b;\n    }\n    while (true) {\n        if ($a == 0) {\n            return\
    \ $b;\n        }\n        $b %= $a;\n        if ($b == 0) {\n            return\
    \ $a;\n        }\n        $a %= $b;\n    }\n}\n", "\tif ($a < $b) {\n\t\treturn\
    \ greatest_common_divisor($b, $a);\n\t}\n\n\tif ($b == 0) {\n\t\treturn $a;\n\t\
    }\n\n\treturn greatest_common_divisor($b, $a % $b);\n}\n", "    // $m = max($a,\
    \ $b);\n    // $n = min($a, $b);\n    // $result = $n;\n    // while ($result\
    \ != 0) {\n    //     $result = $m % $n;\n    //     $m = $n;\n    //     $n =\
    \ $result;\n    // }\n    // return $m;\n    $result = $a % $b;\n    if ($result\
    \ == 0) {\n        return $b;\n    } else {\n        return greatest_common_divisor($b,\
    \ $result);\n    }\n}\n", "    // Write your code here\n    $i = 1;\n    $min\
    \ = 0;\n    $gcd = 0;\n    if ($a <= $b) {\n        $min = $a;\n    } else {\n\
    \        $min = $b;\n    }\n    while ($i <= $min) {\n        if ($a % $i == 0\
    \ && $b % $i == 0) {\n            $gcd = $i;\n        }\n        $i++;\n    }\n\
    \    return $gcd;\n}\n", "\tif ($a < $b) {\n\t\treturn greatest_common_divisor($b,\
    \ $a);\n\t}\n\n\tif ($b === 0) {\n\t\treturn $a;\n\t}\n\n\treturn greatest_common_divisor($b,\
    \ $a % $b);\n}\n", "  $r = $a % $b;\n  while ($r !== 0) {\n    $a = $b;\n    $b\
    \ = $r;\n    $r = $a % $b;\n  }\n  return $b;\n}\n", "    $gcd = null;\n    $min\
    \ = min($a, $b);\n    for ($i = 1; $i <= $min; $i++) {\n        if ($a % $i ==\
    \ 0 && $b % $i == 0) {\n            $gcd = $i;\n        }\n    }\n    return $gcd;\n\
    }\n", "    if ($a < 0 || $b < 0) {\n        return;\n    }\n    $result = 0;\n\
    \    $tmp = [];\n    $i = 0;\n    $j = 0;\n    for ($i = 1; $i <= $a; $i++) {\n\
    \        if ($a % $i == 0) {\n            $tmp[$j] = $i;\n            $j++;\n\
    \        }\n    }\n    for ($i = 0; $i < count($tmp); $i++) {\n        if ($b\
    \ % $tmp[$i] == 0) {\n            $result = $tmp[$i];\n        }\n    }\n    return\
    \ $result;\n}\n", "    $small = $a < $b ? $a : $b;\n    $gcd = 1;\n    for ($i\
    \ = 1; $i <= $small; $i++) {\n        if ($a % $i == 0 && $b % $i == 0) {\n  \
    \          $gcd = $i;\n        }\n    }\n    return $gcd;\n}\n", "\t$a = abs($a);\n\
    \t$b = abs($b);\n\t$x = min($a, $b);\n\t$y = max($a, $b);\n\t$r = $y % $x;\n\t\
    while ($r > 0) {\n\t\t$y = $x;\n\t\t$x = $r;\n\t\t$r = $y % $x;\n\t}\n\treturn\
    \ $x;\n}", "  while ($b) {\n    $t = $b;\n    $b = $a % $b;\n    $a = $t;\n  }\n\
    \  return $a;\n}\n", "    $gcd = 1;\n    $max = max($a, $b);\n    $min = min($a,\
    \ $b);\n    $quotient = (int)($max / $min);\n    $mod = $max % $min;\n    if ($mod\
    \ == 0) {\n        $gcd = $min;\n    } else {\n        $gcd = greatest_common_divisor($min,\
    \ $mod);\n    }\n    return $gcd;\n}\n", "    return $b == 0 ? $a : greatest_common_divisor($b,\
    \ $a % $b);\n}\n", "    $a = abs($a);\n    $b = abs($b);\n    if($a < $b) {\n\
    \        $temp = $a;\n        $a = $b;\n        $b = $temp;\n    }\n    while($b\
    \ != 0) {\n        $temp = $a % $b;\n        $a = $b;\n        $b = $temp;\n \
    \   }\n    return $a;\n}", "  $greatest = 0;\n  $mod = 0;\n  if($a > $b) {\n \
    \   $min = $b;\n  } else {\n    $min = $a;\n  }\n  for($i = 1; $i <= $min; $i++)\
    \ {\n    $mod = $a % $i;\n    if($mod == 0) {\n      $mod = $b % $i;\n      if($mod\
    \ == 0) {\n        $greatest = $i;\n      }\n    }\n  }\n  return $greatest;\n\
    }\n", "  if ($a == 0) {\n    return $b;\n  }\n  return greatest_common_divisor($b\
    \ % $a, $a);\n}\n", "  if ($a == 0) {\n    return $b;\n  } else if ($b == 0) {\n\
    \    return $a;\n  } else if ($a > $b) {\n    return greatest_common_divisor($a\
    \ % $b, $b);\n  } else {\n    return greatest_common_divisor($a, $b % $a);\n \
    \ }\n}\n\necho greatest_common_divisor(3, 5);\necho \"\\n\";\necho greatest_common_divisor(25,\
    \ 15);\necho \"\\n\";", "    return 0;\n}\n", "\tif ($a % $b == 0) {\n\t\treturn\
    \ $b;\n\t} else {\n\t\treturn greatest_common_divisor($b, $a % $b);\n\t}\n}\n",
  "\t$divisor = min($a, $b);\n\t$bigger_number = max($a, $b);\n\t$last_divisor = 0;\n\
    \twhile ($last_divisor != $divisor) {\n\t\t$last_divisor = $divisor;\n\t\t$divisor\
    \ = $bigger_number % $divisor;\n\t}\n\treturn $divisor;\n}\n", "\treturn ( $b\
    \ == 0 ) ? $a : greatest_common_divisor($b, $a % $b);\n}\n", "\t// YOUR CODE GOES\
    \ HERE\n}\n", "  $a = abs($a);\n  $b = abs($b);\n  if ($a == 0) {\n    return\
    \ $b;\n  }\n  if ($b == 0) {\n    return $a;\n  }\n  return greatest_common_divisor($b,\
    \ $a % $b);\n}\n", "    // Write code here\n    return 1;\n}", "    if ($a < 0)\
    \ {\n        $a = -$a;\n    }\n    if ($b < 0) {\n        $b = -$b;\n    }\n \
    \   if ($a > $b) {\n        $r = $a % $b;\n        if ($r == 0) {\n          \
    \  return $b;\n        } else {\n            return greatest_common_divisor($b,\
    \ $r);\n        }\n    } else {\n        $r = $b % $a;\n        if ($r == 0) {\n\
    \            return $a;\n        } else {\n            return greatest_common_divisor($a,\
    \ $r);\n        }\n    }\n}\n", "\tif ($a == 0) {\n\t\treturn $b;\n\t}\n\treturn\
    \ greatest_common_divisor($b % $a, $a);\n}\n\nvar_dump(greatest_common_divisor(3,\
    \ 5));\nvar_dump(greatest_common_divisor(25, 15));", "\tif ($a == 0 || $b == 0)\
    \ {\n\t\treturn 0;\n\t}\n\twhile ($a != $b) {\n\t\tif ($a > $b) {\n\t\t\t$a =\
    \ $a - $b;\n\t\t} else {\n\t\t\t$b = $b - $a;\n\t\t}\n\t}\n\treturn $a;\n}\n",
  "    if ($a == 0 || $b == 0) {\n        return 0;\n    }\n    if ($a == $b) {\n\
    \        return $a;\n    }\n    if ($a > $b) {\n        return greatest_common_divisor($a\
    \ - $b, $b);\n    }\n    if ($a < $b) {\n        return greatest_common_divisor($a,\
    \ $b - $a);\n    }\n}\n", "\tif ($a < $b) {\n\t\t$t = $a;\n\t\t$a = $b;\n\t\t\
    $b = $t;\n\t}\n\tif ($b == 0) {\n\t\treturn $a;\n\t}\n\treturn greatest_common_divisor($b,\
    \ $a % $b);\n}\n", "    if ($a == 0) {\n        return $b;\n    } else if ($b\
    \ == 0) {\n        return $a;\n    } else if ($a > $b) {\n        return greatest_common_divisor($a\
    \ % $b, $b);\n    } else {\n        return greatest_common_divisor($a, $b % $a);\n\
    \    }\n}\n", "  if ($a > $b) {\n    return greatest_common_divisor($b, $a);\n\
    \  }\n  if ($a == 0) {\n    return $b;\n  }\n  return greatest_common_divisor($b\
    \ % $a, $a);\n}\n", "    $a = abs($a);\n    $b = abs($b);\n    while ($b > 0)\
    \ {\n        $c = $a % $b;\n        $a = $b;\n        $b = $c;\n    }\n    return\
    \ $a;\n}\n", "    if ($a < $b) {\n        $c = $a;\n        $a = $b;\n       \
    \ $b = $c;\n    }\n    while ($b > 0) {\n        $c = $a % $b;\n        $a = $b;\n\
    \        $b = $c;\n    }\n    return $a;\n}\n", "    if ($a < 0 || $b < 0) {\n\
    \        return 'Input values should be greater than zero';\n    }\n    if ($a\
    \ < $b) {\n        $tmp = $a;\n        $a = $b;\n        $b = $tmp;\n    }\n \
    \   if ($a % $b == 0) {\n        return $b;\n    }\n    else {\n        return\
    \ greatest_common_divisor($b, $a % $b);\n    }\n}\n\necho greatest_common_divisor(3,\
    \ 5) . '<br>';\necho greatest_common_divisor(25, 15) . '<br>';\necho greatest_common_divisor(300,\
    \ 60) . '<br>';\necho greatest_common_divisor(0, 5) . '<br>';\necho greatest_common_divisor(25,\
    \ 15) . '<br>';\necho greatest_common_divisor(25, 15) . '<br>';\necho greatest_common_divisor(25,\
    \ 15) . '<br>';\necho greatest_common_divisor(25, 15) . '<br>';\necho greatest_common_divisor(25,\
    \ 15) . '<br>';\necho greatest_common_divisor(25, 15) . '<br>';\necho greatest_common_divisor(25,\
    \ 15) . '<br>';\necho greatest_common_divisor(25, 15) . '<br>';\necho greatest_common_divisor(25,\
    \ 15) . '<br>';\necho greatest_common_divisor(25, 15) . '<br>';\necho greatest_common_divisor(25,\
    \ 15) . '<br>';\necho greatest_common_divisor(25, 15) . '<br>';\necho greatest_common_divisor(25,\
    \ 15) . '<br>';\necho greatest_common_divisor(25, 15) . '<br>';\necho greatest_common_divisor(25,\
    \ 15) . '<br>';\necho greatest_common_divisor(25, 15) . '", "    if ($a < $b)\
    \ {\n        $tmp = $a;\n        $a = $b;\n        $b = $tmp;\n    }\n    if ($b\
    \ == 0) {\n        return $a;\n    }\n    return greatest_common_divisor($b, $a\
    \ % $b);\n}\n", "\t// >>> greatest_common_divisor(3, 5)\n\t// 1\n\t// >>> greatest_common_divisor(25,\
    \ 15)\n\t// 5\n\t$r = null;\n\twhile ($r = $a % $b) {\n\t\t$a = $b;\n\t\t$b =\
    \ $r;\n\t}\n\treturn $b;\n}", "    if ($a < $b) {\n        list($a, $b) = [$b,\
    \ $a];\n    }\n    $remainder = $a % $b;\n    if ($remainder === 0) {\n      \
    \  return $b;\n    }\n    return greatest_common_divisor($b, $remainder);\n}\n\
    echo greatest_common_divisor(15, 35);\n", "  if ($a < $b) {\n    $tmp = $a;\n\
    \    $a = $b;\n    $b = $tmp;\n  }\n  if ($b == 0) {\n    return $a;\n  }\n  return\
    \ greatest_common_divisor($b, $a % $b);\n}\n", "    $r = $a % $b;\n    if ($r\
    \ == 0) {\n        return $b;\n    } else {\n        return greatest_common_divisor($b,\
    \ $r);\n    }\n}\n", "    if ($a < $b) {\n        list($a, $b) = [$b, $a];\n \
    \   }\n    while ($b) {\n        $r = $a % $b;\n        $a = $b;\n        $b =\
    \ $r;\n    }\n    return $a;\n}", "    if ($a == 0 || $b == 0) {\n        return\
    \ abs(max($a, $b));\n    }\n    return greatest_common_divisor(min($a, $b), abs($a\
    \ - $b));\n}\n", "    $r = $a % $b;\n    if ($r == 0) {\n        return $b;\n\
    \    } else {\n        return greatest_common_divisor($b, $r);\n    }\n}\n", "\t\
    // your code here\n}\n", "    if ($a < $b) {\n        $t = $a;\n        $a = $b;\n\
    \        $b = $t;\n    }\n    $r = $a % $b;\n    if ($r == 0) {\n        return\
    \ $b;\n    } else {\n        return greatest_common_divisor($b, $r);\n    }\n\
    }\n", "\twhile ($b != 0) {\n\t\t$tmp = $a % $b;\n\t\t$a = $b;\n\t\t$b = $tmp;\n\
    \t}\n\treturn $a;\n}\n", "    // Write your code here\n    // To print results\
    \ to the standard output you can use print\n    // Example: print \"Hello world!\"\
    ;\n    $gcd = 1;\n    for ($i = 2; $i <= min($a, $b); $i++) {\n        if ($a\
    \ % $i == 0 && $b % $i == 0) {\n            $gcd = $i;\n        }\n    }\n   \
    \ return $gcd;\n}\n\nprint greatest_common_divisor(3, 5) . \"\\n\";\nprint greatest_common_divisor(25,\
    \ 15) . \"\\n\";", "    $remainder = $a % $b;\n    if ($remainder === 0) {\n \
    \       return $b;\n    } else {\n        return greatest_common_divisor($b, $remainder);\n\
    \    }\n}\n", "\tif ($a < $b) {\n\t\t$a = $a + $b;\n\t\t$b = $a - $b;\n\t\t$a\
    \ = $a - $b;\n\t}\n\t$n = $a % $b;\n\tif ($n == 0) {\n\t\treturn $b;\n\t} else\
    \ {\n\t\treturn greatest_common_divisor($b, $n);\n\t}\n}", "  if ($a < $b) {\n\
    \    $tmp = $a;\n    $a = $b;\n    $b = $tmp;\n  }\n  if ($b === 0) {\n    return\
    \ $a;\n  }\n  return greatest_common_divisor($b, $a % $b);\n}\n\n$inputs = [\n\
    \  [3, 5],\n  [25, 15],\n];\n\nforeach ($inputs as $args) {\n  printf(\"greatest_common_divisor(%d,\
    \ %d) = %d\\n\", $args[0], $args[1], greatest_common_divisor($args[0], $args[1]));\n\
    }", "    return ($a % $b) ? greatest_common_divisor($b, $a % $b) : $b;\n}\n",
  "  // Your code here\n}\n", "    if ($a === 0 || $b === 0) return 0;\n    $a = abs($a);\n\
    \    $b = abs($b);\n    while ($a !== $b) {\n        if ($a > $b) {\n        \
    \    $a = $a - $b;\n        } else {\n            $b = $b - $a;\n        }\n \
    \   }\n    return $a;\n}\n\necho greatest_common_divisor(3, 5), \"\\n\";\necho\
    \ greatest_common_divisor(25, 15), \"\\n\";\necho greatest_common_divisor(0, 0),\
    \ \"\\n\";\necho greatest_common_divisor(0, 15), \"\\n\";\necho greatest_common_divisor(3,\
    \ 0), \"\\n\";\necho greatest_common_divisor(15, 0), \"\\n\";\necho greatest_common_divisor(21,\
    \ 15), \"\\n\";\n", "    if ($a == 0) {\n        return $b;\n    }\n    while\
    \ ($b != 0) {\n        if ($a > $b) {\n            $a = $a - $b;\n        } else\
    \ {\n            $b = $b - $a;\n        }\n    }\n    return $a;\n}\n", "  //\
    \ TODO: implement this function\n  return 1;\n}\n", "    $a = abs($a);\n    $b\
    \ = abs($b);\n    if ($a < $b) {\n        $a = $a ^ $b;\n        $b = $a ^ $b;\n\
    \        $a = $a ^ $b;\n    }\n    while ($b) {\n        $tmp = $a % $b;\n   \
    \     $a = $b;\n        $b = $tmp;\n    }\n    return $a;\n}\n", "  if ($a ==\
    \ 0) {\n    return $b;\n  }\n  elseif ($b == 0) {\n    return $a;\n  }\n  else\
    \ {\n    $remainder = $a % $b;\n    return greatest_common_divisor($b, $remainder);\n\
    \  }\n}\n", "    $min = min($a, $b);\n    $max = max($a, $b);\n    $factor = $min;\n\
    \    while ($factor > 1) {\n        if ($min % $factor == 0 && $max % $factor\
    \ == 0) {\n            return $factor;\n        }\n        $factor -= 1;\n   \
    \ }\n    return 1;\n}\n", "    if ($a > $b) {\n        $tmp = $a;\n        $a\
    \ = $b;\n        $b = $tmp;\n    }\n    $gcd = 1;\n    for ($i = 2; $i <= $a;\
    \ $i++) {\n        if ($a % $i == 0 && $b % $i == 0) {\n            $gcd = $i;\n\
    \        }\n    }\n    return $gcd;\n}", "  if ($a < $b) {\n    $c = $a;\n   \
    \ $a = $b;\n    $b = $c;\n  }\n  $d = $a % $b;\n  if ($d === 0) {\n    return\
    \ $b;\n  } else {\n    return greatest_common_divisor($b, $d);\n  }\n}\n", "\t\
    // TODO\n}\n", "  $temp;\n  while ($b != 0) {\n    $temp = $a % $b;\n    $a =\
    \ $b;\n    $b = $temp;\n  }\n  return $a;\n}\n", "\tif ($a < $b) {\n\t\t$tmp =\
    \ $a;\n\t\t$a = $b;\n\t\t$b = $tmp;\n\t}\n\tif ($b > 0) {\n\t\treturn greatest_common_divisor($b,\
    \ $a % $b);\n\t} else {\n\t\treturn $a;\n\t}\n}\n\necho \"greatest_common_divisor(3,\
    \ 5): \" . greatest_common_divisor(3, 5) . \"\\n\";\necho \"greatest_common_divisor(25,\
    \ 15): \" . greatest_common_divisor(25, 15) . \"\\n\";\n", "  if ($a < 0 || $b\
    \ < 0) {\n    return -1;\n  }\n  // Make sure a >= b\n  if ($a < $b) {\n    $temp\
    \ = $a;\n    $a = $b;\n    $b = $temp;\n  }\n  while ($b > 0) {\n    $temp = $b;\n\
    \    $b = $a % $b;\n    $a = $temp;\n  }\n  return $a;\n}\n", "  // If a and b\
    \ are both positive, it is fine\n  if ($a > 0 && $b > 0) {\n    // First, let's\
    \ swap two integers if $a < $b\n    if ($a < $b) {\n      $tmp = $a;\n      $a\
    \ = $b;\n      $b = $tmp;\n    }\n    // Second, let's find a GCD\n    while ($b\
    \ != 0) {\n      $c = $a % $b;\n      $a = $b;\n      $b = $c;\n    }\n    //\
    \ Return a GCD of two integers $a and $b\n    return $a;\n  }\n  // If a and b\
    \ are both negative, it is also fine\n  else if ($a < 0 && $b < 0) {\n    // First,\
    \ let's swap two integers if $a < $b\n    if ($a < $b) {\n      $tmp = $a;\n \
    \     $a = $b;\n      $b = $tmp;\n    }\n    // Second, let's find a GCD\n   \
    \ while ($b != 0) {\n      $c = $a % $b;\n      $a = $b;\n      $b = $c;\n   \
    \ }\n    // Return a GCD of two integers $a and $b\n    return $a;\n  }\n  //\
    \ If only one of the integers is negative, return \"1\"\n  else {\n    return\
    \ 1;\n  }\n}", "    $r = $a % $b;\n    return $r != 0 ? greatest_common_divisor($b,\
    \ $r) : $b;\n}\n\necho greatest_common_divisor(25, 15);", "  if($a < $b) {\n \
    \   $gcd = $a;\n  } else {\n    $gcd = $b;\n  }\n  for($i = 1; $i <= $gcd; $i++)\
    \ {\n    if($a % $i == 0 && $b % $i == 0) {\n      $result = $i;\n    }\n  }\n\
    \  return $result;\n}", "    return $b == 0 ? $a : greatest_common_divisor($b,\
    \ $a % $b);\n}\n", "\t// Write your code here\n\n\t$larger_number = max($a, $b);\n\
    \t$smaller_number = min($a, $b);\n\n\twhile ($smaller_number != 0) {\n\t\t$remainder\
    \ = $larger_number % $smaller_number;\n\t\t$larger_number = $smaller_number;\n\
    \t\t$smaller_number = $remainder;\n\t}\n\n\treturn $larger_number;\n}\n\ngreatest_common_divisor(25,\
    \ 15);\n", "    if ($a == 0 || $b == 0) {\n        return 0;\n    }\n    if ($a\
    \ < $b) {\n        $t = $a;\n        $a = $b;\n        $b = $t;\n    }\n    while\
    \ ($b != 0) {\n        $t = $b;\n        $b = $a % $b;\n        $a = $t;\n   \
    \ }\n    return $a;\n}\n", "\twhile ($b > 0) {\n\t\t$remainder = $a % $b;\n\t\t\
    $a = $b;\n\t\t$b = $remainder;\n\t}\n\treturn $a;\n}\n", "    return ($a % $b\
    \ == 0) ? $b : greatest_common_divisor($b, $a % $b);\n}\n", "\t$r = $a % $b;\n\
    \tif ($r == 0) {\n\t\treturn $b;\n\t} else {\n\t\treturn greatest_common_divisor($b,\
    \ $r);\n\t}\n}\n\necho greatest_common_divisor(25, 15) . \"\\n\";", "    $r =\
    \ $a % $b;\n    while ($r != 0) {\n        $a = $b;\n        $b = $r;\n      \
    \  $r = $a % $b;\n    }\n    return $b;\n}\n", "  // your code here\n}\n", " \
    \   if ($a == 0 && $b == 0) {\n        return 0;\n    }\n    $abs_a = abs($a);\n\
    \    $abs_b = abs($b);\n    while ($abs_a != $abs_b) {\n        if ($abs_a > $abs_b)\
    \ {\n            $abs_a = $abs_a - $abs_b;\n        } else {\n            $abs_b\
    \ = $abs_b - $abs_a;\n        }\n    }\n    return $abs_a;\n}\necho greatest_common_divisor(3,\
    \ 5);\necho '<br>';\necho greatest_common_divisor(25, 15);", "    return ($a %\
    \ $b) ? greatest_common_divisor($b, $a % $b) : $b;\n}\n", "    if ($a < $b) {\n\
    \        $a += $b;\n        $b = $a - $b;\n        $a -= $b;\n    }\n    if ($b\
    \ != 0) {\n        return greatest_common_divisor($b, $a % $b);\n    } else {\n\
    \        return $a;\n    }\n}\n", "    if ($a < $b) {\n        $tmp = $a;\n  \
    \      $a = $b;\n        $b = $tmp;\n    }\n    $remainder = $a % $b;\n    if\
    \ ($remainder == 0) {\n        return $b;\n    } else {\n        return greatest_common_divisor($b,\
    \ $remainder);\n    }\n}\n", "    // YOUR CODE HERE\n    $gcd = 1;\n    $small\
    \ = min($a, $b);\n    for ($i = 1; $i <= $small; $i++) {\n        if (($a % $i\
    \ == 0) && ($b % $i == 0)) {\n            $gcd = $i;\n        }\n    }\n    return\
    \ $gcd;\n}\n", "    if ($a < $b) {\n        list($a, $b) = [$b, $a];\n    }\n\
    \    if ($b == 0) {\n        return $a;\n    }\n    return greatest_common_divisor($b,\
    \ $a % $b);\n}\n", "    $gcd = 1;\n    $divisor = 1;\n    while ($divisor <= $a\
    \ && $divisor <= $b) {\n        if ($a % $divisor == 0 && $b % $divisor == 0)\
    \ {\n            $gcd = $divisor;\n        }\n        $divisor++;\n    }\n   \
    \ return $gcd;\n}\n", "    $gcd = gmp_gcd($a, $b);\n    return $gcd;\n}", "  if\
    \ ($a == 0) return $b;\n  if ($b == 0) return $a;\n  if ($a > $b) {\n    return\
    \ greatest_common_divisor($a % $b, $b);\n  } else {\n    return greatest_common_divisor($a,\
    \ $b % $a);\n  }\n}\n", "    // Your code goes here!\n    // Hint: Use a while\
    \ loop and the modulo operator\n}", "    // assume $a is greater than $b\n   \
    \ if ($a < $b) {\n        // switch $a and $b\n        $c = $a;\n        $a =\
    \ $b;\n        $b = $c;\n    }\n    $remainder = $a % $b;\n    if ($remainder\
    \ == 0) {\n        return $b;\n    } else {\n        return greatest_common_divisor($b,\
    \ $remainder);\n    }\n}\n", "    // Your code here\n    if($a < 0 || $b < 0)\
    \ {\n    \treturn 0;\n    } else if($a == 0 || $b == 0) {\n    \treturn $a + $b;\n\
    \    } else {\n    \twhile($a != $b) {\n    \t\tif($a > $b) {\n    \t\t\t$a =\
    \ $a - $b;\n    \t\t} else {\n    \t\t\t$b = $b - $a;\n    \t\t}\n    \t}\n  \
    \  \treturn $a;\n    }\n}\n", "    // Your code here...\n}\n", "    return ($a\
    \ > $b) ? gcd($a, $b) : gcd($b, $a);\n}\n", "    $min = min($a, $b);\n    $max\
    \ = max($a, $b);\n    $gcd = $min;\n    while ($gcd > 1) {\n        if ($min %\
    \ $gcd == 0 && $max % $gcd == 0) {\n            return $gcd;\n        }\n    \
    \    $gcd--;\n    }\n    return 1;\n}\n", "    $r = $a % $b;\n    while ($r !==\
    \ 0) {\n        $a = $b;\n        $b = $r;\n        $r = $a % $b;\n    }\n   \
    \ return $b;\n}", "\tif ($a < $b) {\n\t\tlist($a, $b) = array($b, $a);\n\t}\n\t\
    if ($b === 0) {\n\t\treturn $a;\n\t}\n\treturn greatest_common_divisor($b, $a\
    \ % $b);\n}\n", "    $min = min($a, $b);\n    $max = max($a, $b);\n    $divisor\
    \ = $min;\n    while ($divisor > 1) {\n        if ($min % $divisor == 0 && $max\
    \ % $divisor == 0) {\n            return $divisor;\n        }\n        $divisor--;\n\
    \    }\n    return 1;\n}\n", "    $r = $a % $b;\n    return $r == 0 ? $b : greatest_common_divisor($b,\
    \ $r);\n}\n", "    $c = $a % $b;\n    if ($c == 0) {\n        return $b;\n   \
    \ } else {\n        return greatest_common_divisor($b, $c);\n    }\n}\n\necho\
    \ greatest_common_divisor(25, 15);\n", "    $c = $a % $b;\n    if ($c == 0) {\n\
    \        return $b;\n    } else {\n        return greatest_common_divisor($b,\
    \ $c);\n    }\n}\n\necho greatest_common_divisor(25, 15);", "    if ($a < 0) $a\
    \ = -$a;\n    if ($b < 0) $b = -$b;\n    if ($a == 0) return $b;\n    if ($b ==\
    \ 0) return $a;\n    return greatest_common_divisor($b, $a % $b);\n}\n", "   \
    \ if ($a == 0 || $b == 0) return 0;\n    $gcd = 1;\n    for ($i = 2; $i <= $a\
    \ && $i <= $b; $i++) {\n        if ($a % $i == 0 && $b % $i == 0) {\n        \
    \    $gcd = $i;\n        }\n    }\n    return $gcd;\n}\n", "    return gcd($a,\
    \ $b);\n}\n\necho greatest_common_divisor(3, 5);\n", "    if ($a == 0) {\n   \
    \     return $b;\n    }\n    if ($b == 0) {\n        return $a;\n    }\n    if\
    \ ($a > $b) {\n        return greatest_common_divisor($a % $b, $b);\n    } else\
    \ {\n        return greatest_common_divisor($a, $b % $a);\n    }\n}\n", "    if\
    \ (abs($a) > abs($b)) {\n        $t = $a;\n        $a = $b;\n        $b = $t;\n\
    \    }\n    $r = $b % $a;\n    while ($r > 0) {\n        $b = $a;\n        $a\
    \ = $r;\n        $r = $b % $a;\n    }\n    return $a;\n}\n", "    if ($a === 0)\
    \ {\n        return $b;\n    }\n    if ($b === 0) {\n        return $a;\n    }\n\
    \    return greatest_common_divisor($b, $a % $b);\n}\n", "    $a = abs($a);\n\
    \    $b = abs($b);\n    while($b) {\n        $remainder = $a % $b;\n        $a\
    \ = $b;\n        $b = $remainder;\n    }\n    return $a;\n}\n$a = 3;\n$b = 5;\n\
    print greatest_common_divisor($a, $b);\nprint \"\\n\";\n$a = 25;\n$b = 15;\nprint\
    \ greatest_common_divisor($a, $b);\nprint \"\\n\";", "    if ($a == 0) {\n   \
    \     return $b;\n    }\n    if ($b == 0) {\n        return $a;\n    }\n    $r\
    \ = $a % $b;\n    return greatest_common_divisor($b, $r);\n}\n", "    if ($a >\
    \ $b) {\n        $a = $a + $b;\n        $b = $a - $b;\n        $a = $a - $b;\n\
    \    }\n    if ($a == 0) {\n        return $b;\n    }\n    if ($b % $a == 0) {\n\
    \        return $a;\n    }\n    return greatest_common_divisor($b % $a, $a);\n\
    }\n", "\tif ($a < $b) {\n\t\treturn greatest_common_divisor($b, $a);\n\t}\n\t\
    if ($b == 0) {\n\t\treturn $a;\n\t}\n\treturn greatest_common_divisor($b, $a %\
    \ $b);\n}\n", "\t$m = min($a, $b);\n\t$M = max($a, $b);\n\t$i = 1;\n\t$gcd = 1;\n\
    \twhile ($i <= $m) {\n\t\tif ($m % $i == 0 && $M % $i == 0) {\n\t\t\t$gcd = $i;\n\
    \t\t}\n\t\t$i += 1;\n\t}\n\treturn $gcd;\n}\n", "\tif ($a == 0 || $b == 0) {\n\
    \t\treturn abs(max($a, $b));\n\t}\n\treturn greatest_common_divisor(min($a, $b),\
    \ abs($a - $b));\n}\n", "\t// TODO\n}\n", "    if ($a < $b) {\n        $temp =\
    \ $a;\n        $a = $b;\n        $b = $temp;\n    }\n    if ($a % $b == 0) {\n\
    \        return $b;\n    } else {\n        return greatest_common_divisor($b,\
    \ $a % $b);\n    }\n}\n", "  $r = $a % $b;\n  while ($r > 0) {\n    $a = $b;\n\
    \    $b = $r;\n    $r = $a % $b;\n  }\n  return $b;\n}\n", "  $r = $a % $b;\n\
    \  if ($r == 0) return $b;\n  return greatest_common_divisor($b, $r);\n}\n", " \
    \   if ($a % $b == 0) {\n        return $b;\n    } else {\n        return greatest_common_divisor($b,\
    \ $a % $b);\n    }\n}\n", "\treturn 0;\n}\n", "    $max = ($a > $b) ? $a : $b;\n\
    \    $min = ($a < $b) ? $a : $b;\n    if($max % $min == 0) {\n        return $min;\n\
    \    } else {\n        return greatest_common_divisor($min, $max % $min);\n  \
    \  }\n}\n", "    if ($a > $b) {\n        return get_gcd($a, $b);\n    }\n    return\
    \ get_gcd($b, $a);\n}\n", "\treturn $b == 0 ? $a : greatest_common_divisor($b,\
    \ $a % $b);\n}\n", "  while ($b > 0) {\n    $c = $a % $b;\n    $a = $b;\n    $b\
    \ = $c;\n  }\n  return $a;\n}\n\necho greatest_common_divisor(3, 5);\necho \"\\\
    n\";\necho greatest_common_divisor(25, 15);\necho \"\\n\";", "\t// Write your\
    \ code here\n\t// To print results to the standard output you can use print\n\t\
    // Example: print \"Hello world!\";\n    $min = min($a, $b);\n    $max = max($a,\
    \ $b);\n    $c = $max % $min;\n    if ($c == 0) {\n        return $min;\n    }\
    \ else {\n        return greatest_common_divisor($min, $c);\n    }\n}", "    return\
    \ $b ? greatest_common_divisor($b, $a % $b) : $a;\n}\n", "  $t = $a % $b;\n  if\
    \ ($t == 0) {\n    return $b;\n  } else {\n    return greatest_common_divisor($b,\
    \ $t);\n  }\n}\n", "    if ($a < $b) {\n        $temp = $a;\n        $a = $b;\n\
    \        $b = $temp;\n    }\n    $rest = 0;\n    while ($b != 0) {\n        $rest\
    \ = $a % $b;\n        $a = $b;\n        $b = $rest;\n    }\n    return $a;\n}",
  "\tif ($a < $b) {\n\t\t$a = $a + $b;\n\t\t$b = $a - $b;\n\t\t$a = $a - $b;\n\t}\n\
    \twhile ($b != 0) {\n\t\t$a = $a % $b;\n\t\t$a = $a + $b;\n\t\t$b = $a - $b;\n\
    \t\t$a = $a - $b;\n\t}\n\treturn $a;\n}\n", "  if ($a < $b) {\n    return greatest_common_divisor($b,\
    \ $a);\n  }\n  if ($b == 0) {\n    return $a;\n  }\n  return greatest_common_divisor($b,\
    \ $a % $b);\n}\necho greatest_common_divisor(45, 54) . \"\\n\";\necho greatest_common_divisor(28,\
    \ 15) . \"\\n\";\necho greatest_common_divisor(25, 15) . \"\\n\";\necho greatest_common_divisor(3,\
    \ 5) . \"\\n\";", "    return $b == 0 ? $a : greatest_common_divisor($b, $a %\
    \ $b);\n}\n", "  $a = (int)$a;\n  $b = (int)$b;\n  $temp = 0;\n  while ($b !=\
    \ 0) {\n    $temp = $a % $b;\n    $a = $b;\n    $b = $temp;\n  }\n  return abs($a);\n\
    }\n", "    if ($a == 0 || $b == 0) {\n        return max($a, $b);\n    }\n   \
    \ if ($a == $b) {\n        return $a;\n    }\n    $gcd = 1;\n    for ($i = 1;\
    \ $i <= $a && $i <= $b; $i++) {\n        if ($a % $i == 0 && $b % $i == 0) {\n\
    \            $gcd = $i;\n        }\n    }\n    return $gcd;\n}"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

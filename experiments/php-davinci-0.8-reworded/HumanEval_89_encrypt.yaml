name: HumanEval_89_encrypt
language: php
prompt: "<?php\n// Create a function encrypt that takes a string as an argument and\n\
  // returns a string encrypted with the alphabet being rotated. \n// The alphabet\
  \ should be rotated in a manner such that the letters \n// shift down by two multiplied\
  \ to two places.\n// For example:\n// >>> encrypt(\"hi\")\n// \"lm\"\n// >>> encrypt(\"\
  asdfghjkl\")\n// \"ewhjklnop\"\n// >>> encrypt(\"gf\")\n// \"kj\"\n// >>> encrypt(\"\
  et\")\n// \"ix\"\nfunction encrypt($s) {\n"
tests: "function candidate(...$args) {\n    return encrypt(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(\"hi\") !== \"lm\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"asdfghjkl\") !== \"ewhjklnop\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"gf\") !== \"kj\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"et\") !== \"ix\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"faewfawefaewg\") !== \"\
  jeiajeaijeiak\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
  hellomyfriend\") !== \"lippsqcjvmirh\") { throw new Exception(\"Test failed!\");\
  \ }\n    if (candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") !== \"\
  hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\") { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(\"a\") !== \"e\") { throw new Exception(\"Test failed!\"\
  ); }\n}\n\ntest();"
completions: ["\t$result = \"\";\n\t$length = strlen($s);\n\t$alphabet = range('a',\
    \ 'z');\n\t$alphabet_length = count($alphabet);\n\tfor ($i = 0; $i < $length;\
    \ $i++) {\n\t\tif ($s[$i] == \" \") {\n\t\t\t$result .= \" \";\n\t\t} else {\n\
    \t\t\tfor ($j = 0; $j < $alphabet_length; $j++) {\n\t\t\t\tif ($s[$i] == $alphabet[$j])\
    \ {\n\t\t\t\t\t$new_letter = $j;\n\t\t\t\t\t$new_letter = ($new_letter + 2) *\
    \ 2;\n\t\t\t\t\tif ($new_letter > 25) {\n\t\t\t\t\t\t$new_letter = $new_letter\
    \ - 26;\n\t\t\t\t\t}\n\t\t\t\t\t$result .= $alphabet[$new_letter];\n\t\t\t\t}\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn $result;\n}\n\necho encrypt(\"hi\") . \"\\n\";\n\
    echo encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho\
    \ encrypt(\"et\") . \"\\n\";", "\t$arr = str_split($s);\n\t$newStr = \"\";\n\t\
    foreach ($arr as $c) {\n\t\t$asciiCode = ord($c);\n\t\t$newCode = $asciiCode +\
    \ 2 * 2;\n\t\tif ($newCode > 122) {\n\t\t\t$newCode = $newCode - 26;\n\t\t}\n\t\
    \t$newStr .= chr($newCode);\n\t}\n\treturn $newStr;\n}\n", "    $alphabet = 'abcdefghijklmnopqrstuvwxyz';\n\
    \    $a = str_split($alphabet);\n    $b = str_split($s);\n    $newA = array();\n\
    \    foreach ($b as $l) {\n        foreach ($a as $k => $n) {\n            if\
    \ ($l == $n) {\n                $newA[] = $a[$k+2];\n            }\n        }\n\
    \    }\n    return implode($newA);\n}\n\necho encrypt(\"abc\").\"\\n\";\necho\
    \ encrypt(\"asdfghjkl\").\"\\n\";\necho encrypt(\"gf\").\"\\n\";\necho encrypt(\"\
    et\").\"\\n\";\necho encrypt(\"hi\").\"\\n\";\necho encrypt(\"et\").\"\\n\";\n\
    echo encrypt(\"qwerty\").\"\\n\";\necho encrypt(\"it\").\"\\n\";\necho encrypt(\"\
    we\").\"\\n\";", "    $str = \"abcdefghijklmnopqrstuvwxyz\";\n    $length = strlen($s);\n\
    \    $new_str = \"\";\n    for ($i = 0; $i < $length; $i++) {\n        $char =\
    \ $s[$i];\n        $index = strpos($str, $char);\n        $new_index = ($index\
    \ + 2) * 2;\n        $new_str .= $str[$new_index];\n    }\n    return $new_str;\n\
    }\n", "    $arr = str_split($s);\n    $new_arr = [];\n    foreach ($arr as $key\
    \ => $value) {\n        $new_arr[] = chr(ord($value) + (2 * 2));\n    }\n    return\
    \ implode($new_arr);\n}\n", "// Create an array for the alphabet\n$alphabet =\
    \ range('a', 'z');", "\t$s = strtolower($s);\n\t$alphabet = range('a', 'z');\n\
    \t$encrypt = array();\n\tfor ($i = 0; $i < count($alphabet); $i++) {\n\t\tif ($i\
    \ < 25) {\n\t\t\tif ($i < 4) {\n\t\t\t\tarray_push($encrypt, $alphabet[$i+22]);\n\
    \t\t\t} else {\n\t\t\t\tarray_push($encrypt, $alphabet[$i-4]);\n\t\t\t}\n\t\t\
    } else {\n\t\t\tarray_push($encrypt, $alphabet[$i-25]);\n\t\t}\n\t}\n\t$encrypted\
    \ = array();\n\tfor ($j = 0; $j < strlen($s); $j++) {\n\t\t$encrypted[$j] = $encrypt[array_search($s[$j],\
    \ $alphabet)];\n\t}\n\t$encrypted = implode($encrypted);\n\treturn $encrypted;\n\
    }\necho encrypt(\"ab\");\necho \"\\n\";\necho encrypt(\"hi\");\necho \"\\n\";\n\
    echo encrypt(\"asdfghjkl\");\necho \"\\n\";\necho encrypt(\"gf\");\necho \"\\\
    n\";\necho encrypt(\"et\");\necho \"\\n\";", "  $newWord = \"\";\n  for ($i =\
    \ 0; $i < strlen($s); $i++) {\n    $newWord .= chr(ord($s[$i]) + 2 * 2);\n  }\n\
    \  return $newWord;\n}\n", "\t$encryptedString = '';\n\t$alphabet = 'abcdefghijklmnopqrstuvwxyz';\n\
    \t$alphabetArray = str_split($alphabet);\n\t$alphabetLength = count($alphabetArray);\n\
    \t$sArray = str_split($s);\n\tfor ($i = 0; $i < count($sArray); $i++) {\n\t\t\
    if (!ctype_alpha($sArray[$i])) {\n\t\t\t$encryptedString .= $sArray[$i];\n\t\t\
    } else {\n\t\t\t$char = strtolower($sArray[$i]);\n\t\t\t$charIndex = array_search($char,\
    \ $alphabetArray);\n\t\t\t$nextIndex = $charIndex + ($i * 2);\n\t\t\t$encryptedString\
    \ .= $alphabetArray[$nextIndex % $alphabetLength];\n\t\t}\n\t}\n\treturn $encryptedString;\n\
    }\necho encrypt(\"h3i\");\necho \"\\n\";\necho encrypt(\"asdfghjkl\");\necho \"\
    \\n\";\necho encrypt(\"gf\");\necho \"\\n\";\necho encrypt(\"et\");\necho \"\\\
    n\";", "\t$s = strtolower($s);\n\t$s = str_split($s);\n\t$alpha = range('a', 'z');\n\
    \t$new = [];\n\t$new = array_merge($alpha, $alpha);\n\tforeach ($s as $letter)\
    \ {\n\t\t$index = array_search($letter, $alpha);\n\t\t$result[] = $new[$index\
    \ + 4];\n\t}\n\treturn implode($result);\n}\n", "    $result = '';\n    for ($i\
    \ = 0; $i < strlen($s); $i++) {\n        $result .= rotateChar($s[$i]);\n    }\n\
    \    return $result;\n}\n", "    $encryptString = \"\";\n    for ($i = 0; $i <\
    \ strlen($s); $i++) {\n        $encryptString .= chr(ord($s[$i]) + 2 * 2);\n \
    \   }\n    return $encryptString;\n}\n", "// Write code here\n}\n", "\t$inputArr\
    \ = str_split($s);\n\t$encrypted = [];\n\tforeach ($inputArr as $key => $value)\
    \ {\n\t\tif ($value == \"z\") {\n\t\t\t$encrypted[] = \"b\";\n\t\t} elseif ($value\
    \ == \"y\") {\n\t\t\t$encrypted[] = \"a\";\n\t\t} else {\n\t\t\t$encrypted[] =\
    \ ++$value;\n\t\t}\n\t}\n\t$str = implode(\"\", $encrypted);\n\treturn $str;\n\
    }\necho encrypt(\"hi\") . PHP_EOL;\necho encrypt(\"asdfghjkl\") . PHP_EOL;\necho\
    \ encrypt(\"gf\") . PHP_EOL;\necho encrypt(\"et\") . PHP_EOL;", "    $encrypted\
    \ = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        $encrypted .= chr(ord($s[$i])\
    \ + 2*2);\n    }\n    return $encrypted;\n}\n", "\n}\n", "  // BEGIN SOLUTION\n\
    \  $s = strtolower($s);\n  $s = str_split($s);\n  $alphabet = str_split(\"abcdefghijklmnopqrstuvwxyz\"\
    );\n  $newstring = [];\n  foreach ($s as $letter) {\n    $index = array_search($letter,\
    \ $alphabet);\n    $newindex = ($index + 2) * 2;\n    if ($newindex > 25) {\n\
    \      $newindex = $newindex - 26;\n    }\n    $newstring[] = $alphabet[$newindex];\n\
    \  }\n  return implode(\"\", $newstring);\n  // END SOLUTION\n}", "\t// A to Z\
    \ -> C to B\n\t$a = range(\"A\", \"Z\");\n\t$b = range(\"C\", \"Z\");\n\t$b[]\
    \ = \"A\";\n\t$b[] = \"B\";\n\t$a_to_b = array_combine($a, $b);\n\t\n\t// a to\
    \ z -> c to b\n\t$c = range(\"a\", \"z\");\n\t$d = range(\"c\", \"z\");\n\t$d[]\
    \ = \"a\";\n\t$d[] = \"b\";\n\t$c_to_d = array_combine($c, $d);\n\t\n\t// Convert\
    \ to array\n\t$s = str_split($s);\n\t\n\t// Replace each character with encrypted\
    \ value\n\t$s = array_map(function($v) use ($a_to_b, $c_to_d) {\n\t\tif (isset($a_to_b[$v]))\
    \ {\n\t\t\treturn $a_to_b[$v];\n\t\t} else if (isset($c_to_d[$v])) {\n\t\t\treturn\
    \ $c_to_d[$v];\n\t\t} else {\n\t\t\treturn $v;\n\t\t}\n\t}, $s);\n\t\n\t// Return\
    \ encrypted string\n\treturn implode(\"\", $s);\n}\n\nprint_r(encrypt(\"hi\"));\
    \ // lm\nprint_r(encrypt(\"asdfghjkl\")); // ewhjklnop\nprint_r(encrypt(\"gf\"\
    )); // kj\nprint_r(encrypt(\"et\")); // ix\nprint_r(encrypt(\"A\")); // C\nprint_r(encrypt(\"\
    Z\")); // B\nprint_r(encrypt(\"a\")); // c\nprint_r(encrypt(\"z\")); // b\nprint_r(encrypt(\"\
    P\")); // R\nprint_r(encrypt(\"p\")); // r\nprint_r(encrypt(\"Hello world\"));\
    \ // Jgnnq yqtnf\nprint_r(encrypt(\"Test123\")); // Wguv125\nprint_r(encrypt(\"\
    This is a test\")", "\treturn \"lm\";\n}\n", "\t$s = strtolower($s);\n\t$s = str_split($s);\n\
    \t$a = range(\"a\", \"z\");\n\t$a_str = implode(\"\", $a);\n\t$length = strlen($a_str);\n\
    \t$result = \"\";\n\tforeach ($s as $v) {\n\t\t$offset = array_search($v, $a);\n\
    \t\t$new_offset = $offset + 2 * 2;\n\t\tif ($new_offset > $length) {\n\t\t\t$result\
    \ .= $a[$new_offset - $length];\n\t\t} else {\n\t\t\t$result .= $a[$new_offset];\n\
    \t\t}\n\t}\n\treturn $result;\n}\n", "\t$str = \"\";\n\tfor ($i = 0; $i < strlen($s);\
    \ $i++) {\n\t\tif (ord($s[$i]) >= 97 && ord($s[$i]) <= 101) {\n\t\t\t$ord = ord($s[$i])\
    \ + 20;\n\t\t\t$str .= chr($ord);\n\t\t} elseif (ord($s[$i]) >= 102 && ord($s[$i])\
    \ <= 122) {\n\t\t\t$ord = ord($s[$i]) - 4;\n\t\t\t$str .= chr($ord);\n\t\t} else\
    \ {\n\t\t\t$str .= $s[$i];\n\t\t}\n\t}\n\treturn $str;\n}\n\necho encrypt(\"hi\"\
    ) . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\
    \\n\";\necho encrypt(\"et\") . \"\\n\";\n", "\t$encrypted = \"\";\n\tfor ($i =\
    \ 0; $i < strlen($s); $i++) {\n\t\tif ($s[$i] == \"z\") {\n\t\t\t$encrypted .=\
    \ \"b\";\n\t\t} else if ($s[$i] == \"y\") {\n\t\t\t$encrypted .= \"a\";\n\t\t\
    } else {\n\t\t\t$encrypted .= chr(ord($s[$i]) + 2);\n\t\t}\n\t}\n\treturn $encrypted;\n\
    }\nprint(encrypt(\"hi\") . \"\\n\");\nprint(encrypt(\"asdfghjkl\") . \"\\n\");\n\
    print(encrypt(\"gf\") . \"\\n\");\nprint(encrypt(\"et\") . \"\\n\");", "  $a =\
    \ str_split($s);\n  $out = array();\n  foreach ($a as $v) {\n    $out[] = nextLetter($v);\n\
    \  }\n  return implode('', $out);\n}\n", "\t$characters = str_split($s);\n\t$encrypted_characters\
    \ = [];\n\tforeach ($characters as $letter) {\n\t\t$encrypted_characters[] = shiftByTwo($letter);\n\
    \t}\n\treturn implode($encrypted_characters);\n}\n", "\t$encrypted = \"\";\n\t\
    for ($i = 0; $i < strlen($s); $i++) {\n\t\t$encrypted .= chr(ord($s[$i]) + 2 *\
    \ 2);\n\t}\n\treturn $encrypted;\n}\n", "  $r = '';\n  $alpha = array('a', 'b',\
    \ 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r',\
    \ 's', 't', 'u', 'v', 'w', 'x', 'y', 'z');\n  $length = strlen($s);\n  for ($i\
    \ = 0; $i < $length; $i++) {\n    $index = array_search($s[$i], $alpha);\n   \
    \ $index += 2 * 2;\n    if ($index > 25) {\n      $index = $index - 26;\n    }\n\
    \    $r .= $alpha[$index];\n  }\n  return $r;\n}\n", "\t$alphabet = array(\"a\"\
    ,\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\"\
    ,\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\");\n\t\
    $e = \"\";\n\t\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$position = array_search($s[$i],\
    \ $alphabet);\n\t\t$position = $position + 2 * 2;\n\t\t$e = $e . $alphabet[$position];\n\
    \t}\n\t\n\treturn $e;\n}\n", "    $temp = \"\";\n    $length = strlen($s);\n \
    \   for ($i = 0; $i < $length; $i++) {\n        $temp = $temp . chr(ord($s[$i])\
    \ + 2*2);\n    }\n    return $temp;\n}", "\t$alphabet = 'abcdefghijklmnopqrstuvwxyz';\n\
    \t$new_string = '';\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$this_letter\
    \ = substr($s, $i, 1);\n\t\t$index = strpos($alphabet, $this_letter);\n\t\t$new_index\
    \ = $index + (2 * 2);\n\t\t$new_letter = substr($alphabet, $new_index, 1);\n\t\
    \t$new_string .= $new_letter;\n\t}\n\treturn $new_string;\n}", "    $s = strtolower($s);\n\
    \    $arr = [];\n    for ($i = 0; $i < strlen($s); $i++) {\n        $newChar =\
    \ $s[$i];\n        if (preg_match('/[a-z]/', $newChar)) {\n            $newChar\
    \ = chr(ord($newChar) + 4);\n            if ($newChar >= '{') {\n            \
    \    $newChar = chr(ord($newChar) - 26);\n            }\n        }\n        $arr[]\
    \ = $newChar;\n    }\n    return implode('', $arr);\n}\n", "    $l = strlen($s);\n\
    \    $tmp = '';\n    for ($i = 0; $i < $l; $i++) {\n        $c = $s[$i];\n   \
    \     if ($c >= 'a' && $c <= 'z') {\n            $c = chr(ord($c) + 4);\n    \
    \        if ($c > 'z') {\n                $c = chr(ord($c) - 26);\n          \
    \  }\n        }\n        if ($c >= 'A' && $c <= 'Z') {\n            $c = chr(ord($c)\
    \ + 4);\n            if ($c > 'Z') {\n                $c = chr(ord($c) - 26);\n\
    \            }\n        }\n        $tmp .= $c;\n    }\n    return $tmp;\n}\n",
  "\t$newS = '';\n\t$lowerS = strtolower($s);\n\tfor ($i = 0; $i < strlen($lowerS);\
    \ $i++) {\n\t\t$newOrd = ord($lowerS[$i]) + 4;\n\t\tif ($newOrd > ord('z')) {\n\
    \t\t\t$newOrd -= 26;\n\t\t}\n\t\t$newS .= chr($newOrd);\n\t}\n\treturn $newS;\n\
    }\n", "\t$result = \"\";\n\t$length = strlen($s);\n\t$i = 0;\n\tfor ($i; $i <\
    \ $length; $i++) {\n\t\t$asciiCode = ord($s[$i]);\n\t\tif (is_numeric($s[$i]))\
    \ {\n\t\t\tif ($asciiCode >= 53 && $asciiCode <= 57) {\n\t\t\t\t$result = $result\
    \ . chr($asciiCode - 2);\n\t\t\t} else {\n\t\t\t\t$result = $result . chr($asciiCode\
    \ + 2);\n\t\t\t}\n\t\t} else {\n\t\t\tif ($asciiCode >= 97 && $asciiCode <= 121)\
    \ {\n\t\t\t\t$result = $result . chr($asciiCode + 2);\n\t\t\t} else {\n\t\t\t\t\
    $result = $result . chr($asciiCode - 24);\n\t\t\t}\n\t\t}\n\t}\n\treturn $result;\n\
    }", "  $letters = array();\n  for ($i = 0; $i < strlen($s); $i++) {\n    $letters[]\
    \ = $s[$i];\n  }\n  $result = array();\n  foreach ($letters as $letter) {\n  \
    \  $result[] = get_next_letter($letter);\n  }\n  return implode(\"\", $result);\n\
    }\n", "\t$c = \"\";\n\t$l = strlen($s);\n\tfor ($i = 0; $i < $l; $i++) {\n\t\t\
    $c = $c.chr(ord($s[$i])+2*2);\n\t}\n\treturn $c;\n}", "\t// Your code here\n\t\
    $alphabet = range('a', 'z');\n\t$map = array_combine($alphabet, array_slice($alphabet,\
    \ 2, 24));\n\t$s = str_split($s);\n\tforeach ($s as $key => $value) {\n\t\t$s[$key]\
    \ = $map[$value];\n\t}\n\treturn implode('', $s);\n}\necho encrypt(\"hi\") . \"\
    \\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\\n\"\
    ;\necho encrypt(\"et\") . \"\\n\";\n", "\t$alphabet = array('a', 'b', 'c', 'd',\
    \ 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\
    \ 'u', 'v', 'w', 'x', 'y', 'z');\n\t$newString = '';\n\t$len = strlen($s);\n\t\
    for ($i = 0; $i < $len; $i++){\n\t\t$index = array_search($s[$i], $alphabet);\n\
    \t\t$newString .= $alphabet[($index + 4) % 26];\n\t}\n\treturn $newString;\n}\n\
    echo encrypt(\"hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho\
    \ encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\") . \"\\n\";\n", "    $alphabet\
    \ = range('a', 'z');\n    $shifted = array_merge(array_slice($alphabet, 2), array_slice($alphabet,\
    \ 0, 2));\n    $encrypted = '';\n    foreach (str_split($s) as $letter) {\n  \
    \      $i = array_search($letter, $alphabet);\n        $encrypted .= $shifted[$i];\n\
    \    }\n    return $encrypted;\n}\necho encrypt(\"hi\");\necho \"<br>\";\necho\
    \ encrypt(\"asdfghjkl\");\necho \"<br>\";\necho encrypt(\"gf\");\necho \"<br>\"\
    ;\necho encrypt(\"et\");\necho \"<br>\";\n", "    $newString = \"\";\n    $alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    for ($i = 0; $i < strlen($s); $i++) {\n\
    \        $index = strpos($alphabet, $s[$i]);\n        $newString .= $alphabet[($index\
    \ + 4) % 26];\n    }\n    return $newString;\n}\n", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n\t$encrypted_alphabet = substr($alphabet, 2, 24) . substr($alphabet, 0, 2);\n\
    \t$result = \"\";\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$result .= $encrypted_alphabet[strpos($alphabet,\
    \ $s[$i])];\n\t}\n\treturn $result;\n}\necho encrypt(\"hi\");\necho \"\\n\";\n\
    echo encrypt(\"asdfghjkl\");\necho \"\\n\";\necho encrypt(\"gf\");\necho \"\\\
    n\";\necho encrypt(\"et\");\necho \"\\n\";", "    $len = strlen($s);\n    $encrypted\
    \ = \"\";\n    for ($i = 0; $i < $len; $i++) {\n        $char_ascii = ord($s[$i]);\n\
    \        $encrypted .= chr($char_ascii + 4);\n    }\n    return $encrypted;\n\
    }\n\necho encrypt(\"hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\n\
    echo encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\") . \"\\n\";\n", "    $encrypt\
    \ = '';\n    $len = strlen($s);\n    for ($i = 0; $i < $len; $i++) {\n       \
    \ $pos = ord($s[$i]) + 2 * 2;\n        if ($pos > 122) $pos -= 26;\n        $encrypt\
    \ .= chr($pos);\n    }\n    return $encrypt;\n}\necho encrypt(\"hi\") . \"\\n\"\
    ;\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho\
    \ encrypt(\"et\") . \"\\n\";", "    $alphabet = 'abcdefghijklmnopqrstuvwxyz';\n\
    \    $shifted = substr($alphabet, 2, strlen($alphabet) - 2) . substr($alphabet,\
    \ 0, 2);\n    $alphabet .= $alphabet;\n    $s = strtolower($s);\n    $encrypted\
    \ = \"\";\n    for ($i = 0; $i < strlen($s); $i++) {\n        $pos = strpos($alphabet,\
    \ $s[$i]);\n        $encrypted .= $shifted[$pos];\n    }\n    return $encrypted;\n\
    }\n\necho encrypt(\"hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\n\
    echo encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\") . \"\\n\";\n", "\t// $strArray\
    \ = str_split($s);\n\t$strArray = preg_split('//', $s, -1, PREG_SPLIT_NO_EMPTY);\n\
    \tforeach ($strArray as $key => $value) {\n\t\t$new_value = ord($value) + 2;\n\
    \t\tif ($new_value > 122) {\n\t\t\t$new_value = ($new_value % 122) + 96;\n\t\t\
    }\n\t\t$strArray[$key] = chr($new_value);\n\t}\n\treturn implode($strArray);\n\
    }\n", "    $alphabet = 'abcdefghijklmnopqrstuvwxyz';\n    $r = '';\n    for ($i\
    \ = 0; $i < strlen($s); $i++) {\n        $l = substr($s, $i, 1);\n        $p =\
    \ strpos($alphabet, $l);\n        $shift = 2 * 2;\n        $p = ($p + $shift)\
    \ % strlen($alphabet);\n        $r .= substr($alphabet, $p, 1);\n    }\n    return\
    \ $r;\n}\nprint encrypt(\"hi\") . \"\\n\";\nprint encrypt(\"asdfghjkl\") . \"\\\
    n\";\nprint encrypt(\"gf\") . \"\\n\";\nprint encrypt(\"et\") . \"\\n\";", " \
    \ $s = strtolower($s);\n  $encrypted = '';\n  for ($i = 0; $i < strlen($s); $i++)\
    \ {\n    $new = ord($s[$i]) - 4;\n    if ($new < 97) {\n      $new += 26;\n  \
    \  }\n    $encrypted .= chr($new);\n  }\n  return $encrypted;\n}", "\n}\n", "\t\
    $cipher = array();\n\t$start = ord('a');\n\tfor ($i = 0; $i < 26; $i++) {\n\t\t\
    if ($i + 2 * 2 > 25) {\n\t\t\t$cipher[chr($start + $i)] = chr($start + $i + 2\
    \ * 2 - 26);\n\t\t} else {\n\t\t\t$cipher[chr($start + $i)] = chr($start + $i\
    \ + 2 * 2);\n\t\t}\n\t}\n\t$cipher[' '] = ' ';\n\t$result = '';\n\t$length = strlen($s);\n\
    \tfor ($i = 0; $i < $length; $i++) {\n\t\t$result .= $cipher[$s[$i]];\n\t}\n\t\
    return $result;\n}", "    $array = str_split($s);\n    $result = [];\n    foreach\
    \ ($array as $value) {\n        if (ord($value) < 97) {\n            $temp = ord($value)\
    \ + 2;\n            if ($temp > 90) {\n                $temp = $temp - 26;\n \
    \           }\n            $result[] = chr($temp);\n        } else {\n       \
    \     $temp = ord($value) + 2;\n            if ($temp > 122) {\n             \
    \   $temp = $temp - 26;\n            }\n            $result[] = chr($temp);\n\
    \        }\n    }\n    return implode($result);\n}\n\necho encrypt(\"hi\") . \"\
    \\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\\n\"\
    ;\necho encrypt(\"et\") . \"\\n\";\n", "    $encrypted = \"\";\n    $alphabet\
    \ = range('a', 'z');\n    $shift = ($alphabet[0] . $alphabet[1]);\n    $alphabet\
    \ = $shift . array_slice($alphabet, 2);\n    for ($i = 0; $i < strlen($s); $i++)\
    \ {\n        if ($alphabet[strpos($alphabet, $s[$i])] === false) {\n         \
    \   $encrypted .= $s[$i];\n        } else {\n            $encrypted .= $alphabet[strpos($alphabet,\
    \ $s[$i])];\n        }\n    }\n    return $encrypted;\n}\n", "}\necho encrypt(\"\
    hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\"\
    ) . \"\\n\";\necho encrypt(\"et\") . \"\\n\";", "    $array = str_split($s);\n\
    \    $s = \"\";\n    for ($i = 0; $i < sizeof($array); $i++) {\n        $s .=\
    \ chr(ord($array[$i]) + ($i * 2));\n    }\n    return $s;\n}", "    $from = 'abcdefghijklmnopqrstuvwxyz';\n\
    \    $to = 'cdefghijklmnopqrstuvwxyzab';\n    $from = str_split($from);\n    $to\
    \ = str_split($to);\n    $len = strlen($s);\n    $encrypted = '';\n    for ($i\
    \ = 0; $i < $len; $i++) {\n        $from_char = strtolower($s[$i]);\n        $from_index\
    \ = array_search($from_char, $from);\n        $to_char = $to[$from_index];\n \
    \       $encrypted .= $to_char;\n    }\n    return $encrypted;\n}\necho encrypt(\"\
    hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\"\
    ) . \"\\n\";\necho encrypt(\"et\") . \"\\n\";\necho encrypt(\"Good morning! ThiS\
    \ is a Game, we are using THIS is A SECRET PHRASE.\") . \"\\n\";\n", "    $charset\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    $i = 0;\n    $arr = str_split($s);\n\
    \    while ($i < count($arr)) {\n        $index = strpos($charset, $arr[$i]);\n\
    \        $index += 2 * 2;\n        if ($index > 25) {\n            $index -= 26;\n\
    \        }\n        $arr[$i] = $charset[$index];\n        $i++;\n    }\n    return\
    \ implode($arr);\n}\necho encrypt(\"asdfghjkl\") . \"\\n\";", "\t//start with\
    \ the alphabet\n\t$alpha = \"abcdefghijklmnopqrstuvwxyz\";\n\t//create new string\n\
    \t$encrypt = \"\";\n\t//loop through the input string\n\tfor ($i = 0; $i < strlen($s);\
    \ $i++) {\n\t\t//loop through the alphabet\n\t\tfor ($j = 0; $j < strlen($alpha);\
    \ $j++) {\n\t\t\t//check if the input string character matches\n\t\t\t//any of\
    \ the characters in the alphabet\n\t\t\tif ($s[$i] == $alpha[$j]) {\n\t\t\t\t\
    //find the character that's two places ahead\n\t\t\t\t//and multiply it by two\n\
    \t\t\t\t$encrypt .= $alpha[($j + 2) * 2];\n\t\t\t}\n\t\t}\n\t}\n\treturn $encrypt;\n\
    }\necho encrypt(\"hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho\
    \ encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\") . \"\\n\";", "\t$alphabet =\
    \ array(\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\"\
    ,\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\"\
    ,\"z\");\n\t$s = strtolower($s);\n\t$s = str_split($s);\n\t// echo $s[0];\n\t\
    $str = \"\";\n\tfor ($i=0; $i < count($s); $i++) { \n\t\t$str .= $alphabet[(array_search($s[$i],\
    \ $alphabet) + 2) % count($alphabet)];\n\t}\n\treturn $str;\n}", // write your
    code here, "    $alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    $i = $alphabet{$s{0}}\
    \ - 2 * 2;\n    $j = $alphabet{$s{1}} - 2 * 2;\n    $result = $alphabet{$i} .\
    \ $alphabet{$j};\n    return $result;\n}\necho encrypt(\"hi\");\n", "\t$r=str_replace(\"\
    h\",\"j\",$s);\n\t$r=str_replace(\"g\",\"i\",$r);\n\t$r=str_replace(\"f\",\"h\"\
    ,$r);\n\t$r=str_replace(\"e\",\"g\",$r);\n\t$r=str_replace(\"d\",\"f\",$r);\n\t\
    $r=str_replace(\"c\",\"e\",$r);\n\t$r=str_replace(\"b\",\"d\",$r);\n\t$r=str_replace(\"\
    a\",\"c\",$r);\n\t$r=str_replace(\"z\",\"b\",$r);\n\t$r=str_replace(\"y\",\"a\"\
    ,$r);\n\t$r=str_replace(\"x\",\"z\",$r);\n\t$r=str_replace(\"w\",\"y\",$r);\n\t\
    $r=str_replace(\"v\",\"x\",$r);\n\t$r=str_replace(\"u\",\"w\",$r);\n\t$r=str_replace(\"\
    t\",\"v\",$r);\n\t$r=str_replace(\"s\",\"u\",$r);\n\t$r=str_replace(\"r\",\"t\"\
    ,$r);\n\t$r=str_replace(\"q\",\"s\",$r);\n\t$r=str_replace(\"p\",\"r\",$r);\n\t\
    $r=str_replace(\"o\",\"q\",$r);\n\t$r=str_replace(\"n\",\"p\",$r);\n\t$r=str_replace(\"\
    m\",\"o\",$r);\n\t$r=str_replace(\"l\",\"n\",$r);\n\t$r=str_replace(\"k\",\"m\"\
    ,$r);\n\t$r=str_replace(\"j\",\"l\",$r);\n\t$r=str_replace(\"i\",\"k\",$r);\n\t\
    return $r;\n}\n", "    $alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    for ($i\
    \ = 0; $i < strlen($s); $i++) {\n        $index = strpos($alphabet, $s[$i]);\n\
    \        if ($index < 24) {\n            $s[$i] = $alphabet[$index + 2];\n   \
    \     } else {\n            $s[$i] = $alphabet[$index - 24];\n        }\n    }\n\
    \    return $s;\n}", "\t$s = strtolower($s);\n\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n\t$alphabet_arr = str_split($alphabet);\n\t$encrypt_arr = array();\n\t$s_arr\
    \ = str_split($s);\n\tforeach ($s_arr as $char) {\n\t\t$index = array_search($char,\
    \ $alphabet_arr);\n\t\tif ($index >= 0 && $index <=22) {\n\t\t\t$encrypt_arr[]\
    \ = $alphabet_arr[$index + 2];\n\t\t} else if ($index == 23) {\n\t\t\t$encrypt_arr[]\
    \ = $alphabet_arr[1];\n\t\t} else if ($index == 24) {\n\t\t\t$encrypt_arr[] =\
    \ $alphabet_arr[2];\n\t\t} else if ($index == 25) {\n\t\t\t$encrypt_arr[] = $alphabet_arr[3];\n\
    \t\t}\n\t}\n\treturn implode(\"\", $encrypt_arr);\n}\n", "    $a = str_split($s);\n\
    \    $result = [];\n    foreach ($a as $char) {\n        $asciiValue = ord($char);\n\
    \        if ($asciiValue >= 97 && $asciiValue <= 120) {\n            $newAsciiValue\
    \ = $asciiValue + 2;\n        } else if ($asciiValue >= 121 && $asciiValue <=\
    \ 122) {\n            $newAsciiValue = 97 + ($asciiValue - 121);\n        } else\
    \ {\n            $newAsciiValue = $asciiValue;\n        }\n        $result[] =\
    \ chr($newAsciiValue);\n    }\n    return implode($result);\n}\n\necho \"> \"\
    \ . encrypt(\"hi\") . PHP_EOL;\necho \"> \" . encrypt(\"asdfghjkl\") . PHP_EOL;\n\
    echo \"> \" . encrypt(\"gf\") . PHP_EOL;\necho \"> \" . encrypt(\"et\") . PHP_EOL;",
  "    $str = \"\";\n    $alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    for ($i\
    \ = 0; $i < strlen($s); $i++) {\n        if ($s[$i] == \" \") {\n            $str\
    \ .= \" \";\n        } else {\n            $str .= substr($alphabet, strpos($alphabet,\
    \ $s[$i]) + 2, 1);\n        }\n    }\n    return $str;\n}", "\t$encrypted = \"\
    \";\n\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\t$str_arr = str_split($s);\n\
    \tforeach ($str_arr as $char) {\n\t\t$index = strpos($alphabet, $char);\n\t\t\
    $encrypted .= $alphabet[($index + 2) * 2];\n\t}\n\treturn $encrypted;\n}\n", " \
    \ $ord_a = ord('a');\n  $ord_A = ord('A');\n  $len = strlen($s);\n  $new_str =\
    \ '';\n  for ($i = 0; $i < $len; $i++) {\n    $val = ord($s[$i]);\n    if (is_numeric($s[$i]))\
    \ {\n      $new_str .= $s[$i];\n    } elseif ($val >= $ord_a && $val <= $ord_a\
    \ + 25) {\n      $new_val = $val + ($val - $ord_a) * 2;\n      if ($new_val >\
    \ $ord_a + 25) {\n        $new_val -= 26;\n      }\n      $new_str .= chr($new_val);\n\
    \    } elseif ($val >= $ord_A && $val <= $ord_A + 25) {\n      $new_val = $val\
    \ + ($val - $ord_A) * 2;\n      if ($new_val > $ord_A + 25) {\n        $new_val\
    \ -= 26;\n      }\n      $new_str .= chr($new_val);\n    } else {\n      $new_str\
    \ .= $s[$i];\n    }\n  }\n  return $new_str;\n}\n\n$ans = encrypt(\"hi\");\nprint_r($ans);\n\
    echo \"\\n\";\n\n$ans = encrypt(\"asdfghjkl\");\nprint_r($ans);\necho \"\\n\"\
    ;\n\n$ans = encrypt(\"gf\");\nprint_r($ans);\necho \"\\n\";\n\n$ans = encrypt(\"\
    et\");\nprint_r($ans);\necho \"\\n\";\n\n$ans = encrypt(\"&^$%^%$\");\nprint_r($ans);\n\
    echo \"\\n\";\n\n$ans = encrypt(\"z\");\nprint_r($ans);\necho \"\\n\";\n\n$ans\
    \ = encrypt(\"Z\");\nprint_r($ans);\necho \"\\n\";\n\n$ans = encrypt(\"b\");\n\
    print_r($ans);\necho \"\\n\";\n\n$ans = encrypt(\"B\");\nprint_r($ans);\necho\
    \ \"\\n\";", "    $result = \"\";\n    for ($i = 0; $i < strlen($s); $i++) {\n\
    \        $new_index = (((ord($s[$i]) - ord(\"a\")) + 2) % 26) + ord(\"a\");\n\
    \        $result .= chr($new_index);\n    }\n    return $result;\n}\n", "    //\
    \ $alphabet = 'a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f\
    \ g h i j k l m n o p q r s t u v w x y z a b c d e f g h i j k l m n o p q r\
    \ s t u v w x y z a b c d e f g h i j k l m n o p q r s t u v w x y z';\n    //\
    \ $alphabet = 'a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f\
    \ g h i j k l m n o p q r s t u v w x y z a b c d e f g h i j k l m n o p q r\
    \ s t u v w x y z a b c d e f g h i j k l m n o p q r s t u v w x y z';\n    //\
    \ $alphabet = 'a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f\
    \ g h i j k l m n o p q r s t u v w x y z a b c d e f g h i j k l m n o p q r\
    \ s t u v w x y z a b c d e f g h i j k l m n o p q r s t u v w x y z';\n    //\
    \ $alphabet = 'a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f\
    \ g h i j k l m n o p q r s t u v w x y z a b c d e f g h i j k l m n o p q r\
    \ s t u v w x y z a b c d e f g h i j k l m n o p q r s t u v w x y z';\n    //\
    \ $alphabet = 'a b c d e f g h i j k l m n o p q r s t u v w x y z a b c d e f\
    \ g h i j k l m n o p q r s t u v w x y z", "    $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    $result = \"\";\n    for ($i = 0; $i < strlen($s); $i++) {\n        $char\
    \ = $s[$i];\n        if (ctype_alpha($char)) {\n            $pos = strpos($alphabet,\
    \ $char);\n            $result .= $alphabet[($pos + 4) % 26];\n        } else\
    \ {\n            $result .= $char;\n        }\n    }\n    return $result;\n}\n\
    \n$s = \"hi\";\necho encrypt($s) . \"\\n\";\n$s = \"asdfghjkl\";\necho encrypt($s)\
    \ . \"\\n\";\n$s = \"gf\";\necho encrypt($s) . \"\\n\";\n$s = \"et\";\necho encrypt($s)\
    \ . \"\\n\";\n", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\t$newAlphabet\
    \ = \"\";\n\t$newWord = \"\";\n\tfor ($i = 0; $i < 26; $i++) {\n\t\t$j = $i +\
    \ 4;\n\t\tif ($j > 25) {\n\t\t\t$j = $j - 26;\n\t\t}\n\t\t$newAlphabet .= $alphabet[$j];\n\
    \t}\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$x = strpos($alphabet, $s[$i]);\n\
    \t\t$newWord .= $newAlphabet[$x];\n\t}\n\treturn $newWord;\n}", "\t$r = '';\n\t\
    for ($i = 0; $i < strlen($s); $i++) {\n\t\t$r .= chr(ord($s[$i]) + ($i % 2 + 1)\
    \ * 2);\n\t}\n\treturn $r;\n}", "    $str = str_split($s);\n    $new_str = [];\n\
    \    $ascii = range(ord('a'), ord('z'));\n    foreach ($str as $val) {\n     \
    \   if (array_search(ord($val), $ascii) + 2 * 2 > 25) {\n            $new_str[]\
    \ = chr(($ascii[array_search(ord($val), $ascii) + 2 * 2 - 26]));\n        } else\
    \ {\n            $new_str[] = chr(($ascii[array_search(ord($val), $ascii) + 2\
    \ * 2]));\n        }\n    }\n    return implode($new_str);\n}\necho encrypt(\"\
    hi\");\necho \"<br>\";\necho encrypt(\"asdfghjkl\");\necho \"<br>\";\necho encrypt(\"\
    gf\");\necho \"<br>\";\necho encrypt(\"et\");", "\n}\n", "    $n = strlen($s);\n\
    \    $r = \"\";\n    for ($i = 0; $i < $n; $i++) {\n        $c = ord($s[$i]);\n\
    \        $r .= chr($c + 2);\n    }\n    return $r;\n}\necho encrypt(\"hi\");\n\
    echo encrypt(\"asdfghjkl\");\necho encrypt(\"gf\");\necho encrypt(\"et\");", " \
    \ $alphabet = array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"\
    i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"\
    t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\");\n  $s = strtolower($s);\n  $s\
    \ = str_split($s);\n  $count = count($s);\n  $encrypted_string = \"\";\n  $key\
    \ = 2;\n  $encrypted_string = \"\";\n  for ($i = 0; $i < $count; $i++) {\n   \
    \ $current_letter = $s[$i];\n    if (in_array($current_letter, $alphabet)) {\n\
    \      $key = array_search($current_letter, $alphabet);\n      $key += 2;\n  \
    \    $key = $key * 2;\n      if ($key >= 26) {\n        $key = $key % 26;\n  \
    \    }\n      $encrypted_string .= $alphabet[$key];\n    } else {\n      $encrypted_string\
    \ .= $current_letter;\n    }\n  }\n  return $encrypted_string;\n}", "    $alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    $alphabet_arr = str_split($alphabet);\n\
    \    $new_alphabet = \"\";\n    $result = \"\";\n    for ($i = 0; $i < strlen($alphabet);\
    \ $i++) {\n        if ($i > 23) {\n            $new_alphabet .= $alphabet_arr[$i\
    \ - 24];\n        } else {\n            $new_alphabet .= $alphabet_arr[$i + 2];\n\
    \        }\n    }\n    for ($i = 0; $i < strlen($s); $i++) {\n        $result\
    \ .= $new_alphabet[strpos($alphabet, $s[$i])];\n    }\n    return $result;\n}",
  "\t$s = strtolower($s);\n\t$arr = str_split($s);\n\t$newArr = [];\n\tforeach ($arr\
    \ as $v) {\n\t\tif ((ord($v) + 2) <= 122) {\n\t\t\t$newArr[] = chr(ord($v) + 2);\n\
    \t\t} elseif ((ord($v) + 2) > 122) {\n\t\t\t$newArr[] = chr(ord($v) - 24);\n\t\
    \t}\n\t}\n\treturn implode($newArr);\n}\n\necho encrypt(\"asdfghjkl\") . PHP_EOL;\n",
  "\t$l = strlen($s);\n\t$encrypted = '';\n\tfor ($i = 0; $i < $l; $i++) {\n\t\t$encrypted\
    \ .= chr(ord($s[$i]) + 2 * 2);\n\t}\n\treturn $encrypted;\n}\necho encrypt(\"\
    hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\"\
    ) . \"\\n\";\necho encrypt(\"et\") . \"\\n\";", "    $result = '';\n    for ($i\
    \ = 0; $i < strlen($s); $i++) {\n        $result .= chr(ord($s[$i]) + 4);\n  \
    \  }\n    return $result;\n}\necho encrypt(\"hi\"); // lm\necho \"\\n\";\necho\
    \ encrypt(\"asdfghjkl\"); // ewhjklnop\necho \"\\n\";\necho encrypt(\"gf\"); //\
    \ kj\necho \"\\n\";\necho encrypt(\"et\"); // ix\necho \"\\n\";", "\t$alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n\t$encryption = \"\";\n\tfor ($i = 0; $i\
    \ < strlen($s); $i++) {\n\t\t$index = strpos($alphabet, $s[$i]);\n\t\t$index =\
    \ ($index + 2) % 26;\n\t\t$encryption .= $alphabet[$index];\n\t}\n\treturn $encryption;\n\
    }\n", "  $alphabet = range('a', 'z');\n  $shifted = array_slice($alphabet, 2)\
    \ + array_slice($alphabet, 0, 2);\n  $encrypted = '';\n  for ($i = 0; $i < strlen($s);\
    \ $i++) {\n    $encrypted .= $shifted[array_search($s[$i], $alphabet)];\n  }\n\
    \  return $encrypted;\n}\n\necho encrypt(\"hi\") . PHP_EOL;\necho encrypt(\"asdfghjkl\"\
    ) . PHP_EOL;\necho encrypt(\"gf\") . PHP_EOL;\necho encrypt(\"et\") . PHP_EOL;\n",
  "\t// TODO\n}\n", "  $new_string = \"\";\n  for ($i = 0; $i < strlen($s); $i++)\
    \ {\n    $temp = ord($s[$i]) + 2 * 2;\n    if ($temp > 122) {\n      $temp = $temp\
    \ - 26;\n    }\n    $new_string .= chr($temp);\n  }\n  return $new_string;\n}\n\
    \necho encrypt(\"hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho\
    \ encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\") . \"\\n\";", "    $alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    $new_string = \"\";\n    for ($i = 0;\
    \ $i < strlen($s); $i++) {\n        $index = strpos($alphabet, $s[$i]);\n    \
    \    $new_string .= $alphabet[($index + $index) % 26];\n    }\n    return $new_string;\n\
    }\n", "    $encrypted = '';\n    $chars = str_split($s);\n    foreach ($chars\
    \ as $char) {\n        $encrypted .= chr(ord($char) + 2 * 2);\n    }\n    return\
    \ $encrypted;\n}\n", "  $s = strtolower($s);\n  $new = \"\";\n  for ($i = 0; $i\
    \ < strlen($s); $i++) {\n    $ch = $s[$i];\n    $ascii = ord($ch);\n    $x = $ascii\
    \ - ord('a');\n    $x = ($x + 2) % 26;\n    $ascii = $x + ord('a');\n    $new\
    \ .= chr($ascii);\n  }\n  return $new;\n}\necho \"encrypt(\\\"hi\\\")\\n\";\n\
    echo encrypt(\"hi\") . \"\\n\";\necho \"encrypt(\\\"asdfghjkl\\\")\\n\";\necho\
    \ encrypt(\"asdfghjkl\") . \"\\n\";\necho \"encrypt(\\\"gf\\\")\\n\";\necho encrypt(\"\
    gf\") . \"\\n\";\necho \"encrypt(\\\"et\\\")\\n\";\necho encrypt(\"et\") . \"\\\
    n\";\n", "\t$arr = array();\n\t$str = '';\n\tfor ($i = 0; $i < strlen($s); $i++)\
    \ {\n\t\t$c = $s[$i];\n\t\tif ($c >= 'a' && $c <= 'm') {\n\t\t\t$arr[$i] = chr(ord($c)\
    \ + 2);\n\t\t} elseif ($c >= 'n' && $c <= 'z') {\n\t\t\t$arr[$i] = chr(ord($c)\
    \ - 24);\n\t\t} elseif ($c >= 'A' && $c <= 'M') {\n\t\t\t$arr[$i] = chr(ord($c)\
    \ + 2);\n\t\t} elseif ($c >= 'N' && $c <= 'Z') {\n\t\t\t$arr[$i] = chr(ord($c)\
    \ - 24);\n\t\t} else {\n\t\t\t$arr[$i] = $c;\n\t\t}\n\t}\n\tfor ($i = 0; $i <\
    \ strlen($s); $i++) {\n\t\t$str .= $arr[$i];\n\t}\n\treturn $str;\n}\n\necho encrypt(\"\
    asdfghjkl\");\necho \"\\n\";\necho encrypt(\"gf\");\necho \"\\n\";\necho encrypt(\"\
    et\");\necho \"\\n\";", "\t$alphabet = str_split(\"abcdefghijklmnopqrstuvwxyz\"\
    );\n\t$alphabetRotated = str_split(\"cdefghijklmnopqrstuvwxyzab\");\n\t$encrypt\
    \ = array_combine($alphabet, $alphabetRotated);\n\treturn strtr($s, $encrypt);\n\
    }\n", "    $s = strtolower($s);\n    $res = \"\";\n    $a = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    $a2 = $a . $a;\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (strpos($a,\
    \ $s[$i]) !== false) {\n            $res .= $a2[strpos($a, $s[$i]) + 4];\n   \
    \     } else {\n            $res .= $s[$i];\n        }\n    }\n    return $res;\n\
    }\n\n$s = \"hi\";\n$res = encrypt($s);\nprint_r($res);\necho \"\\n\";\n\n$s =\
    \ \"asdfghjkl\";\n$res = encrypt($s);\nprint_r($res);\necho \"\\n\";\n\n$s = \"\
    gf\";\n$res = encrypt($s);\nprint_r($res);\necho \"\\n\";\n\n$s = \"et\";\n$res\
    \ = encrypt($s);\nprint_r($res);\necho \"\\n\";\n\n$s = \"HI\";\n$res = encrypt($s);\n\
    print_r($res);\necho \"\\n\";\n\n$s = \"Asdfghjkl\";\n$res = encrypt($s);\nprint_r($res);\n\
    echo \"\\n\";\n\n$s = \"GF\";\n$res = encrypt($s);\nprint_r($res);\necho \"\\\
    n\";\n\n$s = \"ET\";\n$res = encrypt($s);\nprint_r($res);\necho \"\\n\";\n\n$s\
    \ = \"hi? \";\n$res = encrypt($s);\nprint_r($res);\necho \"\\n\";\n\n$s = \"a?sdfghjkl\"\
    ;\n$res = encrypt($s);\nprint_r($res);\necho \"\\n\";\n\n$s = \"g?f\";\n$res =\
    \ encrypt($s);\nprint_r($res);\necho \"\\n\";\n\n$s = \"e?t\";\n$res = encrypt($s);\n\
    print_r($res);\necho \"\\n\";\n\n$s = \"?e", "    $alphabet = array_merge(range('a',\
    \ 'z'), range('A', 'Z'));\n    $shift = 4;\n    $encrypt = '';\n    for ($i =\
    \ 0; $i < strlen($s); $i++) {\n        if (in_array($s[$i], $alphabet)) {\n  \
    \          $r_index = array_search($s[$i], $alphabet);\n            $encrypt .=\
    \ $alphabet[($r_index + $shift) % count($alphabet)];\n        } else {\n     \
    \       $encrypt .= $s[$i];\n        }\n    }\n    return $encrypt;\n}\n$s = \"\
    hi\";\n$s = \"asdfghjkl\";\n$s = \"gf\";\n$s = \"et\";\nprint($s.\" = \".encrypt($s).\"\
    \\n\");\n", "\t$l = strlen($s);\n\t$a = array();\n\tfor ($i = 0; $i < $l; $i++)\
    \ {\n\t\t$x = ord($s[$i]) + ($i * 2);\n\t\twhile ($x > 122) {\n\t\t\t$x -= 26;\n\
    \t\t}\n\t\t$a[] = chr($x);\n\t}\n\treturn implode(\"\", $a);\n}\n", "\t$alphabet\
    \ = range('a', 'z');\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$s[$i] = $alphabet[(array_search($s[$i],\
    \ $alphabet) + (2 * 2)) % 26];\n\t}\n\treturn $s;\n}\necho encrypt(\"hi\") . PHP_EOL;\n\
    echo encrypt(\"asdfghjkl\") . PHP_EOL;\necho encrypt(\"gf\") . PHP_EOL;\necho\
    \ encrypt(\"et\") . PHP_EOL;", "    $s = strtolower($s);\n    $s = str_split($s);\n\
    \    $l = \"abcdefghijklmnopqrstuvwxyz\";\n    $l = str_split($l);\n    $alphabet\
    \ = array();\n    $encrypted = array();\n    for ($i = 0; $i < count($l); $i++)\
    \ {\n        $alphabet[$l[$i]] = $i;\n    }\n    foreach ($s as $letter) {\n \
    \       $encrypted[] = $l[($alphabet[$letter] + ($alphabet[$letter] * 2)) % 26];\n\
    \    }\n    return implode($encrypted);\n}\necho encrypt(\"hi\") . \"\\n\";\n\
    echo encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho\
    \ encrypt(\"et\") . \"\\n\";\n", "\t$result = \"\";\n\tfor ($i = 0; $i < strlen($s);\
    \ $i++) {\n\t\t$result .= chr(ord($s[$i]) + 2 * 2);\n\t}\n\treturn $result;\n}",
  "    $d = [];\n    for ($i = 0; $i < strlen($s); $i++) {\n        $d[] = chr(ord($s[$i])\
    \ + (2 * 2));\n    }\n    return implode('', $d);\n}\n\n$result = encrypt(\"hi\"\
    );\n\necho \"expected:\\tlm\\ngot:\\t\\t$result\\n\\n\";\n\n$result = encrypt(\"\
    asdfghjkl\");\n\necho \"expected:\\tewhjklnop\\ngot:\\t\\t$result\\n\\n\";\n\n\
    $result = encrypt(\"gf\");\n\necho \"expected:\\tkj\\ngot:\\t\\t$result\\n\\n\"\
    ;\n\n$result = encrypt(\"et\");\n\necho \"expected:\\tix\\ngot:\\t\\t$result\\\
    n\\n\";", "    $alphabet = array(\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"\
    h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"\
    u\",\"v\",\"w\",\"x\",\"y\",\"z\");\n    $encrypted_string = \"\";\n    $prev_letter\
    \ = \"\";\n    $index = 0;\n    $num_rotations = 2;\n    for ($i = 0; $i < strlen($s);\
    \ $i++) {\n        $curr_letter = $s[$i];\n        if ($curr_letter == \"h\")\
    \ {\n            $encrypted_string .= \"l\";\n        } elseif ($curr_letter ==\
    \ \"t\") {\n            $encrypted_string .= \"x\";\n        } elseif ($curr_letter\
    \ == \"i\") {\n            $encrypted_string .= \"k\";\n        } elseif ($curr_letter\
    \ == \"l\") {\n            $encrypted_string .= \"p\";\n        } elseif ($curr_letter\
    \ == \"e\") {\n            $encrypted_string .= \"g\";\n        } elseif ($curr_letter\
    \ == \"m\") {\n            $encrypted_string .= \"q\";\n        } elseif ($curr_letter\
    \ == \"n\") {\n            $encrypted_string .= \"r\";\n        } elseif ($curr_letter\
    \ == \"o\") {\n            $encrypted_string .= \"s\";\n        } elseif ($curr_letter\
    \ == \"p\") {\n            $encrypted_string .= \"t\";\n        } elseif ($curr_letter\
    \ == \"q\") {\n            $encrypted_string .= \"u\";\n        } elseif ($curr_letter\
    \ == \"r\") {\n            $encrypted_string .= \"v\";\n        } elseif ($curr_letter\
    \ == \"s\") {\n            $encrypted_string .= \"w\";\n        } elseif ($curr_letter\
    \ == \"f\") {\n            $encrypted_string .= \"j\";\n        } elseif ($curr_letter\
    \ == \"g\") {\n            $encrypted_string .= \"k\";\n        } elseif ($curr_letter\
    \ == \"h\") {\n            $encrypted_string", "  $length = strlen($s);\n  $res\
    \ = '';\n  for ($i = 0; $i < $length; $i++) {\n    if ($s[$i] == 'z') {\n    \
    \  $res .= 'b';\n    } else if ($s[$i] == 'y') {\n      $res .= 'a';\n    } else\
    \ {\n      $res .= chr(ord($s[$i]) + 2);\n    }\n  }\n  return $res;\n}\nprint(encrypt(\"\
    hi\"));\nprint(encrypt(\"asdfghjkl\"));\nprint(encrypt(\"gf\"));\nprint(encrypt(\"\
    et\"));\n", //create loop to increment through letters of string, "    // split\
    \ into array\n    $a = str_split($s);\n    // loop through the array of letters\n\
    \    for ($i = 0; $i < count($a); $i++) {\n        // add two to each letter\n\
    \        $ascii_code = ord($a[$i]) + 2;\n        // get letter corresponding to\
    \ ascii code\n        $a[$i] = chr($ascii_code);\n    }\n    // return encrypted\
    \ string\n    return implode($a);\n}", "  $alpha = 'abcdefghijklmnopqrstuvwxyz';\n\
    \  $alpha2 = substr($alpha, 2) . substr($alpha, 0, 2);\n  for ($i = 0; $i < strlen($s);\
    \ $i++) {\n    $ch = $s[$i];\n    $index = strpos($alpha, $ch);\n    $ch2 = $alpha2[$index];\n\
    \    $s[$i] = $ch2;\n  }\n  return $s;\n}\n$test_string = \"ab\";\n$enc = encrypt($test_string);\n\
    echo \"$test_string\\n\";\necho \"$enc\\n\";", "    $arr = str_split($s);\n  \
    \  $string = \"\";\n    foreach ($arr as $char) {\n        $number = ord($char);\n\
    \        $number += 2 * 2;\n        $string .= chr($number);\n    }\n    return\
    \ $string;\n}\n$string = \"hi\";\necho \"$string -> \" . encrypt($string) . \"\
    \\n\";\n$string = \"asdfghjkl\";\necho \"$string -> \" . encrypt($string) . \"\
    \\n\";\n$string = \"gf\";\necho \"$string -> \" . encrypt($string) . \"\\n\";\n\
    $string = \"et\";\necho \"$string -> \" . encrypt($string) . \"\\n\";", "\t$res\
    \ = \"\";\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$code = ord($s[$i]) +\
    \ 2 * 2;\n\t\tif ($code > ord(\"z\"))\n\t\t\t$code -= 26;\n\t\t$res .= chr($code);\n\
    \t}\n\treturn $res;\n}\n", "\t// Write your code here...\n\t$s1 = 'a';\n\t$s2\
    \ = 'b';\n\t$a = 'abcdefghijklmnopqrstuvwxyz';\n\t$new = '';\n\tfor ($i = 0; $i\
    \ < strlen($s); $i++) {\n\t\t$s1 = $s[$i];\n\t\t$pos = strpos($a, $s1);\n\t\t\
    $pos = $pos - 2;\n\t\tif ($pos < 0) {\n\t\t\t$pos = 26 + $pos;\n\t\t}\n\t\t$s2\
    \ = $a[$pos];\n\t\t$new = $new . $s2;\n\t}\n\treturn $new;\n}", "\t$t = \"\";\n\
    \tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$t .= chr(ord($s[$i]) + 4);\n\t}\n\
    \treturn $t;\n}\n\necho encrypt(\"hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\"\
    ) . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\") . \"\\n\";",
  "\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$str[$i] = $s[$i];\n\t\t$str[$i] =\
    \ chr(ord($str[$i]) + 2 * 2);\n\t}\n\treturn implode($str);\n}\necho encrypt(\"\
    hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\"\
    ) . \"\\n\";\necho encrypt(\"et\") . \"\\n\";", "    $order = str_split('abcdefghijklmnopqrstuvwxyz');\n\
    \    $replace = array_slice($order, 2, count($order) - 2);\n    $replace = array_merge($replace,\
    \ array_slice($order, 0, 2));\n    $s = str_split($s);\n    $enc = [];\n    foreach\
    \ ($s as $c) {\n        $enc[] = $replace[array_search($c, $order)];\n    }\n\
    \    return implode($enc);\n}\n", "    $alphabet = [\"a\", \"b\", \"c\", \"d\"\
    , \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\"\
    , \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    ];\n    $encrypted = \"\";\n    for ($i = 0; $i < strlen($s); $i++) {\n      \
    \  $char = $s[$i];\n        for ($j = 0; $j < count($alphabet); $j++) {\n    \
    \        if ($char == $alphabet[$j]) {\n                $encrypted .= $alphabet[$j+2];\n\
    \            }\n        }\n    }\n    return $encrypted;\n}\necho encrypt(\"hi\"\
    );\necho encrypt(\"asdfghjkl\");\necho encrypt(\"gf\");\necho encrypt(\"et\");",
  "\t$arr = [];\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$ord = ord($s[$i]);\n\
    \t\tif ($ord >= 97 && $ord <= 109) {\n\t\t\t$ord += 10;\n\t\t} elseif ($ord >=\
    \ 110 && $ord <= 122) {\n\t\t\t$ord -= 10;\n\t\t} elseif ($ord >= 65 && $ord <=\
    \ 77) {\n\t\t\t$ord += 10;\n\t\t} elseif ($ord >= 78 && $ord <= 90) {\n\t\t\t\
    $ord -= 10;\n\t\t}\n\t\t$arr[] = chr($ord);\n\t}\n\treturn implode($arr);\n}\n\
    \necho encrypt(\"hi\");\necho \"\\n\";\necho encrypt(\"asdfghjkl\");\necho \"\\\
    n\";\necho encrypt(\"gf\");\necho \"\\n\";\necho encrypt(\"et\");\necho \"\\n\"\
    ;\n", "\t$array = str_split($s);\n\t$length = count($array);\n\t$newArray = array();\n\
    \tfor ($i = 0; $i < $length; $i++) {\n\t\tif ($array[$i] == \"z\") {\n\t\t\t$newArray[$i]\
    \ = \"b\";\n\t\t} else if ($array[$i] == \"y\") {\n\t\t\t$newArray[$i] = \"a\"\
    ;\n\t\t} else {\n\t\t\t$newArray[$i] = ++$array[$i];\n\t\t\t$newArray[$i] = ++$newArray[$i];\n\
    \t\t}\n\t}\n\treturn implode($newArray);\n}", "\t$l = strlen($s);\n\t$r = array();\n\
    \tfor ($i = 0; $i < $l; $i++) {\n\t\t$r[] = chr(ord($s[$i]) + 2 * 2);\n\t}\n\t\
    return implode($r);\n}\n", "    $alphabet = array(\"a\", \"b\", \"c\", \"d\",\
    \ \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\"\
    , \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    );\n    $s = strtolower($s);\n    $s_chars = str_split($s);\n    $s_enc = \"\"\
    ;\n    foreach ($s_chars as $v) {\n        $s_enc .= $alphabet[(array_search($v,\
    \ $alphabet) + (26 - 2 * 2)) % 26];\n    }\n    return $s_enc;\n}", "    $alphabet\
    \ = array(\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"\
    l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"\
    y\",\"z\");\n    $result_str = \"\";\n    $s_arr = str_split($s);\n    foreach\
    \ ($s_arr as $c) {\n        if (ctype_alpha($c)) {\n            $index = array_search($c,\
    \ $alphabet);\n            if ($index + 4 >= count($alphabet)) {\n           \
    \     $new_index = $index + 4 - count($alphabet);\n            } else {\n    \
    \            $new_index = $index + 4;\n            }\n            $result_str\
    \ .= $alphabet[$new_index];\n        } else {\n            $result_str .= $c;\n\
    \        }\n    }\n    return $result_str;\n}\necho encrypt(\"asdfghjkl\"), \"\
    \\n\";", "  $alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n  $encrypted = '';\n\
    \  for ($i = 0; $i < strlen($s); $i++) {\n    $current = substr($s, $i, 1);\n\
    \    $pos = strpos($alphabet, $current);\n    $newPos = $pos + ($pos / 2) * 2;\n\
    \    $encrypted .= substr($alphabet, $newPos, 1);\n  }\n  return $encrypted;\n\
    }", "    $length = strlen($s);\n    $encrypted_string = '';\n    for ($i = 0;\
    \ $i < $length; $i++) {\n        $encrypted_string .= encrypt_char($s[$i]);\n\
    \    }\n    return $encrypted_string;\n}\n", "    $alphabet = str_split(\"abcdefghijklmnopqrstuvwxyz\"\
    );\n    $string = str_split($s);\n    $newString = array();\n    foreach ($string\
    \ as $letter) {\n        $letterIndex = 0;\n        foreach ($alphabet as $index\
    \ => $alphaLetter) {\n            if ($letter == $alphaLetter) {\n           \
    \     $letterIndex = $index;\n            }\n        }\n        if ($letterIndex\
    \ > 0) {\n            $newString[] = $alphabet[$letterIndex - 2];\n        } else\
    \ {\n            $newString[] = $letter;\n        }\n    }\n    $newString = implode(\"\
    \", $newString);\n    return $newString;\n}", "\t$letters = array('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z');\n\
    \t$letters_length = count($letters);\n\t$output = \"\";\n\t$s_length = strlen($s);\n\
    \tfor ($i = 0; $i < $s_length; $i++) {\n\t\t$current_letter = $s[$i];\n\t\tfor\
    \ ($j = 0; $j < $letters_length; $j++) {\n\t\t\tif ($current_letter == $letters[$j])\
    \ {\n\t\t\t\t$current_index = $j;\n\t\t\t\tif ($current_index <= $letters_length\
    \ - 3) {\n\t\t\t\t\t$output .= $letters[$current_index + 2];\n\t\t\t\t} else {\n\
    \t\t\t\t\t$output .= $letters[$current_index - $letters_length + 2];\n\t\t\t\t\
    }\n\t\t\t}\n\t\t}\n\t}\n\treturn $output;\n}\necho encrypt(\"hi\") . \"\\n\";\n\
    echo encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho\
    \ encrypt(\"et\") . \"\\n\";", "    // Trim white space from the string\n    $trimmed\
    \ = trim($s);\n    // Convert the string to lowercase\n    $lower_case = strtolower($trimmed);\n\
    \    // Count how many characters in the string\n    $num_chars = strlen($lower_case);\n\
    \    // Create an empty string to store the encrypted characters\n    $encrypted\
    \ = \"\";\n    // Iterate through the string to convert each letter to encrypted\
    \ letters\n    for ($i = 0; $i < $num_chars; $i++) {\n        // Get the letter\
    \ from the string\n        $letter = $lower_case[$i];\n        // Find the ASCII\
    \ value of the letter\n        $char_ascii = ord($letter);\n        // Decrypt\
    \ the letter by shifting down 2 places\n        $decrypted_char = $char_ascii\
    \ + 2;\n        // Make sure the ASCII value is between 97 and 122\n        if\
    \ ($decrypted_char > 122) {\n            $decrypted_char = $decrypted_char - 26;\n\
    \        }\n        // Convert the ASCII value into a string\n        $decrypted_char_str\
    \ = chr($decrypted_char);\n        // Add the encrypted letter to the encrypted\
    \ string\n        $encrypted = $encrypted . $decrypted_char_str;\n    }\n    //\
    \ Return the encrypted string\n    return $encrypted;\n}", "\n}\n", "    // The\
    \ alphabet should be rotated in a manner such that the letters \n    // shift\
    \ down by two multiplied to two places.\n    // So, we will start with 2*2=4\n\
    \    $rotate=4;\n    // Create an empty string for our result\n    $result = \"\
    \";\n    // Loop through our string and encrypt each character\n    for ($i=0;\
    \ $i<strlen($s); $i++) {\n        // grab the current character\n        $ch =\
    \ $s[$i];\n        // get the ordinal value of the current character\n       \
    \ $curr_ord = ord($ch);\n        // add the ordinal value to the rotation amount\n\
    \        $new_ord = $curr_ord + $rotate;\n        // convert the ordinal value\
    \ back to a character\n        $new_ch = chr($new_ord);\n        // add the new\
    \ character to our result\n        $result .= $new_ch;\n    }\n    // return the\
    \ result\n    return $result;\n}", "\t$encrypt = \"\";\n\t$letters = str_split($s);\n\
    \tforeach ($letters as $letter) {\n\t\t$encrypt .= chr(ord($letter) + 2*2);\n\t\
    }\n\treturn $encrypt;\n}\n\necho encrypt(\"hi\");\necho \"<br>\";\necho encrypt(\"\
    asdfghjkl\");\necho \"<br>\";\necho encrypt(\"gf\");\necho \"<br>\";\necho encrypt(\"\
    et\");\necho \"<br>\";\necho encrypt(\"etasdf\");\necho \"<br>\";\necho encrypt(\"\
    Hi\");\necho \"<br>\";\necho encrypt(\"H@\");\necho \"<br>\";\necho encrypt(\"\
    1\");\necho \"<br>\";\necho encrypt(\"HI\");\necho \"<br>\";\necho encrypt(\"\
    IH\");\necho \"<br>\";\necho encrypt(\"\");\necho \"<br>\";\necho encrypt(\"!\"\
    );\necho \"<br>\";\necho encrypt(\"!!\");\necho \"<br>\";\necho encrypt(\"!!!\"\
    );\necho \"<br>\";\necho encrypt(\"<\");\necho \"<br>\";\necho encrypt(\"G\");\n\
    echo \"<br>\";\necho encrypt(\"W\");\necho \"<br>\";\necho encrypt(\"A\");\necho\
    \ \"<br>\";\necho encrypt(\"Z\");\necho \"<br>\";\necho encrypt(\"a\");\necho\
    \ \"<br>\";\necho encrypt(\"z\");\necho \"<br>\";\necho encrypt(\"P\");\necho\
    \ \"<br>\";\necho encrypt(\" \");\necho \"<br>\";\necho encrypt(\"This string\
    \ should rotate the alphabet by two places.\");\necho \"<br>\";\necho encrypt(\"\
    \xC1\");\necho \"<br>\";\necho encrypt(\"\xC5\");\necho \"<br>\";\necho encrypt(\"\
    !\");\necho \"<br>\";\necho encrypt(\"I'm not a robot\");\necho \"<br>\";\necho\
    \ encrypt(\"\");\necho \"<br>\";\necho encrypt(\"\xC3\");\necho \"<br>\";\necho\
    \ encrypt(\"\xC4\");\necho \"<br>\";\necho encrypt(\"\xC7\");\necho \"<br>\";\n\
    echo encrypt(\"\xC8\");\necho \"<br>\";\necho encrypt(\"\xC9\");\necho \"<br>\"\
    ;\necho encrypt(\"\xCA\");\necho \"<br>\";\necho", "  $words = str_split($s);\n\
    \  $en = '';\n  for ($i = 0; $i < count($words); $i++) {\n    $ascii = ord($words[$i]);\n\
    \    $en .= chr($ascii + 2 * ($i + 1));\n  }\n  return $en;\n}\n", "\t$alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n\t$encrypted = \"\";\n\tfor ($i = 0; $i <\
    \ strlen($s); $i++) {\n\t\t$encrypted .= $alphabet[(strpos($alphabet, $s[$i])\
    \ + 2) * 2];\n\t}\n\treturn $encrypted;\n}\n$s = \"asdfghjkl\";\necho encrypt($s)\
    \ . \"\\n\";", "  $arr = str_split($s);\n  foreach ($arr as $key => $value) {\n\
    \    $arr[$key] = chr(ord($value) + 2 * 2);\n  }\n  return implode($arr);\n}\n",
  "    $alpha = 'abcdefghijklmnopqrstuvwxyz';\n    $arr = str_split($s);\n    $ret\
    \ = [];\n    foreach ($arr as $char) {\n        $index = strpos($alpha, $char);\n\
    \        if ($index === false) {\n            $ret[] = $char;\n        } else\
    \ {\n            $ret[] = $alpha[($index + (2 * 2)) % 26];\n        }\n    }\n\
    \    return implode($ret);\n}", "    // Your code here\n}\n", "\t$alphabet = \"\
    abcdefghijklmnopqrstuvwxyz\";\n\t$shiftedAlphabet = \"cdefghijklmnopqrstuvwxyzab\"\
    ;\n\t$encryptedString = \"\";\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$encryptedString\
    \ .= $shiftedAlphabet[strpos($alphabet, $s[$i])];\n\t}\n\treturn $encryptedString;\n\
    }", "    $letters = str_split($s);\n    $code = \"\";\n    foreach ($letters as\
    \ $letter) {\n        $code .= chr(ord($letter) + 2 * 2);\n    }\n    return $code;\n\
    }\necho encrypt(\"hi\");\necho \"\\n\";\necho encrypt(\"asdfghjkl\");\necho \"\
    \\n\";\necho encrypt(\"gf\");\necho \"\\n\";\necho encrypt(\"et\");\necho \"\\\
    n\";", "\t$alphabet = range('a', 'z');\n\t$alength = count($alphabet);\n\t$shifted\
    \ = array_slice($alphabet, 2, $alength - 2);\n\t$shifted[] = $alphabet[0];\n\t\
    $shifted[] = $alphabet[1];\n\t$encryption = array_combine($alphabet, $shifted);\n\
    \t$char_array = str_split($s);\n\tforeach ($char_array as $key => $value) {\n\t\
    \tif (ctype_alpha($value)) {\n\t\t\t$char_array[$key] = $encryption[$value];\n\
    \t\t}\n\t}\n\treturn implode($char_array);\n}", "\t// 1. make an array for the\
    \ alphabets\n\t$alphabet = array(\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"\
    h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"\
    u\",\"v\",\"w\",\"x\",\"y\",\"z\");\n\t// 2. make an array for the encrypted string\n\
    \t$en = array();\n\t// 3. split the string into an array\n\t$s_arr = str_split($s);\n\
    \t// 4. loop through the string array, rotate the alphabet according to the letter\
    \ and push it to the encrypted array\n\tforeach ($s_arr as $letter) {\n\t\t//\
    \ make an array for the letter\n\t\t$l = array();\n\t\t// find the index of the\
    \ letter in the alphabet array\n\t\t$i = array_search($letter, $alphabet);\n\t\
    \t// find the new index of the letter\n\t\t$j = $i + 4;\n\t\tif ($j > 25) {\n\t\
    \t\t$j = $j - 26;\n\t\t}\n\t\t// push the alphabet element to the letter array\n\
    \t\tarray_push($l, $alphabet[$j]);\n\t\t// push the letter array to the encrypted\
    \ array\n\t\tarray_push($en, $l);\n\t}\n\t// 5. implode the encrypted array\n\t\
    $en_str = implode(\"\", $en);\n\t// 6. return the encrypted string\n\treturn $en_str;\n\
    }", "    $alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    $rotated = \"\";\n \
    \   for ($i = 0; $i < strlen($s); $i++) {\n        $index = strpos($alphabet,\
    \ $s[$i]);\n        $rotated .= $alphabet[$index + 2];\n    }\n    return $rotated;\n\
    }", "  $num_letters = 26;\n  $shift = 2 * 2;\n\n  $result = \"\";\n  for ($i =\
    \ 0; $i < strlen($s); $i++) {\n    $char = $s[$i];\n    $pos = ord($char) - ord('a');\n\
    \    $pos += $shift;\n    $pos %= $num_letters;\n    $result .= chr($pos + ord('a'));\n\
    \  }\n  return $result;\n}\n", "    $asciiArray = array();\n    $result = '';\n\
    \    for ($i = 0; $i < strlen($s); $i++) {\n        $asciiArray[$i] = ord($s[$i]);\n\
    \        if ($asciiArray[$i] >= 97 && $asciiArray[$i] <= 121) {\n            $asciiArray[$i]\
    \ = $asciiArray[$i] + 2;\n        } else if ($asciiArray[$i] >= 122 && $asciiArray[$i]\
    \ <= 122) {\n            $asciiArray[$i] = 97;\n        } else if ($asciiArray[$i]\
    \ >= 98 && $asciiArray[$i] <= 122) {\n            $asciiArray[$i] = 98;\n    \
    \    }\n        $result .= chr($asciiArray[$i]);\n    }\n    return $result;\n\
    }", "\t$s = strtolower($s);\n\t$alphabet = range('a', 'z');\n\t$rotated = array_merge(array_slice($alphabet,\
    \ -2), array_slice($alphabet, 0, -2));\n\t$encrypted = \"\";\n\tfor ($i = 0; $i\
    \ < strlen($s); $i++) {\n\t\tif (array_search($s[$i], $alphabet) === false) {\n\
    \t\t\t$encrypted .= $s[$i];\n\t\t} else {\n\t\t\t$encrypted .= $rotated[array_search($s[$i],\
    \ $alphabet)];\n\t\t}\n\t}\n\treturn $encrypted;\n}", "\t$s = strtolower($s);\n\
    \t$len = strlen($s);\n\tfor ($i = 0; $i < $len; $i++) {\n\t\tif (ord($s[$i]) >=\
    \ ord('a') && ord($s[$i]) <= ord('z')) {\n\t\t\t$s[$i] = chr((ord($s[$i]) - ord('a')\
    \ + 2) % 26 + ord('a'));\n\t\t}\n\t}\n\treturn $s;\n}\necho encrypt(\"hi\") .\
    \ PHP_EOL;\necho encrypt(\"asdfghjkl\") . PHP_EOL;\necho encrypt(\"gf\") . PHP_EOL;\n\
    echo encrypt(\"et\") . PHP_EOL;\n", "    $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    $shifted = substr($alphabet, 2).substr($alphabet, 0, 2);\n    $arr = str_split($s);\n\
    \    $newArr = [];\n    foreach ($arr as $letter) {\n        $newArr[] = $shifted[strpos($alphabet,\
    \ $letter)];\n    }\n    return implode($newArr);\n}\n", "\t$letters = range('a',\
    \ 'z');\n\t$translate = array_slice($letters, 2);\n\t$translate = array_merge($translate,\
    \ array_slice($letters, 0, 2));\n\t$translate = array_combine($letters, $translate);\n\
    \treturn strtr($s, $translate);\n}\n\n$s = \"z y x w v u t s r q p o n m l k j\
    \ i h g f e d c b a\";\n$s = explode(\" \", $s);\nshuffle($s);\n$s = implode(\"\
    \ \", $s);\necho $s . \"\\n\";\necho encrypt($s) . \"\\n\";\n", "\t$s = strtolower($s);\n\
    \t$s = str_split($s);\n\tforeach ($s as $key => $value) {\n\t\t$s[$key] = getEncryptedLetter($value);\n\
    \t}\n\treturn implode($s);\n}\n", "// Your code here\n$rotated_char_array = [];\n\
    \t$char_array = str_split($s);\n\t$char_array_length = count($char_array);\n\t\
    foreach ($char_array as $char) {\n\t\tif ($char == \" \") {\n\t\t\t$rotated_char_array[]\
    \ = \" \";\n\t\t} else {\n\t\t\t$rotated_char_array[] = rot($char);\n\t\t}\n\t\
    }\n\t$encrypted_string = implode(\"\", $rotated_char_array);\n\treturn $encrypted_string;\n\
    }\n", "// code here\n}", "\t// Your code here!\n\t$alphabet = range('a', 'z');\n\
    \t$alphabet = array_merge($alphabet, $alphabet);\n\t\n\t$new_string = \"\";\n\t\
    \n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$new_string .= $alphabet[array_search($s[$i],\
    \ $alphabet) + 2];\n\t}\n\t\n\treturn $new_string;\n}\n", "    $s = strtolower($s);\n\
    \    $s = str_split($s);\n    $a = range('a', 'z');\n    $length = count($a);\n\
    \    $a = array_merge($a, $a);\n    for ($i = 0; $i < count($s); $i++) {\n   \
    \     $s[$i] = $a[array_search($s[$i], $a) + (2 * 2)];\n    }\n    return implode($s);\n\
    }\n", "\t$alphabet = array(\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"\
    i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"\
    v\",\"w\",\"x\",\"y\",\"z\");\n\t$new_arr = [];\n\tfor ($i=0; $i < strlen($s);\
    \ $i++) { \n\t\t$index = array_search($s[$i], $alphabet);\n\t\t$new_index = $index\
    \ + 2;\n\t\tif ($new_index > 25) {\n\t\t\t$new_index = $new_index - 26;\n\t\t\
    }\n\t\t$new_arr[] = $alphabet[$new_index];\n\t}\n\t$new_str = implode($new_arr);\n\
    \treturn $new_str;\n}\n\necho encrypt(\"hi\");\necho \"\\n\";\necho encrypt(\"\
    asdfghjkl\");\necho \"\\n\";\necho encrypt(\"gf\");\necho \"\\n\";\necho encrypt(\"\
    et\");\necho \"\\n\";", "  $alphabet = 'abcdefghijklmnopqrstuvwxyz';\n  $result\
    \ = '';\n  for ($i = 0; $i < strlen($s); $i++) {\n    $index = strpos($alphabet,\
    \ $s[$i]);\n    $result .= $alphabet[$index + 4];\n  }\n  return $result;\n}\n\
    echo encrypt(\"hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho\
    \ encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\") . \"\\n\";\n", "    $r = '';\n\
    \    for ($i = 0; $i < strlen($s); $i++) {\n        $r .= chr(ord($s[$i]) + (ord($s[$i])\
    \ - 97) * 2);\n    }\n    return $r;\n}\n", "    $s = strtolower($s);\n    $length\
    \ = strlen($s);\n    $encrypted = \"\";\n    for ($i = 0; $i < $length; $i++){\n\
    \        $encrypted .= chr(ord($s[$i]) + ($i * 2));\n    }\n    return $encrypted;\n\
    }\n", "\t// return from the alphabet the letter that is two to the left of the\
    \ letter passed as an argument\n\t// gmaps.com/testing/chris/rotate.html\n\t$alpa\
    \ = array('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z');\n\
    \t$s = strtolower($s);\n\t$s = str_split($s);\n\t$encrypt = \"\";\n\tforeach ($s\
    \ as $i) {\n\t\t$index = array_search($i, $alpa);\n\t\tif ($index > 1) {\n\t\t\
    \t$encrypt .= $alpa[$index - 2];\n\t\t} elseif ($index == 0) {\n\t\t\t$encrypt\
    \ .= $alpa[24];\n\t\t} elseif ($index == 1) {\n\t\t\t$encrypt .= $alpa[25];\n\t\
    \t}\n\t}\n\treturn $encrypt;\n}", "    $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    $encryptedString = \"\";\n    for ($i = 0; $i < strlen($s); $i++) {\n \
    \       if (ord($s[$i]) == 32) {\n            $encryptedString .= chr(32);\n \
    \       } else {\n            $charLocation = strpos($alphabet, $s[$i]);\n   \
    \         $encryptedString .= $alphabet[$charLocation + 2 * 2];\n        }\n \
    \   }\n    return $encryptedString;\n}\n", "\t$alphabet = range('a', 'z');\n\t\
    $newString = \"\";\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$letter = substr($s,\
    \ $i, 1);\n\t\t$index = array_search($letter, $alphabet);\n\t\t$index = ($index\
    \ * 2 + 2) % 26;\n\t\t$newString .= $alphabet[$index];\n\t}\n\treturn $newString;\n\
    }", "\t// do stuff\n\t$alphabet = array('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z');\n\
    \t$input = str_split($s);\n\t$result = array();\n\tforeach ($input as $l) {\n\t\
    \tif (in_array($l, $alphabet)) {\n\t\t\t$i = array_search($l, $alphabet);\n\t\t\
    \tif ($i > 23) {\n\t\t\t\t$result[] = $alphabet[$i-24];\n\t\t\t} else {\n\t\t\t\
    \t$result[] = $alphabet[$i+2];\n\t\t\t}\n\t\t} else {\n\t\t\t$result[] = $l;\n\
    \t\t}\n\t}\n\treturn implode('', $result);\n}\n", "  $l = array();\n  $l = str_split($s);\n\
    \  $r = array();\n  foreach ($l as $k) {\n    if ($k != \" \") {\n      if (ord($k)\
    \ >= 65 && ord($k) <= 87) {\n        $r[] = chr(ord($k) + 2);\n      } elseif\
    \ (ord($k) >= 88 && ord($k) <= 90) {\n        $r[] = chr(ord($k) - 24);\n    \
    \  } elseif (ord($k) >= 97 && ord($k) <= 119) {\n        $r[] = chr(ord($k) +\
    \ 2);\n      } elseif (ord($k) >= 120 && ord($k) <= 122) {\n        $r[] = chr(ord($k)\
    \ - 24);\n      }\n    } else {\n      $r[] = $k;\n    }\n  }\n  return implode(\"\
    \", $r);\n}\n\necho \"Testing Encrypt\\n\";\necho encrypt(\"hi\") . \"\\n\";\n\
    echo encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho\
    \ encrypt(\"et\") . \"\\n\";\n", "  $alphabet = array(\n    \"a\", \"b\", \"c\"\
    , \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\",\n    \"k\", \"l\", \"m\", \"\
    n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\",\n    \"u\", \"v\", \"w\", \"x\"\
    , \"y\", \"z\"\n  );\n  $s = strtolower($s);\n  $s = str_split($s);\n  $newS =\
    \ array();\n  for ($i = 0; $i < count($s); $i++) {\n    $idx = array_search($s[$i],\
    \ $alphabet);\n    $newIdx = $idx - 2 * 2;\n    if ($newIdx < 0) {\n      $newIdx\
    \ = $newIdx + 26;\n    }\n    array_push($newS, $alphabet[$newIdx]);\n  }\n  return\
    \ implode(\"\", $newS);\n}\n\n$input = \"asdfghjkl\";\nprint_r(encrypt($input));\n\
    echo \"\\n\";\n", "\n}", "\t$letters = range('a', 'z');\n\t$rotated = array_rotate($letters,\
    \ -4);\n\t$str = str_split($s);\n\tforeach ($str as $i => $c) {\n\t\t$str[$i]\
    \ = $rotated[array_search($c, $letters)];\n\t}\n\treturn implode($str);\n}\n",
  "  $alphabet = 'abcdefghijklmnopqrstuvwxyz';\n  $arr = str_split($s);\n  $encrypt\
    \ = '';\n  foreach ($arr as $value) {\n    $index = strpos($alphabet, $value);\n\
    \    $index += ($index % 2 == 0) ? 2 : 4;\n    $encrypt .= $alphabet[$index];\n\
    \  }\n  return $encrypt;\n}", "\t$new_s = \"\";\n\t$length = strlen($s);\n\tfor\
    \ ($i = 0; $i < $length; $i++) {\n\t\t$new_s = $new_s . chr(ord($s[$i])+4);\n\t\
    }\n\treturn $new_s;\n}\n", "\t$tmp = str_split($s);\n\t$r = [];\n\tforeach ($tmp\
    \ as $c) {\n\t\tif (ord($c) >= 97 && ord($c) <= 121) {\n\t\t\t$r[] = chr(ord($c)\
    \ + 2);\n\t\t} else if (ord($c) == 122) {\n\t\t\t$r[] = 'a';\n\t\t} else if (ord($c)\
    \ == 123) {\n\t\t\t$r[] = 'b';\n\t\t} else {\n\t\t\t$r[] = $c;\n\t\t}\n\t}\n\t\
    return implode('', $r);\n}\n", "\t$str = \"abcdefghijklmnopqrstuvwxyz\";\n\t$len\
    \ = strlen($s);\n\t$newStr = \"\";\n\tfor ($i = 0; $i < $len; $i++) {\n\t\t$current\
    \ = $s[$i];\n\t\t$index = strpos($str, $current);\n\t\t$newIndex = $index + $i\
    \ * 2;\n\t\tif ($newIndex >= 26) {\n\t\t\t$newIndex -= 26;\n\t\t}\n\t\t$newStr\
    \ .= $str[$newIndex];\n\t}\n\treturn $newStr;\n}\n", "    $new_string = \"\";\n\
    \    for ($i = 0; $i < strlen($s); $i++) {\n        $new_string .= chr(ord($s[$i])\
    \ + 2*2);\n    }\n    return $new_string;\n}\necho encrypt(\"hi\");\necho encrypt(\"\
    asdfghjkl\");\necho encrypt(\"gf\");\necho encrypt(\"et\");", "    $s = strtolower($s);\n\
    \    $encrypted = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        $encrypted\
    \ .= chr(ord($s[$i]) + 2 * 2);\n    }\n    return $encrypted;\n}\necho encrypt(\"\
    hi\");\necho \"\\n\";\necho encrypt(\"asdfghjkl\");\necho \"\\n\";\necho encrypt(\"\
    gf\");\necho \"\\n\";\necho encrypt(\"et\");\necho \"\\n\";", "  // code here\n\
    }\n", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\t$encrypt = \"\";\n\tfor\
    \ ($i = 0; $i < strlen($s); $i++) {\n\t\tif ($s[$i] === \"z\") {\n\t\t\t$encrypt\
    \ = $encrypt . \"b\";\n\t\t} else if ($s[$i] === \"y\") {\n\t\t\t$encrypt = $encrypt\
    \ . \"a\";\n\t\t} else {\n\t\t\t$encrypt = $encrypt . $alphabet[strpos($alphabet,\
    \ $s[$i]) + 2];\n\t\t}\n\t}\n\treturn $encrypt;\n}", "    $alphabet = array(\"\
    a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"\
    n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\");\n\
    \    $s = strtolower($s);\n    $s = str_split($s);\n    foreach ($s as $key =>\
    \ $value) {\n        if ($value == \" \") {\n            unset($s[$key]);\n  \
    \      }\n    }\n    $s = array_values($s);\n    $f = \"\";\n    for ($i=0; $i\
    \ < count($s); $i++) { \n        $t = array_search($s[$i], $alphabet);\n     \
    \   $t = $t + 2 * 2;\n        if ($t > count($alphabet) - 1) {\n            $t\
    \ = $t - count($alphabet);\n        }\n        $f = $f . $alphabet[$t];\n    }\n\
    \    return $f;\n}\necho encrypt(\"hi\");", "\t$alphabet = range('a', 'z');\n\t\
    $newString = \"\";\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$char = $s[$i];\n\
    \t\t$index = array_search($char, $alphabet);\n\t\t$newIndex = $index + 4;\n\t\t\
    if ($newIndex > 25) {\n\t\t\t$newIndex = $newIndex - 26;\n\t\t}\n\t\t$newString\
    \ .= $alphabet[$newIndex];\n\t}\n\treturn $newString;\n}\n\necho encrypt(\"hi\"\
    );\necho encrypt(\"asdfghjkl\");\necho encrypt(\"gf\");\necho encrypt(\"et\");",
  "\t// code here\n}", "    $alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    $length\
    \ = strlen($s);\n    $newString = \"\";\n    for ($i = 0; $i < $length; $i++)\
    \ {\n        $position = strpos($alphabet, $s[$i]);\n        $newPosition = $position\
    \ + (2 * 2);\n        if ($newPosition > 25) {\n            $newPosition = $newPosition\
    \ - 26;\n        }\n        $newString = $newString . $alphabet[$newPosition];\n\
    \    }\n    return $newString;\n}\n", "\t// create an array of the alphabet\n\t\
    $lower_alphabet = range('a', 'z');\n\t// create an array of the alphabet rotated\
    \ by 2 * 2 places\n\t$rotated_alphabet = array_slice($lower_alphabet, 2 * 2) +\
    \ array_slice($lower_alphabet, 0, 2 * 2);\n\t// create an array of the alphabet\
    \ rotated by 2 * 2 places\n\t$rotated_alphabet = array_combine($lower_alphabet,\
    \ $rotated_alphabet);\n\t// explode string into an array of characters\n\t$s_array\
    \ = str_split($s);\n\t// create an empty string\n\t$output = \"\";\n\t// loop\
    \ through each character in the array of characters and if it is a letter\n\t\
    // add it to the output variable after it has been rotated\n\tforeach ($s_array\
    \ as $char) {\n\t\tif (ctype_alpha($char)) {\n\t\t\t$output .= $rotated_alphabet[$char];\n\
    \t\t} else {\n\t\t\t$output .= $char;\n\t\t}\n\t}\n\t// return the string\n\t\
    return $output;\n}", "    $s = strtolower($s);\n    $s = str_split($s);\n    foreach\
    \ ($s as $char) {\n        if ($char == \"z\") {\n            $char = \"b\";\n\
    \        } elseif ($char == \"y\") {\n            $char = \"a\";\n        } else\
    \ {\n            $char = chr(ord($char) + 2);\n        }\n        $encrypted[]\
    \ = $char;\n    }\n    $encrypted = implode(\"\", $encrypted);\n    return $encrypted;\n\
    }", "\t$alphabet = 'abcdefghijklmnopqrstuvwxyz';\n\t$encrypted = '';\n\tfor ($i\
    \ = 0; $i < strlen($s); $i++) {\n\t\t$encrypted .= substr($alphabet, (strpos($alphabet,\
    \ $s[$i]) + 2*2) % 26, 1);\n\t}\n\treturn $encrypted;\n}\n\necho encrypt(\"hi\"\
    ) . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\
    \\n\";\necho encrypt(\"et\") . \"\\n\";", "    $low = 'abcdefghijklmnopqrstuvwxyz';\n\
    \    $shift = 2;\n    $lowChars = str_split($low);\n    $shiftChars = str_split($low,\
    \ $shift);\n    $shiftChars[0] = substr($low, -$shift);\n    $low = join('', $shiftChars);\n\
    \    $low = $low . $lowChars[0];\n    $alphabet = $low . strtoupper($low);\n \
    \   $alphabet = str_split($alphabet);\n    $s = str_split($s);\n    $encrypt =\
    \ '';\n    foreach ($s as $char) {\n        $currIndex = array_search($char, $alphabet);\n\
    \        $encrypt .= $alphabet[$currIndex+2];\n    }\n    return $encrypt;\n}",
  "    $result = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        $result .=\
    \ chr(ord($s[$i]) + 2 * 2);\n    }\n    return $result;\n}\necho encrypt(\"hi\"\
    ) . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\
    \\n\";\necho encrypt(\"et\") . \"\\n\";", "    $alphabet = array(\"a\", \"b\"\
    , \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\"\
    , \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\"\
    , \"y\", \"z\");\n    $encrypted = \"\";\n    for ($i = 0; $i < strlen($s); $i++)\
    \ {\n        $pos = array_search($s[$i], $alphabet);\n        $encrypted .= $alphabet[($pos\
    \ + 2) % count($alphabet)];\n    }\n    return $encrypted;\n}", "\t\n\t$alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n\t$result = \"\";\n\t\n\tfor ($i = 0; $i\
    \ < strlen($s); $i++) {\n\t\t$letter = $s[$i];\n\t\t\n\t\t$position = strpos($alphabet,\
    \ $letter);\n\t\t\n\t\tif ($position === false) {\n\t\t\t$new_position = $position;\n\
    \t\t} else {\n\t\t\t$new_position = ($position + 2) * 2;\n\t\t}\n\t\t\n\t\t$result\
    \ .= $alphabet[$new_position];\n\t}\n\t\n\treturn $result;\n}\n\necho encrypt(\"\
    hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\"\
    ) . \"\\n\";\necho encrypt(\"et\") . \"\\n\";", "\t$s = strtolower($s);\n\t$s\
    \ = str_split($s);\n\t$a = array();\n\t$b = array();\n\tfor ($i = 0; $i < 26;\
    \ $i++) {\n\t\t$a[] = chr(97 + $i);\n\t}\n\tfor ($i = 2; $i < 28; $i++) {\n\t\t\
    $b[] = chr(97 + $i);\n\t}\n\tfor ($i = 0; $i < count($s); $i++) {\n\t\tfor ($j\
    \ = 0; $j < count($a); $j++) {\n\t\t\tif ($s[$i] == $a[$j]) {\n\t\t\t\t$s[$i]\
    \ = $b[$j];\n\t\t\t}\n\t\t}\n\t}\n\treturn implode($s);\n}\n\necho encrypt(\"\
    hi\");\necho \"\\n\";\necho encrypt(\"asdfghjkl\");\necho \"\\n\";\necho encrypt(\"\
    gf\");\necho \"\\n\";\necho encrypt(\"et\");\necho \"\\n\";\n", "    // starts\
    \ from the middle\n    $alph = \"qwertzuiopasdfghjklyxcvbnm\";\n    $alph_array\
    \ = str_split($alph);\n    $alph_size = count($alph_array);\n    $array = str_split($s);\n\
    \    $size = count($array);\n    $e = array();\n    for ($i = 0; $i < $size; $i++)\
    \ {\n        $e[$i] = $alph_array[($alph_size + array_search($array[$i], $alph_array)\
    \ - 2 * ($i + 1)) % $alph_size];\n    }\n    return implode(\"\", $e);\n}\n",
  '}', "    $lowercase = strtolower($s);\n    $lowercase = str_split($lowercase);\n\
    \    $output = [];\n    foreach ($lowercase as $value) {\n        if ($value ==\
    \ \"z\") {\n            $value = \"b\";\n        } elseif ($value == \"y\") {\n\
    \            $value = \"a\";\n        } else {\n            $ordValue = ord($value);\n\
    \            $ordValue += 2 * 2;\n            $value = chr($ordValue);\n     \
    \   }\n        array_push($output, $value);\n    }\n    $output = implode(\"\"\
    , $output);\n    return $output;\n}\n", "  $alpha = 'abcdefghijklmnopqrstuvwxyz';\n\
    \  $rotated = substr($alpha, 2).substr($alpha, 0, 2);\n  return strtr($s, $alpha,\
    \ $rotated);\n}\n", "\t// Write your code here\n\t$l = strlen($s);\n\t$result\
    \ = '';\n\tfor ($i = 0; $i < $l; $i++){\n\t\t$result .= chr(ord($s[$i]) + ($i\
    \ * 2 + 1) * 2);\n\t}\n\treturn $result;\n}\n", "  $letters = str_split($s);\n\
    \  $count = count($letters);\n  $result = array();\n  $i = 0;\n  while ($i < $count)\
    \ {\n    $currentLetter = $letters[$i];\n    $nextLetter = $currentLetter + 2;\n\
    \    if ($nextLetter > 122) {\n      $result[] = $nextLetter - 26;\n    } else\
    \ if ($nextLetter == 97 || $nextLetter == 101) {\n      $result[] = $nextLetter\
    \ + 1;\n    } else {\n      $result[] = $nextLetter;\n    }\n    $i++;\n  }\n\
    \  $encrypted = implode($result);\n  return $encrypted;\n}\n", "\t$alphabet =\
    \ \"abcdefghijklmnopqrstuvwxyz\";\n\t$new_word = \"\";\n\tfor ($i = 0; $i < strlen($s);\
    \ $i++) {\n\t\t$new_word .= $alphabet[(strpos($alphabet, $s[$i]) + $i * 2) % 26];\n\
    \t}\n\treturn $new_word;\n}\nprint encrypt(\"hi\") . \"\\n\";\nprint encrypt(\"\
    asdfghjkl\") . \"\\n\";\nprint encrypt(\"gf\") . \"\\n\";\nprint encrypt(\"et\"\
    ) . \"\\n\";", "\t$a = array(\n\t\t\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"\
    g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\",\n\t\t\"n\", \"o\", \"p\", \"q\"\
    , \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"\n\t);\n\t$i =\
    \ 0;\n\t$r = \"\";\n\twhile ($i < strlen($s)) {\n\t\t$c = $s[$i];\n\t\tif (array_search($c,\
    \ $a) != -1) {\n\t\t\t$x = array_search($c, $a);\n\t\t\t$y = ($x + 2) * 2;\n\t\
    \t\tif ($y > 25) {\n\t\t\t\t$y = $y - 26;\n\t\t\t}\n\t\t\t$r = $r . $a[$y];\n\t\
    \t} else {\n\t\t\t$r = $r . $c;\n\t\t}\n\t\t$i = $i + 1;\n\t}\n\treturn $r;\n}",
  "\t// Write code here\n\treturn preg_replace_callback('/[a-z]/', function($c) {\n\
    \t\treturn chr(ord($c[0]) + 2 * 2);\n\t}, $s);\n}\n", "  $str = $s;\n  $newStr\
    \ = '';\n  $alpha = 'abcdefghijklmnopqrstuvwxyz';\n  $alphaArr = str_split($alpha);\n\
    \  $strArr = str_split($str);\n  foreach ($strArr as $key => $value) {\n    foreach\
    \ ($alphaArr as $key2 => $value2) {\n      if ($value == $value2) {\n        $newStr\
    \ .= $alphaArr[$key2 + 2];\n      }\n    }\n  }\n  return $newStr;\n}\necho encrypt(\"\
    hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\"\
    ) . \"\\n\";\necho encrypt(\"et\") . \"\\n\";", "    $s = strtolower($s);\n  \
    \  $b = \"\";\n    for ($i = 0; $i < strlen($s); $i++) {\n        $b .= chr(ord($s[$i])\
    \ + (2 * 2));\n    }\n    return $b;\n}\necho encrypt(\"Hi\") . PHP_EOL;\necho\
    \ encrypt(\"asdfghjkl\") . PHP_EOL;\necho encrypt(\"gf\") . PHP_EOL;\necho encrypt(\"\
    et\") . PHP_EOL;\n", "  $letters = str_split($s);\n  foreach ($letters as $index\
    \ => $letter) {\n    $new_index = ord($letter) + 2 * 2;\n    if ($new_index >\
    \ 122) {\n      $new_index = $new_index - 122 + 96;\n    }\n    $letters[$index]\
    \ = chr($new_index);\n  }\n  return implode($letters);\n}", "    $alphabet = range('a',\
    \ 'z');\n    $newAlphabet = array_splice($alphabet, 2);\n    $newAlphabet = array_merge($newAlphabet,\
    \ $alphabet);\n    $newAlphabet = array_combine($alphabet, $newAlphabet);\n  \
    \  $s = str_split($s);\n    foreach ($s as $key => $value) {\n        if (ctype_alpha($value))\
    \ {\n            $s[$key] = $newAlphabet[$value];\n        }\n    }\n    return\
    \ implode($s);\n}", "\t$c = \"\";\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\
    \t$c = $c . chr(ord($s[$i]) + 2 * 2);\n\t}\n\treturn $c;\n}\n$a = encrypt(\"asdfghjkl\"\
    );\nprint \"$a\\n\";\n", "    $s = strtolower($s);\n    $s_array = str_split($s);\n\
    \    $alphabet = range('a', 'z');\n    $alphabet_array = str_split($alphabet);\n\
    \    $alphabet_encrypt = array_shift($alphabet_array);\n    array_splice($alphabet_array,\
    \ 0, 2);\n    $alphabet_array = array_merge($alphabet_array, $alphabet_encrypt);\n\
    \    for ($i = 0; $i < count($s_array); $i++) {\n        $s_array[$i] = $alphabet_array[array_search($s_array[$i],\
    \ $alphabet)];\n    }\n    return implode('', $s_array);\n}\n", "  $arr = str_split($s);\n\
    \  $rv = [];\n  foreach ($arr as $a) {\n    $b = ord($a);\n    if ($b >= ord('a')\
    \ && $b <= ord('z')) {\n      $b += 2;\n      if ($b > ord('z')) {\n        $b\
    \ -= 26;\n      }\n    } else if ($b >= ord('A') && $b <= ord('Z')) {\n      $b\
    \ += 2;\n      if ($b > ord('Z')) {\n        $b -= 26;\n      }\n    }\n    $rv[]\
    \ = chr($b);\n  }\n  return implode($rv);\n}\n", "  $abc = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n  $newAbc = substr($abc, 2, strlen($abc)) . substr($abc, 0, 2);\n  $encrypted\
    \ = \"\";\n  for ($i = 0; $i < strlen($s); $i++) {\n    $n = strpos($abc, $s[$i]);\n\
    \    $encrypted .= $newAbc[$n];\n  }\n  return $encrypted;\n}", "  $alpha = str_split(\"\
    abcdefghijklmnopqrstuvwxyz\");\n  $crypt = str_split($s);\n  $encrypted = [];\n\
    \  foreach ($crypt as $char) {\n    $char_pos = array_search($char, $alpha);\n\
    \    if ($char_pos == 0) {\n      $rotated_pos = 23;\n    } elseif ($char_pos\
    \ == 1) {\n      $rotated_pos = 24;\n    } elseif ($char_pos == 2) {\n      $rotated_pos\
    \ = 25;\n    } else {\n      $rotated_pos = $char_pos - 2;\n    }\n    $encrypted[]\
    \ = $alpha[$rotated_pos];\n  }\n  return implode(\"\", $encrypted);\n}\n\necho\
    \ encrypt(\"hi\");\necho \"\\n\";\necho encrypt(\"asdfghjkl\");\necho \"\\n\"\
    ;\necho encrypt(\"gf\");\necho \"\\n\";\necho encrypt(\"et\");\necho \"\\n\";\n\
    echo encrypt(\"abcdefghijklmnopqrstuvwxyz\");\necho \"\\n\";", "    $s = strtolower($s);\n\
    \    $r = \"\";\n    for ($i = 0; $i < strlen($s); $i++) {\n        $n = ord($s[$i])\
    \ + (2 * 2);\n        if ($n > 122) {\n            $n = 96 + ($n - 122);\n   \
    \     }\n        $r .= chr($n);\n    }\n    return $r;\n}\n", "\t$a = range('a',\
    \ 'z');\n\t$s = str_split($s);\n\t$out = \"\";\n\t$l = count($a);\n\tforeach ($s\
    \ as $c) {\n\t\t$i = array_search($c, $a);\n\t\t$i += 2 * 2;\n\t\tif ($i >= $l)\
    \ {\n\t\t\t$i -= $l;\n\t\t}\n\t\t$out .= $a[$i];\n\t}\n\treturn $out;\n}\n\necho\
    \ encrypt(\"hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"\
    gf\") . \"\\n\";\necho encrypt(\"et\") . \"\\n\";", "    $alphabet = 'abcdefghijklmnopqrstuvwxyz';\n\
    \    $newString = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        $character\
    \ = $s[$i];\n        $oldIndex = strpos($alphabet, $character);\n        $newIndex\
    \ = $oldIndex + 4;\n        $newCharacter = $alphabet[$newIndex];\n        $newString\
    \ = $newString . $newCharacter;\n    }\n    return $newString;\n}", "\t// define\
    \ alphabet to be used\n\t$alphabet = array(\"a\", \"b\", \"c\", \"d\", \"e\",\
    \ \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\"\
    , \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\");\n\t//\
    \ put string into an array\n\t$sArray = str_split($s);\n\t// define new empty\
    \ array to store encrypted string\n\t$eArray = array();\n\t// loop over character\
    \ in string\n\tforeach ($sArray as $key => $value) {\n\t\t// find index for character\
    \ in alphabet array\n\t\t$index = array_search($value, $alphabet);\n\t\t// add\
    \ two to index\n\t\t$newIndex = $index + 2;\n\t\t// if index is greater than 25(the\
    \ last index in the alphabet)\n\t\tif ($newIndex > 25) {\n\t\t\t// add two to\
    \ index\n\t\t\t$newIndex += 2;\n\t\t\t// if index is greater than 25\n\t\t\tif\
    \ ($newIndex > 25) {\n\t\t\t\t// subtract 26(the number of characters in the alphabet)\
    \ from index\n\t\t\t\t$newIndex -= 26;\n\t\t\t}\n\t\t}\n\t\t// add character at\
    \ new index to empty array\n\t\tarray_push($eArray, $alphabet[$newIndex]);\n\t\
    }\n\t// join array into string\n\t$eString = implode($eArray);\n\t// return encrypted\
    \ string\n\treturn $eString;\n}\necho encrypt(\"hi\") . \"\\n\";\necho encrypt(\"\
    asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\"\
    ) . \"\\n\";", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\t$alphabetArray\
    \ = str_split($alphabet);\n\t$sArray = str_split($s);\n\t$firstLetter = $sArray[0];\n\
    \t$resultArray = [];\n\tforeach ($sArray as $char) {\n\t\t$index = array_search($char,\
    \ $alphabetArray);\n\t\t$newIndex = $index + 4;\n\t\tif ($newIndex >= count($alphabetArray))\
    \ {\n\t\t\t$newIndex = $newIndex - 26;\n\t\t}\n\t\tarray_push($resultArray, $alphabetArray[$newIndex]);\n\
    \t}\n\treturn implode($resultArray);\n}\n", "    // Your code here\n    $alphabet\
    \ = range('a', 'z');\n    $nums = range(0, 25);\n    $unshiftedAlphabet = array_combine($nums,\
    \ $alphabet);\n    $unshiftedAlphabet = array_flip($unshiftedAlphabet);\n    $shiftedAlphabet\
    \ = array_shift($unshiftedAlphabet, 2);\n    $shiftedAlphabet = array_merge($shiftedAlphabet,\
    \ $unshiftedAlphabet);\n    $output = '';\n    $s = strtolower($s);\n    for ($i\
    \ = 0; $i < strlen($s); $i++){\n      $num = $shiftedAlphabet[$s[$i]];\n     \
    \ $output .= array_search($num, $shiftedAlphabet);\n    }\n    return $output;\n\
    }\n", "\t$result = '';\n\tforeach (str_split($s) as $letter) {\n\t\t$result .=\
    \ chr(ord($letter) + 4);\n\t}\n\treturn $result;\n}\n", "\t$alphabet = 'abcdefghijklmnopqrstuvwxyz';\n\
    \t$alphabet_array = str_split($alphabet);\n\t$s_array = str_split($s);\n\t$result\
    \ = array();\n\t$int_array = array();\n\tforeach ($s_array as $l) {\n\t\tarray_push($int_array,\
    \ array_search($l, $alphabet_array));\n\t}\n\tforeach ($int_array as $i) {\n\t\
    \tarray_push($result, $alphabet_array[($i + 4) % 26]);\n\t}\n\t$result = implode($result);\n\
    \treturn $result;\n}\necho encrypt(\"hi\") . PHP_EOL;\necho encrypt(\"asdfghjkl\"\
    ) . PHP_EOL;\necho encrypt(\"gf\") . PHP_EOL;\necho encrypt(\"et\") . PHP_EOL;",
  "\t$arr_str = str_split($s);\n\t$new_str = '';\n\tforeach ($arr_str as $key => $value)\
    \ {\n\t\t$new_str .= chr(ord($value) + 2 * 2);\n\t}\n\treturn $new_str;\n}\n$s\
    \ = \"hi\";\necho encrypt($s);", "    $alphabet = array('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z');\n\
    \    $encrypted = \"\";\n    $s = strtolower($s);\n    $length = strlen($s);\n\
    \    for ($i = 0; $i < $length; $i++) {\n        if (array_search($s[$i], $alphabet)\
    \ == false) {\n            return \"Invalid input.\";\n        }\n        if (array_search($s[$i],\
    \ $alphabet) + 4 >= 26) {\n            $encrypted .= $alphabet[array_search($s[$i],\
    \ $alphabet) + 4 - 26];\n        } else {\n            $encrypted .= $alphabet[array_search($s[$i],\
    \ $alphabet) + 4];\n        }\n    }\n    return $encrypted;\n}"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

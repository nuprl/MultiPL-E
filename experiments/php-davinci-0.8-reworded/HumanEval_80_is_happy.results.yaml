language: php
name: HumanEval_80_is_happy
results:
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    if(strlen($s) < 3) {\n        return false;\n\
    \    }\n\n    for($i = 0; $i < strlen($s); $i++) {\n        if($s[$i] == $s[$i\
    \ + 1] && $s[$i] == $s[$i + 2]) {\n            return false;\n        }\n    }\n\
    \n    return true;\n}\n\nif(is_happy(\"a\")) {\n    echo \"true\" . PHP_EOL;\n\
    } else {\n    echo \"false\" . PHP_EOL;\n}\n\nif(is_happy(\"aa\")) {\n    echo\
    \ \"true\" . PHP_EOL;\n} else {\n    echo \"false\" . PHP_EOL;\n}\n\nif(is_happy(\"\
    abcd\")) {\n    echo \"true\" . PHP_EOL;\n} else {\n    echo \"false\" . PHP_EOL;\n\
    }\n\nif(is_happy(\"aabb\")) {\n    echo \"true\" . PHP_EOL;\n} else {\n    echo\
    \ \"false\" . PHP_EOL;\n}\n\nif(is_happy(\"adb\")) {\n    echo \"true\" . PHP_EOL;\n\
    } else {\n    echo \"false\" . PHP_EOL;\n}\n\nif(is_happy(\"xyy\")) {\n    echo\
    \ \"true\" . PHP_EOL;\n} else {\n    echo \"false\" . PHP_EOL;\n}\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "false\nfalse\n\nWarning: Uninitialized string offset 4 in /tmp/tmps9ufjmaf.php\
    \ on line 24\ntrue\n\nWarning: Uninitialized string offset 4 in /tmp/tmps9ufjmaf.php\
    \ on line 24\n\nWarning: Uninitialized string offset 4 in /tmp/tmps9ufjmaf.php\
    \ on line 24\ntrue\n\nWarning: Uninitialized string offset 3 in /tmp/tmps9ufjmaf.php\
    \ on line 24\ntrue\n\nWarning: Uninitialized string offset 3 in /tmp/tmps9ufjmaf.php\
    \ on line 24\n\nWarning: Uninitialized string offset 3 in /tmp/tmps9ufjmaf.php\
    \ on line 24\ntrue\n\nWarning: Uninitialized string offset 4 in /tmp/tmps9ufjmaf.php\
    \ on line 24\n\nWarning: Uninitialized string offset 4 in /tmp/tmps9ufjmaf.php\
    \ on line 24\n\nWarning: Uninitialized string offset 4 in /tmp/tmps9ufjmaf.php\
    \ on line 24\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps9ufjmaf.php:75\n\
    Stack trace:\n#0 /tmp/tmps9ufjmaf.php(82): test()\n#1 {main}\n  thrown in /tmp/tmps9ufjmaf.php\
    \ on line 75\n"
  timestamp: 1659824387
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    if(strlen($s)<3) return false;\n    $len\
    \ = strlen($s);\n    for($i=0;$i<$len-2;$i++){\n        if($s[$i] == $s[$i+1]\
    \ || $s[$i] == $s[$i+2] || $s[$i+1] == $s[$i+2]){\n            return false;\n\
    \        }\n    }\n    return true;\n}\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824387
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n\t$sl = strlen($s);\n\t$distinct = 1;\n\t$sc\
    \ = str_split($s);\n\tfor ($i = 0; $i < $sl; $i++) {\n\t\tif ($i < $sl - 2) {\n\
    \t\t\t$b = array_slice($sc, $i, 3);\n\t\t\t$distinct += count(array_unique($b));\n\
    \t\t}\n\t}\n\tif ($distinct >= 3) {\n\t\treturn true;\n\t} else {\n\t\treturn\
    \ false;\n\t}\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfl0bze68.php:42\n\
    Stack trace:\n#0 /tmp/tmpfl0bze68.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpfl0bze68.php\
    \ on line 42\n"
  timestamp: 1659824387
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $len = strlen($s);\n    if ($len < 3) {\n\
    \        return false;\n    }\n    for ($i = 0; $i < $len - 2; $i++) {\n     \
    \   if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i +\
    \ 2]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction\
    \ candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824386
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n  $str_len = strlen($s);\n  if($str_len < 3)\
    \ {\n    return false;\n  }\n  for($i = 0; $i < $str_len - 2; $i++) {\n    if($s[$i]\
    \ == $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n     \
    \ return false;\n    }\n  }\n  return true;\n}\n\necho is_happy('a') ? 'true'\
    \ : 'false';\necho \"\\n\";\necho is_happy('aa') ? 'true' : 'false';\necho \"\\\
    n\";\necho is_happy('abcd') ? 'true' : 'false';\necho \"\\n\";\necho is_happy('aabb')\
    \ ? 'true' : 'false';\necho \"\\n\";\necho is_happy('adb') ? 'true' : 'false';\n\
    echo \"\\n\";\necho is_happy('xyy') ? 'true' : 'false';\necho \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'false

    false

    true

    false

    true

    false

    '
  timestamp: 1659824386
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $len = strlen($s);\n    if ($len < 3) {\n\
    \        return false;\n    } else {\n        for ($i = 2; $i < $len; $i++) {\n\
    \            if ($s[$i] === $s[$i - 1] && $s[$i] === $s[$i - 2]) {\n         \
    \       return false;\n            }\n        }\n        return true;\n    }\n\
    }\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppgle0gjh.php:39\n\
    Stack trace:\n#0 /tmp/tmppgle0gjh.php(46): test()\n#1 {main}\n  thrown in /tmp/tmppgle0gjh.php\
    \ on line 39\n"
  timestamp: 1659824386
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    if(strlen($s) < 3) {\n        return false;\n\
    \    }\n    for($i = 0; $i < strlen($s) - 2; $i++) {\n        if($s[$i] == $s[$i\
    \ + 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\n$s = 'abcd';\n\necho is_happy($s);\n\
    function candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1659824387
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $happy = true;\n    for ($i = 0; $i < strlen($s)\
    \ - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i\
    \ + 1] == $s[$i + 2]) {\n            $happy = false;\n        }\n    }\n    return\
    \ $happy;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn3c6ofuh.php:33\n\
    Stack trace:\n#0 /tmp/tmpn3c6ofuh.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpn3c6ofuh.php\
    \ on line 33\n"
  timestamp: 1659824386
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    if(strlen($s) < 3) return false;\n    $l\
    \ = strlen($s);\n    for($i = 0; $i < $l - 2; $i++){\n        if($s[$i] == $s[$i\
    \ + 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) return false;\n  \
    \  }\n    return true;\n}\necho is_happy(\"a\");\necho is_happy(\"aa\");\necho\
    \ is_happy(\"abcd\");\necho is_happy(\"aabb\");\necho is_happy(\"adb\");\necho\
    \ is_happy(\"xyy\");\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1659824386
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $len = strlen($s);\n    if ($len >= 3)\
    \ {\n        $arr = [];\n        for ($i = 0; $i < $len - 2; $i++) {\n       \
    \     $str = substr($s, $i, 3);\n            $str = preg_replace('/[^a-zA-Z0-9_\
    \ -]/s', '', $str);\n            if (count(array_unique(str_split($str))) != 3)\
    \ {\n                return false;\n            }\n        }\n        return true;\n\
    \    }\n    return false;\n}\nvar_dump(is_happy('a')); //false\nvar_dump(is_happy('aa'));\
    \ //false\nvar_dump(is_happy('abcd')); //true\nvar_dump(is_happy('aabb')); //false\n\
    var_dump(is_happy('adb')); //true\nvar_dump(is_happy('xyy')); //false\nfunction\
    \ candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'bool(false)

    bool(false)

    bool(true)

    bool(false)

    bool(true)

    bool(false)

    '
  timestamp: 1659824386
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $is = false;\n    $count = strlen($s);\n\
    \    if ($count >= 3) {\n        $chars = str_split($s);\n        $i = 0;\n  \
    \      while ($i < $count - 2) {\n            if ($chars[$i] != $chars[$i + 1]\
    \ && $chars[$i] != $chars[$i + 2] && $chars[$i + 1] != $chars[$i + 2]) {\n   \
    \             $is = true;\n            } else {\n                $is = false;\n\
    \                break;\n            }\n            $i++;\n        }\n    }\n\n\
    \    return $is;\n}\n\necho '>>> is_happy(a)' . PHP_EOL;\nvar_dump(is_happy('a'));\n\
    echo '>>> is_happy(aa)' . PHP_EOL;\nvar_dump(is_happy('aa'));\necho '>>> is_happy(abcd)'\
    \ . PHP_EOL;\nvar_dump(is_happy('abcd'));\necho '>>> is_happy(aabb)' . PHP_EOL;\n\
    var_dump(is_happy('aabb'));\necho '>>> is_happy(adb)' . PHP_EOL;\nvar_dump(is_happy('adb'));\n\
    echo '>>> is_happy(xyy)' . PHP_EOL;\nvar_dump(is_happy('xyy'));\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '>>> is_happy(a)

    bool(false)

    >>> is_happy(aa)

    bool(false)

    >>> is_happy(abcd)

    bool(true)

    >>> is_happy(aabb)

    bool(false)

    >>> is_happy(adb)

    bool(true)

    >>> is_happy(xyy)

    bool(false)

    '
  timestamp: 1659824387
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    if(strlen($s) < 3) {\n        return false;\n\
    \    }\n    $len = strlen($s);\n    for($i = 0; $i < $len - 2; $i++) {\n     \
    \   if($s[$i] == $s[$i + 1] && $s[$i] == $s[$i + 2]) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\necho is_happy(\"a\") . PHP_EOL;\necho\
    \ is_happy(\"aa\") . PHP_EOL;\necho is_happy(\"abcd\") . PHP_EOL;\necho is_happy(\"\
    aabb\") . PHP_EOL;\necho is_happy(\"adb\") . PHP_EOL;\necho is_happy(\"xyy\")\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\n\n1\n1\n1\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6sg92_3v.php:44\n\
    Stack trace:\n#0 /tmp/tmp6sg92_3v.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp6sg92_3v.php\
    \ on line 44\n"
  timestamp: 1659824387
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $length = strlen($s);\n    if ($length\
    \ < 3) {\n        return false;\n    }\n    for ($i = 2; $i < $length; $i++) {\n\
    \        if (ord($s[$i]) === ord($s[$i - 1]) && ord($s[$i]) === ord($s[$i - 2]))\
    \ {\n            return false;\n        }\n    }\n    return true;\n}\necho is_happy('a')\
    \ . PHP_EOL;\necho is_happy('aa') . PHP_EOL;\necho is_happy('abcd') . PHP_EOL;\n\
    echo is_happy('aabb') . PHP_EOL;\necho is_happy('adb') . PHP_EOL;\necho is_happy('xyy')\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\n\n1\n1\n1\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppykfp72f.php:44\n\
    Stack trace:\n#0 /tmp/tmppykfp72f.php(51): test()\n#1 {main}\n  thrown in /tmp/tmppykfp72f.php\
    \ on line 44\n"
  timestamp: 1659824387
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n  $i = 0;\n  while ($i < strlen($s) - 2) {\n\
    \    if (($s[$i] == $s[$i + 1]) || ($s[$i] == $s[$i + 2]) || ($s[$i + 1] == $s[$i\
    \ + 2])) {\n      return false;\n    }\n    $i++;\n  }\n  return true;\n}\nfunction\
    \ candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsmmwig69.php:33\n\
    Stack trace:\n#0 /tmp/tmpsmmwig69.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpsmmwig69.php\
    \ on line 33\n"
  timestamp: 1659824387
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n\t$k = strlen($s);\n\tif ($k < 3) {\n\t\treturn\
    \ false;\n\t} else {\n\t\t$c1 = $s[0];\n\t\t$c2 = $s[1];\n\t\t$c3 = $s[2];\n\t\
    \tif ($c1 != $c2 && $c1 != $c3 && $c2 != $c3) {\n\t\t\tfor ($i = 3; $i < $k; $i++)\
    \ {\n\t\t\t\t$c1 = $c2;\n\t\t\t\t$c2 = $c3;\n\t\t\t\t$c3 = $s[$i];\n\t\t\t\tif\
    \ ($c1 == $c2 || $c1 == $c3 || $c2 == $c3) {\n\t\t\t\t\treturn false;\n\t\t\t\t\
    }\n\t\t\t}\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\
    }\n\necho is_happy(\"a\") . \"\\n\";\necho is_happy(\"aa\") . \"\\n\";\necho is_happy(\"\
    abcd\") . \"\\n\";\necho is_happy(\"aabb\") . \"\\n\";\necho is_happy(\"adb\"\
    ) . \"\\n\";\necho is_happy(\"xyy\") . \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '


    1


    1


    '
  timestamp: 1659824387
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n  return $s === 'abcd';\n}\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp78lldlzo.php:30\n\
    Stack trace:\n#0 /tmp/tmp78lldlzo.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp78lldlzo.php\
    \ on line 30\n"
  timestamp: 1659824387
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    return strlen($s) >= 3 && count(array_unique(str_split($s,\
    \ 3))) == 1;\n}\n\nprint_r(is_happy('a'));\nprint_r(is_happy('aa'));\nprint_r(is_happy('abcd'));\n\
    print_r(is_happy('aabb'));\nprint_r(is_happy('adb'));\nprint_r(is_happy('xyy'));\n\
    function candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyt8flcq6.php:35\n\
    Stack trace:\n#0 /tmp/tmpyt8flcq6.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpyt8flcq6.php\
    \ on line 35\n"
  timestamp: 1659824387
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n\t$length = strlen($s);\n\tif($length < 3)\
    \ {\n\t\treturn false;\n\t}\n\telseif($length == 3) {\n\t\tif($s[0] != $s[1] &&\
    \ $s[1] != $s[2] && $s[0] != $s[2]) {\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\
    \t\t\treturn false;\n\t\t}\n\t}\n\telse {\n\t\t$i = 0;\n\t\twhile($i < $length)\
    \ {\n\t\t\tif($s[$i] == $s[$i+1] || $s[$i+1] == $s[$i+2] || $s[$i] == $s[$i+2])\
    \ {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t$i = $i + 3;\n\t\t}\n\t\treturn true;\n\
    \t}\n}\necho is_happy('a') . \"\\n\";\necho is_happy('aa') . \"\\n\";\necho is_happy('abcd')\
    \ . \"\\n\";\necho is_happy('aabb') . \"\\n\";\necho is_happy('adb') . \"\\n\"\
    ;\necho is_happy('xyy') . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\n\n\nWarning: Uninitialized string offset 4 in /tmp/tmpmmdhrb66.php on\
    \ line 34\n\nWarning: Uninitialized string offset 4 in /tmp/tmpmmdhrb66.php on\
    \ line 34\n\nWarning: Uninitialized string offset 5 in /tmp/tmpmmdhrb66.php on\
    \ line 34\n\n\n1\n\n\nWarning: Uninitialized string offset 4 in /tmp/tmpmmdhrb66.php\
    \ on line 34\n\nWarning: Uninitialized string offset 4 in /tmp/tmpmmdhrb66.php\
    \ on line 34\n\nWarning: Uninitialized string offset 5 in /tmp/tmpmmdhrb66.php\
    \ on line 34\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmmdhrb66.php:55\n\
    Stack trace:\n#0 /tmp/tmpmmdhrb66.php(63): test()\n#1 {main}\n  thrown in /tmp/tmpmmdhrb66.php\
    \ on line 55\n"
  timestamp: 1659824387
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n  // Base case: string is less than 3 characters\n\
    \  if (strlen($s) < 3) {\n    return false;\n  }\n  // Initialize $result as true\n\
    \  $result = true;\n  // Loop through $s\n  for ($i = 0; $i < strlen($s); $i++)\
    \ {\n    // Grab 3 characters from $s, starting at $i\n    $t = substr($s, $i,\
    \ 3);\n    // If $t is not a unique string, set $result to false\n    if (strlen($t)\
    \ !== strlen(array_unique(str_split($t)))) {\n      $result = false;\n    }\n\
    \  }\n  // Return $result\n  return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: strlen(): Argument #1 ($str) must be\
    \ of type string, array given in /tmp/tmpdmkga4uh.php:30\nStack trace:\n#0 /tmp/tmpdmkga4uh.php(38):\
    \ is_happy('abcd')\n#1 /tmp/tmpdmkga4uh.php(44): candidate('abcd')\n#2 /tmp/tmpdmkga4uh.php(52):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpdmkga4uh.php on line 30\n"
  timestamp: 1659824387
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n  $letters = str_split($s);\n  if (count($letters)\
    \ < 3) {\n    return false;\n  }\n  for ($i = 0; $i < count($letters) - 2; $i++)\
    \ {\n    if ($letters[$i] == $letters[$i + 1] && $letters[$i] == $letters[$i +\
    \ 2]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp89wijq55.php:39\n\
    Stack trace:\n#0 /tmp/tmp89wijq55.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp89wijq55.php\
    \ on line 39\n"
  timestamp: 1659824387
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    if (strlen($s) < 3) {\n        return false;\n\
    \    }\n    $len = strlen($s);\n    for ($i = 2; $i < $len; $i++) {\n        if\
    \ ($s[$i] == $s[$i - 1] || $s[$i] == $s[$i - 2] || $s[$i - 1] == $s[$i - 2]) {\n\
    \            return false;\n        }\n    }\n    return true;\n}\n\n$s = 'aab';\n\
    echo is_happy($s);\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660009102
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $charArray = str_split($s);\n    $arrayCount\
    \ = count($charArray);\n    $counter = 0;\n    if ($arrayCount >= 3) {\n     \
    \   for ($i = 0; $i < $arrayCount; $i += 3) {\n            if ($charArray[$i]\
    \ != $charArray[$i + 1] && $charArray[$i] != $charArray[$i + 2] && $charArray[$i\
    \ + 1] != $charArray[$i + 2]) {\n                $counter++;\n            }\n\
    \        }\n        if ($counter == (int)($arrayCount / 3)) {\n            return\
    \ true;\n        } else {\n            return false;\n        }\n    } else {\n\
    \        return false;\n    }\n}\necho is_happy(\"aabb\");\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpt2xo5mnm.php on line 24\n\n\
    Warning: Undefined array key 5 in /tmp/tmpt2xo5mnm.php on line 24\n\nWarning:\
    \ Undefined array key 4 in /tmp/tmpt2xo5mnm.php on line 24\n\nWarning: Undefined\
    \ array key 5 in /tmp/tmpt2xo5mnm.php on line 24\n\nWarning: Undefined array key\
    \ 4 in /tmp/tmpt2xo5mnm.php on line 24\n\nWarning: Undefined array key 5 in /tmp/tmpt2xo5mnm.php\
    \ on line 24\n\nWarning: Undefined array key 4 in /tmp/tmpt2xo5mnm.php on line\
    \ 24\n\nWarning: Undefined array key 5 in /tmp/tmpt2xo5mnm.php on line 24\n\n\
    Warning: Undefined array key 4 in /tmp/tmpt2xo5mnm.php on line 24\n\nWarning:\
    \ Undefined array key 5 in /tmp/tmpt2xo5mnm.php on line 24\n\nWarning: Undefined\
    \ array key 4 in /tmp/tmpt2xo5mnm.php on line 24\n\nWarning: Undefined array key\
    \ 5 in /tmp/tmpt2xo5mnm.php on line 24\n\nWarning: Undefined array key 8 in /tmp/tmpt2xo5mnm.php\
    \ on line 24\n\nWarning: Undefined array key 8 in /tmp/tmpt2xo5mnm.php on line\
    \ 24\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt2xo5mnm.php:49\n\
    Stack trace:\n#0 /tmp/tmpt2xo5mnm.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpt2xo5mnm.php\
    \ on line 49\n"
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    if (strlen($s) < 3) {\n        return false;\n\
    \    }\n    $s = str_split($s);\n    if (count(array_unique($s)) == 1) {\n   \
    \     return false;\n    }\n    for ($i = 0; $i < count($s) - 3; $i++) {\n   \
    \     if (array_unique(array_slice($s, $i, 3)) != array_slice($s, $i, 3)) {\n\
    \            return false;\n        }\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv5vkz704.php:43\n\
    Stack trace:\n#0 /tmp/tmpv5vkz704.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpv5vkz704.php\
    \ on line 43\n"
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $c = strlen($s);\n    if ($c < 3) {\n \
    \       return false;\n    }\n    for ($i = 0; $i < $c; $i++) {\n        if ($s[$i]\
    \ === $s[$i + 1] && $s[$i] === $s[$i + 2]) {\n            return false;\n    \
    \    }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Uninitialized string offset 4 in /tmp/tmpp62j9jnz.php on line\
    \ 24\n\nWarning: Uninitialized string offset 4 in /tmp/tmpp62j9jnz.php on line\
    \ 24\n\nWarning: Uninitialized string offset 4 in /tmp/tmpp62j9jnz.php on line\
    \ 24\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp62j9jnz.php:39\n\
    Stack trace:\n#0 /tmp/tmpp62j9jnz.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpp62j9jnz.php\
    \ on line 39\n"
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    if(strlen($s) < 3) return false;\n    $s_arr\
    \ = str_split($s);\n    for($i = 0; $i < count($s_arr) - 2; $i++) {\n        if($s_arr[$i]\
    \ == $s_arr[$i + 1] || $s_arr[$i] == $s_arr[$i + 2] || $s_arr[$i + 1] == $s_arr[$i\
    \ + 2]) return false;\n    }\n    return true;\n}\n$s = fgets(STDIN);\necho is_happy($s);\n\
    function candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    if(strlen($s)<3) {\n        return false;\n\
    \    }\n    $arr = str_split($s);\n    for($i=0;$i<count($arr)-2;$i++) {\n   \
    \     if($arr[$i]==$arr[$i+1] || $arr[$i]==$arr[$i+2] || $arr[$i+1]==$arr[$i+2])\
    \ {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n  $s = str_split($s);\n  $happy = true;\n \
    \ for ($i = 0; $i < count($s) - 2; $i++) {\n    if ($s[$i] == $s[$i + 1] && $s[$i]\
    \ == $s[$i + 2]) {\n      $happy = false;\n    }\n  }\n  return $happy;\n}\n\n\
    function candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp48x6q0en.php:34\n\
    Stack trace:\n#0 /tmp/tmp48x6q0en.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp48x6q0en.php\
    \ on line 34\n"
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $count = 0;\n    $s = str_split($s);\n\
    \    while ($count != count($s)) {\n        $count = count($s);\n        $j =\
    \ 0;\n        while ($j < count($s) - 2) {\n            if ($s[$j] == $s[$j +\
    \ 1] || $s[$j] == $s[$j + 2] || $s[$j + 1] == $s[$j + 2]) {\n                array_splice($s,\
    \ $j, 1);\n            } else {\n                $j++;\n            }\n      \
    \  }\n    }\n    if (count($s) >= 3) {\n        return true;\n    } else {\n \
    \       return false;\n    }\n}\necho is_happy(\"aabb\").\"\\n\";\necho is_happy(\"\
    adb\").\"\\n\";\necho is_happy(\"xyy\").\"\\n\";\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\n1\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8y3e_ril.php:53\n\
    Stack trace:\n#0 /tmp/tmp8y3e_ril.php(56): test()\n#1 {main}\n  thrown in /tmp/tmp8y3e_ril.php\
    \ on line 53\n"
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $length = strlen($s);\n    if ($length\
    \ < 3) {\n        return false;\n    }\n    $result = true;\n    for ($i = 0;\
    \ $i < $length - 2; $i++) {\n        if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i\
    \ + 2] || $s[$i + 1] == $s[$i + 2]) {\n            $result = false;\n        \
    \    break;\n        }\n    }\n    return $result;\n}\necho is_happy('a') ? 'true'\
    \ : 'false';\necho \"\\n\";\necho is_happy('aa') ? 'true' : 'false';\necho \"\\\
    n\";\necho is_happy('abcd') ? 'true' : 'false';\necho \"\\n\";\necho is_happy('aabb')\
    \ ? 'true' : 'false';\necho \"\\n\";\necho is_happy('adb') ? 'true' : 'false';\n\
    echo \"\\n\";\necho is_happy('xyy') ? 'true' : 'false';\necho \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'false

    false

    true

    false

    true

    false

    '
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    // your code here\n}\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_xpgri_v.php:26\n\
    Stack trace:\n#0 /tmp/tmp_xpgri_v.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp_xpgri_v.php\
    \ on line 26\n"
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n  if (strlen($s) >= 3) {\n    $letters = str_split($s);\n\
    \    for ($i = 0; $i < count($letters); $i++) {\n      if ($letters[$i] == $letters[$i\
    \ + 1] && $letters[$i] == $letters[$i + 2]) {\n        return false;\n      }\n\
    \    }\n    return true;\n  }\n  return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmp6epw9iae.php on line 22\n\n\
    Warning: Undefined array key 4 in /tmp/tmp6epw9iae.php on line 22\n\nWarning:\
    \ Undefined array key 4 in /tmp/tmp6epw9iae.php on line 22\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp6epw9iae.php:39\nStack trace:\n#0 /tmp/tmp6epw9iae.php(46):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp6epw9iae.php on line 39\n"
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n  //buka jawaban\n  $data = str_split($s);\n\
    \  if(count($data)>=3){\n    $stat = true;\n    $i = 0;\n    while($i<count($data)-2){\n\
    \      if($data[$i]==$data[$i+1]||$data[$i]==$data[$i+2]||$data[$i+1]==$data[$i+2]){\n\
    \        $stat = false;\n        break;\n      }\n      $i++;\n    }\n    return\
    \ $stat;\n  }\n  else{\n    return false;\n  }\n  //tutup jawaban\n}\nfunction\
    \ candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $l = strlen($s);\n    if ($l < 3) return\
    \ false;\n    $arr = str_split($s);\n    $tmp = [];\n    for ($i = 0; $i < $l;\
    \ $i++) {\n        if (isset($tmp[$arr[$i]])) {\n            if (count($tmp) ==\
    \ 1) {\n                return false;\n            }\n            $tmp = [];\n\
    \        }\n        $tmp[$arr[$i]] = 1;\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9ueqtvo4.php:45\n\
    Stack trace:\n#0 /tmp/tmp9ueqtvo4.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp9ueqtvo4.php\
    \ on line 45\n"
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $len = strlen($s);\n    if ($len < 3) return\
    \ false;\n    for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i\
    \ + 1] && $s[$i] == $s[$i + 2]) return false;\n    }\n    return true;\n}\n\n\
    echo is_happy(\"a\") . \"\\n\";\necho is_happy(\"aa\") . \"\\n\";\necho is_happy(\"\
    abcd\") . \"\\n\";\necho is_happy(\"aabb\") . \"\\n\";\necho is_happy(\"adb\"\
    ) . \"\\n\";\necho is_happy(\"xyy\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\n\n1\n1\n1\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg7_mv41j.php:41\n\
    Stack trace:\n#0 /tmp/tmpg7_mv41j.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpg7_mv41j.php\
    \ on line 41\n"
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n\t$count = strlen($s);\n\tif($count < 3) return\
    \ false;\n\tfor($i = 0; $i < $count - 2; $i++) {\n\t\t$string = substr($s, $i,\
    \ 3);\n\t\tif($string[0] == $string[1] || $string[0] == $string[2] || $string[1]\
    \ == $string[2]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\nfunction\
    \ candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    if(strlen($s)<3)\n        return false;\n\
    \    $array_char=str_split($s);\n    for($i=0;$i<strlen($s)-2;$i++){\n       \
    \ if($array_char[$i]==$array_char[$i+1] && $array_char[$i]==$array_char[$i+2])\n\
    \            return false;\n    }\n    return true;\n}\n\necho is_happy(\"abcd\"\
    );\necho \"\\n\";\necho is_happy(\"aabb\");\necho \"\\n\";\necho is_happy(\"adb\"\
    );\necho \"\\n\";\necho is_happy(\"xyy\");\necho \"\\n\";\necho is_happy(\"aa\"\
    );\necho \"\\n\";\necho is_happy(\"a\");\necho \"\\n\";\necho is_happy(\"b\");\n\
    echo \"\\n\";\necho is_happy(\"bb\");\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n1\n1\n\n\n\n\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmplanyns5f.php:53\nStack trace:\n#0 /tmp/tmplanyns5f.php(60): test()\n\
    #1 {main}\n  thrown in /tmp/tmplanyns5f.php on line 53\n"
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n  $arr = str_split($s);\n  if (count($arr)\
    \ < 3) {\n    return false;\n  }\n  $arr1 = array_slice($arr, 0, 3);\n  $diff\
    \ = count(array_unique($arr1));\n  if ($diff < 3) {\n    return false;\n  }\n\
    \  for ($i = 3; $i < count($arr); $i++) {\n    if ($arr[$i] == $arr[$i - 1] ||\
    \ $arr[$i] == $arr[$i - 2] || $arr[$i] == $arr[$i - 3]) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp88qwb9fy.php:46\n\
    Stack trace:\n#0 /tmp/tmp88qwb9fy.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp88qwb9fy.php\
    \ on line 46\n"
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    if (strlen($s) < 3) return false;\n   \
    \ $arr = str_split($s);\n    for ($i = 0; $i < count($arr) - 2; $i++) {\n    \
    \    if ($arr[$i] == $arr[$i + 1] && $arr[$i] == $arr[$i + 2]) return false;\n\
    \    }\n    return true;\n}\necho is_happy(\"a\") ? \"true\" : \"false\";\necho\
    \ \"\\n\";\necho is_happy(\"aa\") ? \"true\" : \"false\";\necho \"\\n\";\necho\
    \ is_happy(\"abcd\") ? \"true\" : \"false\";\necho \"\\n\";\necho is_happy(\"\
    aabb\") ? \"true\" : \"false\";\necho \"\\n\";\necho is_happy(\"adb\") ? \"true\"\
    \ : \"false\";\necho \"\\n\";\necho is_happy(\"xyy\") ? \"true\" : \"false\";\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "false\nfalse\ntrue\ntrue\ntrue\ntrue\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpgah7geim.php:46\nStack trace:\n#0 /tmp/tmpgah7geim.php(53):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpgah7geim.php on line 46\n"
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n  if (strlen($s) < 3) {\n    return false;\n\
    \  }\n  $res = true;\n  for ($i = 2; $i < strlen($s); $i++) {\n    if ($s[$i]\
    \ == $s[$i - 1] && $s[$i] == $s[$i - 2]) {\n      $res = false;\n      break;\n\
    \    }\n  }\n  return $res;\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaq9b9m92.php:39\n\
    Stack trace:\n#0 /tmp/tmpaq9b9m92.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpaq9b9m92.php\
    \ on line 39\n"
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $l = strlen($s);\n    if ($l < 3) return\
    \ false;\n    for ($i = 0; $i < $l - 2; $i++) {\n        if ($s[$i] == $s[$i +\
    \ 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    if (strlen($s) < 3) return false;\n   \
    \ for ($i = 0; $i < strlen($s); $i++) {\n        if ($s[$i] == $s[$i + 1] && $s[$i]\
    \ == $s[$i + 2]) return false;\n    }\n    return true;\n}\necho is_happy(\"a\"\
    ).\"\\n\";\necho is_happy(\"aa\").\"\\n\";\necho is_happy(\"abcd\").\"\\n\";\n\
    echo is_happy(\"aabb\").\"\\n\";\necho is_happy(\"adb\").\"\\n\";\necho is_happy(\"\
    xyy\").\"\\n\";\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\n\n\nWarning: Uninitialized string offset 4 in /tmp/tmpkt1hwova.php on\
    \ line 21\n1\n\nWarning: Uninitialized string offset 4 in /tmp/tmpkt1hwova.php\
    \ on line 21\n\nWarning: Uninitialized string offset 4 in /tmp/tmpkt1hwova.php\
    \ on line 21\n1\n\nWarning: Uninitialized string offset 3 in /tmp/tmpkt1hwova.php\
    \ on line 21\n1\n\nWarning: Uninitialized string offset 3 in /tmp/tmpkt1hwova.php\
    \ on line 21\n\nWarning: Uninitialized string offset 3 in /tmp/tmpkt1hwova.php\
    \ on line 21\n1\n\nWarning: Uninitialized string offset 4 in /tmp/tmpkt1hwova.php\
    \ on line 21\n\nWarning: Uninitialized string offset 4 in /tmp/tmpkt1hwova.php\
    \ on line 21\n\nWarning: Uninitialized string offset 4 in /tmp/tmpkt1hwova.php\
    \ on line 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkt1hwova.php:39\n\
    Stack trace:\n#0 /tmp/tmpkt1hwova.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpkt1hwova.php\
    \ on line 39\n"
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n  if (strlen($s) < 3) {\n    return false;\n\
    \  }\n  $happy = true;\n  for ($i = 0; $i < strlen($s) - 2; $i++) {\n    if ($s[$i]\
    \ == $s[$i + 1] && $s[$i] == $s[$i + 2]) {\n      $happy = false;\n    }\n  }\n\
    \  return $happy;\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp24ctf6n.php:38\n\
    Stack trace:\n#0 /tmp/tmpp24ctf6n.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpp24ctf6n.php\
    \ on line 38\n"
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $arr = str_split($s);\n    $len = count($arr);\n\
    \    $i = 0;\n    while ($i <= $len - 3) {\n        if ($arr[$i] == $arr[$i +\
    \ 1] || $arr[$i] == $arr[$i + 2] || $arr[$i + 1] == $arr[$i + 2])\n          \
    \  return false;\n        $i++;\n    }\n    return true;\n}\n\nif (isset($_GET['s']))\
    \ {\n    $s = $_GET['s'];\n    if (is_happy($s)) {\n        echo \"String is happy.\"\
    ;\n    } else {\n        echo \"String is not happy.\";\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvj_4ppov.php:43\n\
    Stack trace:\n#0 /tmp/tmpvj_4ppov.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpvj_4ppov.php\
    \ on line 43\n"
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n  //your code here\n}\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv8gtvyl4.php:26\n\
    Stack trace:\n#0 /tmp/tmpv8gtvyl4.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpv8gtvyl4.php\
    \ on line 26\n"
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n\tif (strlen($s) >= 3) {\n\t\t$arr = str_split($s);\n\
    \t\tfor ($i = 0; $i < count($arr); $i++) {\n\t\t\tif (isset($arr[$i+1]) && isset($arr[$i+2]))\
    \ {\n\t\t\t\tif ($arr[$i] == $arr[$i+1] || $arr[$i] == $arr[$i+2] || $arr[$i+1]\
    \ == $arr[$i+2]) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn\
    \ true;\n\t}\n\treturn false;\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028883
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $arr = str_split($s);\n    $counter = count($arr);\n\
    \    $newArr = [];\n    for ($i = 0; $i < $counter; $i++) {\n        if (isset($arr[$i+1])\
    \ && isset($arr[$i+2])) {\n            $newArr[] = $arr[$i] . $arr[$i+1] . $arr[$i+2];\n\
    \        }\n    }\n    $res = [];\n    foreach ($newArr as $val) {\n        $res[]\
    \ = array_unique(str_split($val));\n    }\n    if ($counter < 3) {\n        return\
    \ false;\n    }\n    foreach ($res as $val) {\n        if (count($val) < 3) {\n\
    \            return false;\n        }\n    }\n    return true;\n}\nvar_dump(is_happy('aa'));\n\
    function candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'bool(false)

    '
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n\t$a = str_split($s);\n\t//var_dump($a);\n\t\
    $i = 0;\n\t$count = 0;\n\t$var = [];\n\t$count = count($a);\n\tif ($count < 3)\
    \ {\n\t\treturn false;\n\t}\n\telse{\n\t\tfor ($i=0; $i < $count; $i++) { \n\t\
    \t\tif (isset($a[$i+1]) && isset($a[$i+2])) {\n\t\t\t\tif ($a[$i] == $a[$i+1]\
    \ || $a[$i] == $a[$i+2] || $a[$i+1] == $a[$i+2]) {\n\t\t\t\t\treturn false;\n\t\
    \t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}\necho 'is_happy(a): ';\necho\
    \ is_happy('a') == false ? 'true' : 'false';\necho '<br>';\necho 'is_happy(aa):\
    \ ';\necho is_happy('aa') == false ? 'true' : 'false';\necho '<br>';\necho 'is_happy(abcd):\
    \ ';\necho is_happy('abcd') == true ? 'true' : 'false';\necho '<br>';\necho 'is_happy(aabb):\
    \ ';\necho is_happy('aabb') == false ? 'true' : 'false';\necho '<br>';\necho 'is_happy(adb):\
    \ ';\necho is_happy('adb') == true ? 'true' : 'false';\necho '<br>';\necho 'is_happy(xyy):\
    \ ';\necho is_happy('xyy') == false ? 'true' : 'false';\necho '<br>';\necho 'is_happy(aab):\
    \ ';\necho is_happy('aab') == false ? 'true' : 'false';\necho '<br>';\necho 'is_happy(abcdefghi):\
    \ ';\necho is_happy('abcdefghi') == true ? 'true' : 'false';\necho '<\nfunction\
    \ candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected string content "<" in /tmp/tmpt7j7gdne.php
    on line 62

    '
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    if (strlen($s) < 3) {\n        return false;\n\
    \    }\n    $i = 0;\n    while ($i < strlen($s)) {\n        if ($s[$i] === $s[$i\
    \ + 1] || $s[$i] === $s[$i + 2] || $s[$i + 1] === $s[$i + 2]) {\n            return\
    \ false;\n        }\n        $i++;\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Uninitialized string offset 4 in /tmp/tmp3x4xwd70.php on line\
    \ 24\n\nWarning: Uninitialized string offset 4 in /tmp/tmp3x4xwd70.php on line\
    \ 24\n\nWarning: Uninitialized string offset 4 in /tmp/tmp3x4xwd70.php on line\
    \ 24\n\nWarning: Uninitialized string offset 5 in /tmp/tmp3x4xwd70.php on line\
    \ 24\n\nWarning: Uninitialized string offset 4 in /tmp/tmp3x4xwd70.php on line\
    \ 24\n\nWarning: Uninitialized string offset 5 in /tmp/tmp3x4xwd70.php on line\
    \ 24\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3x4xwd70.php:39\n\
    Stack trace:\n#0 /tmp/tmp3x4xwd70.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp3x4xwd70.php\
    \ on line 39\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    // Write your code here\n    // To print\
    \ results to the standard output you can use print\n    // Example: print \"Hello\
    \ world!\";\n    $len = strlen($s);\n    if ($len < 3) {\n        return false;\n\
    \    }\n    $arr = str_split($s);\n    $i = 1;\n    while ($i < $len - 1) {\n\
    \        if ($arr[$i - 1] == $arr[$i] || $arr[$i] == $arr[$i + 1] || $arr[$i -\
    \ 1] == $arr[$i + 1]) {\n            return false;\n        }\n        $i++;\n\
    \    }\n    return true;\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n\n}\n\nassert(is_happy(\"a\") === false);\n\
    assert(is_happy(\"aa\") === false);\nassert(is_happy(\"abcd\") === true);\nassert(is_happy(\"\
    aabb\") === false);\nassert(is_happy(\"adb\") === true);\nassert(is_happy(\"xyy\"\
    ) === false);\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught AssertionError: assert(is_happy('a') === false)\
    \ in /tmp/tmpzs4f3_69.php:22\nStack trace:\n#0 /tmp/tmpzs4f3_69.php(22): assert(false,\
    \ 'assert(is_happy...')\n#1 {main}\n  thrown in /tmp/tmpzs4f3_69.php on line 22\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n  $s = str_split($s);\n  $result = array_filter($s,\
    \ function($value, $key) use ($s) {\n    if($key <= count($s) - 3) {\n      return\
    \ $value == $s[$key + 1] || $value == $s[$key + 2];\n    }\n  }, ARRAY_FILTER_USE_BOTH);\n\
    \  return count($result) > 0 ? false : true;\n}\n$a = readline(\"Enter string:\
    \ \");\nif(is_happy($a)) {\n  echo \"Happy string\\n\";\n} else {\n  echo \"Not\
    \ happy string\\n\";\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function readline() in\
    \ /tmp/tmp5dfu_884.php:27\nStack trace:\n#0 {main}\n  thrown in /tmp/tmp5dfu_884.php\
    \ on line 27\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $len = strlen($s);\n    if ($len < 3) return\
    \ false;\n    $a = [];\n    for ($i = 0; $i < $len; $i++) {\n        if ($i <\
    \ $len - 2) {\n            $a[] = $s[$i].$s[$i+1].$s[$i+2];\n        }\n    }\n\
    \    return count(array_unique($a)) == count($a);\n}\n\n$a = 'adb';\n$b = 'xyy';\n\
    \necho is_happy($a) . PHP_EOL;\necho is_happy($b) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5e0pc5xy.php:43\n\
    Stack trace:\n#0 /tmp/tmp5e0pc5xy.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp5e0pc5xy.php\
    \ on line 43\n"
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    if(strlen($s)>=3){\n        $count=0;\n\
    \        for($i=0;$i<strlen($s)-2;$i++){\n            if($s[$i]==$s[$i+1] && $s[$i+1]==$s[$i+2]){\n\
    \                $count++;\n            }\n        }\n        if($count==0){\n\
    \            return true;\n        }else{\n            return false;\n       \
    \ }\n    }else{\n        return false;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq7g5a635.php:44\n\
    Stack trace:\n#0 /tmp/tmpq7g5a635.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpq7g5a635.php\
    \ on line 44\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n  // Write your code here\n  $array_s = str_split($s);\n\
    \  $string_tracker = \"\";\n  $string_tracker2 = \"\";\n  for($i = 0; $i<count($array_s);\
    \ $i++){\n    $string_tracker2 = $string_tracker2.$array_s[$i];\n    if(strlen($string_tracker2)==3){\n\
    \      if(substr_count($string_tracker, $string_tracker2)>0){\n        return\
    \ false;\n      }\n      $string_tracker = $string_tracker.$string_tracker2;\n\
    \      $string_tracker2 = \"\";\n    }\n  }\n  return true;\n}\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeuj57b4m.php:40\n\
    Stack trace:\n#0 /tmp/tmpeuj57b4m.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpeuj57b4m.php\
    \ on line 40\n"
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    if (strlen($s) < 3) {\n        return false;\n\
    \    }\n    $s = str_split($s);\n    for ($i = 0; $i < count($s); $i++) {\n  \
    \      if ($s[$i] == $s[$i + 1] && $s[$i] == $s[$i + 2]) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpmjzgrhc4.php on line 24\n\n\
    Warning: Undefined array key 4 in /tmp/tmpmjzgrhc4.php on line 24\n\nWarning:\
    \ Undefined array key 4 in /tmp/tmpmjzgrhc4.php on line 24\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpmjzgrhc4.php:38\nStack trace:\n#0 /tmp/tmpmjzgrhc4.php(45):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpmjzgrhc4.php on line 38\n"
  timestamp: 1660028883
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n\tif (strlen($s) < 3) {\n\t\treturn false;\n\
    \t}\n\tfor ($i = 0; $i < strlen($s) - 2; $i++) {\n\t\tif (substr($s, $i, 3) ==\
    \ substr($s, $i + 1, 3)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n\
    }\n\necho(is_happy(\"a\") . \"\\n\");\necho(is_happy(\"aa\") . \"\\n\");\necho(is_happy(\"\
    abcd\") . \"\\n\");\necho(is_happy(\"aabb\") . \"\\n\");\necho(is_happy(\"adb\"\
    ) . \"\\n\");\necho(is_happy(\"xyy\") . \"\\n\");\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\n\n1\n1\n1\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp06n9s4i0.php:44\n\
    Stack trace:\n#0 /tmp/tmp06n9s4i0.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp06n9s4i0.php\
    \ on line 44\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    // if string is less than 3\n    if (strlen($s)\
    \ < 3) return false;\n    // if string is larger than 3\n    if (strlen($s) >=\
    \ 3) {\n        // create an empty array\n        $new_arr = [];\n        // iterate\
    \ through the string\n        for ($i = 0; $i < strlen($s); $i++) {\n        \
    \    // if the index is 2, meaning the third value\n            if ($i == 2) {\n\
    \                // if the new array does not have the current value\n       \
    \         if (!in_array($s[$i], $new_arr)) {\n                    // push the\
    \ value into the array\n                    array_push($new_arr, $s[$i]);\n  \
    \              }\n                // if the array already has the value\n    \
    \            else {\n                    // return false\n                   \
    \ return false;\n                }\n            }\n            // if the index\
    \ is not 2\n            else {\n                // if the new array does not have\
    \ the current value\n                if (!in_array($s[$i], $new_arr)) {\n    \
    \                // push the value into the array\n                    array_push($new_arr,\
    \ $s[$i]);\n                }\n            }\n        }\n        // return true\n\
    \        return true;\n    }\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9n8dvu5h.php:61\n\
    Stack trace:\n#0 /tmp/tmp9n8dvu5h.php(68): test()\n#1 {main}\n  thrown in /tmp/tmp9n8dvu5h.php\
    \ on line 61\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n  $s = str_split($s);\n  $counter = 0;\n  $first\
    \ = 0;\n  $second = 1;\n  $third = 2;\n  $len = count($s);\n  while ($third <\
    \ $len) {\n    if ($s[$first] === $s[$second] && $s[$second] === $s[$third]) {\n\
    \      return false;\n    }\n    $first += 1;\n    $second += 1;\n    $third +=\
    \ 1;\n  }\n  return true;\n}\necho(is_happy('a'));\necho(is_happy('aa'));\necho(is_happy('abcd'));\n\
    echo(is_happy('aabb'));\necho(is_happy('adb'));\necho(is_happy('xyy'));\nfunction\
    \ candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "111111\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4u7mectu.php:46\n\
    Stack trace:\n#0 /tmp/tmp4u7mectu.php(56): test()\n#1 {main}\n  thrown in /tmp/tmp4u7mectu.php\
    \ on line 46\n"
  timestamp: 1660028884
- exit_code: -1
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $happy = false;\n    if (strlen($s) >=\
    \ 3) {\n        $arr = str_split($s);\n        $first = array_shift($arr);\n \
    \       $second = array_shift($arr);\n        $third = array_shift($arr);\n  \
    \      if ($first != $second && $first != $third && $second != $third) {\n   \
    \         $happy = true;\n        }\n    }\n    return $happy;\n}\n\ndo {\n  \
    \  fwrite(STDOUT, 'Enter a string: ');\n    $s = trim(fgets(STDIN));\n    if ($s\
    \ != 'x') {\n        $result = is_happy($s);\n        if ($result) {\n       \
    \     echo $s . ' is happy' . PHP_EOL;\n        } else {\n            echo $s\
    \ . ' is not happy' . PHP_EOL;\n        }\n    }\n} while ($s != 'x');\nfunction\
    \ candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: 'Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a string:  is not happy

    Enter a '
  timestamp: 1660028889
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n  $count = 0;\n  $arr = str_split($s);\n  for\
    \ ($i = 0; $i < count($arr); $i++) {\n    if ($arr[$i] == $arr[$i+1]) {\n    \
    \  $count++;\n    }\n  }\n  if ($count > 0) {\n    return false;\n  } else {\n\
    \    return true;\n  }\n}\n$s = fgets(STDIN);\necho is_happy($s);\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 1 in /tmp/tmp5t9mqwtv.php on line 22\n\n\
    Warning: Undefined array key 1 in /tmp/tmp5t9mqwtv.php on line 22\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmp5t9mqwtv.php:39\nStack trace:\n\
    #0 /tmp/tmp5t9mqwtv.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp5t9mqwtv.php\
    \ on line 39\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n  $stringlen = strlen($s);\n  if ($stringlen\
    \ < 3) {\n    return false;\n  }\n  $set = [];\n  for ($i = 0; $i < $stringlen\
    \ - 2; $i++) {\n    $string = substr($s, $i, 3);\n    $length = strlen($string);\n\
    \    $stringArray = str_split($string);\n    $len = count($stringArray);\n   \
    \ for ($j = 0; $j < $len; $j++) {\n      $char = $stringArray[$j];\n      if (isset($set[$char]))\
    \ {\n        return false;\n      }\n      $set[$char] = $j;\n    }\n  }\n  return\
    \ true;\n}\n\nassert(is_happy(\"\") === false);\nassert(is_happy(\"a\") === false);\n\
    assert(is_happy(\"aa\") === false);\nassert(is_happy(\"abcd\") === true);\nassert(is_happy(\"\
    aabb\") === false);\nassert(is_happy(\"adb\") === true);\nassert(is_happy(\"xyy\"\
    ) === false);\nassert(is_happy(\"xyz\") === true);\nassert(is_happy(\"abcdabcd\"\
    ) === true);\nassert(is_happy(\"abcdabcdabcd\") === true);\nassert(is_happy(\"\
    aaabccdbb\") === false);\nassert(is_happy(\"aaabbccdbb\") === false);\nassert(is_happy(\"\
    abcdabcdabcdabcde\") === false);\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught AssertionError: assert(is_happy('abcd') === true)\
    \ in /tmp/tmpv1a7ns12.php:43\nStack trace:\n#0 /tmp/tmpv1a7ns12.php(43): assert(false,\
    \ 'assert(is_happy...')\n#1 {main}\n  thrown in /tmp/tmpv1a7ns12.php on line 43\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    return strlen($s) >= 3 && count(array_unique(str_split($s,\
    \ 3))) == strlen($s) / 3;\n}\n\nis_happy(\"a\");\nis_happy(\"aa\");\nis_happy(\"\
    abcd\");\nis_happy(\"aabb\");\nis_happy(\"adb\");\nis_happy(\"xyy\");\nfunction\
    \ candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkm1h74kb.php:35\n\
    Stack trace:\n#0 /tmp/tmpkm1h74kb.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpkm1h74kb.php\
    \ on line 35\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    if (strlen($s) < 3) {\n        return false;\n\
    \    }\n    $s = str_split($s);\n    $i = 0;\n    $t = [$s[$i], $s[$i + 1], $s[$i\
    \ + 2]];\n    while ($i < count($s) - 2) {\n        if (count(array_unique($t))\
    \ != 3) {\n            return false;\n        }\n        $i++;\n        $t = [$s[$i],\
    \ $s[$i + 1], $s[$i + 2]];\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 4 in /tmp/tmpk8fjehqg.php on line 30


    Warning: Undefined array key 3 in /tmp/tmpk8fjehqg.php on line 30


    Warning: Undefined array key 8 in /tmp/tmpk8fjehqg.php on line 30

    '
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    if (strlen($s) < 3) {\n        return false;\n\
    \    }\n    $happy = true;\n    for ($i = 0; $i < strlen($s) - 2; $i++) {\n  \
    \      if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i\
    \ + 2]) {\n            $happy = false;\n            break;\n        }\n    }\n\
    \    return $happy;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $string = $s;\n    $length = strlen($string);\n\
    \    if($length >= 3){\n        $temp = true;\n        for($i = 0; $i < $length;\
    \ $i += 3){\n            if($string[$i] == $string[$i+1] && $string[$i+1] == $string[$i+2]){\n\
    \                $temp = false;\n            }\n        }\n        if($temp ==\
    \ true){\n            return \"true\";\n        }else{\n            return \"\
    false\";\n        }\n    }else{\n        return \"false\";\n    }\n}\nfunction\
    \ candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmis35gfm.php:42\n\
    Stack trace:\n#0 /tmp/tmpmis35gfm.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpmis35gfm.php\
    \ on line 42\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $str_length = strlen($s);\n    if($str_length\
    \ < 3) {\n        return false;\n    }\n    elseif($str_length == 3) {\n     \
    \   return true;\n    }\n    else {\n        for($i = 0; $i < $str_length - 2;\
    \ $i++) {\n            if($s[$i] == $s[$i + 1] && $s[$i] == $s[$i + 2]) {\n  \
    \              return false;\n            }\n        }\n        return true;\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjfcoblwp.php:44\n\
    Stack trace:\n#0 /tmp/tmpjfcoblwp.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpjfcoblwp.php\
    \ on line 44\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n  $res = FALSE;\n  $arr = str_split($s);\n\
    \  if (count($arr) >= 3) {\n    for ($i = 0; $i < count($arr); $i++) {\n     \
    \ if ($arr[$i] != $arr[$i + 1] && $arr[$i] != $arr[$i + 2] && $arr[$i + 1] !=\
    \ $arr[$i + 2]) {\n        $res = TRUE;\n      } else {\n        $res = FALSE;\n\
    \        break;\n      }\n    }\n  }\n  return $res;\n}\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpk7ejc445.php on line 23\n\n\
    Warning: Undefined array key 4 in /tmp/tmpk7ejc445.php on line 23\n\nWarning:\
    \ Undefined array key 4 in /tmp/tmpk7ejc445.php on line 23\n\nWarning: Undefined\
    \ array key 5 in /tmp/tmpk7ejc445.php on line 23\n\nWarning: Undefined array key\
    \ 4 in /tmp/tmpk7ejc445.php on line 23\n\nWarning: Undefined array key 5 in /tmp/tmpk7ejc445.php\
    \ on line 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk7ejc445.php:40\n\
    Stack trace:\n#0 /tmp/tmpk7ejc445.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpk7ejc445.php\
    \ on line 40\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    if (strlen($s) >= 3) {\n        $arr =\
    \ str_split($s);\n        for ($i = 2; $i < count($arr); $i++) {\n           \
    \ if ($arr[$i] == $arr[$i - 1] && $arr[$i] == $arr[$i - 2]) {\n              \
    \  return false;\n            }\n        }\n        return true;\n    }\n    return\
    \ false;\n}\n\necho is_happy(\"happphp\").PHP_EOL;\necho is_happy(\"a\").PHP_EOL;\n\
    echo is_happy(\"aa\").PHP_EOL;\necho is_happy(\"abcd\").PHP_EOL;\necho is_happy(\"\
    aabb\").PHP_EOL;\necho is_happy(\"adb\").PHP_EOL;\necho is_happy(\"xyy\").PHP_EOL;\n\
    function candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\n\n\n1\n1\n1\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsa8lwf9i.php:46\n\
    Stack trace:\n#0 /tmp/tmpsa8lwf9i.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpsa8lwf9i.php\
    \ on line 46\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    if (strlen($s) < 3) {\n        return false;\n\
    \    }\n    $a = str_split($s);\n    for ($i = 0; $i < count($a) - 2; $i++) {\n\
    \        if ($a[$i] == $a[$i + 1] || $a[$i] == $a[$i + 2] || $a[$i + 1] == $a[$i\
    \ + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\
    echo is_happy(\"a\") ? \"true\\n\" : \"false\\n\";\necho is_happy(\"aa\") ? \"\
    true\\n\" : \"false\\n\";\necho is_happy(\"abcd\") ? \"true\\n\" : \"false\\n\"\
    ;\necho is_happy(\"aabb\") ? \"true\\n\" : \"false\\n\";\necho is_happy(\"adb\"\
    ) ? \"true\\n\" : \"false\\n\";\necho is_happy(\"xyy\") ? \"true\\n\" : \"false\\\
    n\";\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'false

    false

    true

    false

    true

    false

    '
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n\tif(strlen($s) < 3) {\n\t\treturn false;\n\
    \t}\n\telseif(strlen($s) == 3) {\n\t\tif(substr($s, 0, 1) == substr($s, 1, 1)\
    \ || substr($s, 0, 1) == substr($s, 2, 1) || substr($s, 1, 1) == substr($s, 2,\
    \ 1)) {\n\t\t\treturn false;\n\t\t}\n\t\telse {\n\t\t\treturn true;\n\t\t}\n\t\
    }\n\telse {\n\t\tfor($i = 0; $i < strlen($s); $i++) {\n\t\t\tif(substr($s, $i,\
    \ 1) == substr($s, $i + 1, 1) || substr($s, $i, 1) == substr($s, $i + 2, 1) ||\
    \ substr($s, $i + 1, 1) == substr($s, $i + 2, 1)) {\n\t\t\t\treturn false;\n\t\
    \t\t}\n\t\t}\n\t\treturn true;\n\t}\n}\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsynn_1kf.php:46\n\
    Stack trace:\n#0 /tmp/tmpsynn_1kf.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpsynn_1kf.php\
    \ on line 46\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n  $s = str_split($s);\n  $c1 = $s[0];\n  $c2\
    \ = $s[1];\n  $c3 = $s[2];\n  $len = count($s);\n  $i = 3;\n  while($i < $len)\
    \ {\n    if ($c1 === $c2 || $c2 === $c3 || $c1 === $c3) {\n      return false;\n\
    \    }\n    $c1 = $c2;\n    $c2 = $c3;\n    $c3 = $s[$i];\n    $i++;\n  }\n  return\
    \ true;\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 1 in /tmp/tmptuao1j3m.php on line 21\n\n\
    Warning: Undefined array key 2 in /tmp/tmptuao1j3m.php on line 22\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmptuao1j3m.php:41\nStack trace:\n\
    #0 /tmp/tmptuao1j3m.php(51): test()\n#1 {main}\n  thrown in /tmp/tmptuao1j3m.php\
    \ on line 41\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n  $len = strlen($s);\n  for ($i = 2; $i < $len;\
    \ $i++) {\n    if ($s[$i] == $s[$i - 1] || $s[$i] == $s[$i - 2]) return false;\n\
    \  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp16on3as0.php:31\n\
    Stack trace:\n#0 /tmp/tmp16on3as0.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp16on3as0.php\
    \ on line 31\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n\t// Write your code here\n\t// To print results\
    \ to the standard output you can use print\n\t// Example: print \"Hello world!\"\
    ;\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6n3r6e76.php:28\n\
    Stack trace:\n#0 /tmp/tmp6n3r6e76.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp6n3r6e76.php\
    \ on line 28\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n\t$i = 0;\n\twhile ($i < strlen($s) - 2) {\n\
    \t\t$three = substr($s, $i, 3);\n\t\tif ($three[0] === $three[1] || $three[0]\
    \ === $three[2] || $three[1] === $three[2]) {\n\t\t\treturn false;\n\t\t}\n\t\t\
    $i++;\n\t}\n\treturn true;\n}\n\n$tests = [\n\t['input' => 'a', 'expected' =>\
    \ false],\n\t['input' => 'aa', 'expected' => false],\n\t['input' => 'abcd', 'expected'\
    \ => true],\n\t['input' => 'aabb', 'expected' => false],\n\t['input' => 'adb',\
    \ 'expected' => true],\n\t['input' => 'xyy', 'expected' => false],\n];\n\nforeach\
    \ ($tests as $test) {\n\t$result = is_happy($test['input']);\n\tif ($result ===\
    \ $test['expected']) {\n\t\techo 'PASS';\n\t} else {\n\t\techo 'FAIL';\n\t}\n\t\
    echo PHP_EOL;\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "FAIL\nFAIL\nPASS\nPASS\nPASS\nPASS\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpsv_ih36i.php:53\nStack trace:\n#0 /tmp/tmpsv_ih36i.php(63):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpsv_ih36i.php on line 53\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n  $count = strlen($s);\n  if ($count < 3) {\n\
    \    return false;\n  }\n  for ($i = 0; $i < $count - 2; $i++) {\n    if ($s[$i]\
    \ == $s[$i + 1] && $s[$i] == $s[$i + 2]) {\n      return false;\n    }\n  }\n\
    \  return true;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx63j9_y1.php:39\n\
    Stack trace:\n#0 /tmp/tmpx63j9_y1.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpx63j9_y1.php\
    \ on line 39\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n\t$sl = strlen($s);\n\tif($sl<3)\n\t\treturn\
    \ false;\n\tfor($i=0;$i<($sl-2);$i++)\n\t{\n\t\t$t1 = $s[$i];\n\t\t$t2 = $s[$i+1];\n\
    \t\t$t3 = $s[$i+2];\n\t\tif($t1==$t2 || $t1==$t3 || $t2==$t3)\n\t\t\treturn false;\n\
    \t}\n\treturn true;\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n  // Write your code here\n  // To print results\
    \ to the standard output you can use print\n  // Example: print \"Hello world!\"\
    ;\n  $length = strlen($s);\n  if ($length < 3) {\n    print \"false\";\n    return;\n\
    \  }\n  for ($i = 0; $i < $length - 2; $i++) {\n    if ($s[$i] == $s[$i + 1] ||\
    \ $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n      print \"false\";\n\
    \      return;\n    }\n  }\n  print \"true\";\n}\n$handle = fopen (\"php://stdin\"\
    ,\"r\");\n$s = fgets($handle);\n\nis_happy($s);\n\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "falsefalse\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprwezcoqe.php:45\n\
    Stack trace:\n#0 /tmp/tmprwezcoqe.php(55): test()\n#1 {main}\n  thrown in /tmp/tmprwezcoqe.php\
    \ on line 45\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $s = str_split($s);\n    if (count($s)\
    \ < 3) {\n        return false;\n    }\n    for ($i = 0; $i < count($s) - 2; $i++)\
    \ {\n        if ($s[$i] == $s[$i + 1] && $s[$i] == $s[$i + 2]) {\n           \
    \ return false;\n        }\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplv8bpzm2.php:38\n\
    Stack trace:\n#0 /tmp/tmplv8bpzm2.php(45): test()\n#1 {main}\n  thrown in /tmp/tmplv8bpzm2.php\
    \ on line 38\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $length = strlen($s);\n    if ($length\
    \ < 3) {\n        return false;\n    }\n    for ($i = 2; $i < $length; $i++) {\n\
    \        if ($s[$i] === $s[$i - 1] || $s[$i] === $s[$i - 2]) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n\t// echo $s. ' | ';\n\tif(strlen($s) < 3)\
    \ {\n\t\treturn false;\n\t}\n\tif(strlen($s) === 3) {\n\t\tif(substr($s, 0, 1)\
    \ === substr($s, 1, 1) || substr($s, 0, 1) === substr($s, 2, 1) || substr($s,\
    \ 1, 1) === substr($s, 2, 1)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\
    \t}\n\tif(substr($s, 0, 1) === substr($s, 1, 1) || substr($s, 0, 1) === substr($s,\
    \ 2, 1) || substr($s, 1, 1) === substr($s, 2, 1)) {\n\t\treturn false;\n\t}\n\t\
    return is_happy(substr($s, 1));\n}\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n\t$s = str_split($s);\n\tif (count($s) < 3)\
    \ {\n\t\treturn false;\n\t}\n\tfor ($i = 0; $i < count($s) - 2; $i++) {\n\t\t\
    if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i + 2])\
    \ {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\necho is_happy('abcd')\
    \ . PHP_EOL;\necho is_happy('aabb') . PHP_EOL;\necho is_happy('adb') . PHP_EOL;\n\
    echo is_happy('xyy') . PHP_EOL;\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    1


    '
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $str = str_split($s);\n    $i = 0;\n  \
    \  $end = count($str);\n    $result = true;\n    while ($i < $end-2) {\n     \
    \   if($str[$i] == $str[$i+1] && $str[$i+1] == $str[$i+2]) {\n            $result\
    \ = false;\n            break;\n        }\n        $i++;\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1bpk63wx.php:37\n\
    Stack trace:\n#0 /tmp/tmp1bpk63wx.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp1bpk63wx.php\
    \ on line 37\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n\t$s = str_split($s);\n\t$count = count($s);\n\
    \tif($count >= 3) {\n\t\tfor($i = 0; $i < $count - 2; $i++) {\n\t\t\tif($s[$i]\
    \ == $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n\t\t\t\
    \treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\treturn false;\n}\nfunction\
    \ candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $result = false;\n    $string_length =\
    \ strlen($s);\n    if($string_length < 3) {\n        return $result;\n    }\n\
    \    for($i = 0; $i < $string_length; $i++) {\n        if($s[$i] == $s[$i+1] &&\
    \ $s[$i+1] == $s[$i+2]) {\n            return $result;\n        }\n    }\n   \
    \ $result = true;\n    return $result;\n}\n\necho is_happy('aabb');\nfunction\
    \ candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Uninitialized string offset 4 in /tmp/tmpyl0ln57j.php on line\
    \ 25\n\nWarning: Uninitialized string offset 4 in /tmp/tmpyl0ln57j.php on line\
    \ 25\n1\nWarning: Uninitialized string offset 4 in /tmp/tmpyl0ln57j.php on line\
    \ 25\n\nWarning: Uninitialized string offset 4 in /tmp/tmpyl0ln57j.php on line\
    \ 25\n\nWarning: Uninitialized string offset 4 in /tmp/tmpyl0ln57j.php on line\
    \ 25\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyl0ln57j.php:42\n\
    Stack trace:\n#0 /tmp/tmpyl0ln57j.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpyl0ln57j.php\
    \ on line 42\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n  if (strlen($s) < 3) {\n    return false;\n\
    \  }\n  for ($i = 0; $i < strlen($s) - 2; $i++) {\n    if (substr($s, $i, 3) ==\
    \ substr($s, $i + 1, 3)) {\n      return false;\n    }\n  }\n  return true;\n\
    }\necho is_happy(\"abcd\") . \"\\n\";\necho is_happy(\"aa\") . \"\\n\";\necho\
    \ is_happy(\"aabb\") . \"\\n\";\necho is_happy(\"adb\") . \"\\n\";\necho is_happy(\"\
    xyy\") . \"\\n\";\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n1\n1\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkxc655k9.php:43\n\
    Stack trace:\n#0 /tmp/tmpkxc655k9.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpkxc655k9.php\
    \ on line 43\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n// Write your code here\n\n    if(strlen($s)<3){\n\
    \        return false;\n    }\n    for($i=0;$i<strlen($s)-2;$i++){\n        if($s[$i]==$s[$i+1]\
    \ && $s[$i]==$s[$i+2]){\n            return false;\n        }\n    }\n    return\
    \ true;\n}\necho is_happy('a');\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq7f48_7x.php:40\n\
    Stack trace:\n#0 /tmp/tmpq7f48_7x.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpq7f48_7x.php\
    \ on line 40\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $array_string = str_split($s);\n    $len\
    \ = count($array_string);\n    $result = false;\n    if ($len >= 3) {\n      \
    \  for ($i = 0; $i < $len - 2; $i++) {\n            if ($array_string[$i] != $array_string[$i\
    \ + 1] && $array_string[$i] != $array_string[$i + 2] && $array_string[$i + 1]\
    \ != $array_string[$i + 2]) {\n                $result = true;\n            }\
    \ else {\n                $result = false;\n                break;\n         \
    \   }\n        }\n    } else {\n        $result = false;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    if (strlen($s) < 3) {\n        return false;\n\
    \    }\n    for ($i = 2; $i < strlen($s); $i++) {\n        if ($s[$i - 2] == $s[$i\
    \ - 1] || $s[$i - 2] == $s[$i] || $s[$i - 1] == $s[$i]) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $len = strlen($s);\n    if ($len < 3) {\n\
    \        return false;\n    }\n    if ($len === 3) {\n        return true;\n \
    \   }\n    for ($i = 2; $i < $len; $i++) {\n        if ($s[$i] === $s[$i - 1]\
    \ || $s[$i] === $s[$i - 2]) {\n            return false;\n        }\n    }\n \
    \   return true;\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7uigr4j5.php:43\n\
    Stack trace:\n#0 /tmp/tmp7uigr4j5.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp7uigr4j5.php\
    \ on line 43\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n  $s = str_split($s);\n  return strlen($s)\
    \ >= 3 && $s[0] != $s[1] && $s[1] != $s[2] && $s[0] != $s[2];\n}\n\necho is_happy('aabb')\
    \ . PHP_EOL;\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: strlen(): Argument #1 ($str) must be\
    \ of type string, array given in /tmp/tmpfkmi0v9k.php:20\nStack trace:\n#0 /tmp/tmpfkmi0v9k.php(23):\
    \ is_happy(Array)\n#1 {main}\n  thrown in /tmp/tmpfkmi0v9k.php on line 20\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $len = strlen($s);\n    if ($len < 3) return\
    \ false;\n    $i = 0;\n    while ($i < $len - 2) {\n        if ($s[$i] == $s[$i\
    \ + 1] && $s[$i] == $s[$i + 2]) return false;\n        $i++;\n    }\n    return\
    \ true;\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfb5fdtyh.php:36\n\
    Stack trace:\n#0 /tmp/tmpfb5fdtyh.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpfb5fdtyh.php\
    \ on line 36\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $happy = 'Happy';\n    if (strlen($s) >=\
    \ 3) {\n        for ($i = 0; $i < strlen($s) - 2; $i++) {\n            if ($s[$i]\
    \ == $s[$i + 1] && $s[$i + 1] == $s[$i + 2]) {\n                $happy = 'Not\
    \ so happy';\n            }\n        }\n    } else {\n        $happy = 'Not so\
    \ happy';\n    }\n    return $happy;\n}\nprint is_happy('abcd');\nprint is_happy('aabb');\n\
    print is_happy('xyy');\nprint is_happy('aa');\nprint is_happy('a');\nprint is_happy('adb');\n\
    \nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "HappyHappyHappyNot so happyNot so happyHappy\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpgc0in37t.php:43\nStack trace:\n#0 /tmp/tmpgc0in37t.php(53):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpgc0in37t.php on line 43\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n\t$i = 0;\n\t$count = strlen($s);\n\twhile\
    \ ($i < $count - 2) {\n\t\t$char1 = $s[$i];\n\t\t$char2 = $s[$i + 1];\n\t\t$char3\
    \ = $s[$i + 2];\n\t\tif ($char1 == $char2 || $char1 == $char3 || $char2 == $char3)\
    \ {\n\t\t\treturn false;\n\t\t}\n\t\t$i++;\n\t}\n\treturn true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphu1gxbe5.php:38\n\
    Stack trace:\n#0 /tmp/tmphu1gxbe5.php(48): test()\n#1 {main}\n  thrown in /tmp/tmphu1gxbe5.php\
    \ on line 38\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n\tif(strlen($s) < 3) return false;\n\tfor($i\
    \ = 0; $i < strlen($s) - 2; $i++){\n\t\tif($s[$i] == $s[$i + 1] || $s[$i] == $s[$i\
    \ + 2] || $s[$i + 1] == $s[$i + 2]){\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn\
    \ true;\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $len = strlen($s);\n    if ($len < 3) {\n\
    \        return false;\n    }\n    for ($i = 0; $i < $len - 2; $i++) {\n     \
    \   if ($s[$i] === $s[$i + 1] || $s[$i] === $s[$i + 2] || $s[$i + 1] === $s[$i\
    \ + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n\
    $fptr = fopen(getenv(\"OUTPUT_PATH\"), \"w\");\n\n$s = '';\nfscanf($stdin, \"\
    %[^\\n]\", $s);\n\n$result = is_happy($s);\n\nfwrite($fptr, $result ? \"yes\\\
    n\" : \"no\\n\");\n\nfclose($stdin);\nfclose($fptr);\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught ValueError: Path cannot be empty in /tmp/tmp42rq1zpb.php:31\n\
    Stack trace:\n#0 /tmp/tmp42rq1zpb.php(31): fopen('', 'w')\n#1 {main}\n  thrown\
    \ in /tmp/tmp42rq1zpb.php on line 31\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    if (strlen($s) >= 3) {\n        for ($i\
    \ = 0; $i < strlen($s) - 2; $i++) {\n            if ($s[$i] == $s[$i + 1] && $s[$i]\
    \ == $s[$i + 2]) {\n                return false;\n            }\n        }\n\
    \        return true;\n    }\n    return false;\n}\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4gx47q3_.php:37\n\
    Stack trace:\n#0 /tmp/tmp4gx47q3_.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp4gx47q3_.php\
    \ on line 37\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    if (strlen($s) < 3) {\n        return false;\n\
    \    }\n    $arr = str_split($s);\n    for ($i = 0; $i < count($arr) - 2; $i++)\
    \ {\n        if ($arr[$i] == $arr[$i + 1] || $arr[$i] == $arr[$i + 2] || $arr[$i\
    \ + 1] == $arr[$i + 2]) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nvar_dump(is_happy('a'));\nvar_dump(is_happy('aa'));\nvar_dump(is_happy('abcd'));\n\
    var_dump(is_happy('aabb'));\nvar_dump(is_happy('adb'));\nvar_dump(is_happy('xyy'));\n\
    function candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'bool(false)

    bool(false)

    bool(true)

    bool(false)

    bool(true)

    bool(false)

    '
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $len = strlen($s);\n    if ($len < 3) {\n\
    \        return false;\n    }\n    for ($i = 0; $i < $len; $i++) {\n        if\
    \ ($s[$i] == $s[$i + 1] && $s[$i] == $s[$i + 2]) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Uninitialized string offset 4 in /tmp/tmpcyhpqjt4.php on line\
    \ 24\n\nWarning: Uninitialized string offset 4 in /tmp/tmpcyhpqjt4.php on line\
    \ 24\n\nWarning: Uninitialized string offset 4 in /tmp/tmpcyhpqjt4.php on line\
    \ 24\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcyhpqjt4.php:38\n\
    Stack trace:\n#0 /tmp/tmpcyhpqjt4.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpcyhpqjt4.php\
    \ on line 38\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n\tif(strlen($s) < 3) {\n\t\treturn false;\n\
    \t} elseif(strlen($s) == 3 && $s[0] != $s[1] && $s[1] != $s[2] && $s[0] != $s[2])\
    \ {\n\t\treturn true;\n\t} else {\n\t\t$arr = str_split($s);\n\t\tfor($i = 0;\
    \ $i < count($arr); $i++) {\n\t\t\tif($arr[$i] == $arr[$i + 1] && $arr[$i + 1]\
    \ == $arr[$i + 2]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\
    \t}\n}\n\necho is_happy('abcd');\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpo12j6mkj.php on line 26\n1\n\
    Warning: Undefined array key 4 in /tmp/tmpo12j6mkj.php on line 26\n\nWarning:\
    \ Undefined array key 4 in /tmp/tmpo12j6mkj.php on line 26\n\nWarning: Undefined\
    \ array key 4 in /tmp/tmpo12j6mkj.php on line 26\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpo12j6mkj.php:44\nStack trace:\n#0 /tmp/tmpo12j6mkj.php(51):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpo12j6mkj.php on line 44\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    // Write your code here\n    // To print\
    \ results to the standard output you can use print\n    // Example: print \"Hello\
    \ world!\";\n    return false;\n}\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpus6vfeq7.php:31\n\
    Stack trace:\n#0 /tmp/tmpus6vfeq7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpus6vfeq7.php\
    \ on line 31\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n  $size = strlen($s);\n  if ($size < 3) return\
    \ false;\n  for ($i = 0; $i < $size - 2; $i++) {\n    if (substr($s, $i, 3) ===\
    \ substr($s, $i + 1, 3)) return false;\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_oan5hf3.php:35\n\
    Stack trace:\n#0 /tmp/tmp_oan5hf3.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp_oan5hf3.php\
    \ on line 35\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $str_len = strlen($s);\n    if ($str_len\
    \ >= 3) {\n        for ($i = 0; $i < $str_len; $i++) {\n            if ($s[$i]\
    \ == $s[$i + 1] && $s[$i + 1] == $s[$i + 2]) {\n                return false;\n\
    \            }\n        }\n        return true;\n    }\n    return false;\n}\n\
    echo is_happy(\"a\") . \"\\n\";\necho is_happy(\"aa\") . \"\\n\";\necho is_happy(\"\
    abcd\") . \"\\n\";\necho is_happy(\"aabb\") . \"\\n\";\necho is_happy(\"adb\"\
    ) . \"\\n\";\necho is_happy(\"xyy\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\n\n\nWarning: Uninitialized string offset 4 in /tmp/tmp02zv6oqe.php on\
    \ line 22\n1\n\nWarning: Uninitialized string offset 4 in /tmp/tmp02zv6oqe.php\
    \ on line 22\n\nWarning: Uninitialized string offset 4 in /tmp/tmp02zv6oqe.php\
    \ on line 22\n1\n\nWarning: Uninitialized string offset 3 in /tmp/tmp02zv6oqe.php\
    \ on line 22\n1\n\nWarning: Uninitialized string offset 3 in /tmp/tmp02zv6oqe.php\
    \ on line 22\n\nWarning: Uninitialized string offset 3 in /tmp/tmp02zv6oqe.php\
    \ on line 22\n1\n\nWarning: Uninitialized string offset 4 in /tmp/tmp02zv6oqe.php\
    \ on line 22\n\nWarning: Uninitialized string offset 4 in /tmp/tmp02zv6oqe.php\
    \ on line 22\n\nWarning: Uninitialized string offset 4 in /tmp/tmp02zv6oqe.php\
    \ on line 22\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp02zv6oqe.php:44\n\
    Stack trace:\n#0 /tmp/tmp02zv6oqe.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp02zv6oqe.php\
    \ on line 44\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $count = 0;\n    $result = false;\n   \
    \ $arr = [];\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (!in_array($s[$i],\
    \ $arr)) {\n            $arr[] = $s[$i];\n            $count++;\n        } else\
    \ {\n            $count = 0;\n            $arr = [];\n        }\n        if ($count\
    \ == 3) {\n            $result = true;\n            break;\n        }\n    }\n\
    \    return $result;\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2y86zght.php:49\n\
    Stack trace:\n#0 /tmp/tmp2y86zght.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp2y86zght.php\
    \ on line 49\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    if (strlen($s) < 3) {\n        return false;\n\
    \    }\n    for ($i = 0; $i < strlen($s) - 2; $i++) {\n        if ($s[$i] == $s[$i\
    \ + 1] && $s[$i] == $s[$i + 2]) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyhozuxcw.php:37\n\
    Stack trace:\n#0 /tmp/tmpyhozuxcw.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpyhozuxcw.php\
    \ on line 37\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    if (strlen($s) < 3) {\n        return false;\n\
    \    }\n\n    $length = strlen($s);\n    for ($i = 0; $i < $length - 2; $i++)\
    \ {\n        if ($s[$i] == $s[$i + 1] && $s[$i] == $s[$i + 2]) {\n           \
    \ return false;\n        }\n    }\n\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu1lah1xl.php:41\n\
    Stack trace:\n#0 /tmp/tmpu1lah1xl.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpu1lah1xl.php\
    \ on line 41\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $arr = str_split($s);\n    if (count($arr)\
    \ >= 3) {\n        for ($i = 0; $i < count($arr) - 2; $i++) {\n            if\
    \ ($arr[$i] === $arr[$i + 1] && $arr[$i] === $arr[$i + 2]) {\n               \
    \ return false;\n            }\n        }\n        return true;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp84p0sri7.php:38\n\
    Stack trace:\n#0 /tmp/tmp84p0sri7.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp84p0sri7.php\
    \ on line 38\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $len = strlen($s);\n    if ($len >= 3)\
    \ {\n        $temp = '';\n        for ($i = 0; $i < $len - 2; $i++) {\n      \
    \      $temp = substr($s, $i, 3);\n            if (strlen($temp) > 3) {\n    \
    \            if ($temp[0] == $temp[1] || $temp[0] == $temp[2] || $temp[1] == $temp[2])\
    \ {\n                    return false;\n                }\n            }\n   \
    \     }\n        return true;\n    }\n    return false;\n}\necho is_happy('abcd')\
    \ . \"\\n\";\necho is_happy('aabb') . \"\\n\";\necho is_happy('adb') . \"\\n\"\
    ;\necho is_happy('xyy') . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n1\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4wij28ur.php:46\n\
    Stack trace:\n#0 /tmp/tmp4wij28ur.php(53): test()\n#1 {main}\n  thrown in /tmp/tmp4wij28ur.php\
    \ on line 46\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $res = true;\n    $leng = strlen($s);\n\
    \    if ($leng < 3) {\n        $res = false;\n    }\n    else {\n        for ($i\
    \ = 0; $i < $leng; $i++) {\n            if ($s[$i] == $s[$i + 1] and $s[$i] ==\
    \ $s[$i + 2]) {\n                $res = false;\n                break;\n     \
    \       }\n        }\n    }\n    return $res;\n}\necho is_happy(\"abcd\") ? \"\
    true\" : \"false\";\necho PHP_EOL;\necho is_happy(\"aabb\") ? \"true\" : \"false\"\
    ;\necho PHP_EOL;\necho is_happy(\"adb\") ? \"true\" : \"false\";\necho PHP_EOL;\n\
    echo is_happy(\"xyy\") ? \"true\" : \"false\";\necho PHP_EOL;\necho is_happy(\"\
    bab\") ? \"true\" : \"false\";\necho PHP_EOL;\necho is_happy(\"babb\") ? \"true\"\
    \ : \"false\";\necho PHP_EOL;\necho is_happy(\"babbb\") ? \"true\" : \"false\"\
    ;\necho PHP_EOL;\necho is_happy(\"bbaa\") ? \"true\" : \"false\";\necho PHP_EOL;\n\
    echo is_happy(\"abcc\") ? \"true\" : \"false\";\necho PHP_EOL;\necho is_happy(\"\
    a\") ? \"true\" : \"false\";\necho PHP_EOL;\necho is_happy(\"aa\") ? \"true\"\
    \ : \"false\";\necho PHP_EOL;\necho is_happy(\"aabbcc\") ? \"true\" : \"false\"\
    ;\necho PHP_EOL;\necho is_happy(\"abcdabcd\") ? \"true\" : \"false\";\necho PHP_EOL;\n\
    echo is_happy(\"\") ? \"true\" : \"false\";\necho PHP_EOL;\necho is_happy(\"a\"\
    ) ? \"true\" : \"false\";\necho PHP_EOL;\necho is_happy(\"aa\") ? \"true\" : \"\
    false\";\necho PHP_EOL;\necho is_happy\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting "," or ";" in
    /tmp/tmpx4igmh94.php on line 67

    '
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $length = strlen($s);\n    if ($length\
    \ < 3) {\n        return false;\n    }\n    for ($i = 2; $i < $length; $i++) {\n\
    \        if ($s[$i] == $s[$i - 1] || $s[$i] == $s[$i - 2]) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\nif(is_happy($argv[1])){\n   \
    \ echo \"true\\n\";\n} else {\n    echo \"false\\n\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 1 in /tmp/tmpd_u1aucw.php on line 30


    Deprecated: strlen(): Passing null to parameter #1 ($string) of type string is
    deprecated in /tmp/tmpd_u1aucw.php on line 19

    false

    '
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n  $match=array();\n  preg_match('/(\\w)\\1\\\
    1/',$s,$match);\n  if(!empty($match)){\n  \treturn false;\n  }else{\n  \treturn\
    \ true;\n  }\n}\n\necho is_happy(\"a\");\necho is_happy(\"aa\");\necho is_happy(\"\
    abcd\");\necho is_happy(\"aabb\");\necho is_happy(\"adb\");\necho is_happy(\"\
    xyy\");\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "111111\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvz7g2pxx.php:39\n\
    Stack trace:\n#0 /tmp/tmpvz7g2pxx.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpvz7g2pxx.php\
    \ on line 39\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n  if (strlen($s) < 3) return false;\n  $arr\
    \ = str_split($s);\n  for ($i = 0; $i < strlen($s) - 2; $i++) {\n    if ($arr[$i]\
    \ == $arr[$i + 1] || $arr[$i] == $arr[$i + 2] || $arr[$i + 1] == $arr[$i + 2])\
    \ {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $s = str_split($s);\n    if (count($s)\
    \ < 3) {\n        return false;\n    } else {\n        for ($i = 0; $i < count($s);\
    \ $i++) {\n            if ($s[$i] == $s[$i + 1] && $s[$i + 1] == $s[$i + 2]) {\n\
    \                return false;\n            }\n        }\n        return true;\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpjjuimbz_.php on line 24\n\n\
    Warning: Undefined array key 4 in /tmp/tmpjjuimbz_.php on line 24\n\nWarning:\
    \ Undefined array key 4 in /tmp/tmpjjuimbz_.php on line 24\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpjjuimbz_.php:40\nStack trace:\n#0 /tmp/tmpjjuimbz_.php(47):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpjjuimbz_.php on line 40\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n\tif(strlen($s) < 3) {\n\t\treturn false;\n\
    \t} else {\n\t\tfor($i = 0; $i < strlen($s); $i++) {\n\t\t\tif(substr($s, $i,\
    \ 3) === strrev(substr($s, $i, 3))) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\
    \t\treturn true;\n\t}\n}\necho is_happy('happphp') ? 'true' : 'false';\nfunction\
    \ candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "false\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpem4uxabd.php:38\n\
    Stack trace:\n#0 /tmp/tmpem4uxabd.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpem4uxabd.php\
    \ on line 38\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    if (strlen($s) < 3) {\n        return false;\n\
    \    }\n    $s = str_split($s);\n    if ($s[0] == $s[1] || $s[1] == $s[2] || $s[0]\
    \ == $s[2]) {\n        return false;\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2ekx1m1k.php:41\n\
    Stack trace:\n#0 /tmp/tmp2ekx1m1k.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp2ekx1m1k.php\
    \ on line 41\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $result = false;\n    $len = strlen($s);\n\
    \    if ($len >= 3) {\n        for ($i = 0; $i < $len - 2; $i++) {\n         \
    \   if ($s[$i] != $s[$i + 1] && $s[$i] != $s[$i + 2] && $s[$i + 1] != $s[$i +\
    \ 2]) {\n                $result = true;\n            } else {\n             \
    \   $result = false;\n                break;\n            }\n        }\n    }\n\
    \    return $result;\n}\n\n$s = \"aa\";\n$result = is_happy($s);\nvar_dump($result);\n\
    function candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'bool(false)

    '
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n\tif (strlen($s) > 2) {\n\t\tfor ($i = 2; $i\
    \ < strlen($s); $i++) {\n\t\t\tif ($s[$i] == $s[$i - 1] && $s[$i] == $s[$i - 2])\
    \ {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\treturn false;\n\
    }\n\necho is_happy('a');\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpedbym4gg.php:39\n\
    Stack trace:\n#0 /tmp/tmpedbym4gg.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpedbym4gg.php\
    \ on line 39\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n\t$len = strlen($s);\n\tif ($len < 3) {\n\t\
    \treturn false;\n\t}\n\tfor ($i = 0; $i < $len - 2; $i++) {\n\t\tif ($s[$i] ==\
    \ $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n\t\t\treturn\
    \ false;\n\t\t}\n\t}\n\treturn true;\n}\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $output = true;\n    $strArray = str_split($s);\n\
    \    if (count($strArray) < 3) {\n        $output = false;\n    } else {\n   \
    \     for ($i = 2; $i < count($strArray); $i++) {\n            if ($strArray[$i]\
    \ == $strArray[$i - 1] && $strArray[$i] == $strArray[$i - 2]) {\n            \
    \    $output = false;\n                break;\n            }\n        }\n    }\n\
    \    return $output;\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprdnf7t8_.php:41\n\
    Stack trace:\n#0 /tmp/tmprdnf7t8_.php(48): test()\n#1 {main}\n  thrown in /tmp/tmprdnf7t8_.php\
    \ on line 41\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    // Your code here\n}\n\nclass HappyTest\
    \ extends \\PHPUnit_Framework_TestCase {\n    public function testBasics() {\n\
    \        $this->assertEquals(false, is_happy('a'));\n        $this->assertEquals(false,\
    \ is_happy('aa'));\n        $this->assertEquals(true, is_happy('abcd'));\n   \
    \     $this->assertEquals(false, is_happy('aabb'));\n        $this->assertEquals(true,\
    \ is_happy('adb'));\n        $this->assertEquals(false, is_happy('xyy'));\n  \
    \  }\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Class \"PHPUnit_Framework_TestCase\" not\
    \ found in /tmp/tmpabzjv9oq.php:22\nStack trace:\n#0 {main}\n  thrown in /tmp/tmpabzjv9oq.php\
    \ on line 22\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9mg5i1rd.php:27\n\
    Stack trace:\n#0 /tmp/tmp9mg5i1rd.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp9mg5i1rd.php\
    \ on line 27\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $s = str_split($s);\n    if (count($s)\
    \ < 3) {\n        return false;\n    } else {\n        for ($i = 0; $i < count($s)\
    \ - 2; $i++) {\n            if ($s[$i] === $s[$i + 1] || $s[$i] === $s[$i + 2]\
    \ || $s[$i + 1] === $s[$i + 2]) {\n                return false;\n           \
    \ }\n        }\n        return true;\n    }\n}\nfunction candidate(...$args) {\n\
    \    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    if (strlen($s) < 3) return false;\n   \
    \ $s = str_split($s);\n    for ($i = 0; $i < count($s) - 2; $i++) {\n        if\
    \ ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n\
    \            return false;\n        }\n    }\n    return true;\n}\necho is_happy(\"\
    aabb\") ? \"true\" : \"false\";\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'false'
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    if (strlen($s) < 3) return false;\n   \
    \ $result = true;\n    for ($i = 0; $i < strlen($s) - 2; $i++) {\n        if ($s[$i]\
    \ == $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n     \
    \       $result = false;\n            break;\n        }\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $count = strlen($s);\n    $arr = str_split($s);\n\
    \    if($count < 3) {\n        return false;\n    }\n    for($i = 0; $i < $count\
    \ - 2; $i++) {\n        if($arr[$i] == $arr[$i + 1] || $arr[$i] == $arr[$i + 2]\
    \ || $arr[$i + 1] == $arr[$i + 2]) {\n            return false;\n        }\n \
    \   }\n    return true;\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $res = true;\n    $len = strlen($s);\n\
    \    if ($len < 3) {\n        $res = false;\n    } else {\n        for ($i = 0;\
    \ $i < $len - 2; $i++) {\n            $char = substr($s, $i, 3);\n           \
    \ $lenChar = strlen($char);\n            for ($j = 0; $j < $lenChar - 1; $j++)\
    \ {\n                $test = substr($char, $j, 1);\n                $test1 = substr($char,\
    \ $j + 1, 1);\n                if ($test == $test1) {\n                    $res\
    \ = false;\n                    break;\n                }\n            }\n   \
    \     }\n    }\n    return $res;\n}\n\necho is_happy('a') . \"\\n\";\necho is_happy('aa')\
    \ . \"\\n\";\necho is_happy('abcd') . \"\\n\";\necho is_happy('aabb') . \"\\n\"\
    ;\necho is_happy('adb') . \"\\n\";\necho is_happy('xyy') . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\n\n1\n\n1\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn591j4tk.php:58\n\
    Stack trace:\n#0 /tmp/tmpn591j4tk.php(61): test()\n#1 {main}\n  thrown in /tmp/tmpn591j4tk.php\
    \ on line 58\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n  $i = 0;\n  $j = 3;\n  if (strlen($s) < 3)\
    \ return false;\n  while ($j <= strlen($s)) {\n    if (substr($s, $i, 3) == substr($s,\
    \ $i + 1, 3)) {\n      return false;\n    }\n    $i++;\n    $j++;\n  }\n  return\
    \ true;\n}\n\necho is_happy('a') . PHP_EOL;\necho is_happy('aa') . PHP_EOL;\n\
    echo is_happy('abcd') . PHP_EOL;\necho is_happy('aabb') . PHP_EOL;\necho is_happy('adb')\
    \ . PHP_EOL;\necho is_happy('xyy') . PHP_EOL;\nfunction candidate(...$args) {\n\
    \    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\n\n1\n1\n1\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprsfs_mqr.php:46\n\
    Stack trace:\n#0 /tmp/tmprsfs_mqr.php(53): test()\n#1 {main}\n  thrown in /tmp/tmprsfs_mqr.php\
    \ on line 46\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $str = $s;\n    $length = strlen($str);\n\
    \    if ($length < 3) {\n        return false;\n    }\n    $len = $length - 2;\n\
    \    for ($i = 0; $i < $len; $i++) {\n        $temp = substr($str, $i, 3);\n \
    \       if ($temp[0] == $temp[1] || $temp[0] == $temp[2] || $temp[1] == $temp[2])\
    \ {\n            return false;\n        }\n    }\n    return true;\n}\necho is_happy(\"\
    a\");\necho is_happy(\"aa\");\necho is_happy(\"abcd\");\necho is_happy(\"aabb\"\
    );\necho is_happy(\"adb\");\necho is_happy(\"xyy\");\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n\n}\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplu49bja6.php:26\n\
    Stack trace:\n#0 /tmp/tmplu49bja6.php(36): test()\n#1 {main}\n  thrown in /tmp/tmplu49bja6.php\
    \ on line 26\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    if(strlen($s) < 3) {\n        return false;\n\
    \    }\n    for($i = 0; $i < strlen($s); $i++) {\n        if($s[$i] == $s[$i+1]\
    \ || $s[$i] == $s[$i+2] || $s[$i+1] == $s[$i+2]) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n   \
    \ return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Uninitialized string offset 4 in /tmp/tmpfs7db__w.php on line\
    \ 23\n\nWarning: Uninitialized string offset 4 in /tmp/tmpfs7db__w.php on line\
    \ 23\n\nWarning: Uninitialized string offset 4 in /tmp/tmpfs7db__w.php on line\
    \ 23\n\nWarning: Uninitialized string offset 5 in /tmp/tmpfs7db__w.php on line\
    \ 23\n\nWarning: Uninitialized string offset 4 in /tmp/tmpfs7db__w.php on line\
    \ 23\n\nWarning: Uninitialized string offset 5 in /tmp/tmpfs7db__w.php on line\
    \ 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfs7db__w.php:37\n\
    Stack trace:\n#0 /tmp/tmpfs7db__w.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpfs7db__w.php\
    \ on line 37\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    // Write your code here\n    // To print\
    \ results to the standard output you can use print\n    // Example: print \"Hello\
    \ world!\";\n    $slen = strlen($s);\n    if ($slen < 3) {\n        return false;\n\
    \    }\n    $start = 0;\n    $end = 3;\n    while ($end <= $slen) {\n        $haystack\
    \ = substr($s, $start, $end);\n        $needle = \"\";\n        for ($i = 0; $i\
    \ < $end; $i++) {\n            $needle .= $haystack[$i];\n            if (strpos($haystack,\
    \ $needle) != $i) {\n                return false;\n            }\n        }\n\
    \        $start++;\n        $end++;\n    }\n    return true;\n}\necho \"<pre>\"\
    ;\necho is_happy(\"abcd\");\necho \"</pre>\";\nfunction candidate(...$args) {\n\
    \    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre></pre>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwtu1qcyc.php:52\n\
    Stack trace:\n#0 /tmp/tmpwtu1qcyc.php(60): test()\n#1 {main}\n  thrown in /tmp/tmpwtu1qcyc.php\
    \ on line 52\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    // Write your code here\n    // To print\
    \ results to the standard output you can use print\n    // Example: print \"Hello\
    \ world!\";\n\t$len = strlen($s);\n\tif($len < 3)\n\t\treturn false;\n\t$count\
    \ = 0;\n\tfor($i = 2; $i < $len; $i++) {\n\t\tif($s[$i] == $s[$i-1] && $s[$i]\
    \ == $s[$i-2])\n\t\t\treturn false;\n\t}\n\treturn true;\n}\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9m9w7aku.php:40\n\
    Stack trace:\n#0 /tmp/tmp9m9w7aku.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp9m9w7aku.php\
    \ on line 40\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    if (strlen($s) < 3) return false;\n   \
    \ for ($i = 0; $i < strlen($s); $i++) {\n        if ($s[$i] == $s[$i + 1] && $s[$i]\
    \ == $s[$i + 2]) return false;\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Uninitialized string offset 4 in /tmp/tmp9ozyyljg.php on line\
    \ 21\n\nWarning: Uninitialized string offset 4 in /tmp/tmp9ozyyljg.php on line\
    \ 21\n\nWarning: Uninitialized string offset 4 in /tmp/tmp9ozyyljg.php on line\
    \ 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9ozyyljg.php:33\n\
    Stack trace:\n#0 /tmp/tmp9ozyyljg.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp9ozyyljg.php\
    \ on line 33\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $len = strlen($s);\n    $res = false;\n\
    \    if ($len >= 3) {\n        for ($i = 0; $i < $len; $i++) {\n            if\
    \ (($s[$i] == $s[$i + 1]) || ($s[$i] == $s[$i + 2]) || ($s[$i + 1] == $s[$i +\
    \ 2])) {\n                $res = false;\n                break;\n            }\
    \ else {\n                $res = true;\n            }\n        }\n    }\n    return\
    \ $res;\n}\n\n$s = readline(\"Enter the string: \");\nvar_dump(is_happy($s));\n\
    function candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function readline() in\
    \ /tmp/tmpoxeb57pf.php:34\nStack trace:\n#0 {main}\n  thrown in /tmp/tmpoxeb57pf.php\
    \ on line 34\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $array_char = str_split($s);\n    $len\
    \ = count($array_char);\n    if($len < 3) {\n        return false;\n    }\n  \
    \  for($i = 0; $i < $len - 3; $i++) {\n        if($array_char[$i] == $array_char[$i\
    \ + 1] || $array_char[$i] == $array_char[$i + 2] || $array_char[$i + 1] == $array_char[$i\
    \ + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\
    echo is_happy('abcd');\necho \"\\n\";\necho is_happy('aabb');\necho \"\\n\";\n\
    echo is_happy('adb');\necho \"\\n\";\necho is_happy('xyy');\necho \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n1\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppckcjo6h.php:49\n\
    Stack trace:\n#0 /tmp/tmppckcjo6h.php(54): test()\n#1 {main}\n  thrown in /tmp/tmppckcjo6h.php\
    \ on line 49\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    if (strlen($s) < 3) {\n        return false;\n\
    \    }\n    $s = str_split($s);\n    if ($s[0] === $s[1] && $s[1] === $s[2]) {\n\
    \        return false;\n    }\n    for ($i = 1; $i < count($s) - 2; $i++) {\n\
    \        if ($s[$i] === $s[$i + 1] && $s[$i + 1] === $s[$i + 2]) {\n         \
    \   return false;\n        }\n    }\n    return true;\n}\n\necho is_happy('a')\
    \ . PHP_EOL;\necho is_happy('aa') . PHP_EOL;\necho is_happy('abcd') . PHP_EOL;\n\
    echo is_happy('aabb') . PHP_EOL;\necho is_happy('adb') . PHP_EOL;\necho is_happy('xyy')\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\n\n1\n1\n1\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvyqeq_96.php:48\n\
    Stack trace:\n#0 /tmp/tmpvyqeq_96.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpvyqeq_96.php\
    \ on line 48\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n\t$s = str_split($s);\n\t$length = count($s);\n\
    \t$count = 0;\n\tforeach ($s as $key => $value) {\n\t\tif ($key < $length - 3)\
    \ {\n\t\t\tif ($value == $s[$key + 1] && $value == $s[$key + 2]) {\n\t\t\t\treturn\
    \ false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\nprint_r(is_happy('abcd'));\n\
    \nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyys_884x.php:38\n\
    Stack trace:\n#0 /tmp/tmpyys_884x.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpyys_884x.php\
    \ on line 38\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n  $c = 0;\n  for ($i = 0; $i < strlen($s);\
    \ $i++) {\n    if ($s[$i] == $s[$i+1] && $s[$i] == $s[$i+2])\n    $c = $c + 1;\n\
    \  }\n  if ($c == 0 && strlen($s) >= 3) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Uninitialized string offset 1 in /tmp/tmp1skytl2c.php on line\
    \ 21\n\nWarning: Uninitialized string offset 2 in /tmp/tmp1skytl2c.php on line\
    \ 21\n\nWarning: Uninitialized string offset 2 in /tmp/tmp1skytl2c.php on line\
    \ 21\n\nWarning: Uninitialized string offset 4 in /tmp/tmp1skytl2c.php on line\
    \ 21\n\nWarning: Uninitialized string offset 4 in /tmp/tmp1skytl2c.php on line\
    \ 21\n\nWarning: Uninitialized string offset 4 in /tmp/tmp1skytl2c.php on line\
    \ 21\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1skytl2c.php:38\n\
    Stack trace:\n#0 /tmp/tmp1skytl2c.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp1skytl2c.php\
    \ on line 38\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $len = strlen($s);\n    if ($len < 3) {\n\
    \        return false;\n    }\n    if ($len == 3) {\n        return true;\n  \
    \  }\n\n    for ($i = 0; $i < $len - 2; $i++) {\n        if ($s[$i] == $s[$i +\
    \ 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxa3lopp_.php:45\n\
    Stack trace:\n#0 /tmp/tmpxa3lopp_.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpxa3lopp_.php\
    \ on line 45\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $len = strlen($s);\n    if ($len < 3) {\n\
    \        return false;\n    }\n    $happy = true;\n    for ($i = 0; $i < $len;\
    \ $i++) {\n        if (isset($s[$i+1]) && isset($s[$i+2])) {\n            if ($s[$i]\
    \ === $s[$i+1] || $s[$i] === $s[$i+2] || $s[$i+1] === $s[$i+2]) {\n          \
    \      $happy = false;\n                break;\n            }\n        }\n   \
    \ }\n    return $happy;\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n  if (strlen($s) < 3) {\n    return false;\n\
    \  }\n  for ($i = 0; $i < strlen($s) - 2; $i++) {\n    if ($s[$i] == $s[$i + 1]\
    \ && $s[$i] == $s[$i + 2]) {\n      return false;\n    }\n  }\n  return true;\n\
    }\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq7z_po8f.php:38\n\
    Stack trace:\n#0 /tmp/tmpq7z_po8f.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpq7z_po8f.php\
    \ on line 38\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n  if (strlen($s)<3) {\n    return false;\n\
    \  } elseif ($s[0] == $s[1] || $s[1] == $s[2] || $s[0] == $s[2]) {\n    return\
    \ false;\n  } else {\n    return true;\n  }\n}\n\nvar_dump(is_happy('a'));\nvar_dump(is_happy('aa'));\n\
    var_dump(is_happy('abc'));\nvar_dump(is_happy('aabb'));\nvar_dump(is_happy('adb'));\n\
    var_dump(is_happy('xyy'));\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "bool(false)\nbool(false)\nbool(true)\nbool(false)\nbool(true)\nbool(false)\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjwlj2tpo.php:46\nStack\
    \ trace:\n#0 /tmp/tmpjwlj2tpo.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpjwlj2tpo.php\
    \ on line 46\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $bool = true;\n    $counter = 0;\n    if\
    \ (strlen($s) < 3) {\n        return false;\n    }\n    for ($i = 0; $i < strlen($s);\
    \ $i++) {\n        if ($i < strlen($s) - 2) {\n            if ($s[$i] == $s[$i\
    \ + 1] && $s[$i] == $s[$i + 2]) {\n                $bool = false;\n          \
    \  }\n        }\n    }\n    return $bool;\n}\nfunction candidate(...$args) {\n\
    \    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp72c470po.php:41\n\
    Stack trace:\n#0 /tmp/tmp72c470po.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp72c470po.php\
    \ on line 41\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n\t$is_happy = true;\n\tif (strlen($s) < 3)\
    \ {\n\t\t$is_happy = false;\n\t}\n\tfor ($i = 0; $i < strlen($s) - 2; $i++) {\n\
    \t\tif (substr($s, $i, 3) == substr($s, $i + 1, 3)) {\n\t\t\t$is_happy = false;\n\
    \t\t}\n\t}\n\treturn $is_happy;\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnzf9pk0b.php:39\n\
    Stack trace:\n#0 /tmp/tmpnzf9pk0b.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpnzf9pk0b.php\
    \ on line 39\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $len = strlen($s);\n    if ($len < 3) {\n\
    \        return false;\n    } else {\n        for ($i = 0; $i < $len - 2; $i++)\
    \ {\n            if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i + 1]\
    \ == $s[$i + 2]) {\n                return false;\n            }\n        }\n\
    \        return true;\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n\t//hint: use loop\n}\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkso_tz8g.php:26\n\
    Stack trace:\n#0 /tmp/tmpkso_tz8g.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpkso_tz8g.php\
    \ on line 26\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $len = strlen($s);\n    if ($len < 3) {\n\
    \        return false;\n    }\n    for ($i = 0; $i < $len - 2; $i++) {\n     \
    \   if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i +\
    \ 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n\
    function candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $count = 0;\n    if (strlen($s) < 3) {\n\
    \        return false;\n    }\n    else {\n        $letter = array();\n      \
    \  for ($i = 0; $i < strlen($s); $i++) {\n            if (!(in_array($s[$i], $letter)))\
    \ {\n                array_push($letter, $s[$i]);\n                $count++;\n\
    \            }\n            else {\n                $count = 0;\n            \
    \    $letter = array();\n            }\n            if ($count == 3) {\n     \
    \           return true;\n            }\n        }\n        return false;\n  \
    \  }\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp97wrrys8.php:53\n\
    Stack trace:\n#0 /tmp/tmp97wrrys8.php(56): test()\n#1 {main}\n  thrown in /tmp/tmp97wrrys8.php\
    \ on line 53\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n  // Write your code here\n  // To print results\
    \ to the standard output you can use print\n  // Example: print \"Hello world!\"\
    ;\n  $s=str_split($s);\n  $count=count($s);\n  $happy = false;\n  if($count<3){\n\
    \    return $happy;\n  }else{\n    for($i=0;$i<$count-2;$i++){\n      if($s[$i]!=$s[$i+1]&&$s[$i]!=$s[$i+2]&&$s[$i+1]!=$s[$i+2]){\n\
    \        $happy = true;\n      }else{\n        $happy = false;\n        break;\n\
    \      }\n    }\n  }\n  return $happy;\n}\necho is_happy('abcd');\n ?>\nfunction\
    \ candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "1function candidate(...$args) {\n    return is_happy(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $s = str_split($s);\n    if (count($s)\
    \ < 3) {\n        return false;\n    }\n    for ($i = 0; $i < count($s) - 2; $i++)\
    \ {\n        if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] ==\
    \ $s[$i + 2]) {\n            return false;\n        }\n    }\n    return true;\n\
    }\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    if (strlen($s) < 3) {\n        return false;\n\
    \    }\n    for ($i = 0; $i < strlen($s) - 2; $i++) {\n        if ($s[$i] == $s[$i\
    \ + 1] && $s[$i] == $s[$i + 2]) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\nif (is_happy($s) == true) {\n    echo \"True\";\n} else\
    \ {\n    echo \"False\";\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $s in /tmp/tmp6fcp5efp.php on line 29\n\n\
    Deprecated: strlen(): Passing null to parameter #1 ($string) of type string is\
    \ deprecated in /tmp/tmp6fcp5efp.php on line 19\nFalse\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp6fcp5efp.php:42\nStack trace:\n#0 /tmp/tmp6fcp5efp.php(49):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp6fcp5efp.php on line 42\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $length = strlen($s);\n    if ($length\
    \ < 3) {\n        return false;\n    }\n    for ($i = 0; $i < $length; $i++) {\n\
    \        if (isset($s[$i+1]) && isset($s[$i+2])) {\n            if ($s[$i] ==\
    \ $s[$i+1] || $s[$i] == $s[$i+2] || $s[$i+1] == $s[$i+2]) {\n                return\
    \ false;\n            }\n        }\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n  $l = strlen($s);\n  if ($l < 3) {\n    return\
    \ false;\n  }\n  $arr = str_split($s);\n  if (count(array_unique($arr)) < 3) {\n\
    \    return false;\n  }\n  for ($i = 0; $i < $l - 2; $i++) {\n    if (array_search($arr[$i],\
    \ array_slice($arr, $i + 1, 2)) !== false) {\n      return false;\n    }\n  }\n\
    \  return true;\n}\n\necho is_happy('a') ? 'true' : 'false';\necho is_happy('aa')\
    \ ? 'true' : 'false';\necho is_happy('abcd') ? 'true' : 'false';\necho is_happy('aabb')\
    \ ? 'true' : 'false';\necho is_happy('adb') ? 'true' : 'false';\necho is_happy('xyy')\
    \ ? 'true' : 'false';\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: falsefalsetruefalsetruefalse
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n\t$array=[];\n\tif(strlen($s)<3){\n\t\treturn\
    \ false;\n\t}\n\telse{\n\t\tfor($i=0;$i<strlen($s);$i++){\n\t\t\tif(!in_array($s[$i],$array)){\n\
    \t\t\t\tarray_push($array,$s[$i]);\n\t\t\t}\n\t\t\telse{\n\t\t\t\treturn false;\n\
    \t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}\necho is_happy('adb');\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpumj8gdu4.php:47\n\
    Stack trace:\n#0 /tmp/tmpumj8gdu4.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpumj8gdu4.php\
    \ on line 47\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n\n}\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplu49bja6.php:26\n\
    Stack trace:\n#0 /tmp/tmplu49bja6.php(36): test()\n#1 {main}\n  thrown in /tmp/tmplu49bja6.php\
    \ on line 26\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    return strlen($s) >= 3 && strlen($s) %\
    \ 3 == 0 && substr($s, 0, 3) != substr($s, 3, 3) && is_happy(substr($s, 3));\n\
    }\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp354p3l73.php:28\n\
    Stack trace:\n#0 /tmp/tmp354p3l73.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp354p3l73.php\
    \ on line 28\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n  $isHappy = false;\n  $length = strlen($s);\n\
    \  if($length >= 3) {\n    $isHappy = true;\n    for($i = 0; $i < $length - 2;\
    \ $i++) {\n      $a = $s[$i];\n      $b = $s[$i + 1];\n      $c = $s[$i + 2];\n\
    \      if($a == $b || $a == $c || $b == $c) {\n        $isHappy = false;\n   \
    \     break;\n      }\n    }\n  }\n  return $isHappy;\n}\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $arr = str_split($s);\n    $length = strlen($s);\n\
    \    if ($length < 3) {\n        return false;\n    } else {\n        $i = 0;\n\
    \        $count = 0;\n        while ($i < $length - 2) {\n            if ($arr[$i]\
    \ == $arr[$i + 1] && $arr[$i + 1] == $arr[$i + 2]) {\n                $count++;\n\
    \            }\n            $i++;\n        }\n        if ($count == 0) {\n   \
    \         return true;\n        } else {\n            return false;\n        }\n\
    \    }\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvrbienac.php:47\n\
    Stack trace:\n#0 /tmp/tmpvrbienac.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpvrbienac.php\
    \ on line 47\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    if(!is_string($s)) return false;\n    if(strlen($s)\
    \ < 3) return false;\n    $s = str_split($s);\n    for($i = 0; $i < count($s)\
    \ - 2; $i++) {\n        if($s[$i] == $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i\
    \ + 1] == $s[$i + 2]) return false;\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n\t$tempArr = str_split($s);\n\t$triLetterArr\
    \ = array();\n\tfor ($i = 0; $i < count($tempArr) - 2; $i++) {\n\t\t$tempString\
    \ = \"\";\n\t\tfor ($j = 0; $j < 3; $j++) {\n\t\t\t$tempString .= $tempArr[$i\
    \ + $j];\n\t\t}\n\t\tarray_push($triLetterArr, $tempString);\n\t}\n\t$happy =\
    \ true;\n\tfor ($i = 0; $i < count($triLetterArr); $i++) {\n\t\tfor ($j = $i +\
    \ 1; $j < count($triLetterArr); $j++) {\n\t\t\tif ($triLetterArr[$i] == $triLetterArr[$j])\
    \ {\n\t\t\t\t$happy = false;\n\t\t\t}\n\t\t}\n\t}\n\treturn $happy;\n}\nfunction\
    \ candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpile146q0.php:43\n\
    Stack trace:\n#0 /tmp/tmpile146q0.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpile146q0.php\
    \ on line 43\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $i = 0;\n    $s = str_split($s);\n    $length\
    \ = count($s);\n    $count = 0;\n    for($i = 0; $i < $length - 2; $i++) {\n \
    \       if(($s[$i] === $s[$i + 1]) && ($s[$i] === $s[$i + 2])) {\n           \
    \ return false;\n        }\n    }\n    return true;\n}\nprint(is_happy('aabb'));\n\
    function candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvoy78scm.php:36\n\
    Stack trace:\n#0 /tmp/tmpvoy78scm.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpvoy78scm.php\
    \ on line 36\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n\tif (strlen($s) < 3) return false;\n\tfor\
    \ ($i = 2; $i < strlen($s); $i++) {\n\t\tif ($s[$i] == $s[$i - 1] || $s[$i] ==\
    \ $s[$i - 2]) return false;\n\t}\n\treturn true;\n}\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $length = strlen($s);\n    $result = $length\
    \ > 2 ? true : false;\n    for ($i = 0; $i < $length; $i++) {\n        if ($i\
    \ + 2 < $length) {\n            if (substr($s, $i, 3) === substr($s, $i + 1, 3))\
    \ {\n                $result = false;\n                break;\n            }\n\
    \        }\n    }\n    return $result;\n}\necho is_happy('a') . PHP_EOL;\necho\
    \ is_happy('aa') . PHP_EOL;\necho is_happy('abcd') . PHP_EOL;\necho is_happy('aabb')\
    \ . PHP_EOL;\necho is_happy('adb') . PHP_EOL;\necho is_happy('xyy') . PHP_EOL;\n\
    function candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\n\n1\n1\n1\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4dyomjfn.php:45\n\
    Stack trace:\n#0 /tmp/tmp4dyomjfn.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp4dyomjfn.php\
    \ on line 45\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n\tif (strlen($s) < 3) {\n\t\treturn \"false\"\
    ;\n\t}\n\tfor ($i = 0; $i < strlen($s) - 2; $i++) {\n\t\tif ($s[$i] == $s[$i +\
    \ 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n\t\t\treturn \"false\"\
    ;\n\t\t}\n\t}\n\treturn \"true\";\n}\necho is_happy(\"a\") . \"\\n\";\necho is_happy(\"\
    aa\") . \"\\n\";\necho is_happy(\"abcd\") . \"\\n\";\necho is_happy(\"aabb\")\
    \ . \"\\n\";\necho is_happy(\"adb\") . \"\\n\";\necho is_happy(\"xyy\") . \"\\\
    n\";\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "false\nfalse\ntrue\nfalse\ntrue\nfalse\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp_1odfwrq.php:40\nStack trace:\n#0 /tmp/tmp_1odfwrq.php(50):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp_1odfwrq.php on line 40\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n\tif(strlen($s)<3)\n\t\treturn false;\n\tfor($i=0;$i<strlen($s)-2;$i++){\n\
    \t\tif($s[$i]==$s[$i+1]||$s[$i]==$s[$i+2]||$s[$i+1]==$s[$i+2])\n\t\t\treturn false;\n\
    \t}\n\treturn true;\n}\n\necho is_happy('abcd');\n\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    if (strlen($s) < 3) {\n        return false;\n\
    \    }\n    $s = str_split($s);\n    for ($i = 0; $i < count($s) - 2; $i++) {\n\
    \        if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i\
    \ + 2]) {\n            return false;\n        }\n    }\n    return true;\n}\n\
    function candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n  if (strlen($s) < 3) {\n    return false;\n\
    \  }\n  for ($i = 0; $i < strlen($s) - 2; $i++) {\n    if ($s[$i] == $s[$i + 1]\
    \ || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n\nvar_dump(is_happy('a'));\nvar_dump(is_happy('aa'));\n\
    var_dump(is_happy('abcd'));\nvar_dump(is_happy('aabb'));\nvar_dump(is_happy('adb'));\n\
    var_dump(is_happy('xyy'));\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'bool(false)

    bool(false)

    bool(true)

    bool(false)

    bool(true)

    bool(false)

    '
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $s = str_split($s);\n    $i = 0;\n    while\
    \ ($i < count($s) - 3) {\n        if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i\
    \ + 2] || $s[$i + 1] == $s[$i + 2]) {\n            return false;\n        }\n\
    \        $i++;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n\
    \    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphuq8z78q.php:35\n\
    Stack trace:\n#0 /tmp/tmphuq8z78q.php(45): test()\n#1 {main}\n  thrown in /tmp/tmphuq8z78q.php\
    \ on line 35\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n\t$arr = str_split($s);\n\tif (count($arr)\
    \ < 3) {\n\t\treturn false;\n\t} else {\n\t\tfor ($i = 0; $i < count($arr) - 2;\
    \ $i++) {\n\t\t\tif ($arr[$i] == $arr[$i + 1] || $arr[$i] == $arr[$i + 2] || $arr[$i\
    \ + 1] == $arr[$i + 2]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\
    \t}\n}\n\n$s = 'adb';\n$res = is_happy($s);\nvar_dump($res);\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'bool(true)

    '
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $s = str_split($s);\n    $c = count($s);\n\
    \    if ($c < 3) return false;\n    for ($i = 0; $i < $c - 2; $i++) {\n      \
    \  if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i + 2])\
    \ {\n            return false;\n        }\n    }\n    return true;\n}\n\n$tests\
    \ = [\n    'a' => false,\n    'aa' => false,\n    'abcd' => true,\n    'aabb'\
    \ => false,\n    'adb' => true,\n    'xyy' => false,\n];\n\nforeach ($tests as\
    \ $str => $expected) {\n    $result = is_happy($str);\n    if ($result !== $expected)\
    \ {\n        echo \"FAIL {$str} expected {$expected}, got {$result}\\n\";\n  \
    \  } else {\n        echo \"PASS {$str}\\n\";\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'PASS a

    PASS aa

    PASS abcd

    PASS aabb

    PASS adb

    PASS xyy

    '
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    if (strlen($s) < 3) {\n        return false;\n\
    \    }\n    $arr = str_split($s);\n    for ($i = 0; $i < count($arr) - 2; $i++)\
    \ {\n        if ($arr[$i] == $arr[$i + 1] && $arr[$i] == $arr[$i + 2]) {\n   \
    \         return false;\n        }\n    }\n    return true;\n}\necho is_happy(\"\
    aa\") ? \"true\" : \"false\";\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "false\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp88rgu92z.php:39\n\
    Stack trace:\n#0 /tmp/tmp88rgu92z.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp88rgu92z.php\
    \ on line 39\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n\t$s = str_split($s);\n\tfor ($i = 0; $i <\
    \ count($s); $i+=3) {\n\t\tif (count(array_count_values(array_slice($s, $i, 3)))\
    \ == 1) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwl6kb5wn.php:34\n\
    Stack trace:\n#0 /tmp/tmpwl6kb5wn.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpwl6kb5wn.php\
    \ on line 34\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n  $arr = str_split($s);\n  if (count($arr)\
    \ < 3) {\n    return false;\n  } else {\n    for ($i = 0; $i < count($arr) - 2;\
    \ $i++) {\n      if ($arr[$i] == $arr[$i + 1] || $arr[$i] == $arr[$i + 2] || $arr[$i\
    \ + 1] == $arr[$i + 2]) {\n        return false;\n      }\n    }\n    return true;\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $len = strlen($s);\n    if ($len < 3) {\n\
    \        return false;\n    }\n    $substr_set = array();\n    for ($i = 0; $i\
    \ < $len - 2; $i++) {\n        $substr = substr($s, $i, 3);\n        if (in_array($substr,\
    \ $substr_set)) {\n            return false;\n        }\n        $substr_set[]\
    \ = $substr;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n \
    \   return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp82ht1xj8.php:42\n\
    Stack trace:\n#0 /tmp/tmp82ht1xj8.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp82ht1xj8.php\
    \ on line 42\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    if(strlen($s) < 3) return false;\n    $len\
    \ = strlen($s);\n    for($i = 0; $i < $len; $i+=3) {\n        $sub = substr($s,\
    \ $i, 3);\n        if(strlen($sub) < 3) break;\n        if(strlen(unique_chars($sub))\
    \ != 3) return false;\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function unique_chars()\
    \ in /tmp/tmp_6h2cg0g.php:24\nStack trace:\n#0 /tmp/tmp_6h2cg0g.php(29): is_happy('abcd')\n\
    #1 /tmp/tmp_6h2cg0g.php(35): candidate('abcd')\n#2 /tmp/tmp_6h2cg0g.php(43): test()\n\
    #3 {main}\n  thrown in /tmp/tmp_6h2cg0g.php on line 24\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n\t$arr = str_split($s);\n\t$len = count($arr);\n\
    \tif ($len < 3) {\n\t\treturn false;\n\t} else {\n\t\tfor ($i = 0; $i < $len;\
    \ $i += 3) {\n\t\t\tif ($arr[$i] == $arr[$i + 1] || $arr[$i] == $arr[$i + 2] ||\
    \ $arr[$i + 1] == $arr[$i + 2]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\t\
    return true;\n\t}\n}\necho is_happy(\"a\") . \"\\n\";\necho is_happy(\"aa\") .\
    \ \"\\n\";\necho is_happy(\"abcd\") . \"\\n\";\necho is_happy(\"aabb\") . \"\\\
    n\";\necho is_happy(\"adb\") . \"\\n\";\necho is_happy(\"xyy\") . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\n\n\nWarning: Undefined array key 4 in /tmp/tmpnze73arp.php on line 25\n\
    \nWarning: Undefined array key 5 in /tmp/tmpnze73arp.php on line 25\n\nWarning:\
    \ Undefined array key 4 in /tmp/tmpnze73arp.php on line 25\n\nWarning: Undefined\
    \ array key 5 in /tmp/tmpnze73arp.php on line 25\n\n\n1\n\n\nWarning: Undefined\
    \ array key 4 in /tmp/tmpnze73arp.php on line 25\n\nWarning: Undefined array key\
    \ 5 in /tmp/tmpnze73arp.php on line 25\n\nWarning: Undefined array key 4 in /tmp/tmpnze73arp.php\
    \ on line 25\n\nWarning: Undefined array key 5 in /tmp/tmpnze73arp.php on line\
    \ 25\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnze73arp.php:45\n\
    Stack trace:\n#0 /tmp/tmpnze73arp.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpnze73arp.php\
    \ on line 45\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n  $isHappy = true;\n  if (strlen($s) < 3) {\n\
    \    $isHappy = false;\n  } else {\n    $sArray = str_split($s);\n    $sArrayLen\
    \ = count($sArray);\n    for ($i = 0; $i < $sArrayLen; $i += 3) {\n      if ($sArray[$i]\
    \ === $sArray[$i + 1] && $sArray[$i] === $sArray[$i + 2]) {\n        $isHappy\
    \ = false;\n        break;\n      }\n    }\n  }\n  return $isHappy;\n}\n\necho\
    \ is_happy('a') ? 'true' : 'false';\necho \"\\n\";\necho is_happy('aa') ? 'true'\
    \ : 'false';\necho \"\\n\";\necho is_happy('abcd') ? 'true' : 'false';\necho \"\
    \\n\";\necho is_happy('aabb') ? 'true' : 'false';\necho \"\\n\";\necho is_happy('adb')\
    \ ? 'true' : 'false';\necho \"\\n\";\necho is_happy('xyy') ? 'true' : 'false';\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "false\nfalse\n\nWarning: Undefined array key 4 in /tmp/tmpunvle3ps.php\
    \ on line 26\ntrue\n\nWarning: Undefined array key 4 in /tmp/tmpunvle3ps.php on\
    \ line 26\ntrue\ntrue\ntrue\n\nWarning: Undefined array key 4 in /tmp/tmpunvle3ps.php\
    \ on line 26\n\nWarning: Undefined array key 4 in /tmp/tmpunvle3ps.php on line\
    \ 26\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpunvle3ps.php:55\n\
    Stack trace:\n#0 /tmp/tmpunvle3ps.php(62): test()\n#1 {main}\n  thrown in /tmp/tmpunvle3ps.php\
    \ on line 55\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $isHappy = false;\n    if (strlen($s) >=\
    \ 3) {\n        $isHappy = true;\n        for ($i = 0; $i < strlen($s) - 2; $i++)\
    \ {\n            if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i + 1]\
    \ == $s[$i + 2]) {\n                $isHappy = false;\n                break;\n\
    \            }\n        }\n    }\n    return $isHappy;\n}\necho \"is_happy('a')\\\
    n\";\necho is_happy('a') . \"\\n\";\necho \"is_happy('aa')\\n\";\necho is_happy('aa')\
    \ . \"\\n\";\necho \"is_happy('abcd')\\n\";\necho is_happy('abcd') . \"\\n\";\n\
    echo \"is_happy('aabb')\\n\";\necho is_happy('aabb') . \"\\n\";\necho \"is_happy('adb')\\\
    n\";\necho is_happy('adb') . \"\\n\";\necho \"is_happy('xyy')\\n\";\necho is_happy('xyy')\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'is_happy(''a'')


    is_happy(''aa'')


    is_happy(''abcd'')

    1

    is_happy(''aabb'')


    is_happy(''adb'')

    1

    is_happy(''xyy'')


    '
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $happy = false;\n    if (strlen($s) < 3)\
    \ {\n        $happy = false;\n    } else {\n        for ($i = 0; $i < strlen($s)\
    \ - 2; $i++) {\n            if ($s[$i] != $s[$i + 1] && $s[$i] != $s[$i + 2] &&\
    \ $s[$i + 1] != $s[$i + 2]) {\n                $happy = true;\n            } else\
    \ {\n                $happy = false;\n                break;\n            }\n\
    \        }\n    }\n    return $happy;\n}\necho is_happy('a') ? 'true' : 'false';\n\
    echo \"<br>\";\necho is_happy('aa') ? 'true' : 'false';\necho \"<br>\";\necho\
    \ is_happy('abcd') ? 'true' : 'false';\necho \"<br>\";\necho is_happy('aabb')\
    \ ? 'true' : 'false';\necho \"<br>\";\necho is_happy('adb') ? 'true' : 'false';\n\
    echo \"<br>\";\necho is_happy('xyy') ? 'true' : 'false';\necho \"<br>\";\necho\
    \ is_happy('aaaaaaaaaaaaaaaaaaaaaaaaaa') ? 'true' : 'false';\necho \"<br>\";\n\
    echo is_happy('aaaaaaaaaaaaaaaaaaaaaaaaaaa') ? 'true' : 'false';\necho \"<br>\"\
    ;\necho is_happy('abcabcabcabc') ? 'true' : 'false';\necho \"<br>\";\necho is_happy('abcabcabcabcabc')\
    \ ? 'true' : 'false';\necho \"<br>\";\necho is_happy('abcxyzabcxyzabc') ? 'true'\
    \ : 'false';\necho \"<br>\";\necho is_happy('abcxyzabcxyzab') ? 'true' : 'false';\n\
    echo \"<br>\";\necho is_happy('abxyabxyabxyabxy') ? 'true' : 'false';\necho \"\
    <br>\";\necho is_happy('abxyabxyabxyabx') ? 'true' : 'false';\necho \"<br>\";\n\
    echo is_happy('ab\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected string content "ab" in /tmp/tmpsye5ivm8.php
    on line 62

    '
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n\t$length = strlen($s);\n\tif($length < 3)\
    \ return false;\n\t$arr = str_split($s);\n\tfor($i = 0; $i < $length; $i+=3) {\n\
    \t\tif($arr[$i] == $arr[$i+1] || $arr[$i] == $arr[$i+2] || $arr[$i+1] == $arr[$i+2])\
    \ {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\necho is_happy('a');\n\
    echo \"\\n\";\necho is_happy('aa');\necho \"\\n\";\necho is_happy('abcd');\necho\
    \ \"\\n\";\necho is_happy('aabb');\necho \"\\n\";\necho is_happy('adb');\necho\
    \ \"\\n\";\necho is_happy('xyy');\necho \"\\n\";\necho is_happy('xyzqr');\necho\
    \ \"\\n\";\necho is_happy('xyzqrz');\necho \"\\n\";\necho is_happy('xyzqrzy');\n\
    echo \"\\n\";\necho is_happy('xyzqrzyx');\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\n\n\nWarning: Undefined array key 4 in /tmp/tmp5yc5knet.php on line 23\n\
    \nWarning: Undefined array key 5 in /tmp/tmp5yc5knet.php on line 23\n\nWarning:\
    \ Undefined array key 4 in /tmp/tmp5yc5knet.php on line 23\n\nWarning: Undefined\
    \ array key 5 in /tmp/tmp5yc5knet.php on line 23\n\n\n1\n\n\nWarning: Undefined\
    \ array key 5 in /tmp/tmp5yc5knet.php on line 23\n\nWarning: Undefined array key\
    \ 5 in /tmp/tmp5yc5knet.php on line 23\n1\n1\n\nWarning: Undefined array key 7\
    \ in /tmp/tmp5yc5knet.php on line 23\n\nWarning: Undefined array key 8 in /tmp/tmp5yc5knet.php\
    \ on line 23\n\nWarning: Undefined array key 7 in /tmp/tmp5yc5knet.php on line\
    \ 23\n\nWarning: Undefined array key 8 in /tmp/tmp5yc5knet.php on line 23\n\n\n\
    Warning: Undefined array key 8 in /tmp/tmp5yc5knet.php on line 23\n\nWarning:\
    \ Undefined array key 8 in /tmp/tmp5yc5knet.php on line 23\n1\n\nWarning: Undefined\
    \ array key 4 in /tmp/tmp5yc5knet.php on line 23\n\nWarning: Undefined array key\
    \ 5 in /tmp/tmp5yc5knet.php on line 23\n\nWarning: Undefined array key 4 in /tmp/tmp5yc5knet.php\
    \ on line 23\n\nWarning: Undefined array key 5 in /tmp/tmp5yc5knet.php on line\
    \ 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5yc5knet.php:57\n\
    Stack trace:\n#0 /tmp/tmp5yc5knet.php(65): test()\n#1 {main}\n  thrown in /tmp/tmp5yc5knet.php\
    \ on line 57\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $isHappy = false;\n    $arr = [];\n   \
    \ $length = strlen($s);\n    for ($i = 0; $i < $length; $i++) {\n        $arr[]\
    \ = $s[$i];\n    }\n    for ($i = 0; $i < $length; $i++) {\n        if (count($arr)\
    \ >= 3) {\n            if ($arr[$i] != $arr[$i + 1] && $arr[$i] != $arr[$i + 2]\
    \ && $arr[$i + 1] != $arr[$i + 2]) {\n                $isHappy = true;\n     \
    \       } else {\n                $isHappy = false;\n                break;\n\
    \            }\n        }\n    }\n    return $isHappy;\n}\necho is_happy(\"adb\"\
    );\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 3 in /tmp/tmpzz3oe5hc.php on line 27\n\n\
    Warning: Undefined array key 3 in /tmp/tmpzz3oe5hc.php on line 27\n\nWarning:\
    \ Undefined array key 3 in /tmp/tmpzz3oe5hc.php on line 27\n\nWarning: Undefined\
    \ array key 4 in /tmp/tmpzz3oe5hc.php on line 27\n\nWarning: Undefined array key\
    \ 3 in /tmp/tmpzz3oe5hc.php on line 27\n\nWarning: Undefined array key 4 in /tmp/tmpzz3oe5hc.php\
    \ on line 27\n\nWarning: Undefined array key 4 in /tmp/tmpzz3oe5hc.php on line\
    \ 27\n\nWarning: Undefined array key 4 in /tmp/tmpzz3oe5hc.php on line 27\n\n\
    Warning: Undefined array key 4 in /tmp/tmpzz3oe5hc.php on line 27\n\nWarning:\
    \ Undefined array key 5 in /tmp/tmpzz3oe5hc.php on line 27\n\nWarning: Undefined\
    \ array key 4 in /tmp/tmpzz3oe5hc.php on line 27\n\nWarning: Undefined array key\
    \ 5 in /tmp/tmpzz3oe5hc.php on line 27\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpzz3oe5hc.php:45\nStack trace:\n#0 /tmp/tmpzz3oe5hc.php(53):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpzz3oe5hc.php on line 45\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n  return substr_count($s, $s[0]) < 3 &&\n \
    \   substr_count($s, $s[1]) < 3 &&\n    substr_count($s, $s[2]) < 3 &&\n    strlen($s)\
    \ >= 3;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Uninitialized string offset 1 in /tmp/tmp6ab61qjv.php on line\
    \ 20\n\nFatal error: Uncaught ValueError: substr_count(): Argument #2 ($needle)\
    \ cannot be empty in /tmp/tmp6ab61qjv.php:20\nStack trace:\n#0 /tmp/tmp6ab61qjv.php(20):\
    \ substr_count('a', '')\n#1 /tmp/tmp6ab61qjv.php(26): is_happy('a')\n#2 /tmp/tmp6ab61qjv.php(30):\
    \ candidate('a')\n#3 /tmp/tmp6ab61qjv.php(40): test()\n#4 {main}\n  thrown in\
    \ /tmp/tmp6ab61qjv.php on line 20\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    return strlen($s) >= 3 && preg_match(\"\
    /^(?:([a-z])(?!\\\\1))+$/i\", $s);\n}\n\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp66xqzb58.php:34\n\
    Stack trace:\n#0 /tmp/tmp66xqzb58.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp66xqzb58.php\
    \ on line 34\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n  if(strlen($s) < 3) return false;\n  for($i\
    \ = 2; $i < strlen($s); $i++) {\n    if($s[$i] == $s[$i-1] || $s[$i] == $s[$i-2]\
    \ || $s[$i-1] == $s[$i-2]) return false;\n  }\n  return true;\n}\necho is_happy('aabb')\
    \ ? 'true' : 'false';\necho \"\\n\";\necho is_happy('abcd') ? 'true' : 'false';\n\
    echo \"\\n\";\necho is_happy('adb') ? 'true' : 'false';\necho \"\\n\";\necho is_happy('xyy')\
    \ ? 'true' : 'false';\necho \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"a\")\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'false

    true

    true

    false

    '
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    return strlen($s) >= 3\n        && count(array_unique(str_split($s,\
    \ 3))) === 1;\n}\n\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgi_1uy4x.php:30\n\
    Stack trace:\n#0 /tmp/tmpgi_1uy4x.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpgi_1uy4x.php\
    \ on line 30\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $len = strlen($s);\n    $i = 0;\n    while\
    \ ($i + 3 <= $len) {\n        if ($s[$i] != $s[$i + 1] && $s[$i] != $s[$i + 2]\
    \ && $s[$i + 1] != $s[$i + 2]) {\n            $i += 3;\n        } else {\n   \
    \         return false;\n        }\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg9fdl889.php:35\n\
    Stack trace:\n#0 /tmp/tmpg9fdl889.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpg9fdl889.php\
    \ on line 35\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $a = str_split($s);\n    $cnt = count($a);\n\
    \    if ($cnt < 3) return false;\n    for ($i = 0; $i < $cnt - 2; $i++) {\n  \
    \      if ($a[$i] == $a[$i + 1] || $a[$i] == $a[$i + 2] || $a[$i + 1] == $a[$i\
    \ + 2]) return false;\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n  if (strlen($s) < 3) return false;\n  for\
    \ ($i = 2; $i < strlen($s); $i++) {\n    if ($s[$i - 2] == $s[$i - 1] && $s[$i\
    \ - 1] == $s[$i]) return false;\n  }\n  return true;\n}\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeycz4mch.php:33\n\
    Stack trace:\n#0 /tmp/tmpeycz4mch.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpeycz4mch.php\
    \ on line 33\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $consecutive = 3;\n    $s = str_split($s);\n\
    \    $count = count($s);\n    if ($count >= $consecutive) {\n        for ($i =\
    \ 0; $i < $count; $i++) {\n            $set = array_slice($s, $i, $consecutive);\n\
    \            if ($set == array_unique($set)) {\n                return true;\n\
    \            }\n        }\n    }\n    return false;\n}\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptib3a2v5.php:40\n\
    Stack trace:\n#0 /tmp/tmptib3a2v5.php(47): test()\n#1 {main}\n  thrown in /tmp/tmptib3a2v5.php\
    \ on line 40\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    if (strlen($s) < 3) {\n        return false;\n\
    \    }\n    $len = strlen($s);\n    for ($i = 0; $i < $len - 2; $i++) {\n    \
    \    if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i +\
    \ 2]) {\n            return false;\n        }\n    }\n    return true;\n}\nprint_r(is_happy(\"\
    a\"));\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n  // Write your code here\n  // To print results\
    \ to the standard output you can use print\n  // Example: print \"Hello world!\"\
    ;\n  $len = strlen($s);\n  if ($len < 3) return false;\n  if ($len == 3) return\
    \ ($s[0] != $s[1] && $s[1] != $s[2] && $s[0] != $s[2]);\n  $curr_str = $s[0].$s[1].$s[2];\n\
    \  for ($i = 1; $i < $len - 2; $i++) {\n    if ($curr_str[0] == $curr_str[1] ||\
    \ $curr_str[1] == $curr_str[2] || $curr_str[0] == $curr_str[2]) return false;\n\
    \    $curr_str = $curr_str[1].$curr_str[2].$s[$i + 2];\n  }\n  return ($curr_str[0]\
    \ != $curr_str[1] && $curr_str[1] != $curr_str[2] && $curr_str[0] != $curr_str[2]);\n\
    }\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $n = strlen($s);\n    if ($n < 3) return\
    \ false;\n    $i = 0;\n    while ($i < $n) {\n        if ($s[$i] == $s[$i + 1]\
    \ && $s[$i] == $s[$i + 2]) return false;\n        $i++;\n    }\n    return true;\n\
    }\n\n$tests = [\n    ['a', false],\n    ['aa', false],\n    ['abcd', true],\n\
    \    ['aabb', false],\n    ['adb', true],\n    ['xyy', false],\n];\n\nforeach\
    \ ($tests as $test) {\n    $s = $test[0];\n    $result = is_happy($s);\n    $ok\
    \ = $result == $test[1];\n    if ($ok) {\n        echo \"OK\\n\";\n    } else\
    \ {\n        echo \"FAIL\\n\";\n        echo \"input: {$s}\\n\";\n        echo\
    \ \"expected: {$test[1]}\\n\";\n        echo \"got: {$result}\\n\";\n    }\n}\n\
    function candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "OK\nOK\n\nWarning: Uninitialized string offset 4 in /tmp/tmpfk2t6j1d.php\
    \ on line 23\nOK\n\nWarning: Uninitialized string offset 4 in /tmp/tmpfk2t6j1d.php\
    \ on line 23\n\nWarning: Uninitialized string offset 4 in /tmp/tmpfk2t6j1d.php\
    \ on line 23\nFAIL\ninput: aabb\nexpected: \ngot: 1\n\nWarning: Uninitialized\
    \ string offset 3 in /tmp/tmpfk2t6j1d.php on line 23\nOK\n\nWarning: Uninitialized\
    \ string offset 3 in /tmp/tmpfk2t6j1d.php on line 23\n\nWarning: Uninitialized\
    \ string offset 3 in /tmp/tmpfk2t6j1d.php on line 23\nFAIL\ninput: xyy\nexpected:\
    \ \ngot: 1\n\nWarning: Uninitialized string offset 4 in /tmp/tmpfk2t6j1d.php on\
    \ line 23\n\nWarning: Uninitialized string offset 4 in /tmp/tmpfk2t6j1d.php on\
    \ line 23\n\nWarning: Uninitialized string offset 4 in /tmp/tmpfk2t6j1d.php on\
    \ line 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfk2t6j1d.php:59\n\
    Stack trace:\n#0 /tmp/tmpfk2t6j1d.php(66): test()\n#1 {main}\n  thrown in /tmp/tmpfk2t6j1d.php\
    \ on line 59\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n  // Write your code here\n  // To print results\
    \ to the standard output you can use print\n  // Example: print \"Hello world!\"\
    ;\n  $count = strlen($s);\n  if($count < 3) {\n    return false;\n  }\n  if($count\
    \ == 3) {\n    if($s[0] != $s[1] && $s[1] != $s[2] && $s[0] != $s[2]) {\n    \
    \  return true;\n    }\n    return false;\n  }\n  if($count == 4) {\n    if($s[0]\
    \ != $s[1] && $s[1] != $s[2] && $s[0] != $s[2] && $s[1] != $s[3] && $s[2] != $s[3]\
    \ && $s[0] != $s[3]) {\n      return true;\n    }\n    return false;\n  }\n  if($count\
    \ == 5) {\n    if($s[0] != $s[1] && $s[1] != $s[2] && $s[0] != $s[2] && $s[1]\
    \ != $s[3] && $s[2] != $s[3] && $s[0] != $s[3] && $s[1] != $s[4] && $s[2] != $s[4]\
    \ && $s[0] != $s[4] && $s[3] != $s[4]) {\n      return true;\n    }\n    return\
    \ false;\n  }\n  $count = $count - 2;\n  for($i = 0; $i < $count; $i++) {\n  \
    \  if($s[$i] == $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i + 2])\
    \ {\n      return false;\n    }\n  }\n  return true;\n}\necho(is_happy('abc'));\n\
    echo(is_happy('xzy'));\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n\n}\n\n$tests = [\n    [\n        'input' =>\
    \ ['a'],\n        'expected' => false\n    ],\n    [\n        'input' => ['aa'],\n\
    \        'expected' => false\n    ],\n    [\n        'input' => ['abcd'],\n  \
    \      'expected' => true\n    ],\n    [\n        'input' => ['aabb'],\n     \
    \   'expected' => false\n    ],\n    [\n        'input' => ['adb'],\n        'expected'\
    \ => true\n    ],\n    [\n        'input' => ['xyy'],\n        'expected' => false\n\
    \    ],\n];\n\nforeach ($tests as $test) {\n    $input = $test['input'];\n   \
    \ $expected = $test['expected'];\n    $result = is_happy($input);\n    if ($result\
    \ === $expected) {\n        echo 'PASS';\n    } else {\n        echo 'FAIL';\n\
    \    }\n    echo \"\\n\";\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "FAIL\nFAIL\nFAIL\nFAIL\nFAIL\nFAIL\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpfonpz187.php:65\nStack trace:\n#0 /tmp/tmpfonpz187.php(75):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpfonpz187.php on line 65\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $s = str_split($s);\n    $count = count($s);\n\
    \    if ($count > 2) {\n        for ($i = 0; $i < $count - 2; $i++) {\n      \
    \      if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i\
    \ + 2]) {\n                return 'false';\n            }\n        }\n       \
    \ return 'true';\n    } else {\n        return 'false';\n    }\n}\n\necho is_happy('abcd')\
    \ . \"\\n\";\necho is_happy('xyy') . \"\\n\";\necho is_happy('aabb') . \"\\n\"\
    ;\necho is_happy('adb') . \"\\n\";\necho is_happy('aa') . \"\\n\";\necho is_happy('a')\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "true\nfalse\nfalse\ntrue\nfalse\nfalse\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmppbwlkgxk.php:44\nStack trace:\n#0 /tmp/tmppbwlkgxk.php(54):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmppbwlkgxk.php on line 44\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n  if (strlen($s) < 3) {\n    return false;\n\
    \  }\n  for ($i = 0; $i < strlen($s) - 2; $i += 1) {\n    if ($s[$i] === $s[$i\
    \ + 1] || $s[$i] === $s[$i + 2] || $s[$i + 1] === $s[$i + 2]) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\n\necho is_happy('abcde');\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n  $array = str_split($s);\n  if (count($array)\
    \ < 3) {\n    return false;\n  }\n  for ($i = 0; $i < count($array) - 2; $i++)\
    \ {\n    if ($array[$i] == $array[$i + 1] && $array[$i] == $array[$i + 2]) {\n\
    \      return false;\n    }\n  }\n  return true;\n}\necho is_happy('aa');\nfunction\
    \ candidate(...$args) {\n    return is_happy(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2jr4xlyd.php:39\n\
    Stack trace:\n#0 /tmp/tmp2jr4xlyd.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp2jr4xlyd.php\
    \ on line 39\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $str_len = strlen($s);\n    $str_to_array\
    \ = str_split($s);\n    $three_cons_chars = array();\n    if ($str_len < 3) {\n\
    \        return false;\n    } else {\n        for ($i = 0; $i < $str_len - 2;\
    \ $i++) {\n            $s = $str_to_array[$i] . $str_to_array[$i + 1] . $str_to_array[$i\
    \ + 2];\n            array_push($three_cons_chars, $s);\n        }\n        if\
    \ (count(array_unique($three_cons_chars)) === count($three_cons_chars)) {\n  \
    \          return true;\n        } else {\n            return false;\n       \
    \ }\n    }\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_9d5s0fx.php:44\n\
    Stack trace:\n#0 /tmp/tmp_9d5s0fx.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp_9d5s0fx.php\
    \ on line 44\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    $arr = str_split($s);\n    for ($i = 0;\
    \ $i < sizeof($arr) - 2; $i++) {\n        if ($arr[$i] == $arr[$i + 1] && $arr[$i]\
    \ == $arr[$i + 2]) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\nfunction candidate(...$args) {\n    return is_happy(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcd\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aabb\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"adb\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyy\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxpoi\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"iopaxioi\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg2i6lysx.php:32\n\
    Stack trace:\n#0 /tmp/tmpg2i6lysx.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpg2i6lysx.php\
    \ on line 32\n"
  timestamp: 1660028884
- exit_code: 255
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n    return (strlen($s) >= 3 and substr($s,\
    \ -3) != substr($s, -2, 1) . substr($s, -1));\n}\necho is_happy(\"adb\") ? \"\
    True\" : \"False\";\nfunction candidate(...$args) {\n    return is_happy(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"a\") !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"aa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"abcd\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aabb\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"adb\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"xyy\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxpoi\")\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"iopaxioi\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "True\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd660kwj4.php:30\n\
    Stack trace:\n#0 /tmp/tmpd660kwj4.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpd660kwj4.php\
    \ on line 30\n"
  timestamp: 1660028884
- exit_code: 0
  program: "<?php\n// You are given a string s.\n// Your task is to check if the string\
    \ is happhp or not.\n// A string is happhp if its length is at least 3 and every\
    \ 3 consecutive letters are distinct\n// For example:\n// >>> is_happy(a)\n//\
    \ false\n// >>> is_happy(aa)\n// false\n// >>> is_happy(abcd)\n// true\n// >>>\
    \ is_happy(aabb)\n// false\n// >>> is_happy(adb)\n// true\n// >>> is_happy(xyy)\n\
    // false\nfunction is_happy($s) {\n  $s = str_split($s);\n  if (count($s) >= 3)\
    \ {\n    for ($i = 0; $i < count($s) - 2; $i++) {\n      if ($s[$i] == $s[$i +\
    \ 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {\n        return false;\n\
    \      }\n    }\n    return true;\n  }\n  return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return is_happy(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    a\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aa\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcd\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aabb\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    adb\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyy\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxpoi\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    iopaxioi\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028884

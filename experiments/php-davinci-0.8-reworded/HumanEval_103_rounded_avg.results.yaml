language: php
name: HumanEval_103_rounded_avg
results:
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = $n;\n    for\
    \ ($i = $n + 1; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return '0b' . decbin($avg);\n}\necho rounded_avg(1, 5)\
    \ . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\
    \\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args) {\n\
    \    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0b11\n-1\n0b1111\n0b11011\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp8anft0j6.php:37\nStack trace:\n#0 /tmp/tmp8anft0j6.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp8anft0j6.php on line 37\n"
  timestamp: 1659823842
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n\tif ($n > $m) {\n\t\treturn -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i\
    \ <= $m; $i++) {\n\t\t$sum += $i;\n\t}\n\t$sum = $sum / ($m - $n + 1);\n\t$sum\
    \ = round($sum);\n\t$sum = decbin($sum);\n\treturn '0b' . $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc7llgsq2.php:36\n\
    Stack trace:\n#0 /tmp/tmpc7llgsq2.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpc7llgsq2.php\
    \ on line 36\n"
  timestamp: 1659823842
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    $sum = 0;\n    if ($n > $m) {\n        return -1;\n    }\n    while\
    \ ($n <= $m) {\n        $sum += $n;\n        $n++;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\necho rounded_avg(1, 5) . \"\\\
    n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\n\
    echo rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught DivisionByZeroError: Division by zero in /tmp/tmpamfc1t_1.php:24\n\
    Stack trace:\n#0 /tmp/tmpamfc1t_1.php(27): rounded_avg(6, 5)\n#1 {main}\n  thrown\
    \ in /tmp/tmpamfc1t_1.php on line 24\n"
  timestamp: 1659823842
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnxl2tyth.php:23\n\
    Stack trace:\n#0 /tmp/tmpnxl2tyth.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpnxl2tyth.php\
    \ on line 23\n"
  timestamp: 1659823842
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = array_sum(range($n,\
    \ $m));\n    $rounded = round($sum / ($m - $n + 1));\n    return \"0b\" . decbin($rounded);\n\
    }\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphq0tzg96.php:30\n\
    Stack trace:\n#0 /tmp/tmphq0tzg96.php(42): test()\n#1 {main}\n  thrown in /tmp/tmphq0tzg96.php\
    \ on line 30\n"
  timestamp: 1659823842
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) return -1;\n    $sum = 0;\n    for ($i = $n; $i <= $m;\
    \ $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n\
    \    return \"0b\" . decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\\n\";\necho\
    \ rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20,\
    \ 33) . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0b11\n-1\n0b1111\n0b11011\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpvszq8jzw.php:36\nStack trace:\n#0 /tmp/tmpvszq8jzw.php(48): test()\n\
    #1 {main}\n  thrown in /tmp/tmpvszq8jzw.php on line 36\n"
  timestamp: 1659823842
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n  if ($n > $m) return -1;\n  $avg = ($n + $m) / 2;\n  return decbin(round($avg));\n\
    }\necho rounded_avg(2, 3) . PHP_EOL;\necho rounded_avg(2, 2) . PHP_EOL;\necho\
    \ rounded_avg(1, 5) . PHP_EOL;\necho rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10,\
    \ 20) . PHP_EOL;\necho rounded_avg(20, 33) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n10\n11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpy_1zas6p.php:31\nStack trace:\n#0 /tmp/tmpy_1zas6p.php(45): test()\n\
    #1 {main}\n  thrown in /tmp/tmpy_1zas6p.php on line 31\n"
  timestamp: 1659823842
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    // If n is greater than m, return -1.\n    if ($n > $m) {\n     \
    \   return -1;\n    }\n    // Find the sum of all integers between n and m and\
    \ find the average.\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n    \
    \    $sum += $i;\n    }\n    $average = $sum / ($m - $n + 1);\n    // Round the\
    \ average to the nearest integer.\n    $average = round($average);\n    // Convert\
    \ that integer to binary.\n    $average = decbin($average);\n    // Return binary.\n\
    \    return \"0b$average\";\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp96cnedju.php:41\n\
    Stack trace:\n#0 /tmp/tmp96cnedju.php(53): test()\n#1 {main}\n  thrown in /tmp/tmp96cnedju.php\
    \ on line 41\n"
  timestamp: 1659823842
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $avg = floor(($n +\
    \ $m) / 2);\n    return decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\\n\";\n\
    echo rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20,\
    \ 33) . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11010\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpad9g_ppu.php:32\nStack trace:\n#0 /tmp/tmpad9g_ppu.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmpad9g_ppu.php on line 32\n"
  timestamp: 1659823842
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n  if ($n > $m) return -1;\n  $avg = round(($n + $m) / 2);\n  return '0b'\
    \ . decbin($avg);\n}\n\necho rounded_avg(1, 5) . PHP_EOL;\necho rounded_avg(7,\
    \ 5) . PHP_EOL;\necho rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20, 33)\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0b11\n-1\n0b1111\n0b11011\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmplri5zwu_.php:32\nStack trace:\n#0 /tmp/tmplri5zwu_.php(44): test()\n\
    #1 {main}\n  thrown in /tmp/tmplri5zwu_.php on line 32\n"
  timestamp: 1659823842
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n\tif ($n > $m) return -1;\n\t$average = ($n + $m) / 2;\n\t$rounded =\
    \ round($average);\n\t$binary = decbin($rounded);\n\treturn \"0b$binary\";\n}\n\
    \necho rounded_avg(1, 5), \"\\n\";\necho rounded_avg(7, 5), \"\\n\";\necho rounded_avg(10,\
    \ 20), \"\\n\";\necho rounded_avg(20, 33), \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0b11\n-1\n0b1111\n0b11011\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpax3xup2t.php:34\nStack trace:\n#0 /tmp/tmpax3xup2t.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmpax3xup2t.php on line 34\n"
  timestamp: 1659823842
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = $n;\n    for\
    \ ($i = $n + 1; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = round($sum\
    \ / ($m - $n + 1));\n    return decbin($avg);\n}\necho rounded_avg(1, 5) . PHP_EOL;\n\
    echo rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20,\
    \ 33) . PHP_EOL;\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp71j6tuvr.php:35\nStack trace:\n#0 /tmp/tmp71j6tuvr.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp71j6tuvr.php on line 35\n"
  timestamp: 1659823842
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n  if ($n > $m) {\n    return -1;\n  }\n  return decbin(round(($n + $m)\
    \ / 2));\n}\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\\
    n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpg614expz.php:31\nStack trace:\n#0 /tmp/tmpg614expz.php(45): test()\n\
    #1 {main}\n  thrown in /tmp/tmpg614expz.php on line 31\n"
  timestamp: 1659823842
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n\tif ($n > $m) return -1;\n\t$avg = round(($n + $m) / 2);\n\treturn \"\
    0b\" . decbin($avg);\n}\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0b11\n-1\n0b1111\n0b11011\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpq9ur29fc.php:31\nStack trace:\n#0 /tmp/tmpq9ur29fc.php(43): test()\n\
    #1 {main}\n  thrown in /tmp/tmpq9ur29fc.php on line 31\n"
  timestamp: 1659823842
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    } else {\n        $average\
    \ = ceil(($n + $m) / 2);\n        return \"0b\" . decbin($average);\n    }\n}\n\
    function candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzo5ja9xk.php:30\n\
    Stack trace:\n#0 /tmp/tmpzo5ja9xk.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpzo5ja9xk.php\
    \ on line 30\n"
  timestamp: 1659823842
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n  }\n\
    \  if ($n > $m) {\n    return -1;\n  }\n  return decbin(round($sum / ($m - $n\
    \ + 1)));\n}\n\necho rounded_avg(1, 5) . PHP_EOL;\necho rounded_avg(7, 5) . PHP_EOL;\n\
    echo rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20, 33) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpza2bz8a_.php:35\nStack trace:\n#0 /tmp/tmpza2bz8a_.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpza2bz8a_.php on line 35\n"
  timestamp: 1659823842
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    $avg = round(($n + $m) / 2);\n    return $n > $m ? -1 : decbin($avg);\n\
    }\necho rounded_avg(10, 20);\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1111\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj7z63t8j.php:25\n\
    Stack trace:\n#0 /tmp/tmpj7z63t8j.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpj7z63t8j.php\
    \ on line 25\n"
  timestamp: 1659823842
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) return -1;\n    $sum = $n;\n    $count = 1;\n    while\
    \ ($n != $m) {\n        $n++;\n        $sum += $n;\n        $count++;\n    }\n\
    \    $average = (int) ($sum / $count);\n    return \"0b\" . decbin($average);\n\
    }\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho\
    \ rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\necho rounded_avg(33,\
    \ 20) . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0b11\n-1\n0b1111\n0b11010\n-1\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpiccaa8oo.php:41\nStack trace:\n#0 /tmp/tmpiccaa8oo.php(51):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpiccaa8oo.php on line 41\n"
  timestamp: 1659823842
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for\
    \ ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $average = round($sum\
    \ / ($m - $n + 1));\n    return \"0b\" . decbin($average);\n}\necho rounded_avg(1,\
    \ 5) . PHP_EOL;\necho rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10, 20) .\
    \ PHP_EOL;\necho rounded_avg(20, 33) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0b11\n-1\n0b1111\n0b11011\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmps9b5fkse.php:37\nStack trace:\n#0 /tmp/tmps9b5fkse.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmps9b5fkse.php on line 37\n"
  timestamp: 1659823842
- exit_code: 255
  program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// >>> rounded_avg(1, 5)\n\
    // \"0b11\"\n// >>> rounded_avg(7, 5)\n// -1\n// >>> rounded_avg(10, 20)\n// \"\
    0b1111\"\n// >>> rounded_avg(20, 33)\n// \"0b11010\"\nfunction rounded_avg($n,\
    \ $m) {\n\tif ($n > $m) {\n\t\treturn -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i\
    \ <= $m; $i++) {\n\t\t$sum += $i;\n\t}\n\t$avg = round($sum / ($m - $n + 1));\n\
    \treturn '0b' . decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0b11\n-1\n0b1111\n0b11011\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmphnltkecy.php:38\nStack trace:\n#0 /tmp/tmphnltkecy.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmphnltkecy.php on line 38\n"
  timestamp: 1659823842

name: HumanEval_14_all_prefixes
language: php
prompt: "<?php\n// Return array of all prefixes from shortest to longest of the input\
  \ string\n// >>> all_prefixes(\"abc\")\n// array(\"a\", \"ab\", \"abc\")\nfunction\
  \ all_prefixes($string) {\n"
tests: "function candidate(...$args) {\n    return all_prefixes(...$args);\n}\n\n\
  function test(): void {\n    if (candidate(\"\") !== array()) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"asdfgh\") !== array(\"a\", \"as\", \"asd\"\
  , \"asdf\", \"asdfg\", \"asdfgh\")) { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(\"WWW\") !== array(\"W\", \"WW\", \"WWW\")) { throw new Exception(\"\
  Test failed!\"); }\n}\n\ntest();"
completions: ["    $prefixes = array();\n    for ($i = 0; $i < strlen($string); $i++)\
    \ {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return $prefixes;\n\
    }\n", "\t$len = strlen($string);\n\t$output = array();\n\tfor ($i = 1; $i <= $len;\
    \ $i++) {\n\t\t$output[] = substr($string, 0, $i);\n\t}\n\treturn $output;\n}\n",
  "    $prefixes = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n    \
    \    $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return $prefixes;\n\
    }\n", "    $result = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n\
    \        $result[] = substr($string, 0, $i + 1);\n    }\n    return $result;\n\
    }\n", "\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string); $i++) {\n\t\
    \t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n}\n", " \
    \   $p = array();\n    $string_length = strlen($string);\n    for ($i = 0; $i\
    \ < $string_length; $i++) {\n        $p[] = substr($string, 0, $i + 1);\n    }\n\
    \    return $p;\n}\n", "    $result = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $result[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $result;\n}\n", "    $prefixes = array();\n    for ($i = 0; $i < strlen($string);\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n", "    $prefixes = array();\n    $length = strlen($string);\n\
    \    for ($i = 0; $i < $length; $i++) {\n        $prefixes[] = substr($string,\
    \ 0, $i + 1);\n    }\n    return $prefixes;\n}\n", "    $result = array();\n \
    \   for ($i = 0; $i < strlen($string); $i++) {\n        $result[] = substr($string,\
    \ 0, $i + 1);\n    }\n    return $result;\n}\n", "    $prefixes = array();\n \
    \   $slen = strlen($string);\n    for ($i = 0; $i < $slen; $i++) {\n        $prefixes[]\
    \ = substr($string, 0, $i + 1);\n    }\n    return $prefixes;\n}\n", "    return\
    \ array_reduce(str_split($string), function($prefixes, $char) {\n        $prefixes[]\
    \ = end($prefixes) . $char;\n        return $prefixes;\n    }, array(\"\"));\n\
    }\n", "\t$result = array();\n\tfor ($i = 0; $i < strlen($string); $i++) {\n\t\t\
    $result[] = substr($string, 0, $i + 1);\n\t}\n\treturn $result;\n}\n", "    $length\
    \ = strlen($string);\n    $prefixes = array();\n    for ($i = 0; $i < $length;\
    \ $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return\
    \ $prefixes;\n}\n", "\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string);\
    \ $i++) {\n\t\t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n\
    }\n", "\t$prefixes = array();\n\tfor ($i = 0; $i < strlen($string); $i++) {\n\t\
    \t$prefixes[] = substr($string, 0, $i + 1);\n\t}\n\treturn $prefixes;\n}\n", " \
    \   $tokens = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n     \
    \   $tokens[] = substr($string, 0, $i + 1);\n    }\n    return $tokens;\n}", " \
    \   $result = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n     \
    \   $result[] = substr($string, 0, $i + 1);\n    }\n    return $result;\n}\n",
  "    $result = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n      \
    \  $result[] = substr($string, 0, $i + 1);\n    }\n    return $result;\n}\n",
  "    $prefixes = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n    \
    \    $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return $prefixes;\n\
    }\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

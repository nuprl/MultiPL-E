language: php
name: HumanEval_5_intersperse
results:
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if (count($numbers) < 2) {\n        return $numbers;\n  \
    \  }\n    $head = array_slice($numbers, 0, 1);\n    $tail = array_slice($numbers,\
    \ 1);\n    return array_merge($head, array($delimeter), intersperse($tail, $delimeter));\n\
    }\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), 7) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !==\
    \ array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823419
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  $result = array();\n  foreach($numbers as $number) {\n    $result[]\
    \ = $number;\n    $result[] = $delimeter;\n  }\n  // Remove the last $delimeter\n\
    \  array_pop($result);\n  return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823419
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  $result = array();\n  if (count($numbers) === 0) {\n    return\
    \ $result;\n  }\n  else {\n    $result[] = $numbers[0];\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n      $result[] = $delimeter;\n      $result[] = $numbers[$i];\n\
    \    }\n    return $result;\n  }\n}\n\nfunction candidate(...$args) {\n    return\
    \ intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823419
- exit_code: 255
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  if (count($numbers) == 0) {\n    return $numbers;\n  } else\
    \ {\n    $a = intersperse(array_slice($numbers, 1), $delimeter);\n    return array_merge(array($numbers[0]),\
    \ array($delimeter), $a);\n  }\n}\n\nfunction candidate(...$args) {\n    return\
    \ intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgp9hf9xp.php:22\n\
    Stack trace:\n#0 /tmp/tmpgp9hf9xp.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpgp9hf9xp.php\
    \ on line 22\n"
  timestamp: 1659823419
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  $result = array();\n  $count = count($numbers);\n  for ($i\
    \ = 0; $i < $count; $i++) {\n    array_push($result, $numbers[$i]);\n    if ($i\
    \ < $count - 1) {\n      array_push($result, $delimeter);\n    }\n  }\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823419
- exit_code: 255
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  $result = array();\n  foreach ($numbers as $n) {\n    $result[]\
    \ = $n;\n    $result[] = $delimeter;\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj7czjyki.php:22\n\
    Stack trace:\n#0 /tmp/tmpj7czjyki.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpj7czjyki.php\
    \ on line 22\n"
  timestamp: 1659823419
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  $new_numbers = array();\n  $i = 0;\n  foreach ($numbers as\
    \ $number) {\n    if ($i > 0) {\n      $new_numbers[] = $delimeter;\n    }\n \
    \   $new_numbers[] = $number;\n    $i++;\n  }\n  return $new_numbers;\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823419
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if (count($numbers) == 0)\n        return $numbers;\n   \
    \ $result = array($numbers[0]);\n    for ($i = 1; $i < count($numbers); $i++)\
    \ {\n        $result[] = $delimeter;\n        $result[] = $numbers[$i];\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823419
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if(count($numbers) == 0) {\n        return $numbers;\n  \
    \  } else {\n        $res = array();\n        $res[] = $numbers[0];\n        for($i\
    \ = 1; $i < count($numbers); $i++) {\n            $res[] = $delimeter;\n     \
    \       $res[] = $numbers[$i];\n        }\n        return $res;\n    }\n}\n\n\
    function candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823419
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  if (count($numbers) === 0) return array();\n  if (count($numbers)\
    \ === 1) return $numbers;\n  $return_array = array($numbers[0]);\n  for ($i =\
    \ 1; $i < count($numbers); $i++) {\n    array_push($return_array, $delimeter);\n\
    \    array_push($return_array, $numbers[$i]);\n  }\n  return $return_array;\n\
    }\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), 7) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !==\
    \ array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823419
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if (!is_array($numbers)) {\n        return NULL;\n    }\n\
    \    $result = array();\n    foreach ($numbers as $number) {\n        $result[]\
    \ = $number;\n        $result[] = $delimeter;\n    }\n    array_pop($result);\n\
    \    return $result;\n}\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823419
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $result = array();\n    $count = count($numbers);\n    for\
    \ ($i = 0; $i < $count; $i++) {\n        $result[] = $numbers[$i];\n        if\
    \ ($i < $count - 1) {\n            $result[] = $delimeter;\n        }\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823419
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  if(empty($numbers)) {\n    return $numbers;\n  } else {\n \
    \   $result = array();\n    $result[] = $numbers[0];\n    foreach(array_slice($numbers,\
    \ 1) as $n) {\n      $result[] = $delimeter;\n      $result[] = $n;\n    }\n \
    \   return $result;\n  }\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823419
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if (count($numbers) == 0) {\n        return $numbers;\n \
    \   } else {\n        $result = array();\n        $result[] = $numbers[0];\n \
    \       $numbers = array_slice($numbers, 1);\n        while (count($numbers) >\
    \ 0) {\n            $result[] = $delimeter;\n            $result[] = $numbers[0];\n\
    \            $numbers = array_slice($numbers, 1);\n        }\n        return $result;\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823419
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $result = array();\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        if ($i !== 0) {\n            $result[] = $delimeter;\n    \
    \    }\n        $result[] = $numbers[$i];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823419
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  $interspersed = array();\n  $i = 0;\n  while ($i < count($numbers))\
    \ {\n    array_push($interspersed, $numbers[$i]);\n    if ($i + 1 < count($numbers))\
    \ {\n      array_push($interspersed, $delimeter);\n    }\n    $i++;\n  }\n  return\
    \ $interspersed;\n}\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823419
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  $result = array();\n  foreach($numbers as $number) {\n    if\
    \ (!$result) {\n      $result[] = $number;\n    } else {\n      $result[] = $delimeter;\n\
    \      $result[] = $number;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823419
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $r = array();\n    $n = count($numbers);\n    for ($i = 0;\
    \ $i < $n; $i++) {\n        $r[] = $numbers[$i];\n        if ($i < $n - 1) {\n\
    \            $r[] = $delimeter;\n        }\n    }\n    return $r;\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823419
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  $result = array();\n  $i = 0;\n  foreach ($numbers as $number)\
    \ {\n    $result[] = $number;\n    if ($i < count($numbers) - 1) {\n      $result[]\
    \ = $delimeter;\n    }\n    $i++;\n  }\n  return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823419
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  $interspersed = array();\n  foreach ($numbers as $i => $num)\
    \ {\n    if ($i > 0) {\n      $interspersed[] = $delimeter;\n    }\n    $interspersed[]\
    \ = $num;\n  }\n  return $interspersed;\n}\nfunction candidate(...$args) {\n \
    \   return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823419
- exit_code: 255
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  $start = array_slice($numbers, 0, 1);\n  $tail = array_slice($numbers,\
    \ 1);\n  $interspersed = array_map(function($x) use ($delimeter) { return array($x,\
    \ $delimeter); }, $tail);\n  $flattened = array_reduce($interspersed, function($x,\
    \ $y) { return array_merge($x, $y); }, array());\n  return array_merge($start,\
    \ $flattened);\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa2138cfc.php:21\n\
    Stack trace:\n#0 /tmp/tmpa2138cfc.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpa2138cfc.php\
    \ on line 21\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    // STUB\n}\necho \"Intersperse:\\n\";\nvar_dump(intersperse(array(),\
    \ 4));\nvar_dump(intersperse(array(1, 2, 3), 4));\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Intersperse:\nNULL\nNULL\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpokkbbxyn.php:19\nStack trace:\n#0 /tmp/tmpokkbbxyn.php(24): test()\n\
    #1 {main}\n  thrown in /tmp/tmpokkbbxyn.php on line 19\n"
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $acc = array();\n    $n = count($numbers);\n    for ($i =\
    \ 0; $i < $n; $i++) {\n        $acc[] = $numbers[$i];\n        if ($i < $n - 1)\
    \ {\n            $acc[] = $delimeter;\n        }\n    }\n    return $acc;\n}\n\
    function candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  $result = array();\n  for ($i = 0; $i < count($numbers); $i++)\
    \ {\n    $result[] = $numbers[$i];\n    if ($i < count($numbers) - 1) {\n    \
    \  $result[] = $delimeter;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $result = array();\n    foreach($numbers as $number) {\n\
    \        $result[] = $number;\n        $result[] = $delimeter;\n    }\n    array_pop($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $result = array();\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        $result[] = $numbers[$i];\n        if ($i < count($numbers)\
    \ - 1) {\n            $result[] = $delimeter;\n        }\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if (!count($numbers)) {\n        return $numbers;\n    }\n\
    \n    $d = 0;\n    $result = array();\n    foreach ($numbers as $number) {\n \
    \       $result[] = $number;\n        if ($d++ > 0) {\n            $result[] =\
    \ $delimeter;\n        }\n    }\n    array_pop($result);\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8tcseyng.php:29\n\
    Stack trace:\n#0 /tmp/tmp8tcseyng.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp8tcseyng.php\
    \ on line 29\n"
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  $result = array();\n  for ($i = 0; $i < count($numbers); $i++)\
    \ {\n    $result[] = $numbers[$i];\n    if ($i < count($numbers) - 1) {\n    \
    \  $result[] = $delimeter;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  if (empty($numbers)) {\n    return $numbers;\n  } else {\n\
    \    $head = $numbers[0];\n    $tail = array_slice($numbers, 1);\n    $interspersed\
    \ = intersperse($tail, $delimeter);\n    return array_merge(array($head), array($delimeter),\
    \ $interspersed);\n  }\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw2hdfo25.php:24\n\
    Stack trace:\n#0 /tmp/tmpw2hdfo25.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpw2hdfo25.php\
    \ on line 24\n"
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if (empty($numbers)) {\n        return $numbers;\n    }\n\
    \n    $innersperse = function($numbers, $delimeter) use (&$innersperse) {\n  \
    \      $h = array_shift($numbers);\n        if (empty($numbers)) {\n         \
    \   return array($h);\n        } else {\n            return array_merge(array($h,\
    \ $delimeter), $innersperse($numbers, $delimeter));\n        }\n    };\n\n   \
    \ return $innersperse($numbers, $delimeter);\n}\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  if (empty($numbers)) return $numbers;\n  $result = array($numbers[0]);\n\
    \  for ($i = 1; $i < count($numbers); $i++) {\n    $result[] = $delimeter;\n \
    \   $result[] = $numbers[$i];\n  }\n  return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $result = array();\n    $i = 0;\n    foreach ($numbers as\
    \ $number) {\n        $result[] = $number;\n        if ($i < count($numbers) -\
    \ 1) {\n            $result[] = $delimeter;\n        }\n        $i++;\n    }\n\
    \    return $result;\n}\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  if (count($numbers) == 0) {\n    return $numbers;\n  }\n  else\
    \ {\n    $head = $numbers[0];\n    $tail = array_slice($numbers, 1);\n    $interspersed_tail\
    \ = intersperse($tail, $delimeter);\n    return array_merge(array($head), array($delimeter),\
    \ $interspersed_tail);\n  }\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp07_457e8.php:25\n\
    Stack trace:\n#0 /tmp/tmp07_457e8.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp07_457e8.php\
    \ on line 25\n"
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  if (count($numbers) == 0) {\n    return $numbers;\n  }\n  $result\
    \ = array();\n  $result[] = $numbers[0];\n  for ($i = 1; $i < count($numbers);\
    \ $i++) {\n    $result[] = $delimeter;\n    $result[] = $numbers[$i];\n  }\n \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $result = array();\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        $result[] = $numbers[$i];\n        if ($i < count($numbers)\
    \ - 1)\n            $result[] = $delimeter;\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if (count($numbers) <= 1) {\n        return $numbers;\n \
    \   }\n    $result = array();\n    $result[] = $numbers[0];\n    for ($i = 1;\
    \ $i < count($numbers); $i++) {\n        $result[] = $delimeter;\n        $result[]\
    \ = $numbers[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if (count($numbers) == 0) {\n        return $numbers;\n \
    \   }\n    return array_slice($numbers, 0, 1) + array($delimeter) + intersperse(array_slice($numbers,\
    \ 1), $delimeter);\n}\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp58uyynr2.php:19\n\
    Stack trace:\n#0 /tmp/tmp58uyynr2.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp58uyynr2.php\
    \ on line 19\n"
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if (empty($numbers)) {\n        return $numbers;\n    }\n\
    \    return array_reduce($numbers, function($acc, $x) use ($delimeter) {\n   \
    \     if (!empty($acc)) {\n            $acc[] = $delimeter;\n        }\n     \
    \   $acc[] = $x;\n        return $acc;\n    }, array());\n}\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  $res = array();\n  for ($i = 0; $i < count($numbers); $i++)\
    \ {\n    $res[] = $numbers[$i];\n    if ($i < count($numbers) - 1) {\n      $res[]\
    \ = $delimeter;\n    }\n  }\n  return $res;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $result = array();\n    $i = 0;\n    foreach ($numbers as\
    \ $number) {\n        if ($i > 0) {\n            $result[] = $delimeter;\n   \
    \     }\n        $result[] = $number;\n        $i++;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), 7) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !==\
    \ array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if (count($numbers) == 0) {\n        return $numbers;\n \
    \   } else {\n        $last = array_pop($numbers);\n        return array_merge(intersperse($numbers,\
    \ $delimeter), array($delimeter, $last));\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyk794vxr.php:21\n\
    Stack trace:\n#0 /tmp/tmpyk794vxr.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpyk794vxr.php\
    \ on line 21\n"
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if (empty($numbers)) {\n        return $numbers;\n    }\n\
    \    $result = array();\n    $array_length = count($numbers);\n    for ($i = 0;\
    \ $i < $array_length; $i++) {\n        $result[] = $numbers[$i];\n        if ($i\
    \ != $array_length - 1) {\n            $result[] = $delimeter;\n        }\n  \
    \  }\n    return $result;\n}\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  if (count($numbers) === 0) {\n    return $numbers;\n  }\n \
    \ $result = array();\n  for ($i = 0; $i < count($numbers) - 1; $i++) {\n    $result[]\
    \ = $numbers[$i];\n    $result[] = $delimeter;\n  }\n  $result[] = $numbers[count($numbers)\
    \ - 1];\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  // Note that array_reduce returns NULL if the input array is\
    \ empty\n  return array_reduce($numbers, function($acc, $value) use ($delimeter)\
    \ {\n    if (is_null($acc)) {\n      return array($value);\n    } else {\n   \
    \   return array_merge($acc, array($delimeter, $value));\n    }\n  });\n}\n\n\
    function candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk98ap2zm.php:23\n\
    Stack trace:\n#0 /tmp/tmpk98ap2zm.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpk98ap2zm.php\
    \ on line 23\n"
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $interspersed = array();\n    foreach ($numbers as $index\
    \ => $number) {\n        if ($index > 0) {\n            $interspersed[] = $delimeter;\n\
    \        }\n        $interspersed[] = $number;\n    }\n    return $interspersed;\n\
    }\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), 7) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !==\
    \ array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if (!is_array($numbers)) {\n        return array();\n   \
    \ }\n\n    $result = array();\n    $len = count($numbers);\n    for ($i = 0; $i\
    \ < $len; $i++) {\n        $result[] = $numbers[$i];\n        if ($i < $len -\
    \ 1) {\n            $result[] = $delimeter;\n        }\n    }\n\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $result = array();\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        if ($i != 0) {\n            $result[] = $delimeter;\n     \
    \   }\n        $result[] = $numbers[$i];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if (!is_array($numbers)) {\n        return $numbers;\n  \
    \  }\n    $result = array();\n    foreach ($numbers as $number) {\n        $result[]\
    \ = $number;\n        $result[] = $delimeter;\n    }\n    array_pop($result);\
    \ // delete the last delimeter\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  if (empty($numbers)) {\n    return $numbers;\n  }\n  $result\
    \ = array($numbers[0]);\n  foreach (array_slice($numbers, 1) as $number) {\n \
    \   $result[] = $delimeter;\n    $result[] = $number;\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), 7) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !==\
    \ array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if (count($numbers) < 2) {\n        return $numbers;\n  \
    \  }\n    $a = array();\n    $len = count($numbers);\n    $a[] = $numbers[0];\n\
    \    for ($i = 1; $i < $len; $i++) {\n        $a[] = $delimeter;\n        $a[]\
    \ = $numbers[$i];\n    }\n    return $a;\n}\n\nfunction candidate(...$args) {\n\
    \    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  if (count($numbers) == 0) return $numbers;\n  $result = array();\n\
    \  for ($i = 0; $i < count($numbers) - 1; $i++) {\n    $result[] = $numbers[$i];\n\
    \    $result[] = $delimeter;\n  }\n  $result[] = $numbers[count($numbers) - 1];\n\
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if (count($numbers) == 0) {\n        return $numbers;\n \
    \   } else {\n        $first = array_slice($numbers, 0, 1);\n        $rest = array_slice($numbers,\
    \ 1);\n        return array_merge($first, array($delimeter), intersperse($rest,\
    \ $delimeter));\n    }\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvl7q0801.php:23\n\
    Stack trace:\n#0 /tmp/tmpvl7q0801.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpvl7q0801.php\
    \ on line 23\n"
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if (count($numbers) == 0) {\n        return $numbers;\n \
    \   }\n    $result = array();\n    $result[] = $numbers[0];\n    for ($i = 1;\
    \ $i < count($numbers); $i++) {\n        $result[] = $delimeter;\n        $result[]\
    \ = $numbers[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if (!$numbers) {\n        return array();\n    }\n\n    $interspersed\
    \ = array();\n    $numbersCount = count($numbers);\n    for ($i = 0; $i < $numbersCount;\
    \ $i++) {\n        $element = $numbers[$i];\n        if ($i) {\n            $interspersed[]\
    \ = $delimeter;\n        }\n        $interspersed[] = $element;\n    }\n\n   \
    \ return $interspersed;\n}\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if (!is_array($numbers)) {\n        throw new Exception(\"\
    Argument 'numbers' must be an array\");\n    }\n    $numbers = array_values($numbers);\n\
    \    if (!is_int($delimeter)) {\n        throw new Exception(\"Argument 'delimeter'\
    \ must be an integer\");\n    }\n    $result = array();\n    for ($i = 0; $i <\
    \ count($numbers); $i++) {\n        $result[] = $numbers[$i];\n        if ($i\
    \ < count($numbers) - 1) {\n            $result[] = $delimeter;\n        }\n \
    \   }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  if (count($numbers) <= 1) {\n    return $numbers;\n  }\n  return\
    \ array_merge(array_slice($numbers, 0, 1), array($delimeter), intersperse(array_slice($numbers,\
    \ 1), $delimeter));\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    // Your code here\n    if (empty($numbers)) {\n        return\
    \ array();\n    }\n    return array_reduce($numbers, function($carry, $item) use\
    \ ($delimeter) {\n        return array_merge($carry, array($item, $delimeter));\n\
    \    }, array());\n}\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpre5t51lh.php:22\n\
    Stack trace:\n#0 /tmp/tmpre5t51lh.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpre5t51lh.php\
    \ on line 22\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $p = array_shift($numbers);\n    if (empty($numbers)) {\n\
    \        return array($p);\n    }\n    $f = function($numbers, $p) use ($delimeter,\
    \ &$f) {\n        $q = array_shift($numbers);\n        if (empty($numbers)) {\n\
    \            return array($p, $q);\n        }\n        return array_merge(array($p,\
    \ $delimeter), $f($numbers, $q));\n    };\n    return $f($numbers, $p);\n}\n\n\
    function candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt7owzkqi.php:27\n\
    Stack trace:\n#0 /tmp/tmpt7owzkqi.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpt7owzkqi.php\
    \ on line 27\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if (empty($numbers)) {\n        return $numbers;\n    }\n\
    \n    $head = array_shift($numbers);\n    $tail = intersperse($numbers, $delimeter);\n\
    \    array_unshift($tail, $head);\n    return array_merge($tail, array_fill(0,\
    \ count($tail) - 1, $delimeter));\n}\n\nfunction candidate(...$args) {\n    return\
    \ intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp59nn5zt_.php:24\n\
    Stack trace:\n#0 /tmp/tmp59nn5zt_.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp59nn5zt_.php\
    \ on line 24\n"
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if(count($numbers) == 0) {\n        return $numbers;\n  \
    \  }\n    $result = array();\n    foreach($numbers as $value) {\n        $result[]\
    \ = $value;\n        $result[] = $delimeter;\n    }\n    array_pop($result);\n\
    \    return $result;\n}\n\necho \"first result:<br>\";\nprint_r(intersperse(array(),\
    \ 4));\necho \"<br>\";\necho \"second result:<br>\";\nprint_r(intersperse(array(1,\
    \ 2, 3), 4));\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "first result:<br>Array\n(\n)\n<br>second result:<br>Array\n(\n    [0] =>\
    \ 1\n    [1] => 4\n    [2] => 2\n    [3] => 4\n    [4] => 3\n)\n"
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if (count($numbers) == 0) {\n        return $numbers;\n \
    \   }\n    else if (count($numbers) == 1) {\n        return $numbers;\n    }\n\
    \    else {\n        return array_merge(array_slice($numbers, 0, 1), array($delimeter),\
    \ intersperse(array_slice($numbers, 1), $delimeter));\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if (empty($numbers)) {\n        return $numbers;\n    }\n\
    \    $result = array($numbers[0]);\n    for ($i = 1; $i < count($numbers); $i++)\
    \ {\n        $result[] = $delimeter;\n        $result[] = $numbers[$i];\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  $result = array();\n  for ($i = 0; $i < count($numbers); $i++)\
    \ {\n    $result[] = $numbers[$i];\n    if ($i != count($numbers) - 1) {\n   \
    \   $result[] = $delimeter;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  if (count($numbers) === 0) {\n    return $numbers;\n  }\n \
    \ $result = array();\n  foreach($numbers as $number) {\n    $result[] = $number;\n\
    \    $result[] = $delimeter;\n  }\n  array_pop($result); // Pop the last element\
    \ which is always delimeter\n  return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  if (empty($numbers)) {\n    return $numbers;\n  }\n  $result\
    \ = array();\n  $first = array_shift($numbers);\n  $result[] = $first;\n  foreach\
    \ ($numbers as $number) {\n    $result[] = $delimeter;\n    $result[] = $number;\n\
    \  }\n  return $result;\n}\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $result = array();\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        if ($i > 0) {\n            $result[] = $delimeter;\n      \
    \  }\n        $result[] = $numbers[$i];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  if (count($numbers) < 2) {\n    return $numbers;\n  }\n  $results\
    \ = array($numbers[0]);\n  foreach (array_slice($numbers, 1) as $n) {\n    $results[]\
    \ = $delimeter;\n    $results[] = $n;\n  }\n  return $results;\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $result = array();\n    foreach ($numbers as $i => $number)\
    \ {\n        if ($i > 0) {\n            $result[] = $delimeter;\n        }\n \
    \       $result[] = $number;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $result = array();\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        $result[] = $numbers[$i];\n        if ($i < count($numbers)\
    \ - 1) {\n            $result[] = $delimeter;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), 7) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !==\
    \ array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  $numbers_interspersed = array();\n  foreach ($numbers as $key\
    \ => $number) {\n    if ($key === 0) {\n      $numbers_interspersed[] = $number;\n\
    \    } else {\n      $numbers_interspersed[] = $delimeter;\n      $numbers_interspersed[]\
    \ = $number;\n    }\n  }\n  return $numbers_interspersed;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $result = array();\n    $current = 0;\n    while ($current\
    \ < count($numbers)) {\n        $result[] = $numbers[$current];\n        $current++;\n\
    \        if ($current < count($numbers)) {\n            $result[] = $delimeter;\n\
    \        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $result = array();\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        $result[] = $numbers[$i];\n        if ($i < count($numbers)\
    \ - 1) {\n            $result[] = $delimeter;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), 7) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !==\
    \ array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if (empty($numbers)) return $numbers;\n    $result = array($numbers[0]);\n\
    \    foreach ($numbers as $n) {\n        $result[] = $delimeter;\n        $result[]\
    \ = $n;\n    }\n    array_pop($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1bi6vzwg.php:24\n\
    Stack trace:\n#0 /tmp/tmp1bi6vzwg.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp1bi6vzwg.php\
    \ on line 24\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if (empty($numbers)) {\n        return $numbers;\n    }\n\
    \    return implode($delimeter, $numbers);\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwlf6cu4d.php:20\n\
    Stack trace:\n#0 /tmp/tmpwlf6cu4d.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpwlf6cu4d.php\
    \ on line 20\n"
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  if(!is_array($numbers))\n    return null;\n  elseif(count($numbers)\
    \ == 0)\n    return array();\n  elseif(count($numbers) == 1)\n    return $numbers;\n\
    \  else {\n    return array_merge(array($numbers[0]), array($delimeter), intersperse(array_slice($numbers,\
    \ 1), $delimeter));\n  }\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if (!is_array($numbers)) {\n        throw new Exception('Array\
    \ expected in the first argument.');\n    }\n    if (count($numbers) < 2) {\n\
    \        return $numbers;\n    }\n    $result = array($numbers[0]);\n    for ($i\
    \ = 1; $i < count($numbers); $i++) {\n        $result[] = $delimeter;\n      \
    \  $result[] = $numbers[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $result = array();\n    foreach ($numbers as $n) {\n    \
    \    if (!empty($result)) {\n            $result[] = $delimeter;\n        }\n\
    \        $result[] = $n;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if (empty($numbers)) return $numbers;\n    $result = array($numbers[0]);\n\
    \    $count = count($numbers);\n    for ($i = 1; $i < $count; $i++) {\n      \
    \  $result[] = $delimeter;\n        $result[] = $numbers[$i];\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if (count($numbers) < 2)\n        return $numbers;\n    return\
    \ array_reduce($numbers, function($acc, $x) use ($delimeter) {\n        if (!empty($acc))\n\
    \            $acc[] = $delimeter;\n        $acc[] = $x;\n        return $acc;\n\
    \    }, array());\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  if (empty($numbers)) {\n    return $numbers;\n  }\n  $ret =\
    \ array($numbers[0]);\n  foreach (array_slice($numbers, 1) as $number) {\n   \
    \ $ret[] = $delimeter;\n    $ret[] = $number;\n  }\n  return $ret;\n}\n\n$numbers\
    \ = array();\nassert(intersperse($numbers, 4) == $numbers);\n\n$numbers = array(1,\
    \ 2, 3);\nassert(intersperse($numbers, 4) == array(1, 4, 2, 4, 3));\n\n$numbers\
    \ = array(1, 3, 5, 7, 9);\nassert(intersperse($numbers, 4) == array(1, 4, 3, 4,\
    \ 5, 4, 7, 4, 9));\n\necho \"Test passed!\\n\";\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'Test passed!

    '
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  if (sizeof($numbers) == 0) {\n    return $numbers;\n  }\n \
    \ $result = array($numbers[0]);\n  foreach ($numbers as $n) {\n    if ($n !==\
    \ $numbers[0]) {\n      $result[] = $delimeter;\n      $result[] = $n;\n    }\n\
    \  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp66sqx9r4.php:28\n\
    Stack trace:\n#0 /tmp/tmp66sqx9r4.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp66sqx9r4.php\
    \ on line 28\n"
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $return = array();\n    if (count($numbers) == 0) {\n   \
    \     return $return;\n    }\n    $return[] = $numbers[0];\n    foreach (array_slice($numbers,\
    \ 1) as $number) {\n        $return[] = $delimeter;\n        $return[] = $number;\n\
    \    }\n    return $return;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $result = array();\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        if ($i != 0) {\n            $result[] = $delimeter;\n     \
    \   }\n        $result[] = $numbers[$i];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if (count($numbers) < 2) {\n        return $numbers;\n  \
    \  }\n    $result = [];\n    for ($i = 0; $i < count($numbers) - 1; $i++) {\n\
    \        $result[] = $numbers[$i];\n        $result[] = $delimeter;\n    }\n \
    \   $result[] = $numbers[count($numbers) - 1];\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if (empty($numbers)) {\n        return $numbers;\n    }\n\
    \    $result = array();\n    $last = array_pop($numbers);\n    foreach ($numbers\
    \ as $number) {\n        $result[] = $number;\n        $result[] = $delimeter;\n\
    \    }\n    $result[] = $last;\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $ret = array();\n    for ($i = 0; $i < count($numbers); $i++)\
    \ {\n        $ret[] = $numbers[$i];\n        if ($i < count($numbers) - 1) {\n\
    \            $ret[] = $delimeter;\n        }\n    }\n    return $ret;\n}\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  $interspersed = array();\n  $len = count($numbers);\n  for\
    \ ($i = 0; $i < $len; $i++) {\n    array_push($interspersed, $numbers[$i]);\n\
    \    if ($i + 1 < $len)\n      array_push($interspersed, $delimeter);\n  }\n \
    \ return $interspersed;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if (empty($numbers)) {\n        return $numbers;\n    }\n\
    \    $result = array();\n    $i = 0;\n    $len = count($numbers);\n    while ($i\
    \ < $len) {\n        $result[] = $numbers[$i];\n        if ($i < $len - 1) {\n\
    \            $result[] = $delimeter;\n        }\n        $i++;\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  // I can't see how to make this work in a one-liner (no `reduce'\
    \ function in php).\n  $new_numbers = array();\n  foreach ($numbers as $key =>\
    \ $number) {\n    $new_numbers[] = $number;\n    if ($key < count($numbers) -\
    \ 1) {\n      $new_numbers[] = $delimeter;\n    }\n  }\n  return $new_numbers;\n\
    }\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), 7) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !==\
    \ array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if (count($numbers) == 0) {\n        return $numbers;\n \
    \   } else if (count($numbers) == 1) {\n        return $numbers;\n    } else {\n\
    \        $copy = $numbers;\n        array_splice($copy, 1, 0, $delimeter);\n \
    \       return array_merge(intersperse(array_slice($numbers, 1), $delimeter),\
    \ array_slice($copy, 0, 2));\n    }\n}\n\nfunction candidate(...$args) {\n   \
    \ return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7x12izor.php:25\n\
    Stack trace:\n#0 /tmp/tmp7x12izor.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp7x12izor.php\
    \ on line 25\n"
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $out = array();\n    for ($i = 0; $i < count($numbers); $i++)\
    \ {\n        $out[] = $numbers[$i];\n        if ($i < count($numbers) - 1)\n \
    \           $out[] = $delimeter;\n    }\n    return $out;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if(count($numbers) > 0) {\n        $newNumbers = [$numbers[0]];\n\
    \        for($i = 1; $i < count($numbers); $i++) {\n            $newNumbers[]\
    \ = $delimeter;\n            $newNumbers[] = $numbers[$i];\n        }\n      \
    \  return $newNumbers;\n    } else {\n        return array();\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $result = array();\n    foreach ($numbers as $i => $number)\
    \ {\n        if ($i == 0) {\n            $result[] = $number;\n        } else\
    \ {\n            $result[] = $delimeter;\n            $result[] = $number;\n \
    \       }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  $result = array();\n  foreach ($numbers as $index => $number)\
    \ {\n    if ($index > 0) {\n      $result[] = $delimeter;\n    }\n    $result[]\
    \ = $number;\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n  \
    \  return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  $result = array();\n  $len = count($numbers);\n  for ($i =\
    \ 0; $i < $len; $i++) {\n    $result[] = $numbers[$i];\n    if ($i < $len - 1)\
    \ {\n      $result[] = $delimeter;\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if (count($numbers) < 2) {\n        return $numbers;\n  \
    \  }\n    $result = array();\n    foreach ($numbers as $number) {\n        $result[]\
    \ = $number;\n        $result[] = $delimeter;\n    }\n    // Remove last element\n\
    \    array_pop($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  if (empty($numbers)) {\n    return $numbers;\n  }\n  $result\
    \ = array($numbers[0]);\n  for ($i = 1; $i < count($numbers); $i++) {\n    $result[]\
    \ = $delimeter;\n    $result[] = $numbers[$i];\n  }\n  return $result;\n}\n\n\
    function candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  $interspersed = array();\n  if (count($numbers) < 2) {\n  \
    \  return $numbers;\n  } else {\n    for ($i = 0; $i < count($numbers) - 1; $i++)\
    \ {\n      $interspersed[] = $numbers[$i];\n      $interspersed[] = $delimeter;\n\
    \    }\n    $interspersed[] = $numbers[count($numbers) - 1];\n    return $interspersed;\n\
    \  }\n}\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $result = array();\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        $result[] = $numbers[$i];\n        if ($i < count($numbers)\
    \ - 1) {\n            $result[] = $delimeter;\n        }\n    }\n    return $result;\n\
    }\n\n$serialVersionUID = 'serialVersionUID';\n$BYTE = 0;\n$SHORT = 1;\n$INT =\
    \ 2;\n$LONG = 3;\n$FLOAT = 4;\n$DOUBLE = 5;\n$BOOLEAN = 6;\n$CHAR = 7;\n$OBJECT\
    \ = 8;\n$ARRAY = 9;\n$STRING = 10;\n$NO_CONTENT = 11;\n$STREAM = 12;\n$STREAM_END\
    \ = 13;\n$OBJECT_ARRAY = 14;\n$FLOAT_ARRAY = 15;\n$SHORT_ARRAY = 16;\n$LONG_ARRAY\
    \ = 17;\n$STRING_ARRAY = 18;\n$STREAM_ARRAY = 19;\n$SHORT_INT_ARRAY = 20;\n$SHORT_INT_ZERO_ARRAY\
    \ = 21;\n$UNKNOWN = 22;\n$INT_ARRAY = 23;\n$BOOLEAN_ARRAY = 24;\n$BYTE_ARRAY =\
    \ 25;\n$CHAR_ARRAY = 26;\n$DOUBLE_ARRAY = 27;\n$OBJECT_ARRAY_ARRAY = 28;\n$INT_INT_ARRAY\
    \ = 29;\n$INT_INT_ARRAY_ARRAY = 30;\n$LONG_LONG_ARRAY = 31;\n$FLOAT_FLOAT_ARRAY\
    \ = 32;\n$DOUBLE_DOUBLE_ARRAY = 33;\n$BOOLEAN_BOOLEAN_ARRAY = 34;\n$STRING_STRING_ARRAY\
    \ = 35;\n$XML_CONTENT = 36;\n$INT_INT_INT_ARRAY = 37;\n$BYTE_BYTE_ARRAY = 38;\n\
    $SHORT_SHORT_ARRAY = 39;\n$LONG_LONG_LONG_\nfunction candidate(...$args) {\n \
    \   return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpqjghxcig.php
    on line 60

    '
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  if (sizeof($numbers) < 2) {\n    return $numbers;\n  }\n  $result\
    \ = array();\n  for ($i = 0; $i < sizeof($numbers) - 1; $i++) {\n    $result[]\
    \ = $numbers[$i];\n    $result[] = $delimeter;\n  }\n  $result[] = $numbers[sizeof($numbers)\
    \ - 1];\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  $result = array();\n  $size = count($numbers);\n  if ($size\
    \ > 0) {\n    $result[] = $numbers[0];\n    for ($i = 1; $i < $size; $i++) {\n\
    \      $result[] = $delimeter;\n      $result[] = $numbers[$i];\n    }\n  }\n\
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $result = array();\n    foreach ($numbers as $index => $number)\
    \ {\n        $result[] = $number;\n        if ($index < count($numbers) - 1) {\n\
    \            $result[] = $delimeter;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), 7) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !==\
    \ array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if (empty($numbers)) {\n        return $numbers;\n    }\n\
    \    $result = array($numbers[0]);\n    for ($i = 1; $i < count($numbers); $i++)\
    \ {\n        $result[] = $delimeter;\n        $result[] = $numbers[$i];\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  if (count($numbers) == 0) {\n    return $numbers;\n  } else\
    \ {\n    $result = array();\n    $i = 0;\n    foreach ($numbers as $number) {\n\
    \      $result[] = $number;\n      if ($i < count($numbers) - 1) {\n        $result[]\
    \ = $delimeter;\n      }\n      $i++;\n    }\n    return $result;\n  }\n}\n\n\
    function candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  if (empty($numbers)) {\n    return $numbers;\n  }\n  $arr =\
    \ array();\n  $count = count($numbers);\n  for ($i = 0; $i < $count - 1; $i++)\
    \ {\n    $arr[] = $numbers[$i];\n    $arr[] = $delimeter;\n  }\n  $arr[] = $numbers[$count\
    \ - 1];\n  return $arr;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    // Replace the line below with your code\n    $result = array();\n\
    \    for ($i = 0; $i < count($numbers); $i++) {\n        if ($i != count($numbers)\
    \ - 1) {\n            array_push($result, $numbers[$i]);\n            array_push($result,\
    \ $delimeter);\n        } else {\n            array_push($result, $numbers[$i]);\n\
    \        }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n  \
    \  return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  if (empty($numbers)) {\n    return $numbers;\n  }\n  $output\
    \ = [$numbers[0]];\n  for ($i = 1; $i < count($numbers); $i++) {\n    $output[]\
    \ = $delimeter;\n    $output[] = $numbers[$i];\n  }\n  return $output;\n}\n\n\
    function candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $new_numbers = array();\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        if ($i != 0) {\n            array_push($new_numbers, $delimeter);\n\
    \        }\n        array_push($new_numbers, $numbers[$i]);\n    }\n    return\
    \ $new_numbers;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $i = 0;\n    foreach ($numbers as $n) {\n        $result[]\
    \ = $n;\n        if ($i < count($numbers) - 1) {\n            $result[] = $delimeter;\n\
    \        }\n        $i++;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined variable $result in /tmp/tmpe1l937zv.php on line 16\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe1l937zv.php:24\nStack\
    \ trace:\n#0 /tmp/tmpe1l937zv.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpe1l937zv.php\
    \ on line 24\n"
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if (empty($numbers)) {\n        return $numbers;\n    }\n\
    \n    $result = array();\n    foreach ($numbers as $i => $number) {\n        $result[]\
    \ = $number;\n        if ($i < count($numbers) - 1) {\n            $result[] =\
    \ $delimeter;\n        }\n    }\n\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $arr = array();\n    foreach($numbers as $key => $value)\
    \ {\n        $arr[] = $value;\n        if ($key < (count($numbers) - 1)) {\n \
    \           $arr[] = $delimeter;\n        }\n    }\n    return $arr;\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  $size = count($numbers);\n  $result = array();\n  for ($i =\
    \ 0; $i < $size; $i++) {\n    array_push($result, $numbers[$i]);\n    if ($i <\
    \ $size - 1) {\n      array_push($result, $delimeter);\n    }\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), 7) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !==\
    \ array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $result = array();\n    foreach ($numbers as $number) {\n\
    \        if (!empty($result)) {\n            $result[] = $delimeter;\n       \
    \ }\n        $result[] = $number;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if (empty($numbers)) {\n        return $numbers;\n    }\n\
    \n    $result = array();\n    foreach ($numbers as $n) {\n        $result[] =\
    \ $n;\n        $result[] = $delimeter;\n    }\n    array_pop($result); // remove\
    \ the last $delimeter\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $delimed = array();\n    if (count($numbers) > 0) {\n   \
    \     $delimed[] = $numbers[0];\n        for ($i = 1; $i < count($numbers); $i++)\
    \ {\n            $delimed[] = $delimeter;\n            $delimed[] = $numbers[$i];\n\
    \        }\n    }\n    return $delimed;\n}\nfunction candidate(...$args) {\n \
    \   return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if (count($numbers) <= 1) {\n        return $numbers;\n \
    \   }\n    $head = array_shift($numbers);\n    return array_merge(array($head),\
    \ array($delimeter), intersperse($numbers, $delimeter));\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $result = array();\n    $count = count($numbers);\n    for\
    \ ($i = 0; $i < $count; $i++) {\n        $result[] = $numbers[$i];\n        if\
    \ ($i < $count - 1)\n            $result[] = $delimeter;\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), 7) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !==\
    \ array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $result = array();\n    $n = count($numbers);\n    for ($i\
    \ = 0; $i < $n; $i++) {\n        $result[] = $numbers[$i];\n        if ($i < $n\
    \ - 1) {\n            $result[] = $delimeter;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), 7) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !==\
    \ array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if (count($numbers) < 2) {\n        return $numbers;\n  \
    \  } else {\n        $first = array_shift($numbers);\n        return array_merge(array($first),\
    \ array($delimeter), intersperse($numbers, $delimeter));\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $first_number = $numbers[0];\n    $rest_numbers = array_slice($numbers,\
    \ 1);\n    $result = array();\n    foreach ($rest_numbers as $number) {\n    \
    \    $result[] = $first_number;\n        $result[] = $delimeter;\n        $first_number\
    \ = $number;\n    }\n    $result[] = $first_number;\n    return $result;\n}\n\
    function candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpykj9cxmb.php on line 8\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpykj9cxmb.php:24\nStack\
    \ trace:\n#0 /tmp/tmpykj9cxmb.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpykj9cxmb.php\
    \ on line 24\n"
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  if (!$numbers) {\n    return $numbers;\n  }\n\n  $acc = array($numbers[0]);\n\
    \  for ($i = 1; $i < count($numbers); $i++) {\n    $acc[] = $delimeter;\n    $acc[]\
    \ = $numbers[$i];\n  }\n  return $acc;\n}\n\nfunction candidate(...$args) {\n\
    \    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $r = array();\n    for ($i = 0; $i < count($numbers); $i++)\
    \ {\n        if ($i > 0) {\n            $r[] = $delimeter;\n        }\n      \
    \  $r[] = $numbers[$i];\n    }\n    return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if (empty($numbers)) {\n        return $numbers;\n    }\n\
    \    $result = array($numbers[0]);\n    foreach (array_slice($numbers, 1) as $number)\
    \ {\n        $result[] = $delimeter;\n        $result[] = $number;\n    }\n  \
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  $new = array();\n  for ($i = 0; $i < count($numbers); $i++)\
    \ {\n    $new[] = $numbers[$i];\n    if ($i < count($numbers) - 1) {\n      $new[]\
    \ = $delimeter;\n    }\n  }\n  return $new;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $result = array();\n    $numbers_size = count($numbers);\n\
    \    for ($i = 0; $i < $numbers_size; $i++) {\n        $result[] = $numbers[$i];\n\
    \        if ($i < $numbers_size - 1) {\n            $result[] = $delimeter;\n\
    \        }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n  \
    \  return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $ret = array();\n    foreach ($numbers as $index => $number)\
    \ {\n        $ret[] = $number;\n        if ($index < count($numbers) - 1) {\n\
    \            $ret[] = $delimeter;\n        }\n    }\n    return $ret;\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if (count($numbers) < 2) {\n        return $numbers;\n  \
    \  } else {\n        $result = array();\n        $len = count($numbers);\n   \
    \     $result[] = $numbers[0];\n        for ($i = 1; $i < $len; $i++) {\n    \
    \        $result[] = $delimeter;\n            $result[] = $numbers[$i];\n    \
    \    }\n        return $result;\n    }\n}\n\nfunction candidate(...$args) {\n\
    \    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if (!is_array($numbers)) {\n        throw new Exception(\"\
    Argument #1 must be an array\");\n    }\n    $result = array();\n    $i = 0;\n\
    \    $len = count($numbers);\n    while ($i < $len) {\n        $result[] = $numbers[$i];\n\
    \        if ($i < $len - 1) {\n            $result[] = $delimeter;\n        }\n\
    \        $i += 1;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $new_array = array();\n    foreach ($numbers as $key => $value)\
    \ {\n        if ($key != 0) {\n            array_push($new_array, $delimeter);\n\
    \        }\n        array_push($new_array, $value);\n    }\n    return $new_array;\n\
    }\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), 7) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !==\
    \ array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  $result = array();\n  foreach ($numbers as $idx => $number)\
    \ {\n    if ($idx != 0) {\n      $result[] = $delimeter;\n    }\n    $result[]\
    \ = $number;\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n  \
    \  return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  if (count($numbers) == 0) {\n    return $numbers;\n  }\n  return\
    \ array_reduce($numbers, function($acc, $elem) use ($delimeter) {\n    $acc[]\
    \ = $elem;\n    $acc[] = $delimeter;\n    return $acc;\n  }, array_slice($numbers,\
    \ 0, 1));\n}\n\nprint_r(intersperse(array(), 4));\nprint_r(intersperse(array(1,\
    \ 2, 3), 4));\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n)\nArray\n(\n    [0] => 1\n    [1] => 1\n    [2] => 4\n    [3]\
    \ => 2\n    [4] => 4\n    [5] => 3\n    [6] => 4\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp_hlwyh8h.php:26\nStack trace:\n#0 /tmp/tmp_hlwyh8h.php(30):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp_hlwyh8h.php on line 26\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $count = count($numbers);\n    $head = array_slice($numbers,\
    \ 0, $count - 1);\n    $tail = array_slice($numbers, $count - 1);\n    return\
    \ array_merge(array_map(function($e) use ($delimeter) {\n        return array($e,\
    \ $delimeter);\n    }, $head), $tail);\n}\n\nfunction candidate(...$args) {\n\
    \    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptjhra_1_.php:22\n\
    Stack trace:\n#0 /tmp/tmptjhra_1_.php(26): test()\n#1 {main}\n  thrown in /tmp/tmptjhra_1_.php\
    \ on line 22\n"
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $result = array();\n    foreach ($numbers as $index => $number)\
    \ {\n        $result[] = $number;\n        if ($index != count($numbers) - 1)\
    \ {\n            $result[] = $delimeter;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), 7) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !==\
    \ array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $len = count($numbers);\n    $interposed = array();\n   \
    \ if ($len === 0) {\n        return $interposed;\n    }\n    $interposed[] = $numbers[0];\n\
    \    for ($i = 1; $i < $len; $i++) {\n        $interposed[] = $delimeter;\n  \
    \      $interposed[] = $numbers[$i];\n    }\n    return $interposed;\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $result = array();\n    foreach($numbers as $number) {\n\
    \        if (count($result) > 0) {\n            $result[] = $delimeter;\n    \
    \    }\n        $result[] = $number;\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    // Fill in the code here\n}\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8d0yx_t9.php:15\n\
    Stack trace:\n#0 /tmp/tmp8d0yx_t9.php(20): test()\n#1 {main}\n  thrown in /tmp/tmp8d0yx_t9.php\
    \ on line 15\n"
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if (empty($numbers)) {\n        return $numbers;\n    }\n\
    \    if (count($numbers) < 2) {\n        return $numbers;\n    }\n    $result\
    \ = array();\n    $last = array_pop($numbers);\n    foreach ($numbers as $number)\
    \ {\n        $result[] = $number;\n        $result[] = $delimeter;\n    }\n  \
    \  $result[] = $last;\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if (count($numbers) <= 1) {\n        return $numbers;\n \
    \   } else {\n        $result = array($numbers[0]);\n        for ($i = 1; $i <\
    \ count($numbers); $i++) {\n            $result[] = $delimeter;\n            $result[]\
    \ = $numbers[$i];\n        }\n        return $result;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if (count($numbers) == 0) {\n        return $numbers;\n \
    \   }\n    $result = array();\n    foreach ($numbers as $i => $number) {\n   \
    \     $result[] = $number;\n        if ($i != count($numbers) - 1) {\n       \
    \     $result[] = $delimeter;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  $result = array();\n  for ($i = 0; $i < count($numbers); $i++)\
    \ {\n    if ($i > 0)\n      $result[] = $delimeter;\n    $result[] = $numbers[$i];\n\
    \  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  $ret = array();\n  foreach ($numbers as $key => $value) {\n\
    \    if ($key > 0) {\n      $ret[] = $delimeter;\n    }\n    $ret[] = $value;\n\
    \  }\n  return $ret;\n}\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  if (empty($numbers)) {\n    return $numbers;\n  }\n  return\
    \ array_reduce($numbers, function($acc, $elem) use ($delimeter) {\n    if (empty($acc))\
    \ {\n      $acc[] = $elem;\n    } else {\n      $acc[] = $delimeter;\n      $acc[]\
    \ = $elem;\n    }\n    return $acc;\n  }, array());\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  $result = array();\n  $size = count($numbers);\n  if ($size\
    \ == 0) {\n    return $result;\n  }\n  for ($i = 0; $i < $size - 1; $i++) {\n\
    \    $result[] = $numbers[$i];\n    $result[] = $delimeter;\n  }\n  $result[]\
    \ = $numbers[$size - 1];\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if (count($numbers) == 0) {\n        return $numbers;\n \
    \   }\n    else {\n        $result = array();\n        foreach ($numbers as $key\
    \ => $value) {\n            if ($key < count($numbers) - 1) {\n              \
    \  $result[] = $value;\n                $result[] = $delimeter;\n            }\n\
    \            else {\n                $result[] = $value;\n            }\n    \
    \    }\n        return $result;\n    }\n}\n\nfunction candidate(...$args) {\n\
    \    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $result = array();\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        $result[] = $numbers[$i];\n        if ($i < count($numbers)\
    \ - 1) {\n            $result[] = $delimeter;\n        }\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if (sizeof($numbers) == 0) {\n        return $numbers;\n\
    \    } else {\n        $arr = array();\n        for ($i = 0; $i < sizeof($numbers)\
    \ - 1; $i++) {\n            array_push($arr, $numbers[$i]);\n            array_push($arr,\
    \ $delimeter);\n        }\n        array_push($arr, $numbers[sizeof($numbers)\
    \ - 1]);\n        return $arr;\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $result = array();\n    $i = 0;\n    foreach ($numbers as\
    \ $number) {\n        $result[] = $number;\n        if ($i++ < count($numbers)\
    \ - 1) {\n            $result[] = $delimeter;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), 7) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !==\
    \ array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  if (sizeof($numbers) == 0) {\n    return $numbers;\n  } else\
    \ {\n    $result = array($numbers[0]);\n    for ($i = 1; $i < sizeof($numbers);\
    \ $i++) {\n      array_push($result, $delimeter);\n      array_push($result, $numbers[$i]);\n\
    \    }\n    return $result;\n  }\n}\n\nfunction candidate(...$args) {\n    return\
    \ intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $result = array();\n    foreach ($numbers as $key => $value)\
    \ {\n        $result[] = $value;\n        if ($key != count($numbers) - 1) {\n\
    \            $result[] = $delimeter;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), 7) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !==\
    \ array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $result = array();\n    $count = count($numbers);\n    if\
    \ ($count === 0) {\n        return $result;\n    }\n    $result[0] = $numbers[0];\n\
    \    for ($i = 1; $i < $count; $i++) {\n        $result[] = $delimeter;\n    \
    \    $result[] = $numbers[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  if (!is_array($numbers)) {\n    throw new Exception(\"numbers\
    \ is not an array\");\n  }\n  $result = array();\n  for ($i = 0; $i < count($numbers);\
    \ $i++) {\n    $result[] = $numbers[$i];\n    if ($i != count($numbers) - 1) {\n\
    \      $result[] = $delimeter;\n    }\n  }\n  return $result;\n}\n\n$numbers =\
    \ array(1, 2, 3);\n$delimeter = 4;\n$result = intersperse($numbers, $delimeter);\n\
    \necho \"input = \";\necho json_encode($numbers);\necho \"; \";\necho \"delimeter\
    \ = \";\necho $delimeter;\necho \"; \";\necho \"result = \";\necho json_encode($result);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'input = [1,2,3]; delimeter = 4; result = [1,4,2,4,3]

    '
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if (count($numbers) <= 1) {\n        return $numbers;\n \
    \   } else {\n        $head = array_slice($numbers, 0, 1);\n        $rest = array_slice($numbers,\
    \ 1);\n        return array_merge($head, array($delimeter), intersperse($rest,\
    \ $delimeter));\n    }\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  if (count($numbers) < 2) {\n    return $numbers;\n  } else\
    \ {\n    return array_merge(array_slice($numbers, 0, 1), array($delimeter), intersperse(array_slice($numbers,\
    \ 1), $delimeter));\n  }\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $result = array();\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        $result[] = $numbers[$i];\n        if ($i < count($numbers)\
    \ - 1) {\n            $result[] = $delimeter;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), 7) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !==\
    \ array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $result = array();\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        if ($i > 0) {\n            $result[] = $delimeter;\n      \
    \  }\n        $result[] = $numbers[$i];\n    }\n    return $result;\n}\n\n$a =\
    \ array(1,2,3);\n$b = intersperse($a, 4);\nprint_r($b);\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 2\n    [3] => 4\n    [4]\
    \ => 3\n)\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if (count($numbers) == 0) {\n        return $numbers;\n \
    \   } else {\n        // Find the index of the last element and use it to construct\
    \ the rest of the array.\n        // array_slice() returns the slice of the array\
    \ starting from the given index.\n        $last = array_slice($numbers, -1);\n\
    \        // array_slice() returns the slice of the array starting from the given\
    \ index.\n        $rest = array_slice($numbers, 0, -1);\n        // array_merge()\
    \ merges two or more arrays into one array.\n        return array_merge(intersperse($rest,\
    \ $delimeter), $last);\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnzy8jj1f.php:27\n\
    Stack trace:\n#0 /tmp/tmpnzy8jj1f.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpnzy8jj1f.php\
    \ on line 27\n"
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  $result = array();\n  if(sizeof($numbers) > 0) {\n    $result[]\
    \ = $numbers[0];\n    for($i = 1; $i < sizeof($numbers); $i++) {\n      $result[]\
    \ = $delimeter;\n      $result[] = $numbers[$i];\n    }\n  }\n  return $result;\n\
    }\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $result = array();\n    foreach ($numbers as $number) {\n\
    \        if (count($result) > 0) {\n            $result[] = $delimeter;\n    \
    \    }\n        $result[] = $number;\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if (count($numbers) == 0) {\n        return $numbers;\n \
    \   } else {\n        $result = array();\n        $result[] = $numbers[0];\n \
    \       foreach (array_slice($numbers, 1) as $number) {\n            $result[]\
    \ = $delimeter;\n            $result[] = $number;\n        }\n        return $result;\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  $result = array();\n  foreach ($numbers as $index => $number)\
    \ {\n    if ($index != 0) {\n      $result[] = $delimeter;\n    }\n    $result[]\
    \ = $number;\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n  \
    \  return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  $result = array();\n  for ($i = 0; $i < count($numbers); $i++)\
    \ {\n    $result[] = $numbers[$i];\n    if ($i != count($numbers) - 1) {\n   \
    \   $result[] = $delimeter;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if (count($numbers) == 0) {\n        return $numbers;\n \
    \   } else {\n        $head = array_shift($numbers);\n        $interspersed_tail\
    \ = intersperse($numbers, $delimeter);\n        return array_merge(array($head),\n\
    \                           array($delimeter),\n                           $interspersed_tail);\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdck1zrza.php:25\n\
    Stack trace:\n#0 /tmp/tmpdck1zrza.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpdck1zrza.php\
    \ on line 25\n"
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $result = array();\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        if ($i !== 0) {\n            $result[] = $delimeter;\n    \
    \    }\n        $result[] = $numbers[$i];\n    }\n    return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if (count($numbers) == 0) {\n        return $numbers;\n \
    \   }\n    $first_num = array_shift($numbers);\n    return array_merge(array($first_num),\
    \ intersperse_one($numbers, $delimeter));\n}\n\nfunction candidate(...$args) {\n\
    \    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function intersperse_one()\
    \ in /tmp/tmpt9l8doc5.php:12\nStack trace:\n#0 /tmp/tmpt9l8doc5.php(16): intersperse(Array,\
    \ 8)\n#1 /tmp/tmpt9l8doc5.php(21): candidate(Array, 8)\n#2 /tmp/tmpt9l8doc5.php(25):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpt9l8doc5.php on line 12\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if (!$numbers) {\n        return array();\n    }\n    $n\
    \ = count($numbers);\n    $delimiters = array_fill(0, $n - 1, $delimeter);\n \
    \   return array_interleave($numbers, $delimiters);\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function array_interleave()\
    \ in /tmp/tmp_u_nvyup.php:13\nStack trace:\n#0 /tmp/tmp_u_nvyup.php(17): intersperse(Array,\
    \ 8)\n#1 /tmp/tmp_u_nvyup.php(22): candidate(Array, 8)\n#2 /tmp/tmp_u_nvyup.php(26):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmp_u_nvyup.php on line 13\n"
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $numbersCount = count($numbers);\n    if ($numbersCount ==\
    \ 0) {\n        return $numbers;\n    } else if ($numbersCount == 1) {\n     \
    \   return array_merge($numbers, array($delimeter));\n    } else {\n        $result\
    \ = array($numbers[0]);\n        for ($i = 1; $i < $numbersCount; $i++) {\n  \
    \          $result = array_merge($result, array($delimeter, $numbers[$i]));\n\
    \        }\n        return $result;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $result = array();\n    $sz = count($numbers);\n    if ($sz\
    \ == 0) return $result;\n    $result[] = $numbers[0];\n    for ($i = 1; $i < $sz;\
    \ $i++) {\n        $result[] = $delimeter;\n        $result[] = $numbers[$i];\n\
    \    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  // TODO your code here\n}\n\nfunction candidate(...$args) {\n\
    \    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5mi0qpjf.php:16\n\
    Stack trace:\n#0 /tmp/tmp5mi0qpjf.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp5mi0qpjf.php\
    \ on line 16\n"
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $result = array();\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        $result[] = $numbers[$i];\n        if ($i < count($numbers)\
    \ - 1) {\n            $result[] = $delimeter;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), 7) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !==\
    \ array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  $result = array();\n  for ($i = 0; $i < count($numbers); $i++)\
    \ {\n    $result[] = $numbers[$i];\n    if ($i < count($numbers) - 1) {\n    \
    \  $result[] = $delimeter;\n    }\n  }\n  return $result;\n}\n\n$m = array(1,\
    \ 2, 3);\n$n = array(1, 2, 3, 4);\necho \"m = \" . print_r($m, true) . \"\\n\"\
    ;\necho \"n = \" . print_r($n, true) . \"\\n\";\n\necho \"intersperse(m, 4) =\
    \ \" . print_r(intersperse($m, 4), true) . \"\\n\";\necho \"intersperse(n, 4)\
    \ = \" . print_r(intersperse($n, 4), true) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "m = Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n)\n\nn = Array\n\
    (\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n)\n\nintersperse(m,\
    \ 4) = Array\n(\n    [0] => 1\n    [1] => 4\n    [2] => 2\n    [3] => 4\n    [4]\
    \ => 3\n)\n\nintersperse(n, 4) = Array\n(\n    [0] => 1\n    [1] => 4\n    [2]\
    \ => 2\n    [3] => 4\n    [4] => 3\n    [5] => 4\n    [6] => 4\n)\n\n"
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $result = array();\n    $i = 0;\n    while ($i < count($numbers))\
    \ {\n        $result[] = $numbers[$i];\n        if ($i < count($numbers) - 1)\
    \ {\n            $result[] = $delimeter;\n        }\n        $i++;\n    }\n  \
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $output = array();\n    if (count($numbers) > 0) {\n    \
    \    $output[] = $numbers[0];\n        for ($i = 1; $i < count($numbers); $i++)\
    \ {\n            $output[] = $delimeter;\n            $output[] = $numbers[$i];\n\
    \        }\n    }\n    return $output;\n}\nfunction candidate(...$args) {\n  \
    \  return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if(empty($numbers)) {\n        return $numbers;\n    }\n\
    \    $result = array();\n    $result[] = $numbers[0];\n    $length = count($numbers);\n\
    \    for($i = 1; $i < $length; $i++) {\n        $result[] = $delimeter;\n    \
    \    $result[] = $numbers[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $result = array();\n    $count = count($numbers);\n    if\
    \ ($count == 0) {\n        return $result;\n    }\n    $result[] = $numbers[0];\n\
    \    for ($i = 1; $i < $count; $i++) {\n        $result[] = $delimeter;\n    \
    \    $result[] = $numbers[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  if (empty($numbers)) {\n    return $numbers;\n  } else {\n\
    \    $tail = array_slice($numbers, 1);\n    return array_merge(array($numbers[0]),\
    \ array($delimeter), intersperse($tail, $delimeter));\n  }\n}\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5nn_y6lg.php:21\n\
    Stack trace:\n#0 /tmp/tmp5nn_y6lg.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp5nn_y6lg.php\
    \ on line 21\n"
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if (count($numbers) < 2)\n        return $numbers;\n    else\
    \ {\n        $interspersed = array();\n        for ($i = 0; $i < count($numbers);\
    \ $i++) {\n            $interspersed[] = $numbers[$i];\n            if ($i < count($numbers)\
    \ - 1)\n                $interspersed[] = $delimeter;\n        }\n        return\
    \ $interspersed;\n    }\n}\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if (empty($numbers)) {\n        return $numbers;\n    }\n\
    \n    $result = array($numbers[0]);\n    for ($i = 1; $i < count($numbers); $i++)\
    \ {\n        $result[] = $delimeter;\n        $result[] = $numbers[$i];\n    }\n\
    \n    return $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  $length = count($numbers);\n  $newNumbers = array();\n  for\
    \ ($i = 0; $i < $length; $i++) {\n    $newNumbers[] = $numbers[$i];\n    if ($i\
    \ < $length - 1) {\n      $newNumbers[] = $delimeter;\n    }\n  }\n  return $newNumbers;\n\
    }\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), 7) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !==\
    \ array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if(empty($numbers))\n        return $numbers;\n    $result\
    \ = array();\n    $first = true;\n    foreach($numbers as $number) {\n       \
    \ if($first) {\n            $first = false;\n        } else {\n            $result[]\
    \ = $delimeter;\n        }\n        $result[] = $number;\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $n = count($numbers);\n    if ($n < 2) return $numbers;\n\
    \    $m = $n - 1;\n    $dest = array();\n    for ($i = 0; $i < $m; $i++) {\n \
    \       $dest[] = $numbers[$i];\n        $dest[] = $delimeter;\n    }\n    $dest[]\
    \ = $numbers[$m];\n    return $dest;\n}\n\nfunction candidate(...$args) {\n  \
    \  return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $result = array();\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        if ($i > 0) {\n            $result[] = $delimeter;\n      \
    \  }\n        $result[] = $numbers[$i];\n    }\n    return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  $results = array();\n  for ($i = 0; $i < count($numbers); $i++)\
    \ {\n    $results[] = $numbers[$i];\n    if ($i < count($numbers) - 1)\n     \
    \ $results[] = $delimeter;\n  }\n  return $results;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $result = array();\n    $next = array_shift($numbers);\n\
    \    while ($next) {\n        $result[] = $next;\n        $next = array_shift($numbers);\n\
    \        if ($next) {\n            $result[] = $delimeter;\n        }\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $result = array();\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        $result[] = $numbers[$i];\n        if ($i != count($numbers)\
    \ - 1) {\n            $result[] = $delimeter;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), 7) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !==\
    \ array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  $result = array();\n  foreach($numbers as $index => $number)\
    \ {\n    if ($index > 0) {\n      $result[] = $delimeter;\n    }\n    $result[]\
    \ = $number;\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n  \
    \  return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $result = array();\n    foreach ($numbers as $n) {\n    \
    \    if (!empty($result))\n            $result[] = $delimeter;\n        $result[]\
    \ = $n;\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n   \
    \ return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $result = array();\n    foreach ($numbers as $i => $number)\
    \ {\n        if ($i > 0) {\n            $result[] = $delimeter;\n        }\n \
    \       $result[] = $number;\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if (sizeof($numbers) === 0) {\n        return $numbers;\n\
    \    }\n    $result = array($numbers[0]);\n    for ($i = 1; $i < sizeof($numbers);\
    \ $i++) {\n        $result[] = $delimeter;\n        $result[] = $numbers[$i];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $r = array();\n    foreach ($numbers as $i => $v) {\n   \
    \     if ($i > 0) {\n            $r[] = $delimeter;\n        }\n        $r[] =\
    \ $v;\n    }\n    return $r;\n}\n\nfunction candidate(...$args) {\n    return\
    \ intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  $interspersed = array();\n  $i = 0;\n  foreach ($numbers as\
    \ $number) {\n    $interspersed[] = $number;\n    if ($i++ > 0) {\n      $interspersed[]\
    \ = $delimeter;\n    }\n  }\n  return $interspersed;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjiunbmap.php:25\n\
    Stack trace:\n#0 /tmp/tmpjiunbmap.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpjiunbmap.php\
    \ on line 25\n"
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $res = array();\n    foreach($numbers as $x) {\n        $res[]\
    \ = $x;\n        $res[] = $delimeter;\n    }\n    array_pop($res); // remove last\
    \ item from the array\n    return $res;\n}\n\nfunction candidate(...$args) {\n\
    \    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  $result = array();\n  foreach ($numbers as $num) {\n    $result[]\
    \ = $num;\n    $result[] = $delimeter;\n  }\n  array_pop($result);\n  return $result;\n\
    }\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if (count($numbers) === 0) return array();\n    if (count($numbers)\
    \ === 1) return $numbers;\n    $newNumbers = array($numbers[0]);\n    $lastI =\
    \ count($numbers) - 1;\n    for ($i = 1; $i < $lastI; $i++) {\n        $newNumbers[]\
    \ = $delimeter;\n        $newNumbers[] = $numbers[$i];\n    }\n    $newNumbers[]\
    \ = $delimeter;\n    $newNumbers[] = $numbers[$lastI];\n    return $newNumbers;\n\
    }\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), 7) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !==\
    \ array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $result = array();\n    foreach ($numbers as $number) {\n\
    \        $result[] = $number;\n        $result[] = $delimeter;\n    }\n    array_pop($result);\n\
    \    return $result;\n}\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if (empty($numbers)) {\n        return $numbers;\n    }\n\
    \    $result = array();\n    $result[] = $numbers[0];\n    $len = count($numbers);\n\
    \    for ($i = 1; $i < $len; $i++) {\n        $result[] = $delimeter;\n      \
    \  $result[] = $numbers[$i];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    // use the `reduce` method to produce a new array; calling\
    \ `array_push` on each step\n    // array_reduce($numbers, $callback, $initial)\n\
    \    return array_reduce($numbers, function($acc, $element) use ($delimeter) {\n\
    \        // push only if there is something in accumulator (otherwise it's first\
    \ element)\n        if (!empty($acc)) array_push($acc, $delimeter);\n        array_push($acc,\
    \ $element);\n        return $acc;\n    }, array());\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    // Check if $numbers is an array\n    if (!is_array($numbers))\
    \ {\n        throw new Exception(\"Invalid parameter \\$numbers. Should be an\
    \ array.\");\n    }\n    // Check if $delimeter is numeric\n    if (!is_numeric($delimeter))\
    \ {\n        throw new Exception(\"Invalid parameter \\$delimeter. Should be numeric.\"\
    );\n    }\n    // Create an empty array to push numbers into\n    $inter = array();\n\
    \    // Loop through $numbers and push numbers into $inter\n    foreach ($numbers\
    \ as $n) {\n        $inter[] = $n;\n        $inter[] = $delimeter;\n    }\n  \
    \  // Remove the last element of $inter (i.e. the last $delimeter)\n    array_pop($inter);\n\
    \    // Return the result array\n    return $inter;\n}\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $result = array();\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        $result[] = $numbers[$i];\n        if ($i < count($numbers)\
    \ - 1) {\n            $result[] = $delimeter;\n        }\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $result = array();\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        if ($i < count($numbers) - 1) {\n            $result[] = $numbers[$i];\n\
    \            $result[] = $delimeter;\n        } else {\n            $result[]\
    \ = $numbers[$i];\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  if (empty($numbers)) {\n    return $numbers;\n  }\n  $result\
    \ = array($numbers[0]);\n  for ($i = 1; $i < count($numbers); $i++) {\n    $result[]\
    \ = $delimeter;\n    $result[] = $numbers[$i];\n  }\n  return $result;\n}\n\n\
    function candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262

language: php
name: HumanEval_5_intersperse
results:
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if (count($numbers) < 2) {\n        return $numbers;\n  \
    \  }\n    $head = array_slice($numbers, 0, 1);\n    $tail = array_slice($numbers,\
    \ 1);\n    return array_merge($head, array($delimeter), intersperse($tail, $delimeter));\n\
    }\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), 7) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !==\
    \ array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823419
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  $result = array();\n  foreach($numbers as $number) {\n    $result[]\
    \ = $number;\n    $result[] = $delimeter;\n  }\n  // Remove the last $delimeter\n\
    \  array_pop($result);\n  return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823419
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  $result = array();\n  if (count($numbers) === 0) {\n    return\
    \ $result;\n  }\n  else {\n    $result[] = $numbers[0];\n    for ($i = 1; $i <\
    \ count($numbers); $i++) {\n      $result[] = $delimeter;\n      $result[] = $numbers[$i];\n\
    \    }\n    return $result;\n  }\n}\n\nfunction candidate(...$args) {\n    return\
    \ intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823419
- exit_code: 255
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  if (count($numbers) == 0) {\n    return $numbers;\n  } else\
    \ {\n    $a = intersperse(array_slice($numbers, 1), $delimeter);\n    return array_merge(array($numbers[0]),\
    \ array($delimeter), $a);\n  }\n}\n\nfunction candidate(...$args) {\n    return\
    \ intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgp9hf9xp.php:22\n\
    Stack trace:\n#0 /tmp/tmpgp9hf9xp.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpgp9hf9xp.php\
    \ on line 22\n"
  timestamp: 1659823419
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  $result = array();\n  $count = count($numbers);\n  for ($i\
    \ = 0; $i < $count; $i++) {\n    array_push($result, $numbers[$i]);\n    if ($i\
    \ < $count - 1) {\n      array_push($result, $delimeter);\n    }\n  }\n  return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823419
- exit_code: 255
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  $result = array();\n  foreach ($numbers as $n) {\n    $result[]\
    \ = $n;\n    $result[] = $delimeter;\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj7czjyki.php:22\n\
    Stack trace:\n#0 /tmp/tmpj7czjyki.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpj7czjyki.php\
    \ on line 22\n"
  timestamp: 1659823419
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  $new_numbers = array();\n  $i = 0;\n  foreach ($numbers as\
    \ $number) {\n    if ($i > 0) {\n      $new_numbers[] = $delimeter;\n    }\n \
    \   $new_numbers[] = $number;\n    $i++;\n  }\n  return $new_numbers;\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823419
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if (count($numbers) == 0)\n        return $numbers;\n   \
    \ $result = array($numbers[0]);\n    for ($i = 1; $i < count($numbers); $i++)\
    \ {\n        $result[] = $delimeter;\n        $result[] = $numbers[$i];\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823419
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if(count($numbers) == 0) {\n        return $numbers;\n  \
    \  } else {\n        $res = array();\n        $res[] = $numbers[0];\n        for($i\
    \ = 1; $i < count($numbers); $i++) {\n            $res[] = $delimeter;\n     \
    \       $res[] = $numbers[$i];\n        }\n        return $res;\n    }\n}\n\n\
    function candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823419
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  if (count($numbers) === 0) return array();\n  if (count($numbers)\
    \ === 1) return $numbers;\n  $return_array = array($numbers[0]);\n  for ($i =\
    \ 1; $i < count($numbers); $i++) {\n    array_push($return_array, $delimeter);\n\
    \    array_push($return_array, $numbers[$i]);\n  }\n  return $return_array;\n\
    }\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(), 7) !== array()) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !==\
    \ array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823419
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if (!is_array($numbers)) {\n        return NULL;\n    }\n\
    \    $result = array();\n    foreach ($numbers as $number) {\n        $result[]\
    \ = $number;\n        $result[] = $delimeter;\n    }\n    array_pop($result);\n\
    \    return $result;\n}\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823419
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $result = array();\n    $count = count($numbers);\n    for\
    \ ($i = 0; $i < $count; $i++) {\n        $result[] = $numbers[$i];\n        if\
    \ ($i < $count - 1) {\n            $result[] = $delimeter;\n        }\n    }\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823419
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  if(empty($numbers)) {\n    return $numbers;\n  } else {\n \
    \   $result = array();\n    $result[] = $numbers[0];\n    foreach(array_slice($numbers,\
    \ 1) as $n) {\n      $result[] = $delimeter;\n      $result[] = $n;\n    }\n \
    \   return $result;\n  }\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823419
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    if (count($numbers) == 0) {\n        return $numbers;\n \
    \   } else {\n        $result = array();\n        $result[] = $numbers[0];\n \
    \       $numbers = array_slice($numbers, 1);\n        while (count($numbers) >\
    \ 0) {\n            $result[] = $delimeter;\n            $result[] = $numbers[0];\n\
    \            $numbers = array_slice($numbers, 1);\n        }\n        return $result;\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823419
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $result = array();\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        if ($i !== 0) {\n            $result[] = $delimeter;\n    \
    \    }\n        $result[] = $numbers[$i];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823419
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  $interspersed = array();\n  $i = 0;\n  while ($i < count($numbers))\
    \ {\n    array_push($interspersed, $numbers[$i]);\n    if ($i + 1 < count($numbers))\
    \ {\n      array_push($interspersed, $delimeter);\n    }\n    $i++;\n  }\n  return\
    \ $interspersed;\n}\nfunction candidate(...$args) {\n    return intersperse(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(), 7) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8)\
    \ !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823419
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  $result = array();\n  foreach($numbers as $number) {\n    if\
    \ (!$result) {\n      $result[] = $number;\n    } else {\n      $result[] = $delimeter;\n\
    \      $result[] = $number;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823419
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n    $r = array();\n    $n = count($numbers);\n    for ($i = 0;\
    \ $i < $n; $i++) {\n        $r[] = $numbers[$i];\n        if ($i < $n - 1) {\n\
    \            $r[] = $delimeter;\n        }\n    }\n    return $r;\n}\n\nfunction\
    \ candidate(...$args) {\n    return intersperse(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(), 7) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6,\
    \ 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823419
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  $result = array();\n  $i = 0;\n  foreach ($numbers as $number)\
    \ {\n    $result[] = $number;\n    if ($i < count($numbers) - 1) {\n      $result[]\
    \ = $delimeter;\n    }\n    $i++;\n  }\n  return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823419
- exit_code: 0
  program: "<?php\n// Insert a number 'delimeter' between every two consecutive elements\
    \ of input array `numbers'\n// >>> intersperse(array(), 4)\n// array()\n// >>>\
    \ intersperse(array(1, 2, 3), 4)\n// array(1, 4, 2, 4, 3)\nfunction intersperse($numbers,\
    \ $delimeter) {\n  $interspersed = array();\n  foreach ($numbers as $i => $num)\
    \ {\n    if ($i > 0) {\n      $interspersed[] = $delimeter;\n    }\n    $interspersed[]\
    \ = $num;\n  }\n  return $interspersed;\n}\nfunction candidate(...$args) {\n \
    \   return intersperse(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(),\
    \ 7) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823419

name: HumanEval_71_triangle_area
language: php
prompt: "<?php\n// Given the lengths of the three sides of a triangle. Return the\
  \ area of\n// the triangle rounded to 2 decimal points if the three sides form a\
  \ valid triangle. \n// Otherwise return -1\n// Three sides make a valid triangle\
  \ when the sum of any two sides is greater \n// than the third side.\n// Example:\n\
  // >>> triangle_area(3, 4, 5)\n// 6.0\n// >>> triangle_area(1, 2, 10)\n// -1\nfunction\
  \ triangle_area($a, $b, $c) {\n"
tests: "function candidate(...$args) {\n    return triangle_area(...$args);\n}\n\n\
  function test(): void {\n    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(1, 2, 10) !== -1) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(1, 2, 3) !== -1) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(2, 6, 3) !== -1) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(2, 2, 10) !== -1) { throw new Exception(\"\
  Test failed!\"); }\n}\n\ntest();"
completions: ["    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    \    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $s = ($a + $b\
    \ + $c) / 2;\n        $area = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n\
    \        return round($area, 2);\n    }\n    return -1;\n}\n\n$test_cases = [[3,\
    \ 4, 5], [1, 2, 10]];\nforeach ($test_cases as $case) {\n    $res = triangle_area($case[0],\
    \ $case[1], $case[2]);\n    print_r($res);\n    echo PHP_EOL;\n}", "    $p = ($a\
    \ + $b + $c) / 2;\n    if ($p - $a <= 0 || $p - $b <= 0 || $p - $c <= 0) {\n \
    \       return -1;\n    } else {\n        return round(sqrt($p * ($p - $a) * ($p\
    \ - $b) * ($p - $c)), 2);\n    }\n}\n", "\tif($a + $b > $c && $a + $c > $b &&\
    \ $b + $c > $a) {\n\t\treturn round(($a + $b + $c) / 2, 2);\n\t} else {\n\t\t\
    return -1;\n\t}\n}", "    if ($a+$b > $c && $a+$c > $b && $b+$c > $a) {\n    \
    \    $s = ($a+$b+$c)/2;\n        $area = sqrt($s*($s-$a)*($s-$b)*($s-$c));\n \
    \       return $area;\n    } else {\n        return -1;\n    }\n}\n", "    if($a\
    \ + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p = ($a + $b + $c) /\
    \ 2;\n        $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n        return\
    \ round($s, 2);\n    }\n    return -1;\n}", "    // Fill in your code here\n}",
  "    if ($a + $b <= $c || $a + $c <= $b || $b + $c <= $a) {\n        return -1;\n\
    \    }\n    $s = ($a + $b + $c) / 2;\n    return round(sqrt($s * ($s - $a) * ($s\
    \ - $b) * ($s - $c)), 2);\n}\n\necho triangle_area(3, 4, 5);\necho \"\\n\";\n\
    echo triangle_area(1, 2, 10);\necho \"\\n\";", "    if (($a + $b > $c) && ($a\
    \ + $c > $b) && ($b + $c > $a)) {\n        $p = ($a + $b + $c) / 2;\n        $s\
    \ = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n        return round($s, 2);\n\
    \    } else {\n        return -1;\n    }\n}\n\necho triangle_area(3, 4, 5);",
  "\tif ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$s = ($a + $b + $c)\
    \ / 2;\n\t\t$area = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n\t\treturn\
    \ round($area, 2);\n\t}\n\treturn -1;\n}\n\nprint_r(triangle_area(3, 4, 5));\n\
    echo \"\\n\";\nprint_r(triangle_area(1, 2, 10));\necho \"\\n\";\nprint_r(triangle_area(5,\
    \ 5, 5));\necho \"\\n\";\nprint_r(triangle_area(10, 5, 7));\necho \"\\n\";", "\t\
    $max = max($a, $b, $c);\n\tif ($max == $a) {\n\t\t$med = max($b, $c);\n\t\t$min\
    \ = min($b, $c);\n\t} elseif ($max == $b) {\n\t\t$med = max($a, $c);\n\t\t$min\
    \ = min($a, $c);\n\t} else {\n\t\t$med = max($a, $b);\n\t\t$min = min($a, $b);\n\
    \t}\n\tif ($max > $med + $min) {\n\t\treturn -1;\n\t} else {\n\t\t$s = ($a + $b\
    \ + $c) / 2;\n\t\treturn round(sqrt($s * ($s - $a) * ($s - $b) * ($s - $c)), 2);\n\
    \t}\n}", "    if (($a + $b) > $c && ($a + $c) > $b && ($b + $c) > $a) {\n    \
    \    return round(sqrt(($a + $b + $c) * ($a + $b - $c) * ($a - $b + $c) * (-$a\
    \ + $b + $c)) / 4, 2);\n    }\n    return -1;\n}\necho triangle_area(3, 4, 5)\
    \ . \"\\n\";\necho triangle_area(1, 2, 10) . \"\\n\";", "  if($a + $b > $c &&\
    \ $a + $c > $b && $b + $c > $a) {\n    $p = ($a + $b + $c) / 2;\n    $area = sqrt($p\
    \ * ($p - $a) * ($p - $b) * ($p - $c));\n    return round($area, 2);\n  } else\
    \ {\n    return -1;\n  }\n}\n", "\tif ($a+$b<=$c || $a+$c<=$b || $b+$c<=$a) {\n\
    \t\treturn -1;\n\t}\n\t$p = ($a+$b+$c)/2;\n\t$s = sqrt($p*($p-$a)*($p-$b)*($p-$c));\n\
    \treturn round($s, 2);\n}\n\necho triangle_area(3, 4, 5) . \"\\n\";\necho triangle_area(1,\
    \ 2, 10) . \"\\n\";\necho triangle_area(4, 5, 4) . \"\\n\";\necho triangle_area(1,\
    \ 1, 1) . \"\\n\";\necho triangle_area(5, 5, 3) . \"\\n\";\necho triangle_area(5,\
    \ 1, 3) . \"\\n\";\necho triangle_area(5, 5, 6) . \"\\n\";\necho triangle_area(5,\
    \ 5, 7) . \"\\n\";", "  // your code here\n  $p = ($a + $b + $c) / 2;\n  $s =\
    \ sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n  return ($s > 0 ? $s : -1);\n\
    }\n\necho triangle_area(3, 4, 5).\"\\n\";\necho triangle_area(1, 2, 10).\"\\n\"\
    ;\n", "    if ($a <= 0 || $b <= 0 || $c <= 0) {\n        return -1;\n    }\n \
    \   if (($a + $b) <= $c || ($a + $c) <= $b || ($b + $c) <= $a) {\n        return\
    \ -1;\n    }\n    $p = ($a + $b + $c) / 2;\n    $area = sqrt($p * ($p - $a) *\
    \ ($p - $b) * ($p - $c));\n    return number_format($area, 2);\n}\n", "    //\
    \ Write your code here\n    // To print results to the standard output you can\
    \ use print\n    // Example:\n    // print \"Hello world!\";\n    if ($a + $b\
    \ > $c && $a + $c > $b && $b + $c > $a) {\n        return round((sqrt(($a + $b\
    \ + $c) * ($a + $b - $c) * ($a + $c - $b) * ($b + $c - $a)) / 4), 2);\n    } else\
    \ {\n        return -1;\n    }\n}\n\necho triangle_area(3, 4, 5);", "    if (($a\
    \ + $b > $c) && ($a + $c > $b) && ($b + $c > $a)) {\n        $p = ($a + $b + $c)\
    \ / 2;\n        $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n        return\
    \ round($s, 2);\n    } else {\n        return -1;\n    }\n}\n", "  $valid_triangle\
    \ = false;\n  if (($a + $b) > $c && ($a + $c) > $b && ($b + $c) > $a) {\n    $valid_triangle\
    \ = true;\n  }\n  if ($valid_triangle) {\n    $p = ($a + $b + $c) / 2;\n    $a\
    \ = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n    return number_format($a,\
    \ 2);\n  } else {\n    return -1;\n  }\n}\necho 'triangle_area(3, 4, 5) ==> '\
    \ . triangle_area(3, 4, 5) . PHP_EOL;\necho 'triangle_area(1, 2, 10) ==> ' . triangle_area(1,\
    \ 2, 10) . PHP_EOL;\n\necho '--------------------------------' . PHP_EOL;\n",
  "\tif ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\treturn round(sqrt(($a\
    \ + $b + $c) * ($a + $b - $c) * ($a - $b + $c) * (-$a + $b + $c)) / 4, 2);\n\t\
    } else {\n\t\treturn -1;\n\t}\n}\necho triangle_area(3, 4, 5) . PHP_EOL;\necho\
    \ triangle_area(1, 2, 10) . PHP_EOL;\n", "    if($a <= 0 || $b <= 0 || $c <= 0)\
    \ {\n        return -1;\n    } else if($a + $b <= $c || $a + $c <= $b || $b +\
    \ $c <= $a) {\n        return -1;\n    } else {\n        $s = 0.5 * ($a + $b +\
    \ $c);\n        $area = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n      \
    \  return round($area, 2);\n    }\n}\n", "    $s = ($a + $b + $c) / 2;\n    if\
    \ ($a + $b > $c and $a + $c > $b and $b + $c > $a) {\n        return sqrt($s *\
    \ ($s - $a) * ($s - $b) * ($s - $c));\n    } else {\n        return -1;\n    }\n\
    }\necho triangle_area(3, 4, 5) . \"\\n\";\necho triangle_area(1, 2, 10) . \"\\\
    n\";", "\t$p = ($a + $b + $c) / 2;\n\tif($p - $a > 0 && $p - $b > 0 && $p - $c\
    \ > 0) {\n\t\treturn sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\t} else {\n\
    \t\treturn -1;\n\t}\n}\n\necho triangle_area(3, 4, 5) . \"\\n\";\necho triangle_area(1,\
    \ 2, 10) . \"\\n\";\n", "    $s = ($a + $b + $c) / 2;\n    if ($a + $b <= $c ||\
    \ $a + $c <= $b || $b + $c <= $a) {\n        return -1;\n    }\n    return round(sqrt($s\
    \ * ($s - $a) * ($s - $b) * ($s - $c)), 2);\n}", "    if ($a + $b > $c && $a +\
    \ $c > $b && $b + $c > $a) {\n        $p = ($a + $b + $c) / 2;\n        $area\
    \ = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n        return number_format($area,\
    \ 2);\n    } else {\n        return -1;\n    }\n}\n", "  if ($a + $b > $c && $a\
    \ + $c > $b && $b + $c > $a) {\n    $s = ($a + $b + $c) / 2;\n    $area = sqrt($s\
    \ * ($s - $a) * ($s - $b) * ($s - $c));\n    return round($area, 2);\n  } else\
    \ {\n    return -1;\n  }\n}\necho triangle_area(3, 4, 5);\necho \"\\n\";\necho\
    \ triangle_area(1, 2, 10);\necho \"\\n\";\n", "    if (($a + $b > $c) && ($a +\
    \ $c > $b) && ($b + $c > $a)) {\n        return round(sqrt(($a + $b + $c) * ($a\
    \ + $b - $c) * ($a - $b + $c) * (-$a + $b + $c)) / 4, 2);\n    } else {\n    \
    \    return -1;\n    }\n}\necho triangle_area(2, 3, 4);", "  if ($a + $b > $c\
    \ && $a + $c > $b && $b + $c > $a) {\n    return round(($a + $b + $c) / 2, 2);\n\
    \  } else {\n    return -1;\n  }\n}\n", "    $p = ($a + $b + $c) / 2;\n    if\
    \ ($p - $a < 0 || $p - $b < 0 || $p - $c < 0) {\n        return -1;\n    }\n \
    \   return sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n}\n\n$result = triangle_area(3,\
    \ 4, 5);\nif ($result === 6.0) {\n    echo \"Test passed!\\n\";\n} else {\n  \
    \  echo \"Test failed.\\n\";\n}\n\n$result = triangle_area(1, 2, 10);\nif ($result\
    \ === -1) {\n    echo \"Test passed!\\n\";\n} else {\n    echo \"Test failed.\\\
    n\";\n}", "    $r = -1;\n    if ($a > 0 && $b > 0 && $c > 0) {\n        $p = ($a\
    \ + $b + $c) / 2;\n        $r = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\
    \    }\n    return $r;\n}\necho \"Area of a triangle: \" . triangle_area(3, 4,\
    \ 5) . \"\\n\";\necho \"Area of a triangle: \" . triangle_area(1, 2, 10) . \"\\\
    n\";\n", "    if(($a+$b) > $c && ($a+$c) > $b && ($b+$c) > $a) {\n        return\
    \ round(($a+$b+$c)/2, 2);\n    }\n    return -1;\n}\necho triangle_area(3, 4,\
    \ 5) . \"\\n\";\necho triangle_area(1, 2, 10) . \"\\n\";", "  if (($a + $b > $c)\
    \ && ($a + $c > $b) && ($b + $c > $a)) {\n    $s = ($a + $b + $c) / 2;\n    $area\
    \ = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n    return round($area, 2);\n\
    \  } else {\n    return -1;\n  }\n}\n\necho triangle_area(3, 4, 5);\necho \"\\\
    n\";\necho triangle_area(1, 2, 10);\necho \"\\n\";\n", "  if ($a+$b>$c && $a+$c>$b\
    \ && $b+$c>$a) {\n    $p = ($a+$b+$c)/2;\n    $area = pow($p*($p-$a)*($p-$b)*($p-$c),\
    \ 0.5);\n    return round($area, 2);\n  } else {\n    return -1;\n  }\n}\n\n$triangle1\
    \ = triangle_area(3, 4, 5);\n$triangle2 = triangle_area(1, 2, 10);\n\necho \"\
    triangle_area(3, 4, 5) = $triangle1\".PHP_EOL;\necho \"triangle_area(1, 2, 10)\
    \ = $triangle2\".PHP_EOL;", "  $s = ($a + $b + $c) / 2;\n  if ($a + $b > $c &&\
    \ $a + $c > $b && $b + $c > $a) {\n    return round(sqrt($s * ($s - $a) * ($s\
    \ - $b) * ($s - $c)), 2);\n  } else {\n    return -1;\n  }\n}\n\nprint triangle_area(1,\
    \ 2, 10);\nprint \"\\n\";\nprint triangle_area(3, 4, 5);\nprint \"\\n\";\nprint\
    \ triangle_area(6, 7, 8);\nprint \"\\n\";\nprint triangle_area(1, 2, 3);\nprint\
    \ \"\\n\";\nprint triangle_area(3, 4, 2);\nprint \"\\n\";\nprint triangle_area(1,\
    \ 1, 1);\nprint \"\\n\";\nprint triangle_area(1, 2, 4);\nprint \"\\n\";", "  \
    \  $s = ($a + $b + $c) / 2;\n    $area = sqrt($s * ($s - $a) * ($s - $b) * ($s\
    \ - $c));\n    if ($area > 0) {\n        return round($area, 2);\n    } else {\n\
    \        return -1;\n    }\n}", "    // Your code here\n    if ($a + $b > $c &&\
    \ $a + $c > $b && $b + $c > $a) {\n        $p = ($a + $b + $c) / 2;\n        $area\
    \ = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n        return round($area,\
    \ 2);\n    } else {\n        return -1;\n    }\n}\nprint(triangle_area(3, 4, 5));\
    \ // 6.0\nprint(triangle_area(1, 2, 10)); // -1\nprint(triangle_area(8, 5, 4));\
    \ // -1\nprint(triangle_area(3, 4, 7)); // -1\nprint(triangle_area(6, 6, 6));\
    \ // 15.59\nprint(triangle_area(4, 4, 4)); // 10.39\nprint(triangle_area(4, 4,\
    \ 3)); // 4.8\nprint(triangle_area(4, 4, 5)); // 8.94\nprint(triangle_area(4,\
    \ 5, 4)); // 8.94\nprint(triangle_area(5, 4, 4)); // 8.94\nprint(triangle_area(2,\
    \ 3, 4)); // 2.9\nprint(triangle_area(2, 4, 3)); // 2.9\nprint(triangle_area(3,\
    \ 2, 4)); // 2.9\nprint(triangle_area(3, 4, 2)); // 2.9\nprint(triangle_area(4,\
    \ 2, 3)); // 2.9\nprint(triangle_area(4, 3, 2)); // 2.9\nprint(triangle_area(0,\
    \ 0, 0)); // -1\nprint(triangle_area(0, 0, 1)); // -1\nprint(triangle_area(0,\
    \ 1, 0)); // -1\nprint(triangle_area(1, 0, 0)); // -1\nprint(triangle_area(0,\
    \ 0, 2)); // -1\nprint(triangle_area(0, 2, 0)); // -1\nprint(triangle_area(2,\
    \ 0, 0)); // -", "  if (($a + $b) > $c && ($a + $c) > $b && ($b + $c) > $a) {\n\
    \    $s = ($a + $b + $c) / 2;\n    $area = sqrt($s * ($s - $a) * ($s - $b) * ($s\
    \ - $c));\n    return round($area, 2);\n  } else {\n    return -1;\n  }\n}\necho\
    \ triangle_area(3, 4, 5) . \"\\n\";\necho triangle_area(1, 2, 10) . \"\\n\";",
  "    if (($a + $b) > $c && ($a + $c) > $b && ($b + $c) > $a) {\n        $x = ($a\
    \ + $b + $c) / 2;\n        $area = sqrt($x * ($x - $a) * ($x - $b) * ($x - $c));\n\
    \        return round($area, 2);\n    } else {\n        return -1;\n    }\n}\n\
    echo triangle_area(3, 4, 5) . PHP_EOL;\necho triangle_area(1, 2, 10) . PHP_EOL;",
  "    if ($a < $b + $c && $b < $a + $c && $c < $a + $b) {\n        $s = ($a + $b\
    \ + $c) / 2;\n        return round(sqrt($s * ($s - $a) * ($s - $b) * ($s - $c)),\
    \ 2);\n    }\n    return -1;\n}\nprint_r(triangle_area(3, 4, 5));\necho \"\\n\"\
    ;\nprint_r(triangle_area(1, 2, 10));\necho \"\\n\";", "    $s = ($a + $b + $c)\
    \ / 2;\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        return\
    \ number_format(sqrt($s * ($s - $a) * ($s - $b) * ($s - $c)), 2);\n    } else\
    \ {\n        return -1;\n    }\n}\necho triangle_area(3, 4, 5);", "    $s = ($a\
    \ + $b + $c) / 2;\n    $area = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n\
    \    if ($area > 0) {\n        return round($area, 2);\n    } else {\n       \
    \ return -1;\n    }\n}\nprint triangle_area(3, 4, 5) . \"\\n\";\nprint triangle_area(1,\
    \ 2, 10) . \"\\n\";\nprint triangle_area(7, 8, 10) . \"\\n\";\n", "  if ($a +\
    \ $b <= $c || $a + $c <= $b || $b + $c <= $a) {\n    return -1;\n  } else {\n\
    \    $p = ($a + $b + $c) / 2;\n    $s = sqrt($p * ($p - $a) * ($p - $b) * ($p\
    \ - $c));\n    return round($s, 2);\n  }\n}\necho(triangle_area(3, 4, 5).\"\\\
    n\");\necho(triangle_area(1, 2, 10).\"\\n\");\n", "\tif(($a + $b > $c) && ($a\
    \ + $c > $b) && ($b + $c > $a)){\n\t\t$s = ($a + $b + $c) / 2;\n\t\t$area = sqrt($s\
    \ * ($s - $a) * ($s - $b) * ($s - $c));\n\t\treturn round($area, 2);\n\t}\n\t\
    else{\n\t\treturn -1;\n\t}\n}\necho triangle_area(3, 4, 5);\necho \"\\n\";\necho\
    \ triangle_area(1, 2, 10);\necho \"\\n\";", "  $s = ($a + $b + $c) / 2;\n  $area\
    \ = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n  if ($area > 0) {\n    return\
    \ round($area, 2);\n  } else {\n    return -1;\n  }\n}\necho triangle_area(3,\
    \ 4, 5);\necho \"\\n\";\necho triangle_area(1, 2, 10);\necho \"\\n\";", "\tif\
    \ (($a+$b > $c) && ($a+$c > $b) && ($b+$c > $a)) {\n\t\treturn ((sqrt(($a+$b+$c)*($a+$b-$c)*($a-$b+$c)*(-$a+$b+$c)))/4);\n\
    \t}\n\telse {\n\t\treturn -1;\n\t}\n}", "    if ($a <= 0 || $b <= 0 || $c <= 0)\
    \ {\n        return -1;\n    }\n    if ($a + $b > $c && $a + $c > $b && $b + $c\
    \ > $a) {\n        $p = ($a + $b + $c) / 2;\n        $area = sqrt($p * ($p - $a)\
    \ * ($p - $b) * ($p - $c));\n        return round($area, 2);\n    }\n    return\
    \ -1;\n}", "    if($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $s\
    \ = ($a + $b + $c) / 2;\n        $area = sqrt($s * ($s - $a) * ($s - $b) * ($s\
    \ - $c));\n        return round($area, 2);\n    } else {\n        return -1;\n\
    \    }\n}\n", "    // Calculate the area of the triangle\n    // Return the area\
    \ rounded to 2 decimal points\n    // Return -1 if the sum of any two sides is\
    \ less than or equal to the third side\n    if ($a + $b > $c && $a + $c > $b &&\
    \ $b + $c > $a) {\n        $s = ($a + $b + $c) / 2;\n        $area = sqrt($s *\
    \ ($s - $a) * ($s - $b) * ($s - $c));\n        return round($area, 2);\n    }\
    \ else {\n        return -1;\n    }\n}\n", "    if ($a + $b > $c && $a + $c >\
    \ $b && $b + $c > $a) {\n        $p = ($a + $b + $c) / 2;\n        $area = sqrt($p\
    \ * ($p - $a) * ($p - $b) * ($p - $c));\n        return number_format($area, 2);\n\
    \    } else {\n        return -1;\n    }\n}\necho triangle_area(3, 4, 5);", " \
    \ if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n    $perimeter = ($a +\
    \ $b + $c) / 2;\n    $area = sqrt($perimeter * ($perimeter - $a) * ($perimeter\
    \ - $b) * ($perimeter - $c));\n    return round($area, 2);\n  } else {\n    return\
    \ -1;\n  }\n}\necho triangle_area(3, 4, 5) . PHP_EOL;\necho triangle_area(1, 2,\
    \ 10) . PHP_EOL;", "    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\
    \        $s = ($a + $b + $c) / 2;\n        $area = sqrt($s * ($s - $a) * ($s -\
    \ $b) * ($s - $c));\n        return round($area, 2);\n    } else {\n        return\
    \ -1;\n    }\n}\necho triangle_area(3, 4, 5) . \"\\n\";\necho triangle_area(1,\
    \ 2, 10) . \"\\n\";\n", "  if ($a + $b <= $c) {\n    return -1;\n  }\n  if ($a\
    \ + $c <= $b) {\n    return -1;\n  }\n  if ($b + $c <= $a) {\n    return -1;\n\
    \  }\n  $s = ($a + $b + $c) / 2;\n  $area = sqrt($s * ($s - $a) * ($s - $b) *\
    \ ($s - $c));\n  return round($area, 2);\n}\n\necho(triangle_area(3, 4, 5) . \"\
    \\n\");\necho(triangle_area(1, 2, 10) . \"\\n\");\necho(triangle_area(8, 8, 8)\
    \ . \"\\n\");\necho(triangle_area(7, 10, 5) . \"\\n\");\necho(triangle_area(3,\
    \ 5, 7) . \"\\n\");\necho(triangle_area(10, 20, 30) . \"\\n\");\necho(triangle_area(3,\
    \ 3, 3) . \"\\n\");\necho(triangle_area(7, 4, 5) . \"\\n\");\necho(triangle_area(10,\
    \ 10, 10) . \"\\n\");\necho(triangle_area(11, 12, 12) . \"\\n\");", "\tif ($a\
    \ + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$s = ($a + $b + $c) / 2;\n\
    \t\t$area = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n\t\treturn number_format($area,\
    \ 2);\n\t} else {\n\t\treturn -1;\n\t}\n}\necho triangle_area(3, 4, 5);\necho\
    \ \"\\n\";\necho triangle_area(1, 2, 10);\necho \"\\n\";\necho triangle_area(50,\
    \ 70, 100);\necho \"\\n\";\necho triangle_area(0, 0, 0);\necho \"\\n\";", "  $s\
    \ = ($a + $b + $c) / 2;\n\n  if ($a + $b > $c && $a + $c > $b && $b + $c > $a)\
    \ {\n    return round(sqrt($s * ($s - $a) * ($s - $b) * ($s - $c)), 2);\n  } else\
    \ {\n    return -1;\n  }\n}\n", "  if (($a + $b) > $c and ($a + $c) > $b and ($b\
    \ + $c) > $a) {\n    return round(sqrt(($a + $b + $c) * ($a + $b - $c) * ($a -\
    \ $b + $c) * (-$a + $b + $c)) / 4, 2);\n  } else {\n    return -1;\n  }\n}\n",
  "    if($a > 0 && $b > 0 && $c > 0 && ($a + $b > $c && $a + $c > $b && $b + $c >\
    \ $a)) {\n        $s = ($a + $b + $c) / 2;\n        $area = sqrt($s * ($s - $a)\
    \ * ($s - $b) * ($s - $c));\n        return round($area, 2);\n    } else {\n \
    \       return -1;\n    }\n}\n\necho triangle_area(3, 4, 5) . \"\\n\";\necho triangle_area(1,\
    \ 2, 10) . \"\\n\";", "    // your code here\n}", "\t// enter code here\n\tif\
    \ ($a < 0 || $b < 0 || $c < 0) {\n\t\treturn -1;\n\t} else if ($a + $b > $c &&\
    \ $a + $c > $b && $b + $c > $a) {\n\t\t$s = ($a + $b + $c) / 2;\n\t\t$area = sqrt($s\
    \ * ($s - $a) * ($s - $b) * ($s - $c));\n\t\treturn $area;\n\t} else {\n\t\treturn\
    \ -1;\n\t}\n}\necho triangle_area(3, 4, 5);\necho \"\\n\";\necho triangle_area(1,\
    \ 2, 10);\necho \"\\n\";\necho triangle_area(10, 3, 3);\necho \"\\n\";\necho triangle_area(0,\
    \ 2, 1);\necho \"\\n\";\necho triangle_area(5, 0, 0);\necho \"\\n\";\necho triangle_area(0,\
    \ 0, 5);\necho \"\\n\";\necho triangle_area(0, 5, 0);\necho \"\\n\";\necho triangle_area(5,\
    \ 0, 5);\necho \"\\n\";\necho triangle_area(5, 5, 0);\necho \"\\n\";\necho triangle_area(5,\
    \ 5, 5);\necho \"\\n\";\necho triangle_area(3, 4, 8);\necho \"\\n\";\necho triangle_area(8,\
    \ 4, 3);\necho \"\\n\";\necho triangle_area(4, 8, 3);\necho \"\\n\";\necho triangle_area(1,\
    \ 1, 20);\necho \"\\n\";\necho triangle_area(20, 1, 1);\necho \"\\n\";\necho triangle_area(1,\
    \ 20, 1);\necho \"\\n\";\necho triangle_area(7, 7, 2);\necho \"\\n\";\necho triangle_area(7,\
    \ 2, 7);\necho \"\\n\";\necho triangle_area(2, 7, 7);\necho \"\\n\";\necho triangle_area(2,\
    \ 2, 8);\necho \"\\n\";\necho triangle_area(2, 8, 2);\necho \"\\n\";\necho triangle_area(8,\
    \ 2, 2);\necho \"\\n\";", "    $s = ($a + $b + $c) / 2;\n    $A = sqrt($s * ($s\
    \ - $a) * ($s - $b) * ($s - $c));\n    return $A;\n}\n", "    if (($a + $b) >\
    \ $c && ($a + $c) > $b && ($b + $c) > $a) {\n        $s = ($a + $b + $c) / 2;\n\
    \        $area = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n        return\
    \ round($area, 2);\n    } else {\n        return -1;\n    }\n}\n\nprint(triangle_area(3,\
    \ 4, 5));", "    if (($a + $b > $c) && ($a + $c > $b) && ($b + $c > $a)) {\n \
    \       $s = ($a + $b + $c) / 2;\n        $area = sqrt($s * ($s - $a) * ($s -\
    \ $b) * ($s - $c));\n        return round($area, 2);\n    } else {\n        return\
    \ -1;\n    }\n}\n\necho triangle_area(3, 4, 5) . PHP_EOL; // 6.0\necho triangle_area(1,\
    \ 2, 10) . PHP_EOL; // -1", "    if (($a + $b) > $c && ($a + $c) > $b && ($b +\
    \ $c) > $a) {\n        $p = ($a + $b + $c) / 2;\n        $result = $p * ($p -\
    \ $a) * ($p - $b) * ($p - $c);\n        return round(sqrt($result), 2);\n    }\
    \ else {\n        return -1;\n    }\n}\necho triangle_area(3, 4, 5) . \"\\n\"\
    ;\necho triangle_area(1, 2, 10) . \"\\n\";\necho \"\\n\";\n", "    if ($a+$b>$c\
    \ && $a+$c>$b && $b+$c>$a) {\n        $p = ($a+$b+$c)/2;\n        $s = sqrt($p*($p-$a)*($p-$b)*($p-$c));\n\
    \        return round($s, 2);\n    } else {\n        return -1;\n    }\n}\n\n\
    echo triangle_area(2, 3, 4).\"\\n\";\necho triangle_area(2, 3, 9).\"\\n\";\n",
  "    $s = ($a + $b + $c) / 2;\n    $area = sqrt($s * ($s - $a) * ($s - $b) * ($s\
    \ - $c));\n    if ($area == 0) {\n        return -1;\n    } else {\n        return\
    \ round($area, 2);\n    }\n}", "  if(($a + $b) < $c || ($a + $c) < $b || ($b +\
    \ $c) < $a) {\n    return -1;\n  }\n  $s = ($a + $b + $c) / 2;\n  $area = sqrt($s\
    \ * ($s - $a) * ($s - $b) * ($s - $c));\n  return round($area, 2);\n}\n\nprint_r(triangle_area(3,\
    \ 4, 5));", "    if(($a + $b) > $c && ($a + $c) > $b && ($b + $c) > $a) {\n  \
    \      return number_format(sqrt(($a + $b + $c) * ($a + $b - $c) * ($a - $b +\
    \ $c) * (-$a + $b + $c)) / 4, 2);\n    }\n    return -1;\n}\necho triangle_area(3,\
    \ 4, 5) . PHP_EOL;\necho triangle_area(1, 2, 10) . PHP_EOL;", "  if ($a < ($b\
    \ + $c) && $b < ($a + $c) && $c < ($a + $b)) {\n    $s = ($a + $b + $c) / 2;\n\
    \    $area = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n    return round($area,\
    \ 2);\n  } else {\n    return -1;\n  }\n}\necho triangle_area(3, 4, 5) . \"\\\
    n\";\necho triangle_area(1, 2, 10) . \"\\n\";\n", "    if (($a < ($b + $c)) &&\
    \ ($b < ($a + $c)) && ($c < ($a + $b))) {\n        $s = ($a + $b + $c) / 2;\n\
    \        $area = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n        return\
    \ round($area, 2);\n    } else {\n        return -1;\n    }\n}\necho triangle_area(3,\
    \ 4, 5) . \"\\n\";\necho triangle_area(1, 2, 10) . \"\\n\";\necho \"\\n\";", " \
    \ $is_valid = is_valid_triangle($a, $b, $c);\n  if ($is_valid) {\n    $s = ($a\
    \ + $b + $c) / 2;\n    $area = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n\
    \    return round($area, 2);\n  } else {\n    return -1;\n  }\n}\n", "\tif ($a\
    \ + $b <= $c) return -1;\n\tif ($a + $c <= $b) return -1;\n\tif ($b + $c <= $a)\
    \ return -1;\n\treturn $a * $b / 2;\n}\n", "    // TODO - Insert your code here\n\
    }", "    if (($a + $b) > $c && ($a + $c) > $b && ($b + $c) > $a) {\n        $s\
    \ = ($a + $b + $c) / 2;\n        $area = sqrt($s * ($s - $a) * ($s - $b) * ($s\
    \ - $c));\n        return round($area, 2);\n    } else {\n        return -1;\n\
    \    }\n}\n", "    if($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n      \
    \  $s = ($a + $b + $c) / 2;\n        $area = sqrt($s * ($s - $a) * ($s - $b) *\
    \ ($s - $c));\n        return number_format($area, 2);\n    } else {\n       \
    \ return -1;\n    }\n}\n\n$tests = [\n    [\n        3, 4, 5\n    ],\n    [\n\
    \        1, 2, 10\n    ],\n    [\n        50, 50, 50\n    ],\n    [\n        100,\
    \ 100, 100\n    ],\n    [\n        10, 10, 10\n    ],\n    [\n        2, 1, 2\n\
    \    ],\n    [\n        150, 150, 150\n    ],\n    [\n        3, 3, 3\n    ],\n\
    \    [\n        10, 5, 7\n    ],\n    [\n        7, 8, 9\n    ],\n    [\n    \
    \    5, 12, 13\n    ],\n    [\n        1, 2, 3\n    ],\n    [\n        1, 3, 2\n\
    \    ],\n    [\n        3, 2, 1\n    ],\n    [\n        100, 100, 100\n    ],\n\
    \    [\n        10, 10, 100\n    ],\n    [\n        15, 10, 10\n    ],\n    [\n\
    \        10, 15, 10\n    ],\n    [\n        10, 10, 15\n    ],\n    [\n      \
    \  40, 40, 40\n    ],\n    [\n        20, 20, 20\n    ],\n    [\n        1, 1,\
    \ 1\n    ],\n    [\n        50, 50, 51\n    ],\n    [\n        50, 51, 50\n  \
    \  ],\n    [\n        51, 50, 50\n    ],\n    [\n        30, 30, 30\n    ],\n\
    \    [\n        70, 70, 70\n    ],\n    [\n        5, 6, 7\n    ],\n    [\n  \
    \      10, 15, 25\n    ],\n    [\n        1, 10, 15\n    ],\n    [\n        1,\
    \ 10, 25\n", "    $s = ($a + $b + $c) / 2;\n    $area = sqrt($s * ($s - $a) *\
    \ ($s - $b) * ($s - $c));\n    if ( $area > 0 ) {\n        return number_format($area,\
    \ 2);\n    } else {\n        return -1;\n    }\n}\necho triangle_area(3, 4, 5);\n\
    echo \"\\n\";\necho triangle_area(1, 2, 10);\necho \"\\n\";\necho triangle_area(10,\
    \ 20, 30);\necho \"\\n\";\necho triangle_area(1, 20, 30);\necho \"\\n\";", " \
    \ if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n    return round((sqrt(pow($a,\
    \ 2) * pow($b, 2) * pow($c, 2)) / 4) * pow((pow($a, 2) + pow($b, 2) + pow($c,\
    \ 2)) / 4, 2), 2);\n  } else {\n    return -1;\n  }\n}\n\necho triangle_area(3,\
    \ 4, 5) . PHP_EOL;\necho triangle_area(1, 2, 10) . PHP_EOL;", "  if ($a + $b >\
    \ $c && $a + $c > $b && $b + $c > $a) {\n    return round(sqrt(pow($a, 2) + pow($b,\
    \ 2) - 2 * $a * $b * cos(deg2rad(60))), 2);\n  }\n  return -1;\n}\necho triangle_area(3,\
    \ 4, 5) . \"\\n\";\necho triangle_area(1, 2, 10) . \"\\n\";", "  if($a > $b +\
    \ $c || $b > $a + $c || $c > $a + $b) {\n    return -1;\n  }\n  else {\n    $s\
    \ = ($a + $b + $c) / 2;\n    $area = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n\
    \    return round($area, 2);\n  }\n}\necho 'triangle_area(3, 4, 5): ' . triangle_area(3,\
    \ 4, 5) . \"\\n\";\necho 'triangle_area(1, 2, 10): ' . triangle_area(1, 2, 10)\
    \ . \"\\n\";\n", "    $p = ($a + $b + $c) / 2;\n    if ($p - $a <= 0 || $p - $b\
    \ <= 0 || $p - $c <= 0) {\n        return -1;\n    }\n    return sqrt($p * ($p\
    \ - $a) * ($p - $b) * ($p - $c));\n}\n", "  $s = ($a + $b + $c) / 2;\n  if ($a\
    \ + $b <= $c || $a + $c <= $b || $b + $c <= $a) {\n    return -1;\n  }\n  return\
    \ sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n}\n\necho triangle_area(3, 4,\
    \ 5);\necho \"<br>\";\necho triangle_area(1, 2, 10);\necho \"<br>\";\necho triangle_area(1,\
    \ 3, 3);\necho \"<br>\";\necho triangle_area(2, 3, 3);\necho \"<br>\";\necho triangle_area(3,\
    \ 4, 5);", "    $p = ($a + $b + $c) / 2;\n    $area = sqrt($p * ($p - $a) * ($p\
    \ - $b) * ($p - $c));\n    return $area >= 0 ? round($area, 2) : -1;\n}\n", "\t\
    // Your code goes here.\n}\n", "    if ($a + $b > $c && $a + $c > $b && $b + $c\
    \ > $a) {\n        $s = ($a + $b + $c) / 2;\n        $area = sqrt($s * ($s - $a)\
    \ * ($s - $b) * ($s - $c));\n        return round($area, 2);\n    } else {\n \
    \       return -1;\n    }\n}\necho triangle_area(3, 4, 5) . \"\\n\";\necho triangle_area(1,\
    \ 2, 10) . \"\\n\";", "    if(($a + $b) > $c && ($a + $c) > $b && ($b + $c) >\
    \ $a) {\n        $p = ($a + $b + $c) / 2;\n        $area = sqrt($p * ($p - $a)\
    \ * ($p - $b) * ($p - $c));\n        return round($area, 2);\n    }\n    return\
    \ -1;\n}\n", "    $side_array = array($a, $b, $c);\n    sort($side_array);\n \
    \   $triangle_valid = ($side_array[0] + $side_array[1]) > $side_array[2];\n  \
    \  if($triangle_valid){\n        $s = ($a + $b + $c) / 2;\n        $area = sqrt($s\
    \ * ($s - $a) * ($s - $b) * ($s - $c));\n        return number_format($area, 2);\n\
    \    } else {\n        return -1;\n    }\n}\necho \"Area of Triangle is: \" .\
    \ triangle_area(3, 4, 5) . PHP_EOL;\necho \"Area of Triangle is: \" . triangle_area(1,\
    \ 2, 10) . PHP_EOL;", "    // Write your code here\n    // To print results to\
    \ the standard output you can use print\n    // Example:\n    // print \"Hello\
    \ world!\";\n    \n    $isValid = $a + $b > $c && $a + $c > $b && $b + $c > $a;\n\
    \    if ($isValid) {\n        $p = ($a + $b + $c) / 2;\n        $area = sqrt($p\
    \ * ($p - $a) * ($p - $b) * ($p - $c));\n        return round($area, 2);\n   \
    \ } else {\n        return -1;\n    }\n}", "\tif ($a + $b > $c && $a + $c > $b\
    \ && $b + $c > $a) {\n\t\t$p = ($a + $b + $c) / 2;\n\t\t$area = sqrt($p * ($p\
    \ - $a) * ($p - $b) * ($p - $c));\n\t\treturn round($area, 2);\n\t} else {\n\t\
    \treturn -1;\n\t}\n}\n\necho triangle_area(3, 4, 5); // 6.0\necho \"\\n\";\necho\
    \ triangle_area(1, 2, 10); // -1\necho \"\\n\";\n", "  $s = ($a + $b + $c) / 2;\n\
    \  if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n    return round(sqrt($s\
    \ * ($s - $a) * ($s - $b) * ($s - $c)), 2);\n  } else {\n    return -1;\n  }\n\
    }\n", "\tif ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$s = ($a + $b\
    \ + $c) / 2;\n\t\t$area = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n\t\t\
    return round($area, 2);\n\t} else {\n\t\treturn -1;\n\t}\n}\n\necho triangle_area(3,\
    \ 4, 5);\necho triangle_area(1, 2, 10);", "    $p = ($a + $b + $c) / 2;\n    $s\
    \ = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n    return $s;\n}\necho \"\
    <pre>\";\necho triangle_area(1, 2, 10);\necho \"</pre>\";", "    if (($a + $b)\
    \ > $c && ($a + $c) > $b && ($b + $c) > $a) {\n        $p = ($a + $b + $c) / 2;\n\
    \        $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n        return round($s,\
    \ 2);\n    } else {\n        return -1;\n    }\n}\n", "    $s = ($a + $b + $c)\
    \ / 2;\n\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        return\
    \ round(sqrt($s * ($s - $a) * ($s - $b) * ($s - $c)), 2);\n    } else {\n    \
    \    return -1;\n    }\n}\n\n$a = 3;\n$b = 4;\n$c = 5;\n\necho triangle_area($a,\
    \ $b, $c);", "    if(($a+$b > $c) && ($a+$c > $b) && ($b+$c > $a)) {\n       \
    \ $s = ($a+$b+$c)/2;\n        $area = sqrt($s*($s-$a)*($s-$b)*($s-$c));\n    \
    \    return round($area, 2);\n    }\n    return -1;\n}\necho \"Triangle area is:\
    \ \" . triangle_area(3, 4, 5) . \"\\n\";\necho \"Triangle area is: \" . triangle_area(1,\
    \ 2, 10) . \"\\n\";\n", "    $p = ($a + $b + $c) / 2;\n    $inner = $p * ($p -\
    \ $a) * ($p - $b) * ($p - $c);\n    if ($inner <= 0) {\n        return -1;\n \
    \   } else {\n        return number_format(sqrt($inner), 2);\n    }\n}\n", " \
    \   $s = ($a + $b + $c) / 2;\n    if ($a + $b > $c && $a + $c > $b && $b + $c\
    \ > $a) {\n        return round(sqrt($s * ($s - $a) * ($s - $b) * ($s - $c)),\
    \ 2);\n    } else {\n        return -1;\n    }\n}", "\t//get the sum of all sides\n\
    \t$sum = $a + $b + $c;\n\t//check the triangle rule\n\tif ($sum > $a && $sum >\
    \ $b && $sum > $c) {\n\t\t//formula for area of triangle\n\t\t$area = ($a * $b\
    \ * $c) / 2;\n\t\t//return rounded value of the area\n\t\treturn round($area,\
    \ 2);\n\t} else {\n\t\t//if the triangle rule is not followed\n\t\treturn -1;\n\
    \t}\n}\necho triangle_area(1, 2, 10);\necho \"\\n\";\necho triangle_area(3, 4,\
    \ 5);\necho \"\\n\";\necho triangle_area(4, 4, 3);\necho \"\\n\";\necho triangle_area(3,\
    \ 4, 4);\necho \"\\n\";\necho triangle_area(4, 3, 4);\necho \"\\n\";\necho triangle_area(4,\
    \ 3, 3);\necho \"\\n\";", "    // return -1 if the given three sides can not form\
    \ a triangle\n    if ($a + $b <= $c || $a + $c <= $b || $b + $c <= $a) {\n   \
    \     return -1;\n    }\n    // return triangle area if the given three sides\
    \ can form a triangle\n    return sqrt((($a + $b + $c) / 2) * (($a + $b + $c)\
    \ / 2 - $a) * (($a + $b + $c) / 2 - $b) * (($a + $b + $c) / 2 - $c));\n}\necho\
    \ triangle_area(1, 2, 3) . PHP_EOL;\necho triangle_area(3, 4, 5) . PHP_EOL;\n\
    echo triangle_area(1, 2, 10) . PHP_EOL;\n", "    $s = ($a + $b + $c) / 2;\n  \
    \  $area = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n    if ($area > 0) {\n\
    \        return round($area, 2);\n    } else {\n        return -1;\n    }\n}\n\
    \nif (triangle_area(3, 4, 5) == 6.0) {\n    echo \"Test 1 passed. <br>\";\n} else\
    \ {\n    echo \"Test 1 failed. <br>\";\n}\n\nif (triangle_area(1, 2, 10) == -1)\
    \ {\n    echo \"Test 2 passed. <br>\";\n} else {\n    echo \"Test 2 failed. <br>\"\
    ;\n}", "  if(($a + $b > $c) && ($a + $c > $b) && ($b + $c > $a)) {\n    return\
    \ round(sqrt((($a + $b + $c) / 2) * ((($a + $b + $c) / 2) - $a) * ((($a + $b +\
    \ $c) / 2) - $b) * ((($a + $b + $c) / 2) - $c)), 2);\n  } else {\n    return -1;\n\
    \  }\n}", "    $s = ($a + $b + $c) / 2;\n    $area = sqrt($s * ($s - $a) * ($s\
    \ - $b) * ($s - $c));\n    return $area ? round($area, 2) : -1;\n}\n", "    $abc\
    \ = array($a, $b, $c);\n    sort($abc);\n    $a = $abc[0];\n    $b = $abc[1];\n\
    \    $c = $abc[2];\n    if (($a + $b) > $c) {\n        $s = ($a + $b + $c) / 2;\n\
    \        $area = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n        return\
    \ round($area, 2);\n    } else {\n        return -1;\n    }\n}\n", "  $s = 0.5\
    \ * ($a + $b + $c);\n  $tri_area = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n\
    \  if ($tri_area > 0) {\n    return round($tri_area, 2);\n  } else {\n    return\
    \ -1;\n  }\n}", "    $s = ($a + $b + $c) / 2;\n    $area = sqrt($s * ($s - $a)\
    \ * ($s - $b) * ($s - $c));\n    if ($area) return $area;\n    return -1;\n}\n\
    $a = 3;\n$b = 4;\n$c = 5;\nvar_dump(triangle_area($a, $b, $c));\n$a = 1;\n$b =\
    \ 2;\n$c = 10;\nvar_dump(triangle_area($a, $b, $c));", "    // $a+$b>$c\n    //\
    \ $a+$c>$b\n    // $b+$c>$a\n    if($a+$b>$c && $a+$c>$b && $b+$c>$a){\n     \
    \   // s = (a+b+c)/2\n        // area = sqrt(s(s-a)(s-b)(s-c))\n        $s = ($a+$b+$c)/2;\n\
    \        $area = sqrt($s*($s-$a)*($s-$b)*($s-$c));\n        return round($area,\
    \ 2);\n    }\n    return -1;\n}", "    $s = ($a + $b + $c) / 2;\n    $area = sqrt($s\
    \ * ($s - $a) * ($s - $b) * ($s - $c));\n    return $area;\n}\n\nprint triangle_area(3,\
    \ 4, 5);", "    if (($a + $b) > $c && ($a + $c) > $b && ($b + $c) > $a) {\n  \
    \      return round(sqrt((($a + $b + $c) / 2) * ((($a + $b + $c) / 2) - $a) *\
    \ ((($a + $b + $c) / 2) - $b) * ((($a + $b + $c) / 2) - $c)), 2);\n    } else\
    \ {\n        return -1;\n    }\n}\necho triangle_area(3, 4, 5) . PHP_EOL;\necho\
    \ triangle_area(1, 2, 10) . PHP_EOL;\n", "    $s = ($a + $b + $c) / 2;\n    if\
    \ ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        return round(sqrt($s\
    \ * ($s - $a) * ($s - $b) * ($s - $c)), 2);\n    } else {\n        return -1;\n\
    \    }\n}", "    if (($a < $b + $c) && ($b < $a + $c) && ($c < $a + $b)) {\n \
    \       $p = ($a + $b + $c) / 2;\n        $s = sqrt($p * ($p - $a) * ($p - $b)\
    \ * ($p - $c));\n        return round($s, 2);\n    } else {\n        return -1;\n\
    \    }\n}\n", "  $s = ($a + $b + $c) / 2;\n  $area = sqrt($s * ($s - $a) * ($s\
    \ - $b) * ($s - $c));\n  if ($area > 0) {\n    return $area;\n  } else {\n   \
    \ return -1;\n  }\n}\necho triangle_area(3, 4, 5) . PHP_EOL;\necho triangle_area(1,\
    \ 2, 10) . PHP_EOL;", "\t$s = ($a + $b + $c) / 2;\n\tif ($s > $a && $s > $b &&\
    \ $s > $c) {\n\t\treturn round(sqrt($s * ($s - $a) * ($s - $b) * ($s - $c)), 2);\n\
    \t} else {\n\t\treturn -1;\n\t}\n}\n\necho \"triangle_area(3, 4, 5): \" . triangle_area(3,\
    \ 4, 5) . \"\\n\";\necho \"triangle_area(1, 2, 10): \" . triangle_area(1, 2, 10)\
    \ . \"\\n\";\necho \"triangle_area(100, 100, 100): \" . triangle_area(100, 100,\
    \ 100) . \"\\n\";\necho \"triangle_area(5, 4, 3): \" . triangle_area(5, 4, 3)\
    \ . \"\\n\";\necho \"triangle_area(3, 4, 0): \" . triangle_area(3, 4, 0) . \"\\\
    n\";\necho \"triangle_area(0, 0, 0): \" . triangle_area(0, 0, 0) . \"\\n\";\n\
    echo \"triangle_area(0, 1, 0): \" . triangle_area(0, 1, 0) . \"\\n\";\necho \"\
    triangle_area(0, 0, 1): \" . triangle_area(0, 0, 1) . \"\\n\";\necho \"triangle_area(0,\
    \ 1, 1): \" . triangle_area(0, 1, 1) . \"\\n\";\necho \"triangle_area(1, 0, 1):\
    \ \" . triangle_area(1, 0, 1) . \"\\n\";\necho \"triangle_area(1, 1, 0): \" .\
    \ triangle_area(1, 1, 0) . \"\\n\";\necho \"triangle_area(0, 0, 2): \" . triangle_area(0,\
    \ 0, 2) . \"\\n\";\necho \"triangle_area(0, 2, 0): \" . triangle_area(0, 2, 0)\
    \ . \"\\n\";\necho \"triangle_area(2, 0, 0): \" . triangle_area(2, 0, 0) . \"\\\
    n\";\necho", "    $s = ($a + $b + $c) / 2;\n    $area = sqrt($s * ($s - $a) *\
    \ ($s - $b) * ($s - $c));\n    if ($area <= 0) {\n        return -1;\n    }\n\
    \    return round($area, 2);\n}\n", "    if ($a + $b > $c && $a + $c > $b && $b\
    \ + $c > $a) {\n        $s = ($a + $b + $c) / 2;\n        $area = sqrt($s * ($s\
    \ - $a) * ($s - $b) * ($s - $c));\n        return round($area, 2);\n    } else\
    \ {\n        return -1;\n    }\n}", "    if (($a+$b) > $c) {\n        return $a*$b/2;\n\
    \    }\n    return -1;\n}", "  if($a+$b>$c && $a+$c>$b && $b+$c>$a){\n    $sp\
    \ = ($a+$b+$c)/2;\n    $area = sqrt($sp*($sp-$a)*($sp-$b)*($sp-$c));\n    return\
    \ $area;\n  }\n  else {\n    return -1;\n  }\n}\n\necho triangle_area(3, 4, 5)\
    \ . PHP_EOL;\necho triangle_area(1, 2, 10) . PHP_EOL;", "  $perimeter = $a + $b\
    \ + $c;\n  if ($perimeter - $a < $a || $perimeter - $b < $b || $perimeter - $c\
    \ < $c) {\n    return -1;\n  }\n  $p = $perimeter / 2;\n  $area = sqrt($p * ($p\
    \ - $a) * ($p - $b) * ($p - $c));\n  return number_format($area, 2);\n}\nprint_r(triangle_area(3,\
    \ 4, 5));\necho PHP_EOL;\nprint_r(triangle_area(1, 2, 10));\necho PHP_EOL;\n",
  "\tif(($a+$b) > $c && ($a+$c) > $b && ($b+$c) > $a) {\n\t\t$p = ($a+$b+$c)/2;\n\t\
    \t$area = sqrt($p*($p-$a)*($p-$b)*($p-$c));\n\t\treturn round($area, 2);\n\t}\n\
    \treturn -1;\n}\n\necho triangle_area(3, 4, 5) . \"\\n\";\necho triangle_area(1,\
    \ 2, 10) . \"\\n\";\n", "  $sides = [$a, $b, $c];\n  sort($sides);\n  $valid =\
    \ (function($a, $b, $c) {\n    return ($a + $b > $c) ? true : false;\n  })($sides[0],\
    \ $sides[1], $sides[2]);\n  if (!$valid) {\n    return -1;\n  }\n  $p = ($a +\
    \ $b + $c) / 2;\n  $area = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n  return\
    \ round($area, 2);\n}\n", "    if ($a + $b > $c && $a + $c > $b && $b + $c > $a)\
    \ {\n        $p = ($a + $b + $c) / 2;\n        $result = sqrt($p * ($p - $a) *\
    \ ($p - $b) * ($p - $c));\n        return round($result, 2);\n    } else {\n \
    \       return -1;\n    }\n}\necho triangle_area(1, 2, 10);\necho \"\\n\";\necho\
    \ triangle_area(3, 4, 5);\necho \"\\n\";", "    // Write your code here\n    //\
    \ To print results to the standard output you can use print\n    // Example:\n\
    \    // print \"Hello world!\";\n    if (($a + $b > $c) && ($a + $c > $b) && ($b\
    \ + $c > $a)){\n        $s = ($a + $b + $c) / 2;\n        $area = sqrt($s * ($s\
    \ - $a) * ($s - $b) * ($s - $c));\n        return round($area, 2);\n    }\n  \
    \  else {\n        return -1;\n    }\n}", "\t//$result = -1;\n\t//return $result;\n\
    }\n", "    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        return\
    \ round(($a + $b + $c) / 2, 2);\n    }\n    return -1;\n}\n", "\tif ($a + $b >\
    \ $c && $a + $c > $b && $b + $c > $a) {\n\t\t$p = ($a + $b + $c) / 2;\n\t\t$s\
    \ = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\t\treturn $s;\n\t} else {\n\
    \t\treturn -1;\n\t}\n}\n\necho triangle_area(3, 4, 5);\necho \"\\n\";\necho triangle_area(1,\
    \ 2, 10);\necho \"\\n\";", "\t$s = ($a + $b + $c) / 2;\n\tif ($s - $a < $c ||\
    \ $s - $b < $c || $s - $c < $a) {\n\t\treturn -1;\n\t}\n\t$area = sqrt($s * ($s\
    \ - $a) * ($s - $b) * ($s - $c));\n\treturn round($area, 2);\n}\n", "    $arr\
    \ = [$a, $b, $c];\n    sort($arr);\n    if ($arr[0] + $arr[1] > $arr[2]) {\n \
    \       $p = ($a + $b + $c) / 2;\n        return round(sqrt($p * ($p - $a) * ($p\
    \ - $b) * ($p - $c)), 2);\n    }\n    return -1;\n}\necho triangle_area(3, 4,\
    \ 5);", "    // Your code here\n}\necho triangle_area(3, 4, 5) . \"\\n\";\necho\
    \ triangle_area(1, 2, 10) . \"\\n\";", "  if ($a + $b <= $c) {\n    return -1;\n\
    \  } else if ($a + $c <= $b) {\n    return -1;\n  } else if ($b + $c <= $a) {\n\
    \    return -1;\n  } else {\n    $s = ($a + $b + $c) / 2;\n    $area = sqrt($s\
    \ * ($s - $a) * ($s - $b) * ($s - $c));\n    return number_format($area, 2);\n\
    \  }\n}\n\necho triangle_area(3, 4, 5) . \"\\n\";\necho triangle_area(1, 2, 10)\
    \ . \"\\n\";\necho triangle_area(3, 4, 6) . \"\\n\";\necho triangle_area(5, 12,\
    \ 13) . \"\\n\";", "\t// validate\n\tif ($a + $b > $c) {\n\t\t// heron's formula\n\
    \t\t$s = ($a + $b + $c) / 2;\n\t\t$area = sqrt($s * ($s - $a) * ($s - $b) * ($s\
    \ - $c));\n\t\treturn round($area, 2);\n\t} else {\n\t\treturn -1;\n\t}\n}\n\n\
    echo triangle_area(3, 4, 5);\necho \"\\n\";\necho triangle_area(1, 2, 10);\necho\
    \ \"\\n\";", "\n}\n", "    if (($a + $b) > $c) {\n        $s = ($a + $b + $c)\
    \ / 2;\n        $area = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n      \
    \  return round($area, 2);\n    } else {\n        return -1;\n    }\n}\n", "\t\
    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$s = ($a + $b + $c) /\
    \ 2;\n\t\t$area = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n\t\treturn round($area,\
    \ 2);\n\t}\n\treturn -1;\n}\n\necho triangle_area(3, 4, 5) . PHP_EOL;\necho triangle_area(1,\
    \ 2, 10) . PHP_EOL;", "\t$s = ($a + $b + $c) / 2;\n\tif (($a + $b > $c) && ($a\
    \ + $c > $b) && ($b + $c > $a)) {\n\t\treturn round(sqrt($s * ($s - $a) * ($s\
    \ - $b) * ($s - $c)), 2);\n\t} else {\n\t\treturn -1;\n\t}\n}\nprint(triangle_area(3,\
    \ 4, 5) . \"\\n\");\nprint(triangle_area(1, 2, 10) . \"\\n\");", "\tif($a+$b<=$c||$a+$c<=$b||$b+$c<=$a){\n\
    \t\treturn -1;\n\t}else{\n\t\t$p=($a+$b+$c)/2;\n\t\t$s=sqrt($p*($p-$a)*($p-$b)*($p-$c));\n\
    \t\treturn number_format($s,2,'.','');\n\t}\n}", "    // Your code here\n}\n",
  "\tif ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$s = ($a + $b + $c)\
    \ / 2;\n\t\t$area = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n\t\treturn\
    \ round($area, 2);\n\t} else {\n\t\treturn -1;\n\t}\n}\n\necho triangle_area(3,\
    \ 4, 5);\necho \"\\n\";\necho triangle_area(1, 2, 10);\necho \"\\n\";", "\tif\
    \ ($a <= 0 || $b <= 0 || $c <= 0) {\n\t\treturn -1;\n\t}\n\t$s = ($a + $b + $c)\
    \ / 2;\n\t$area = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n\treturn round($area,\
    \ 2);\n}\necho triangle_area(3, 4, 5) . \"\\n\";\necho triangle_area(1, 2, 10)\
    \ . \"\\n\";\n", "    // Write your code here\n    // To print results to the\
    \ standard output you can use print\n    // Example:\n    // print \"Hello world!\"\
    ;\n    return -1;\n}\n", "  if (($a + $b > $c) && ($a + $c > $b) && ($b + $c >\
    \ $a)) {\n    $s = ($a + $b + $c) / 2;\n    $area = sqrt($s * ($s - $a) * ($s\
    \ - $b) * ($s - $c));\n    return number_format($area, 2);\n  } else {\n    return\
    \ -1;\n  }\n}\n", "    if (($a + $b) > $c && ($a + $c) > $b && ($b + $c) > $a)\
    \ {\n        $p = ($a + $b + $c) / 2;\n        $x = $p * ($p - $a) * ($p - $b)\
    \ * ($p - $c);\n        $result = sqrt($x);\n        return round($result, 2);\n\
    \    } else {\n        return -1;\n    }\n}\n\necho triangle_area(3, 4, 5);\n\
    echo \"\\n\";\necho triangle_area(1, 2, 10);\necho \"\\n\";\necho triangle_area(3,\
    \ 4, 7);\necho \"\\n\";\necho triangle_area(7, 4, 3);\necho \"\\n\";\necho triangle_area(4,\
    \ 7, 3);\necho \"\\n\";\necho triangle_area(1, 2, 2);\necho \"\\n\";\necho triangle_area(1,\
    \ 1, 1);\necho \"\\n\";\necho triangle_area(2, 3, 4);\necho \"\\n\";\necho triangle_area(3,\
    \ 4, 5);\necho \"\\n\";\necho triangle_area(3, 4, 8);\necho \"\\n\";\necho triangle_area(8,\
    \ 4, 3);\necho \"\\n\";\necho triangle_area(4, 8, 3);\necho \"\\n\";\necho triangle_area(3,\
    \ 4, 10);\necho \"\\n\";\necho triangle_area(10, 4, 3);\necho \"\\n\";\necho triangle_area(4,\
    \ 10, 3);\necho \"\\n\";\necho triangle_area(3, 4, 11);\necho \"\\n\";\necho triangle_area(11,\
    \ 4, 3);\necho \"\\n\";\necho triangle_area(4, 11, 3);\necho \"\\n\";\necho triangle_area(3,\
    \ 4, 12);\necho \"\\n\";\necho triangle_area(12, 4, 3);\necho \"\\n\";\necho triangle_area(4,\
    \ 12, 3);\necho \"\\n\";\necho triangle_area(3, 4, 13);\necho \"\\n\";\necho triangle_area(13,\
    \ 4, 3);\necho \"\\n\";\necho triangle_area", "\t$s = ($a + $b + $c) / 2;\n\t\
    $area = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n\t\n\tif(is_nan($area))\
    \ {\n\t\treturn -1;\n\t}\n\treturn round($area, 2);\n}\n\necho 'given (3, 4, 5):\
    \ ' . triangle_area(3, 4, 5) . \"\\n\";\necho 'given (1, 2, 10): ' . triangle_area(1,\
    \ 2, 10) . \"\\n\";\n", "  $side_array = array($a, $b, $c);\n  sort($side_array);\n\
    \  $s = ($side_array[0] + $side_array[1] + $side_array[2]) / 2;\n  $area = sqrt($s\
    \ * ($s - $side_array[0]) * ($s - $side_array[1]) * ($s - $side_array[2]));\n\
    \  if ($area != 0) {\n    return round($area, 2);\n  } else {\n    return -1;\n\
    \  }\n}\necho triangle_area(3, 4, 5) . \"\\n\";\necho triangle_area(1, 2, 10)\
    \ . \"\\n\";\n", "  // ADD CODE HERE\n}\n", "   $s = ($a + $b + $c) / 2;\n   $area\
    \ = pow($s * ($s - $a) * ($s - $b) * ($s - $c), 0.5);\n   if ($area > 0) {\n \
    \     return round($area, 2);\n   } else {\n      return -1;\n   }\n}\n\nprint(triangle_area(3,\
    \ 4, 5) . \"\\n\"); // => 6.0\nprint(triangle_area(1, 2, 10) . \"\\n\"); // =>\
    \ -1", "    if ($a < $b + $c && $b < $a + $c && $c < $a + $b) {\n        return\
    \ round(($a + $b + $c) / 2, 2);\n    } else {\n        return -1;\n    }\n}\n",
  "  // CODING CHALLENGE\n\n  if(!(is_numeric($a) && is_numeric($b) && is_numeric($c)))\
    \ {\n    return -1;\n  }\n  $s = ($a + $b + $c) / 2;\n  $area = sqrt($s * ($s\
    \ - $a) * ($s - $b) * ($s - $c));\n  return round($area, 2);\n}\n\necho \"\\n\
    \ 1. Testing the triangle_area() function\";\nassert(triangle_area(3, 4, 5) ==\
    \ 6.0);\nassert(triangle_area(1, 2, 10) == -1);\nassert(triangle_area(\"3\", 4,\
    \ 5) == -1);\necho \"\\n The tests passed :)\";\n", "    $array = array($a, $b,\
    \ $c);\n    sort($array);\n    if ($array[0] + $array[1] > $array[2]) {\n    \
    \    return (1/2) * $array[0] * $array[1];\n    } else {\n        return -1;\n\
    \    }\n}", "  $s = ($a + $b + $c) / 2;\n  $area = sqrt($s * ($s - $a) * ($s -\
    \ $b) * ($s - $c));\n  return $area == 0 ? -1 : round($area, 2);\n}\n\necho triangle_area(3,\
    \ 4, 5);", "    $validate = function($a, $b, $c) {\n        if ($a + $b > $c &&\
    \ $a + $c > $b && $b + $c > $a) {\n            return true;\n        }\n     \
    \   return false;\n    };\n    if ($validate($a, $b, $c)) {\n        $s = ($a\
    \ + $b + $c) / 2;\n        $area = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n\
    \        return round($area, 2);\n    }\n    return -1;\n}\n", "    if (($a+$b>$c)\
    \ && ($a+$c>$b) && ($b+$c>$a)) {\n        $s = ($a+$b+$c)/2;\n        $area =\
    \ sqrt($s*($s-$a)*($s-$b)*($s-$c));\n        return round($area, 2);\n    } else\
    \ {\n        return -1;\n    }\n}\necho triangle_area(3, 4, 5);\necho '<br>';\n\
    echo triangle_area(1, 2, 10);", "    if (($a + $b > $c) && ($a + $c > $b) && ($b\
    \ + $c > $a)) {\n        $p = ($a + $b + $c) / 2;\n        $s = sqrt($p * ($p\
    \ - $a) * ($p - $b) * ($p - $c));\n        return round($s, 2);\n    } else {\n\
    \        return -1;\n    }\n}\n\necho triangle_area(3, 4, 5);", "  if ($a > $b\
    \ + $c || $b > $a + $c || $c > $a + $b) {\n    return -1;\n  } else {\n    $s\
    \ = ($a + $b + $c) / 2;\n    return round(sqrt($s * ($s - $a) * ($s - $b) * ($s\
    \ - $c)), 2);\n  }\n}\necho \"triangle_area(3, 4, 5): \" . triangle_area(3, 4,\
    \ 5) . \"\\n\";\necho \"triangle_area(1, 2, 10): \" . triangle_area(1, 2, 10)\
    \ . \"\\n\";", "\n}\n", "  $s = ($a + $b + $c) / 2;\n  $area = sqrt($s * ($s -\
    \ $a) * ($s - $b) * ($s - $c));\n  return $area > 0 ? number_format($area, 2)\
    \ : -1;\n}\n", "    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n    \
    \    $p = ($a + $b + $c) / 2;\n        $area = sqrt($p * ($p - $a) * ($p - $b)\
    \ * ($p - $c));\n        return number_format($area, 2);\n    } else {\n     \
    \   return -1;\n    }\n}\necho triangle_area(3, 4, 5);\necho \"\\n\";\necho triangle_area(1,\
    \ 2, 10);", "\tif ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$perimeter\
    \ = ($a + $b + $c) / 2;\n\t\t$area = sqrt($perimeter * ($perimeter - $a) * ($perimeter\
    \ - $b) * ($perimeter - $c));\n\t\treturn number_format($area, 2);\n\t} else {\n\
    \t\treturn -1;\n\t}\n}\n", "    if (($a + $b) > $c && ($a + $c) > $b && ($b +\
    \ $c) > $a) {\n        $p = ($a + $b + $c) / 2;\n        $result = sqrt($p * ($p\
    \ - $a) * ($p - $b) * ($p - $c));\n        return number_format($result, 2);\n\
    \    } else {\n        return -1;\n    }\n}\necho(triangle_area(1, 1, 4));", " \
    \ if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n    $s = ($a + $b + $c)\
    \ / 2;\n    $area = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n    return\
    \ round($area, 2);\n  } else {\n    return -1;\n  }\n}\necho triangle_area(3,\
    \ 4, 5) . \"\\n\";\necho triangle_area(1, 2, 10) . \"\\n\";", "\tif ($a + $b >\
    \ $c && $a + $c > $b && $b + $c > $a) {\n\t\t$p = ($a + $b + $c) / 2;\n\t\t$area\
    \ = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\t\treturn number_format($area,\
    \ 2);\n\t} else {\n\t\treturn -1;\n\t}\n}\n\n$a = triangle_area(3, 4, 5);\nvar_dump($a);\n\
    \n$b = triangle_area(1, 2, 10);\nvar_dump($b);", "  $s = ($a + $b + $c) / 2;\n\
    \n  if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n    return sqrt($s *\
    \ ($s - $a) * ($s - $b) * ($s - $c));\n  }\n  return -1;\n}\n\necho(triangle_area(3,\
    \ 4, 5));\necho(\"\\n\");\necho(triangle_area(1, 2, 10));\necho(\"\\n\");", " \
    \   if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $p = ($a + $b\
    \ + $c) / 2;\n        $area = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\
    \        return round($area, 2);\n    } else {\n        return -1;\n    }\n}",
  "    $s = ($a + $b + $c) / 2;\n    $area = sqrt($s * ($s - $a) * ($s - $b) * ($s\
    \ - $c));\n    return is_nan($area) ? -1 : round($area, 2);\n}\n", "    // write\
    \ your code here.\n    return -1;\n}\n", "    // >>> Your code here\n    if ($a\
    \ + $b > $c && $a + $c > $b && $b + $c > $a) {\n      $s = ($a + $b + $c) / 2;\n\
    \      $area = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n      return round($area,\
    \ 2);\n    }\n    return -1;\n}\n", "  $triangle_area = 0;\n  $triangle_area =\
    \ ($a + $b + $c) / 2;\n  return round(sqrt($triangle_area * ($triangle_area -\
    \ $a) * ($triangle_area - $b) * ($triangle_area - $c)), 2);\n}\necho triangle_area(1,\
    \ 1, 3);", "    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $s\
    \ = ($a + $b + $c) / 2;\n        $area = sqrt($s * ($s - $a) * ($s - $b) * ($s\
    \ - $c));\n        return round($area, 2);\n    } else {\n        return -1;\n\
    \    }\n}\n", "    $s = ( $a + $b + $c ) / 2;\n    if ( $s - $a > 0 && $s - $b\
    \ > 0 && $s - $c > 0 )\n        return round( sqrt( $s * ( $s - $a ) * ( $s -\
    \ $b ) * ( $s - $c ) ), 2 );\n    else\n        return -1;\n}\n\necho triangle_area(3,\
    \ 4, 5) . PHP_EOL;\necho triangle_area(1, 2, 10) . PHP_EOL;", "  $arr = array($a,\
    \ $b, $c);\n  sort($arr);\n  if($arr[0] + $arr[1] > $arr[2]) {\n    $s = ($a +\
    \ $b + $c) / 2;\n    return sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n  }\n\
    \  return -1;\n}\n", "    if (($a + $b) <= $c || ($a + $c) <= $b || ($b + $c)\
    \ <= $a) {\n        return -1;\n    } else {\n        $area = ($a * $b) / 2;\n\
    \        return round($area, 2);\n    }\n}\n", "\tif (($a + $b) > $c && ($a +\
    \ $c) > $b && ($b + $c) > $a) {\n\t\t$p = ($a + $b + $c) / 2;\n\t\t$area = sqrt($p\
    \ * ($p - $a) * ($p - $b) * ($p - $c));\n\t\treturn round($area, 2);\n\t}\n\t\
    return -1;\n}\n\necho triangle_area(3, 4, 5) . PHP_EOL;\necho triangle_area(1,\
    \ 2, 10) . PHP_EOL;", "\tif(is_numeric($a) && is_numeric($b) && is_numeric($c))\
    \ {\n\t\tif(($a + $b) > $c && ($a + $c) > $b && ($b + $c) > $a) {\n\t\t\t$s =\
    \ ($a + $b + $c) / 2;\n\t\t\t$area = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n\
    \t\t\treturn round($area, 2);\n\t\t}\n\t}\n\treturn -1;\n}\n", "    if($a < 0\
    \ || $b < 0 || $c < 0) {\n        return -1;\n    }\n    if($a + $b > $c && $a\
    \ + $c > $b && $b + $c > $a) {\n        $half_circumference = ($a + $b + $c) /\
    \ 2;\n        $s = $half_circumference * ($half_circumference - $a) * ($half_circumference\
    \ - $b) * ($half_circumference - $c);\n        return sqrt($s);\n    }\n    return\
    \ -1;\n}\necho triangle_area(3, 4, 5);\necho \"\\n\";\necho triangle_area(1, 2,\
    \ 10);\necho \"\\n\";", "  if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\
    \    return round(($a + $b + $c) / 2, 2);\n  } else {\n    return -1;\n  }\n}\n\
    echo triangle_area(3, 4, 5) . PHP_EOL;\necho triangle_area(1, 2, 10) . PHP_EOL;",
  "  if (($a + $b) <= $c) {\n    return -1;\n  }\n  else if (($a + $c) <= $b) {\n\
    \    return -1;\n  }\n  else if (($b + $c) <= $a) {\n    return -1;\n  }\n  else\
    \ {\n    $s = (($a + $b + $c) / 2);\n    $area = sqrt($s * ($s - $a) * ($s - $b)\
    \ * ($s - $c));\n    return round($area, 2);\n  }\n}\n", "    if ($a + $b > $c\
    \ && $a + $c > $b && $b + $c > $a) {\n        $p = ($a + $b + $c) / 2;\n     \
    \   $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n        return round($s,\
    \ 2);\n    } else {\n        return -1;\n    }\n}\necho triangle_area(3, 4, 5);\n\
    echo \"\\n\";\necho triangle_area(1, 2, 10);\necho \"\\n\";", "    if($a + $b\
    \ <= $c || $a + $c <= $b || $b + $c <= $a) {\n        return -1;\n    }\n    $s\
    \ = ($a + $b + $c) / 2;\n    return round(sqrt($s * ($s - $a) * ($s - $b) * ($s\
    \ - $c)), 2);\n}\n", "  if ($a > $b + $c || $b > $a + $c || $c > $a + $b) {\n\
    \    return -1;\n  }\n  $s = ($a + $b + $c) / 2;\n  return round(sqrt($s * ($s\
    \ - $a) * ($s - $b) * ($s - $c)), 2);\n}", "  if ($a > $b + $c || $b > $a + $c\
    \ || $c > $a + $b) {\n    return -1;\n  }\n  else {\n    $s = ($a + $b + $c) /\
    \ 2;\n    $area = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n    return round($area,\
    \ 2);\n  }\n}\n\nprint triangle_area(3, 4, 5);\nprint \"\\n\";\nprint triangle_area(1,\
    \ 2, 10);\nprint \"\\n\";", "  if ($a + $b > $c && $a + $c > $b && $b + $c > $a)\
    \ {\n    $p = ($a + $b + $c) / 2;\n    $s = sqrt($p * ($p - $a) * ($p - $b) *\
    \ ($p - $c));\n    return number_format($s, 2);\n  } else {\n    return -1;\n\
    \  }\n}\n\necho triangle_area(3, 4, 5) . \"\\n\";\necho triangle_area(1, 2, 10)\
    \ . \"\\n\";\n", "    // write your solution here...\n    $p = ($a + $b + $c)\
    \ / 2;\n    $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n    if ($s > 0)\
    \ {\n        return round($s, 2);\n    } else {\n        return -1;\n    }\n}\n\
    echo triangle_area(1, 2, 10);", "    $s = ($a + $b + $c) / 2;\n    $area = sqrt($s\
    \ * ($s - $a) * ($s - $b) * ($s - $c));\n    if ($area < 0) {\n        return\
    \ -1;\n    }\n    return round($area, 2);\n}\necho triangle_area(3, 4, 5) . \"\
    \\n\";\necho triangle_area(1, 2, 10) . \"\\n\";\n", "  // TODO: your code here\n\
    \  \n  if($a + $b <= $c || $a + $c <= $b || $b + $c <= $a){\n    return -1;\n\
    \  }\n  $s = ($a + $b + $c) / 2;\n  $area = sqrt($s * ($s - $a) * ($s - $b) *\
    \ ($s - $c));\n  return round($area, 2);\n}\necho triangle_area(3, 4, 5);\necho\
    \ \"\\n\";\necho triangle_area(1, 2, 10);\necho \"\\n\";", "    if(($a+$b)>$c\
    \ && ($a+$c)>$b && ($b+$c)>$a){\n        $s = ($a+$b+$c)/2;\n        $A = sqrt($s*($s-$a)*($s-$b)*($s-$c));\n\
    \        return round($A,2);\n    }else{\n        return -1;\n    }\n}", "  $sumab\
    \ = $a + $b;\n  $sumac = $a + $c;\n  $sumbc = $b + $c;\n  if ($sumab > $c && $sumac\
    \ > $b && $sumbc > $a) {\n    $s = ($a + $b + $c) / 2;\n    $area = sqrt($s *\
    \ ($s - $a) * ($s - $b) * ($s - $c));\n    return number_format($area, 2);\n \
    \ } else {\n    return -1;\n  }\n}\n\necho triangle_area(3, 4, 5) . PHP_EOL;\n\
    echo triangle_area(1, 2, 10) . PHP_EOL;", "\t$p = ($a + $b + $c) / 2;\n\t$A =\
    \ sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\tif(is_nan($A)) {\n\t\treturn\
    \ -1;\n\t}\n\treturn round($A, 2);\n}\n", "    $s = ($a + $b + $c) / 2;\n    if\
    \ ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        return sqrt($s * ($s\
    \ - $a) * ($s - $b) * ($s - $c));\n    } else {\n        return -1;\n    }\n}\n",
  "\tif ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\t\t$s = ($a + $b + $c)\
    \ / 2;\n\t\t$area = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n\t\treturn\
    \ number_format($area, 2);\n\t}\n\treturn -1;\n}\n\necho triangle_area(3, 4, 5);\n\
    echo triangle_area(1, 2, 10);", "    // Write your code here\n    // To print\
    \ results to the standard output you can use print\n    // Example:\n    // print\
    \ \"Hello world!\";\n    if($a < 0 || $b < 0 || $c < 0){\n    \treturn -1;\n \
    \   }\n    if(($a + $b > $c) && ($a + $c > $b) && ($b + $c > $a)){\n    \t$s =\
    \ ($a + $b + $c) / 2;\n    \t$area = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n\
    \    \treturn round($area, 2);\n    }\n    return -1;\n}\n\n$a = 4;\n$b = 5;\n\
    $c = 6;\necho triangle_area($a, $b, $c);", "\tif (($a + $b) > $c && ($a + $c)\
    \ > $b && ($b + $c) > $a) {\n\t\t$p = ($a + $b + $c) / 2;\n\t\t$result = sqrt($p\
    \ * ($p - $a) * ($p - $b) * ($p - $c));\n\t\treturn round($result, 2);\n\t}\n\t\
    return -1;\n}", "    $p = ($a + $b + $c) / 2;\n    $s = sqrt($p * ($p - $a) *\
    \ ($p - $b) * ($p - $c));\n    if ($s > 0) {\n        return round($s, 2);\n \
    \   } else {\n        return -1;\n    }\n}\n\n$result = triangle_area(3, 4, 5);\n\
    echo $result . \"\\n\";\n\n$result = triangle_area(1, 2, 10);\necho $result .\
    \ \"\\n\";\n", "\t$s = ($a + $b + $c) / 2;\n\t$area = sqrt($s * ($s - $a) * ($s\
    \ - $b) * ($s - $c));\n\tif ($area > 0) {\n\t\treturn round($area, 2);\n\t} else\
    \ {\n\t\treturn -1;\n\t}\n}", "    if ($a + $b > $c && $a + $c > $b && $b + $c\
    \ > $a) {\n        return round(($a + $b + $c) / 2, 2);\n    } else {\n      \
    \  return -1;\n    }\n}\necho triangle_area(3, 4, 5);\necho \"\\n\";\necho triangle_area(1,\
    \ 2, 10);\necho \"\\n\";", "    if($a + $b > $c && $a + $c > $b && $b + $c > $a)\
    \ {\n        $s = ($a + $b + $c) / 2;\n        $area = sqrt($s * ($s - $a) * ($s\
    \ - $b) * ($s - $c));\n        return round($area, 2);\n    } else {\n       \
    \ return -1;\n    }\n}\necho(triangle_area(1, 2, 10) . \"\\n\");\necho(triangle_area(3,\
    \ 4, 5) . \"\\n\");", "    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\
    \        $perimeter = ($a + $b + $c) / 2;\n        $area = sqrt($perimeter * ($perimeter\
    \ - $a) * ($perimeter - $b) * ($perimeter - $c));\n        return round($area,\
    \ 2);\n    } else {\n        return -1;\n    }\n}\n", "\tif (($a + $b) < $c) {\n\
    \t\treturn -1;\n\t} else if (($a + $c) < $b) {\n\t\treturn -1;\n\t} else if (($b\
    \ + $c) < $a) {\n\t\treturn -1;\n\t} else {\n\t\t$p = ($a + $b + $c) / 2;\n\t\t\
    $s = sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n\t\treturn round($s, 2);\n\
    \t}\n}\n\necho triangle_area(3, 4, 5) . \"\\n\";\necho triangle_area(1, 2, 10)\
    \ . \"\\n\";", "\t$valid = false;\n\tif($a + $b > $c && $a + $c > $b && $b + $c\
    \ > $a) {\n\t\t$valid = true;\n\t}\n\t\n\tif($valid) {\n\t\t$s = ($a + $b + $c)\
    \ / 2;\n\t\t$area = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n\t\treturn\
    \ round($area, 2);\n\t} else {\n\t\treturn -1;\n\t}\n}\n\necho triangle_area(3,\
    \ 4, 5) . \"\\n\";\necho triangle_area(1, 2, 10) . \"\\n\";", "    // valid triangle?\n\
    \    if($a < 0 || $b < 0 || $c < 0) {\n        return -1;\n    }\n    // valid\
    \ triangle?\n    if(($a + $b <= $c) || ($a + $c <= $b) || ($b + $c <= $a)) {\n\
    \        return -1;\n    }\n    // Heron's formula\n    $s = ($a + $b + $c) /\
    \ 2;\n    $A = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n    return round($A,\
    \ 2);\n}\n", "  $p = ($a + $b + $c) / 2;\n  if ($p > $a && $p > $b && $p > $c)\
    \ {\n    return sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n  } else {\n  \
    \  return -1;\n  }\n}\n\necho triangle_area(1, 2, 10);", "    if (($a + $b) >\
    \ $c && ($a + $c) > $b && ($b + $c) > $a) {\n        $s = ($a + $b + $c) / 2;\n\
    \        $area = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n        return\
    \ round($area, 2);\n    } else {\n        return -1;\n    }\n}", "  $sides = [$a,\
    \ $b, $c];\n  sort($sides);\n  // var_dump($sides);\n  if ($sides[0] + $sides[1]\
    \ <= $sides[2]) {\n    return -1;\n  } else {\n    $p = ($a + $b + $c) / 2;\n\
    \    return sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n  }\n}\n\necho \"\\\
    n---\\n\";\necho \"triangle_area(3, 4, 5) == 6: \";\necho triangle_area(3, 4,\
    \ 5) == 6 ? \"True\" : \"False\";\necho \"\\n\";\necho \"triangle_area(1, 2, 10)\
    \ == -1: \";\necho triangle_area(1, 2, 10) == -1 ? \"True\" : \"False\";\necho\
    \ \"\\n\";\necho \"triangle_area(3, 3, 5) == -1: \";\necho triangle_area(3, 3,\
    \ 5) == -1 ? \"True\" : \"False\";\necho \"\\n\";\necho \"triangle_area(3, 7,\
    \ 4) == 6: \";\necho triangle_area(3, 7, 4) == 6 ? \"True\" : \"False\";\necho\
    \ \"\\n\";\necho \"triangle_area(5, 4, 3) == 6: \";\necho triangle_area(5, 4,\
    \ 3) == 6 ? \"True\" : \"False\";\necho \"\\n\";\necho \"triangle_area(5, 4, 2)\
    \ == -1: \";\necho triangle_area(5, 4, 2) == -1 ? \"True\" : \"False\";\necho\
    \ \"\\n\";\necho \"triangle_area(10, 2, 1) == -1: \";\necho triangle_area(10,\
    \ 2, 1) == -1 ? \"True\" : \"False\";\necho \"\\n\";\necho \"triangle_area(3,\
    \ 4, 7) == -1: \";\necho triangle_area(3, 4, 7) == -1 ? \"True\" : \"False\";\n\
    echo \"\\n\";\necho \"triangle_area", "    $s = ($a + $b + $c) / 2;\n    $area\
    \ = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n    if(is_nan($area)) return\
    \ -1;\n    return round($area, 2);\n}\n", "  if ($a + $b > $c && $a + $c > $b\
    \ && $b + $c > $a) {\n    $s = ($a + $b + $c) / 2;\n    $area = sqrt($s * ($s\
    \ - $a) * ($s - $b) * ($s - $c));\n    return round($area, 2);\n  } else {\n \
    \   return -1;\n  }\n}", "\tif($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\
    \t\t$p = ($a + $b + $c) / 2;\n\t\t$s = sqrt($p * ($p - $a) * ($p - $b) * ($p -\
    \ $c));\n\t\treturn round($s, 2);\n\t}\n\treturn -1;\n}", "    // check if this\
    \ is a valid triangle\n    if($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n\
    \        // calculate area\n        $p = ($a + $b + $c) / 2;\n        $area =\
    \ sqrt($p * ($p - $a) * ($p - $b) * ($p - $c));\n        return round($area, 2);\n\
    \    } else {\n        return -1;\n    }\n}"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

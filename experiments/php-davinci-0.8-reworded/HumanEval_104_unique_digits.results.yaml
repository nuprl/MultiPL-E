language: php
name: HumanEval_104_unique_digits
results:
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $n) {\n        $digits = str_split($n);\n        $has_even = FALSE;\n\
    \        foreach ($digits as $digit) {\n            if ($digit % 2 == 0) {\n \
    \               $has_even = TRUE;\n                break;\n            }\n   \
    \     }\n        if (!$has_even) {\n            $result[] = $n;\n        }\n \
    \   }\n    sort($result);\n    return $result;\n}\necho \"Unique Digits\\n\";\n\
    $tests = [\n    [15, 33, 1422, 1],\n    [152, 323, 1422, 10],\n    [1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9],\n    [10, 12, 14, 16, 18, 20, 22, 24, 26],\n    [2, 4, 6, 8,\
    \ 10, 12, 14, 16, 18],\n    [1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9,\
    \ 9],\n    [10, 12, 14, 16, 18, 20, 22, 24, 26,\n     1, 1, 2, 2, 3, 3, 4, 4,\
    \ 5, 5, 6, 6, 7, 7, 8, 8, 9, 9],\n    [10, 12, 14, 16, 18, 20, 22, 24, 26,\n \
    \    2, 4, 6, 8, 10, 12, 14, 16, 18,\n     1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6,\
    \ 7, 7, 8, 8, 9, 9],\n];\nforeach ($tests as $test) {\n    echo \"Input: [\";\n\
    \    echo implode(\", \", $test);\n    echo \"]\\n\";\n    echo \"Output: [\"\
    ;\n    echo implode(\", \", unique_digits($test));\n    echo \"]\\n\";\n}\n\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'Unique Digits

    Input: [15, 33, 1422, 1]

    Output: [1, 15, 33]

    Input: [152, 323, 1422, 10]

    Output: []

    Input: [1, 2, 3, 4, 5, 6, 7, 8, 9]

    Output: [1, 3, 5, 7, 9]

    Input: [10, 12, 14, 16, 18, 20, 22, 24, 26]

    Output: []

    Input: [2, 4, 6, 8, 10, 12, 14, 16, 18]

    Output: []

    Input: [1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9]

    Output: [1, 1, 3, 3, 5, 5, 7, 7, 9, 9]

    Input: [10, 12, 14, 16, 18, 20, 22, 24, 26, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6,
    7, 7, 8, 8, 9, 9]

    Output: [1, 1, 3, 3, 5, 5, 7, 7, 9, 9]

    Input: [10, 12, 14, 16, 18, 20, 22, 24, 26, 2, 4, 6, 8, 10, 12, 14, 16, 18, 1,
    1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9]

    Output: [1, 1, 3, 3, 5, 5, 7, 7, 9, 9]

    '
  timestamp: 1659823299
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    // Fill this in\n    $count\
    \ = 0;\n    $ret = array();\n    foreach ($x as $val) {\n        $digit = $val;\n\
    \        while ($digit > 0) {\n            $remainder = $digit % 10;\n       \
    \     if ($remainder % 2 == 0) {\n                $count++;\n                break;\n\
    \            }\n            $digit = $digit / 10;\n        }\n        if ($count\
    \ == 0)\n            array_push($ret, $val);\n        $count = 0;\n    }\n   \
    \ sort($ret);\n    return $ret;\n}\n\nif (__FILE__ == $_SERVER['SCRIPT_FILENAME'])\
    \ {\n    print_r(unique_digits(array(15, 33, 1422, 1)));\n    print_r(unique_digits(array(152,\
    \ 323, 1422, 10)));\n}\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 1.5 to int loses precision\
    \ in /tmp/tmp8uqa9m38.php on line 17\n\nDeprecated: Implicit conversion from float\
    \ 0.15 to int loses precision in /tmp/tmp8uqa9m38.php on line 17\n\nDeprecated:\
    \ Implicit conversion from float 3.3 to int loses precision in /tmp/tmp8uqa9m38.php\
    \ on line 17\n\nDeprecated: Implicit conversion from float 0.32999999999999996\
    \ to int loses precision in /tmp/tmp8uqa9m38.php on line 17\n\nDeprecated: Implicit\
    \ conversion from float 0.1 to int loses precision in /tmp/tmp8uqa9m38.php on\
    \ line 17\nArray\n(\n)\n\nDeprecated: Implicit conversion from float 32.3 to int\
    \ loses precision in /tmp/tmp8uqa9m38.php on line 17\nArray\n(\n)\n\nDeprecated:\
    \ Implicit conversion from float 1.5 to int loses precision in /tmp/tmp8uqa9m38.php\
    \ on line 17\n\nDeprecated: Implicit conversion from float 0.15 to int loses precision\
    \ in /tmp/tmp8uqa9m38.php on line 17\n\nDeprecated: Implicit conversion from float\
    \ 3.3 to int loses precision in /tmp/tmp8uqa9m38.php on line 17\n\nDeprecated:\
    \ Implicit conversion from float 0.32999999999999996 to int loses precision in\
    \ /tmp/tmp8uqa9m38.php on line 17\n\nDeprecated: Implicit conversion from float\
    \ 0.1 to int loses precision in /tmp/tmp8uqa9m38.php on line 17\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmp8uqa9m38.php:41\nStack trace:\n\
    #0 /tmp/tmp8uqa9m38.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp8uqa9m38.php\
    \ on line 41\n"
  timestamp: 1659823299
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  if (empty($x)) {\n    return;\n\
    \  }\n  if (sizeof($x) == 1) {\n    return $x;\n  }\n  $result = array();\n  foreach\
    \ ($x as $number) {\n    $flag = checkEven($number);\n    if ($flag == 1) {\n\
    \      array_push($result, $number);\n    }\n  }\n  // sort in asscending order\n\
    \  sort($result);\n  return $result;\n}\n\nfunction candidate(...$args) {\n  \
    \  return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function checkEven() in\
    \ /tmp/tmpx61hum32.php:19\nStack trace:\n#0 /tmp/tmpx61hum32.php(30): unique_digits(Array)\n\
    #1 /tmp/tmpx61hum32.php(34): candidate(Array)\n#2 /tmp/tmpx61hum32.php(40): test()\n\
    #3 {main}\n  thrown in /tmp/tmpx61hum32.php on line 19\n"
  timestamp: 1659823299
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $i = 0;\n    foreach ($x\
    \ as $key => $value) {\n        if (strlen($value) === 1 && $value != 1) {\n \
    \           unset($x[$key]);\n        } elseif (strlen($value) === 2 && $value\
    \ != 1) {\n            if ($value % 2 === 0) {\n                unset($x[$key]);\n\
    \            }\n        } elseif (strlen($value) === 3 && $value != 1) {\n   \
    \         if ($value % 2 === 0) {\n                unset($x[$key]);\n        \
    \    } elseif ($value % 3 === 0) {\n                unset($x[$key]);\n       \
    \     }\n        } elseif (strlen($value) === 4 && $value != 1) {\n          \
    \  if ($value % 2 === 0) {\n                unset($x[$key]);\n            } elseif\
    \ ($value % 3 === 0) {\n                unset($x[$key]);\n            } elseif\
    \ ($value % 4 === 0) {\n                unset($x[$key]);\n            }\n    \
    \    } elseif (strlen($value) === 5 && $value != 1) {\n            if ($value\
    \ % 2 === 0) {\n                unset($x[$key]);\n            } elseif ($value\
    \ % 3 === 0) {\n                unset($x[$key]);\n            } elseif ($value\
    \ % 4 === 0) {\n                unset($x[$key]);\n            } elseif ($value\
    \ % 5 === 0) {\n                unset($x[$key]);\n            }\n        } elseif\
    \ (strlen($value) === 6 && $value != 1) {\n            if ($value % 2 === 0) {\n\
    \                unset($x[$key]);\n            } elseif ($value % 3 === 0) {\n\
    \                unset($x[$key]);\n            } elseif ($value % 4 === 0) {\n\
    \                unset($x[$key]);\n            } elseif ($value % 5 === 0) {\n\
    \                unset($x[$key]);\n            } elseif ($value % 6 === 0) {\n\
    \                unset($x[$key]);\n            }\n        } elseif (strlen($value)\
    \ === 7\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpf68_ei9v.php
    on line 56

    '
  timestamp: 1659823299
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\tforeach ($x as $value) {\n\
    \t\t$y = str_split($value);\n\t\tforeach ($y as $value) {\n\t\t\tif ($value%2\
    \ == 0) {\n\t\t\t\t$z[] = $value;\n\t\t\t}\n\t\t}\n\t}\n\treturn $z;\n}\necho\
    \ \"array(15, 33, 1422, 1)) => \";\nprint_r(unique_digits(array(15, 33, 1422,\
    \ 1)));\necho \"<br>\";\necho \"array(152, 323, 1422, 10)) => \";\nprint_r(unique_digits(array(152,\
    \ 323, 1422, 10)));\necho \"<br>\";\necho \"array(15, 33, 102, 1)) => \";\nprint_r(unique_digits(array(15,\
    \ 33, 102, 1)));\necho \"<br>\";\necho \"array(152, 323, 222, 10)) => \";\nprint_r(unique_digits(array(152,\
    \ 323, 222, 10)));\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "array(15, 33, 1422, 1)) => Array\n(\n    [0] => 4\n    [1] => 2\n    [2]\
    \ => 2\n)\n<br>array(152, 323, 1422, 10)) => Array\n(\n    [0] => 2\n    [1] =>\
    \ 2\n    [2] => 4\n    [3] => 2\n    [4] => 2\n    [5] => 0\n)\n<br>array(15,\
    \ 33, 102, 1)) => Array\n(\n    [0] => 0\n    [1] => 2\n)\n<br>array(152, 323,\
    \ 222, 10)) => Array\n(\n    [0] => 2\n    [1] => 2\n    [2] => 2\n    [3] =>\
    \ 2\n    [4] => 2\n    [5] => 0\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpb6re6lbn.php:37\nStack trace:\n#0 /tmp/tmpb6re6lbn.php(43): test()\n\
    #1 {main}\n  thrown in /tmp/tmpb6re6lbn.php on line 37\n"
  timestamp: 1659823299
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  // SOLUTION GOES HERE\n  return\
    \ array();\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplpnpxwcf.php:20\n\
    Stack trace:\n#0 /tmp/tmplpnpxwcf.php(26): test()\n#1 {main}\n  thrown in /tmp/tmplpnpxwcf.php\
    \ on line 20\n"
  timestamp: 1659823299
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $y = array();\n  foreach ($x\
    \ as $i) {\n    $z = unique_digits_helper($i);\n    if ($z != \"\") {\n      array_push($y,\
    \ $z);\n    }\n  }\n  sort($y);\n  return $y;\n}\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function unique_digits_helper()\
    \ in /tmp/tmp8kt1cy1_.php:13\nStack trace:\n#0 /tmp/tmp8kt1cy1_.php(22): unique_digits(Array)\n\
    #1 /tmp/tmp8kt1cy1_.php(26): candidate(Array)\n#2 /tmp/tmp8kt1cy1_.php(32): test()\n\
    #3 {main}\n  thrown in /tmp/tmp8kt1cy1_.php on line 13\n"
  timestamp: 1659823299
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $y = array();\n  $count =\
    \ 0;\n  foreach ($x as $key => $value) {\n    if ($value == 1 || $value == 3 ||\
    \ $value == 5 || $value == 7 || $value == 9) {\n      $y[$count] = $value;\n \
    \     $count = $count + 1;\n    }\n  }\n  return $y;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyk8xma4b.php:27\n\
    Stack trace:\n#0 /tmp/tmpyk8xma4b.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpyk8xma4b.php\
    \ on line 27\n"
  timestamp: 1659823299
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n}\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp24c5r7tv.php:17\n\
    Stack trace:\n#0 /tmp/tmp24c5r7tv.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp24c5r7tv.php\
    \ on line 17\n"
  timestamp: 1659823299
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    // Write your code here\n\
    }\nprint_r(unique_digits(array(152, 323, 1422, 10)));\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnx4eisd8.php:19\n\
    Stack trace:\n#0 /tmp/tmpnx4eisd8.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpnx4eisd8.php\
    \ on line 19\n"
  timestamp: 1659823299
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $out = array();\n    foreach\
    \ ($x as $v) {\n        if (stripos(strval($v), '2') === false && stripos(strval($v),\
    \ '4') === false && stripos(strval($v), '6') === false && stripos(strval($v),\
    \ '8') === false) {\n            $out[] = $v;\n        }\n    }\n    sort($out);\n\
    \    return $out;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgr14sp9_.php:27\n\
    Stack trace:\n#0 /tmp/tmpgr14sp9_.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpgr14sp9_.php\
    \ on line 27\n"
  timestamp: 1659823299
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $result = array();\n  foreach\
    \ ($x as $num) {\n    if (!has_even_digit($num)) {\n      $result[] = $num;\n\
    \    }\n  }\n  sort($result);\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function has_even_digit()\
    \ in /tmp/tmp598yuztf.php:13\nStack trace:\n#0 /tmp/tmp598yuztf.php(22): unique_digits(Array)\n\
    #1 /tmp/tmp598yuztf.php(26): candidate(Array)\n#2 /tmp/tmp598yuztf.php(32): test()\n\
    #3 {main}\n  thrown in /tmp/tmp598yuztf.php on line 13\n"
  timestamp: 1659823299
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$y = array();\n\tforeach ($x\
    \ as $i) {\n\t\tif(!preg_match('/[2468]/', $i)) {\n\t\t\t$y[] = $i;\n\t\t}\n\t\
    }\n\treturn $y;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptdq7p49j.php:25\n\
    Stack trace:\n#0 /tmp/tmptdq7p49j.php(31): test()\n#1 {main}\n  thrown in /tmp/tmptdq7p49j.php\
    \ on line 25\n"
  timestamp: 1659823299
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$final = array();\n\tforeach\
    \ ($x as $i => $v) {\n\t\t$y = str_split($v);\n\t\t$flag = 0;\n\t\tforeach ($y\
    \ as $i => $v) {\n\t\t\tif ($v%2==0) {\n\t\t\t\t$flag = 1;\n\t\t\t\tbreak;\n\t\
    \t\t}\n\t\t}\n\t\tif ($flag==0)\n\t\t\tarray_push($final, $v);\n\t}\n\treturn\
    \ $final;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphrg7uxso.php:32\n\
    Stack trace:\n#0 /tmp/tmphrg7uxso.php(38): test()\n#1 {main}\n  thrown in /tmp/tmphrg7uxso.php\
    \ on line 32\n"
  timestamp: 1659823299
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $i) {\n        $length = strlen($i);\n        $remainder = $i;\n    \
    \    $even = false;\n        for ($j = 0; $j < $length; $j++) {\n            $digit\
    \ = $remainder % 10;\n            if ($digit % 2 == 0) {\n                $even\
    \ = true;\n                break;\n            }\n            $remainder = ($remainder\
    \ - $digit) / 10;\n        }\n        if (!$even) {\n            $result[] = $i;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823299
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$len = count($x);\n\tfor ($i\
    \ = 0; $i < $len; $i++) {\n\t\t$str = strval($x[$i]);\n\t\tfor ($j = 0; $j < strlen($str);\
    \ $j++) {\n\t\t\tif ($str[$j] % 2 == 0) {\n\t\t\t\tunset($x[$i]);\n\t\t\t\tbreak;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn $x;\n}\n\n$x = array(152, 323, 1422, 10);\n$y =\
    \ unique_digits($x);\n\nprint_r($y);\n\nfunction candidate(...$args) {\n    return\
    \ unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm0qxlk78.php:34\n\
    Stack trace:\n#0 /tmp/tmpm0qxlk78.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpm0qxlk78.php\
    \ on line 34\n"
  timestamp: 1659823299
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t// your code here\n    for($i=0;$i<count($x);$i++){\n\
    \        if(strpos($x[$i],\"2\")==true || strpos($x[$i],\"4\")==true || strpos($x[$i],\"\
    6\")==true || strpos($x[$i],\"8\")==true){\n            $x[$i]=\"\";\n       \
    \ }\n    }\n    return array_values(array_filter($x));\n}\n\n$r = unique_digits(array(15,\
    \ 33, 1422, 1));\nprint_r($r);\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 15\n    [1] => 33\n    [2] => 1\n)\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmptwhp9nn7.php:27\nStack trace:\n\
    #0 /tmp/tmptwhp9nn7.php(33): test()\n#1 {main}\n  thrown in /tmp/tmptwhp9nn7.php\
    \ on line 27\n"
  timestamp: 1659823299
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$temp = [];\n\t$counter =\
    \ 0;\n\tfor ($i=0; $i < count($x); $i++) { \n\t\t$x[$i] = str_split($x[$i]);\n\
    \t\tfor ($j=0; $j < count($x[$i]); $j++) { \n\t\t\tif ($x[$i][$j] % 2 !== 0) {\n\
    \t\t\t\t$counter++;\n\t\t\t}\n\t\t}\n\t\tif ($counter === count($x[$i])) {\n\t\
    \t\t$temp[] = implode($x[$i]);\n\t\t}\n\t\t$counter = 0;\n\t}\n\tsort($temp);\n\
    \treturn $temp;\n}\nprint_r(unique_digits(array(15, 33, 1422, 1)));\necho '<br>';\n\
    print_r(unique_digits(array(152, 323, 1422, 10)));\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 15\n    [2] => 33\n)\n<br>Array\n(\n\
    )\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp75lo7e77.php:36\n\
    Stack trace:\n#0 /tmp/tmp75lo7e77.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp75lo7e77.php\
    \ on line 36\n"
  timestamp: 1659823299
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  return array_filter($x, function($i)\
    \ {\n    for (; $i; $i /= 10)\n      if (!($i % 10 % 2))\n        return false;\n\
    \    return true;\n  });\n}\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 1.5 to int loses precision\
    \ in /tmp/tmpnoctffgs.php on line 13\n\nDeprecated: Implicit conversion from float\
    \ 0.15 to int loses precision in /tmp/tmpnoctffgs.php on line 13\n\nDeprecated:\
    \ Implicit conversion from float 3.3 to int loses precision in /tmp/tmpnoctffgs.php\
    \ on line 13\n\nDeprecated: Implicit conversion from float 0.32999999999999996\
    \ to int loses precision in /tmp/tmpnoctffgs.php on line 13\n\nDeprecated: Implicit\
    \ conversion from float 0.1 to int loses precision in /tmp/tmpnoctffgs.php on\
    \ line 13\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnoctffgs.php:23\n\
    Stack trace:\n#0 /tmp/tmpnoctffgs.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpnoctffgs.php\
    \ on line 23\n"
  timestamp: 1659823299
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$ret = array();\n\tforeach\
    \ ($x as $num) {\n\t\tif (strpos(strval($num), '2') === false &&\n\t\t\tstrpos(strval($num),\
    \ '4') === false &&\n\t\t\tstrpos(strval($num), '6') === false &&\n\t\t\tstrpos(strval($num),\
    \ '8') === false &&\n\t\t\tstrpos(strval($num), '0') === false) {\n\t\t\t$ret[]\
    \ = $num;\n\t\t}\n\t}\n\treturn $ret;\n}\n\nfunction candidate(...$args) {\n \
    \   return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwhdd8ttd.php:29\n\
    Stack trace:\n#0 /tmp/tmpwhdd8ttd.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpwhdd8ttd.php\
    \ on line 29\n"
  timestamp: 1659823299
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t// hint: use a helper function\
    \ to determine if a given number has an even digit\n\t$result = array();\n\tforeach\
    \ ($x as $k => $v) {\n\t\tif (!has_even_digit($v))\n\t\t\t$result[] = $v;\n\t\
    }\n\tsort($result);\n\treturn $result;\n}\nfunction candidate(...$args) {\n  \
    \  return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function has_even_digit()\
    \ in /tmp/tmpew8l1llb.php:14\nStack trace:\n#0 /tmp/tmpew8l1llb.php(21): unique_digits(Array)\n\
    #1 /tmp/tmpew8l1llb.php(25): candidate(Array)\n#2 /tmp/tmpew8l1llb.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmpew8l1llb.php on line 14\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$array_unique_digits = array();\n\
    \tforeach ($x as $value) {\n\t\tif (strpos($value, '2') === false && strpos($value,\
    \ '4') === false && strpos($value, '6') === false && strpos($value, '8') === false)\
    \ {\n\t\t\tarray_push($array_unique_digits, $value);\n\t\t}\n\t}\n\tsort($array_unique_digits);\n\
    \treturn $array_unique_digits;\n}\n\n$x = array(15, 33, 1422, 1);\necho \"Given\
    \ an array of positive integers x. return a sorted array of all \nelements that\
    \ hasn't any even digit. \\nNote: Returned array should be sorted in increasing\
    \ order.\\nFor example:\\n>>> unique_digits(array(15, 33, 1422, 1))\\n\";\n$r\
    \ = unique_digits($x);\nprint_r($r);\necho \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Given an array of positive integers x. return a sorted array of all \n\
    elements that hasn't any even digit. \nNote: Returned array should be sorted in\
    \ increasing order.\nFor example:\n>>> unique_digits(array(15, 33, 1422, 1))\n\
    Array\n(\n    [0] => 1\n    [1] => 15\n    [2] => 33\n)\n\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpna48jx0m.php:34\nStack trace:\n#0 /tmp/tmpna48jx0m.php(39):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpna48jx0m.php on line 34\n"
  timestamp: 1659977959
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $i) {\n        $result[$i] = 1;\n    }\n    foreach ($x as $i)\
    \ {\n        $num = $i;\n        $found = false;\n        while ($num > 0) {\n\
    \            $digit = $num % 10;\n            if ($digit % 2 == 0) {\n       \
    \         unset($result[$i]);\n                $found = true;\n              \
    \  break;\n            }\n            $num = (int)($num / 10);\n        }\n  \
    \  }\n    ksort($result);\n    return array_keys($result);\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    return array_values(array_filter($x,\
    \ function($v) {\n        return !strstr($v, '2') && !strstr($v, '4') && !strstr($v,\
    \ '6') && !strstr($v, '8');\n    }));\n}\n\nprint_r(unique_digits(array(15, 33,\
    \ 1422, 1)));\nprint_r(unique_digits(array(152, 323, 1422, 10)));\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 15\n    [1] => 33\n    [2] => 1\n)\nArray\n(\n   \
    \ [0] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzyqk3cev.php:23\n\
    Stack trace:\n#0 /tmp/tmpzyqk3cev.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpzyqk3cev.php\
    \ on line 23\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    return array_filter($x,\
    \ function($item) {\n        if ($item == 0) return false;\n        while ($item)\
    \ {\n            if ($item % 2 == 0) return false;\n            $item /= 10;\n\
    \        }\n        return true;\n    });\n}\n\necho \"Assignment 3\\n\";\n$a\
    \ = array(15, 33, 1422, 1);\n$b = array(152, 323, 1422, 10);\nprint_r(unique_digits($a));\n\
    print_r(unique_digits($b));\necho \"\\n\";\n\nfunction candidate(...$args) {\n\
    \    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "Assignment 3\n\nDeprecated: Implicit conversion from float 1.5 to int loses\
    \ precision in /tmp/tmpupxxn5n_.php on line 14\n\nDeprecated: Implicit conversion\
    \ from float 0.15 to int loses precision in /tmp/tmpupxxn5n_.php on line 14\n\n\
    Deprecated: Implicit conversion from float 3.3 to int loses precision in /tmp/tmpupxxn5n_.php\
    \ on line 14\n\nDeprecated: Implicit conversion from float 0.32999999999999996\
    \ to int loses precision in /tmp/tmpupxxn5n_.php on line 14\n\nDeprecated: Implicit\
    \ conversion from float 0.1 to int loses precision in /tmp/tmpupxxn5n_.php on\
    \ line 14\nArray\n(\n)\n\nDeprecated: Implicit conversion from float 32.3 to int\
    \ loses precision in /tmp/tmpupxxn5n_.php on line 14\nArray\n(\n)\n\n\nDeprecated:\
    \ Implicit conversion from float 1.5 to int loses precision in /tmp/tmpupxxn5n_.php\
    \ on line 14\n\nDeprecated: Implicit conversion from float 0.15 to int loses precision\
    \ in /tmp/tmpupxxn5n_.php on line 14\n\nDeprecated: Implicit conversion from float\
    \ 3.3 to int loses precision in /tmp/tmpupxxn5n_.php on line 14\n\nDeprecated:\
    \ Implicit conversion from float 0.32999999999999996 to int loses precision in\
    \ /tmp/tmpupxxn5n_.php on line 14\n\nDeprecated: Implicit conversion from float\
    \ 0.1 to int loses precision in /tmp/tmpupxxn5n_.php on line 14\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpupxxn5n_.php:33\nStack trace:\n\
    #0 /tmp/tmpupxxn5n_.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpupxxn5n_.php\
    \ on line 33\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  // your code goes here...\n\
    }\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu6drnta8.php:18\n\
    Stack trace:\n#0 /tmp/tmpu6drnta8.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpu6drnta8.php\
    \ on line 18\n"
  timestamp: 1659977959
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\tforeach ($x as $k => $v) {\n\
    \t\t$x[$k] = (string)$v;\n\t}\n\t$result = array();\n\tforeach ($x as $k => $v)\
    \ {\n\t\t$char = str_split($v);\n\t\tforeach ($char as $c) {\n\t\t\tif ($c%2 ==\
    \ 0) {\n\t\t\t\tunset($x[$k]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tforeach\
    \ ($x as $k => $v) {\n\t\t$result[] = (int)$v;\n\t}\n\tsort($result);\n\treturn\
    \ $result;\n}\n\nprint_r(unique_digits(array(15, 33, 1422, 1)));\nprint_r(unique_digits(array(152,\
    \ 323, 1422, 10)));\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 15\n    [2] => 33\n)\nArray\n(\n)\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  // TODO: Implement me\n}\n\
    \nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp40yc7q8b.php:19\n\
    Stack trace:\n#0 /tmp/tmp40yc7q8b.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp40yc7q8b.php\
    \ on line 19\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $list = array();\n  foreach\
    \ ($x as $val) {\n    if (strlen($val) == 1) {\n      $list[] = $val;\n    } else\
    \ {\n      $has_even = false;\n      for ($i = 0; $i < strlen($val); $i++) {\n\
    \        if ($val[$i] % 2 == 0) {\n          $has_even = true;\n          break;\n\
    \        }\n      }\n      if (!$has_even) {\n        $list[] = $val;\n      }\n\
    \    }\n  }\n  sort($list);\n  return $list;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmp87rfwdte.php\
    \ on line 18\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmp87rfwdte.php on line 18\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmp87rfwdte.php on line 18\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp87rfwdte.php:37\nStack trace:\n#0 /tmp/tmp87rfwdte.php(43):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp87rfwdte.php on line 37\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $y = array();\n    foreach\
    \ ($x as $i) {\n        $t = $i % 10;\n        $i = $i / 10;\n        while ($i\
    \ > 0) {\n            if ($i % 10 % 2 == 0) {\n                break;\n      \
    \      }\n            $i = $i / 10;\n        }\n        if ($i == 0) {\n     \
    \       array_push($y, $t);\n        }\n    }\n    sort($y);\n    return $y;\n\
    }\nprint_r(unique_digits(array(15, 33, 1422, 1)));\necho \"\\n\";\nprint_r(unique_digits(array(152,\
    \ 323, 1422, 10)));\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 1.5 to int loses precision in /tmp/tmps54pyf06.php
    on line 16


    Deprecated: Implicit conversion from float 0.15 to int loses precision in /tmp/tmps54pyf06.php
    on line 16


    Deprecated: Implicit conversion from float 3.3 to int loses precision in /tmp/tmps54pyf06.php
    on line 16


    Deprecated: Implicit conversion from float 0.32999999999999996 to int loses precision
    in /tmp/tmps54pyf06.php on line 16


    Deprecated: Implicit conversion from float 142.2 to int loses precision in /tmp/tmps54pyf06.php
    on line 16


    Deprecated: Implicit conversion from float 0.1 to int loses precision in /tmp/tmps54pyf06.php
    on line 16

    Array

    (

    )



    Deprecated: Implicit conversion from float 15.2 to int loses precision in /tmp/tmps54pyf06.php
    on line 16


    Deprecated: Implicit conversion from float 1.52 to int loses precision in /tmp/tmps54pyf06.php
    on line 16


    Deprecated: Implicit conversion from float 0.152 to int loses precision in /tmp/tmps54pyf06.php
    on line 16


    Deprecated: Implicit conversion from float 32.3 to int loses precision in /tmp/tmps54pyf06.php
    on line 16


    Deprecated: Implicit conversion from float 142.2 to int loses precision in /tmp/tmps54pyf06.php
    on line 16


    Deprecated: Implicit conversion from float 0.1 to int loses precision in /tmp/tmps54pyf06.php
    on line 16

    Array

    (

    )


    Deprecated: Implicit conversion from float 1.5 to int loses precision in /tmp/tmps54pyf06.php
    on line 16


    Deprecated: Implicit conversion from float 0.15 to int loses precision in /tmp/tmps54pyf06.php
    on line 16


    Deprecated: Implicit conversion from float 3.3 to int loses precision in /tmp/tmps54pyf06.php
    on line 16


    Deprecated: Implicit conversion from float 0.32999999999999996 to int loses precision
    in /tmp/tmps54pyf06.php on line 16


    Deprecated: Implicit conversion from float 142.2 to int loses precision in /tmp/tmps54pyf06.php
    on line 16


    Deprecated: Implicit conversion from float 0.1 to int loses precision in /tmp/tmps54pyf06.php
    on line 16


    Fatal error: Uncaught Exception: Test failed! in /tmp/tmps54pyf06.php:36

    '
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $res = array();\n  foreach\
    \ ($x as $i) {\n    $test = true;\n    while ($i > 0) {\n      if (($i % 10) %\
    \ 2 == 0) {\n        $test = false;\n        break;\n      }\n      $i = floor($i\
    \ / 10);\n    }\n    if ($test) {\n      $res[] = $i;\n    }\n  }\n  sort($res);\n\
    \  return $res;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzy42im_1.php:34\n\
    Stack trace:\n#0 /tmp/tmpzy42im_1.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpzy42im_1.php\
    \ on line 34\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $number) {\n        $is_odd = true;\n        while ($number >\
    \ 0) {\n            $digit = $number % 10;\n            if ($digit % 2 == 0) {\n\
    \                $is_odd = false;\n                break;\n            }\n   \
    \         $number = $number / 10;\n        }\n        if ($is_odd) {\n       \
    \     $result[] = $number;\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 1.5 to int loses precision\
    \ in /tmp/tmp59mucgc8.php on line 15\n\nDeprecated: Implicit conversion from float\
    \ 0.15 to int loses precision in /tmp/tmp59mucgc8.php on line 15\n\nDeprecated:\
    \ Implicit conversion from float 3.3 to int loses precision in /tmp/tmp59mucgc8.php\
    \ on line 15\n\nDeprecated: Implicit conversion from float 0.32999999999999996\
    \ to int loses precision in /tmp/tmp59mucgc8.php on line 15\n\nDeprecated: Implicit\
    \ conversion from float 0.1 to int loses precision in /tmp/tmp59mucgc8.php on\
    \ line 15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp59mucgc8.php:35\n\
    Stack trace:\n#0 /tmp/tmp59mucgc8.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp59mucgc8.php\
    \ on line 35\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $newArray = [];\n    foreach\
    \ ($x as $value) {\n        if (str_split($value) % 2 != 0) {\n            array_push($newArray,\
    \ $value);\n        }\n    }\n    return $newArray;\n}\n\nprint_r(unique_digits(array(152,\
    \ 323, 1422, 10)));\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: array % int\
    \ in /tmp/tmpot5xjb2o.php:13\nStack trace:\n#0 /tmp/tmpot5xjb2o.php(20): unique_digits(Array)\n\
    #1 {main}\n  thrown in /tmp/tmpot5xjb2o.php on line 13\n"
  timestamp: 1659977959
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $result = array();\n  for\
    \ ($i = 0; $i < count($x); $i++) {\n    $num = $x[$i];\n    $has_even = false;\n\
    \    while ($num != 0) {\n      $remainder = $num % 10;\n      if ($remainder\
    \ % 2 == 0) {\n        $has_even = true;\n        break;\n      }\n      $num\
    \ = (int)($num / 10);\n    }\n    if (!$has_even) {\n      array_push($result,\
    \ $x[$i]);\n    }\n  }\n  sort($result);\n  return $result;\n}\n\n$x = array(15,\
    \ 33, 1422, 1);\necho implode(', ', unique_digits($x)) . PHP_EOL;\n\n$x = array(152,\
    \ 323, 1422, 10);\necho implode(', ', unique_digits($x)) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1, 15, 33


    '
  timestamp: 1659977959
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $return_array = array();\n\
    \    foreach ($x as $n) {\n        $num_str = strval($n);\n        $is_even =\
    \ false;\n        for ($i = 0; $i < strlen($num_str); $i++) {\n            if\
    \ ($num_str[$i] % 2 == 0) {\n                $is_even = true;\n              \
    \  break;\n            }\n        }\n        if (!$is_even) {\n            array_push($return_array,\
    \ $n);\n        }\n    }\n    sort($return_array);\n    return $return_array;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t// Write your code here...\n\
    \t$x = array_filter($x, function($element) {\n\t\t$e = str_split($element);\n\t\
    \treturn !in_array('2', $e) && !in_array('4', $e) && !in_array('6', $e) && !in_array('8',\
    \ $e);\n\t});\n\tsort($x);\n\treturn $x;\n}\necho json_encode(unique_digits(array(152,\
    \ 323, 1422, 10)));\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "[10]\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8t4nymqr.php:26\n\
    Stack trace:\n#0 /tmp/tmp8t4nymqr.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp8t4nymqr.php\
    \ on line 26\n"
  timestamp: 1659977959
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$result = array();\n\tfor\
    \ ($i = 0; $i < count($x); $i++) {\n\t\t$num = $x[$i];\n\t\t$is_odd = true;\n\t\
    \twhile ($num != 0) {\n\t\t\t$digit = $num % 10;\n\t\t\tif ($digit % 2 == 0) {\n\
    \t\t\t\t$is_odd = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t$num = (int)($num / 10);\n\
    \t\t}\n\t\tif ($is_odd) {\n\t\t\tarray_push($result, $x[$i]);\n\t\t}\n\t}\n\t\
    sort($result);\n\treturn $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977959
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$answer = array();\n\tforeach\
    \ ($x as $item) {\n\t\tif (preg_match('/[02468]/', $item) === 0) {\n\t\t\t$answer[]\
    \ = $item;\n\t\t}\n\t}\n\tsort($answer);\n\treturn $answer;\n}\necho implode(',\
    \ ', unique_digits(array(15, 33, 1422, 1)));\nfunction candidate(...$args) {\n\
    \    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: 1, 15, 33
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    $solution\
    \ = '';\n    foreach ($x as $num) {\n        $numToStr = (string)$num;\n     \
    \   $numToStrLen = strlen($numToStr);\n        for ($i = 0; $i < $numToStrLen;\
    \ $i++) {\n            if ($numToStr[$i] % 2 == 0) {\n                break;\n\
    \            } else {\n                $solution = $num;\n            }\n    \
    \    }\n        if ($solution) {\n            array_push($result, $solution);\n\
    \        }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n  \
    \  return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp36ge8lw9.php:34\n\
    Stack trace:\n#0 /tmp/tmp36ge8lw9.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp36ge8lw9.php\
    \ on line 34\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $result = array();\n  foreach\
    \ ($x as $value) {\n    $unique = true;\n    $str = strval($value);\n    for ($i\
    \ = 0; $i < strlen($str); $i++) {\n      if ($str[$i] % 2 == 0) {\n        $unique\
    \ = false;\n        break;\n      }\n    }\n    if ($unique) {\n      array_push($result,\
    \ $value);\n    }\n  }\n  return $result;\n}\nfunction candidate(...$args) {\n\
    \    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphr4tky8q.php:32\n\
    Stack trace:\n#0 /tmp/tmphr4tky8q.php(38): test()\n#1 {main}\n  thrown in /tmp/tmphr4tky8q.php\
    \ on line 32\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  // Insert code here\n}\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp12r3jugc.php:18\n\
    Stack trace:\n#0 /tmp/tmp12r3jugc.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp12r3jugc.php\
    \ on line 18\n"
  timestamp: 1659977959
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $result = array();\n  foreach\
    \ ($x as $value) {\n    $digits = str_split($value);\n    $even = false;\n   \
    \ foreach ($digits as $digit) {\n      if ($digit % 2 == 0) {\n        $even =\
    \ true;\n        break;\n      }\n    }\n    if (!$even) {\n      $result[] =\
    \ $value;\n    }\n  }\n  sort($result);\n  return $result;\n}\n\n$list = array(15,\
    \ 33, 1422, 1);\nprint_r(unique_digits($list));\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 15\n    [2] => 33\n)\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$l = count($x);\n\t$u = [];\n\
    \tfor ($i = 0; $i < $l; $i++) {\n\t\t$curr = $x[$i];\n\t\t$has_even = 0;\n\t\t\
    while ($curr) {\n\t\t\t$r = $curr % 10;\n\t\t\tif ($r % 2 == 0) {\n\t\t\t\t$has_even\
    \ = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t$curr = $curr / 10;\n\t\t}\n\t\tif (!$has_even)\
    \ {\n\t\t\t$u[] = $x[$i];\n\t\t}\n\t}\n\treturn $u;\n}\n$arr = array(15, 33, 1422,\
    \ 1);\nvar_dump(unique_digits($arr));\n$arr = array(152, 323, 1422, 10);\nvar_dump(unique_digits($arr));\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 1.5 to int loses precision\
    \ in /tmp/tmpw081ncef.php on line 17\n\nDeprecated: Implicit conversion from float\
    \ 0.15 to int loses precision in /tmp/tmpw081ncef.php on line 17\n\nDeprecated:\
    \ Implicit conversion from float 3.3 to int loses precision in /tmp/tmpw081ncef.php\
    \ on line 17\n\nDeprecated: Implicit conversion from float 0.32999999999999996\
    \ to int loses precision in /tmp/tmpw081ncef.php on line 17\n\nDeprecated: Implicit\
    \ conversion from float 0.1 to int loses precision in /tmp/tmpw081ncef.php on\
    \ line 17\narray(0) {\n}\n\nDeprecated: Implicit conversion from float 32.3 to\
    \ int loses precision in /tmp/tmpw081ncef.php on line 17\narray(0) {\n}\n\nDeprecated:\
    \ Implicit conversion from float 1.5 to int loses precision in /tmp/tmpw081ncef.php\
    \ on line 17\n\nDeprecated: Implicit conversion from float 0.15 to int loses precision\
    \ in /tmp/tmpw081ncef.php on line 17\n\nDeprecated: Implicit conversion from float\
    \ 3.3 to int loses precision in /tmp/tmpw081ncef.php on line 17\n\nDeprecated:\
    \ Implicit conversion from float 0.32999999999999996 to int loses precision in\
    \ /tmp/tmpw081ncef.php on line 17\n\nDeprecated: Implicit conversion from float\
    \ 0.1 to int loses precision in /tmp/tmpw081ncef.php on line 17\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpw081ncef.php:39\nStack trace:\n\
    #0 /tmp/tmpw081ncef.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpw081ncef.php\
    \ on line 39\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $arr = array();\n    foreach\
    \ ($x as $v) {\n        $str = (string)$v;\n        $found = false;\n        foreach\
    \ (str_split($str) as $c) {\n            if (is_even($c)) {\n                $found\
    \ = true;\n                break;\n            }\n        }\n        if (!$found)\
    \ {\n            $arr[] = $v;\n        }\n    }\n    sort($arr);\n    return $arr;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_even() in\
    \ /tmp/tmph8t06hag.php:16\nStack trace:\n#0 /tmp/tmph8t06hag.php(30): unique_digits(Array)\n\
    #1 /tmp/tmph8t06hag.php(34): candidate(Array)\n#2 /tmp/tmph8t06hag.php(40): test()\n\
    #3 {main}\n  thrown in /tmp/tmph8t06hag.php on line 16\n"
  timestamp: 1659977959
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $number) {\n        if (strlen($number) === 1) {\n            array_push($result,\
    \ $number);\n        } else {\n            $stringNumber = strval($number);\n\
    \            $containsEvenDigit = false;\n            for ($i = 0; $i < strlen($stringNumber);\
    \ $i++) {\n                if ($stringNumber[$i] === '0' || $stringNumber[$i]\
    \ === '2' || $stringNumber[$i] === '4' || $stringNumber[$i] === '6' || $stringNumber[$i]\
    \ === '8') {\n                    $containsEvenDigit = true;\n               \
    \     break;\n                }\n            }\n            if (!$containsEvenDigit)\
    \ {\n                array_push($result, $number);\n            }\n        }\n\
    \    }\n    sort($result);\n    return $result;\n}\nprint_r(unique_digits(array(15,\
    \ 33, 1422, 1)));\nprint_r(unique_digits(array(152, 323, 1422, 10)));\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 15\n    [2] => 33\n)\nArray\n(\n)\n"
  timestamp: 1659977959
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $even_digits = array(0,\
    \ 2, 4, 6, 8);\n    $array_to_return = array();\n    foreach ($x as $element)\
    \ {\n        $digit_array = array();\n        if (!is_int($element)) {\n     \
    \       continue;\n        }\n        if ($element == 0) {\n            $array_to_return[]\
    \ = $element;\n            continue;\n        }\n        $element_str = (string)$element;\n\
    \        $digit_array = str_split($element_str);\n        $count = 0;\n      \
    \  foreach ($digit_array as $digit) {\n            if (in_array($digit, $even_digits))\
    \ {\n                break;\n            }\n            $count++;\n        }\n\
    \        if ($count == count($digit_array)) {\n            $array_to_return[]\
    \ = $element;\n        }\n    }\n    sort($array_to_return);\n    return $array_to_return;\n\
    }\n\n$input = array(15, 33, 1422, 1);\nprint_r(unique_digits($input));\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 15\n    [2] => 33\n)\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t// $x = array(15, 33, 1422,\
    \ 1);\n\t$result = array();\n\tforeach ($x as $key => $val) {\n\t\t$curVal = $val;\n\
    \t\t$lastDigit = substr($curVal, -1);\n\t\tif ($lastDigit % 2 == 0) {\n\t\t\t\
    continue;\n\t\t}\n\t\telse {\n\t\t\t$result[] = $val;\n\t\t}\n\t}\n\tsort($result);\n\
    \treturn $result;\n}\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb3rui3dx.php:32\n\
    Stack trace:\n#0 /tmp/tmpb3rui3dx.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpb3rui3dx.php\
    \ on line 32\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\n}\n\nprint_r(unique_digits(array(15,\
    \ 33, 1422, 1)));\nprint_r(unique_digits(array(152, 323, 1422, 10)));\n\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpigicx3l8.php:22\n\
    Stack trace:\n#0 /tmp/tmpigicx3l8.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpigicx3l8.php\
    \ on line 22\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $key => $value) {\n        if (strpos($value, '2') === false\
    \ &&\n            strpos($value, '4') === false &&\n            strpos($value,\
    \ '6') === false &&\n            strpos($value, '8') === false &&\n          \
    \  strpos($value, '0') === false) {\n            $result[] = $value;\n       \
    \ }\n    }\n    asort($result);\n    return $result;\n}\necho 'unique_digits(array(15,\
    \ 33, 1422, 1)) : '.print_r(unique_digits(array(15, 33, 1422, 1)), true);\necho\
    \ 'unique_digits(array(152, 323, 1422, 10)) : '.print_r(unique_digits(array(152,\
    \ 323, 1422, 10)), true);\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "unique_digits(array(15, 33, 1422, 1)) : Array\n(\n    [2] => 1\n    [0]\
    \ => 15\n    [1] => 33\n)\nunique_digits(array(152, 323, 1422, 10)) : Array\n\
    (\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy8845b20.php:31\n\
    Stack trace:\n#0 /tmp/tmpy8845b20.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpy8845b20.php\
    \ on line 31\n"
  timestamp: 1659977959
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $r = array();\n  foreach ($x\
    \ as $a) {\n    if (!preg_match('/[02468]/', $a)) {\n      $r[] = $a;\n    }\n\
    \  }\n  sort($r);\n  return $r;\n}\nfunction candidate(...$args) {\n    return\
    \ unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977959
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $return = array();\n  foreach\
    \ ($x as $value) {\n    $even_digit = false;\n    $str = (string)$value;\n   \
    \ for ($i = 0; $i < strlen($str); $i++) {\n      if ((int)$str[$i] % 2 == 0) {\n\
    \        $even_digit = true;\n        break;\n      }\n    }\n    if (!$even_digit)\
    \ {\n      $return[] = $value;\n    }\n  }\n  sort($return);\n  return $return;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$evens = [0, 2, 4, 6, 8];\n\
    \t$odds = [1, 3, 5, 7, 9];\n\t$digits = [];\n\tforeach ($x as $num) {\n\t\t$string\
    \ = (string)$num;\n\t\t$all_odd = TRUE;\n\t\tforeach (str_split($string) as $digit)\
    \ {\n\t\t\tif (in_array($digit, $evens)) {\n\t\t\t\t$all_odd = FALSE;\n\t\t\t\
    }\n\t\t}\n\t\tif ($all_odd) {\n\t\t\t$digits[] = $num;\n\t\t}\n\t}\n\treturn sort($digits);\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkus7c_sv.php:34\n\
    Stack trace:\n#0 /tmp/tmpkus7c_sv.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpkus7c_sv.php\
    \ on line 34\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $value) {\n        if (!strpbrk($value, '02468')) {\n       \
    \     $result[] = $value;\n        }\n    }\n    sort($result);\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0qp2itaq.php:26\n\
    Stack trace:\n#0 /tmp/tmp0qp2itaq.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp0qp2itaq.php\
    \ on line 26\n"
  timestamp: 1659977959
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ $k = 0;\n    for ($i = 0; $i < count($x); $i++) {\n        $temp = $x[$i];\n\
    \        $j = 0;\n        while ($temp > 0) {\n            $digit = $temp % 10;\n\
    \            if ($digit % 2 == 0) {\n                $j = 1;\n               \
    \ break;\n            }\n            $temp = floor($temp / 10);\n        }\n \
    \       if ($j == 0) {\n            $result[$k] = $x[$i];\n            $k = $k\
    \ + 1;\n        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $digits = [];\n    foreach\
    \ ($x as $value) {\n        $digits[] = $value % 10;\n        $digits[] = floor($value\
    \ / 10) % 10;\n        $digits[] = floor($value / 100) % 10;\n        $digits[]\
    \ = floor($value / 1000) % 10;\n    }\n    $digits = array_unique($digits);\n\
    \    $digits = array_filter($digits, function($digit) {\n        return !is_even($digit);\n\
    \    });\n    return $digits;\n}\n\nfunction candidate(...$args) {\n    return\
    \ unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_even() in\
    \ /tmp/tmp3vxs8ymz.php:20\nStack trace:\n#0 [internal function]: {closure}(5)\n\
    #1 /tmp/tmp3vxs8ymz.php(21): array_filter(Array, Object(Closure))\n#2 /tmp/tmp3vxs8ymz.php(26):\
    \ unique_digits(Array)\n#3 /tmp/tmp3vxs8ymz.php(30): candidate(Array)\n#4 /tmp/tmp3vxs8ymz.php(36):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmp3vxs8ymz.php on line 20\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $unique_digits = [];\n \
    \   foreach ($x as $i) {\n        if (has_unique_digits($i)) {\n            $unique_digits[]\
    \ = $i;\n        }\n    }\n    sort($unique_digits);\n    return $unique_digits;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function has_unique_digits()\
    \ in /tmp/tmp1gmp5qpf.php:13\nStack trace:\n#0 /tmp/tmp1gmp5qpf.php(22): unique_digits(Array)\n\
    #1 /tmp/tmp1gmp5qpf.php(26): candidate(Array)\n#2 /tmp/tmp1gmp5qpf.php(32): test()\n\
    #3 {main}\n  thrown in /tmp/tmp1gmp5qpf.php on line 13\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = array();\n   \
    \ foreach ($x as $num) {\n        if (!has_even_digit($num)) {\n            $result[]\
    \ = $num;\n        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function has_even_digit()\
    \ in /tmp/tmpymbg8y85.php:13\nStack trace:\n#0 /tmp/tmpymbg8y85.php(22): unique_digits(Array)\n\
    #1 /tmp/tmpymbg8y85.php(26): candidate(Array)\n#2 /tmp/tmpymbg8y85.php(32): test()\n\
    #3 {main}\n  thrown in /tmp/tmpymbg8y85.php on line 13\n"
  timestamp: 1659977959
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$answer = array();\n\t$even_numbers\
    \ = array(0, 2, 4, 6, 8);\n\tforeach ($x as $number) {\n\t\t$isEven = FALSE;\n\
    \t\t$temp_number = $number;\n\t\twhile ($temp_number > 0) {\n\t\t\t$digit = $temp_number\
    \ % 10;\n\t\t\tif (in_array($digit, $even_numbers)) {\n\t\t\t\t$isEven = TRUE;\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t\t$temp_number = (int)($temp_number / 10);\n\t\t\
    }\n\t\tif (!$isEven) {\n\t\t\tarray_push($answer, $number);\n\t\t}\n\t}\n\tsort($answer);\n\
    \treturn $answer;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$res = array();\n\tforeach\
    \ ($x as $value) {\n\t\tif(!has_even_digit($value))\n\t\t\t$res[] = $value;\n\t\
    }\n\tsort($res);\n\treturn $res;\n}\n\nfunction candidate(...$args) {\n    return\
    \ unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function has_even_digit()\
    \ in /tmp/tmpiwwqdpus.php:13\nStack trace:\n#0 /tmp/tmpiwwqdpus.php(21): unique_digits(Array)\n\
    #1 /tmp/tmpiwwqdpus.php(25): candidate(Array)\n#2 /tmp/tmpiwwqdpus.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmpiwwqdpus.php on line 13\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    // Fill this in...\n}\n\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2dk4__if.php:19\n\
    Stack trace:\n#0 /tmp/tmp2dk4__if.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp2dk4__if.php\
    \ on line 19\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    foreach ($x as $n) {\n \
    \       if ($n < 10) {\n            $y[] = $n;\n        } else {\n           \
    \ $result = array_unique(str_split($n));\n            if (!in_array(0, $result)\
    \ && !in_array(2, $result) && !in_array(4, $result) && !in_array(6, $result) &&\
    \ !in_array(8, $result)) {\n                $y[] = $n;\n            }\n      \
    \  }\n    }\n    sort($y);\n    return $y;\n}\n\nprint_r(unique_digits(array(15,\
    \ 33, 1422, 1)));\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 15\n    [2] => 33\n)\n\nFatal error:\
    \ Uncaught TypeError: sort(): Argument #1 ($array) must be of type array, null\
    \ given in /tmp/tmpiouuxdei.php:21\nStack trace:\n#0 /tmp/tmpiouuxdei.php(21):\
    \ sort(NULL)\n#1 /tmp/tmpiouuxdei.php(27): unique_digits(Array)\n#2 /tmp/tmpiouuxdei.php(32):\
    \ candidate(Array)\n#3 /tmp/tmpiouuxdei.php(37): test()\n#4 {main}\n  thrown in\
    \ /tmp/tmpiouuxdei.php on line 21\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t// your code goes here!\n\
    }\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd1xji3he.php:18\n\
    Stack trace:\n#0 /tmp/tmpd1xji3he.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpd1xji3he.php\
    \ on line 18\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t// Your code here...\n}\n\n\
    print_r(unique_digits(array(15, 33, 1422, 1)));\necho \"\\n\";\nprint_r(unique_digits(array(152,\
    \ 323, 1422, 10)));\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return\
    \ unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpicijxkbh.php:24\n\
    Stack trace:\n#0 /tmp/tmpicijxkbh.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpicijxkbh.php\
    \ on line 24\n"
  timestamp: 1659977959
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$new = [];\n\t$len = count($x);\n\
    \tfor ($i = 0; $i < $len; $i++) {\n\t\t$check = str_split($x[$i]);\n\t\tif (in_array(0,\
    \ $check) || in_array(2, $check) || in_array(4, $check) || in_array(6, $check)\
    \ || in_array(8, $check)) {\n\t\t\tcontinue;\n\t\t} else {\n\t\t\tarray_push($new,\
    \ $x[$i]);\n\t\t}\n\t}\n\tsort($new);\n\treturn $new;\n}\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $y = [];\n  foreach ($x as\
    \ $num) {\n    if (strpos(strval($num), '2') === false && strpos(strval($num),\
    \ '4') === false && strpos(strval($num), '6') === false && strpos(strval($num),\
    \ '8') === false) {\n      $y[] = $num;\n    }\n  }\n  sort($y);\n  return $y;\n\
    }\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp964uoh26.php:26\n\
    Stack trace:\n#0 /tmp/tmp964uoh26.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp964uoh26.php\
    \ on line 26\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$uniqdigits = [];\n\tforeach\
    \ ($x as $num) {\n\t\tif (strpos($num, '2') === false && strpos($num, '4') ===\
    \ false && strpos($num, '6') === false && strpos($num, '8') === false) {\n\t\t\
    \t$uniqdigits[] = $num;\n\t\t}\n\t}\n\tsort($uniqdigits);\n\treturn $uniqdigits;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjeer7uak.php:27\n\
    Stack trace:\n#0 /tmp/tmpjeer7uak.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpjeer7uak.php\
    \ on line 27\n"
  timestamp: 1659977959
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $item) {\n        $str = (string)$item;\n        $isFound = false;\n\
    \        for ($i = 0; $i < strlen($str); $i++) {\n            if ((int)$str[$i]\
    \ % 2 === 0) {\n                $isFound = true;\n                break;\n   \
    \         }\n        }\n        if (!$isFound) {\n            $result[] = $item;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $has_even_digit = function($n)\
    \ {\n        $digits = str_split($n);\n        foreach ($digits as $digit) {\n\
    \            if ($digit % 2 == 0) {\n                return True;\n          \
    \  }\n        }\n        return False;\n    };\n    $filtered = array_filter($x,\
    \ $has_even_digit);\n    $filtered = array_values($filtered);\n    return $filtered;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm0z1bbd4.php:30\n\
    Stack trace:\n#0 /tmp/tmpm0z1bbd4.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpm0z1bbd4.php\
    \ on line 30\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  // write your solution here...\n\
    }\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj3k1o57n.php:18\n\
    Stack trace:\n#0 /tmp/tmpj3k1o57n.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpj3k1o57n.php\
    \ on line 18\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $res = array();\n  foreach\
    \ ($x as $val) {\n    $str = (string)$val;\n    if (strpos($str, '2') === false\
    \ &&\n        strpos($str, '4') === false &&\n        strpos($str, '6') === false\
    \ &&\n        strpos($str, '8') === false) {\n      $res[] = $val;\n    }\n  }\n\
    \  sort($res);\n  return $res;\n}\n\necho \"unique_digits(array(15, 33, 1422,\
    \ 1))\\n\";\nvar_dump(unique_digits(array(15, 33, 1422, 1)));\necho \"unique_digits(array(152,\
    \ 323, 1422, 10))\\n\";\nvar_dump(unique_digits(array(152, 323, 1422, 10)));\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "unique_digits(array(15, 33, 1422, 1))\narray(3) {\n  [0]=>\n  int(1)\n\
    \  [1]=>\n  int(15)\n  [2]=>\n  int(33)\n}\nunique_digits(array(152, 323, 1422,\
    \ 10))\narray(1) {\n  [0]=>\n  int(10)\n}\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp2owrymob.php:35\nStack trace:\n#0 /tmp/tmp2owrymob.php(40):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp2owrymob.php on line 35\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    return array_filter($x,\
    \ function($n) {\n        return $n == (int) str_replace(['2', '4', '6', '8',\
    \ '0'], '', $n);\n    });\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmqd1hkrt.php:21\n\
    Stack trace:\n#0 /tmp/tmpmqd1hkrt.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpmqd1hkrt.php\
    \ on line 21\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    // Place code here\n}\n\n\
    $a = array(152, 323, 1422, 10);\nvar_dump(unique_digits($a));\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "NULL\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpycyzs5k4.php:21\n\
    Stack trace:\n#0 /tmp/tmpycyzs5k4.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpycyzs5k4.php\
    \ on line 21\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  // Write your code here\n\
    }\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph_zm2a0l.php:18\n\
    Stack trace:\n#0 /tmp/tmph_zm2a0l.php(24): test()\n#1 {main}\n  thrown in /tmp/tmph_zm2a0l.php\
    \ on line 18\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $results = [];\n  foreach\
    \ ($x as $num) {\n    $string = strval($num);\n    if (strpos($string, '2') ===\
    \ false &&\n        strpos($string, '4') === false &&\n        strpos($string,\
    \ '6') === false &&\n        strpos($string, '8') === false) {\n      $results[]\
    \ = $num;\n    }\n  }\n  sort($results);\n  return $results;\n}\necho implode(\"\
    , \", unique_digits([15, 33, 1422, 1])) . \"\\n\";\necho implode(\", \", unique_digits([152,\
    \ 323, 1422, 10])) . \"\\n\";\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1, 15, 33\n10\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphb5j8oy5.php:32\n\
    Stack trace:\n#0 /tmp/tmphb5j8oy5.php(37): test()\n#1 {main}\n  thrown in /tmp/tmphb5j8oy5.php\
    \ on line 32\n"
  timestamp: 1659977959
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $ret = array();\n    foreach\
    \ ($x as $num) {\n        $chars = str_split($num);\n        $not_unique = False;\n\
    \        foreach ($chars as $c) {\n            if (($c % 2) == 0) {\n        \
    \        $not_unique = True;\n                break;\n            }\n        }\n\
    \        if (!$not_unique) {\n            $ret[] = $num;\n        }\n    }\n \
    \   sort($ret);\n    return $ret;\n}\n\nfunction candidate(...$args) {\n    return\
    \ unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $res = array();\n  foreach\
    \ ($x as $key => $value) {\n    if (!preg_match('/2|4|6|8/', $value)) {\n    \
    \  $res[] = $value;\n    }\n  }\n  return $res;\n}\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwr2wwzpx.php:24\n\
    Stack trace:\n#0 /tmp/tmpwr2wwzpx.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpwr2wwzpx.php\
    \ on line 24\n"
  timestamp: 1659977959
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\tforeach ($x as $key => $value)\
    \ {\n\t\t$string = (string)$value;\n\t\tforeach (str_split($string) as $char)\
    \ {\n\t\t\tif ((int)$char % 2 == 0) {\n\t\t\t\tunset($x[$key]);\n\t\t\t\tbreak;\n\
    \t\t\t}\n\t\t}\n\t}\n\tsort($x);\n\treturn $x;\n}\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977959
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $out = array();\n  foreach\
    \ ($x as $num) {\n    $found = FALSE;\n    $digits = (string)$num;\n    for ($i\
    \ = 0; $i < strlen($digits); $i++) {\n      if (intval($digits[$i]) % 2 == 0)\
    \ {\n        $found = TRUE;\n        break;\n      }\n    }\n    if (!$found)\
    \ $out[] = $num;\n  }\n  sort($out);\n  return $out;\n}\n\n$input = array(15,\
    \ 33, 1422, 1);\n$output = unique_digits($input);\nforeach ($output as $item)\
    \ {\n  echo \"$item\\n\";\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    15

    33

    '
  timestamp: 1659977959
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $even = array(0, 2, 4, 6,\
    \ 8);\n    $count = count($x);\n    $no_even = array();\n    for ($i = 0; $i <\
    \ $count; $i++) {\n        $num = $x[$i];\n        while ($num != 0) {\n     \
    \       $digit = $num % 10;\n            if (in_array($digit, $even)) {\n    \
    \            continue 2;\n            }\n            $num = (int)($num / 10);\n\
    \        }\n        $no_even[] = $x[$i];\n    }\n    sort($no_even);\n    return\
    \ $no_even;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $ev = array();\n    $ev1\
    \ = array();\n    for ($i = 0; $i < count($x); $i++) {\n        if ($x[$i] > 9)\
    \ {\n            $ev[$i] = $x[$i];\n        }\n    }\n    for ($i = 0; $i < count($ev);\
    \ $i++) {\n        $ev[$i] = str_split($ev[$i]);\n    }\n    for ($i = 0; $i <\
    \ count($ev); $i++) {\n        for ($j = 0; $j < count($ev[$i]); $j++) {\n   \
    \         if ($ev[$i][$j] % 2 != 0) {\n                if (!in_array($ev[$i][$j],\
    \ $ev1)) {\n                    $ev1[$i] = $ev[$i][$j];\n                }\n \
    \           }\n        }\n    }\n    return $ev1;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8vtcc513.php:38\n\
    Stack trace:\n#0 /tmp/tmp8vtcc513.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp8vtcc513.php\
    \ on line 38\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    if (!is_array($x)) {\n \
    \       return false;\n    }\n    //$even = 0;\n    $odd = array();\n    $even\
    \ = array();\n    foreach ($x as $key => $value) {\n        if ($value % 2 ==\
    \ 0) {\n            $even[] = $value;\n        } else {\n            $odd[] =\
    \ $value;\n        }\n    }\n    if (count($even) == 0) {\n        sort($odd);\n\
    \        return $odd;\n    } else {\n        return array();\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg9ef_7fm.php:37\n\
    Stack trace:\n#0 /tmp/tmpg9ef_7fm.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpg9ef_7fm.php\
    \ on line 37\n"
  timestamp: 1659977959
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  // YOUR CODE GOES HERE\n \
    \ $sorted = [];\n  for ($i = 0; $i < count($x); $i++) {\n    $temp = $x[$i];\n\
    \    $hasEven = False;\n    while ($temp > 0) {\n      $digit = $temp % 10;\n\
    \      if ($digit % 2 == 0) {\n        $hasEven = True;\n        break;\n    \
    \  }\n      $temp = floor($temp / 10);\n    }\n    if (!$hasEven) {\n      array_push($sorted,\
    \ $x[$i]);\n    }\n  }\n  sort($sorted);\n  return $sorted;\n}\n\nprint_r(unique_digits(array(15,\
    \ 33, 1422, 1)));\necho \"\\n\";\nprint_r(unique_digits(array(152, 323, 1422,\
    \ 10)));\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 15\n    [2] => 33\n)\n\nArray\n(\n)\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        if (strlen(strval($value)) <= 3) {\n            $result[]\
    \ = $value;\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcs_hhngl.php:24\n\
    Stack trace:\n#0 /tmp/tmpcs_hhngl.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpcs_hhngl.php\
    \ on line 24\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $y = [];\n    foreach ($x\
    \ as $value) {\n        $digits = str_split($value);\n        $is_even = False;\n\
    \        foreach ($digits as $digit) {\n            if ($digit % 2 == 0) {\n \
    \               $is_even = True;\n                break;\n            }\n    \
    \    }\n        if (!$is_even) {\n            $y[] = $value;\n        }\n    }\n\
    \    return $y;\n}\n$x = [15, 33, 1422, 1];\n$y = unique_digits($x);\nsort($y);\n\
    var_dump($y);\n$x = [152, 323, 1422, 10];\n$y = unique_digits($x);\nsort($y);\n\
    var_dump($y);\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "array(3) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(15)\n  [2]=>\n  int(33)\n\
    }\narray(0) {\n}\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprjf9ypqj.php:41\n\
    Stack trace:\n#0 /tmp/tmprjf9ypqj.php(47): test()\n#1 {main}\n  thrown in /tmp/tmprjf9ypqj.php\
    \ on line 41\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$result = array();\n\tforeach\
    \ ($x as $number) {\n\t\tif ($number < 10) {\n\t\t\tarray_push($result, $number);\n\
    \t\t} else {\n\t\t\t$number = (string)$number;\n\t\t\t$length = strlen($number);\n\
    \t\t\t$valid = true;\n\t\t\tfor ($i = 0; $i < $length; $i++) {\n\t\t\t\tif ($number[$i]\
    \ % 2 == 0) {\n\t\t\t\t\t$valid = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\
    }\n\t\t\tif ($valid) {\n\t\t\t\tarray_push($result, $number);\n\t\t\t}\n\t\t}\n\
    \t}\n\tsort($result);\n\treturn $result;\n}\nfunction candidate(...$args) {\n\
    \    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfpo5ia4x.php:38\n\
    Stack trace:\n#0 /tmp/tmpfpo5ia4x.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpfpo5ia4x.php\
    \ on line 38\n"
  timestamp: 1659977959
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$result = array();\n\tforeach\
    \ ($x as $value) {\n\t\t$str = strval($value);\n\t\t$has_even = false;\n\t\tfor\
    \ ($i = 0; $i < strlen($str); $i++) {\n\t\t\tif ($str[$i] % 2 == 0) {\n\t\t\t\t\
    $has_even = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!$has_even) {\n\t\t\
    \tarray_push($result, $value);\n\t\t}\n\t}\n\tsort($result);\n\treturn $result;\n\
    }\n\n$x = array(15, 33, 1422, 1);\n$y = array(152, 323, 1422, 10);\necho 'array(1,\
    \ 15, 33) = ';\nprint_r(unique_digits($x));\necho 'array() = ';\nprint_r(unique_digits($y));\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "array(1, 15, 33) = Array\n(\n    [0] => 1\n    [1] => 15\n    [2] => 33\n\
    )\narray() = Array\n(\n)\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $unique_digits = array();\n\
    \    $even_digits = array();\n    foreach ($x as $value) {\n        $value_array\
    \ = str_split($value);\n        if (array_intersect($value_array, $even_digits))\
    \ {\n            continue;\n        } else {\n            $unique_digits[] = $value;\n\
    \        }\n    }\n    return $unique_digits;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkdz23x69.php:29\n\
    Stack trace:\n#0 /tmp/tmpkdz23x69.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpkdz23x69.php\
    \ on line 29\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\tfor ($i = 0; $i < count($x);\
    \ $i++) {\n\t\tif (even_digit($x[$i])) {\n\t\t\tunset($x[$i]);\n\t\t}\n\t}\n\t\
    sort($x);\n\treturn $x;\n}\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function even_digit()\
    \ in /tmp/tmp75h8yo57.php:12\nStack trace:\n#0 /tmp/tmp75h8yo57.php(20): unique_digits(Array)\n\
    #1 /tmp/tmp75h8yo57.php(24): candidate(Array)\n#2 /tmp/tmp75h8yo57.php(30): test()\n\
    #3 {main}\n  thrown in /tmp/tmp75h8yo57.php on line 12\n"
  timestamp: 1659977959
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $evens = array(0, 2, 4,\
    \ 6, 8);\n    foreach ($x as $k => $v) {\n        $digits = str_split($v);\n \
    \       foreach ($digits as $d) {\n            if (in_array($d, $evens)) {\n \
    \               unset($x[$k]);\n                break;\n            }\n      \
    \  }\n    }\n    sort($x);\n    return $x;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977959
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $new_arr = [];\n    foreach\
    \ ($x as $number) {\n        $number_to_string = (string)$number;\n        $has_even_digit\
    \ = false;\n        for ($i = 0; $i < strlen($number_to_string); $i++) {\n   \
    \         if ($number_to_string[$i] % 2 == 0) {\n                $has_even_digit\
    \ = true;\n                break;\n            }\n        }\n        if (!$has_even_digit)\
    \ {\n            $new_arr[] = $number;\n        }\n    }\n    sort($new_arr);\n\
    \    return $new_arr;\n}\n\n$x = [15, 33, 1422, 1];\necho \"<pre>\";\nprint_r(unique_digits($x));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 15\n    [2] => 33\n)\n</pre>"
  timestamp: 1659977959
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$newArray = [];\n\tforeach\
    \ ($x as $value) {\n\t\tif (strlen(strval($value)) == 1) {\n\t\t\tarray_push($newArray,\
    \ $value);\n\t\t} else {\n\t\t\t$flag = true;\n\t\t\tfor ($i = 0; $i < strlen(strval($value));\
    \ $i++) {\n\t\t\t\tif (strval($value)[$i] % 2 == 0) {\n\t\t\t\t\t$flag = false;\n\
    \t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ($flag) {\n\t\t\t\tarray_push($newArray,\
    \ $value);\n\t\t\t}\n\t\t}\n\t}\n\tsort($newArray);\n\treturn $newArray;\n}\n\
    echo \"<pre>\";\nprint_r(unique_digits(array(10, 151, 23, 41, 55, 75, 123, 404,\
    \ 58, 149)));\necho \"</pre>\";\n\nfunction candidate(...$args) {\n    return\
    \ unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 55\n    [1] => 75\n    [2] => 151\n)\n</pre>"
  timestamp: 1659977959
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $unique_arr = [];\n    foreach\
    \ ($x as $value) {\n        if(preg_match(\"/^[13579]+$/\", $value)) {\n     \
    \       array_push($unique_arr, $value);\n        }\n    }\n    sort($unique_arr);\n\
    \    return $unique_arr;\n}\necho \"<pre>\";\nprint_r(unique_digits(array(15,\
    \ 33, 1422, 1)));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(unique_digits(array(152,\
    \ 323, 1422, 10)));\necho \"</pre>\";\nfunction candidate(...$args) {\n    return\
    \ unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 15\n    [2] => 33\n)\n</pre><pre>Array\n\
    (\n)\n</pre>"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    if(empty($x)) return;\n\
    \    $result = [];\n    foreach($x as $value) {\n        if(strpos($value, '2')\
    \ == false && strpos($value, '4') == false && strpos($value, '6') == false &&\
    \ strpos($value, '8') == false) {\n            $result[] = $value;\n        }\n\
    \    }\n    sort($result);\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwza9zg4r.php:27\n\
    Stack trace:\n#0 /tmp/tmpwza9zg4r.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpwza9zg4r.php\
    \ on line 27\n"
  timestamp: 1659977959
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $array = array();\n    for\
    \ ($i = 0; $i < count($x); $i++) {\n        $string = strval($x[$i]);\n      \
    \  $even = false;\n        for ($j = 0; $j < strlen($string); $j++) {\n      \
    \      if ($string[$j] == \"0\" || $string[$j] == \"2\" || $string[$j] == \"4\"\
    \ || $string[$j] == \"6\" || $string[$j] == \"8\") {\n                $even =\
    \ true;\n            }\n        }\n        if ($even == false) {\n           \
    \ array_push($array, $x[$i]);\n        }\n    }\n    sort($array);\n    return\
    \ $array;\n}\n\necho \"<pre>\";\nprint_r(unique_digits(array(15, 33, 1422, 1)));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(unique_digits(array(152, 323, 1422,\
    \ 10)));\necho \"</pre>\";\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 15\n    [2] => 33\n)\n</pre><pre>Array\n\
    (\n)\n</pre>"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $length = count($x);\n \
    \   for ($i = 0; $i < $length; $i++) {\n        $j = 0;\n        $flag = 0;\n\
    \        while ($x[$i] != 0) {\n            $mod = $x[$i] % 10;\n            if\
    \ ($mod % 2 == 0) {\n                $flag = 1;\n                break;\n    \
    \        }\n            $x[$i] = intval($x[$i] / 10);\n        }\n        if ($flag\
    \ == 1) {\n            unset($x[$i]);\n        }\n    }\n    sort($x);\n    return\
    \ $x;\n}\n\n$arr = array(152, 323, 1422, 10);\n$sorted_arr = unique_digits($arr);\n\
    print_r($sorted_arr);\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxh0fkpbo.php:39\n\
    Stack trace:\n#0 /tmp/tmpxh0fkpbo.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpxh0fkpbo.php\
    \ on line 39\n"
  timestamp: 1659977959
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$nums = array();\n\t$nums\
    \ = $x;\n\t$new = array();\n\tforeach ($nums as $num) {\n\t\t$digits = array();\n\
    \t\t$digits = str_split($num);\n\t\t$is_even = false;\n\t\tfor ($i = 0; $i < count($digits);\
    \ $i++) {\n\t\t\tif ($digits[$i] % 2 == 0) {\n\t\t\t\t$is_even = true;\n\t\t\t\
    }\n\t\t}\n\t\tif ($is_even == false) {\n\t\t\tarray_push($new, $num);\n\t\t}\n\
    \t}\n\tsort($new);\n\treturn $new;\n}\n\nfunction candidate(...$args) {\n    return\
    \ unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $y = array();\n    for ($i\
    \ = 0; $i < count($x); $i++) {\n        if (!is_even($x[$i])) {\n            array_push($y,\
    \ $x[$i]);\n        }\n    }\n    return $y;\n}\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_even() in\
    \ /tmp/tmp2nfohkty.php:13\nStack trace:\n#0 /tmp/tmp2nfohkty.php(20): unique_digits(Array)\n\
    #1 /tmp/tmp2nfohkty.php(24): candidate(Array)\n#2 /tmp/tmp2nfohkty.php(30): test()\n\
    #3 {main}\n  thrown in /tmp/tmp2nfohkty.php on line 13\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2noc7691.php:18\n\
    Stack trace:\n#0 /tmp/tmp2noc7691.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2noc7691.php\
    \ on line 18\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $odds = array();\n    $evens\
    \ = array();\n    foreach ($x as $n) {\n        if ($n % 2 == 0) {\n         \
    \   $evens[] = $n;\n        } else {\n            $odds[] = $n;\n        }\n \
    \   }\n    return array_diff($odds, $evens);\n}\nprint_r(unique_digits(array(15,\
    \ 33, 1422, 1)));\nprint_r(unique_digits(array(152, 323, 1422, 10)));\n\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 15\n    [1] => 33\n    [2] => 1\n)\nArray\n(\n   \
    \ [0] => 323\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0w_h1hx2.php:30\n\
    Stack trace:\n#0 /tmp/tmp0w_h1hx2.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp0w_h1hx2.php\
    \ on line 30\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $is_odd = function($element)\
    \ {\n    $sum = 0;\n    for ($i = 0; $i < strlen($element); $i++) {\n      $sum\
    \ += $element[$i];\n    }\n    return ($sum % 2 == 0);\n  };\n  $filtered = array_filter($x,\
    \ $is_odd);\n  $diff = array_diff($x, $filtered);\n  sort($diff);\n  return $diff;\n\
    }\necho '<pre>';\nvar_dump(unique_digits(array(15, 33, 1422, 1)));\nvar_dump(unique_digits(array(152,\
    \ 323, 1422, 10)));\necho '</pre>';\nfunction candidate(...$args) {\n    return\
    \ unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: '<pre>

    Warning: Trying to access array offset on value of type int in /tmp/tmpu00s3q_j.php
    on line 14


    Warning: Trying to access array offset on value of type int in /tmp/tmpu00s3q_j.php
    on line 14


    Warning: Trying to access array offset on value of type int in /tmp/tmpu00s3q_j.php
    on line 14


    Warning: Trying to access array offset on value of type int in /tmp/tmpu00s3q_j.php
    on line 14


    Warning: Trying to access array offset on value of type int in /tmp/tmpu00s3q_j.php
    on line 14


    Warning: Trying to access array offset on value of type int in /tmp/tmpu00s3q_j.php
    on line 14


    Warning: Trying to access array offset on value of type int in /tmp/tmpu00s3q_j.php
    on line 14


    Warning: Trying to access array offset on value of type int in /tmp/tmpu00s3q_j.php
    on line 14


    Warning: Trying to access array offset on value of type int in /tmp/tmpu00s3q_j.php
    on line 14

    array(0) {

    }


    Warning: Trying to access array offset on value of type int in /tmp/tmpu00s3q_j.php
    on line 14


    Warning: Trying to access array offset on value of type int in /tmp/tmpu00s3q_j.php
    on line 14


    Warning: Trying to access array offset on value of type int in /tmp/tmpu00s3q_j.php
    on line 14


    Warning: Trying to access array offset on value of type int in /tmp/tmpu00s3q_j.php
    on line 14


    Warning: Trying to access array offset on value of type int in /tmp/tmpu00s3q_j.php
    on line 14


    Warning: Trying to access array offset on value of type int in /tmp/tmpu00s3q_j.php
    on line 14


    Warning: Trying to access array offset on value of type int in /tmp/tmpu00s3q_j.php
    on line 14


    Warning: Trying to access array offset on value of type int in /tmp/tmpu00s3q_j.php
    on line 14


    Warning: Trying to access array offset on value of type int in /tmp/tmpu00s3q_j.php
    on line 14


    Warning: Trying to access array offset on value of type int in /tmp/tmpu00s3q_j.php
    on line 14


    Warning: Trying to access array offset on value of type int in /tmp/tmpu00s3q_j.php
    on line 14


    Warning: Trying to access array offset on value of type int in /tmp/tmpu00s3q_j.php
    on line 14

    array(0) {

    }

    <'
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  foreach ($x as $i) {\n   \
    \ $str = (string)$i;\n    if (strpos($str, '2') === false &&\n        strpos($str,\
    \ '4') === false &&\n        strpos($str, '6') === false &&\n        strpos($str,\
    \ '8') === false &&\n        strpos($str, '0') === false) {\n        $res[] =\
    \ $i;\n    }\n  }\n  if (!empty($res)) {\n    return $res;\n  } else {\n    return\
    \ array();\n  }\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwv_0hhel.php:33\n\
    Stack trace:\n#0 /tmp/tmpwv_0hhel.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpwv_0hhel.php\
    \ on line 33\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t//echo $x[0];\n\t$counter\
    \ = 0;\n\t$last_digit = \"\";\n\tforeach ($x as $num) {\n\t\tif(!($num > 9)) {\n\
    \t\t\t$result[] = $num;\n\t\t} else {\n\t\t\tdo {\n\t\t\t\t$last_digit = $num\
    \ % 10;\n\t\t\t\tif($last_digit % 2 == 0) {\n\t\t\t\t\t$counter++;\n\t\t\t\t}\n\
    \t\t\t\t$num = floor($num / 10);\n\t\t\t} while ($num > 9);\n\t\t\tif($num % 2\
    \ == 0) {\n\t\t\t\t$counter++;\n\t\t\t}\n\t\t\tif($counter == 0) {\n\t\t\t\t$result[]\
    \ = $num;\n\t\t\t}\n\t\t\t$counter = 0;\n\t\t}\n\t}\n\tsort($result);\n\treturn\
    \ $result;\n}\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr9zetrnr.php:42\n\
    Stack trace:\n#0 /tmp/tmpr9zetrnr.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpr9zetrnr.php\
    \ on line 42\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $num) {\n        if (strlen($num) == 1) {\n            $result[] = $num;\n\
    \        } else {\n            $flag = 0;\n            for ($i = 0; $i < strlen($num);\
    \ $i++) {\n                if ($num[$i] % 2 == 0) {\n                    $flag\
    \ = 1;\n                    break;\n                }\n            }\n       \
    \     if ($flag == 0) {\n                $result[] = $num;\n            }\n  \
    \      }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmpm1hjb5bl.php\
    \ on line 18\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmpm1hjb5bl.php on line 18\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmpm1hjb5bl.php on line 18\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpm1hjb5bl.php:37\nStack trace:\n#0 /tmp/tmpm1hjb5bl.php(43):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpm1hjb5bl.php on line 37\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $d = [];\n    foreach ($x\
    \ as $v) {\n        for ($i = 0; $i < strlen($v); $i++) {\n            if (strpos('02468',\
    \ $v[$i]) !== false) {\n                $d[$v] = false;\n                break;\n\
    \            }\n        }\n        if (!isset($d[$v])) {\n            $d[$v] =\
    \ true;\n        }\n    }\n    return array_keys(array_filter($d));\n}\necho var_export(unique_digits([15,\
    \ 33, 1422, 1]), true), PHP_EOL;\necho var_export(unique_digits([152, 323, 1422,\
    \ 10]), true), PHP_EOL;\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Warning: Trying to access array offset on value of type int in /tmp/tmpf0hx76va.php
    on line 14


    Deprecated: strpos(): Passing null to parameter #2 ($needle) of type string is
    deprecated in /tmp/tmpf0hx76va.php on line 14


    Warning: Trying to access array offset on value of type int in /tmp/tmpf0hx76va.php
    on line 14


    Deprecated: strpos(): Passing null to parameter #2 ($needle) of type string is
    deprecated in /tmp/tmpf0hx76va.php on line 14


    Warning: Trying to access array offset on value of type int in /tmp/tmpf0hx76va.php
    on line 14


    Deprecated: strpos(): Passing null to parameter #2 ($needle) of type string is
    deprecated in /tmp/tmpf0hx76va.php on line 14


    Warning: Trying to access array offset on value of type int in /tmp/tmpf0hx76va.php
    on line 14


    Deprecated: strpos(): Passing null to parameter #2 ($needle) of type string is
    deprecated in /tmp/tmpf0hx76va.php on line 14

    array (

    )


    Warning: Trying to access array offset on value of type int in /tmp/tmpf0hx76va.php
    on line 14


    Deprecated: strpos(): Passing null to parameter #2 ($needle) of type string is
    deprecated in /tmp/tmpf0hx76va.php on line 14


    Warning: Trying to access array offset on value of type int in /tmp/tmpf0hx76va.php
    on line 14


    Deprecated: strpos(): Passing null to parameter #2 ($needle) of type string is
    deprecated in /tmp/tmpf0hx76va.php on line 14


    Warning: Trying to access array offset on value of type int in /tmp/tmpf0hx76va.php
    on line 14


    Deprecated: strpos(): Passing null to parameter #2 ($needle) of type string is
    deprecated in /tmp/tmpf0hx76va.php on line 14


    Warning: Trying to access array offset on value of type int in /tmp/tmpf0hx76va.php
    on line 14


    Deprecated: strpos(): Passing null to parameter #2 ($needle) of type string is
    deprecated in /tmp/tmpf0hx76va.php on line 14

    array (

    )


    Warning: Trying to access array offset on value of type int in /tmp/tmpf0hx76va.php
    on line 14


    Deprecated: strpos(): Passing null to parameter #2 ($needle) of type string is
    deprecated in /tmp/tmpf0hx76va.php on line 14


    Warning: Trying to access arr'
  timestamp: 1659977959
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $arr = [];\n    foreach\
    \ ($x as $item) {\n        $even = false;\n        $number = (string)$item;\n\
    \        for ($i = 0; $i < strlen($number); $i++) {\n            if ($number[$i]\
    \ % 2 == 0) {\n                $even = true;\n                break;\n       \
    \     }\n        }\n        if (!$even) {\n            $arr[] = $item;\n     \
    \   }\n    }\n    sort($arr);\n    return $arr;\n}\n$array = array(15, 33, 1422,\
    \ 1);\nprint_r(unique_digits($array));\necho \"<br>\";\n$array = array(152, 323,\
    \ 1422, 10);\nprint_r(unique_digits($array));\nfunction candidate(...$args) {\n\
    \    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 15\n    [2] => 33\n)\n<br>Array\n(\n\
    )\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $output = array();\n  for\
    \ ($i = 0; $i < count($x); $i++) {\n    $isUnique = true;\n    $characters = str_split($x[$i]);\n\
    \    for ($j = 0; $j < count($characters); $j++) {\n      if ($characters[$j]\
    \ == '2' || $characters[$j] == '4' || $characters[$j] == '6' || $characters[$j]\
    \ == '8') {\n        $isUnique = false;\n      }\n    }\n    if ($isUnique) {\n\
    \      array_push($output, $x[$i]);\n    }\n  }\n  sort($output);\n  return $output;\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm99kxwp0.php:34\n\
    Stack trace:\n#0 /tmp/tmpm99kxwp0.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpm99kxwp0.php\
    \ on line 34\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    // your code here\n}\n\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk0dg2mr_.php:19\n\
    Stack trace:\n#0 /tmp/tmpk0dg2mr_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpk0dg2mr_.php\
    \ on line 19\n"
  timestamp: 1659977959
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    if(!is_array($x)) return\
    \ false;\n    $size = count($x);\n    if($size == 0) return array();\n    $res\
    \ = array();\n    for($i = 0; $i < $size; $i++) {\n        $has_even = false;\n\
    \        $el = $x[$i];\n        while($el > 0) {\n            $digit = $el % 10;\n\
    \            if($digit % 2 == 0) {\n                $has_even = true;\n      \
    \          break;\n            }\n            $el = intval($el / 10);\n      \
    \  }\n        if(!$has_even) $res[] = $x[$i];\n    }\n    sort($res);\n    return\
    \ $res;\n}\n$arr = array(15, 33, 1422, 1);\nprint_r(unique_digits($arr));\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 15\n    [2] => 33\n)\n"
  timestamp: 1659977959
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$unique_arr = array();\n\t\
    foreach ($x as $i) {\n\t\t$is_unique = TRUE;\n\t\t$str = (string)$i;\n\t\t$len\
    \ = strlen($str);\n\t\tfor ($j = 0; $j < $len; $j++) {\n\t\t\tif ($str[$j] % 2\
    \ == 0) {\n\t\t\t\t$is_unique = FALSE;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif\
    \ ($is_unique) {\n\t\t\tarray_push($unique_arr, $i);\n\t\t}\n\t}\n\tsort($unique_arr);\n\
    \treturn $unique_arr;\n}\n\n$x = array(15, 33, 1422, 1);\nprint_r(unique_digits($x));\n\
    $x = array(152, 323, 1422, 10);\nprint_r(unique_digits($x));\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 15\n    [2] => 33\n)\nArray\n(\n)\n"
  timestamp: 1659977959
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    foreach ($x as $key => $value)\
    \ {\n        $explode = str_split($value);\n        foreach ($explode as $k =>\
    \ $v) {\n            if ($v % 2 == 0) {\n                unset($x[$key]);\n  \
    \          }\n        }\n    }\n    sort($x);\n    return $x;\n}\nprint_r(unique_digits(array(15,\
    \ 33, 1422, 1)));\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 15\n    [2] => 33\n)\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t// Your code here...\n\t$arr\
    \ = array();\n\t$arrnew = array();\n\tfor($i=0;$i<count($x);$i++){\n\t\t$arr =\
    \ str_split($x[$i]);\n\t\tfor($j=0;$j<count($arr);$j++){\n\t\t\tif($arr[$j]%2==0){\n\
    \t\t\t\t$arrnew[$i] = $x[$i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn array_diff($x,$arrnew);\n\
    }\nprint_r(unique_digits(array(15, 33, 1422, 1)));\nprint_r(unique_digits(array(152,\
    \ 323, 1422, 10)));\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 15\n    [1] => 33\n    [3] => 1\n)\nArray\n(\n)\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp0zfgqwvl.php:32\nStack\
    \ trace:\n#0 /tmp/tmp0zfgqwvl.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp0zfgqwvl.php\
    \ on line 32\n"
  timestamp: 1659977959
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $element) {\n        $digits = array_map('intval', str_split($element));\n\
    \        if (in_array(0, $digits) || in_array(2, $digits) || in_array(4, $digits)\
    \ || in_array(6, $digits) || in_array(8, $digits)) {\n            continue;\n\
    \        } else {\n            $result[] = $element;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $u = array();\n    $len\
    \ = count($x);\n    for ($i = 0; $i < $len; $i++) {\n        $flag = 0;\n    \
    \    $n = $x[$i];\n        while ($n != 0) {\n            $d = $n % 10;\n    \
    \        if (($d % 2) == 0) {\n                $flag = 1;\n                break;\n\
    \            }\n            $n = $n / 10;\n        }\n        if ($flag == 0)\
    \ {\n            array_push($u, $x[$i]);\n        }\n    }\n    return $u;\n}\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 1.5 to int loses precision\
    \ in /tmp/tmpis5uu2de.php on line 17\n\nDeprecated: Implicit conversion from float\
    \ 0.15 to int loses precision in /tmp/tmpis5uu2de.php on line 17\n\nDeprecated:\
    \ Implicit conversion from float 3.3 to int loses precision in /tmp/tmpis5uu2de.php\
    \ on line 17\n\nDeprecated: Implicit conversion from float 0.32999999999999996\
    \ to int loses precision in /tmp/tmpis5uu2de.php on line 17\n\nDeprecated: Implicit\
    \ conversion from float 0.1 to int loses precision in /tmp/tmpis5uu2de.php on\
    \ line 17\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpis5uu2de.php:35\n\
    Stack trace:\n#0 /tmp/tmpis5uu2de.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpis5uu2de.php\
    \ on line 35\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$y = array();\n\t$z = array();\n\
    \t$result = array();\n\tfor ($i = 0; $i < count($x); $i++) {\n\t\tif (!in_array($x[$i],\
    \ $y)) {\n\t\t\t$y[] = $x[$i];\n\t\t}\n\t}\n\tfor ($i = 0; $i < count($y); $i++)\
    \ {\n\t\tif (!in_array($y[$i], $z)) {\n\t\t\t$z[] = $y[$i];\n\t\t}\n\t}\n\tfor\
    \ ($i = 0; $i < count($z); $i++) {\n\t\tif (!strstr($z[$i], '2') && !strstr($z[$i],\
    \ '4') && !strstr($z[$i], '6') && !strstr($z[$i], '8')) {\n\t\t\t$result[] = $z[$i];\n\
    \t\t}\n\t}\n\t$result = array_unique($result);\n\tsort($result);\n\treturn $result;\n\
    }\n$x = array(152, 323, 1422, 10);\necho \"<pre>\";\nprint_r(unique_digits($x));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 10\n)\n</pre>\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpcikgk71r.php:43\nStack trace:\n#0 /tmp/tmpcikgk71r.php(48):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpcikgk71r.php on line 43\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$y = [];\n\tforeach ($x as\
    \ $x1) {\n\t\t$z = true;\n\t\twhile ($x1 > 0) {\n\t\t\tif (($x1 % 10) % 2 == 0)\
    \ {\n\t\t\t\t$z = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t$x1 = $x1 / 10;\n\t\t\
    }\n\t\tif ($z) {\n\t\t\t$y[] = $x1;\n\t\t}\n\t}\n\treturn $y;\n}\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 1.5 to int loses precision\
    \ in /tmp/tmpmcuq554y.php on line 15\n\nDeprecated: Implicit conversion from float\
    \ 0.15 to int loses precision in /tmp/tmpmcuq554y.php on line 15\n\nDeprecated:\
    \ Implicit conversion from float 3.3 to int loses precision in /tmp/tmpmcuq554y.php\
    \ on line 15\n\nDeprecated: Implicit conversion from float 0.32999999999999996\
    \ to int loses precision in /tmp/tmpmcuq554y.php on line 15\n\nDeprecated: Implicit\
    \ conversion from float 0.1 to int loses precision in /tmp/tmpmcuq554y.php on\
    \ line 15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmcuq554y.php:32\n\
    Stack trace:\n#0 /tmp/tmpmcuq554y.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpmcuq554y.php\
    \ on line 32\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    foreach ($x as $num) {\n\
    \        if (even_digit($num)) {\n            $new_x[] = $num;\n        }\n  \
    \  }\n    asort($new_x);\n    return $new_x;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function even_digit()\
    \ in /tmp/tmpd4ijer3i.php:12\nStack trace:\n#0 /tmp/tmpd4ijer3i.php(21): unique_digits(Array)\n\
    #1 /tmp/tmpd4ijer3i.php(25): candidate(Array)\n#2 /tmp/tmpd4ijer3i.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmpd4ijer3i.php on line 12\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  // Your code here\n}\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8spcysu0.php:18\n\
    Stack trace:\n#0 /tmp/tmp8spcysu0.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp8spcysu0.php\
    \ on line 18\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$even = array(0, 2, 4, 6,\
    \ 8);\n\t$even_list = array();\n\tforeach ($x as $key => $value) {\n\t\t$even_list[$key]\
    \ = \"\";\n\t\tfor ($i = 0; $i < strlen($value); $i++) {\n\t\t\tif (in_array($value[$i],\
    \ $even)) {\n\t\t\t\t$even_list[$key] .= $value[$i];\n\t\t\t}\n\t\t}\n\t}\n\t\
    return $even_list;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmpo6wbx46a.php\
    \ on line 16\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmpo6wbx46a.php on line 17\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmpo6wbx46a.php on line 16\n\nWarning: Trying to access\
    \ array offset on value of type int in /tmp/tmpo6wbx46a.php on line 17\n\nWarning:\
    \ Trying to access array offset on value of type int in /tmp/tmpo6wbx46a.php on\
    \ line 16\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpo6wbx46a.php\
    \ on line 17\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmpo6wbx46a.php on line 16\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmpo6wbx46a.php on line 17\n\nWarning: Trying to access\
    \ array offset on value of type int in /tmp/tmpo6wbx46a.php on line 16\n\nWarning:\
    \ Trying to access array offset on value of type int in /tmp/tmpo6wbx46a.php on\
    \ line 17\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpo6wbx46a.php\
    \ on line 16\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmpo6wbx46a.php on line 17\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmpo6wbx46a.php on line 16\n\nWarning: Trying to access\
    \ array offset on value of type int in /tmp/tmpo6wbx46a.php on line 17\n\nWarning:\
    \ Trying to access array offset on value of type int in /tmp/tmpo6wbx46a.php on\
    \ line 16\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpo6wbx46a.php\
    \ on line 17\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmpo6wbx46a.php on line 16\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmpo6wbx46a.php on line 17\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpo6wbx46a.php:29\nStack trace:\n#0 /tmp/tmpo6wbx46a.php(35):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpo6wbx46a.php on line 29\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$result = array();\n\tforeach\
    \ ($x as $y) {\n\t\tif (isUnique($y)) {\n\t\t\t$result[] = $y;\n\t\t}\n\t}\n\t\
    sort($result);\n\treturn $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function isUnique() in\
    \ /tmp/tmp0h3zutex.php:13\nStack trace:\n#0 /tmp/tmp0h3zutex.php(22): unique_digits(Array)\n\
    #1 /tmp/tmp0h3zutex.php(26): candidate(Array)\n#2 /tmp/tmp0h3zutex.php(32): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0h3zutex.php on line 13\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $even = array();\n  foreach\
    \ ($x as $key => $value) {\n    for ($i = 0; $i < strlen($value); $i++) {\n  \
    \    if ($value[$i] % 2 == 0) {\n        $even[] = $value;\n        break;\n \
    \     }\n    }\n  }\n  $array = array_diff($x, $even);\n  sort($array);\n  return\
    \ $array;\n}\n\nprint_r(unique_digits(array(15, 33, 1422, 1)));\necho \"\\n\"\
    ;\nprint_r(unique_digits(array(152, 323, 1422, 10)));\necho \"\\n\";\n\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmprdqazyz7.php\
    \ on line 14\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmprdqazyz7.php on line 14\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmprdqazyz7.php on line 14\n\nWarning: Trying to access\
    \ array offset on value of type int in /tmp/tmprdqazyz7.php on line 14\nArray\n\
    (\n)\n\n\nWarning: Trying to access array offset on value of type int in /tmp/tmprdqazyz7.php\
    \ on line 14\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmprdqazyz7.php on line 14\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmprdqazyz7.php on line 14\n\nWarning: Trying to access\
    \ array offset on value of type int in /tmp/tmprdqazyz7.php on line 14\nArray\n\
    (\n)\n\n\nWarning: Trying to access array offset on value of type int in /tmp/tmprdqazyz7.php\
    \ on line 14\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmprdqazyz7.php on line 14\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmprdqazyz7.php on line 14\n\nWarning: Trying to access\
    \ array offset on value of type int in /tmp/tmprdqazyz7.php on line 14\n\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmprdqazyz7.php:35\nStack trace:\n\
    #0 /tmp/tmprdqazyz7.php(41): test()\n#1 {main}\n  thrown in /tmp/tmprdqazyz7.php\
    \ on line 35\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    return array_values(array_filter($x,\
    \ function($item) {\n        return !strpbrk($item, '02468');\n    }));\n}\n\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpca0uxdzg.php:21\n\
    Stack trace:\n#0 /tmp/tmpca0uxdzg.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpca0uxdzg.php\
    \ on line 21\n"
  timestamp: 1659977959
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $result = array();\n  foreach\
    \ ($x as $number) {\n    $number_as_string = (string) $number;\n    $has_even_digit\
    \ = false;\n    foreach (str_split($number_as_string) as $digit) {\n      if (($digit\
    \ % 2) == 0) {\n        $has_even_digit = true;\n        break;\n      }\n   \
    \ }\n    if (!$has_even_digit) {\n      $result[] = $number;\n    }\n  }\n  sort($result);\n\
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    \n    // before returning,\
    \ sort by numerical value with optional parameter\n    sort($x, SORT_NUMERIC);\n\
    \    \n    // loop through each element in array\n    foreach ($x as $key => $value)\
    \ {\n        \n        // convert integer to string\n        $value = (string)$value;\n\
    \        \n        // loop through each character in string\n        for ($i =\
    \ 0; $i < strlen($value); $i++) {\n            \n            // if character is\
    \ even, unset the element\n            if ($value[$i] % 2 == 0) {\n          \
    \      unset($x[$key]);\n            }\n        }\n    }\n    \n    // return\
    \ the array\n    return $x;\n}\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps6_o1k5u.php:42\n\
    Stack trace:\n#0 /tmp/tmps6_o1k5u.php(45): test()\n#1 {main}\n  thrown in /tmp/tmps6_o1k5u.php\
    \ on line 42\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    // Write your code here\n\
    \    $array_of_unique_digits = [];\n    foreach ($x as $num) {\n        $array_of_num\
    \ = str_split($num);\n        $array_of_unique_digits[] = array_unique($array_of_num);\n\
    \    }\n    var_dump($array_of_unique_digits);\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "array(4) {\n  [0]=>\n  array(2) {\n    [0]=>\n    string(1) \"1\"\n   \
    \ [1]=>\n    string(1) \"5\"\n  }\n  [1]=>\n  array(1) {\n    [0]=>\n    string(1)\
    \ \"3\"\n  }\n  [2]=>\n  array(3) {\n    [0]=>\n    string(1) \"1\"\n    [1]=>\n\
    \    string(1) \"4\"\n    [2]=>\n    string(1) \"2\"\n  }\n  [3]=>\n  array(1)\
    \ {\n    [0]=>\n    string(1) \"1\"\n  }\n}\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpxmx407vw.php:25\nStack trace:\n#0 /tmp/tmpxmx407vw.php(31):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpxmx407vw.php on line 25\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeghrelw6.php:19\n\
    Stack trace:\n#0 /tmp/tmpeghrelw6.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpeghrelw6.php\
    \ on line 19\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $oddNum = [];\n    foreach\
    \ ($x as $num) {\n        $stringNum = strval($num);\n        $arrayStringNum\
    \ = str_split($stringNum);\n        for ($i = 0; $i < count($arrayStringNum);\
    \ $i++) {\n            if ($arrayStringNum[$i] % 2 == 0) {\n                break;\n\
    \            } else if ($i == count($arrayStringNum) - 1) {\n                array_push($oddNum,\
    \ $num);\n            }\n        }\n    }\n    return $oddNum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7vdpp3n3.php:31\n\
    Stack trace:\n#0 /tmp/tmp7vdpp3n3.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp7vdpp3n3.php\
    \ on line 31\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t// TODO\n}\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvbq09wwf.php:18\n\
    Stack trace:\n#0 /tmp/tmpvbq09wwf.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpvbq09wwf.php\
    \ on line 18\n"
  timestamp: 1659977959
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$first_result = array();\n\
    \t$second_result = array();\n\tforeach ($x as $value) {\n\t\t$first_result[] =\
    \ $value;\n\t}\n\tforeach ($first_result as $value) {\n\t\t$second_result = array_unique(str_split($value));\n\
    \t\t$third_result = array_diff($second_result, array('0', '2', '4', '6', '8'));\n\
    \t\tif (count($third_result) == count($second_result)) {\n\t\t\t$last_result[]\
    \ = $value;\n\t\t}\n\t}\n\tif (isset($last_result)) {\n\t\tsort($last_result);\n\
    \t\treturn $last_result;\n\t} else {\n\t\treturn $last_result = array();\n\t}\n\
    }\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $res = [];\n  foreach ($x\
    \ as $item) {\n    $arr = str_split($item);\n    $match = preg_grep('/[2,4,6,8]/',\
    \ $arr);\n    if (count($match) == 0) {\n      $res[] = $item;\n    }\n  }\n \
    \ sort($res);\n  return $res;\n}\n\n$res = unique_digits([15, 33, 1422, 1]);\n\
    print_r($res);\n$res = unique_digits([152, 323, 1422, 10]);\nprint_r($res);\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 15\n    [2] => 33\n)\nArray\n(\n   \
    \ [0] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjesgu7d1.php:33\n\
    Stack trace:\n#0 /tmp/tmpjesgu7d1.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpjesgu7d1.php\
    \ on line 33\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $num_arr = [];\n    foreach\
    \ ($x as $val) {\n        if (strpbrk($val, '02468')) {\n            continue;\n\
    \        } else {\n            $num_arr[] = $val;\n        }\n    }\n    sort($num_arr);\n\
    \    return $num_arr;\n}\necho \"Test 1: \";\nvar_dump(unique_digits(array(15,\
    \ 33, 1422, 1)));\necho \"Test 2: \";\nvar_dump(unique_digits(array(152, 323,\
    \ 1422, 10)));\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Test 1: array(3) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(15)\n  [2]=>\n  int(33)\n\
    }\nTest 2: array(1) {\n  [0]=>\n  int(10)\n}\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpbzlgokzw.php:33\nStack trace:\n#0 /tmp/tmpbzlgokzw.php(38):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpbzlgokzw.php on line 33\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $value) {\n        if (strpos($value, '2') === false && strpos($value,\
    \ '4') === false && strpos($value, '6') === false && strpos($value, '8') === false)\
    \ {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n \
    \   return $result;\n}\nprint_r(unique_digits(array(15, 33, 1422, 1)));\necho\
    \ '<br>';\nprint_r(unique_digits(array(152, 323, 1422, 10)));\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 15\n    [2] => 33\n)\n<br>Array\n(\n\
    \    [0] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3ttea8sp.php:30\n\
    Stack trace:\n#0 /tmp/tmp3ttea8sp.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp3ttea8sp.php\
    \ on line 30\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t\n}\n\necho '<h1>unique_digits</h1>';\n\
    echo '<pre>';\nprint_r(unique_digits(array(15, 33, 1422, 1)));\necho '</pre>';\n\
    \necho '<pre>';\nprint_r(unique_digits(array(152, 323, 1422, 10)));\necho '</pre>';\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<h1>unique_digits</h1><pre></pre><pre></pre>\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp8ux_4aqc.php:27\nStack trace:\n#0 /tmp/tmp8ux_4aqc.php(33):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp8ux_4aqc.php on line 27\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$uniques = array();\n\t$all\
    \ = array();\n\tforeach ($x as $num) {\n\t\t$digits = str_split($num);\n\t\t$has_even\
    \ = false;\n\t\tforeach ($digits as $digit) {\n\t\t\tif ($digit % 2 == 0) {\n\t\
    \t\t\t$has_even = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!$has_even) {\n\
    \t\t\t$uniques[] = $num;\n\t\t}\n\t\t$all[] = $num;\n\t}\n\tsort($uniques);\n\t\
    sort($all);\n\techo '<pre>';\n\tprint_r($uniques);\n\tprint_r($all);\n\techo '</pre>';\n\
    }\nunique_digits(array(15, 33, 1422, 1));\nunique_digits(array(152, 323, 1422,\
    \ 10));\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 15\n    [2] => 33\n)\nArray\n(\n\
    \    [0] => 1\n    [1] => 15\n    [2] => 33\n    [3] => 1422\n)\n</pre><pre>Array\n\
    (\n)\nArray\n(\n    [0] => 10\n    [1] => 152\n    [2] => 323\n    [3] => 1422\n\
    )\n</pre><pre>Array\n(\n    [0] => 1\n    [1] => 15\n    [2] => 33\n)\nArray\n\
    (\n    [0] => 1\n    [1] => 15\n    [2] => 33\n    [3] => 1422\n)\n</pre>\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmpwi1nhk16.php:41\nStack trace:\n\
    #0 /tmp/tmpwi1nhk16.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpwi1nhk16.php\
    \ on line 41\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$x = array_filter($x, function($n)\
    \ {\n\t\twhile ($n > 0) {\n\t\t\tif ($n % 2 == 0) {\n\t\t\t\treturn false;\n\t\
    \t\t}\n\t\t\t$n /= 10;\n\t\t}\n\t\treturn true;\n\t});\n\tsort($x);\n\treturn\
    \ $x;\n}\nprint_r(unique_digits(array(15, 33, 1422, 1)));\nprint_r(unique_digits(array(152,\
    \ 323, 1422, 10)));\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 1.5 to int loses precision\
    \ in /tmp/tmpfq4ug5v9.php on line 13\n\nDeprecated: Implicit conversion from float\
    \ 0.15 to int loses precision in /tmp/tmpfq4ug5v9.php on line 13\n\nDeprecated:\
    \ Implicit conversion from float 3.3 to int loses precision in /tmp/tmpfq4ug5v9.php\
    \ on line 13\n\nDeprecated: Implicit conversion from float 0.32999999999999996\
    \ to int loses precision in /tmp/tmpfq4ug5v9.php on line 13\n\nDeprecated: Implicit\
    \ conversion from float 0.1 to int loses precision in /tmp/tmpfq4ug5v9.php on\
    \ line 13\nArray\n(\n)\n\nDeprecated: Implicit conversion from float 32.3 to int\
    \ loses precision in /tmp/tmpfq4ug5v9.php on line 13\nArray\n(\n)\n\nDeprecated:\
    \ Implicit conversion from float 1.5 to int loses precision in /tmp/tmpfq4ug5v9.php\
    \ on line 13\n\nDeprecated: Implicit conversion from float 0.15 to int loses precision\
    \ in /tmp/tmpfq4ug5v9.php on line 13\n\nDeprecated: Implicit conversion from float\
    \ 3.3 to int loses precision in /tmp/tmpfq4ug5v9.php on line 13\n\nDeprecated:\
    \ Implicit conversion from float 0.32999999999999996 to int loses precision in\
    \ /tmp/tmpfq4ug5v9.php on line 13\n\nDeprecated: Implicit conversion from float\
    \ 0.1 to int loses precision in /tmp/tmpfq4ug5v9.php on line 13\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpfq4ug5v9.php:30\nStack trace:\n\
    #0 /tmp/tmpfq4ug5v9.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpfq4ug5v9.php\
    \ on line 30\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    //your code here\n}\n\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpntn779xt.php:19\n\
    Stack trace:\n#0 /tmp/tmpntn779xt.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpntn779xt.php\
    \ on line 19\n"
  timestamp: 1659977959
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $even = array(0, 2, 4, 6,\
    \ 8);\n  $count = 0;\n  $str = strval($x[$count]);\n  $num = (int)$str;\n  $result\
    \ = array();\n  while($count < count($x)) {\n    $num = (int)$str;\n    while($num\
    \ != 0) {\n      $digit = $num % 10;\n      if(in_array($digit, $even)) {\n  \
    \      $count++;\n        $str = strval($x[$count]);\n        break;\n      }\n\
    \      $num = (int)($num / 10);\n    }\n    if($num == 0) {\n      array_push($result,\
    \ $x[$count]);\n      $count++;\n      $str = strval($x[$count]);\n    }\n  }\n\
    \  sort($result);\n  return $result;\n}\n\nfunction candidate(...$args) {\n  \
    \  return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 4 in /tmp/tmp7_2xkds3.php on line 30


    Warning: Undefined array key 4 in /tmp/tmp7_2xkds3.php on line 22


    Warning: Undefined array key 4 in /tmp/tmp7_2xkds3.php on line 30


    Warning: Undefined array key 3 in /tmp/tmp7_2xkds3.php on line 30

    '
  timestamp: 1659977959
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t\n\t$list = array();\n\t$even\
    \ = array();\n\t$even[] = 0;\n\t$even[] = 2;\n\t$even[] = 4;\n\t$even[] = 6;\n\
    \t$even[] = 8;\n\t\n\tforeach ($x as $i) {\n\t\t$s = (string)$i;\n\t\tfor ($j\
    \ = 0; $j < strlen($s); $j++) {\n\t\t\t$char = $s[$j];\n\t\t\tif (in_array($char,\
    \ $even)) {\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\tif ($j == strlen($s) - 1)\
    \ {\n\t\t\t\t\t$list[] = $i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tsort($list);\n\
    \treturn $list;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$uniqueArr = array();\n\t\
    foreach ($x as $y) {\n\t\t// Check for even number digits\n\t\tif (!hasEvenDigit($y))\
    \ {\n\t\t\tarray_push($uniqueArr, $y);\n\t\t}\n\t}\n\t// Sort the array\n\tsort($uniqueArr);\n\
    \treturn $uniqueArr;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function hasEvenDigit()\
    \ in /tmp/tmpw5l71_x1.php:14\nStack trace:\n#0 /tmp/tmpw5l71_x1.php(24): unique_digits(Array)\n\
    #1 /tmp/tmpw5l71_x1.php(28): candidate(Array)\n#2 /tmp/tmpw5l71_x1.php(34): test()\n\
    #3 {main}\n  thrown in /tmp/tmpw5l71_x1.php on line 14\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $set = [];\n    foreach\
    \ ($x as $num) {\n        if (!has_even_digit($num)) {\n            $set[] = $num;\n\
    \        }\n    }\n    sort($set);\n    return $set;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function has_even_digit()\
    \ in /tmp/tmpje7pr6n4.php:13\nStack trace:\n#0 /tmp/tmpje7pr6n4.php(22): unique_digits(Array)\n\
    #1 /tmp/tmpje7pr6n4.php(26): candidate(Array)\n#2 /tmp/tmpje7pr6n4.php(32): test()\n\
    #3 {main}\n  thrown in /tmp/tmpje7pr6n4.php on line 13\n"
  timestamp: 1659977959
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $newArray = [];\n    $count\
    \ = 0;\n    for ($i = 0; $i < count($x); $i++) {\n        $num = $x[$i];\n   \
    \     while ($num > 0) {\n            $digit = $num % 10;\n            if ($digit\
    \ % 2 == 0) {\n                break;\n            }\n            $num = floor($num\
    \ / 10);\n            $count++;\n        }\n        if ($count == strlen($x[$i]))\
    \ {\n            array_push($newArray, $x[$i]);\n        }\n        $count = 0;\n\
    \    }\n    sort($newArray);\n    return $newArray;\n}\nprint_r(unique_digits(array(15,\
    \ 33, 1422, 1)));\necho \"<br />\";\nprint_r(unique_digits(array(152, 323, 1422,\
    \ 10)));\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 15\n    [2] => 33\n)\n<br />Array\n\
    (\n)\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $v) {\n        if (strpos($v, '2') === false &&\n            strpos($v,\
    \ '4') === false &&\n            strpos($v, '6') === false &&\n            strpos($v,\
    \ '8') === false) {\n            $result[] = $v;\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\n$array = array(15, 33, 1422, 1);\nprint_r(unique_digits($array));\n\
    echo \"\\n\";\n\n$array = array(152, 323, 1422, 10);\nprint_r(unique_digits($array));\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 15\n    [2] => 33\n)\n\nArray\n(\n \
    \   [0] => 10\n)\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu42rmt91.php:37\n\
    Stack trace:\n#0 /tmp/tmpu42rmt91.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpu42rmt91.php\
    \ on line 37\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n}\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp24c5r7tv.php:17\n\
    Stack trace:\n#0 /tmp/tmp24c5r7tv.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp24c5r7tv.php\
    \ on line 17\n"
  timestamp: 1659823299
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $array = array();\n  foreach\
    \ ($x as $element) {\n    if (strpos(strval($element), \"2\") === false && strpos(strval($element),\
    \ \"4\") === false && strpos(strval($element), \"6\") === false && strpos(strval($element),\
    \ \"8\") === false && strpos(strval($element), \"0\") === false) {\n      array_push($array,\
    \ $element);\n    }\n  }\n  sort($array);\n  return $array;\n}\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $arr = $x;\n  for ($i = 0;\
    \ $i < count($arr); $i++) {\n    $number = $arr[$i];\n    while ($number > 0)\
    \ {\n      $currentDigit = $number % 10;\n      if ($currentDigit % 2 == 0) {\n\
    \        unset($arr[$i]);\n        break;\n      }\n      $number = $number /\
    \ 10;\n    }\n  }\n  asort($arr);\n  return $arr;\n}\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 1.5 to int loses precision\
    \ in /tmp/tmpdcmzfk1p.php on line 15\n\nDeprecated: Implicit conversion from float\
    \ 0.15 to int loses precision in /tmp/tmpdcmzfk1p.php on line 15\n\nDeprecated:\
    \ Implicit conversion from float 3.3 to int loses precision in /tmp/tmpdcmzfk1p.php\
    \ on line 15\n\nDeprecated: Implicit conversion from float 0.32999999999999996\
    \ to int loses precision in /tmp/tmpdcmzfk1p.php on line 15\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpdcmzfk1p.php:31\nStack trace:\n#0 /tmp/tmpdcmzfk1p.php(37):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpdcmzfk1p.php on line 31\n"
  timestamp: 1659977959
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $number) {\n        $number = strval($number);\n        $has_even_digit\
    \ = false;\n        for ($i = 0; $i < strlen($number); $i++) {\n            if\
    \ ($number[$i] % 2 == 0) {\n                $has_even_digit = true;\n        \
    \        break;\n            }\n        }\n        if (!$has_even_digit) {\n \
    \           $result[] = intval($number);\n        }\n    }\n    sort($result);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    // your code here\n}\n\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk0dg2mr_.php:19\n\
    Stack trace:\n#0 /tmp/tmpk0dg2mr_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpk0dg2mr_.php\
    \ on line 19\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $result = array();\n  for\
    \ ($i = 0; $i < count($x); $i++) {\n    if ($x[$i] > 0) {\n      $str = (string)$x[$i];\n\
    \      if (!preg_match('/[2468]/', $str)) {\n        array_push($result, $x[$i]);\n\
    \      }\n    }\n  }\n  sort($result);\n  return $result;\n}\nprint_r(unique_digits(array(15,\
    \ 33, 1422, 1)));\nprint_r(unique_digits(array(152, 323, 1422, 10)));\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 15\n    [2] => 33\n)\nArray\n(\n   \
    \ [0] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuku9h97i.php:31\n\
    Stack trace:\n#0 /tmp/tmpuku9h97i.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpuku9h97i.php\
    \ on line 31\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $new_arr = [];\n    for\
    \ ($i = 0; $i < count($x); $i++) {\n        $num = $x[$i];\n        $str = strval($num);\n\
    \        if (strpos($str, '2') === false && strpos($str, '4') === false && strpos($str,\
    \ '6') === false && strpos($str, '8') === false) {\n            array_push($new_arr,\
    \ $num);\n        }\n    }\n    sort($new_arr);\n    return $new_arr;\n}\nprint_r(unique_digits(array(15,\
    \ 33, 1422, 1)));\necho '<br>';\nprint_r(unique_digits(array(152, 323, 1422, 10)));\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 15\n    [2] => 33\n)\n<br>Array\n(\n\
    \    [0] => 10\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp627dgfh.php:31\n\
    Stack trace:\n#0 /tmp/tmpp627dgfh.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpp627dgfh.php\
    \ on line 31\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t\n\treturn $x;\n}\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo0p3xbfi.php:19\n\
    Stack trace:\n#0 /tmp/tmpo0p3xbfi.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpo0p3xbfi.php\
    \ on line 19\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $array = array();\n    for\
    \ ($i = 0; $i < count($x); $i++) {\n        if ($x[$i] < 10) {\n            array_push($array,\
    \ $x[$i]);\n        } else {\n            if ($x[$i] < 100) {\n              \
    \  if (strpos($x[$i], '2') === false && strpos($x[$i], '4') === false && strpos($x[$i],\
    \ '6') === false && strpos($x[$i], '8') === false) {\n                    array_push($array,\
    \ $x[$i]);\n                }\n            } else {\n                if ($x[$i]\
    \ < 1000) {\n                    if (strpos($x[$i], '2') === false && strpos($x[$i],\
    \ '4') === false && strpos($x[$i], '6') === false && strpos($x[$i], '8') === false)\
    \ {\n                        array_push($array, $x[$i]);\n                   \
    \ }\n                } else {\n                    if (strpos($x[$i], '2') ===\
    \ false && strpos($x[$i], '4') === false && strpos($x[$i], '6') === false && strpos($x[$i],\
    \ '8') === false) {\n                        array_push($array, $x[$i]);\n   \
    \                 }\n                }\n            }\n        }\n    }\n    return\
    \ $array;\n}\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoomxgrnk.php:40\n\
    Stack trace:\n#0 /tmp/tmpoomxgrnk.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpoomxgrnk.php\
    \ on line 40\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $odd_digits = array();\n \
    \ foreach ($x as $i) {\n    if (strlen($i) > 1) {\n      $i = str_split($i);\n\
    \      $has_even = false;\n      foreach ($i as $digit) {\n        if ($digit\
    \ % 2 == 0) {\n          $has_even = true;\n        }\n      }\n      if (!$has_even)\
    \ {\n        $odd_digits[] = implode($i);\n      }\n    } else {\n      $odd_digits[]\
    \ = $i;\n    }\n  }\n  sort($odd_digits);\n  return $odd_digits;\n}\necho '<pre>';\n\
    print_r(unique_digits(array(15, 33, 1422, 1)));\necho '</pre>';\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 15\n    [2] => 33\n)\n</pre>\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp9q07gm5v.php:39\nStack\
    \ trace:\n#0 /tmp/tmp9q07gm5v.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp9q07gm5v.php\
    \ on line 39\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    // $x = array(15, 33, 1422,\
    \ 1);\n    $x = array(152, 323, 1422, 10);\n    $sorted_x = array();\n    $sorted_x_0\
    \ = array();\n    for ($i = 0; $i < count($x); $i++) {\n        $flag = 0;\n \
    \       $x_str = (string)$x[$i];\n        for ($j = 0; $j < strlen($x_str); $j++)\
    \ {\n            if ($x_str[$j] % 2 == 0) {\n                $flag = 1;\n    \
    \            break;\n            }\n        }\n        if ($flag == 0) {\n   \
    \         $sorted_x[] = $x[$i];\n        }\n    }\n    sort($sorted_x);\n    print_r($sorted_x);\n\
    }\nunique_digits(array(15, 33, 1422, 1));\nunique_digits(array(152, 323, 1422,\
    \ 10));\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n)\nArray\n(\n)\nArray\n(\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpeiqiq6yq.php:38\nStack trace:\n#0 /tmp/tmpeiqiq6yq.php(44):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpeiqiq6yq.php on line 38\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$result = array();\n\t$flag\
    \ = true;\n\t//$x = array(152, 323, 1422, 10);\n\tforeach ($x as $value) {\n\t\
    \twhile ($value>=10) {\n\t\t\t$value = array_sum(str_split($value));\n\t\t\t//echo\
    \ $value . \"\\n\";\n\t\t}\n\t\tif ($value%2==0) {\n\t\t\t$flag = false;\n\t\t\
    }\n\t\tif ($flag) {\n\t\t\t$result[] = $value;\n\t\t}\n\t\t$flag = true;\n\t}\n\
    \treturn $result;\n}\n$a = array(152, 323, 1422, 10);\nprint_r(unique_digits($a));\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 9\n    [1] => 1\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpik03kwxi.php:36\nStack trace:\n#0 /tmp/tmpik03kwxi.php(42):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpik03kwxi.php on line 36\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $arr = array();\n    foreach\
    \ ($x as $i) {\n        if ($i % 2 == 0) {\n            array_push($arr, $i);\n\
    \        }\n    }\n    return $arr;\n}\nfunction candidate(...$args) {\n    return\
    \ unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg1qs0dkh.php:24\n\
    Stack trace:\n#0 /tmp/tmpg1qs0dkh.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpg1qs0dkh.php\
    \ on line 24\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$res = array();\n\tforeach\
    \ ($x as $el) {\n\t\tif (strpos((string)$el, '2') === false &&\n\t\t\tstrpos((string)$el,\
    \ '4') === false &&\n\t\t\tstrpos((string)$el, '6') === false &&\n\t\t\tstrpos((string)$el,\
    \ '8') === false) {\n\t\t\t$res[] = $el;\n\t\t}\n\t}\n\tsort($res);\n\treturn\
    \ $res;\n}\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk4r8hehj.php:29\n\
    Stack trace:\n#0 /tmp/tmpk4r8hehj.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpk4r8hehj.php\
    \ on line 29\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  // your code here...\n}\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq6vvrq_k.php:18\n\
    Stack trace:\n#0 /tmp/tmpq6vvrq_k.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpq6vvrq_k.php\
    \ on line 18\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $elements = [];\n  for ($i\
    \ = 0; $i < count($x); $i++) {\n    $num = $x[$i];\n    $digits = [];\n    while\
    \ ($num > 0) {\n      $digits[] = $num % 10;\n      $num = (int)($num / 10);\n\
    \    }\n    if (!has_even_digit($digits)) {\n      $elements[] = $x[$i];\n   \
    \ }\n  }\n  sort($elements);\n  return $elements;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function has_even_digit()\
    \ in /tmp/tmpi41of856.php:19\nStack trace:\n#0 /tmp/tmpi41of856.php(28): unique_digits(Array)\n\
    #1 /tmp/tmpi41of856.php(32): candidate(Array)\n#2 /tmp/tmpi41of856.php(38): test()\n\
    #3 {main}\n  thrown in /tmp/tmpi41of856.php on line 19\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  for ($i = 0; $i < count($x);\
    \ $i++) {\n    $str = strval($x[$i]);\n    if (strpos($str, '2') !== false ||\
    \ strpos($str, '4') !== false || strpos($str, '6') !== false || strpos($str, '8')\
    \ !== false) {\n      unset($x[$i]);\n    }\n  }\n  return $x;\n}\n$x = array(15,\
    \ 33, 1422, 1);\nprint_r(unique_digits($x));\necho \"\\n\";\n$x = array(152, 323,\
    \ 1422, 10);\nprint_r(unique_digits($x));\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 15\n    [1] => 33\n    [3] => 1\n)\n\nArray\n(\n \
    \   [2] => 1422\n    [3] => 10\n)\n\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpzx9d1me7.php:30\nStack trace:\n#0 /tmp/tmpzx9d1me7.php(36): test()\n\
    #1 {main}\n  thrown in /tmp/tmpzx9d1me7.php on line 30\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$y = array();\n\tforeach ($x\
    \ as $value) {\n\t\tif ($value % 2 != 0) {\n\t\t\t$y[] = $value;\n\t\t}\n\t}\n\
    \treturn $y;\n}\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmper0tv5j2.php:24\n\
    Stack trace:\n#0 /tmp/tmper0tv5j2.php(30): test()\n#1 {main}\n  thrown in /tmp/tmper0tv5j2.php\
    \ on line 24\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$y = $x;\n\tsort($y);\n\t\
    for ($i = 0; $i < count($y); $i++) {\n\t\t$y[$i] = (string)$y[$i];\n\t\tfor ($j\
    \ = 0; $j < strlen($y[$i]); $j++) {\n\t\t\tif ((int)$y[$i][$j] % 2 == 0) {\n\t\
    \t\t\t$z[] = (int)$y[$i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tif (!isset($z))\n\
    \t\treturn $y;\n\t$l = 0;\n\tforeach ($y as $m) {\n\t\t$flag = false;\n\t\tforeach\
    \ ($z as $k) {\n\t\t\tif ($m == $k) {\n\t\t\t\t$flag = true;\n\t\t\t\tbreak;\n\
    \t\t\t}\n\t\t}\n\t\tif (!$flag)\n\t\t\t$r[$l++] = $m;\n\t}\n\treturn $r;\n}\n\n\
    echo '<pre>';\nprint_r(unique_digits(array(15, 33, 1422, 1)));\necho '</pre>';\n\
    echo '<pre>';\nprint_r(unique_digits(array(152, 323, 1422, 10)));\necho '</pre>';\n\
    \nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 15\n    [2] => 33\n)\n</pre><pre>\n\
    Warning: Undefined variable $r in /tmp/tmpg6mb3r48.php on line 36\n</pre>\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmpg6mb3r48.php:51\nStack trace:\n\
    #0 /tmp/tmpg6mb3r48.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpg6mb3r48.php\
    \ on line 51\n"
  timestamp: 1659977960
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    foreach ($x as $i => $v)\
    \ {\n        $s = str_split($v);\n        foreach ($s as $ii => $vv) {\n     \
    \       if ($vv % 2 == 0) {\n                unset($x[$i]);\n                break;\n\
    \            }\n        }\n    }\n    return $x;\n}\necho '<pre>';\nprint_r(unique_digits(array(15,\
    \ 33, 1422, 1)));\nprint_r(unique_digits(array(152, 323, 1422, 10)));\necho '</pre>';\n\
    \nfunction candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 15\n    [1] => 33\n    [3] => 1\n)\nArray\n(\n\
    )\n</pre>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcjbxa49x.php:32\n\
    Stack trace:\n#0 /tmp/tmpcjbxa49x.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpcjbxa49x.php\
    \ on line 32\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\tforeach ($x as $a) {\n\t\t\
    $str = strval($a);\n\t\tif (!preg_match('/[02468]/', $str)) {\n\t\t\t$arr[] =\
    \ $a;\n\t\t}\n\t}\n\tif (empty($arr)) {\n\t\treturn $arr;\n\t}\n\tsort($arr);\n\
    \treturn $arr;\n}\n\nprint_r(unique_digits(array(15, 33, 1422, 1)));\necho \"\\\
    n\";\nprint_r(unique_digits(array(152, 323, 1422, 10)));\necho \"\\n\";\n\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 15\n    [2] => 33\n)\n\n\nWarning: Undefined\
    \ variable $arr in /tmp/tmpvw0hwftl.php on line 18\n\n\nWarning: Undefined variable\
    \ $arr in /tmp/tmpvw0hwftl.php on line 18\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpvw0hwftl.php:35\nStack trace:\n#0 /tmp/tmpvw0hwftl.php(40):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpvw0hwftl.php on line 35\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $result = array();\n  foreach\
    \ ($x as $y) {\n    if (strstr($y, '2') == FALSE && strstr($y, '4') == FALSE\n\
    \        && strstr($y, '6') == FALSE && strstr($y, '8') == FALSE) {\n      $result[]\
    \ = $y;\n    }\n  }\n  sort($result);\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp25zl7ily.php:28\n\
    Stack trace:\n#0 /tmp/tmp25zl7ily.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp25zl7ily.php\
    \ on line 28\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    // Your code here\n    $result\
    \ = [];\n    foreach ($x as $num) {\n      if (unique($num)) {\n        $result[]\
    \ = $num;\n      }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function unique() in /tmp/tmpjgyldqge.php:14\n\
    Stack trace:\n#0 /tmp/tmpjgyldqge.php(23): unique_digits(Array)\n#1 /tmp/tmpjgyldqge.php(27):\
    \ candidate(Array)\n#2 /tmp/tmpjgyldqge.php(33): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmpjgyldqge.php on line 14\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$i = 0;\n\twhile ($i < count($x))\
    \ {\n\t\tif (strlen($x[$i]) == 1) {\n\t\t\t++$i;\n\t\t} else {\n\t\t\t$num = $x[$i];\n\
    \t\t\t$num = str_split($num);\n\t\t\tforeach ($num as $n) {\n\t\t\t\tif ($n %\
    \ 2 == 0) {\n\t\t\t\t\tarray_splice($x, $i, 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\
    \t\t\t}\n\t\t\t++$i;\n\t\t}\n\t}\n\tsort($x);\n\treturn $x;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp19gefwqw.php:37\n\
    Stack trace:\n#0 /tmp/tmp19gefwqw.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp19gefwqw.php\
    \ on line 37\n"
  timestamp: 1659977959
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $element) {\n        $str = (string)$element;\n        if (strpos($str,\
    \ '2') === false && strpos($str, '4') === false\n                && strpos($str,\
    \ '6') === false && strpos($str, '8') === false\n                && strpos($str,\
    \ '0') === false) {\n            $result[] = $element;\n        }\n    }\n   \
    \ sort($result);\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n}\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp24c5r7tv.php:17\n\
    Stack trace:\n#0 /tmp/tmp24c5r7tv.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp24c5r7tv.php\
    \ on line 17\n"
  timestamp: 1659823299
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\tforeach ($x as $number) {\n\
    \t\t$digits = str_split($number);\n\t\tforeach ($digits as $digit) {\n\t\t\tif\
    \ ($digit % 2 == 0) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ($digit % 2 == 0)\
    \ {\n\t\t\tunset($x[$number]);\n\t\t}\n\t}\n\tsort($x);\n\treturn $x;\n}\n$arr\
    \ = array(15, 33, 1422, 1);\nprint_r(unique_digits($arr));\n$arr2 = array(152,\
    \ 323, 1422, 10);\nprint_r(unique_digits($arr2));\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 15\n    [2] => 33\n    [3] => 1422\n\
    )\nArray\n(\n    [0] => 10\n    [1] => 152\n    [2] => 323\n    [3] => 1422\n\
    )\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkwo3toqm.php:34\n\
    Stack trace:\n#0 /tmp/tmpkwo3toqm.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpkwo3toqm.php\
    \ on line 34\n"
  timestamp: 1659977959
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $arr = array();\n    foreach\
    \ ($x as $element) {\n        if ($element == 0) {\n            continue;\n  \
    \      }\n        $num = $element;\n        $found = false;\n        while ($num\
    \ != 0) {\n            $rem = $num % 10;\n            if ($rem == 0 || $rem ==\
    \ 2 || $rem == 4 || $rem == 6 || $rem == 8) {\n                $found = true;\n\
    \                break;\n            }\n            $num = intval($num / 10);\n\
    \        }\n        if (!$found) {\n            $arr[] = $element;\n        }\n\
    \    }\n    sort($arr);\n    return $arr;\n}\necho '<pre>';\nprint_r(unique_digits(array(15,\
    \ 33, 1422, 1)));\nprint_r(unique_digits(array(152, 323, 1422, 10)));\necho '</pre>';\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 15\n    [2] => 33\n)\nArray\n(\n\
    )\n</pre>"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    return array_values(array_filter($x,\
    \ function($num) {\n        return preg_match(\"/[02468]/\", (string)$num) ==\
    \ 0;\n    }));\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfc_f_afa.php:21\n\
    Stack trace:\n#0 /tmp/tmpfc_f_afa.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpfc_f_afa.php\
    \ on line 21\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $a = [];\n    foreach ($x\
    \ as $y) {\n        if (strlen(strval($y)) == strlen(preg_replace('/[02468]/',\
    \ '', strval($y)))) {\n            $a[] = $y;\n        }\n    }\n    return count($a)\
    \ == 0 ? [] : sorted($a);\n}\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function sorted() in /tmp/tmp77_qb909.php:17\n\
    Stack trace:\n#0 /tmp/tmp77_qb909.php(20): unique_digits(Array)\n#1 /tmp/tmp77_qb909.php(24):\
    \ candidate(Array)\n#2 /tmp/tmp77_qb909.php(30): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmp77_qb909.php on line 17\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $val) {\n        if (!has_even_digit($val)) {\n            $result[]\
    \ = $val;\n        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function has_even_digit()\
    \ in /tmp/tmp_ic9w78f.php:13\nStack trace:\n#0 /tmp/tmp_ic9w78f.php(22): unique_digits(Array)\n\
    #1 /tmp/tmp_ic9w78f.php(26): candidate(Array)\n#2 /tmp/tmp_ic9w78f.php(32): test()\n\
    #3 {main}\n  thrown in /tmp/tmp_ic9w78f.php on line 13\n"
  timestamp: 1659977959
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t// return array_filter($x,\
    \ 'isOdd');\n\t// $res = array();\n\t// foreach ($x as $val) {\n\t// \tif (isOdd($val))\
    \ $res[] = $val;\n\t// }\n\t// return $res;\n\t$y = array();\n\tforeach ($x as\
    \ $val) {\n\t\t$str = (string)$val;\n\t\t$count = 0;\n\t\tfor ($i = 0; $i < strlen($str);\
    \ $i++) {\n\t\t\tif ($str[$i] % 2 == 0) {\n\t\t\t\t$count++;\n\t\t\t}\n\t\t}\n\
    \t\tif ($count == 0) {\n\t\t\t$y[] = $val;\n\t\t}\n\t}\n\tsort($y);\n\treturn\
    \ $y;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$evens = array('0', '2', '4',\
    \ '6', '8');\n\t$y = array();\n\tforeach ($x as $val) {\n\t\t$val = strval($val);\n\
    \t\t$num = 0;\n\t\tforeach (str_split($val) as $digit) {\n\t\t\tif (in_array($digit,\
    \ $evens)) {\n\t\t\t\t$num++;\n\t\t\t}\n\t\t}\n\t\tif ($num === 0) {\n\t\t\t$y[]\
    \ = $val;\n\t\t}\n\t}\n\tsort($y);\n\treturn $y;\n}\n\nprint_r(unique_digits(array(15,\
    \ 33, 1422, 1)));\nprint_r(unique_digits(array(152, 323, 1422, 10)));\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 15\n    [2] => 33\n)\nArray\n(\n)\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp4lpou0qc.php:36\nStack\
    \ trace:\n#0 /tmp/tmp4lpou0qc.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp4lpou0qc.php\
    \ on line 36\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $numbers = array();\n  \
    \  $evens = array('0', '2', '4', '6', '8');\n    foreach ($x as $num) {\n    \
    \    $num = (string) $num;\n        $has_even = false;\n        foreach ($evens\
    \ as $even) {\n            if (strpos($num, $even) !== false) {\n            \
    \    $has_even = true;\n                break;\n            }\n        }\n   \
    \     if (!$has_even) {\n            $numbers[] = $num;\n        }\n    }\n  \
    \  sort($numbers);\n    return $numbers;\n}\nfunction candidate(...$args) {\n\
    \    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxp9pec22.php:34\n\
    Stack trace:\n#0 /tmp/tmpxp9pec22.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpxp9pec22.php\
    \ on line 34\n"
  timestamp: 1659977959
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $r = array();\n    foreach\
    \ ($x as $i) {\n        if (preg_match('/(?:[02468])/', (string)$i)) {\n     \
    \       continue;\n        }\n        $r[] = $i;\n    }\n    sort($r);\n    return\
    \ $r;\n}\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $result = array();\n  foreach\
    \ ($x as $i) {\n    $i_str = strval($i);\n    if (strpos($i_str, '2') === false\
    \ and\n        strpos($i_str, '4') === false and\n        strpos($i_str, '6')\
    \ === false and\n        strpos($i_str, '8') === false) {\n      $result[] = $i;\n\
    \    }\n  }\n  sort($result);\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf7_6x47x.php:31\n\
    Stack trace:\n#0 /tmp/tmpf7_6x47x.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpf7_6x47x.php\
    \ on line 31\n"
  timestamp: 1659977959
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $num) {\n        $digits = str_split($num);\n        $hasEven = false;\n\
    \        foreach ($digits as $digit) {\n            if ($digit % 2 == 0) {\n \
    \               $hasEven = true;\n                break;\n            }\n    \
    \    }\n        if (!$hasEven) {\n            $result[] = $num;\n        }\n \
    \   }\n    sort($result);\n    return $result;\n}\n$arr = [15, 33, 1422, 1];\n\
    echo \"Input: \";\necho \"[\";\nfor ($i = 0; $i < count($arr); $i++) {\n    echo\
    \ $arr[$i];\n    if ($i != count($arr) - 1) {\n        echo \", \";\n    }\n}\n\
    echo \"]\";\necho \"<br>\";\necho \"Output: \";\necho \"[\";\n$arr = unique_digits($arr);\n\
    for ($i = 0; $i < count($arr); $i++) {\n    echo $arr[$i];\n    if ($i != count($arr)\
    \ - 1) {\n        echo \", \";\n    }\n}\necho \"]\";\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'Input: [15, 33, 1422, 1]<br>Output: [1, 15, 33]'
  timestamp: 1659977960
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $result = array();\n  foreach\
    \ ($x as $value) {\n    if (!has_even_digit($value)) {\n      $result[] = $value;\n\
    \    }\n  }\n  sort($result);\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function has_even_digit()\
    \ in /tmp/tmpbyqxvn45.php:13\nStack trace:\n#0 /tmp/tmpbyqxvn45.php(22): unique_digits(Array)\n\
    #1 /tmp/tmpbyqxvn45.php(26): candidate(Array)\n#2 /tmp/tmpbyqxvn45.php(32): test()\n\
    #3 {main}\n  thrown in /tmp/tmpbyqxvn45.php on line 13\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\n}\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2p8xuwxx.php:18\n\
    Stack trace:\n#0 /tmp/tmp2p8xuwxx.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2p8xuwxx.php\
    \ on line 18\n"
  timestamp: 1659977959
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$res = array();\n\tforeach\
    \ ($x as $i) {\n\t\tif (!unique($i)) {\n\t\t\t$res[] = $i;\n\t\t}\n\t}\n\tsort($res);\n\
    \treturn $res;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function unique() in /tmp/tmp_bbju50l.php:13\n\
    Stack trace:\n#0 /tmp/tmp_bbju50l.php(22): unique_digits(Array)\n#1 /tmp/tmp_bbju50l.php(26):\
    \ candidate(Array)\n#2 /tmp/tmp_bbju50l.php(32): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmp_bbju50l.php on line 13\n"
  timestamp: 1659977960
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  return array_filter($x, function($n)\
    \ {\n    return (bool)preg_match('/^[^24680]+$/', \"$n\");\n  });\n}\n\nprint_r(unique_digits(array(15,\
    \ 33, 1422, 1)));\nprint_r(unique_digits(array(152, 323, 1422, 10)));\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 15\n    [1] => 33\n    [3] => 1\n)\nArray\n(\n)\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp3xax68i0.php:23\nStack\
    \ trace:\n#0 /tmp/tmp3xax68i0.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp3xax68i0.php\
    \ on line 23\n"
  timestamp: 1659977960
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $arrEven = array();\n  \
    \  $arrOdd = array();\n    $arrX = array();\n    $arrReturn = array();\n    foreach\
    \ ($x as $key => $value) {\n        $arrX[$key] = $value;\n        $arrEven[$key]\
    \ = 0;\n        $arrOdd[$key] = 0;\n    }\n    foreach ($arrX as $key => $value)\
    \ {\n        for ($i = 0; $i < strlen($value); $i++) {\n            if (intval($value[$i])\
    \ % 2 === 0) {\n                $arrEven[$key]++;\n            } else {\n    \
    \            $arrOdd[$key]++;\n            }\n        }\n    }\n    for ($i =\
    \ 0; $i < count($arrEven); $i++) {\n        if ($arrEven[$i] === 0) {\n      \
    \      $arrReturn[] = $arrX[$i];\n        }\n    }\n    return $arrReturn;\n}\n\
    print_r(unique_digits(array(15, 33, 1422, 1)));\necho \"<br>\";\nprint_r(unique_digits(array(152,\
    \ 323, 1422, 10)));\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Warning: Trying to access array offset on value of type int in /tmp/tmpfljqnr6g.php
    on line 22


    Warning: Trying to access array offset on value of type int in /tmp/tmpfljqnr6g.php
    on line 22


    Warning: Trying to access array offset on value of type int in /tmp/tmpfljqnr6g.php
    on line 22


    Warning: Trying to access array offset on value of type int in /tmp/tmpfljqnr6g.php
    on line 22


    Warning: Trying to access array offset on value of type int in /tmp/tmpfljqnr6g.php
    on line 22


    Warning: Trying to access array offset on value of type int in /tmp/tmpfljqnr6g.php
    on line 22


    Warning: Trying to access array offset on value of type int in /tmp/tmpfljqnr6g.php
    on line 22


    Warning: Trying to access array offset on value of type int in /tmp/tmpfljqnr6g.php
    on line 22


    Warning: Trying to access array offset on value of type int in /tmp/tmpfljqnr6g.php
    on line 22

    Array

    (

    )

    <br>

    Warning: Trying to access array offset on value of type int in /tmp/tmpfljqnr6g.php
    on line 22


    Warning: Trying to access array offset on value of type int in /tmp/tmpfljqnr6g.php
    on line 22


    Warning: Trying to access array offset on value of type int in /tmp/tmpfljqnr6g.php
    on line 22


    Warning: Trying to access array offset on value of type int in /tmp/tmpfljqnr6g.php
    on line 22


    Warning: Trying to access array offset on value of type int in /tmp/tmpfljqnr6g.php
    on line 22


    Warning: Trying to access array offset on value of type int in /tmp/tmpfljqnr6g.php
    on line 22


    Warning: Trying to access array offset on value of type int in /tmp/tmpfljqnr6g.php
    on line 22


    Warning: Trying to access array offset on value of type int in /tmp/tmpfljqnr6g.php
    on line 22


    Warning: Trying to access array offset on value of type int in /tmp/tmpfljqnr6g.php
    on line 22


    Warning: Trying to access array offset on value of type int in /tmp/tmpfljqnr6g.php
    on line 22


    Warning: Trying to access array offset on value of type int in /tmp/tmpfljqnr6g.php
    on line 22


    Warning: Trying to access array offset on value of type int in /tmp/tmpfljqnr6g.php
    on line 22

    Array

    (

    )


    Warning'
  timestamp: 1659977960
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $result = array();\n  foreach\
    \ ($x as $number) {\n    $numberStr = strval($number);\n    $hasEven = false;\n\
    \    for ($i = 0; $i < strlen($numberStr); $i++) {\n      if ($numberStr[$i] %\
    \ 2 == 0) {\n        $hasEven = true;\n        break;\n      }\n    }\n    if\
    \ (!$hasEven) {\n      array_push($result, $number);\n    }\n  }\n  sort($result);\n\
    \  return $result;\n}\necho(implode(', ', unique_digits(array(15, 33, 1422, 1))));\n\
    echo \"\\n\";\necho(implode(', ', unique_digits(array(152, 323, 1422, 10))));\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1, 15, 33


    '
  timestamp: 1659977960
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$len = count($x);\n\t$tmp\
    \ = [];\n\tfor ($i = 0; $i < $len; $i++) {\n\t\t$hasEven = false;\n\t\t$num =\
    \ $x[$i];\n\t\twhile ($num > 0) {\n\t\t\t$digit = $num % 10;\n\t\t\tif ($digit\
    \ % 2 == 0) {\n\t\t\t\t$hasEven = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t$num =\
    \ intval($num / 10);\n\t\t}\n\t\tif (!$hasEven) {\n\t\t\t$tmp[] = $x[$i];\n\t\t\
    }\n\t}\n\treturn $tmp;\n}\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprdecrcqn.php:36\n\
    Stack trace:\n#0 /tmp/tmprdecrcqn.php(42): test()\n#1 {main}\n  thrown in /tmp/tmprdecrcqn.php\
    \ on line 36\n"
  timestamp: 1659977960
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    foreach ($x as $k => $v)\
    \ {\n        while ($v >= 10) {\n            if (($v % 10) % 2 == 0) {\n     \
    \           unset($x[$k]);\n                break;\n            }\n          \
    \  $v /= 10;\n        }\n    }\n    sort($x);\n    return $x;\n}\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 32.3 to int loses precision in /tmp/tmph853hprv.php
    on line 13


    Deprecated: Implicit conversion from float 1234.5 to int loses precision in /tmp/tmph853hprv.php
    on line 13


    Deprecated: Implicit conversion from float 203.3 to int loses precision in /tmp/tmph853hprv.php
    on line 13


    Deprecated: Implicit conversion from float 20.330000000000002 to int loses precision
    in /tmp/tmph853hprv.php on line 13


    Deprecated: Implicit conversion from float 11.1 to int loses precision in /tmp/tmph853hprv.php
    on line 13


    Deprecated: Implicit conversion from float 15.1 to int loses precision in /tmp/tmph853hprv.php
    on line 13


    Deprecated: Implicit conversion from float 13.5 to int loses precision in /tmp/tmph853hprv.php
    on line 13


    Deprecated: Implicit conversion from float 10.3 to int loses precision in /tmp/tmph853hprv.php
    on line 13

    '
  timestamp: 1659977960
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t// Write your code here\n\t\
    $result = array();\n\tfor ($i = 0; $i < count($x); $i++) {\n\t\t$number = $x[$i];\n\
    \t\t$hasEvenDigit = false;\n\t\twhile ($number > 0) {\n\t\t\t$digit = $number\
    \ % 10;\n\t\t\tif ($digit % 2 == 0) {\n\t\t\t\t$hasEvenDigit = true;\n\t\t\t\t\
    break;\n\t\t\t}\n\t\t\t$number = floor($number / 10);\n\t\t}\n\t\tif (!$hasEvenDigit)\
    \ {\n\t\t\tarray_push($result, $x[$i]);\n\t\t}\n\t}\n\treturn $result;\n}\n\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuqoz5_rr.php:36\n\
    Stack trace:\n#0 /tmp/tmpuqoz5_rr.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpuqoz5_rr.php\
    \ on line 36\n"
  timestamp: 1659977960
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\tforeach ($x as $key => $value)\
    \ {\n\t\t$result = str_split($value);\n\t\t$unique = array_unique($result);\n\t\
    \tif (sizeof($result) !== sizeof($unique)) {\n\t\t\tunset($x[$key]);\n\t\t}\n\t\
    }\n\tsort($x);\n\treturn $x;\n}\n\nfunction candidate(...$args) {\n    return\
    \ unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjojopga3.php:27\n\
    Stack trace:\n#0 /tmp/tmpjojopga3.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpjojopga3.php\
    \ on line 27\n"
  timestamp: 1659977960
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $y = array();\n  for ($i =\
    \ 0; $i < count($x); $i++) {\n    if (preg_match(\"/[13579]/\", $x[$i])) {\n \
    \     array_push($y, $x[$i]);\n    }\n  }\n  sort($y);\n  return $y;\n}\nprint_r(unique_digits(array(152,\
    \ 323, 1422, 10)));\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 10\n    [1] => 152\n    [2] => 323\n    [3] => 1422\n\
    )\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6tx_b2la.php:26\n\
    Stack trace:\n#0 /tmp/tmp6tx_b2la.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp6tx_b2la.php\
    \ on line 26\n"
  timestamp: 1659977960
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t// $x is an array of integers\n\
    \t// Return a sorted array of all elements that has no even digit\n\t$arr = [];\n\
    \t$y = [];\n\t$str;\n\t$str2;\n\tfor ($i = 0; $i < count($x); $i++) {\n\t\t$str\
    \ = strval($x[$i]);\n\t\t$str2 = str_split($str);\n\t\tfor ($j = 0; $j < count($str2);\
    \ $j++) {\n\t\t\tif ($str2[$j] % 2 == 0) {\n\t\t\t\tarray_push($arr, $x[$i]);\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tsort($arr);\n\tfor ($i = 0; $i < count($x);\
    \ $i++) {\n\t\tif (!in_array($x[$i], $arr)) {\n\t\t\tarray_push($y, $x[$i]);\n\
    \t\t}\n\t}\n\tsort($y);\n\treturn $y;\n}\nfunction candidate(...$args) {\n   \
    \ return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(15,\
    \ 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(12345, 2033, 111, 151)) !== array(111,\
    \ 151)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(135,\
    \ 103, 31)) !== array(31, 135)) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977960
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  return array_filter($x, function($i)\
    \ {\n    return !preg_match('/[2468]/', (string)$i);\n  });\n}\nprint_r(unique_digits(array(15,\
    \ 33, 1422, 1)));\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 15\n    [1] => 33\n    [3] => 1\n)\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpbammzhn1.php:21\nStack trace:\n\
    #0 /tmp/tmpbammzhn1.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpbammzhn1.php\
    \ on line 21\n"
  timestamp: 1659977960
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $result = array();\n  foreach\
    \ ($x as $k) {\n    if (strpos($k, '2') === false && strpos($k, '4') === false\
    \ && strpos($k, '6') === false && strpos($k, '8') === false) {\n      $result[]\
    \ = $k;\n    }\n  }\n  sort($result);\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfzj0gdqc.php:27\n\
    Stack trace:\n#0 /tmp/tmpfzj0gdqc.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpfzj0gdqc.php\
    \ on line 27\n"
  timestamp: 1659977960
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n    $result = [];\n    foreach\
    \ ($x as $item) {\n        $str = strval($item);\n        $has_even = false;\n\
    \        for ($i = 0; $i < strlen($str); $i++) {\n            if ($str[$i] % 2\
    \ == 0) {\n                $has_even = true;\n                break;\n       \
    \     }\n        }\n        if (!$has_even) {\n            $result[] = $item;\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977960
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t//your code here\n}\n\nfunction\
    \ candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323, 1422,\
    \ 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp13da9uc1.php:19\n\
    Stack trace:\n#0 /tmp/tmp13da9uc1.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp13da9uc1.php\
    \ on line 19\n"
  timestamp: 1659977960
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $r = [];\n  foreach ($x as\
    \ $e) {\n    if (strlen(strval($e)) == 1) {\n      $r[] = $e;\n    } else {\n\
    \      $even = False;\n      for ($i = 0; $i < strlen(strval($e)); $i++) {\n \
    \       if (intval(strval($e)[$i]) % 2 == 0) {\n          $even = True;\n    \
    \      break;\n        }\n      }\n      if (!$even) {\n        $r[] = $e;\n \
    \     }\n    }\n  }\n  sort($r);\n  return $r;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977960
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n}\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp24c5r7tv.php:17\n\
    Stack trace:\n#0 /tmp/tmp24c5r7tv.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp24c5r7tv.php\
    \ on line 17\n"
  timestamp: 1659823299
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $arr = [];\n  $even = false;\n\
    \  foreach ($x as $key => $value) {\n    while($value > 0) {\n      $mod = $value\
    \ % 10;\n      if($mod % 2 == 0) {\n        $even = true;\n        break;\n  \
    \    }\n      $value = $value / 10;\n    }\n    if($even == false) {\n      array_push($arr,\
    \ $x[$key]);\n    }\n    $even = false;\n  }\n  return sort($arr);\n}\nprint_r(unique_digits(array(15,\
    \ 33, 1422, 1)));\necho '<br>';\nprint_r(unique_digits(array(152, 323, 1422, 10)));\n\
    function candidate(...$args) {\n    return unique_digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152, 323,\
    \ 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345,\
    \ 2033, 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 1.5 to int loses precision\
    \ in /tmp/tmp1qxsf8wk.php on line 15\n\nDeprecated: Implicit conversion from float\
    \ 0.15 to int loses precision in /tmp/tmp1qxsf8wk.php on line 15\n\nDeprecated:\
    \ Implicit conversion from float 3.3 to int loses precision in /tmp/tmp1qxsf8wk.php\
    \ on line 15\n\nDeprecated: Implicit conversion from float 0.32999999999999996\
    \ to int loses precision in /tmp/tmp1qxsf8wk.php on line 15\n\nDeprecated: Implicit\
    \ conversion from float 0.1 to int loses precision in /tmp/tmp1qxsf8wk.php on\
    \ line 15\n1<br>\nDeprecated: Implicit conversion from float 32.3 to int loses\
    \ precision in /tmp/tmp1qxsf8wk.php on line 15\n1\nDeprecated: Implicit conversion\
    \ from float 1.5 to int loses precision in /tmp/tmp1qxsf8wk.php on line 15\n\n\
    Deprecated: Implicit conversion from float 0.15 to int loses precision in /tmp/tmp1qxsf8wk.php\
    \ on line 15\n\nDeprecated: Implicit conversion from float 3.3 to int loses precision\
    \ in /tmp/tmp1qxsf8wk.php on line 15\n\nDeprecated: Implicit conversion from float\
    \ 0.32999999999999996 to int loses precision in /tmp/tmp1qxsf8wk.php on line 15\n\
    \nDeprecated: Implicit conversion from float 0.1 to int loses precision in /tmp/tmp1qxsf8wk.php\
    \ on line 15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1qxsf8wk.php:37\n\
    Stack trace:\n#0 /tmp/tmp1qxsf8wk.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp1qxsf8wk.php\
    \ on line 37\n"
  timestamp: 1659977960
- exit_code: 0
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $even_digits = array(0, 2,\
    \ 4, 6, 8);\n  $result = array();\n  foreach ($x as $item) {\n    $digits = str_split($item);\n\
    \    $match = 0;\n    foreach ($digits as $d) {\n      if (in_array($d, $even_digits))\
    \ {\n        $match = 1;\n        break;\n      }\n    }\n    if ($match == 0)\
    \ {\n      $result[] = $item;\n    }\n  }\n  sort($result);\n  return $result;\n\
    }\nprint_r(unique_digits(array(15, 33, 1422, 1)));\nprint_r(unique_digits(array(152,\
    \ 323, 1422, 10)));\n\nfunction candidate(...$args) {\n    return unique_digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(15, 33, 1422, 1)) !== array(1,\
    \ 15, 33)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(152,\
    \ 323, 1422, 10)) !== array()) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(135, 103, 31)) !== array(31,\
    \ 135)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 15\n    [2] => 33\n)\nArray\n(\n)\n"
  timestamp: 1659977960
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n  $output = array();\n  foreach\
    \ ($x as $item) {\n    if (preg_match('/^([1-9]+)$/', strval($item))) {\n    \
    \  $output[] = $item;\n    }\n  }\n  return $output;\n}\n\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsqncz_0x.php:25\n\
    Stack trace:\n#0 /tmp/tmpsqncz_0x.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpsqncz_0x.php\
    \ on line 25\n"
  timestamp: 1659977960
- exit_code: 255
  program: "<?php\n// Given an array of positive integers x. return a sorted array\
    \ of all \n// elements that hasn't any even digit.\n// Note: Returned array should\
    \ be sorted in increasing order.\n// For example:\n// >>> unique_digits(array(15,\
    \ 33, 1422, 1))\n// array(1, 15, 33)\n// >>> unique_digits(array(152, 323, 1422,\
    \ 10))\n// array()\nfunction unique_digits($x) {\n\t$result = array();\n\tforeach\
    \ ($x as $number) {\n\t\t$flag = 0;\n\t\twhile ($number != 0) {\n\t\t\t$current\
    \ = $number % 10;\n\t\t\tif (($current % 2) == 0) {\n\t\t\t\t$flag = 1;\n\t\t\t\
    \tbreak;\n\t\t\t}\n\t\t\t$number = (int)($number / 10);\n\t\t}\n\t\tif ($flag\
    \ == 0)\n\t\t\tarray_push($result, $number);\n\t}\n\tsort($result);\n\treturn\
    \ $result;\n}\n\nprint_r(unique_digits(array(15, 33, 1422, 1)));\nfunction candidate(...$args)\
    \ {\n    return unique_digits(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(152, 323, 1422, 10)) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(12345, 2033,\
    \ 111, 151)) !== array(111, 151)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 0\n    [1] => 0\n    [2] => 0\n)\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp_lf0pvur.php:35\nStack trace:\n#0 /tmp/tmp_lf0pvur.php(41):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp_lf0pvur.php on line 35\n"
  timestamp: 1659977960

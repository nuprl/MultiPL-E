name: HumanEval_99_closest_integer
language: php
prompt: "<?php\n// Create a function that takes a value (string) representing a number\n\
  // and returns the closest integer to it. If the number is equidistant\n// from\
  \ two integers, round it away from zero.\n// Examples\n// >>> closest_integer(\"\
  10\")\n// 10\n// >>> closest_integer(\"15.3\")\n// 15\n// Note:\n// Rounding away\
  \ from zero means that if the given number is equidistant\n// from two integers,\
  \ the one you should return is the one that is the\n// farthest from zero. For example\
  \ closest_integer(\"14.5\") should\n// return 15 and closest_integer(\"-14.5\")\
  \ should return -15.\nfunction closest_integer($value) {\n"
tests: "function candidate(...$args) {\n    return closest_integer(...$args);\n}\n\
  \nfunction test(): void {\n    if (candidate(\"10\") !== 10) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"14.5\") !== 15) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"-15.5\") !== -16) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"15.3\") !== 15) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"0\") !== 0) { throw new Exception(\"Test\
  \ failed!\"); }\n}\n\ntest();"
completions: ["    $value_parts = explode('.', $value);\n    if (count($value_parts)\
    \ === 1) {\n        return intval($value);\n    } else {\n        $decimal = intval($value_parts[1][0]);\n\
    \        if ($decimal >= 5) {\n            return intval($value_parts[0]) + 1;\n\
    \        } else {\n            return intval($value_parts[0]);\n        }\n  \
    \  }\n}\n", "    $val = (int) $value;\n    if ($value - $val >= 0.5) {\n     \
    \   return $val + 1;\n    } else {\n        return $val;\n    }\n}", "\t$number\
    \ = explode(\".\", $value);\n\tif (strpos($value, \".\") !== false) {\n\t\tif\
    \ ($number[1] >= 5) {\n\t\t\treturn ++$number[0];\n\t\t} else {\n\t\t\treturn\
    \ $number[0];\n\t\t}\n\t} else {\n\t\treturn $number[0];\n\t}\n}\n\necho closest_integer(\"\
    10\") . \"<br />\";\necho closest_integer(\"15.3\") . \"<br />\";\necho closest_integer(\"\
    -14.5\") . \"<br />\";", "  $integer = floor($value);\n  $decimal = $value - $integer;\n\
    \  if ($decimal > 0.5) {\n    return $integer + 1;\n  } elseif ($decimal < 0.5)\
    \ {\n    return $integer;\n  } else {\n    return $integer;\n  }\n}", "  return\
    \ round($value);\n}\n", "    return ceil($value - 0.5);\n}\n\n$output = closest_integer(\"\
    10\");\necho $output;", "  return 0;\n}\n\necho closest_integer(\"10\");\necho\
    \ \"\\n\";\necho closest_integer(\"15.3\");\necho \"\\n\";\necho closest_integer(\"\
    14.5\");\necho \"\\n\";\necho closest_integer(\"-14.5\");\necho \"\\n\";", " \
    \ //enter code here\n}\n", "\t$floored = floor($value);\n\t$ceiled = ceil($value);\n\
    \tif (abs($value - $floored) > abs($value - $ceiled)) {\n\t\treturn $ceiled;\n\
    \t} elseif (abs($value - $floored) < abs($value - $ceiled)) {\n\t\treturn $floored;\n\
    \t} else {\n\t\tif ($value > 0) {\n\t\t\treturn $ceiled;\n\t\t} else {\n\t\t\t\
    return $floored;\n\t\t}\n\t}\n}", "    $value_arr = explode('.', $value);\n  \
    \  if(count($value_arr) > 1) {\n        if($value_arr[1] > 0) {\n            return\
    \ $value_arr[0] + 1;\n        }\n    }\n    return $value_arr[0];\n}\n", "  return\
    \ round($value);\n}\n", "    return round($value);\n}", "\t$int = (int) $value;\n\
    \t$float = (float) $value;\n\tif ($float > $int) {\n\t\treturn $int + 1;\n\t}\
    \ else {\n\t\treturn $int;\n\t}\n}\nprint closest_integer(\"10\") . \"\\n\";\n\
    print closest_integer(\"15.3\") . \"\\n\";\nprint closest_integer(\"14.5\") .\
    \ \"\\n\";\nprint closest_integer(\"-14.5\") . \"\\n\";", "    return is_numeric($value)\
    \ ? ($value - floor($value) > .5 ? ceil($value) : floor($value)) : false;\n}",
  "    $dec = strpos($value, '.');\n    $part1 = substr($value, 0, $dec);\n    $part2\
    \ = substr($value, $dec+1, 1);\n    if ($part2 >= 5) {\n        $part1++;\n  \
    \  }\n    return (int)$part1;\n}\n$value = \"15.3\";\necho $value . \" => \" .\
    \ closest_integer($value) . \"\\n\";\n$value = \"10\";\necho $value . \" => \"\
    \ . closest_integer($value) . \"\\n\";\n$value = \"14.5\";\necho $value . \" =>\
    \ \" . closest_integer($value) . \"\\n\";\n$value = \"-14.5\";\necho $value .\
    \ \" => \" . closest_integer($value) . \"\\n\";", "\t$value = round($value);\n\
    \treturn $value;\n}\necho closest_integer(\"10\") . PHP_EOL;\necho closest_integer(\"\
    15.3\") . PHP_EOL;\necho closest_integer(\"-15.3\") . PHP_EOL;", "    $string\
    \ = (string)$value;\n    $arr = explode('.', $string);\n    if(sizeof($arr) ==\
    \ 1) {\n        return $value;\n    }\n    $integer_part = $arr[0];\n    $decimal_part\
    \ = (int)$arr[1];\n    if ($decimal_part > 5) {\n        $integer_part = (int)$integer_part\
    \ + 1;\n    }\n    return $integer_part;\n}\n", "    return $value >= 0 ? (int)ceil($value)\
    \ : (int)floor($value);\n}", "  return round($value);\n}\necho closest_integer(\"\
    10\").\"\\n\";\necho closest_integer(\"15.3\").\"\\n\";\necho closest_integer(\"\
    14.5\").\"\\n\";\necho closest_integer(\"-14.5\").\"\\n\";", "    // Write your\
    \ code here\n    // To print results to the standard output you can use print\n\
    \    // Example:\n    // print \"Hello world!\";\n}", "    // Write your code\
    \ here\n    // To print results to the standard output you can use print\n   \
    \ // Example:\n    // print \"Hello world!\";\n    return round($value);\n}\n\n\
    echo closest_integer(\"15.3\");", "  $value = explode(\".\", $value);\n  return\
    \ (int)$value[0];\n}\necho closest_integer(\"10\") . \"\\n\";\necho closest_integer(\"\
    15.3\") . \"\\n\";\necho closest_integer(\"-14.5\") . \"\\n\";\necho closest_integer(\"\
    14.5\") . \"\\n\";", "    $number = floatval($value);\n    return ceil($number\
    \ - 0.5);\n}\n\necho closest_integer(\"-1.6\");", "  return (int)round($value);\n\
    }\nprint(closest_integer(\"10\"));\nprint(\"\\n\");\nprint(closest_integer(\"\
    15.3\"));\nprint(\"\\n\");\nprint(closest_integer(\"14.5\"));\nprint(\"\\n\");\n\
    print(closest_integer(\"-14.5\"));\nprint(\"\\n\");", "  $split = explode(\".\"\
    , $value);\n  if($split[1] >= 5) {\n    $split[0]++;\n  }\n  return $split[0];\n\
    }", "  $value = (string)$value;\n  $number = explode(\".\", $value);\n  if(isset($number[1]))\
    \ {\n    $fraction = substr($number[1], 0, 1);\n    if($fraction >= 5) {\n   \
    \   $number[0] = $number[0] + 1;\n    }\n  }\n  return $number[0];\n}\nprint closest_integer(14.5)\
    \ . PHP_EOL;\nprint closest_integer(-14.5) . PHP_EOL;\nprint closest_integer(14.2)\
    \ . PHP_EOL;\nprint closest_integer(-14.2) . PHP_EOL;", "  return $value - fmod($value,\
    \ 1);\n}", "    $floor = floor($value);\n    $ceil = ceil($value);\n    if ($value\
    \ - $floor < $ceil - $value) {\n        return $floor;\n    } else {\n       \
    \ return $ceil;\n    }\n}", "  //$value = strval($value);\n  $decimal = explode(\"\
    .\", $value);\n  if ($decimal[1] >= 0.5) {\n    if (is_positive($value)) {\n \
    \     return ($decimal[0] + 1);\n    } else {\n      return ($decimal[0] - 1);\n\
    \    }\n  } else {\n    return $decimal[0];\n  }\n}\n", "  $value = (float)$value;\n\
    \  return ($value - floor($value) >= 0.5) ? floor($value) + 1 : floor($value);\n\
    }", "\tif($value > 0) {\n\t\t$closest = ceil($value);\n\t} else {\n\t\t$closest\
    \ = floor($value);\n\t}\n\treturn $closest;\n}\n\n$value = \"10\";\necho closest_integer($value);",
  "    $closest = round($value);\n    //  print $closest;\n    if ($closest < $value)\
    \ {\n        $closest++;\n    }\n    return $closest;\n}\nprint_r(closest_integer(\"\
    -10\"));", "    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    \    if($value < 0) {\n        $value = abs($value);\n        $l_value = floor($value);\n\
    \        $h_value = ceil($value);\n        if($l_value - $value < $h_value - $value)\
    \ {\n            $closest_value = $l_value;\n        } else {\n            $closest_value\
    \ = $h_value;\n        }\n        $closest_value = -$closest_value;\n    } else\
    \ {\n        $l_value = floor($value);\n        $h_value = ceil($value);\n   \
    \     if($l_value - $value < $h_value - $value) {\n            $closest_value\
    \ = $l_value;\n        } else {\n            $closest_value = $h_value;\n    \
    \    }\n    }\n    return $closest_value;\n}", "  return round($value);\n}\n\n\
    echo closest_integer(\"14.5\");", "    return round($value);\n}\n\necho closest_integer(\"\
    14.5\");\necho \"\\n\";\necho closest_integer(\"-14.5\");", "  $value = round($value);\n\
    \  if (substr($value, -1) >= 5) {\n    $value += 1;\n  }\n  return $value;\n}\n",
  "    $remainder = $value - (int)$value;\n    if ($remainder < 0.5) {\n        return\
    \ (int)$value;\n    } else {\n        return (int)$value + 1;\n    }\n}\necho\
    \ closest_integer(\"10\") . PHP_EOL;\necho closest_integer(\"15.3\") . PHP_EOL;\n\
    echo closest_integer(\"14.5\") . PHP_EOL;\necho closest_integer(\"-14.5\") . PHP_EOL;",
  "    $rounded = round($value);\n    $difference = $value - $rounded;\n    if ($difference\
    \ < 0) {\n        return $rounded - 1;\n    } elseif ($difference > 0) {\n   \
    \     return $rounded + 1;\n    } else {\n        return $rounded;\n    }\n}",
  "  // 1) Split the string into numbers and decimal values\n  $whole = explode(\"\
    .\", $value);\n  // 2) If there is no decimal\n  if(!isset($whole[1])) {\n   \
    \ return $whole[0];\n  }\n  // 3) If there is a decimal\n  $dec = explode(\"\"\
    , $whole[1]);\n  if($dec[0] < 5) {\n    return $whole[0];\n  } else {\n    return\
    \ ++$whole[0];\n  }\n}\n", "  $value = floatval($value);\n  return ($value > 0)\
    \ ? round($value) : ceil($value);\n}\necho closest_integer(\"10\") . \"\\n\";\n\
    echo closest_integer(\"15.3\") . \"\\n\";\necho closest_integer(\"14.5\") . \"\
    \\n\";\necho closest_integer(\"-14.5\") . \"\\n\";", "\t$round = round($value);\n\
    \t$floor = floor($value);\n\t$ceil = ceil($value);\n\tif (abs($value - $round)\
    \ < abs($value - $floor)) {\n\t\tif (abs($value - $round) < abs($value - $ceil))\
    \ {\n\t\t\treturn $round;\n\t\t} else {\n\t\t\treturn $ceil;\n\t\t}\n\t} else\
    \ {\n\t\tif (abs($value - $floor) < abs($value - $ceil)) {\n\t\t\treturn $floor;\n\
    \t\t} else {\n\t\t\treturn $ceil;\n\t\t}\n\t}\n}\n", "  $num = (int)$value;\n\
    \  $diff = abs($value - $num);\n  $rounded = round($value);\n  $diff2 = abs($value\
    \ - $rounded);\n  return $diff > $diff2 ? $rounded : $num;\n}\necho closest_integer(\"\
    10\") . \"\\n\";\necho closest_integer(\"15.3\") . \"\\n\";\necho closest_integer(\"\
    14.5\") . \"\\n\";\necho closest_integer(\"-14.5\") . \"\\n\";\n", "    $closest\
    \ = 0;\n    if ($value > 0) {\n        for ($i = 0; $i < $value; $i++) {\n   \
    \         if ($value - $i < $value + $i) {\n                $closest = $i;\n \
    \               break;\n            }\n        }\n    } else {\n        for ($i\
    \ = 0; $i > $value; $i--) {\n            if ($value - $i > $value + $i) {\n  \
    \              $closest = $i;\n                break;\n            }\n       \
    \ }\n    }\n    return $closest;\n}\n", "  return round($value);\n}\necho closest_integer(\"\
    10\") . PHP_EOL;\necho closest_integer(\"15.3\") . PHP_EOL;\n", "    return round($value);\n\
    }\n\necho closest_integer(\"10\") . PHP_EOL;\necho closest_integer(\"15.3\") .\
    \ PHP_EOL;\necho closest_integer(\"14.5\") . PHP_EOL;\necho closest_integer(\"\
    -14.5\") . PHP_EOL;", "  $num = floatval($value);\n  $integer = floor($num);\n\
    \  $decimal = $num - $integer;\n  if($decimal > 0.5) {\n    return $integer +\
    \ 1;\n  } else {\n    return $integer;\n  }\n}\n$output = closest_integer(\"14.5\"\
    );\necho $output;", "  return intval(round($value));\n}\n\nprint closest_integer(\"\
    10\") . \"\\n\";\nprint closest_integer(\"15.3\") . \"\\n\";\nprint closest_integer(\"\
    14.5\") . \"\\n\";\nprint closest_integer(\"-14.5\") . \"\\n\";", "  $rounded\
    \ = round($value);\n  if ($rounded < $value)\n    return $rounded + 1;\n  else\n\
    \    return $rounded;\n}\n", "    $int = intval($value);\n    if($value - $int\
    \ == 0.5) {\n        return $int + 1;\n    } elseif ($value - $int == -0.5) {\n\
    \        return $int - 1;\n    } else {\n        return round($value);\n    }\n\
    }", "\n}", "  $decimal = abs(floatval($value) - intval($value));\n  if($decimal\
    \ >= 0.5) {\n    return intval($value) + 1;\n  } else {\n    return intval($value);\n\
    \  }\n}\n\necho closest_integer(\"10\");\necho \"\\n\";\necho closest_integer(\"\
    15.3\");\necho \"\\n\";\necho closest_integer(\"14.5\");\necho \"\\n\";\necho\
    \ closest_integer(\"-14.5\");", "\n}\n", "  $nearest_int = round($value);\n  return\
    \ $nearest_int;\n}\n\necho closest_integer(10) . PHP_EOL;\necho closest_integer(15.3)\
    \ . PHP_EOL;\necho closest_integer(-14.5) . PHP_EOL;", "\tif (intval($value) ==\
    \ $value) {\n\t\treturn intval($value);\n\t} else {\n\t\treturn round($value);\n\
    \t}\n}", "  // Write your code here\n  // To print results to the standard output\
    \ you can use print\n  // Example:\n  // print \"Hello world!\";\n  $val = (int)$value;\n\
    \  if($val-$value == 0)\n    print $val;\n  elseif($val+1-$value <= 0.5)\n   \
    \ print $val+1;\n  else\n    print $val;\n}\n\nfscanf(STDIN, \"%s\\n\", $value);\n\
    closest_integer($value);", "  $floor = floor($value);\n  $ceil = ceil($value);\n\
    \  if ($value - $floor == 0.5) {\n    if ($floor >= 0) {\n      return $ceil;\n\
    \    } else {\n      return $floor;\n    }\n  } else {\n    return round($value);\n\
    \  }\n}\n", "  $decimal = $value - floor($value);\n  return (round($decimal) ==\
    \ 0.5) ? round($value) : round($value, 0, PHP_ROUND_HALF_DOWN);\n}\n", "    //\
    \ Write your code here\n    // To print results to the standard output you can\
    \ use print\n    // Example:\n    // print \"Hello world!\";\n    $number = (float)$value;\n\
    \    $first_number = ceil($number);\n    $second_number = floor($number);\n  \
    \  $first_diff = $first_number - $number;\n    $second_diff = $number - $second_number;\n\
    \    if ($first_diff < $second_diff) {\n        return $first_number;\n    } else\
    \ {\n        return $second_number;\n    }\n}\n$value = 15.3;\nprint closest_integer($value);",
  "\t$value = (int)$value;\n\tif ($value < 0) {\n\t\t$value = -$value;\n\t}\n    return\
    \ $value;\n}\necho closest_integer(\"12.6\");", "  $ceil = ceil($value);\n  $floor\
    \ = floor($value);\n  $ceil_diff = $ceil - $value;\n  $floor_diff = $value - $floor;\n\
    \  if ($ceil_diff > $floor_diff) {\n    return $floor;\n  } elseif ($ceil_diff\
    \ < $floor_diff) {\n    return $ceil;\n  } else {\n    return 0;\n  }\n}\necho\
    \ closest_integer(\"10\") . PHP_EOL;\necho closest_integer(\"15.3\") . PHP_EOL;\n\
    echo closest_integer(\"14.5\") . PHP_EOL;\necho closest_integer(\"-14.5\") . PHP_EOL;\n\
    echo closest_integer(\"-14.7\") . PHP_EOL;", "  return $value >= 0 ? floor($value)\
    \ : ceil($value);\n}\necho closest_integer(\"15.3\");\necho \"\\n\";\necho closest_integer(\"\
    14.5\");\necho \"\\n\";\necho closest_integer(\"-14.5\");", "  $value1 = round($value);\n\
    \  $value2 = round($value, 0, PHP_ROUND_HALF_DOWN);\n  $value3 = round($value,\
    \ 0, PHP_ROUND_HALF_UP);\n  if (abs($value1 - $value) < abs($value2 - $value))\
    \ {\n    return $value1;\n  } else if (abs($value1 - $value) > abs($value2 - $value))\
    \ {\n    return $value2;\n  } else {\n    return $value3;\n  }\n}\necho closest_integer(\"\
    -13.8\");", "    return round($value);\n}", "    return (int)round($value);\n}",
  "    $int = (int) round($value);\n    $diff = $value - $int;\n    if ($diff >= 0.5)\
    \ {\n        return $int + 1;\n    } elseif ($diff < 0.5 && $diff > 0) {\n   \
    \     return $int;\n    } elseif ($diff <= 0 && $diff > -0.5) {\n        return\
    \ $int;\n    } else {\n        return $int - 1;\n    }\n}", "    return round($value);\n\
    }\n\n$tests = array(\"10\", \"15.3\", \"14.5\", \"-14.5\");\n\nforeach ($tests\
    \ as $test) {\n    echo closest_integer($test) . \"\\n\";\n}", "  $value = floatval($value);\n\
    \  $closest_integer = round($value);\n  return $closest_integer;\n}\necho closest_integer('10')\
    \ . \"<br>\";\necho closest_integer('15.3') . \"<br>\";\necho closest_integer('-14.5')\
    \ . \"<br>\";\necho closest_integer('14.5') . \"<br>\";\necho closest_integer('16.8')\
    \ . \"<br>\";", "    $num = intval($value);\n    if ($num == $value) {\n     \
    \   return $num;\n    } elseif ($num < $value) {\n        return $num + 1;\n \
    \   } else {\n        return $num - 1;\n    }\n}\n\n$input1 = \"10\";\n$input2\
    \ = \"15.3\";\necho closest_integer($input1) . \"\\n\";\necho closest_integer($input2)\
    \ . \"\\n\";", "    // your code here\n}", "    return (integer)$value;\n}\n",
  "  $res = number_format($value, 0, '.', '');\n  if($res >= $value) {\n    return\
    \ $res;\n  }\n  return $res - 1;\n}", "    return round($value);\n}", "  $num\
    \ = floatval($value);\n  $num1 = floor($num);\n  $num2 = ceil($num);\n  if ($num\
    \ < 0) {\n    $num1 = ceil($num);\n    $num2 = floor($num);\n  }\n  $answer =\
    \ round($num, 0, PHP_ROUND_HALF_UP);\n  if ($answer == $num1) {\n    $answer =\
    \ $num1;\n  } else if ($answer == $num2) {\n    $answer = $num2;\n  }\n  return\
    \ $answer;\n}", "\treturn round($value);\n}\necho closest_integer(\"10\").\"\\\
    n\";\necho closest_integer(\"15.3\").\"\\n\";\necho closest_integer(\"14.5\").\"\
    \\n\";\necho closest_integer(\"-14.5\").\"\\n\";", "  $round = round($value);\n\
    \  $floor = floor($value);\n  $ceil = ceil($value);\n  if (abs($value - $floor)\
    \ === abs($value - $ceil)) {\n    return abs($value) < $ceil ? $floor : $ceil;\n\
    \  }\n  return abs($value - $floor) < abs($value - $ceil) ? $floor : $ceil;\n\
    }\necho closest_integer(\"10\") . PHP_EOL;\necho closest_integer(\"15.3\") . PHP_EOL;\n\
    echo closest_integer(\"14.5\") . PHP_EOL;\necho closest_integer(\"-14.5\") . PHP_EOL;\n",
  "  return round($value);\n}\n\nprint_r(closest_integer(\"10\"));", "    $floorValue\
    \ = floor($value);\n    $ceilValue = ceil($value);\n    $result = round($value);\n\
    \    if ($value < 0) {\n        if ((abs($value) - $floorValue) > 0.5) {\n   \
    \         $result = $ceilValue;\n        } else {\n            $result = $floorValue;\n\
    \        }\n    } else {\n        if (($ceilValue - $value) > 0.5) {\n       \
    \     $result = $floorValue;\n        } else {\n            $result = $ceilValue;\n\
    \        }\n    }\n    return $result;\n}\n", "\t$num = intval($value);\n\t$float\
    \ = $value - $num;\n\tif ($float == 0) {\n\t\treturn $num;\n\t} elseif ($float\
    \ > 0.5) {\n\t\treturn $num + 1;\n\t} else {\n\t\treturn $num;\n\t}\n}", "  $value\
    \ = round($value);\n  return $value;\n}\necho closest_integer(\"10\");\necho \"\
    <br />\";\necho closest_integer(\"15.3\");\necho \"<br />\";\necho closest_integer(\"\
    14.5\");\necho \"<br />\";\necho closest_integer(\"-14.5\");", "  return round($value);\n\
    }\necho closest_integer(\"10\").\"\\n\";\necho closest_integer(\"15.3\").\"\\\
    n\";\necho closest_integer(\"14.5\").\"\\n\";\necho closest_integer(\"-14.5\"\
    ).\"\\n\";", "    $isNegative = substr($value, 0, 1) === '-';\n    $int = $isNegative\
    \ ? intval(substr($value, 1)) : intval($value);\n    $decimal = abs($value - $int);\n\
    \    $inc = $int + 1;\n    if ($decimal > abs($value - $inc)) {\n        return\
    \ $isNegative ? -$inc : $inc;\n    }\n    return $isNegative ? -$int : $int;\n\
    }", "    // Write your code here\n    // To print results to the standard output\
    \ you can use print\n    // Example:\n    // print \"Hello world!\";\n    if($value\
    \ > 0){\n        return ceil($value);\n    }else{\n        return floor($value);\n\
    \    }\n}", "  // Write your code here\n  $value = number_format($value, 0, '.',\
    \ '');\n  return (int)$value;\n}", "  $decimals = $value - floor($value);\n  if\
    \ ($decimals < 0.5) {\n    return floor($value);\n  } else {\n    return ceil($value);\n\
    \  }\n}", "    $num = round($value);\n    $dec = $value - $num;\n    if ($dec\
    \ > 0) {\n        return $num;\n    } else {\n        return $num - 1;\n    }\n\
    }\n\n$value = \"-10.5\";\necho closest_integer($value);", "  return round($value);\n\
    }\n\necho closest_integer(\"10\").\"\\n\";\necho closest_integer(\"15.3\").\"\\\
    n\";\necho closest_integer(\"-14.5\").\"\\n\";", "  $values = explode(\".\", $value);\n\
    \  if (sizeof($values) > 1) {\n    if ($values[1] < 50) {\n      return $values[0];\n\
    \    } else {\n      return intval($values[0]) + 1;\n    }\n  } else {\n    return\
    \ $value;\n  }\n}\necho closest_integer(\"10\") . PHP_EOL;\necho closest_integer(\"\
    15.3\") . PHP_EOL;\necho closest_integer(\"14.5\") . PHP_EOL;\necho closest_integer(\"\
    -14.5\") . PHP_EOL;", "  return round($value);\n}\necho closest_integer('10')\
    \ . PHP_EOL;\necho closest_integer('15.3') . PHP_EOL;\necho closest_integer('14.5')\
    \ . PHP_EOL;\necho closest_integer('-14.5') . PHP_EOL;", "  // Your code here\n\
    }", "    return round($value);\n}\n\necho \"Closest integer of 14.5 is \" . closest_integer(14.5)\
    \ . \"<br>\";\necho \"Closest integer of -14.5 is \" . closest_integer(-14.5)\
    \ . \"<br>\";\necho \"Closest integer of 14.4 is \" . closest_integer(14.4) .\
    \ \"<br>\";\necho \"Closest integer of -14.4 is \" . closest_integer(-14.4) .\
    \ \"<br>\";\necho \"Closest integer of 14.6 is \" . closest_integer(14.6) . \"\
    <br>\";\necho \"Closest integer of -14.6 is \" . closest_integer(-14.6) . \"<br>\"\
    ;", "    return round($value);\n}\n", "    $result = round($value);\n    return\
    \ $result;\n}\necho closest_integer(\"10\") . \"\\n\";\necho closest_integer(\"\
    15.3\") . \"\\n\";\necho closest_integer(\"14.5\") . \"\\n\";\necho closest_integer(\"\
    -14.5\") . \"\\n\";", "  $ceil = ceil($value);\n  $floor = floor($value);\n  $ceil_temp\
    \ = ceil($value);\n  $floor_temp = floor($value);\n  $ceil_temp = abs($ceil_temp);\n\
    \  $floor_temp = abs($floor_temp);\n  $ceil_temp = abs($ceil_temp) - abs($value);\n\
    \  $floor_temp = abs($value) - abs($floor_temp);\n  if ($ceil_temp < $floor_temp)\
    \ {\n    return $ceil;\n  } elseif ($ceil_temp > $floor_temp) {\n    return $floor;\n\
    \  } elseif ($ceil_temp == $floor_temp) {\n    return $ceil;\n  }\n}\necho(closest_integer(\"\
    10\"));\necho(\"\\n\");\necho(closest_integer(\"15.3\"));\necho(\"\\n\");\necho(closest_integer(\"\
    14.5\"));\necho(\"\\n\");\necho(closest_integer(\"-14.5\"));\necho(\"\\n\");\n",
  "    $integer = round($value);\n    if ($value < 0) {\n        $diff1 = abs($value\
    \ - $integer);\n        $diff2 = abs($value - ($integer - 1));\n        if ($diff1\
    \ < $diff2) {\n            return $integer;\n        } else {\n            return\
    \ $integer - 1;\n        }\n    } else {\n        $diff1 = abs($value - $integer);\n\
    \        $diff2 = abs($value - ($integer + 1));\n        if ($diff1 < $diff2)\
    \ {\n            return $integer;\n        } else {\n            return $integer\
    \ + 1;\n        }\n    }\n}\n\n$answer = closest_integer(\"10\");\necho $answer;\n",
  "    $value = (float)$value;\n    if($value>=0){\n      $ceil = ceil($value);\n\
    \      $floor = floor($value);\n      if($ceil-$value > $value-$floor){\n    \
    \    return $floor;\n      }else{\n        return $ceil;\n      }\n    }else{\n\
    \      $ceil = ceil($value);\n      $floor = floor($value);\n      if($ceil-$value\
    \ > $value-$floor){\n        return $ceil;\n      }else{\n        return $floor;\n\
    \      }\n    }\n}\necho closest_integer(\"10\").\"\\n\";\necho closest_integer(\"\
    15.3\").\"\\n\";\necho closest_integer(\"14.5\").\"\\n\";\necho closest_integer(\"\
    -14.5\").\"\\n\";\necho closest_integer(\"-17.9\").\"\\n\";\necho closest_integer(\"\
    -10\").\"\\n\";\n", "    return round($value);\n}", "    $integers = array_map(function($value)\
    \ {\n        return abs($value - (int)$value);\n    }, range(floor($value), ceil($value)));\n\
    \    asort($integers);\n    return array_slice(array_keys($integers), 0, 1)[0];\n\
    }\n\nprint_r(closest_integer(\"10\") . \"\\n\");\nprint_r(closest_integer(\"15.3\"\
    ) . \"\\n\");\nprint_r(closest_integer(\"14.5\") . \"\\n\");\nprint_r(closest_integer(\"\
    -14.5\") . \"\\n\");", "  // Your code here\n}", "    $down = floor($value);\n\
    \    $up = ceil($value);\n    $diff_down = $value - $down;\n    $diff_up = $up\
    \ - $value;\n    if ($diff_down > $diff_up) {\n        return $up;\n    } else\
    \ {\n        return $down;\n    }\n}", "    $value = floatval($value);\n    $previous\
    \ = floor($value);\n    $next = ceil($value);\n    if ($value > 0) {\n       \
    \ if (($value - $previous) <= ($next - $value)) {\n            return $previous;\n\
    \        } else {\n            return $next;\n        }\n    } else {\n      \
    \  if (($previous - $value) <= ($value - $next)) {\n            return $previous;\n\
    \        } else {\n            return $next;\n        }\n    }\n}\n", "    //\
    \ Write your code here\n    // To print results to the standard output you can\
    \ use print\n    // Example:\n    // print \"Hello world!\";\n}", "    $strlen\
    \ = strlen($value);\n    $dot_pos = strpos($value, '.');\n    if ($dot_pos ===\
    \ false) {\n        return (int)$value;\n    }\n    $next_digit = $value[$dot_pos\
    \ + 1];\n    $result = (int)$value;\n    if ($next_digit >= 5) {\n        $result++;\n\
    \    }\n    return $result;\n}", "\n}", "    return round($value);\n}\necho closest_integer(\"\
    10\");\necho PHP_EOL;\necho closest_integer(\"15.3\");\necho PHP_EOL;", "    return\
    \ round($value);\n}", "    $value = floatval($value);\n    if ($value > 0) {\n\
    \        $return = floor($value);\n        if ($value - $return >= 0.5) {\n  \
    \          $return++;\n        }\n    } else {\n        $return = ceil($value);\n\
    \        if ($return - $value >= 0.5) {\n            $return--;\n        }\n \
    \   }\n    return $return;\n}\necho closest_integer(\"15.3\") . \"\\n\";\necho\
    \ closest_integer(\"14.5\") . \"\\n\";\necho closest_integer(\"-14.5\") . \"\\\
    n\";", "    // Write your code here\n    // To print results to the standard output\
    \ you can use print\n    // Example:\n    // print \"Hello world!\";\n}", "  $up_down\
    \ = $value > 0 ? ceil($value) : floor($value);\n  $up_up = $value > 0 ? ceil($value)\
    \ + 1 : floor($value) - 1;\n  $down_down = $value > 0 ? ceil($value) - 1 : floor($value)\
    \ + 1;\n  $up_diff = abs($value - $up_up);\n  $down_diff = abs($value - $down_down);\n\
    \  $up_down_diff = abs($value - $up_down);\n  if ($up_diff < $down_diff && $up_diff\
    \ < $up_down_diff) {\n    return $up_up;\n  } elseif ($down_diff < $up_diff &&\
    \ $down_diff < $up_down_diff) {\n    return $down_down;\n  } else {\n    return\
    \ $up_down;\n  }\n}", "    // Your code here\n}\n", "  return round($value);\n\
    }\n\necho closest_integer(\"10\");", "    return round($value);\n}\n", "    $num\
    \ = intval($value);\n    $floor = floor($value);\n    $ceil = ceil($value);\n\
    \    if ($floor == $ceil) {\n        return $floor;\n    }\n    if (abs($value\
    \ - $floor) < abs($value - $ceil)) {\n        return $floor;\n    }\n    if (abs($value\
    \ - $floor) > abs($value - $ceil)) {\n        return $ceil;\n    }\n    if ($value\
    \ > 0) {\n        return $ceil;\n    }\n    return $floor;\n}", "  // Your code\
    \ here\n}\n", "  // Your code here\n  $value = floatval($value);\n  return (int)round($value);\n\
    }\n\nif(is_numeric($_GET['num'])) {\n  echo closest_integer($_GET['num']);\n}",
  "  $value += 0.5;\n  return round($value);\n}\necho closest_integer(\"10\");\necho\
    \ \"\\n\";\necho closest_integer(\"15.3\");\necho \"\\n\";\necho closest_integer(\"\
    -14.5\");\necho \"\\n\";\necho closest_integer(\"14.5\");\necho \"\\n\";\n ?>",
  "  return round($value);\n}\necho closest_integer(\"10\");\necho PHP_EOL;\necho\
    \ closest_integer(\"15.3\");\necho PHP_EOL;\necho closest_integer(\"14.5\");\n\
    echo PHP_EOL;\necho closest_integer(\"-14.5\");\necho PHP_EOL;", "  return round($value);\n\
    }\n", "    return round($value);\n}", "    $value = round($value);\n    return\
    \ $value;\n}", "\treturn ((int) round($value)) - ($value > 0 ? 1 : 0);\n}\n\n\
    $int = closest_integer('10');\necho $int;\necho \"\\n\";\n$int = closest_integer('15.3');\n\
    echo $int;\necho \"\\n\";\n$int = closest_integer('14.5');\necho $int;\necho \"\
    \\n\";\n$int = closest_integer('-14.5');\necho $int;\necho \"\\n\";\n$int = closest_integer('-14.0');\n\
    echo $int;\necho \"\\n\";\n$int = closest_integer('-0.5');\necho $int;\necho \"\
    \\n\";\n$int = closest_integer('-1.5');\necho $int;\necho \"\\n\";", "    return\
    \ round($value);\n}", "    //$whole = floor($value);\n    $dec = $value - floor($value);\n\
    \    if ($dec == 0.5) {\n        if ($value > 0) {\n            return (ceil($value));\n\
    \        } else {\n            return (floor($value));\n        }\n    } else\
    \ {\n        return (round($value));\n    }\n}\n\necho closest_integer(\"-14.5\"\
    ) . \"\\n\";", "  $num = floatval($value);\n  $ceil = ceil($num);\n  $floor =\
    \ floor($num);\n  if (($ceil - $num) == 0.5) {\n    return $ceil;\n  } elseif\
    \ (($ceil - $num) < 0.5) {\n    return $ceil;\n  } else {\n    return $floor;\n\
    \  }\n}\n$test = closest_integer(\"-14.5\");\necho $test;", "  $temp = intval($value);\n\
    \  if ($temp == $value) {\n    return $temp;\n  } else {\n    if ($value < 0)\
    \ {\n      $temp--;\n    } else {\n      $temp++;\n    }\n    return $temp;\n\
    \  }\n}\necho closest_integer('15.3');", "    return round($value);\n}\necho closest_integer(14.5);",
  "    return round($value);\n}\necho closest_integer(\"10\");\necho \"\\n\";\necho\
    \ closest_integer(\"15.3\");\necho \"\\n\";\necho closest_integer(\"14.5\");\n\
    echo \"\\n\";\necho closest_integer(\"-14.5\");\necho \"\\n\";", "    $rounded_value\
    \ = round($value);\n    if ($value < 0) {\n        if ($value - $rounded_value\
    \ < -0.5) {\n            return $rounded_value;\n        } else {\n          \
    \  return $rounded_value - 1;\n        }\n    } else {\n        if ($value - $rounded_value\
    \ < 0.5) {\n            return $rounded_value;\n        } else {\n           \
    \ return $rounded_value + 1;\n        }\n    }\n}\n", "  $integer = intval($value);\n\
    \  $difference = $value - $integer;\n  if ($difference < 0) {\n    $difference\
    \ = -$difference;\n  }\n  if ($difference >= 0.5) {\n    $integer += 1;\n  }\n\
    \  return $integer;\n}\n\necho closest_integer('10') . PHP_EOL;\necho closest_integer('15.3')\
    \ . PHP_EOL;\necho closest_integer('14.5') . PHP_EOL;\necho closest_integer('-14.5')\
    \ . PHP_EOL;", "    return round($value);\n}\n\nvar_dump(closest_integer(\"10\"\
    )); // 10\nvar_dump(closest_integer(\"15.3\")); // 15\nvar_dump(closest_integer(\"\
    14.5\")); // 15\nvar_dump(closest_integer(\"-14.5\")); // -15", "    // your code\
    \ here\n    if (is_int($value)) {\n        return $value;\n    }\n    $val2 =\
    \ floor($value);\n    $val3 = ceil($value);\n    $val4 = abs($value - $val2);\n\
    \    $val5 = abs($value - $val3);\n    if ($val4 < $val5) {\n        return $val2;\n\
    \    } else {\n        return $val3;\n    }\n}", "  $value = floatval($value);\n\
    \  if(floor($value) == $value) return $value;\n  if($value < 0) {\n    if($value\
    \ >= floor($value) + 0.5) return floor($value);\n    else return ceil($value);\n\
    \  }\n  if($value >= floor($value) + 0.5) return ceil($value);\n  else return\
    \ floor($value);\n}", "  $num = round($value);\n  if ($num > $value) {\n    $num\
    \ = $num - 1;\n  }\n  return $num;\n}\n\n$num = \"10\";\necho closest_integer($num)\
    \ . PHP_EOL;\n\n$num = \"15.3\";\necho closest_integer($num) . PHP_EOL;\n\n$num\
    \ = \"14.5\";\necho closest_integer($num) . PHP_EOL;\n\n$num = \"-14.5\";\necho\
    \ closest_integer($num) . PHP_EOL;", "\treturn round($value);\n}", "  $value =\
    \ round($value);\n  return $value;\n}", "    $array = explode(\".\", $value);\n\
    \    if ($array[1] > 5){\n        return $array[0] + 1;\n    } else {\n      \
    \  return $array[0];\n    }\n}\necho closest_integer(\"10\").PHP_EOL;\necho closest_integer(\"\
    15.3\").PHP_EOL;\n", "\t// Your code here\n\t$str = '';\n\tif(strpos($value, '.')\
    \ == false) {\n\t\treturn $value;\n\t} else {\n\t\t$temp = explode('.', $value);\n\
    \t\tif($temp[1] > 5) {\n\t\t\t$str = $temp[0] + 1;\n\t\t} else {\n\t\t\t$str =\
    \ $temp[0];\n\t\t}\n\t}\n\treturn $str;\n}\n\necho closest_integer(\"10\").PHP_EOL;\n\
    echo closest_integer(\"15.3\").PHP_EOL;\necho closest_integer(\"14.5\").PHP_EOL;\n\
    echo closest_integer(\"-14.5\").PHP_EOL;\n", "  return round($value);\n}\n\necho\
    \ closest_integer(\"10\");\necho closest_integer(\"15.3\");\necho closest_integer(\"\
    14.5\");\necho closest_integer(\"-14.5\");", "    // Write your code here\n  \
    \  $float_input = floatval($value);\n    $int_input = intval($value);\n    if($float_input\
    \ - $int_input >= 0.5) {\n        return $int_input + 1;\n    }\n    else {\n\
    \        return $int_input;\n    }\n}\n", "  return round($value);\n}", "  return\
    \ round($value);\n}\n\necho closest_integer(\"10\") . PHP_EOL;\necho closest_integer(\"\
    15.3\") . PHP_EOL;\necho closest_integer(\"14.5\") . PHP_EOL;\necho closest_integer(\"\
    -14.5\") . PHP_EOL;\n ?>", "    $number = floatval($value);\n    $number_int =\
    \ intval($number);\n    $number_frac = $number - $number_int;\n    if ($number_frac\
    \ < 0.5) {\n        return $number_int;\n    } else {\n        return $number_int\
    \ + 1;\n    }\n}\necho closest_integer(\"10\") . PHP_EOL;\necho closest_integer(\"\
    15.3\") . PHP_EOL;\necho closest_integer(\"-14.5\") . PHP_EOL;\n", "    return\
    \ round($value);\n}\necho closest_integer(\"10\") . PHP_EOL;\necho closest_integer(\"\
    15.3\") . PHP_EOL;\necho closest_integer(\"-14.5\") . PHP_EOL;\necho closest_integer(\"\
    14.5\") . PHP_EOL;\necho closest_integer(\"-15.3\") . PHP_EOL;\necho closest_integer(\"\
    16.5\") . PHP_EOL;\necho closest_integer(\"-16.5\") . PHP_EOL;", "  $num = explode(\"\
    .\", $value);\n  if(count($num)==1) {\n    return $num[0];\n  }\n  else {\n  \
    \  if($num[1] >= 5) {\n      return $num[0] + 1;\n    }\n    else {\n      return\
    \ $num[0];\n    }\n  }\n}", "  $val = floatval($value);\n  return ceil($val);\n\
    }\necho closest_integer(\"10\").\"\\n\";\necho closest_integer(\"15.3\").\"\\\
    n\";\necho closest_integer(\"14.5\").\"\\n\";\necho closest_integer(\"-14.5\"\
    ).\"\\n\";\n ?>", "  return (round($value));\n}\necho closest_integer(\"10\");\n\
    echo PHP_EOL;\necho closest_integer(\"15.3\");\necho PHP_EOL;", "    $rounded\
    \ = round($value);\n    $ceiled = ceil($value);\n    $floored = floor($value);\n\
    \    $distance_rounded = abs($value - $rounded);\n    $distance_ceiled = abs($value\
    \ - $ceiled);\n    $distance_floored = abs($value - $floored);\n    if ($distance_rounded\
    \ <= $distance_ceiled && $distance_rounded <= $distance_floored) {\n        return\
    \ $rounded;\n    } elseif ($distance_ceiled <= $distance_rounded && $distance_ceiled\
    \ <= $distance_floored) {\n        return $ceiled;\n    } else {\n        return\
    \ $floored;\n    }\n}\necho 'closest_integer(\"10\")';\necho '<br>';\necho closest_integer(\"\
    10\");\necho '<br>';\necho 'closest_integer(\"15.3\")';\necho '<br>';\necho closest_integer(\"\
    15.3\");\necho '<br>';\necho 'closest_integer(\"14.5\")';\necho '<br>';\necho\
    \ closest_integer(\"14.5\");\necho '<br>';\necho 'closest_integer(\"-14.5\")';\n\
    echo '<br>';\necho closest_integer(\"-14.5\");\necho '<br>';\necho 'closest_integer(\"\
    -15.3\")';\necho '<br>';\necho closest_integer(\"-15.3\");\necho '<br>';\necho\
    \ 'closest_integer(\"-10\")';\necho '<br>';\necho closest_integer(\"-10\");\n\
    echo '<br>';", "    return round($value);\n}", "  //your code here\n}\n", "  \
    \  $val = (string)$value;\n    $val_array = explode('.', $val);\n    if(!isset($val_array[1]))\
    \ {\n        return $val;\n    } elseif($val_array[1] >= 5) {\n        return\
    \ $val_array[0] + 1;\n    } else {\n        return $val_array[0];\n    }\n}",
  "  $number = floatval($value);\n  $number1 = ceil($number);\n  $number2 = floor($number);\n\
    \  if ($number - $number2 >= 0.5) {\n    return $number1;\n  } else {\n    return\
    \ $number2;\n  }\n}\necho \"closest_integer(\\\"10\\\") => \" . closest_integer(\"\
    10\") . \"\\n\";\necho \"closest_integer(\\\"15.3\\\") => \" . closest_integer(\"\
    15.3\") . \"\\n\";\necho \"closest_integer(\\\"14.5\\\") => \" . closest_integer(\"\
    14.5\") . \"\\n\";\necho \"closest_integer(\\\"-14.5\\\") => \" . closest_integer(\"\
    -14.5\") . \"\\n\";\necho \"closest_integer(\\\"-15.3\\\") => \" . closest_integer(\"\
    -15.3\") . \"\\n\";\necho \"closest_integer(\\\"0\\\") => \" . closest_integer(\"\
    0\") . \"\\n\";\necho \"closest_integer(\\\"-0.6\\\") => \" . closest_integer(\"\
    -0.6\") . \"\\n\";\necho \"closest_integer(\\\"0.6\\\") => \" . closest_integer(\"\
    0.6\") . \"\\n\";", "  return round($value);\n}\n", "    $value = is_float($value)\
    \ ? $value : intval($value);\n    return $value - ($value % 1) + ($value > 0 ?\
    \ 0.5 : -0.5);\n}\necho closest_integer(\"10\") . \"\\n\";\necho closest_integer(\"\
    15.3\") . \"\\n\";\necho closest_integer(\"14.5\") . \"\\n\";\necho closest_integer(\"\
    -14.5\") . \"\\n\";", "\n}\n", "  // Convert the value to a string because\n \
    \ // that is what is expected in the return\n  // statement.\n  $value = $value\
    \ . \"\";\n  // Find the index of the \".\" character.\n  $index = strpos($value,\
    \ \".\");\n  // If there is a \".\" character, find the\n  // substring after\
    \ it.\n  if ($index) {\n    $value = substr($value, $index + 1);\n  }\n  // If\
    \ the value is less than 5, return the\n  // original value cast to an integer.\n\
    \  if ($value < 5) {\n    return (int)$value;\n  }\n  // If the value is greater\
    \ than or equal to 5,\n  // return the value + 1 cast to an integer.\n  return\
    \ (int)$value + 1;\n}", "  $value = explode(\".\", $value);\n  $num = strlen($value[1]);\n\
    \  if($num % 2 == 0){\n    $val = round($value[1]);\n    $res = array($value[0],\
    \ $val);\n    $res = implode($res);\n    return $res;\n  }\n  else{\n    $val\
    \ = round($value[1], 1);\n    $res = array($value[0], $val);\n    $res = implode($res);\n\
    \    return $res;\n  }\n}\n", "    return round($value);\n}\n\nprint_r(closest_integer(\"\
    10\") . \"\\n\");\nprint_r(closest_integer(\"15.3\") . \"\\n\");\nprint_r(closest_integer(\"\
    14.5\") . \"\\n\");\nprint_r(closest_integer(\"-14.5\") . \"\\n\");", "    $num\
    \ = floatval($value);\n    $num_int = intval($num);\n    $int_above = intval($num)\
    \ + 1;\n    $int_below = intval($num) - 1;\n    $remainder = $num - $num_int;\n\
    \    if ($remainder == 0) {\n        return $num_int;\n    } else if ($remainder\
    \ >= 0.5) {\n        return $int_above;\n    } else {\n        return $int_below;\n\
    \    }\n}\n", "  // Your code here\n}\n", "    return round($value);\n}\necho\
    \ closest_integer(\"10\");\necho \"\\n\";\necho closest_integer(\"15.3\");\necho\
    \ \"\\n\";\necho closest_integer(\"14.5\");\necho \"\\n\";\necho closest_integer(\"\
    -14.5\");", "    return round($value);\n}", "\t$to_return = (int) $value;\n\t\
    $decimal = $value - $to_return;\n\treturn $decimal > 0 ? $to_return + 1 : $to_return;\n\
    }\n", "    return (int)$value;\n}\n\necho \"<pre>closest_integer('14.5')\\r\\\
    n\";\nvar_dump(closest_integer('14.5'));\necho \"</pre>\";\necho \"<pre>closest_integer('10')\\\
    r\\n\";\nvar_dump(closest_integer('10'));\necho \"</pre>\";\necho \"<pre>closest_integer('15.3')\\\
    r\\n\";\nvar_dump(closest_integer('15.3'));\necho \"</pre>\";\necho \"<pre>closest_integer('-14.5')\\\
    r\\n\";\nvar_dump(closest_integer('-14.5'));\necho \"</pre>\";", "    // Write\
    \ your code here\n    // To print results to the standard output you can use print\n\
    \    // Example:\n    // print \"Hello world!\";\n}\n", "    $closest = round($value);\n\
    \    $is_closest_up = $closest < $value;\n    $diff_up = abs($closest - $value);\n\
    \    $diff_down = abs($closest - $value);\n    if ($diff_up > $diff_down) {\n\
    \        $closest = $closest - 1;\n    }\n    return $closest;\n}", "    $number\
    \ = round($value);\n    return $number;\n}", "    return round($value);\n}\n",
  "    return round($value);\n}", "  return round($value);\n}\necho closest_integer(\"\
    14.5\");", "    $s = (string) $value;\n    $dot = strpos($s, '.');\n    if ($dot\
    \ === false) {\n        return (int) $s;\n    }\n    $s = str_replace('.', '',\
    \ $s);\n    $n = $s[$dot];\n    if ($n > 5) {\n        $s[$dot] = '5';\n     \
    \   $s = intval($s);\n        return $s + 1;\n    }\n    $s[$dot] = '5';\n   \
    \ return intval($s);\n}\n", "   return round($value);\n}\n", "    $ret = round($value);\n\
    \    if ($ret > $value) {\n        $ret -= 1;\n    }\n    return $ret;\n}", " \
    \   return round($value);\n}\n", "  $val = 0;\n  $val = ($value - floor($value)\
    \ >= 0.5) ? ceil($value) : floor($value);\n  return $val;\n}\necho closest_integer(\"\
    10\") . \"\\n\";\necho closest_integer(\"15.3\") . \"\\n\";\necho closest_integer(\"\
    14.5\") . \"\\n\";\necho closest_integer(\"-14.5\") . \"\\n\";", "    $value =\
    \ (float)$value;\n    return $value - $value % 1 >= 0.5 ? ceil($value) : floor($value);\n\
    }\n$test = closest_integer(\"10\");\nprint_r($test);\necho \"\\n\";\n$test2 =\
    \ closest_integer(\"15.3\");\nprint_r($test2);\necho \"\\n\";", "    //\n}\n",
  "    $number = round($value);\n    if($number > $value) {\n        return $number\
    \ - 1;\n    }\n    else {\n        return $number;\n    }\n}\necho \"closest_integer(\\\
    \"10\\\")\";\necho \"<br>\";\necho closest_integer(\"10\");\necho \"<br>\";\n\
    echo \"closest_integer(\\\"15.3\\\")\";\necho \"<br>\";\necho closest_integer(\"\
    15.3\");\necho \"<br>\";\necho \"closest_integer(\\\"14.5\\\")\";\necho \"<br>\"\
    ;\necho closest_integer(\"14.5\");\necho \"<br>\";\necho \"closest_integer(\\\"\
    -14.5\\\")\";\necho \"<br>\";\necho closest_integer(\"-14.5\");\necho \"<br>\"\
    ;", "    $result = round($value);\n    return $result;\n}\nprint \"Closest Integer:\
    \ \" . closest_integer(\"10\") . \"\\n\";\nprint \"Closest Integer: \" . closest_integer(\"\
    15.3\") . \"\\n\";\n", "  $num = floor($value);\n  $diff = $value - $num;\n  if\
    \ ($diff == 0.5) {\n    if ($value > 0) {\n      return $num + 1;\n    } else\
    \ {\n      return $num - 1;\n    }\n  } else {\n    return round($value);\n  }\n\
    }\n\necho closest_integer(\"10\") . PHP_EOL;\necho closest_integer(\"15.3\") .\
    \ PHP_EOL;\necho closest_integer(\"14.5\") . PHP_EOL;\necho closest_integer(\"\
    -14.5\") . PHP_EOL;\necho closest_integer(\"15.6\") . PHP_EOL;\necho closest_integer(\"\
    -15.5\") . PHP_EOL;\necho closest_integer(\"15.4\") . PHP_EOL;\necho closest_integer(\"\
    -15.4\") . PHP_EOL;", "    // Write your code here\n    // To print results to\
    \ the standard output you can use print\n    // Example:\n    // print \"Hello\
    \ world!\";\n    if(round($value) == $value)\n    {\n        return $value;\n\
    \    }\n    if(round($value) < $value)\n    {\n        return round($value)+1;\n\
    \    }\n    if(round($value) > $value)\n    {\n        return round($value)-1;\n\
    \    }\n}", "  $vals = explode(\".\", $value);\n  $int = intval($vals[0]);\n \
    \ if (sizeof($vals) > 1) {\n    $dec = intval($vals[1]);\n    $int += $dec > 4\
    \ ? 1 : 0;\n  }\n  return $int;\n}\n", "  // Your code here\n}\n", "    // Write\
    \ your code here\n    // To print results to the standard output you can use print\n\
    \    // Example:\n    // print \"Hello world!\";\n    $v = (string)$value;\n \
    \   $d = strpos($v, '.');\n    if($d === false) return $v;\n    if(substr($v,\
    \ $d + 1, 1) >= 5) return substr($v, 0, $d) + 1;\n    return substr($v, 0, $d);\n\
    }\n", "\t$int = intval($value);\n\t$float = floatval($value);\n\tif ($float -\
    \ $int < 0.5) {\n\t\treturn $int;\n\t} else {\n\t\treturn $int + 1;\n\t}\n}",
  "\t// TODO: your code here\n}\n", "    return $value;\n}", "  $value = number_format((float)$value,\
    \ 0, '.', '');\n  return $value;\n}\n\nclosest_integer(\"-14.5\");", "\treturn\
    \ round($value);\n}\necho closest_integer(\"10\") . \"\\n\";\necho closest_integer(\"\
    15.3\") . \"\\n\";", "\tif (strstr($value, '.')) {\n\t\treturn round($value);\n\
    \t} else {\n\t\treturn intval($value);\n\t}\n}\necho closest_integer(\"14.5\"\
    ) . \"\\n\";\necho closest_integer(\"-14.5\") . \"\\n\";", "  return round($value);\n\
    }", "  $negative = false;\n  if ($value < 0) {\n    $negative = true;\n    $value\
    \ = $value * -1;\n  }\n  $parts = explode('.', $value);\n  if ($parts[1] > 4)\
    \ {\n    $parts[0]++;\n  }\n  $value = $parts[0];\n  if ($negative) {\n    $value\
    \ = $value * -1;\n  }\n  return $value;\n}", "  $closest = round($value);\n  if\
    \ ($closest > $value) {\n    return $closest - 1;\n  } else {\n    return $closest;\n\
    \  }\n}\necho closest_integer(\"10\") . \"<br>\";\necho closest_integer(\"15.3\"\
    ) . \"<br>\";\necho closest_integer(\"14.5\") . \"<br>\";\necho closest_integer(\"\
    -14.5\") . \"<br>\";", "  return round($value);\n}\n", "    return (int) round($value);\n\
    }", "\t$round = round($value);\n\tif ($round > $value) {\n\t\treturn $round -\
    \ 1;\n\t} else {\n\t\treturn $round;\n\t}\n}\necho closest_integer('15.3') . PHP_EOL;\n\
    echo closest_integer('10') . PHP_EOL;\necho closest_integer('14.5') . PHP_EOL;\n\
    echo closest_integer('-14.5') . PHP_EOL;", "    $ceil = ceil($value);\n    $floor\
    \ = floor($value);\n    if ($ceil - $value >= 0.5) {\n        return $floor;\n\
    \    } else {\n        return $ceil;\n    }\n}\necho closest_integer(\"14.5\"\
    );", "    return (int)round($value);\n}\n", "\t// round returns float with precision\n\
    \t// and intval always returns an integer\n\t// so adding an intval in the returned\n\
    \t// function is not necessary\n\treturn round($value);\n}\necho closest_integer(\"\
    10\") . PHP_EOL;\necho closest_integer(\"15.3\") . PHP_EOL;\necho closest_integer(\"\
    14.5\") . PHP_EOL;\necho closest_integer(\"-14.5\") . PHP_EOL;\n", "    $whole\
    \ = floor($value);\n    $decimal = $value - $whole;\n    $ceil = ceil($value);\n\
    \    if ($decimal < 0.5) {\n        return $whole;\n    } else {\n        return\
    \ $ceil;\n    }\n}", "    $intval = intval($value);\n    $decimals = $value -\
    \ $intval;\n    if ($decimals >= 0.5) {\n        return $intval + 1;\n    } else\
    \ {\n        return $intval;\n    }\n}\n\necho closest_integer(\"10\") . \"\\\
    n\";\necho closest_integer(\"15.3\") . \"\\n\";\necho closest_integer(\"14.5\"\
    ) . \"\\n\";\necho closest_integer(\"-14.5\") . \"\\n\";\n", "  $value = (int)$value;\n\
    \  if (strpos($value, \".\") !== false) {\n    if ($value > 0) {\n      return\
    \ (int)ceil($value);\n    } else {\n      return (int)floor($value);\n    }\n\
    \  } else {\n    return $value;\n  }\n}\n\necho closest_integer(\"14.5\");"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

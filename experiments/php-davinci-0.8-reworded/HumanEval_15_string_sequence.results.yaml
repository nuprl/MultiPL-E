language: php
name: HumanEval_15_string_sequence
results:
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n\t$sequence = \"\";\n\tfor\
    \ ($i = 0; $i <= $n; $i++) {\n\t\t$sequence .= $i . \" \";\n\t}\n\treturn $sequence;\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_ro54czj.php:20\n\
    Stack trace:\n#0 /tmp/tmp_ro54czj.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp_ro54czj.php\
    \ on line 20\n"
  timestamp: 1659823359
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $sequence = \"\";\n  \
    \  for ($i = 0; $i <= $n; $i++) {\n        $sequence .= $i;\n        if ($i !=\
    \ $n) {\n            $sequence .= \" \";\n        }\n    }\n    return $sequence;\n\
    }\necho string_sequence(0) . \"\\n\";\necho string_sequence(5) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    0 1 2 3 4 5

    '
  timestamp: 1659823359
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n  $result = '';\n  for ($i\
    \ = 0; $i <= $n; $i++) {\n    $result .= \" $i\";\n  }\n  return trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823359
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    //Fill in the code here\n\
    }\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvohmwifs.php:15\n\
    Stack trace:\n#0 /tmp/tmpvohmwifs.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpvohmwifs.php\
    \ on line 15\n"
  timestamp: 1659823359
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    if ($n == 0) {\n     \
    \   return \"0\";\n    }\n    $r = string_sequence($n - 1);\n    return $r . \"\
    \ \" . $n;\n}\n\n$n = 0;\n\nwhile ($n < 10) {\n    echo string_sequence($n) .\
    \ \"\\n\";\n    $n = $n + 1;\n}\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    0 1

    0 1 2

    0 1 2 3

    0 1 2 3 4

    0 1 2 3 4 5

    0 1 2 3 4 5 6

    0 1 2 3 4 5 6 7

    0 1 2 3 4 5 6 7 8

    0 1 2 3 4 5 6 7 8 9

    '
  timestamp: 1659823359
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $m = range(0, $n);\n \
    \   return implode(' ', $m);\n}\n\nfunction candidate(...$args) {\n    return\
    \ string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0)\
    \ !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3)\
    \ !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823359
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $st = 0;\n    while ($st\
    \ <= $n) {\n        echo $st . \" \";\n        $st++;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0 \nFatal error: Uncaught Exception: Test failed! in /tmp/tmptdf0xs_v.php:20\n\
    Stack trace:\n#0 /tmp/tmptdf0xs_v.php(25): test()\n#1 {main}\n  thrown in /tmp/tmptdf0xs_v.php\
    \ on line 20\n"
  timestamp: 1659823359
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = '';\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . ' ';\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa2zcxqe_.php:20\n\
    Stack trace:\n#0 /tmp/tmpa2zcxqe_.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpa2zcxqe_.php\
    \ on line 20\n"
  timestamp: 1659823359
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = '';\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= \" $i\";\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpihcpt2lj.php:20\n\
    Stack trace:\n#0 /tmp/tmpihcpt2lj.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpihcpt2lj.php\
    \ on line 20\n"
  timestamp: 1659823359
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    // Write your code here\n\
    \tif($n == 0)\n\t\treturn 0;\n\tif($n == 1)\n\t\treturn '0 1';\n\tif($n == 2)\n\
    \t\treturn '0 1 2';\n\treturn string_sequence($n-1) . ' ' . $n;\n}\necho string_sequence(5);\n\
    echo \"<br>\";\necho string_sequence(0);\necho \"<br>\";\necho string_sequence(2);\n\
    function candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0 1 2 3 4 5<br>0<br>0 1 2\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp8xt28yjm.php:27\nStack trace:\n#0 /tmp/tmp8xt28yjm.php(32): test()\n\
    #1 {main}\n  thrown in /tmp/tmp8xt28yjm.php on line 27\n"
  timestamp: 1659823359
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $string = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $string .= \"$i \";\n    }\n    return trim($string);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823359
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    if ($n < 0) {\n      \
    \  throw new InvalidArgumentException('$n must be positive');\n    }\n    $str\
    \ = '';\n    for ($i = 0; $i <= $n; $i++) {\n        $str .= \"{$i} \";\n    }\n\
    \    return rtrim($str);\n}\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823359
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $str = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $str .= $i . \" \";\n    }\n    return trim($str);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823359
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    if ($n == 0) {\n     \
    \   return \"0\";\n    } else if ($n > 0) {\n        return string_sequence($n\
    \ - 1) . \" \" . $n;\n    }\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823359
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n  $str = '';\n  for ($i =\
    \ 0; $i <= $n; $i++) {\n    $str .= \" $i\";\n  }\n  return trim($str);\n}\n\n\
    function candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823359
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n\t$i = 0;\n\t$result = \"\"\
    ;\n\twhile ($i <= $n) {\n\t\t$result .= $i;\n\t\tif ($i != $n) {\n\t\t\t$result\
    \ .= \" \";\n\t\t}\n\t\t$i++;\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823359
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    // Write your code here\n\
    \    // To print results to the standard output you can use print\n    // Example:\
    \ print \"Hello world!\";\n    $result = '';\n    for ($i = 0; $i <= $n; $i++)\
    \ {\n        $result .= ($i.' ');\n    }\n    return $result;\n}\n\n$__fp = fopen(\"\
    php://stdin\", \"r\");\n\nfscanf($__fp, \"%d\", $_a_cnt);\n$_a = fgets($__fp);\n\
    $res = string_sequence($_a);\n\nprint \"$res\\n\";\n\nfclose($__fp);\nfunction\
    \ candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0 \n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy12zhd9m.php:32\n\
    Stack trace:\n#0 /tmp/tmpy12zhd9m.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpy12zhd9m.php\
    \ on line 32\n"
  timestamp: 1659823359
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $a = [];\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $a[] = $i;\n    }\n    return implode(' ', $a);\n\
    }\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823359
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= \" \" . $i;\n    }\n    return\
    \ ltrim($result);\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823359
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    if ($n == 0) {\n     \
    \   return \"0\";\n    } else {\n        return implode(\" \", range(0, $n));\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823359
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    // STUDENT-TODO: write\
    \ your code here\n    $result = '';\n    for ($i = 0; $i <= $n; $i++) {\n    \
    \    $result .= \"$i \";\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9edx0zoj.php:20\n\
    Stack trace:\n#0 /tmp/tmp9edx0zoj.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp9edx0zoj.php\
    \ on line 20\n"
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    if ($n == 0) {\n     \
    \   return '0';\n    } else {\n        return string_sequence($n - 1) . ' ' .\
    \ $n;\n    }\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n  return implode(\" \", range(0,\
    \ $n));\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    if ($n == 0) {\n     \
    \   return '0';\n    } else {\n        return string_sequence($n - 1) . ' ' .\
    \ $n;\n    }\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n\t$i = 0;\n\t$result = \"\"\
    ;\n\twhile ($i <= $n) {\n\t\t$result .= $i;\n\t\tif ($i < $n) {\n\t\t\t$result\
    \ .= \" \";\n\t\t}\n\t\t$i++;\n\t}\n\treturn $result;\n}\n\necho string_sequence(5)\
    \ . \"\\n\";\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0 1 2 3 4 5

    '
  timestamp: 1659978201
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n  if ($n < 0) {\n    return\
    \ \"\";\n  } else {\n    return string_sequence($n - 1) . \" $n\";\n  }\n}\n\n\
    echo \"string_sequence(1) = \", string_sequence(1), \"\\n\";\necho \"string_sequence(5)\
    \ = \", string_sequence(5), \"\\n\";\n\nfunction candidate(...$args) {\n    return\
    \ string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0)\
    \ !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3)\
    \ !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string_sequence(1) =  0 1\nstring_sequence(5) =  0 1 2 3 4 5\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmp6gs_s26m.php:23\nStack trace:\n\
    #0 /tmp/tmp6gs_s26m.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp6gs_s26m.php\
    \ on line 23\n"
  timestamp: 1659978201
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n  // Your code here\n}\n\n\
    function candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqtbr2dco.php:16\n\
    Stack trace:\n#0 /tmp/tmpqtbr2dco.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpqtbr2dco.php\
    \ on line 16\n"
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $string = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $string .= \" \" . $i;\n    }\n    return\
    \ ltrim($string);\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    return implode(\" \",\
    \ range(0, $n));\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    if\
    \ ($n == 0) {\n        $result = \"0\";\n    } else {\n        for ($i = 0; $i\
    \ <= $n; $i++) {\n            $result .= $i;\n            if ($i != $n) {\n  \
    \              $result .= \" \";\n            }\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n\t$sequence = array();\n\t\
    for ($i = 0; $i <= $n; $i++) {\n\t\t$sequence[] = $i;\n\t}\n\treturn implode(\"\
    \ \", $sequence);\n}\n\necho string_sequence(0);\necho PHP_EOL;\necho string_sequence(5);\n\
    echo PHP_EOL;\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    0 1 2 3 4 5

    '
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n\t$sequence = \"\";\n\tfor\
    \ ($i = 0; $i <= $n; $i++) {\n\t\t$sequence .= $i . \" \";\n\t}\n\treturn rtrim($sequence);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n  $i = 0;\n  $result = array();\n\
    \  while ($i <= $n) {\n    $result[] = (string)$i;\n    $i++;\n  }\n  return implode('\
    \ ', $result);\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ rtrim($result);\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n\tif ($n < 0) {\n\t\treturn\
    \ false;\n\t}\n\tif ($n == 0) {\n\t\treturn \"0\";\n\t}\n\treturn string_sequence($n\
    \ - 1) . \" \" . $n;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $ret = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $ret .= \"$i \";\n    }\n    return trim($ret);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    return implode(' ', range(0,\
    \ $n));\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    if ($n < 0) {\n      \
    \  return NULL;\n    }\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++)\
    \ {\n        $result .= $i . \" \";\n    }\n    return trim($result);\n}\n\nfunction\
    \ candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n\t$result = '';\n\tfor ($i\
    \ = 0; $i <= $n; $i++) {\n\t\t$result .= ' ' . $i;\n\t}\n\treturn substr($result,\
    \ 1);\n}\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n  \n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaqndsdqy.php:16\n\
    Stack trace:\n#0 /tmp/tmpaqndsdqy.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpaqndsdqy.php\
    \ on line 16\n"
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n\treturn implode(' ', range(0,\
    \ $n));\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $string = '';\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $string .= $i . ' ';\n    }\n    return\
    \ rtrim($string);\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n  $str = \"\";\n  for ($i\
    \ = 0; $i <= $n; $i++) {\n    $str .= \"$i \";\n  }\n  return rtrim($str);\n}\n\
    \nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    return implode(\" \",\
    \ range(0, $n));\n}\necho string_sequence(0);\necho \"<br>\";\necho string_sequence(5);\n\
    echo \"<br>\";\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 0<br>0 1 2 3 4 5<br>
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n  if ($n < 0) {\n    return\
    \ \"\";\n  } else if ($n == 0) {\n    return \"0\";\n  } else {\n    return string_sequence($n\
    \ - 1) . \" \" . $n;\n  }\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n\tif ($n == 0) {\n\t\treturn\
    \ \"0\";\n\t}\n\treturn string_sequence($n - 1) . \" \" . strval($n);\n}\n\nfunction\
    \ candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n\t$result = \"\";\n\tfor ($i\
    \ = 0; $i <= $n; $i++) {\n\t\t$result .= $i;\n\t\tif ($i != $n) $result .= \"\
    \ \";\n\t}\n\treturn $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0)\
    \ !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3)\
    \ !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6cjud826.php:20\n\
    Stack trace:\n#0 /tmp/tmp6cjud826.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp6cjud826.php\
    \ on line 20\n"
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n  $string = \"\";\n  for ($i\
    \ = 0; $i <= $n; $i++) {\n    $string .= $i . \" \";\n  }\n  return trim($string);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $res = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $res .= $i . \" \";\n    }\n    return $res;\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8izieb43.php:20\n\
    Stack trace:\n#0 /tmp/tmp8izieb43.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp8izieb43.php\
    \ on line 20\n"
  timestamp: 1659978201
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n  $result = \"\";\n  if ($n\
    \ >= 0) {\n    for ($i = 0; $i <= $n; $i++) {\n      $result .= $i . \" \";\n\
    \    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0)\
    \ !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3)\
    \ !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsnklqz5a.php:22\n\
    Stack trace:\n#0 /tmp/tmpsnklqz5a.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpsnklqz5a.php\
    \ on line 22\n"
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n  $str = \"\";\n  for ($i\
    \ = 0; $i <= $n; $i++) {\n    $str .= $i . \" \";\n  }\n  return trim($str);\n\
    }\n\necho string_sequence(5) . \"\\n\";\n\nfunction candidate(...$args) {\n  \
    \  return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0)\
    \ !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3)\
    \ !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0 1 2 3 4 5

    '
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    if ($n == 0) {\n     \
    \   return '0';\n    } else {\n        return string_sequence($n - 1) . ' ' .\
    \ $n;\n    }\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n  $result = \"\";\n  for ($i\
    \ = 0; $i <= $n; $i++) {\n    $result .= $i . \" \";\n  }\n  return rtrim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $s = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $s .= \"{$i} \";\n    }\n    return trim($s);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n  $result = \"\";\n  for ($i\
    \ = 0; $i <= $n; $i++) {\n    $result .= \" \" . $i;\n  }\n  return trim($result);\n\
    }\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= \"$i \";\n    }\n    return trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $string = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $string .= \" $i\";\n    }\n    return $string;\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa708q72s.php:20\n\
    Stack trace:\n#0 /tmp/tmpa708q72s.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpa708q72s.php\
    \ on line 20\n"
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n\t$totalString = \"\";\n\t\
    for ($i = 0; $i <= $n; $i++) {\n\t\t$totalString .= $i . \" \";\n\t}\n\t$totalString\
    \ = rtrim($totalString);\n\treturn $totalString;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= \" $i\";\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq90wymry.php:19\n\
    Stack trace:\n#0 /tmp/tmpq90wymry.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpq90wymry.php\
    \ on line 19\n"
  timestamp: 1659978201
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    return \"\";\n}\n\nfunction\
    \ candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptax4qfp2.php:16\n\
    Stack trace:\n#0 /tmp/tmptax4qfp2.php(21): test()\n#1 {main}\n  thrown in /tmp/tmptax4qfp2.php\
    \ on line 16\n"
  timestamp: 1659978201
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n\t$result = \"\";\n\tfor ($i\
    \ = 0; $i <= $n; $i++) {\n\t\t$result .= $i . \" \";\n\t}\n\treturn $result;\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8d81k1hz.php:20\n\
    Stack trace:\n#0 /tmp/tmp8d81k1hz.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp8d81k1hz.php\
    \ on line 20\n"
  timestamp: 1659978201
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n  $str = \"\";\n  for ($i\
    \ = 0; $i <= $n; $i++) {\n    $str .= $i . \" \";\n  }\n  return $str;\n}\n\n\
    function candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5s_n3nrg.php:20\n\
    Stack trace:\n#0 /tmp/tmp5s_n3nrg.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp5s_n3nrg.php\
    \ on line 20\n"
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= strval($i);\n        if ($i <\
    \ $n) {\n            $result .= \" \";\n        }\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n  if ($n < 0) {\n    return\
    \ \"\";\n  } else {\n    return string_sequence($n - 1) . \" $n\";\n  }\n}\nfunction\
    \ candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyu1yy9l2.php:19\n\
    Stack trace:\n#0 /tmp/tmpyu1yy9l2.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpyu1yy9l2.php\
    \ on line 19\n"
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n\tif ($n === 0) {\n\t\treturn\
    \ \"0\";\n\t} else {\n\t\treturn string_sequence($n - 1) . \" \" . $n;\n\t}\n\
    }\necho string_sequence(5);\necho \"<br>\";\nfunction candidate(...$args) {\n\
    \    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0)\
    \ !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3)\
    \ !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: 0 1 2 3 4 5<br>
  timestamp: 1659978201
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    // CODE HERE\n    $result\
    \ = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result .= \" $i\";\n \
    \   }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphl1mxnj4.php:21\n\
    Stack trace:\n#0 /tmp/tmphl1mxnj4.php(26): test()\n#1 {main}\n  thrown in /tmp/tmphl1mxnj4.php\
    \ on line 21\n"
  timestamp: 1659978201
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n\tif($n==0) return \"0\";\n\
    \t$result=\"\";\n\tfor($i=0;$i<=$n;$i++) {\n\t\t$result=$result.$i.\" \";\n\t\
    }\n\treturn $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzldttak0.php:22\n\
    Stack trace:\n#0 /tmp/tmpzldttak0.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpzldttak0.php\
    \ on line 22\n"
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ trim($result);\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n\t$list = array();\n\tfor\
    \ ($i = 0; $i <= $n; $i++) {\n\t\t$list[] = $i;\n\t}\n\treturn implode(\" \",\
    \ $list);\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    if ($n == 0) return \"\
    0\";\n    else return string_sequence($n - 1) . \" $n\";\n}\n\necho string_sequence(5);\n\
    \nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 0 1 2 3 4 5
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    // 'implode' with an empty\
    \ string as the glue.\n    return implode(' ', range(0, $n));\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n  $sequence = $n;\n  for ($i\
    \ = 0; $i < $n; $i++) {\n    $sequence .= ' ' . ($n - $i - 1);\n  }\n  return\
    \ $sequence;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptet2a5bt.php:20\n\
    Stack trace:\n#0 /tmp/tmptet2a5bt.php(25): test()\n#1 {main}\n  thrown in /tmp/tmptet2a5bt.php\
    \ on line 20\n"
  timestamp: 1659978201
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $sequence = \"\";\n  \
    \  if ($n == 0) {\n        $sequence = \"0\";\n    } else {\n        for ($i =\
    \ 0; $i <= $n; $i++) {\n            $sequence .= \" $i\";\n        }\n    }\n\
    \    return $sequence;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplw7iowte.php:25\n\
    Stack trace:\n#0 /tmp/tmplw7iowte.php(29): test()\n#1 {main}\n  thrown in /tmp/tmplw7iowte.php\
    \ on line 25\n"
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    if ($n >= 0) {\n     \
    \   $s = \"\";\n        for ($i = 0; $i <= $n; $i++) {\n            $s .= \"$i\
    \ \";\n        }\n        return rtrim($s);\n    }\n    return \"\";\n}\n\nfunction\
    \ candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    if ($n == 0) {\n     \
    \   return 0;\n    } else {\n        return string_sequence($n - 1) . \" $n\"\
    ;\n    }\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdhf3hk0m.php:20\n\
    Stack trace:\n#0 /tmp/tmpdhf3hk0m.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpdhf3hk0m.php\
    \ on line 20\n"
  timestamp: 1659978201
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n  if ($n < 0) {\n    return\
    \ \"\";\n  } else {\n    return string_sequence($n - 1) . \" $n\";\n  }\n}\nfunction\
    \ candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyu1yy9l2.php:19\n\
    Stack trace:\n#0 /tmp/tmpyu1yy9l2.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpyu1yy9l2.php\
    \ on line 19\n"
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    if ($n == 0) {\n     \
    \   return \"0\";\n    }\n    else {\n        return string_sequence($n - 1) .\
    \ \" \" . $n;\n    }\n}\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n\t$result = \"\";\n\tfor ($i\
    \ = 0; $i <= $n; $i++) {\n\t\t$result .= \" \" . $i;\n\t}\n\treturn trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n\t$result = '';\n\tfor ($i\
    \ = 0; $i <= $n; $i++) {\n\t\t$result .= $i . ' ';\n\t}\n\treturn $result;\n}\n\
    \nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl7j9ooxl.php:20\n\
    Stack trace:\n#0 /tmp/tmpl7j9ooxl.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpl7j9ooxl.php\
    \ on line 20\n"
  timestamp: 1659978201
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n  $sequence = \"\";\n  for\
    \ ($i = 0; $i <= $n; $i++) {\n    $sequence .= $i . \" \";\n  }\n  return $sequence;\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprrqrs_0z.php:20\n\
    Stack trace:\n#0 /tmp/tmprrqrs_0z.php(25): test()\n#1 {main}\n  thrown in /tmp/tmprrqrs_0z.php\
    \ on line 20\n"
  timestamp: 1659978201
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfkpcit1u.php:15\n\
    Stack trace:\n#0 /tmp/tmpfkpcit1u.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpfkpcit1u.php\
    \ on line 15\n"
  timestamp: 1659978201
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n  $answer = \"\";\n  for ($i\
    \ = 0; $i <= $n; $i++) {\n    $answer .= $i . \" \";\n  }\n  return $answer;\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5tg0mr4i.php:20\n\
    Stack trace:\n#0 /tmp/tmp5tg0mr4i.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp5tg0mr4i.php\
    \ on line 20\n"
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n  if ($n == 0) {\n    return\
    \ \"0\";\n  }\n  return string_sequence($n - 1) . \" $n\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n\t$string = \"\";\n\tfor ($i\
    \ = 0; $i <= $n; $i++) {\n\t\t$string .= \"$i \";\n\t}\n\treturn $string;\n}\n\
    \nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp30xmmuf3.php:20\n\
    Stack trace:\n#0 /tmp/tmp30xmmuf3.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp30xmmuf3.php\
    \ on line 20\n"
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n\tif ($n == 0) {\n\t\treturn\
    \ \"0\";\n\t} else {\n\t\treturn string_sequence($n - 1) . \" \" . $n;\n\t}\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n\t$result = \"\";\n\tfor ($i\
    \ = 0; $i <= $n; $i++) {\n\t\t$result .= \" \" . $i;\n\t}\n\treturn trim($result);\n\
    }\necho string_sequence(5) . \"\\n\";\n\nfunction candidate(...$args) {\n    return\
    \ string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0)\
    \ !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3)\
    \ !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0 1 2 3 4 5

    '
  timestamp: 1659978201
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ $result;\n}\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmparccjvco.php:19\n\
    Stack trace:\n#0 /tmp/tmparccjvco.php(24): test()\n#1 {main}\n  thrown in /tmp/tmparccjvco.php\
    \ on line 19\n"
  timestamp: 1659978201
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n  $result = \"\";\n  for ($i\
    \ = 0; $i <= $n; $i++) {\n    $result .= $i . \" \";\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm7boac72.php:20\n\
    Stack trace:\n#0 /tmp/tmpm7boac72.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpm7boac72.php\
    \ on line 20\n"
  timestamp: 1659978201
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    // Fill in your code here\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpos6ywbln.php:16\n\
    Stack trace:\n#0 /tmp/tmpos6ywbln.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpos6ywbln.php\
    \ on line 16\n"
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = [];\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result[] = $i;\n    }\n    return implode('\
    \ ', $result);\n}\necho string_sequence(5) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0 1 2 3 4 5

    '
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n  // YOUR CODE GOES HERE\n\
    \  $str = \"\";\n  for ($i = 0; $i <= $n; $i++) {\n    $str .= \"$i \";\n  }\n\
    \  return trim($str);\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    return implode(' ', range(0,\
    \ $n));\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n  if ($n == 0) {\n    return\
    \ \"0\";\n  } else {\n    return string_sequence($n - 1) . \" \" . $n;\n  }\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n  $output = \"\";\n  for ($i\
    \ = 0; $i <= $n; $i++) {\n    $output .= $i;\n    if ($i < $n) {\n      $output\
    \ .= \" \";\n    }\n  }\n  return $output;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n  return implode(' ', range(0,\
    \ $n));\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n\t$str = '';\n\tfor ($i =\
    \ 0; $i <= $n; $i++) {\n\t\t$str .= ' ' . $i;\n\t}\n\treturn trim($str);\n}\n\n\
    function candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n\tif ($n < 0) {\n\t\treturn\
    \ string_sequence(-1 * $n);\n\t}\n\tif ($n == 0) {\n\t\treturn \"0\";\n\t}\n\t\
    return string_sequence($n - 1) . \" \" . $n;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    return implode(\" \",\
    \ range(0, $n));\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n\tif($n == 0)\n\t\treturn\
    \ \"0\";\n\telse {\n\t\t$result = \"\";\n\t\tfor($i = 0; $i <= $n; $i++) {\n\t\
    \t\t$result .= $i . \" \";\n\t\t}\n\t\treturn trim($result);\n\t}\n}\n\nfunction\
    \ candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n  return is_int($n) ? implode(\"\
    \ \", range(0, $n)) : \"\";\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if ($i != $n) {\n\
    \            $result .= \" \";\n        }\n    }\n    return $result;\n}\n\necho\
    \ string_sequence(0).\"\\n\";\necho string_sequence(5).\"\\n\";\necho string_sequence(12).\"\
    \\n\";\necho string_sequence(100).\"\\n\";\nfunction candidate(...$args) {\n \
    \   return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0)\
    \ !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3)\
    \ !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    0 1 2 3 4 5

    0 1 2 3 4 5 6 7 8 9 10 11 12

    0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29
    30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55
    56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81
    82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100

    '
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $s = \"\";\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $s .= \" $i\";\n    }\n    return trim($s);\n\
    }\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n\t$result = \"\";\n\tfor ($i\
    \ = 0; $i <= $n; $i++) {\n\t\t$result .= \"$i \";\n\t}\n\treturn $result;\n}\n\
    echo string_sequence(0) . \"\\n\";\necho string_sequence(5) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0 \n0 1 2 3 4 5 \n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1col1d5y.php:21\n\
    Stack trace:\n#0 /tmp/tmp1col1d5y.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp1col1d5y.php\
    \ on line 21\n"
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n\t$string = \"\";\n\tfor ($i\
    \ = 0; $i <= $n; $i++) {\n\t\t$string .= \" \" . $i;\n\t}\n\treturn trim($string);\n\
    }\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n\t$i = 0;\n\twhile ($i < $n)\
    \ {\n\t\tprint $i . \" \";\n\t\t$i++;\n\t}\n\tprint $n;\n}\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcioa02jp.php:20\n\
    Stack trace:\n#0 /tmp/tmpcioa02jp.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpcioa02jp.php\
    \ on line 20\n"
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n  if ($n == 0) {\n    return\
    \ '0';\n  }\n  return string_sequence($n - 1) . ' ' . $n;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n\t$str = \"\";\n\tfor ($i\
    \ = 0; $i <= $n; $i++) {\n\t\t$str .= \" \" . $i;\n\t}\n\treturn trim($str);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $numbers = array();\n\
    \    for ($i = 0; $i <= $n; $i++) {\n        $numbers[] = $i;\n    }\n    return\
    \ implode(\" \", $numbers);\n}\necho string_sequence(5) . \"\\n\";\n\nfunction\
    \ candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0 1 2 3 4 5

    '
  timestamp: 1659978201
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n\tif ($n < 0) {\n\t\treturn\
    \ \"\";\n\t} else {\n\t\treturn string_sequence($n - 1) . \" \" . $n;\n\t}\n}\n\
    \necho string_sequence(5);\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: " 0 1 2 3 4 5\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz3lgdc1l.php:22\n\
    Stack trace:\n#0 /tmp/tmpz3lgdc1l.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpz3lgdc1l.php\
    \ on line 22\n"
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n\tif ($n == 0) {\n\t\treturn\
    \ \"0\";\n\t} else if ($n > 0) {\n\t\treturn implode(\" \", range(0, $n));\n\t\
    } else {\n\t\treturn implode(\" \", range($n, 0));\n\t}\n}\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $st = '';\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $st .= $i . ' ';\n    }\n    return $st;\n}\n\
    \nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6__2o0qr.php:20\n\
    Stack trace:\n#0 /tmp/tmp6__2o0qr.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp6__2o0qr.php\
    \ on line 20\n"
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n\t$result = '';\n\tfor ($i\
    \ = 0; $i <= $n; $i++) {\n\t\t$result .= $i . ' ';\n\t}\n\treturn rtrim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    if ($n == 0) {\n     \
    \   return \"0\";\n    }\n    return string_sequence($n - 1) . \" \" . $n;\n}\n\
    function candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n  $output = \"\";\n  for ($i\
    \ = 0; $i <= $n; $i++) {\n    $output .= \"$i \";\n  }\n  $output = rtrim($output);\
    \ // removes the space from the end\n  return $output;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $sequence = \"\";\n  \
    \  for ($i = 0; $i <= $n; $i++) {\n        $sequence .= $i . \" \";\n    }\n \
    \   return $sequence;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpta04w7lf.php:20\n\
    Stack trace:\n#0 /tmp/tmpta04w7lf.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpta04w7lf.php\
    \ on line 20\n"
  timestamp: 1659978201
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    if ($n < 0) {\n      \
    \  throw new InvalidArgumentException('Invalid value provided for $n: '.$n);\n\
    \    }\n    $result = '';\n    for ($i = 0; $i <= $n; $i++) {\n        $result\
    \ .= $i.' ';\n    }\n    return $result;\n}\n\necho string_sequence(0) . \"\\\
    n\";\necho string_sequence(5) . \"\\n\";\necho string_sequence(-5) . \"\\n\";\n\
    echo string_sequence(5.5) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0)\
    \ !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3)\
    \ !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0 \n0 1 2 3 4 5 \n\nFatal error: Uncaught InvalidArgumentException: Invalid\
    \ value provided for $n: -5 in /tmp/tmps7su5txd.php:9\nStack trace:\n#0 /tmp/tmps7su5txd.php(20):\
    \ string_sequence(-5)\n#1 {main}\n  thrown in /tmp/tmps7su5txd.php on line 9\n"
  timestamp: 1659978201
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n  return (string) $n;\n}\n\
    \nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpplrnei89.php:17\n\
    Stack trace:\n#0 /tmp/tmpplrnei89.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpplrnei89.php\
    \ on line 17\n"
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    if ($n == 0) {\n     \
    \   return '0';\n    }\n    return implode(' ', range(0, $n));\n}\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n  $sequence = [];\n  for ($i\
    \ = 0; $i <= $n; $i++) {\n    $sequence[] = $i;\n  }\n  return implode(' ', $sequence);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $sequence = '';\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $sequence .= \"{$i} \";\n    }\n    return\
    \ rtrim($sequence);\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n\t$result = \"\";\n\tfor ($i\
    \ = 0; $i <= $n; $i++) {\n\t\t$result .= $i . \" \";\n\t}\n\t$result = trim($result);\n\
    \treturn $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $output = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $output .= \"$i \";\n    }\n    return trim($output);\n\
    }\necho string_sequence(5);\necho \"\\n\";\n\nfunction candidate(...$args) {\n\
    \    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0)\
    \ !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3)\
    \ !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0 1 2 3 4 5

    '
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n  // base case:\n  if ($n\
    \ == 0) {\n    return \"0\";\n  }\n  // recursive case:\n  return string_sequence($n\
    \ - 1) . \" \" . $n;\n}\necho string_sequence(0) . \"\\n\";\necho string_sequence(5)\
    \ . \"\\n\";\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    0 1 2 3 4 5

    '
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    if ($n === 0) {\n    \
    \    return \"0\";\n    }\n    return string_sequence($n - 1) . \" \" . $n;\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n  $result = '';\n  for ($i\
    \ = 0; $i <= $n; $i++) {\n    $result .= $i;\n    if ($i < $n) {\n      $result\
    \ .= ' ';\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n\
    \    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0)\
    \ !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3)\
    \ !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n\tif($n > 0) {\n\t\t$string\
    \ = string_sequence($n - 1) . \" \" . $n;\n\t} else {\n\t\t$string = \"0\";\n\t\
    }\n\treturn $string;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= \"$i \";\n    }\n    return trim($result);\n\
    }\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978202
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n\tif ($n == 0) {\n\t\treturn\
    \ \"0\";\n\t} else {\n\t\treturn string_sequence($n - 1) . \" \" . $n;\n\t}\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n\t$str = \"\";\n\tfor ($i\
    \ = 0; $i <= $n; $i++) {\n\t\t$str .= \" $i\";\n\t}\n\treturn $str;\n}\n\necho\
    \ string_sequence(5);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return\
    \ string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0)\
    \ !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3)\
    \ !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: " 0 1 2 3 4 5\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph_8btadh.php:23\n\
    Stack trace:\n#0 /tmp/tmph_8btadh.php(28): test()\n#1 {main}\n  thrown in /tmp/tmph_8btadh.php\
    \ on line 23\n"
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $my_string = \"\";\n \
    \   for ($i = 0; $i <= $n; $i++) {\n        $my_string .= strval($i) . \" \";\n\
    \    }\n    return rtrim($my_string);\n}\n\nfunction candidate(...$args) {\n \
    \   return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0)\
    \ !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3)\
    \ !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n\t$result = '';\n\tfor ($i\
    \ = 0; $i <= $n; $i++) {\n\t\t$result .= \"$i \";\n\t}\n\treturn trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= \"$i \";\n    }\n    return $result;\n\
    }\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp081nslr2.php:19\n\
    Stack trace:\n#0 /tmp/tmp081nslr2.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp081nslr2.php\
    \ on line 19\n"
  timestamp: 1659978202
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $str = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++){\n        $str .= $i . \" \";\n    }\n    $str = substr($str,\
    \ 0, -1);\n    return $str;\n}\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n  $a = [];\n  for ($i = 0;\
    \ $i <= $n; $i++) {\n    $a[] = $i;\n  }\n  return implode(' ', $a);\n}\n\nfunction\
    \ candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $s = \"\";\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $s .= \" \" . $i;\n    }\n    return $s;\n}\n\
    \nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgq146113.php:20\n\
    Stack trace:\n#0 /tmp/tmpgq146113.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpgq146113.php\
    \ on line 20\n"
  timestamp: 1659978201
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $seq = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $seq .= \"$i \";\n    }\n    return $seq;\n\
    }\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnqtm574r.php:19\n\
    Stack trace:\n#0 /tmp/tmpnqtm574r.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpnqtm574r.php\
    \ on line 19\n"
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n   $numbers = array();\n \
    \  for ($i = 0; $i <= $n; $i++) {\n       $numbers[] = $i;\n   }\n   return implode(\"\
    \ \", $numbers);\n}\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    if ($n == 0) {\n     \
    \   return \"0\";\n    } else {\n        return string_sequence($n - 1) . \" \"\
    \ . $n;\n    }\n}\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978202
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $out = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $out .= \" \" . $i;\n    }\n    return $out;\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf6pf50ry.php:20\n\
    Stack trace:\n#0 /tmp/tmpf6pf50ry.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpf6pf50ry.php\
    \ on line 20\n"
  timestamp: 1659978202
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n\t$i = 0;\n\t$out = \"\";\n\
    \twhile ($i <= $n) {\n\t\t$out .= $i;\n\t\tif ($i != $n) {\n\t\t\t$out .= \" \"\
    ;\n\t\t}\n\t\t$i++;\n\t}\n\treturn $out;\n}\n\nfunction candidate(...$args) {\n\
    \    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0)\
    \ !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3)\
    \ !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978202
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n  $result = '';\n  for ($i\
    \ = 0; $i <= $n; $i++) {\n    $result .= $i . ' ';\n  }\n  return rtrim($result);\n\
    }\n\nprint string_sequence(0) . \"\\n\";\nprint string_sequence(5) . \"\\n\";\n\
    function candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    0 1 2 3 4 5

    '
  timestamp: 1659978202
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    return implode(\" \",\
    \ range(0, $n));\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    if ($n == 0) {\n     \
    \   return \"0\";\n    } else {\n        return string_sequence($n - 1) . \" \"\
    \ . $n;\n    }\n}\n\necho string_sequence(5);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0 1 2 3 4 5

    '
  timestamp: 1659978202
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n\t$result = \"\";\n\tfor ($i\
    \ = 0; $i <= $n; $i += 1) {\n\t\t$result .= $i . \" \";\n\t}\n\t$result = substr($result,\
    \ 0, -1);\n\treturn $result;\n}\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978202
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $string = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $string .= \"$i \";\n    }\n    $string\
    \ = trim($string);\n    return $string;\n}\nfunction candidate(...$args) {\n \
    \   return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0)\
    \ !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3)\
    \ !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978202
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    // YOUR CODE HERE\n\t\
    if($n==0){\n\t\treturn \"0\";\n\t}else{\n\t\t$str =\"\";\n\t\tfor($i=0;$i<=$n;$i++){\n\
    \t\t\t$str = $str.\" \".$i;\n\t\t}\n\t\treturn $str;\n\t}\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1gpc2bnv.php:26\n\
    Stack trace:\n#0 /tmp/tmp1gpc2bnv.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp1gpc2bnv.php\
    \ on line 26\n"
  timestamp: 1659978202
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n  if ($n < 0) {\n    return\
    \ \"\";\n  } else {\n    return string_sequence($n - 1) . \" $n\";\n  }\n}\n\n\
    function candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptm53zork.php:20\n\
    Stack trace:\n#0 /tmp/tmptm53zork.php(25): test()\n#1 {main}\n  thrown in /tmp/tmptm53zork.php\
    \ on line 20\n"
  timestamp: 1659978202
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    return join(' ', range(0,\
    \ $n));\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978202
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n  $str = \"\";\n  $num = 0;\n\
    \  while ($num <= $n) {\n    $str .= \" \" . $num;\n    $num++;\n  }\n  return\
    \ $str;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_w82cwv8.php:22\n\
    Stack trace:\n#0 /tmp/tmp_w82cwv8.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp_w82cwv8.php\
    \ on line 22\n"
  timestamp: 1659978202
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    if ($n < 0) {\n      \
    \  return '';\n    }\n    $seq = '';\n    for ($i = 0; $i <= $n; $i++) {\n   \
    \     $seq .= \" $i\";\n    }\n    return trim($seq);\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978202
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n  $r = \"\";\n  for ($i =\
    \ 0; $i <= $n; $i++) {\n    $r .= $i;\n    if ($i < $n) {\n      $r .= \" \";\n\
    \    }\n  }\n  return $r;\n}\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978202
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = '';\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i;\n        if ($i != $n) {\n\
    \            $result .= ' ';\n        }\n    }\n    return $result;\n}\n\n$fptr\
    \ = fopen(getenv(\"OUTPUT_PATH\"), \"w\");\n\n$__fp = fopen(\"php://stdin\", \"\
    r\");\n\nfscanf($__fp, \"%d\\n\", $n);\n\n$result = string_sequence($n);\n\nfwrite($fptr,\
    \ $result . \"\\n\");\n\nfclose($__fp);\nfclose($fptr);\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught ValueError: Path cannot be empty in /tmp/tmpkg0kovef.php:18\n\
    Stack trace:\n#0 /tmp/tmpkg0kovef.php(18): fopen('', 'w')\n#1 {main}\n  thrown\
    \ in /tmp/tmpkg0kovef.php on line 18\n"
  timestamp: 1659978202
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n\tfor ($i = 0; $i <= $n; $i++)\
    \ {\n\t\techo \"$i \";\n\t}\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0 \nFatal error: Uncaught Exception: Test failed! in /tmp/tmps4w10vwg.php:18\n\
    Stack trace:\n#0 /tmp/tmps4w10vwg.php(23): test()\n#1 {main}\n  thrown in /tmp/tmps4w10vwg.php\
    \ on line 18\n"
  timestamp: 1659978202
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n  if ($n == 0) {\n    return\
    \ '0';\n  } else {\n    return string_sequence($n - 1) . ' ' . $n;\n  }\n}\n\n\
    function candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978202
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n  if ($n <= 0) {\n    return\
    \ \"0\";\n  } else {\n    return string_sequence($n - 1) . \" \" . $n;\n  }\n\
    }\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978202
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    // This is a student-implemented\
    \ function\n    if ($n < 0) {\n        return false;\n    } else if ($n == 0)\
    \ {\n        return \"0\";\n    } else {\n        $str = \"\";\n        for ($i\
    \ = 0; $i <= $n; $i++) {\n            $str .= $i . \" \";\n        }\n       \
    \ return $str;\n    }\n}\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwgk26qb2.php:27\n\
    Stack trace:\n#0 /tmp/tmpwgk26qb2.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpwgk26qb2.php\
    \ on line 27\n"
  timestamp: 1659978202
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n\t$result = \"\";\n\tfor ($i\
    \ = 0; $i <= $n; $i++) {\n\t\t$result .= $i . \" \";\n\t}\n\treturn trim($result);\n\
    }\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978202
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $out = \"\";\n    $i =\
    \ 0;\n    while ($i <= $n) {\n\t$out .= \" \" . $i;\n\t$i++;\n    }\n    return\
    \ $out;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9p5a1jxe.php:22\n\
    Stack trace:\n#0 /tmp/tmp9p5a1jxe.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp9p5a1jxe.php\
    \ on line 22\n"
  timestamp: 1659978202
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n  $result = \"\";\n  for ($i\
    \ = 0; $i <= $n; $i++) {\n    $result .= (string)$i . \" \";\n  }\n  return trim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978202
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n\tif ($n == 0) {\n\t\treturn\
    \ \"0\";\n\t} else {\n\t\treturn string_sequence($n - 1) . \" \" . $n;\n\t}\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n   // Your code here\n}\n\n\
    function candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfkkwsn7b.php:16\n\
    Stack trace:\n#0 /tmp/tmpfkkwsn7b.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpfkkwsn7b.php\
    \ on line 16\n"
  timestamp: 1659978202
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n\t$seq = '';\n\tif ($n ===\
    \ 0) {\n\t\t$seq = \"0\";\n\t} else {\n\t\tfor ($i = 0; $i <= $n; $i++) {\n\t\t\
    \t$seq .= $i . ' ';\n\t\t}\n\t}\n\treturn $seq;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqz1gk2g4.php:25\n\
    Stack trace:\n#0 /tmp/tmpqz1gk2g4.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpqz1gk2g4.php\
    \ on line 25\n"
  timestamp: 1659978202
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $my_string = \"\";\n \
    \   for ($i = 0; $i <= $n; $i++) {\n        $my_string .= \" \".$i;\n    }\n \
    \   return ltrim($my_string);\n}\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978202
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= \"$i \";\n    }\n    return rtrim($result);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978202
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n  \n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaqndsdqy.php:16\n\
    Stack trace:\n#0 /tmp/tmpaqndsdqy.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpaqndsdqy.php\
    \ on line 16\n"
  timestamp: 1659978201
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfkpcit1u.php:15\n\
    Stack trace:\n#0 /tmp/tmpfkpcit1u.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpfkpcit1u.php\
    \ on line 15\n"
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n\t$out = \"\";\n\tfor ($i\
    \ = 0; $i <= $n; $i++) {\n\t\t$out .= $i . \" \";\n\t}\n\treturn rtrim($out);\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978202
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n  $output = \"\";\n  if ($n\
    \ < 0) {\n    return \"Parameter must be a positive number\";\n  } else if ($n\
    \ == 0) {\n    return \"0\";\n  } else {\n    for ($i = 0; $i <= $n; $i++) {\n\
    \      $output .= \"$i \";\n    }\n    return trim($output);\n  }\n}\n\nfunction\
    \ candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978202
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n  $seq = \"\";\n  for ($i\
    \ = 0; $i <= $n; $i++) {\n    $seq .= \"$i \";\n  }\n  return rtrim($seq);\n}\n\
    \necho string_sequence(5);\necho \"\\n\";\n\nfunction candidate(...$args) {\n\
    \    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0)\
    \ !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3)\
    \ !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0 1 2 3 4 5

    '
  timestamp: 1659978202
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n\tif ($n == 0) {\n\t\treturn\
    \ '0';\n\t}\n\treturn string_sequence($n - 1) . ' ' . $n;\n}\necho string_sequence(5)\
    \ . PHP_EOL;\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0 1 2 3 4 5

    '
  timestamp: 1659978202
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $i = 0;\n    $string =\
    \ \"\";\n    while ($i <= $n) {\n        $string .= \"$i \";\n        $i++;\n\
    \    }\n    return $string;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp37nah3ps.php:22\n\
    Stack trace:\n#0 /tmp/tmp37nah3ps.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp37nah3ps.php\
    \ on line 22\n"
  timestamp: 1659978202
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n\tif ($n < 0) {\n\t\treturn\
    \ '';\n\t}\n\tif ($n == 0) {\n\t\treturn '0';\n\t}\n\treturn string_sequence($n\
    \ - 1) . ' ' . $n;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978202
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $arr = [];\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $arr[] = $i;\n    }\n    return implode(\" \"\
    , $arr);\n}\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978202
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n\tif ($n === 0) {\n\t\treturn\
    \ \"0\";\n\t} else {\n\t\treturn string_sequence($n - 1) . \" \" . $n;\n\t}\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978202
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n  $result = '';\n  for ($i\
    \ = 0; $i <= $n; $i++) {\n    $result .= $i;\n    if ($i != $n) {\n      $result\
    \ .= ' ';\n    }\n  }\n  return $result;\n}\nfunction candidate(...$args) {\n\
    \    return string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0)\
    \ !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3)\
    \ !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978202
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n\t$result = \"\";\n\tfor ($i\
    \ = 0; $i <= $n; $i++) {\n\t\t$result .= \" \" . $i;\n\t}\n\treturn $result;\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjqr7zqmm.php:20\n\
    Stack trace:\n#0 /tmp/tmpjqr7zqmm.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpjqr7zqmm.php\
    \ on line 20\n"
  timestamp: 1659978202
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= \"$i \";\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcd4rqmmn.php:20\n\
    Stack trace:\n#0 /tmp/tmpcd4rqmmn.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpcd4rqmmn.php\
    \ on line 20\n"
  timestamp: 1659978202
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n\tif ($n == 0) {\n\t\treturn\
    \ \"0\";\n\t} else {\n\t\treturn string_sequence($n - 1) . \" \" . $n;\n\t}\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $res = [];\n    for ($i\
    \ = 0; $i <= $n; $i++) {\n        $res[] = $i;\n    }\n    return implode(' ',\
    \ $res);\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978202
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $result = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $result .= $i . \" \";\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6cjud826.php:20\n\
    Stack trace:\n#0 /tmp/tmp6cjud826.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp6cjud826.php\
    \ on line 20\n"
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    if ($n < 0) {\n      \
    \  return \"\";\n    } else if ($n === 0) {\n        return \"0\";\n    } else\
    \ {\n        return string_sequence($n - 1) . \" \" . $n;\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978202
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n  // Your code here\n  return\
    \ $n;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj1gshw8u.php:17\n\
    Stack trace:\n#0 /tmp/tmpj1gshw8u.php(22): test()\n#1 {main}\n  thrown in /tmp/tmpj1gshw8u.php\
    \ on line 17\n"
  timestamp: 1659978202
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $string = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $string .= $i . \" \";\n    }\n    return\
    \ trim($string);\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978202
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $sequence = array();\n\
    \    for ($i = 0; $i <= $n; $i++) {\n        $sequence[] = $i;\n    }\n    return\
    \ implode(' ', $sequence);\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978202
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n\t$s = \"\";\n\tfor ($i =\
    \ 0; $i <= $n; $i++) {\n\t\t$s .= $i;\n\t\tif ($i < $n) {\n\t\t\t$s .= \" \";\n\
    \t\t}\n\t}\n\treturn $s;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978202
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n  // Your code here\n  $result\
    \ = \"\";\n  for ($i = 0; $i <= $n; $i++) {\n    $result .= \" \" . $i;\n  }\n\
    \  return ltrim($result);\n}\n\necho string_sequence(0);\necho \"\\n\";\necho\
    \ string_sequence(5);\necho \"\\n\";\n\nfunction candidate(...$args) {\n    return\
    \ string_sequence(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0)\
    \ !== \"0\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(3)\
    \ !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(10)\
    \ !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    0 1 2 3 4 5

    '
  timestamp: 1659978202
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    if ($n === 0) {\n    \
    \    return \"0\";\n    }\n    else {\n        return $n . \" \" . string_sequence($n\
    \ - 1);\n    }\n}\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoz46r6c2.php:21\n\
    Stack trace:\n#0 /tmp/tmpoz46r6c2.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpoz46r6c2.php\
    \ on line 21\n"
  timestamp: 1659978202
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n  $str = \"\";\n  for ($i\
    \ = 0; $i <= $n; $i++) {\n    $str .= $i . \" \";\n  }\n  $str = rtrim($str);\n\
    \  return $str;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978202
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n\t$arr = range(0, $n);\n\t\
    return implode(' ', $arr);\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978202
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n\t$ans = \"\";\n\tfor ($i\
    \ = 0; $i <= $n; $i++) {\n\t\t$ans .= strval($i) . \" \";\n\t}\n\treturn $ans;\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf2i31tcv.php:20\n\
    Stack trace:\n#0 /tmp/tmpf2i31tcv.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpf2i31tcv.php\
    \ on line 20\n"
  timestamp: 1659978202
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n  return implode(' ', range(0,\
    \ $n));\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    // Write your code here\n\
    \    // To print results to the standard output you can use print\n    // Example:\
    \ print \"Hello world!\";\n    $string = \"\";\n    for ($i = 0; $i <= $n; $i++)\
    \ {\n        $string .= \" \".$i;\n    }\n    return $string;\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpip6rk4ko.php:23\n\
    Stack trace:\n#0 /tmp/tmpip6rk4ko.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpip6rk4ko.php\
    \ on line 23\n"
  timestamp: 1659978202
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n\treturn is_int($n) ? implode('\
    \ ', range(0, $n)) : false;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978202
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $sequence = '';\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $sequence .= \" $i\";\n    }\n    return\
    \ $sequence;\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxlmjmkiv.php:20\n\
    Stack trace:\n#0 /tmp/tmpxlmjmkiv.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpxlmjmkiv.php\
    \ on line 20\n"
  timestamp: 1659978202
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n\t$str = \"\";\n\tfor ($i\
    \ = 0; $i <= $n; $i++) {\n\t\t$str .= $i . \" \";\n\t}\n\treturn $str;\n}\nfunction\
    \ candidate(...$args) {\n    return string_sequence(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjfixtyh3.php:19\n\
    Stack trace:\n#0 /tmp/tmpjfixtyh3.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpjfixtyh3.php\
    \ on line 19\n"
  timestamp: 1659978202
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    $str = \"\";\n    for\
    \ ($i = 0; $i <= $n; $i++) {\n        $str .= $i;\n        if ($i != $n) {\n \
    \           $str .= \" \";\n        }\n    }\n    return $str;\n}\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978202
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n\tif($n == 0) {\n\t\treturn\
    \ \"0\";\n\t} else {\n\t\treturn string_sequence($n - 1) . \" \" . $n;\n\t}\n\
    }\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978202
- exit_code: 255
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n}\n\nfunction candidate(...$args)\
    \ {\n    return string_sequence(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(0) !== \"0\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfkpcit1u.php:15\n\
    Stack trace:\n#0 /tmp/tmpfkpcit1u.php(20): test()\n#1 {main}\n  thrown in /tmp/tmpfkpcit1u.php\
    \ on line 15\n"
  timestamp: 1659978201
- exit_code: 0
  program: "<?php\n// Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n// >>> string_sequence(0)\n// \"0\"\n// >>> string_sequence(5)\n\
    // \"0 1 2 3 4 5\"\nfunction string_sequence($n) {\n    if ($n == 0) {\n     \
    \   return '0';\n    } else {\n        return string_sequence($n - 1) . ' ' .\
    \ $n;\n    }\n}\n\nfunction candidate(...$args) {\n    return string_sequence(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"0\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== \"0 1 2 3\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10) !== \"0 1 2 3 4 5 6 7 8 9 10\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978201

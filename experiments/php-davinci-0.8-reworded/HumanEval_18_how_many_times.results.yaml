language: php
name: HumanEval_18_how_many_times
results:
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n\
    // >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"\
    aa\")\n// 3\nfunction how_many_times($string, $substring) {\n\tif ($substring\
    \ == \"\") {\n\t\treturn 0;\n\t}\n\t$cnt = 0;\n\t$len = strlen($substring);\n\t\
    for ($i = 0; $i < strlen($string); $i++) {\n\t\tif (substr($string, $i, $len)\
    \ == $substring) {\n\t\t\t$cnt++;\n\t\t}\n\t}\n\treturn $cnt;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n\
    // >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"\
    aa\")\n// 3\nfunction how_many_times($string, $substring) {\n\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdczgtoer.php:18\n\
    Stack trace:\n#0 /tmp/tmpdczgtoer.php(24): test()\n#1 {main}\n  thrown in /tmp/tmpdczgtoer.php\
    \ on line 18\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n\
    // >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"\
    aa\")\n// 3\nfunction how_many_times($string, $substring) {\n  return (substr_count($string,\
    \ $substring));\n}\n\nprint(how_many_times(\"\", \"a\"));\nprint(how_many_times(\"\
    aaa\", \"a\"));\nprint(how_many_times(\"aaaa\", \"aa\"));\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "032\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwqbnih89.php:23\n\
    Stack trace:\n#0 /tmp/tmpwqbnih89.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpwqbnih89.php\
    \ on line 23\n"
  timestamp: 1659823782
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n\
    // >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"\
    aa\")\n// 3\nfunction how_many_times($string, $substring) {\n  $count = 0;\n \
    \ for ($i = 0; $i < strlen($string); $i++) {\n    if (strlen($string) - $i < strlen($substring))\
    \ {\n      return $count;\n    }\n    if (substr($string, $i, strlen($substring))\
    \ == $substring) {\n      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823782
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n\
    // >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"\
    aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    if ($substring\
    \ === \"\") {\n        return 0;\n    }\n    $count = 0;\n    $length = strlen($string);\n\
    \    $sub_length = strlen($substring);\n    for ($i = 0; $i < $length; $i++) {\n\
    \        if (substr($string, $i, $sub_length) === $substring) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n\
    // >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"\
    aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n\
    \    while ($pos = strpos($string, $substring)) {\n        $count++;\n       \
    \ $string = substr($string, $pos + 1);\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfrwifd05.php:24\n\
    Stack trace:\n#0 /tmp/tmpfrwifd05.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpfrwifd05.php\
    \ on line 24\n"
  timestamp: 1659823782
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n\
    // >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"\
    aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $counter = 0;\n\
    \    $start = 0;\n    while (($pos = strpos($string, $substring, $start)) !==\
    \ false) {\n        $counter++;\n        $start = $pos + 1;\n    }\n    return\
    \ $counter;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823782
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n\
    // >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"\
    aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n\
    \    for ($i = 0; $i < strlen($string); $i++) {\n        if (substr($string, $i,\
    \ strlen($substring)) == $substring) {\n            $count++;\n        }\n   \
    \ }\n    return $count;\n}\n\nprint(how_many_times(\"\", \"a\"));\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0'
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n\
    // >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"\
    aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    // Your code\
    \ here\n}\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy6qrv01n.php:17\n\
    Stack trace:\n#0 /tmp/tmpy6qrv01n.php(23): test()\n#1 {main}\n  thrown in /tmp/tmpy6qrv01n.php\
    \ on line 17\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n\
    // >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"\
    aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    if (strlen($substring)\
    \ == 0) return 0;\n    if (strlen($string) == 0) return 0;\n    if (strlen($string)\
    \ < strlen($substring)) return 0;\n    $count = 0;\n    $temp = $string;\n   \
    \ while (strlen($temp) >= strlen($substring)) {\n        if (substr($temp, 0,\
    \ strlen($substring)) == $substring) {\n            $count++;\n            $temp\
    \ = substr($temp, strlen($substring));\n        } else {\n            $temp =\
    \ substr($temp, 1);\n        }\n    }\n    return $count;\n}\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptzsv7lze.php:32\n\
    Stack trace:\n#0 /tmp/tmptzsv7lze.php(36): test()\n#1 {main}\n  thrown in /tmp/tmptzsv7lze.php\
    \ on line 32\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n\
    // >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"\
    aa\")\n// 3\nfunction how_many_times($string, $substring) {\n  // Add your code\
    \ here\n}\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1jylv25g.php:17\n\
    Stack trace:\n#0 /tmp/tmp1jylv25g.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp1jylv25g.php\
    \ on line 17\n"
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n\
    // >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"\
    aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $time = 0;\n\
    \    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == $substring[0])\
    \ {\n            $time++;\n            $j = 1;\n            while ($j < strlen($substring)\
    \ && $string[$i + $j] == $substring[$j]) {\n                $j++;\n          \
    \  }\n            if ($j == strlen($substring)) {\n                $i += $j -\
    \ 1;\n            } else {\n                $time--;\n            }\n        }\n\
    \    }\n    return $time;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Uninitialized string offset 9 in /tmp/tmpu0mleygd.php on line\
    \ 15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu0mleygd.php:35\n\
    Stack trace:\n#0 /tmp/tmpu0mleygd.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpu0mleygd.php\
    \ on line 35\n"
  timestamp: 1659823782
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n\
    // >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"\
    aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n\
    \    $i = 0;\n    while (($i = strpos($string, $substring, $i)) !== false) {\n\
    \        $count++;\n        $i++;\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823782
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n\
    // >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"\
    aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n\
    \    for ($i = 0; $i < strlen($string); $i++) {\n        if (substr($string, $i,\
    \ strlen($substring)) == $substring) {\n            $count++;\n        }\n   \
    \ }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823782
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n\
    // >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"\
    aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $count = 0;\n\
    \    $pos = 0;\n    while (($pos = strpos($string, $substring, $pos)) !== false)\
    \ {\n        $count++;\n        $pos++;\n    }\n    return $count;\n}\n\necho\
    \ how_many_times(\"\", \"a\");\necho \"\\n\";\necho how_many_times(\"aaa\", \"\
    a\");\necho \"\\n\";\necho how_many_times(\"aaaa\", \"aa\");\necho \"\\n\";\n\
    function candidate(...$args) {\n    return how_many_times(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"cacacacac\", \"cac\") !== 4) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"john doe\", \"john\") !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0

    3

    3

    '
  timestamp: 1659823782
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n\
    // >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"\
    aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $result = 0;\n\
    \    $length = strlen($substring);\n    for ($i = 0; $i < strlen($string); $i++)\
    \ {\n        if ($substring == substr($string, $i, $length)) {\n            $result++;\n\
    \        }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n  \
    \  return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823782
- exit_code: 255
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n\
    // >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"\
    aa\")\n// 3\nfunction how_many_times($string, $substring) {\n\t$len = strlen($substring);\n\
    \t$count = 0;\n\t$start = 0;\n\twhile ($start = strpos($string, $substring, $start))\
    \ {\n\t\t$count++;\n\t\t$start += $len;\n\t}\n\treturn $count;\n}\n\necho how_many_times(\"\
    aa\", \"a\") . \"\\n\";\necho how_many_times(\"aaaa\", \"aa\") . \"\\n\";\necho\
    \ how_many_times(\"\", \"a\") . \"\\n\";\n\nfunction candidate(...$args) {\n \
    \   return how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp87t86e1z.php:30\n\
    Stack trace:\n#0 /tmp/tmp87t86e1z.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp87t86e1z.php\
    \ on line 30\n"
  timestamp: 1659823782
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n\
    // >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"\
    aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    if ($substring\
    \ === '') {\n        return 0;\n    }\n    $count = 0;\n    $offset = 0;\n   \
    \ while (strpos($string, $substring, $offset) !== false) {\n        $count++;\n\
    \        $offset = strpos($string, $substring, $offset) + 1;\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823782
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n\
    // >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"\
    aa\")\n// 3\nfunction how_many_times($string, $substring) {\n    $pos = 0;\n \
    \   $i = 0;\n    while ($pos !== false) {\n        $pos = strpos($string, $substring,\
    \ $pos);\n        if ($pos !== false) {\n            $i++;\n            $pos++;\n\
    \        }\n    }\n    return $i;\n}\n\nfunction candidate(...$args) {\n    return\
    \ how_many_times(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \", \"x\") !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    xyxyxyx\", \"x\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    cacacacac\", \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823782
- exit_code: 0
  program: "<?php\n// Find how many times a given substring can be found in the original\
    \ string. Count overlaping cases.\n// >>> how_many_times(\"\", \"a\")\n// 0\n\
    // >>> how_many_times(\"aaa\", \"a\")\n// 3\n// >>> how_many_times(\"aaaa\", \"\
    aa\")\n// 3\nfunction how_many_times($string, $substring) {\n  $pos = 0;\n  $times\
    \ = 0;\n  while (strpos($string, $substring, $pos) !== false) {\n    $pos = strpos($string,\
    \ $substring, $pos) + 1;\n    $times++;\n  }\n  return $times;\n}\n\n$test_string\
    \ = \"Test test hello test test\";\n$test_substring = \"test\";\necho how_many_times($test_string,\
    \ $test_substring);\n\nfunction candidate(...$args) {\n    return how_many_times(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\", \"x\") !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"xyxyxyx\", \"x\") !== 4)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"cacacacac\"\
    , \"cac\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    john doe\", \"john\") !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '3'
  timestamp: 1659823782

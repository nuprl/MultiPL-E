language: php
name: HumanEval_92_any_int
results:
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if (is_int($x) && is_int($y) && is_int($z)) {\n        if ($x == $y +\
    \ $z || $y == $x + $z || $z == $x + $y) {\n            return true;\n        }\n\
    \    }\n    return false;\n}\necho any_int(3, -2, 1) . \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br>
  timestamp: 1659823419
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    return (($x + $y == $z || $x + $z == $y || $y + $z == $x) && (is_int($x)\
    \ && is_int($y) && is_int($z)));\n}\necho any_int(5, 2, 7) . \"<br>\";\necho any_int(3,\
    \ 2, 2) . \"<br>\";\necho any_int(3, -2, 1) . \"<br>\";\necho any_int(3.6, -2.2,\
    \ 2) . \"<br>\";\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br><br>1<br><br>
  timestamp: 1659823419
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n  if (is_int($x) && is_int($y) && is_int($z)) {\n    if ($x == $y + $z ||\
    \ $y == $x + $z || $z == $x + $y) {\n      return true;\n    }\n  }\n  return\
    \ false;\n}\necho any_int(5, 2, 7) . \"\\n\";\necho any_int(3, 2, 2) . \"\\n\"\
    ;\necho any_int(3, -2, 1) . \"\\n\";\necho any_int(3.6, -2.2, 2) . \"\\n\";\n\
    function candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    1


    '
  timestamp: 1659823419
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    return ( (is_int($x) && is_int($y) && is_int($z)) &&\n             (($x\
    \ + $y == $z) || ($x + $z == $y) || ($y + $z == $x)) );\n}\n\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823419
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n\tif (((($x + $y) == $z) || (($x + $z) == $y) || (($y + $z) == $x)) && (is_int($x)\
    \ && is_int($y) && is_int($z))) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\
    \t}\n}\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823419
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if ($x == $y + $z) {\n        return true;\n    } elseif ($y == $x +\
    \ $z) {\n        return true;\n    } elseif ($z == $x + $y) {\n        return\
    \ true;\n    } else {\n        return false;\n    }\n}\necho any_int(5, 2, 7);\n\
    echo any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\n\
    \nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv32id9k3.php:37\n\
    Stack trace:\n#0 /tmp/tmpv32id9k3.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpv32id9k3.php\
    \ on line 37\n"
  timestamp: 1659823419
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if ((($x == $y + $z) || ($y == $x + $z) || ($z == $x + $y)) && (is_int($x)\
    \ && is_int($y) && is_int($z))) {\n        return true;\n    } else {\n      \
    \  return false;\n    }\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823419
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if ((is_int($x) || is_int($y) || is_int($z)) && (($x + $y) == $z || ($x\
    \ + $z) == $y || ($y + $z) == $x)) {\n        return true;\n    } else {\n   \
    \     return false;\n    }\n}\n\necho any_int(5, 2, 7) . \"\\n\";\necho any_int(3,\
    \ 2, 2) . \"\\n\";\necho any_int(3, -2, 1) . \"\\n\";\necho any_int(3.6, -2.2,\
    \ 2) . \"\\n\";\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n1\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgzxww7xg.php:33\n\
    Stack trace:\n#0 /tmp/tmpgzxww7xg.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpgzxww7xg.php\
    \ on line 33\n"
  timestamp: 1659823419
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n  if ((is_int($x) && is_int($y) && is_int($z)) && (($x + $y == $z) || ($x\
    \ + $z == $y) || ($y + $z == $x))) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\necho any_int(3, -2, 1);\nfunction candidate(...$args) {\n  \
    \  return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1659823419
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if (is_int($x) && is_int($y) && is_int($z)) {\n        if ($x + $y ==\
    \ $z || $x + $z == $y || $y + $z == $x) {\n            return \"true\";\n    \
    \    } else {\n            return \"false\";\n        }\n    } else {\n      \
    \  return \"false\";\n    }\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwjxmuig7.php:30\n\
    Stack trace:\n#0 /tmp/tmpwjxmuig7.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpwjxmuig7.php\
    \ on line 30\n"
  timestamp: 1659823419
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if (($x + $y == $z) || ($x + $z == $y) || ($y + $z == $x)) {\n      \
    \  return true;\n    }\n    return false;\n}\n\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcmxj9eg_.php:32\n\
    Stack trace:\n#0 /tmp/tmpcmxj9eg_.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpcmxj9eg_.php\
    \ on line 32\n"
  timestamp: 1659823419
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n  if (is_int($x) && is_int($y) && is_int($z)) {\n    if ($x == $y + $z ||\
    \ $y == $x + $z || $z == $x + $y) {\n      return true;\n    }\n  }\n  return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823419
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    return (int)$x + (int)$y == (int)$z || (int)$x + (int)$z == (int)$y ||\
    \ (int)$y + (int)$z == (int)$x;\n}\necho any_int(5, 2, 7) . \"\\n\";\necho any_int(3,\
    \ 2, 2) . \"\\n\";\necho any_int(3, -2, 1) . \"\\n\";\necho any_int(3.6, -2.2,\
    \ 2) . \"\\n\";\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n1\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphq6g0u8g.php:36\n\
    Stack trace:\n#0 /tmp/tmphq6g0u8g.php(39): test()\n#1 {main}\n  thrown in /tmp/tmphq6g0u8g.php\
    \ on line 36\n"
  timestamp: 1659823419
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    return (($x == $y + $z) || ($y == $x + $z) || ($z == $x + $y)) && (is_int($x)\
    \ && is_int($y) && is_int($z));\n}\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823419
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    $result = false;\n    if (is_int($x) && is_int($y) && is_int($z)) {\n\
    \        if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n            $result\
    \ = true;\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823419
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if(!is_int($x) or !is_int($y) or !is_int($z)) {\n        return false;\n\
    \    } elseif ($x + $y == $z or $x + $z == $y or $y + $z == $x) {\n        return\
    \ true;\n    } else {\n        return false;\n    }\n}\n\necho any_int(3, -2,\
    \ 1) . PHP_EOL;\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    '
  timestamp: 1659823419
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if ($x == ($y + $z) or $y == ($x + $z) or $z == ($x + $y)) {\n      \
    \  return true;\n    } else {\n        return false;\n    }\n}\necho any_int(5,\
    \ 2, 7) . \"\\n\";\necho any_int(3, 2, 2) . \"\\n\";\necho any_int(3, -2, 1) .\
    \ \"\\n\";\necho any_int(3.6, -2.2, 2) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n1\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp106h5h1c.php:32\n\
    Stack trace:\n#0 /tmp/tmp106h5h1c.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp106h5h1c.php\
    \ on line 32\n"
  timestamp: 1659823419
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n  $sum = $x + $y + $z;\n  if (is_int($x) && is_int($y) && is_int($z)) {\n\
    \    if (($x == $sum - $y - $z) || ($y == $sum - $x - $z) || ($z == $sum - $x\
    \ - $y)) {\n      return true;\n    }\n  }\n  return false;\n}\necho any_int(4,\
    \ 5, 6) . PHP_EOL;\necho any_int(4, 4, 8) . PHP_EOL;\necho any_int(3, -2, 1) .\
    \ PHP_EOL;\necho any_int(3.6, -2.2, 2) . PHP_EOL;\n\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n1\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc4qvkf58.php:36\n\
    Stack trace:\n#0 /tmp/tmpc4qvkf58.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpc4qvkf58.php\
    \ on line 36\n"
  timestamp: 1659823419
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n  return (is_int($x) && is_int($y) && is_int($z)) ? (($x + $y == $z) || ($x\
    \ + $z == $y) || ($y + $z == $x)) : false;\n}\necho any_int(5, 2, 7); // true\n\
    echo any_int(3, 2, 2); // false\necho any_int(3, -2, 1); // true\necho any_int(3.6,\
    \ -2.2, 2); // false\n\necho \"\\n\\n\";\n\nfunction candidate(...$args) {\n \
    \   return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11


    '
  timestamp: 1659823419
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n\treturn (($x+$y) == $z || ($x+$z) == $y || ($y+$z) == $x) && is_int($x)\
    \ && is_int($y) && is_int($z);\n}\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823419
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    return (is_int($x) && is_int($y) && is_int($z)) && (\n        ($x + $y\
    \ == $z) || ($x + $z == $y) || ($y + $z == $x)\n    );\n}\n\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    return (is_int($x) && is_int($y) && is_int($z)) && ($x == $y + $z ||\
    \ $y == $x + $z || $z == $x + $y);\n}\necho any_int(3, 2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n\t// check if all of them are integers\n\tif(is_int($x) && is_int($y) &&\
    \ is_int($z)) {\n\t\t// check if any of them is equal to the sum of the other\
    \ two\n\t\tif(($x == $y + $z) || ($y == $x + $z) || ($z == $x + $y)) {\n\t\t\t\
    // return true\n\t\t\treturn true;\n\t\t}\n\t}\n\t// if not, return false\n\t\
    return false;\n}\n\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6,\
    \ -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n\tif(is_int($x) && is_int($y) && is_int($z)) {\n\t\tif($x == $y + $z || $y\
    \ == $x + $z || $z == $x + $y) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(3, -2, 1);\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if (is_int($x) && is_int($y) && is_int($z)) {\n        if ($x + $y ==\
    \ $z || $x + $z == $y || $y + $z == $x) {\n            return true;\n        }\n\
    \    } else {\n        return false;\n    }\n}\nfunction candidate(...$args) {\n\
    \    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy7gdkhma.php:31\n\
    Stack trace:\n#0 /tmp/tmpy7gdkhma.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpy7gdkhma.php\
    \ on line 31\n"
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    $result = 0;\n    if (is_int($x) && is_int($y) && is_int($z)) {\n   \
    \     $result = true;\n    } else {\n        $result = false;\n    }\n    if ($x\
    \ + $y == $z || $x + $z == $y || $y + $z == $x) {\n        $result = true;\n \
    \   } else {\n        $result = false;\n    }\n    return $result;\n}\necho any_int(5,\
    \ 2, 7) . \"<br>\";\necho any_int(3, 2, 2) . \"<br>\";\necho any_int(3, -2, 1)\
    \ . \"<br>\";\necho any_int(3.6, -2.2, 2) . \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1<br><br>1<br><br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkaa7vsto.php:39\n\
    Stack trace:\n#0 /tmp/tmpkaa7vsto.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpkaa7vsto.php\
    \ on line 39\n"
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if (is_int($x) && is_int($y) && is_int($z)) {\n        if ($x == $y +\
    \ $z || $y == $x + $z || $z == $x + $y) {\n            return true;\n        }\n\
    \    }\n    return false;\n}\n\nvar_dump(any_int(3, 2, 2));\nvar_dump(any_int(3,\
    \ -2, 1));\nvar_dump(any_int(3.6, -2.2, 2));\nfunction candidate(...$args) {\n\
    \    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'bool(false)

    bool(true)

    bool(false)

    '
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    return ($x+$y == $z || $x+$z == $y || $y+$z == $x);\n}\n\necho any_int(5,\
    \ 2, 7) . \"\\n\";\necho any_int(3, 2, 2) . \"\\n\";\necho any_int(3, -2, 1) .\
    \ \"\\n\";\necho any_int(3.6, -2.2, 2) . \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n1\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5382bpn7.php:30\n\
    Stack trace:\n#0 /tmp/tmp5382bpn7.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp5382bpn7.php\
    \ on line 30\n"
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    return (is_int($x) && is_int($y) && is_int($z)) && (($x === $y + $z)\
    \ || ($y === $x + $z) || ($z === $x + $y));\n}\necho any_int(5, 2, 7);\necho '<br>';\n\
    echo any_int(3, 2, 2);\necho '<br>';\necho any_int(3, -2, 1);\necho '<br>';\n\
    echo any_int(3.6, -2.2, 2);\necho '<br>';\nfunction candidate(...$args) {\n  \
    \  return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br><br>1<br><br>
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n  if(is_int($x) && is_int($y) && is_int($z)) {\n    if(($x + $y) == $z ||\
    \ ($x + $z) == $y || ($y + $z) == $x) {\n      return \"true\";\n    } else {\n\
    \      return \"false\";\n    }\n  } else {\n    return \"false\";\n  }\n}\necho\
    \ any_int(5, 2, 7) . \"<br>\";\necho any_int(3, 2, 2) . \"<br>\";\necho any_int(3,\
    \ -2, 1) . \"<br>\";\necho any_int(3.6, -2.2, 2) . \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "true<br>false<br>true<br>false<br>\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp7fe5666i.php:34\nStack trace:\n#0 /tmp/tmp7fe5666i.php(46):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp7fe5666i.php on line 34\n"
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    $result = false;\n    if ((is_int($x) === true && is_int($y) === true\
    \ && is_int($z) === true) && (($x + $y === $z) || ($x + $z === $y) || ($y + $z\
    \ === $x))) {\n        $result = true;\n    }\n    return $result;\n}\necho any_int(5,\
    \ 2, 7) . PHP_EOL;\necho any_int(3, 2, 2) . PHP_EOL;\necho any_int(3, -2, 1) .\
    \ PHP_EOL;\necho any_int(3.6, -2.2, 2) . PHP_EOL;\n\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    1


    '
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    return ($x == $y + $z || $y == $x + $z || $z == $x + $y) && is_int($x)\
    \ && is_int($y) && is_int($z);\n}\n\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        if (is_int($x)\
    \ && is_int($y) && is_int($z)) {\n            return true;\n        }\n    }\n\
    \    return false;\n}\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if (is_int($x) && is_int($y) && is_int($z)) {\n        if (($x + $y)\
    \ == $z || ($x + $z) == $y || ($y + $z) == $x) {\n            return true;\n \
    \       }\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if (is_int($x) && is_int($y) && is_int($z)) {\n        if ($x + $y ==\
    \ $z || $x + $z == $y || $y + $z == $x) {\n            return true;\n        }\n\
    \    }\n    return false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n\tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x == $y + $z ||\
    \ $y == $x + $z || $z == $x + $y) {\n\t\t\treturn true;\n\t\t}\n\t} else {\n\t\
    \treturn false;\n\t}\n}\n\necho any_int(5, 2, 7) . \"\\n\";\necho any_int(3, 2,\
    \ 2) . \"\\n\";\necho any_int(3, -2, 1) . \"\\n\";\necho any_int(3.6, -2.2, 2)\
    \ . \"\\n\";\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n1\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0uk519fg.php:37\n\
    Stack trace:\n#0 /tmp/tmp0uk519fg.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp0uk519fg.php\
    \ on line 37\n"
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    return (($x == $y + $z) || ($y == $x + $z) || ($z == $x + $y)) && (is_int($x)\
    \ && is_int($y) && is_int($z));\n}\n$x = 5;\n$y = 2;\n$z = 7;\nvar_dump(any_int($x,\
    \ $y, $z));\necho \"<br>\";\n$x = 3;\n$y = 2;\n$z = 2;\nvar_dump(any_int($x, $y,\
    \ $z));\necho \"<br>\";\n$x = 3;\n$y = -2;\n$z = 1;\nvar_dump(any_int($x, $y,\
    \ $z));\necho \"<br>\";\n$x = 3.6;\n$y = -2.2;\n$z = 2;\nvar_dump(any_int($x,\
    \ $y, $z));\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'bool(true)

    <br>bool(false)

    <br>bool(true)

    <br>bool(false)

    '
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    return (is_int($x) && is_int($y) && is_int($z)) && (($x == $y + $z) ||\
    \ ($y == $x + $z) || ($z == $x + $y));\n}\nvar_dump(any_int(5, 2, 7));\nvar_dump(any_int(3,\
    \ 2, 2));\nvar_dump(any_int(3, -2, 1));\nvar_dump(any_int(3.6, -2.2, 2));\nvar_dump(any_int(3.6,\
    \ -2.2, 2.4));\nvar_dump(any_int(3.6, -2.4, 2.4));\nvar_dump(any_int(3.6, -2.4,\
    \ 1.4));\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'bool(true)

    bool(false)

    bool(true)

    bool(false)

    bool(false)

    bool(false)

    bool(false)

    '
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    return ((($x == $y + $z) || ($y == $x + $z) || ($z == $x + $y)) && is_int($x)\
    \ && is_int($y) && is_int($z));\n}\necho any_int(3, -2, 1);\necho \"<br>\";\n\
    echo any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br>
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    $sum = $x + $y + $z;\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $sum) {\n            return true;\n        } elseif ($y\
    \ == $sum) {\n            return true;\n        } elseif ($z == $sum) {\n    \
    \        return true;\n        } else {\n            return false;\n        }\n\
    \    } else {\n        return false;\n    }\n}\nfunction candidate(...$args) {\n\
    \    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3bgw_t8h.php:35\n\
    Stack trace:\n#0 /tmp/tmp3bgw_t8h.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp3bgw_t8h.php\
    \ on line 35\n"
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n\tif ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\n\n$answer = any_int(3, -2, 1);\nvar_dump($answer);\n\
    function candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "bool(true)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2vpwm3nd.php:31\n\
    Stack trace:\n#0 /tmp/tmp2vpwm3nd.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp2vpwm3nd.php\
    \ on line 31\n"
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if (($x == $y + $z || $y == $x + $z || $z == $x + $y) && is_int($x) &&\
    \ is_int($y) && is_int($z)) {\n        return true;\n    } else {\n        return\
    \ false;\n    }\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if ($x == $y + $z || $y == $x + $z || $z == $x + $y && $x == (int)$x\
    \ && $y == (int)$y && $z == (int)$z) {\n        return true;\n    } else {\n \
    \       return false;\n    }\n}\necho any_int(3, -2, 1);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoor7ps3e.php:29\n\
    Stack trace:\n#0 /tmp/tmpoor7ps3e.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpoor7ps3e.php\
    \ on line 29\n"
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n  $sum = $x + $y + $z;\n  if (is_int($x) && is_int($y) && is_int($z)) {\n\
    \    if ($x === $sum - $y - $z || $y === $sum - $x - $z || $z === $sum - $x -\
    \ $y) {\n      return true;\n    }\n  }\n  return false;\n}\n\necho any_int(5,\
    \ 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2,\
    \ 2);\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "111\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg_y4148q.php:37\n\
    Stack trace:\n#0 /tmp/tmpg_y4148q.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpg_y4148q.php\
    \ on line 37\n"
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if ($x + $y == $z) {\n        return true;\n    } elseif ($x + $z ==\
    \ $y) {\n        return true;\n    } elseif ($y + $z == $x) {\n        return\
    \ true;\n    } else {\n        return false;\n    }\n}\n\nvar_dump(any_int(5,\
    \ 2, 7));\nvar_dump(any_int(3, 2, 2));\nvar_dump(any_int(3, -2, 1));\nvar_dump(any_int(3.6,\
    \ -2.2, 2));\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "bool(true)\nbool(false)\nbool(true)\nbool(false)\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp5w4mh2yf.php:37\nStack trace:\n#0 /tmp/tmp5w4mh2yf.php(47):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp5w4mh2yf.php on line 37\n"
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if (is_int($x) && is_int($y) && is_int($z)) {\n        if ($x + $y ==\
    \ $z || $x + $z == $y || $y + $z == $x) {\n            return true;\n        }\n\
    \    }\n    return false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n  return (($x == $y + $z) || ($y == $x + $z) || ($z == $x + $y)) && (is_int($x)\
    \ && is_int($y) && is_int($z));\n}\necho any_int(5, 2, 7) . \"\\n\";\necho any_int(3,\
    \ 2, 2) . \"\\n\";\necho any_int(3, -2, 1) . \"\\n\";\necho any_int(3.6, -2.2,\
    \ 2) . \"\\n\";\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    1


    '
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    return (\n        (\n            ($x + $y == $z) ||\n            ($x\
    \ + $z == $y) ||\n            ($y + $z == $x)\n        ) &&\n        (\n     \
    \       is_int($x) &&\n            is_int($y) &&\n            is_int($z)\n   \
    \     )\n    );\n}\n\necho (any_int(5, 2, 7) ? \"true\\n\" : \"false\\n\");\n\
    echo (any_int(3, 2, 2) ? \"true\\n\" : \"false\\n\");\necho (any_int(3, -2, 1)\
    \ ? \"true\\n\" : \"false\\n\");\necho (any_int(3.6, -2.2, 2) ? \"true\\n\" :\
    \ \"false\\n\");\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if (is_int($x) && is_int($y) && is_int($z)) {\n        if ($x + $y ==\
    \ $z || $x + $z == $y || $y + $z == $x) {\n            return true;\n        }\n\
    \    }\n    return false;\n}\necho any_int(5, 2, 7);\necho any_int(3, 2, 2);\n\
    echo any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    $result = false;\n    $array = [$x, $y, $z];\n    for ($i = 0; $i < sizeof($array);\
    \ $i++) {\n        $a = $array[$i];\n        for ($j = 0; $j < sizeof($array);\
    \ $j++) {\n            $b = $array[$j];\n            for ($k = 0; $k < sizeof($array);\
    \ $k++) {\n                $c = $array[$k];\n                if ($a != $b && $a\
    \ != $c && $b != $c) {\n                    if ($a == $b + $c || $b == $a + $c\
    \ || $c == $a + $b) {\n                        if ($a == intval($a) && $b == intval($b)\
    \ && $c == intval($c)) {\n                            $result = true;\n      \
    \                  }\n                    }\n                }\n            }\n\
    \        }\n    }\n    return $result;\n}\n\necho any_int(5, 2, 7);\necho \"\\\
    n\";\necho any_int(3, 2, 2);\necho \"\\n\";\necho any_int(3, -2, 1);\necho \"\\\
    n\";\necho any_int(3.6, -2.2, 2);\necho \"\\n\";\necho any_int(3.6, -2.2, 2.2);\n\
    echo \"\\n\";\necho any_int(3.6, -2.2, 1.2);\necho \"\\n\";\necho any_int(3.6,\
    \ -2.2, -2.2);\necho \"\\n\";\necho any_int(3.6, -2.2, -2.2);\necho \"\\n\";\n\
    echo any_int(1, 2, 3);\necho \"\\n\";\necho any_int(1, -2, -3);\necho \"\\n\"\
    ;\necho any_int(1, 2, -3);\necho \"\\n\";\necho any_int(1, -2, 3);\necho \"\\\
    n\";\necho any_int(1, 2, 3);\necho \"\\n\";\necho any_int(3, 1, 2);\necho \"\\\
    n\";\necho any_\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting "," or ";" in
    /tmp/tmp2d08bguj.php on line 65

    '
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    return\n        is_int($x) &&\n        is_int($y) &&\n        is_int($z)\
    \ &&\n        (\n            $x == $y + $z ||\n            $y == $x + $z ||\n\
    \            $z == $x + $y\n        );\n}\nfunction candidate(...$args) {\n  \
    \  return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n\tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\treturn ($x == $y + $z\
    \ || $y == $x + $z || $z == $x + $y);\n\t}\n\treturn false;\n}\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    return (($x + $y == $z) || ($x + $z == $y) || ($y + $z == $x));\n}\n\n\
    echo any_int(3, 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\necho \"<br>\"\
    ;\necho any_int(3.6, -2.2, 2);\necho \"<br>\";\necho any_int(5, 2, 7);\necho \"\
    <br>\";\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<br>1<br><br>1<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpap1f1wt0.php:34\n\
    Stack trace:\n#0 /tmp/tmpap1f1wt0.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpap1f1wt0.php\
    \ on line 34\n"
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if (is_int($x) && is_int($y) && is_int($z)) {\n        if ($x == $y +\
    \ $z || $y == $x + $z || $z == $x + $y) {\n            return true;\n        }\n\
    \    }\n    return false;\n}\necho any_int(3, -2, 1);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if (!is_int($x) || !is_int($y) || !is_int($z)) {\n        return false;\n\
    \    } elseif ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        return\
    \ true;\n    } else {\n        return false;\n    }\n}\n\n$x = any_int(3, 2, 2);\n\
    echo $x;\necho \"<br>\";\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: <br>
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n  $nums = [$x, $y, $z];\n  for ($i = 0; $i < 3; $i++) {\n    $nums[$i] =\
    \ (int)$nums[$i];\n  }\n  sort($nums);\n  return ($nums[0] + $nums[1] == $nums[2]);\n\
    }\n\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2,\
    \ 2);\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplu2z2q_h.php:38\n\
    Stack trace:\n#0 /tmp/tmplu2z2q_h.php(44): test()\n#1 {main}\n  thrown in /tmp/tmplu2z2q_h.php\
    \ on line 38\n"
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n  if(is_int($x) && is_int($y) && is_int($z)) {\n    if(($x + $y == $z) ||\
    \ ($x + $z == $y) || ($y + $z == $x)) {\n      return true;\n    }\n  }\n  return\
    \ false;\n}\n\necho any_int(3, -2, 1) . \"\\n\";\necho any_int(3.6, -2.2, 2) .\
    \ \"\\n\";\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    '
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n  return (integer)($x + $y) === $z || (integer)($x + $z) === $y || (integer)($y\
    \ + $z) === $x;\n}\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptk1b0awm.php:25\n\
    Stack trace:\n#0 /tmp/tmptk1b0awm.php(35): test()\n#1 {main}\n  thrown in /tmp/tmptk1b0awm.php\
    \ on line 25\n"
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n\n}\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpltuhci7h.php:23\n\
    Stack trace:\n#0 /tmp/tmpltuhci7h.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpltuhci7h.php\
    \ on line 23\n"
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n  if ((($x + $y) == $z) || (($x + $z) == $y) || (($y + $z) == $x)) {\n  \
    \  return true;\n  } else {\n    return false;\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn3kvb0y3.php:29\n\
    Stack trace:\n#0 /tmp/tmpn3kvb0y3.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpn3kvb0y3.php\
    \ on line 29\n"
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if (($x == ($y + $z)) || ($y == ($x + $z)) || ($z == ($x + $y))) {\n\
    \        if (is_int($x) && is_int($y) && is_int($z)) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    return (\n        is_int($x) &&\n        is_int($y) &&\n        is_int($z)\
    \ &&\n        (\n            ($x + $y == $z) ||\n            ($x + $z == $y) ||\n\
    \            ($y + $z == $x)\n        )\n    );\n}\n\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n  if (($x + $y) == $z) {\n    return true;\n  } elseif (($x + $z) == $y)\
    \ {\n    return true;\n  } elseif (($y + $z) == $x) {\n    return true;\n  } else\
    \ {\n    return false;\n  }\n}\necho any_int(3, -2, 1);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfvdojjy1.php:33\n\
    Stack trace:\n#0 /tmp/tmpfvdojjy1.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpfvdojjy1.php\
    \ on line 33\n"
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    return is_int($x) && is_int($y) && is_int($z) && ($x == $y + $z || $y\
    \ == $x + $z || $z == $x + $y);\n}\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    $result = false;\n    $arr = [$x, $y, $z];\n    $num = 0;\n    for ($i\
    \ = 0; $i < count($arr); $i++) {\n        if (!is_int($arr[$i])) {\n         \
    \   return $result;\n        }\n        $num += $arr[$i];\n    }\n    $num /=\
    \ 2;\n    if ($num === $x || $num === $y || $num === $z) {\n        $result =\
    \ true;\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if ((($x+$y) == $z) || (($x+$z) == $y) || (($y+$z) == $x)) {\n      \
    \  return true;\n    } else {\n        return false;\n    }\n}\necho any_int(5,\
    \ 2, 7) . \"\\n\";\necho any_int(3, 2, 2) . \"\\n\";\necho any_int(3, -2, 1) .\
    \ \"\\n\";\necho any_int(3.6, -2.2, 2) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n1\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8lr_6t9h.php:32\n\
    Stack trace:\n#0 /tmp/tmp8lr_6t9h.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp8lr_6t9h.php\
    \ on line 32\n"
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if (gettype($x) == 'integer' && gettype($y) == 'integer' && gettype($z)\
    \ == 'integer') {\n        if ($x + $y == $z || $x + $z == $y || $y + $z == $x)\
    \ {\n            return true;\n        } else {\n            return false;\n \
    \       }\n    } else {\n        return false;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    return (($x + $y == $z) || ($x + $z == $y) || ($y + $z == $x)) && (is_int($x)\
    \ && is_int($y) && is_int($z));\n}\n\necho any_int(5, 2, 7) . \"\\n\";\necho any_int(3,\
    \ 2, 2) . \"\\n\";\necho any_int(3, -2, 1) . \"\\n\";\necho any_int(3.6, -2.2,\
    \ 2) . \"\\n\";\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    1


    '
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    return (is_int($x) and is_int($y) and is_int($z)) and (($x + $y == $z)\
    \ or ($x + $z == $y) or ($y + $z == $x));\n}\necho any_int(5, 2, 7) ? \"true\\\
    n\" : \"false\\n\";\necho any_int(3, 2, 2) ? \"true\\n\" : \"false\\n\";\necho\
    \ any_int(3, -2, 1) ? \"true\\n\" : \"false\\n\";\necho any_int(3.6, -2.2, 2)\
    \ ? \"true\\n\" : \"false\\n\";\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    return ((is_int($x) && is_int($y) && is_int($z)) && ($x + $y == $z ||\
    \ $x + $z == $y || $y + $z == $x));\n}\necho any_int(5, 2, 7) . \"<br>\";\necho\
    \ any_int(3, 2, 2) . \"<br>\";\necho any_int(3, -2, 1) . \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2) . \"<br>\";\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br><br>1<br><br>
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    return (\n        is_int($x) &&\n        is_int($y) &&\n        is_int($z)\
    \ &&\n        ($x + $y == $z || $x + $z == $y || $y + $z == $x)\n    );\n}\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    return (int)$x + (int)$y == (int)$z || (int)$x + (int)$z == (int)$y ||\
    \ (int)$y + (int)$z == (int)$x;\n}\n\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4skuo283.php:32\n\
    Stack trace:\n#0 /tmp/tmp4skuo283.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp4skuo283.php\
    \ on line 32\n"
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if (is_int($x) && is_int($y) && is_int($z)) {\n        return ($x ==\
    \ $y + $z || $y == $x + $z || $z == $x + $y);\n    } else {\n        return false;\n\
    \    }\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    $x = (int)$x;\n    $y = (int)$y;\n    $z = (int)$z;\n    if (($x ===\
    \ ($y + $z)) || ($y === ($x + $z)) || ($z === ($x + $y))) {\n        return true;\n\
    \    } else {\n        return false;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy2b0jbk0.php:39\n\
    Stack trace:\n#0 /tmp/tmpy2b0jbk0.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpy2b0jbk0.php\
    \ on line 39\n"
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if (is_int($x) && is_int($y) && is_int($z)) {\n        if ($x == $y +\
    \ $z || $y == $x + $z || $z == $x + $y) {\n            return true;\n        }\n\
    \    }\n    return false;\n}\n\necho any_int(1, 1, 2);\n\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if (\n        (gettype($x) === 'integer' || gettype($x) === 'double')\n\
    \        && (gettype($y) === 'integer' || gettype($y) === 'double')\n        &&\
    \ (gettype($z) === 'integer' || gettype($z) === 'double')\n    ) {\n        if\
    \ (gettype($x) === 'double') {\n            $x = intval($x);\n        }\n    \
    \    if (gettype($y) === 'double') {\n            $y = intval($y);\n        }\n\
    \        if (gettype($z) === 'double') {\n            $z = intval($z);\n     \
    \   }\n        if ($x + $y === $z || $x + $z === $y || $y + $z === $x) {\n   \
    \         return true;\n        }\n    }\n    return false;\n}\n\nvar_dump(any_int(3,\
    \ -2, 1));\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "bool(true)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppoczir2d.php:51\n\
    Stack trace:\n#0 /tmp/tmppoczir2d.php(54): test()\n#1 {main}\n  thrown in /tmp/tmppoczir2d.php\
    \ on line 51\n"
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if (($x + $y) == $z || ($x + $z) == $y || ($y + $z) == $x) {\n      \
    \  return true;\n    }\n    return false;\n}\nfunction candidate(...$args) {\n\
    \    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp56lf040g.php:27\n\
    Stack trace:\n#0 /tmp/tmp56lf040g.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp56lf040g.php\
    \ on line 27\n"
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n\tif (\n\t\t(is_int($x) && is_int($y) && is_int($z))\n\t\t&& ($x + $y ==\
    \ $z || $x + $z == $y || $y + $z == $x)\n\t) {\n\t\treturn true;\n\t}\n\treturn\
    \ false;\n}\necho any_int(5, 2, 7);\necho '<br>';\necho any_int(3, 2, 2);\necho\
    \ '<br>';\necho any_int(3, -2, 1);\necho '<br>';\necho any_int(3.6, -2.2, 2);\n\
    function candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br><br>1<br>
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if (($x + $y == $z || $x + $z == $y || $y + $z == $x) && (is_int($x)\
    \ && is_int($y) && is_int($z))) {\n        return true;\n    } else {\n      \
    \  return false;\n    }\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if ($x + $y == $z) {\n        return true;\n    } elseif ($x + $z ==\
    \ $y) {\n        return true;\n    } elseif ($y + $z == $x) {\n        return\
    \ true;\n    } else {\n        return false;\n    }\n}\n\nvar_dump(any_int(3,\
    \ -2, 1));\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "bool(true)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2uvztr6v.php:34\n\
    Stack trace:\n#0 /tmp/tmp2uvztr6v.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp2uvztr6v.php\
    \ on line 34\n"
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n  return (is_int($x) && is_int($y) && is_int($z)) && ($x + $y == $z || $x\
    \ + $z == $y || $y + $z == $x);\n}\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if (($x + $y == $z) || ($x + $z == $y) || ($y + $z == $x)) {\n      \
    \  return true;\n    } else {\n        return false;\n    }\n}\nvar_dump(any_int(5,\
    \ 2, 7));\necho '<br>';\nvar_dump(any_int(3, 2, 2));\necho '<br>';\nvar_dump(any_int(3,\
    \ -2, 1));\necho '<br>';\nvar_dump(any_int(3.6, -2.2, 2));\necho '<br>';\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "bool(true)\n<br>bool(false)\n<br>bool(true)\n<br>bool(false)\n<br>\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmpnlcubr0d.php:36\nStack trace:\n\
    #0 /tmp/tmpnlcubr0d.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpnlcubr0d.php\
    \ on line 36\n"
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n\tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z ||\
    \ $x + $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    return is_int($x) && is_int($y) && is_int($z) && (($x + $y == $z) ||\
    \ ($x + $z == $y) || ($y + $z == $x));\n}\nfunction candidate(...$args) {\n  \
    \  return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n  $int_count = 0;\n  if (is_int($x)) {\n    $int_count++;\n  }\n  if (is_int($y))\
    \ {\n    $int_count++;\n  }\n  if (is_int($z)) {\n    $int_count++;\n  }\n  if\
    \ ($int_count == 3) {\n    if ($x == $y + $z || $y == $x + $z || $z == $x + $y)\
    \ {\n      return true;\n    }\n  }\n  return false;\n}\n\necho any_int(3, -2,\
    \ 1);\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n\tif (!is_int($x) || !is_int($y) || !is_int($z)) {\n\t\treturn false;\n\t\
    }\n\tif ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n\t\treturn true;\n\
    \t}\n\treturn false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n\treturn (is_int($x) && is_int($y) && is_int($z)) && ($x + $y == $z || $x\
    \ + $z == $y || $y + $z == $x);\n}\nvar_dump(any_int(5, 2, 7));\nvar_dump(any_int(3,\
    \ 2, 2));\nvar_dump(any_int(3, -2, 1));\nvar_dump(any_int(3.6, -2.2, 2));\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'bool(true)

    bool(false)

    bool(true)

    bool(false)

    '
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n\tif(is_int($x) && is_int($y) && is_int($z)) {\n\t\treturn (($x == $y + $z)\
    \ || ($y == $x + $z) || ($z == $x + $y));\n\t} else {\n\t\treturn false;\n\t}\n\
    }\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    return ((int)$x + (int)$y == (int)$z) || ((int)$x + (int)$z == (int)$y)\
    \ || ((int)$y + (int)$z == (int)$x);\n}\n\nfunction candidate(...$args) {\n  \
    \  return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk8l79zuz.php:32\n\
    Stack trace:\n#0 /tmp/tmpk8l79zuz.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpk8l79zuz.php\
    \ on line 32\n"
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if (!is_int($x) || !is_int($y) || !is_int($z)) {\n        return false;\n\
    \    } else if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n        return\
    \ true;\n    } else {\n        return false;\n    }\n}\n$result = any_int(3, -2,\
    \ 1);\necho $result;\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if (is_int($x) && is_int($y) && is_int($z)) {\n        if ($x === $y\
    \ + $z || $y === $x + $z || $z === $x + $y) {\n            return true;\n    \
    \    }\n    }\n    return false;\n}\necho any_int(5, 2, 7);\necho any_int(3, 2,\
    \ 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if(is_int($x) && is_int($y) && is_int($z)) {\n        if($x == $y + $z\
    \ || $y == $x + $z || $z == $x + $y) {\n            return true;\n        }\n\
    \    }\n    return false;\n}\necho any_int(5, 2, 7);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if (is_int($x) && is_int($y) && is_int($z)) {\n        if ($x == $y +\
    \ $z || $y == $x + $z || $z == $x + $y) {\n            return true;\n        }\n\
    \    }\n    return false;\n}\n\nvar_dump(any_int(5, 2, 7));\nvar_dump(any_int(3,\
    \ 2, 2));\nvar_dump(any_int(3, -2, 1));\nvar_dump(any_int(3.6, -2.2, 2));\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'bool(true)

    bool(false)

    bool(true)

    bool(false)

    '
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if (is_int($x) && is_int($y) && is_int($z)) {\n        if ($x == $y +\
    \ $z || $y == $x + $z || $z == $x + $y) {\n            return true;\n        }\n\
    \    }\n    return false;\n}\necho any_int(5, 2, 7) . \"\\n\";\necho any_int(3,\
    \ 2, 2) . \"\\n\";\necho any_int(3, -2, 1) . \"\\n\";\necho any_int(3.6, -2.2,\
    \ 2) . \"\\n\";\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    1


    '
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if (!is_int($x) || !is_int($y) || !is_int($z)) {\n        return false;\n\
    \    } elseif ($x === $y + $z || $y === $x + $z || $z === $x + $y) {\n       \
    \ return true;\n    } else {\n        return false;\n    }\n}\necho any_int(5,\
    \ 2, 7) . \"\\n\";\necho any_int(3, 2, 2) . \"\\n\";\necho any_int(3, -2, 1) .\
    \ \"\\n\";\necho any_int(3.6, -2.2, 2) . \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    1


    '
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n  if (is_int($x) && is_int($y) && is_int($z)) {\n    return $x + $y == $z\
    \ || $x + $z == $y || $y + $z == $x;\n  }\n  return false;\n}\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    return ((is_int($x) == true) && (is_int($y) == true) && (is_int($z) ==\
    \ true) && (($x == $y + $z) || ($y == $x + $z) || ($z == $x + $y)));\n}\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if (is_int($x) && is_int($y) && is_int($z)) {\n        if (($x + $y ==\
    \ $z) || ($x + $z == $y) || ($y + $z == $x)) {\n            return true;\n   \
    \     } else {\n            return false;\n        }\n    } else {\n        return\
    \ false;\n    }\n}\necho any_int(3, -2, 1) . PHP_EOL;\necho any_int(3.6, -2.2,\
    \ 2) . PHP_EOL;\necho any_int(3, 2, 2) . PHP_EOL;\necho any_int(5, 2, 7) . PHP_EOL;\n\
    function candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1

    '
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    $array = [$x, $y, $z];\n    $a = $array[0];\n    $b = $array[1];\n  \
    \  $c = $array[2];\n    if ($b + $c == $a || $a + $c == $b || $a + $b == $c) {\n\
    \        return true;\n    } else {\n        return false;\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn81kvc0n.php:33\n\
    Stack trace:\n#0 /tmp/tmpn81kvc0n.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpn81kvc0n.php\
    \ on line 33\n"
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    return is_int($x) && is_int($y) && is_int($z) && (($x == $y + $z) ||\
    \ ($y == $x + $z) || ($z == $x + $y));\n}\n\nfunction candidate(...$args) {\n\
    \    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    return ($x + $y == $z || $x + $z == $y || $y + $z == $x) && is_int($x)\
    \ && is_int($y) && is_int($z);\n}\n\nvar_dump(any_int(5, 2, 7)); // true\nvar_dump(any_int(3,\
    \ 2, 2)); // false\nvar_dump(any_int(3, -2, 1)); // true\nvar_dump(any_int(3.6,\
    \ -2.2, 2)); // false\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'bool(true)

    bool(false)

    bool(true)

    bool(false)

    '
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    return $x + $y == $z || $x + $z == $y || $y + $z == $x;\n}\n\necho any_int(5,\
    \ 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2,\
    \ 2);\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxirnapv1.php:30\n\
    Stack trace:\n#0 /tmp/tmpxirnapv1.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpxirnapv1.php\
    \ on line 30\n"
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if ($x + $y == $z) {\n        return true;\n    } elseif ($x + $z ==\
    \ $y) {\n        return true;\n    } elseif ($y + $z == $x) {\n        return\
    \ true;\n    } else {\n        return false;\n    }\n}\necho any_int(5, 2, 7);\n\
    function candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxp7s3opd.php:33\n\
    Stack trace:\n#0 /tmp/tmpxp7s3opd.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpxp7s3opd.php\
    \ on line 33\n"
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if ($x % 1 == 0 && $y % 1 == 0 && $z % 1 == 0) {\n        if ($x + $y\
    \ == $z || $x + $z == $y || $y + $z == $x) {\n            return true;\n     \
    \   }\n    }\n    return false;\n}\necho any_int(3, -2, 1);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpryeaym06.php on line 15\n\nDeprecated: Implicit conversion from float\
    \ 1.5 to int loses precision in /tmp/tmpryeaym06.php on line 15\n\nDeprecated:\
    \ Implicit conversion from float 3.5 to int loses precision in /tmp/tmpryeaym06.php\
    \ on line 15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpryeaym06.php:30\n\
    Stack trace:\n#0 /tmp/tmpryeaym06.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpryeaym06.php\
    \ on line 30\n"
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n  if ($x == $y + $z) {\n    return true;\n  } elseif ($y == $x + $z) {\n\
    \    return true;\n  } elseif ($z == $x + $y) {\n    return true;\n  } else {\n\
    \    return false;\n  }\n}\n$first = 1;\n$second = 2;\n$third = 3;\necho any_int($first,\
    \ $second, $third) . PHP_EOL;\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm87e_aij.php:37\n\
    Stack trace:\n#0 /tmp/tmpm87e_aij.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpm87e_aij.php\
    \ on line 37\n"
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n  if (($x == $y + $z) || ($y == $x + $z) || ($z == $x + $y)) {\n    if ((is_int($x))\
    \ && (is_int($y)) && (is_int($z))) {\n      return true;\n    }\n  }\n  return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n\t$xy = $x + $y;\n\t$yz = $y + $z;\n\t$xz = $x + $z;\n\tif ((is_int($x) &&\
    \ is_int($y) && is_int($z)) && ($xy == $z || $yz == $x || $xz == $y)) {\n\t\t\
    return true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n\t$int = true;\n\tif ($x == intval($x) && $y == intval($y) && $z == intval($z))\
    \ {\n\t\t$int = true;\n\t} else {\n\t\t$int = false;\n\t}\n\t$sum = $x + $y;\n\
    \tif ($x == $sum - $z || $y == $sum - $x || $z == $sum - $y) {\n\t\treturn $int;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho any_int(1,2,1);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp29m0ahcw.php:37\n\
    Stack trace:\n#0 /tmp/tmp29m0ahcw.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp29m0ahcw.php\
    \ on line 37\n"
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if (is_int($x) && is_int($y) && is_int($z)) {\n        if ($x == $y +\
    \ $z || $y == $x + $z || $z == $x + $y) {\n            return true;\n        }\n\
    \    }\n    return false;\n}\n\nvar_dump(any_int(1, 2, 3));\nvar_dump(any_int(3,\
    \ 4, 7));\nvar_dump(any_int(6, 2, 8));\nvar_dump(any_int(3.0, 2, 1));\nvar_dump(any_int(3.2,\
    \ 2.2, 1));\nvar_dump(any_int(1, 2, -1));\nvar_dump(any_int(1, 2, -2));\nvar_dump(any_int(1,\
    \ 2, 2));\nvar_dump(any_int(1, 1, 2));\nvar_dump(any_int(1, 2, 2.5));\nvar_dump(any_int(1,\
    \ 2, \"2\"));\nvar_dump(any_int(1, 2, \"3\"));\nvar_dump(any_int(1, 2, \"x\"));\n\
    var_dump(any_int(1, 2, \"2.0\"));\nvar_dump(any_int(1, \"2\", 3));\nvar_dump(any_int(1,\
    \ \"3\", 3));\nvar_dump(any_int(1, \"x\", 3));\nvar_dump(any_int(1, \"2.0\", 3));\n\
    var_dump(any_int(\"2\", 3, 1));\nvar_dump(any_int(\"3\", 3, 1));\nvar_dump(any_int(\"\
    x\", 3, 1));\nvar_dump(any_int(\"2.0\", 3, 1));\nvar_dump(any_int(\"x\", \"x\"\
    , \"x\"));\nvar_dump(any_int(\"\", \"\", \"\"));\nvar_dump(any_int(0, 0, 0));\n\
    var_dump(any_int(1, 1, 0));\nvar_dump(any_int(1, 0, 1));\n\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'bool(true)

    bool(true)

    bool(true)

    bool(false)

    bool(false)

    bool(true)

    bool(false)

    bool(false)

    bool(true)

    bool(false)

    bool(false)

    bool(false)

    bool(false)

    bool(false)

    bool(false)

    bool(false)

    bool(false)

    bool(false)

    bool(false)

    bool(false)

    bool(false)

    bool(false)

    bool(false)

    bool(false)

    bool(true)

    bool(true)

    bool(true)

    '
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    return ($x + $y == $z) || ($x + $z == $y) || ($y + $z == $x);\n}\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp71jd6hla.php:24\n\
    Stack trace:\n#0 /tmp/tmp71jd6hla.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp71jd6hla.php\
    \ on line 24\n"
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n  if (is_int($x) && is_int($y) && is_int($z)) {\n    return true;\n  } else\
    \ {\n    return false;\n  }\n}\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx9is14y2.php:30\n\
    Stack trace:\n#0 /tmp/tmpx9is14y2.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpx9is14y2.php\
    \ on line 30\n"
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n  if (is_int($x) && is_int($y) && is_int($z)) {\n    if ($x == $y + $z ||\
    \ $y == $x + $z || $z == $x + $y) {\n      return true;\n    }\n  }\n  return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823419
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    return is_int($x) && is_int($y) && is_int($z) && ($x + $y == $z || $x\
    \ + $z == $y || $y + $z == $x);\n}\n\necho any_int(5, 2, 7) ? \"true\\n\" : \"\
    false\\n\";\necho any_int(3, 2, 2) ? \"true\\n\" : \"false\\n\";\necho any_int(3,\
    \ -2, 1) ? \"true\\n\" : \"false\\n\";\necho any_int(3.6, -2.2, 2) ? \"true\\\
    n\" : \"false\\n\";\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n\tif (($x + $y == $z) || ($x + $z == $y) || ($y + $z == $x)) {\n\t\treturn\
    \ true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\n\necho any_int(5, 2, 7) . \"\
    <br />\";\necho any_int(3, 2, 2) . \"<br />\";\necho any_int(3, -2, 1) . \"<br\
    \ />\";\necho any_int(3.6, -2.2, 2) . \"<br />\";\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1<br /><br />1<br /><br />\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp9pko96tx.php:34\nStack trace:\n#0 /tmp/tmp9pko96tx.php(44): test()\n\
    #1 {main}\n  thrown in /tmp/tmp9pko96tx.php on line 34\n"
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if (is_int($x) && is_int($y) && is_int($z)) {\n        if (($x + $y)\
    \ == $z || ($x + $z) == $y || ($y + $z) == $x) {\n            return true;\n \
    \       } else {\n            return false;\n        }\n    } else {\n       \
    \ return false;\n    }\n}\necho any_int(5, 2, 7);\necho \"\\n\";\necho any_int(3,\
    \ 2, 2);\necho \"\\n\";\necho any_int(3, -2, 1);\necho \"\\n\";\necho any_int(3.6,\
    \ -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    1

    '
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if (is_int($x) && is_int($y) && is_int($z)) {\n        if ($x + $y ==\
    \ $z || $x + $z == $y || $y + $z == $x) {\n            return true;\n        }\n\
    \    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n\treturn $x === $y + $z || $y === $x + $z || $z === $x + $y;\n}\n\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if (is_int($x) && is_int($y) && is_int($z)) {\n        if ($x + $y ==\
    \ $z || $x + $z == $y || $y + $z == $x) {\n            return true;\n        }\n\
    \    } else {\n        return false;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4wby6vic.php:32\n\
    Stack trace:\n#0 /tmp/tmp4wby6vic.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp4wby6vic.php\
    \ on line 32\n"
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n  if (is_int($x) && is_int($y) && is_int($z)) {\n    if ($x + $y == $z ||\
    \ $x + $z == $y || $y + $z == $x) {\n      return true;\n    }\n  }\n  return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n  if(!is_int($x) || !is_int($y) || !is_int($z)) {\n    return false;\n  }\n\
    \  if($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n    return true;\n \
    \ }\n  return false;\n}\necho any_int(3, -2, 1);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n\t// your code goes here\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq1cj3fmu.php:22\n\
    Stack trace:\n#0 /tmp/tmpq1cj3fmu.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpq1cj3fmu.php\
    \ on line 22\n"
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if (($x == $y + $z || $y == $x + $z || $z == $x + $y) && is_int($x) &&\
    \ is_int($y) && is_int($z)) {\n        return true;\n    } else {\n        return\
    \ false;\n    }\n}\necho any_int(5, 2, 7) . \"\\n\";\necho any_int(3, 2, 2) .\
    \ \"\\n\";\necho any_int(3, -2, 1) . \"\\n\";\necho any_int(3.6, -2.2, 2) . \"\
    \\n\";\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    1


    '
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n\t$sum = $x + $y + $z;\n\t$num_array = [$x, $y, $z];\n\t$float_array = [];\n\
    \t$float_sum = 0;\n\tfor ($i = 0; $i < count($num_array); $i++) {\n\t\tif ($num_array[$i]\
    \ !== intval($num_array[$i])) {\n\t\t\tarray_push($float_array, $num_array[$i]);\n\
    \t\t}\n\t}\n\tif ($float_array == []) {\n\t\tif (($x == $sum - $y - $z) || ($y\
    \ == $sum - $x - $z) || ($z == $sum - $x - $y)) {\n\t\t\treturn TRUE;\n\t\t} else\
    \ {\n\t\t\treturn FALSE;\n\t\t}\n\t} else {\n\t\treturn FALSE;\n\t}\n}\n\necho\
    \ any_int(3, -2, 1);\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpilpou9dd.php:45\n\
    Stack trace:\n#0 /tmp/tmpilpou9dd.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpilpou9dd.php\
    \ on line 45\n"
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n  if ($x == $y + $z || $y == $x + $z || $z == $x + $y && is_int($x) && is_int($y)\
    \ && is_int($z)) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\
    echo any_int(5, 2, 7);\necho '<br>';\necho any_int(3, 2, 2);\necho '<br>';\necho\
    \ any_int(3, -2, 1);\necho '<br>';\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1<br><br>1<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpspp3tuud.php:35\n\
    Stack trace:\n#0 /tmp/tmpspp3tuud.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpspp3tuud.php\
    \ on line 35\n"
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    $integers = array_filter(func_get_args(), function($number) {\n     \
    \   return filter_var($number, FILTER_VALIDATE_INT);\n    });\n    if (count($integers)\
    \ < 3) {\n        return false;\n    }\n    return in_array($x + $y, $integers)\
    \ || in_array($x + $z, $integers) || in_array($y + $z, $integers);\n}\nvar_dump(any_int(3,\
    \ 2, 2));\nvar_dump(any_int(3, -2, 1));\nvar_dump(any_int(3.6, -2.2, 2));\nvar_dump(any_int(5,\
    \ 2, 7));\nvar_dump(any_int(3.6, -2.2, 2));\nfunction candidate(...$args) {\n\
    \    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "bool(false)\nbool(true)\nbool(false)\nbool(true)\nbool(false)\n\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmpnp0xiuok.php:42\nStack trace:\n\
    #0 /tmp/tmpnp0xiuok.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpnp0xiuok.php\
    \ on line 42\n"
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if (is_int($x) && is_int($y) && is_int($z)) {\n        if ($x + $y ==\
    \ $z || $x + $z == $y || $y + $z == $x) {\n            return true;\n        }\n\
    \    } else {\n        return false;\n    }\n}\necho any_int(3, -2, 1);\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfaeiu9id.php:32\n\
    Stack trace:\n#0 /tmp/tmpfaeiu9id.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpfaeiu9id.php\
    \ on line 32\n"
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if (is_int($x) && is_int($y) && is_int($z)) {\n        if ($x + $y ==\
    \ $z || $x + $z == $y || $y + $z == $x) {\n            return true;\n        }\n\
    \    } else {\n        return false;\n    }\n}\necho any_int(3, -2, 1);\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfaeiu9id.php:32\n\
    Stack trace:\n#0 /tmp/tmpfaeiu9id.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpfaeiu9id.php\
    \ on line 32\n"
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    return (is_int($x) && is_int($y) && is_int($z)) ? ($x == $y + $z || $y\
    \ == $x + $z || $z == $x + $y) : false;\n}\n\nfunction candidate(...$args) {\n\
    \    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n  if (is_int($x) && is_int($y) && is_int($z)) {\n    return ($x + $y == $z\
    \ || $x + $z == $y || $y + $z == $x);\n  } else {\n    return false;\n  }\n}\n\
    function candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if ((is_int($x) && is_int($y) && is_int($z)) && (($x === $y + $z) ||\
    \ ($y === $x + $z) || ($z === $x + $y))) {\n        return true;\n    } else {\n\
    \        return false;\n    }\n}\necho any_int(5, 2, 7).\"\\n\";\necho any_int(3,\
    \ 2, 2).\"\\n\";\necho any_int(3, -2, 1).\"\\n\";\necho any_int(3.6, -2.2, 2).\"\
    \\n\";\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    1


    '
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if (is_int($x) == true && is_int($y) == true && is_int($z) == true) {\n\
    \        if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n            return\
    \ true;\n        } else {\n            return false;\n        }\n    } else {\n\
    \        return false;\n    }\n}\necho any_int(5, 2, 7);\necho '<br>';\necho any_int(3,\
    \ 2, 2);\necho '<br>';\necho any_int(3, -2, 1);\necho '<br>';\necho any_int(3.6,\
    \ -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br><br>1<br>
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n  if (is_int($x) && is_int($y) && is_int($z)) {\n    if ($x + $y == $z ||\
    \ $x + $z == $y || $y + $z == $x) {\n      return true;\n    }\n  }\n  return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n  if(($x + $y == $z) || ($x + $z == $y) || ($y + $z == $x)) {\n    return\
    \ true;\n  } else {\n    return false;\n  }\n}\n\necho any_int(5, 2, 7);\necho\
    \ \"\\n\";\necho any_int(3, 2, 2);\necho \"\\n\";\necho any_int(3, -2, 1);\necho\
    \ \"\\n\";\necho any_int(3.6, -2.2, 2);\necho \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n1\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph2slqmye.php:38\n\
    Stack trace:\n#0 /tmp/tmph2slqmye.php(48): test()\n#1 {main}\n  thrown in /tmp/tmph2slqmye.php\
    \ on line 38\n"
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n  $sum = $x + $y + $z;\n  if (is_int($x) && is_int($y) && is_int($z)) {\n\
    \    if ($x == $sum - $y - $z || $y == $sum - $x - $z || $z == $sum - $x - $y)\
    \ {\n      return true;\n    }\n  }\n  return false;\n}\n\necho any_int(3, -2,\
    \ 1) . \"\\n\";\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph9ckdfrw.php:34\n\
    Stack trace:\n#0 /tmp/tmph9ckdfrw.php(43): test()\n#1 {main}\n  thrown in /tmp/tmph9ckdfrw.php\
    \ on line 34\n"
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n\tif (($x + $y == $z) || ($x + $z == $y) || ($y + $z == $x)) {\n\t\treturn\
    \ true;\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\necho any_int(3, -2, 1);\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz_d777rw.php:30\n\
    Stack trace:\n#0 /tmp/tmpz_d777rw.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpz_d777rw.php\
    \ on line 30\n"
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if ($x % 1 === 0 && $y % 1 === 0 && $z % 1 === 0) {\n        if (($x\
    \ + $y) === $z || ($x + $z) === $y || ($y + $z) === $x) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Deprecated: Implicit conversion from float 2.5 to int loses precision in /tmp/tmpqix3lt5b.php
    on line 15


    Deprecated: Implicit conversion from float 1.5 to int loses precision in /tmp/tmpqix3lt5b.php
    on line 15


    Deprecated: Implicit conversion from float 3.5 to int loses precision in /tmp/tmpqix3lt5b.php
    on line 15


    Deprecated: Implicit conversion from float 2.2 to int loses precision in /tmp/tmpqix3lt5b.php
    on line 15


    Deprecated: Implicit conversion from float 2.2 to int loses precision in /tmp/tmpqix3lt5b.php
    on line 15


    Deprecated: Implicit conversion from float 2.2 to int loses precision in /tmp/tmpqix3lt5b.php
    on line 15

    '
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if ($x + $y == $z) {\n        return true;\n    } elseif ($x + $z ==\
    \ $y) {\n        return true;\n    } elseif ($y + $z == $x) {\n        return\
    \ true;\n    } else {\n        return false;\n    }\n}\n$ex1 = any_int(5, 2, 7);\n\
    echo $ex1;\n$ex2 = any_int(3, 2, 2);\necho $ex2;\n$ex3 = any_int(3, -2, 1);\n\
    echo $ex3;\n$ex4 = any_int(3.6, -2.2, 2);\necho $ex4;\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqnp6utr0.php:40\n\
    Stack trace:\n#0 /tmp/tmpqnp6utr0.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpqnp6utr0.php\
    \ on line 40\n"
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    return (is_int($x) && is_int($y) && is_int($z)) && ($x + $y == $z ||\
    \ $x + $z == $y || $y + $z == $x);\n}\n\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if (is_int($x) && is_int($y) && is_int($z)) {\n        if ($x + $y ==\
    \ $z || $x + $z == $y || $y + $z == $x) {\n            return true;\n        }\n\
    \    }\n    return false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n  if (is_int($x) && is_int($y) && is_int($z)) {\n    return true;\n  } else\
    \ {\n    return false;\n  }\n}\n\necho any_int(5, 2, 7);\necho any_int(3, 2, 2);\n\
    echo any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\n ?>\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "111function candidate(...$args) {\n    return any_int(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    $result = false;\n    $int = is_int($x) && is_int($y) && is_int($z);\n\
    \    if ($int) {\n        $value = $x + $y == $z || $x + $z == $y || $y + $z ==\
    \ $x;\n        if ($value) {\n            $result = true;\n        }\n    }\n\
    \    return $result;\n}\necho any_int(5, 2, 7) . \"\\n\";\necho any_int(3, 2,\
    \ 2) . \"\\n\";\necho any_int(3, -2, 1) . \"\\n\";\necho any_int(3.6, -2.2, 2)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    1


    '
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n  if (is_int($x) && is_int($y) && is_int($z)) {\n    if (($x + $y) == $z\
    \ || ($x + $z) == $y || ($y + $z) == $x) {\n      return true;\n    }\n  }\n \
    \ return false;\n}\n\necho any_int(5, 2, 7) . PHP_EOL;\necho any_int(3, 2, 2)\
    \ . PHP_EOL;\necho any_int(3, -2, 1) . PHP_EOL;\necho any_int(3.6, -2.2, 2) .\
    \ PHP_EOL;\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    1


    '
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if (!is_int($x) || !is_int($y) || !is_int($z)) {\n        return false;\n\
    \    }\n    return $x + $y == $z || $x + $z == $y || $y + $z == $x;\n}\nvar_dump(any_int(3,\
    \ -2, 1));\nvar_dump(any_int(3.6, -2.2, 2));\nfunction candidate(...$args) {\n\
    \    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'bool(true)

    bool(false)

    '
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    return is_int($x) && is_int($y) && is_int($z) && ( $x == $y + $z || $y\
    \ == $x + $z || $z == $x + $y );\n}\n\necho any_int(5, 2, 7) ? 'true':'false';\n\
    echo '<br>';\necho any_int(3, 2, 2) ? 'true':'false';\necho '<br>';\necho any_int(3,\
    \ -2, 1) ? 'true':'false';\necho '<br>';\necho any_int(3.6, -2.2, 2) ? 'true':'false';\n\
    echo '<br>';\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: true<br>false<br>true<br>false<br>
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n\tif(is_int($x) && is_int($y) && is_int($z)) {\n\t\tif($x == $y + $z || $y\
    \ == $x + $z || $z == $x + $y) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\nvar_dump(any_int(3, 2,\
    \ 2));\nvar_dump(any_int(3, -2, 1));\nvar_dump(any_int(3.6, -2.2, 2));\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'bool(false)

    bool(true)

    bool(false)

    '
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    return (ctype_digit($x.$y.$z) && (($x + $y == $z) || ($x + $z == $y)\
    \ || ($y + $z == $x)));\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt48_ag2n.php:28\n\
    Stack trace:\n#0 /tmp/tmpt48_ag2n.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpt48_ag2n.php\
    \ on line 28\n"
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    return (is_int($x) && is_int($y) && is_int($z)) &&\n           (($x ==\
    \ $y + $z) || ($y == $x + $z) || ($z == $x + $y));\n}\n\n$tests = [\n    'any_int(5,\
    \ 2, 7)',\n    'any_int(3, 2, 2)',\n    'any_int(3, -2, 1)',\n    'any_int(3.6,\
    \ -2.2, 2)',\n];\n\nforeach ($tests as $test) {\n    eval(\"\\$result = $test;\"\
    );\n    echo \"$test = \";\n    var_dump($result);\n}\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'any_int(5, 2, 7) = bool(true)

    any_int(3, 2, 2) = bool(false)

    any_int(3, -2, 1) = bool(true)

    any_int(3.6, -2.2, 2) = bool(false)

    '
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if ($x === $y + $z) {\n        return true;\n    } elseif ($y === $x\
    \ + $z) {\n        return true;\n    } elseif ($z === $x + $y) {\n        return\
    \ true;\n    } else {\n        return false;\n    }\n}\necho any_int(5, 2, 7);\n\
    function candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n\tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z ||\
    \ $x + $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if (is_int($x) && is_int($y) && is_int($z)) {\n        if ($x + $y ==\
    \ $z || $x + $z == $y || $y + $z == $x) {\n            return true;\n        }\n\
    \    } else {\n        return false;\n    }\n}\nfunction candidate(...$args) {\n\
    \    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy7gdkhma.php:31\n\
    Stack trace:\n#0 /tmp/tmpy7gdkhma.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpy7gdkhma.php\
    \ on line 31\n"
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n  if (is_int($x) && is_int($y) && is_int($z)) {\n    return true;\n  } else\
    \ {\n    return false;\n  }\n}\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx9is14y2.php:30\n\
    Stack trace:\n#0 /tmp/tmpx9is14y2.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpx9is14y2.php\
    \ on line 30\n"
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n\tif ( is_int($x) && is_int($y) && is_int($z) ) {\n\t\tif ( $x == $y + $z\
    \ ) {\n\t\t\treturn true;\n\t\t} elseif ( $y == $x + $z ) {\n\t\t\treturn true;\n\
    \t\t} elseif ( $z == $x + $y ) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\n\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if ((is_int($x) && is_int($y) && is_int($z)) && ($x === $y + $z || $y\
    \ === $x + $z || $z === $x + $y)) {\n        return true;\n    } else {\n    \
    \    return false;\n    }\n}\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    return $x + $y == $z || $x + $z == $y || $y + $z == $x;\n}\necho any_int(3,\
    \ -2, 1);\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8cxhwk7y.php:25\n\
    Stack trace:\n#0 /tmp/tmp8cxhwk7y.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp8cxhwk7y.php\
    \ on line 25\n"
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if (\n        is_int($x) && is_int($y) && is_int($z) &&\n        ($x\
    \ + $y == $z || $x + $z == $y || $y + $z == $x)\n    ) {\n        return true;\n\
    \    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    $result = null;\n    if (is_int($x) && is_int($y) && is_int($z)) {\n\
    \        if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n            $result\
    \ = true;\n        } else {\n            $result = false;\n        }\n    } else\
    \ {\n        $result = false;\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n  $a = (int)$x;\n  $b = (int)$y;\n  $c = (int)$z;\n  $d = $a + $b;\n  $e\
    \ = $a + $c;\n  $f = $b + $c;\n  if ($d === $c || $e === $b || $f === $a) {\n\
    \    return true;\n  } else {\n    return false;\n  }\n}\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq6awus8k.php:41\n\
    Stack trace:\n#0 /tmp/tmpq6awus8k.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpq6awus8k.php\
    \ on line 41\n"
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if (($x + $y == $z) || ($x + $z == $y) || ($y + $z == $x)) {\n      \
    \  return true;\n    }\n    return false;\n}\necho any_int(5, 2, 7) . \"\\n\"\
    ;\necho any_int(3, 2, 2) . \"\\n\";\necho any_int(3, -2, 1) . \"\\n\";\necho any_int(3.6,\
    \ -2.2, 2) . \"\\n\";\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n1\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptdql_f_0.php:31\n\
    Stack trace:\n#0 /tmp/tmptdql_f_0.php(41): test()\n#1 {main}\n  thrown in /tmp/tmptdql_f_0.php\
    \ on line 31\n"
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if (($x + $y == $z) || ($x + $z == $y) || ($y + $z == $x)) {\n      \
    \  if (is_int($x) && is_int($y) && is_int($z)) {\n            return true;\n \
    \       }\n    }\n    return false;\n}\necho any_int(3, -2, 1).\"\\n\";\necho\
    \ any_int(3.6, -2.2, 2).\"\\n\";\necho any_int(3, 2, 2).\"\\n\";\necho any_int(5,\
    \ 2, 7).\"\\n\";\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1

    '
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    return (\n        is_int($x) && is_int($y) && is_int($z) &&\n       \
    \ ($x + $y == $z || $x + $z == $y || $y + $z == $x)\n    );\n}\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n  if (is_int($x) && is_int($y) && is_int($z)) {\n    if ($x == $y + $z ||\
    \ $y == $x + $z || $z == $x + $y) {\n      return true;\n    }\n  }\n  return\
    \ false;\n}\n\necho any_int(3, -2, 1);\n\nfunction candidate(...$args) {\n   \
    \ return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    return ($x === $y + $z || $y === $x + $z || $z === $x + $y) && is_int($x)\
    \ && is_int($y) && is_int($z);\n}\n\necho any_int(3, 2, 2) . PHP_EOL;\necho any_int(3,\
    \ -2, 1) . PHP_EOL;\necho any_int(3.6, -2.2, 2) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    1


    '
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    return (\n      is_int($x) &&\n      is_int($y) &&\n      is_int($z)\
    \ &&\n      ($x + $y == $z || $x + $z == $y || $y + $z == $x)\n    );\n  }\necho\
    \ any_int(5, 2, 7);\necho '<br>';\necho any_int(3, 2, 2);\necho '<br>';\necho\
    \ any_int(3, -2, 1);\necho '<br>';\necho any_int(3.6, -2.2, 2);\necho '<br>';\n\
    \nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br><br>1<br><br>
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if (is_int($x) && is_int($y) && is_int($z)) {\n        if ($x + $y ==\
    \ $z || $x + $z == $y || $y + $z == $x) {\n            return true;\n        }\n\
    \    }\n    return false;\n}\n\necho any_int(3, -2, 1) . \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2) . \"<br>\";\necho any_int(3, 2, 2) . \"<br>\";\n\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br><br><br>
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if (($x == $y + $z) || ($y == $x + $z) || ($z == $x + $y)) {\n      \
    \  echo \"true\";\n    } else {\n        echo \"false\";\n    }\n}\nany_int(3,\
    \ -2, 1);\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "truetrue\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdt6oom_z.php:27\n\
    Stack trace:\n#0 /tmp/tmpdt6oom_z.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpdt6oom_z.php\
    \ on line 27\n"
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n  if (is_int($x) && is_int($y) && is_int($z)) {\n    if ($x == $y + $z ||\
    \ $y == $x + $z || $z == $x + $y) {\n      return true;\n    }\n  }\n  return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n        return\
    \ true;\n    } else {\n        return false;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppvi6kht6.php:29\n\
    Stack trace:\n#0 /tmp/tmppvi6kht6.php(39): test()\n#1 {main}\n  thrown in /tmp/tmppvi6kht6.php\
    \ on line 29\n"
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if (is_int($x) && is_int($y) && is_int($z)) {\n        if ($x == $y +\
    \ $z || $y == $x + $z || $z == $x + $y) {\n            return true;\n        }\n\
    \    }\n    return false;\n}\necho any_int(5, 2, 7);\necho any_int(3, 2, 2);\n\
    echo any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\n\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    return (is_int($x) && is_int($y) && is_int($z)) && ($x + $y == $z ||\
    \ $x + $z == $y || $y + $z == $x);\n}\nprint_r(any_int(5, 2, 7));\nprint_r(any_int(3,\
    \ 2, 2));\nprint_r(any_int(3, -2, 1));\nprint_r(any_int(3.6, -2.2, 2));\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    $nums = [$x, $y, $z];\n    for ($i = 0; $i < count($nums); $i++) {\n\
    \        $nums[$i] = intval($nums[$i]);\n    }\n    if ($nums[0] + $nums[1] ==\
    \ $nums[2] || $nums[0] + $nums[2] == $nums[1] || $nums[1] + $nums[2] == $nums[0])\
    \ {\n        return true;\n    } else {\n        return false;\n    }\n}\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnt5nfpi2.php:39\n\
    Stack trace:\n#0 /tmp/tmpnt5nfpi2.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpnt5nfpi2.php\
    \ on line 39\n"
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    return ((is_int($x) && is_int($y) && is_int($z)) && (($x + $y) == $z\
    \ || ($x + $z) == $y || ($y + $z) == $x));\n}\nfunction candidate(...$args) {\n\
    \    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    $has_equal_sum = false;\n    $all_are_int = false;\n    if (is_int($x)\
    \ and is_int($y) and is_int($z)) {\n        $all_are_int = true;\n    }\n    if\
    \ ($x == $y + $z or $y == $x + $z or $z == $x + $y) {\n        $has_equal_sum\
    \ = true;\n    }\n    if ($has_equal_sum and $all_are_int) {\n        return true;\n\
    \    } else {\n        return false;\n    }\n}\nfunction candidate(...$args) {\n\
    \    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n\tif(is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z ||\
    \ $x + $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn\
    \ false;\n}\necho any_int(3, -2, 1) . \"\\n\";\necho any_int(5, 2, 7) . \"\\n\"\
    ;\necho any_int(3, 2, 2) . \"\\n\";\necho any_int(3.6, -2.2, 2) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    1



    '
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n  if(is_int($x) && is_int($y) && is_int($z)) {\n    if($x == $y + $z || $y\
    \ == $x + $z || $z == $x + $y) {\n      return true;\n    }\n  }\n  return false;\n\
    }\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if(!is_int($x) || !is_int($y) || !is_int($z)) {\n        return false;\n\
    \    }\n    if($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n        return\
    \ true;\n    }\n    return false;\n}\n\nprint_r(any_int(5, 2, 7));\necho \"\\\
    n\";\nprint_r(any_int(3, 2, 2));\necho \"\\n\";\nprint_r(any_int(3, -2, 1));\n\
    echo \"\\n\";\nprint_r(any_int(3.6, -2.2, 2));\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    1


    '
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if (($x + $y == $z) || ($x + $z == $y) || ($y + $z == $x)) {\n      \
    \  return True;\n    } else {\n        return False;\n    }\n}\n\nprint(any_int(5,\
    \ 2, 7) . \"\\n\");\nprint(any_int(3, 2, 2) . \"\\n\");\nprint(any_int(3, -2,\
    \ 1) . \"\\n\");\nprint(any_int(3.6, -2.2, 2) . \"\\n\");\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n1\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp28j4rsem.php:33\n\
    Stack trace:\n#0 /tmp/tmp28j4rsem.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp28j4rsem.php\
    \ on line 33\n"
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    $sum = $x + $y + $z;\n    return is_int($x) && is_int($y) && is_int($z)\
    \ && ($x == $sum || $y == $sum || $z == $sum);\n}\n\necho '<h2>Problem 3:</h2>';\n\
    var_dump(any_int(5, 2, 7));\nvar_dump(any_int(3, 2, 2));\nvar_dump(any_int(3,\
    \ -2, 1));\nvar_dump(any_int(3.6, -2.2, 2));\n\nfunction candidate(...$args) {\n\
    \    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<h2>Problem 3:</h2>bool(false)\nbool(false)\nbool(false)\nbool(false)\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1wjrqqo4.php:30\nStack\
    \ trace:\n#0 /tmp/tmp1wjrqqo4.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp1wjrqqo4.php\
    \ on line 30\n"
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n\t\t$arr = [$x, $y, $z];\n\t\tsort($arr);\n\t\tif(gettype($arr[0]) == \"\
    integer\" and gettype($arr[1]) == \"integer\" and gettype($arr[2]) == \"integer\"\
    ) {\n\t\t\tif(($arr[0] + $arr[1]) == $arr[2]) {\n\t\t\t\treturn true;\n\t\t\t\
    } else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\treturn false;\n\t\
    \t}\n}\necho any_int(3, -2, 1);\necho \"<br>\";\necho any_int(3.6, -2.2, 2);\n\
    echo \"<br>\";\necho any_int(3, -2, 2);\necho \"<br>\";\necho any_int(5, 2, 7);\n\
    echo \"<br>\";\necho any_int(3, 2, 2);\necho \"<br>\";\n\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<br><br><br>1<br><br>\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpgjua1uwd.php:49\nStack trace:\n#0 /tmp/tmpgjua1uwd.php(55): test()\n\
    #1 {main}\n  thrown in /tmp/tmpgjua1uwd.php on line 49\n"
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n  if (($x == ($y + $z)) or ($y == ($x + $z)) or ($z == ($x + $y))) {\n  \
    \  return true;\n  } else {\n    return false;\n  }\n}\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpho3vhk53.php:28\n\
    Stack trace:\n#0 /tmp/tmpho3vhk53.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpho3vhk53.php\
    \ on line 28\n"
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if (is_int($x) && is_int($y) && is_int($z)) {\n        if ($x == $y +\
    \ $z || $y == $x + $z || $z == $x + $y) {\n            return true;\n        }\n\
    \    }\n    return false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if (is_int($x) && is_int($y) && is_int($z)) {\n        if ($x === $y\
    \ + $z || $y === $x + $z || $z === $x + $y) {\n            return true;\n    \
    \    }\n    } else {\n        return false;\n    }\n}\n$result = any_int(3, 2,\
    \ 2);\nvar_dump($result);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "NULL\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2ky27h6u.php:33\n\
    Stack trace:\n#0 /tmp/tmp2ky27h6u.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp2ky27h6u.php\
    \ on line 33\n"
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n\tif (($x + $y == $z) || ($x + $z == $y) || ($y + $z == $x)) {\n\t\treturn\
    \ True;\n\t}\n\telse {\n\t\treturn False;\n\t}\n}\n\necho any_int(3, -2, 1);\n\
    function candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo9kvmy08.php:31\n\
    Stack trace:\n#0 /tmp/tmpo9kvmy08.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpo9kvmy08.php\
    \ on line 31\n"
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    $x=intval($x);\n    $y=intval($y);\n    $z=intval($z);\n    if ($x==$y+$z)\
    \ {\n        return true;\n    }\n    elseif ($y==$x+$z) {\n        return true;\n\
    \    }\n    elseif ($z==$x+$y) {\n        return true;\n    }\n    else {\n  \
    \      return false;\n    }\n}\necho any_int(5, 2, 7).\"<br>\";\necho any_int(3,\
    \ 2, 2).\"<br>\";\necho any_int(3, -2, 1).\"<br>\";\necho any_int(3.6, -2.2, 2).\"\
    <br>\";\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1<br><br>1<br><br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjtb9zwd2.php:49\n\
    Stack trace:\n#0 /tmp/tmpjtb9zwd2.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpjtb9zwd2.php\
    \ on line 49\n"
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    return (($x == $y + $z || $y == $x + $z || $z == $x + $y) && is_int($x)\
    \ && is_int($y) && is_int($z));\n}\necho any_int(5, 2, 7) . \"<br>\";\necho any_int(3,\
    \ 2, 2) . \"<br>\";\necho any_int(3, -2, 1) . \"<br>\";\necho any_int(3.6, -2.2,\
    \ 2) . \"<br>\";\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br><br>1<br><br>
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    $sum = 0;\n    $num_arr = [$x, $y, $z];\n    foreach ($num_arr as $val)\
    \ {\n        if (!is_int($val)) {\n            return false;\n        }\n    \
    \    $sum += $val;\n    }\n    foreach ($num_arr as $val) {\n        if ($val\
    \ * 2 == $sum) {\n            return true;\n        }\n    }\n    return false;\n\
    }\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if ((is_int($x) || is_integer($x)) && (is_int($y) || is_integer($y))\
    \ && (is_int($z) || is_integer($z))) {\n        if ($x + $y == $z || $x + $z ==\
    \ $y || $y + $z == $x) {\n            return true;\n        } else {\n       \
    \     return false;\n        }\n    } else {\n        return false;\n    }\n}\n\
    function candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if (($x + $y == $z) || ($x + $z == $y) || ($y + $z == $x)) {\n      \
    \  echo \"true\";\n    } else {\n        echo \"false\";\n    }\n}\n\nany_int(5,\
    \ 2, 7);\necho \"<br>\";\nany_int(3, 2, 2);\necho \"<br>\";\nany_int(3, -2, 1);\n\
    echo \"<br>\";\nany_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "true<br>false<br>true<br>falsetrue\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp74ha5gv9.php:34\nStack trace:\n#0 /tmp/tmp74ha5gv9.php(46):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp74ha5gv9.php on line 34\n"
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n        return\
    \ true;\n    } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7)\
    \ . \"\\n\";\necho any_int(3, 2, 2) . \"\\n\";\necho any_int(3, -2, 1) . \"\\\
    n\";\necho any_int(3.6, -2.2, 2) . \"\\n\";\n\nfunction candidate(...$args) {\n\
    \    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n1\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6bb8pchc.php:34\n\
    Stack trace:\n#0 /tmp/tmp6bb8pchc.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp6bb8pchc.php\
    \ on line 34\n"
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n  if(is_int($x) && is_int($y) && is_int($z)) {\n    if ($x + $y == $z ||\
    \ $x + $z == $y || $y + $z == $x) {\n      return true;\n    }\n  }\n  return\
    \ false;\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if (is_int($x) && is_int($y) && is_int($z)) {\n        if ($x === $y\
    \ + $z || $y === $x + $z || $z === $x + $y) {\n            return true;\n    \
    \    }\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    return ($x + $y == $z || $x + $z == $y || $y + $z == $x) && \n      \
    \  is_int($x) && is_int($y) && is_int($z);\n}\n\necho any_int(5, 2, 7) . \"\\\
    n\";\necho any_int(3, 2, 2) . \"\\n\";\necho any_int(3, -2, 1) . \"\\n\";\necho\
    \ any_int(3.6, -2.2, 2) . \"\\n\";\n\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    1


    '
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    $sum = $x + $y + $z;\n    return (int)$sum === $sum;\n}\nvar_dump(any_int(3,\
    \ 2, 2));\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "bool(true)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv5nkfpg6.php:27\n\
    Stack trace:\n#0 /tmp/tmpv5nkfpg6.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpv5nkfpg6.php\
    \ on line 27\n"
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    $result = false;\n    if (is_int($x) && is_int($y) && is_int($z)) {\n\
    \        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n            $result\
    \ = true;\n        }\n    }\n    return $result;\n}\necho any_int(5, 2, 7) . PHP_EOL;\n\
    echo any_int(3, 2, 2) . PHP_EOL;\necho any_int(3, -2, 1) . PHP_EOL;\necho any_int(3.6,\
    \ -2.2, 2) . PHP_EOL;\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    1


    '
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if (is_int($x) && is_int($y) && is_int($z)) {\n        if ($x == $y +\
    \ $z || $y == $x + $z || $z == $x + $y) {\n            return true;\n        }\n\
    \    }\n    return false;\n}\n\nprint_r(any_int(5, 2, 7));\nprint_r(any_int(3,\
    \ 2, 2));\nprint_r(any_int(3, -2, 1));\nprint_r(any_int(3.6, -2.2, 2));\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n\tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z ||\
    \ $x + $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn\
    \ false;\n}\nvar_dump(any_int(5, 2, 7));\nvar_dump(any_int(3, 2, 2));\nvar_dump(any_int(3,\
    \ -2, 1));\nvar_dump(any_int(3.6, -2.2, 2));\nfunction candidate(...$args) {\n\
    \    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'bool(true)

    bool(false)

    bool(true)

    bool(false)

    '
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if (is_int($x) && is_int($y) && is_int($z)) {\n        if ($x + $y ==\
    \ $z || $x + $z == $y || $y + $z == $x) {\n            return true;\n        }\n\
    \    }\n    return false;\n}\nvar_dump(any_int(5, 2, 7));\nvar_dump(any_int(3,\
    \ 2, 2));\nvar_dump(any_int(3, -2, 1));\nvar_dump(any_int(3.6, -2.2, 2));\n\n\
    function candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'bool(true)

    bool(false)

    bool(true)

    bool(false)

    '
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n  $test1 = $x + $y;\n  $test2 = $x + $z;\n  $test3 = $y + $z;\n  if (($test1\
    \ == $z) || ($test2 == $y) || ($test3 == $x)) {\n    return true;\n  } else {\n\
    \    return false;\n  }\n}\n\necho any_int(5, 2, 7) . \"\\n\";\necho any_int(3,\
    \ 2, 2) . \"\\n\";\necho any_int(3, -2, 1) . \"\\n\";\necho any_int(3.6, -2.2,\
    \ 2) . \"\\n\";\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n1\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvwj293fd.php:37\n\
    Stack trace:\n#0 /tmp/tmpvwj293fd.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpvwj293fd.php\
    \ on line 37\n"
  timestamp: 1659978418
- exit_code: 255
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if (($x + $y == $z) || ($x + $z == $y) || ($y + $z == $x)) {\n      \
    \  return true;\n    } else {\n        return false;\n    }\n}\necho any_int(3,\
    \ -2, 1);\necho \"<br/>\";\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1<br/>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx90k_wss.php:31\n\
    Stack trace:\n#0 /tmp/tmpx90k_wss.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpx90k_wss.php\
    \ on line 31\n"
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n  return (is_int($x) && is_int($y) && is_int($z)) ? (($x + $y === $z) ||\
    \ ($x + $z === $y) || ($y + $z === $x)) : false;\n}\necho any_int(2, 3, 1);\n\
    function candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1659978418
- exit_code: 0
  program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// >>> any_int(5,\
    \ 2, 7)\n// true\n// >>> any_int(3, 2, 2)\n// false\n// >>> any_int(3, -2, 1)\n\
    // true\n// >>> any_int(3.6, -2.2, 2)\n// false\nfunction any_int($x, $y, $z)\
    \ {\n    if (is_int($x) && is_int($y) && is_int($z)) {\n        if ($x == $y +\
    \ $z || $y == $x + $z || $z == $x + $y) {\n            return true;\n        }\n\
    \    }\n    return false;\n}\necho (any_int(5, 2, 7) ? 'true' : 'false') . \"\\\
    n\";\necho (any_int(3, 2, 2) ? 'true' : 'false') . \"\\n\";\necho (any_int(3,\
    \ -2, 1) ? 'true' : 'false') . \"\\n\";\necho (any_int(3.6, -2.2, 2) ? 'true'\
    \ : 'false') . \"\\n\";\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'true

    false

    true

    false

    '
  timestamp: 1659978418

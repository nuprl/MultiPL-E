name: HumanEval_24_largest_divisor
language: php
prompt: "<?php\n// For a given number n, find the largest number that divides n evenly,\
  \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
  \ {\n"
tests: "function candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
  \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n   \
  \ if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    for ($i = $n-1; $i >= 1; $i--) {\n        if ($n % $i == 0) {\n\
    \            return $i;\n        }\n    }\n}\n\necho largest_divisor(15);\necho\
    \ \"\\n\";", "    $divisor = 2;\n    $last = 1;\n    while ($divisor < $n) {\n\
    \        if ($n % $divisor == 0) {\n            $last = $divisor;\n        }\n\
    \        $divisor++;\n    }\n    return $last;\n}\n", "  $last = $n;\n  while\
    \ ($last > 0) {\n    if (($n % $last) == 0) {\n      break;\n    }\n    $last--;\n\
    \  }\n  return $last;\n}", "    $max = $n - 1;\n    $max = (int)$max;\n    while($n\
    \ % $max != 0) {\n        $max--;\n    }\n    return $max;\n}", "    $i = $n -\
    \ 1;\n    while($i > 0) {\n        if ($n % $i == 0) {\n            return $i;\n\
    \        }\n        $i--;\n    }\n}\necho largest_divisor(12) . \"\\n\";\necho\
    \ largest_divisor(15) . \"\\n\";\n", "  for ($i = $n-1; $i > 0; $i--) {\n    if\
    \ ($n % $i == 0) {\n      return $i;\n    }\n  }\n}\necho largest_divisor(15)\
    \ . \"\\n\";\n", "\t$largest = 1;\n\tfor ($i = 2; $i < $n; $i++) {\n\t\tif ($n\
    \ % $i == 0) {\n\t\t\t$largest = $i;\n\t\t}\n\t}\n\treturn $largest;\n}\n", "\t\
    for ($i = $n-1; $i > 0; $i--) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn $i;\n\t\
    \t}\n\t}\n}\n", "\tfor ($i = $n - 1; $i > 0; $i--) {\n\t\tif ($n % $i == 0) {\n\
    \t\t\treturn $i;\n\t\t}\n\t}\n}\n", "    $number = floor($n / 2);\n    $result\
    \ = 1;\n    for ($i = $number; $i > 0; $i--) {\n        if ($n % $i == 0) {\n\
    \            $result = $i;\n            break;\n        }\n    }\n    return $result;\n\
    }\necho largest_divisor(15);\necho '<br>';", "\t$divisor = $n-1;\n\twhile ($n\
    \ % $divisor !== 0) {\n\t\t$divisor--;\n\t}\n\treturn $divisor;\n}\n", "\tfor\
    \ ($i = $n - 1; $i > 0; $i--) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn $i;\n\t\
    \t}\n\t}\n}\necho largest_divisor(15);", "  $i = $n - 1;\n  while ($i > 0) {\n\
    \    if ($n % $i == 0) {\n      return $i;\n    }\n    $i--;\n  }\n}\n", "\tfor\
    \ ($i = $n - 1; $i > 0; $i--) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn $i;\n\t\
    \t}\n\t}\n}\necho largest_divisor(15);\necho \"<br>\";\n", "  $i = $n;\n  while\
    \ (--$i) {\n    if ($n % $i == 0) {\n      return $i;\n    }\n  }\n}\n", "   \
    \ for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n           \
    \ return $i;\n        }\n    }\n}\n", "\tfor ($i=$n; $i>0; $i--) {\n\t\tif ($n\
    \ % $i == 0) {\n\t\t\treturn $i;\n\t\t}\n\t}\n}\n", "\t$m = floor($n / 2);\n\t\
    if ($m > 0) {\n\t\tif ($n % $m == 0) return $m;\n\t\telse return largest_divisor($m);\n\
    \t}\n\treturn $n;\n}\n", "    $c = floor($n / 2);\n    while ($c > 0) {\n    \
    \    if ($n % $c == 0) {\n            return $c;\n        }\n        $c -= 1;\n\
    \    }\n}\n", "  for ($i = $n - 1; $i > 0; $i--) {\n    if ($n % $i == 0) return\
    \ $i;\n  }\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

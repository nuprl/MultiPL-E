language: php
name: HumanEval_57_monotonic
results:
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    if (sizeof($l) == 1) {\n        return true;\n    }\n \
    \   $t = $l[0] < $l[1];\n    for ($i = 1; $i < sizeof($l); $i++) {\n        if\
    \ ($t != ($l[$i-1] < $l[$i])) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\n\nif (count($argv) != 2) {\n    exit('Please specify 1 input\
    \ file!' . PHP_EOL);\n}\n\n$file = $argv[1];\nif (!is_readable($file)) {\n   \
    \ exit('The file is not readable!' . PHP_EOL);\n}\n\n$lines = explode(PHP_EOL,\
    \ file_get_contents($file));\n$linecount = count($lines);\n\n$input = [];\nforeach\
    \ ($lines as $line) {\n    $input[] = explode(' ', $line);\n}\n\n$valid = 0;\n\
    foreach ($input as $l) {\n    if (monotonic($l)) {\n        $valid++;\n    }\n\
    }\n\necho \"Valid passphrase count: {$valid}.\" . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'Please specify 1 input file!

    '
  timestamp: 1659824145
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    if (count($l) <= 1) {\n        return true;\n    }\n  \
    \  $mono = [];\n    $signs = [];\n    for ($i = 0; $i < count($l); $i++) {\n \
    \       $mono[$i] = $l[$i] - $l[$i - 1];\n        $signs[$i] = $mono[$i] >= 0;\n\
    \    }\n    return count(array_unique($signs)) == 1;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key -1 in /tmp/tmpdwpkv9wd.php on line 16\n\n\
    Warning: Undefined array key -1 in /tmp/tmpdwpkv9wd.php on line 16\n\nWarning:\
    \ Undefined array key -1 in /tmp/tmpdwpkv9wd.php on line 16\n\nWarning: Undefined\
    \ array key -1 in /tmp/tmpdwpkv9wd.php on line 16\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpdwpkv9wd.php:30\nStack trace:\n#0 /tmp/tmpdwpkv9wd.php(37):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpdwpkv9wd.php on line 30\n"
  timestamp: 1659824145
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n\t$order = NULL;\n\t$last = NULL;\n\tforeach ($l as $v) {\n\
    \t\tif ($last != NULL) {\n\t\t\tif ($v > $last) {\n\t\t\t\tif ($order != NULL\
    \ && $order != 1)\n\t\t\t\t\treturn false;\n\t\t\t\t$order = 1;\n\t\t\t} else\
    \ if ($v < $last) {\n\t\t\t\tif ($order != NULL && $order != -1)\n\t\t\t\t\treturn\
    \ false;\n\t\t\t\t$order = -1;\n\t\t\t}\n\t\t}\n\t\t$last = $v;\n\t}\n\treturn\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824145
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $check = \"\";\n    foreach ($l as $i) {\n        if ($check\
    \ == \"increasing\") {\n            if ($i > $last) {\n                $last =\
    \ $i;\n            } else {\n                return false;\n            }\n  \
    \      } elseif ($check == \"decreasing\") {\n            if ($i < $last) {\n\
    \                $last = $i;\n            } else {\n                return false;\n\
    \            }\n        } else {\n            $last = $i;\n            if ($i\
    \ > $last) {\n                $check = \"increasing\";\n            } elseif ($i\
    \ < $last) {\n                $check = \"decreasing\";\n            }\n      \
    \  }\n    }\n    return true;\n}\necho monotonic(array(4, 1, 0, -10));\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplxuudn8m.php:43\n\
    Stack trace:\n#0 /tmp/tmplxuudn8m.php(51): test()\n#1 {main}\n  thrown in /tmp/tmplxuudn8m.php\
    \ on line 43\n"
  timestamp: 1659824145
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $result = true;\n    for ($i = 0; $i < count($l) - 1; $i++)\
    \ {\n        if ($l[$i] > $l[$i + 1]) {\n            $result = $result && ($l[$i]\
    \ - $l[$i + 1] >= 0);\n        } else {\n            $result = $result && ($l[$i\
    \ + 1] - $l[$i] >= 0);\n        }\n    }\n    return $result;\n}\n\nif (monotonic(array(1,\
    \ 2, 4, 20))) {\n    echo \"true\\n\";\n} else {\n    echo \"false\\n\";\n}\n\n\
    if (monotonic(array(1, 20, 4, 10))) {\n    echo \"true\\n\";\n} else {\n    echo\
    \ \"false\\n\";\n}\n\nif (monotonic(array(4, 1, 0, -10))) {\n    echo \"true\\\
    n\";\n} else {\n    echo \"false\\n\";\n}\nfunction candidate(...$args) {\n  \
    \  return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "true\ntrue\ntrue\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd1l6iqwp.php:45\n\
    Stack trace:\n#0 /tmp/tmpd1l6iqwp.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpd1l6iqwp.php\
    \ on line 45\n"
  timestamp: 1659824145
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $sign = null;\n    for ($i = 0; $i < count($l) - 1; $i++)\
    \ {\n        $sign2 = $l[$i + 1] - $l[$i];\n        if ($sign2 == 0) continue;\n\
    \        if ($sign === null) {\n            $sign = $sign2;\n        } else if\
    \ ($sign * $sign2 < 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824145
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n\tif(count($l) <= 1) return true;\n\tif($l[0] == $l[1]) return\
    \ monotonic(array_slice($l, 1));\n\t$diff = $l[0] - $l[1];\n\tfor($i = 1; $i <\
    \ count($l) - 1; $i++) {\n\t\tif($diff != $l[$i] - $l[$i + 1]) return false;\n\
    \t}\n\treturn true;\n}\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx19cdhud.php:23\n\
    Stack trace:\n#0 /tmp/tmpx19cdhud.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx19cdhud.php\
    \ on line 23\n"
  timestamp: 1659824145
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $increasing = NULL;\n    foreach ($l as $i => $v) {\n \
    \       if ($i > 0) {\n            if (is_null($increasing)) {\n             \
    \   $increasing = $v > $l[$i - 1];\n            } else {\n                if (($increasing\
    \ && $v < $l[$i - 1]) || (!$increasing && $v > $l[$i - 1])) {\n              \
    \      return false;\n                }\n            }\n        }\n    }\n   \
    \ return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824145
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $isDecreasing = true;\n  $isIncreasing = true;\n  $curr =\
    \ NULL;\n  foreach ($l as $i) {\n    if ($curr === NULL) {\n      $curr = $i;\n\
    \      continue;\n    }\n    if ($curr > $i) {\n      $isIncreasing = false;\n\
    \    }\n    if ($curr < $i) {\n      $isDecreasing = false;\n    }\n    if (!$isIncreasing\
    \ && !$isDecreasing) {\n      return false;\n    }\n    $curr = $i;\n  }\n  return\
    \ true;\n}\n\nvar_dump(monotonic(array(1, 2, 4, 20)));\nvar_dump(monotonic(array(1,\
    \ 20, 4, 10)));\nvar_dump(monotonic(array(4, 1, 0, -10)));\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'bool(true)

    bool(false)

    bool(true)

    '
  timestamp: 1659824145
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    if (is_array($l)) {\n        $len = count($l);\n      \
    \  $k = 0;\n        for ($i = 0; $i < $len - 1; $i++) {\n            if ($l[$i\
    \ + 1] > $l[$i]) {\n                $k++;\n            }\n        }\n        for\
    \ ($i = 0; $i < $len - 1; $i++) {\n            if ($l[$i + 1] < $l[$i]) {\n  \
    \              $k++;\n            }\n        }\n        if ($k === 0) {\n    \
    \        return true;\n        } else {\n            return false;\n        }\n\
    \    } else {\n        return false;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiwqcdglo.php:38\n\
    Stack trace:\n#0 /tmp/tmpiwqcdglo.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpiwqcdglo.php\
    \ on line 38\n"
  timestamp: 1659824145
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $order = null;\n  for ($i = 0; $i < count($l) - 1; $i++)\
    \ {\n    if ($l[$i] < $l[$i + 1]) {\n      if ($order != null && $order != -1)\
    \ {\n        return false;\n      }\n      $order = 1;\n    } else if ($l[$i]\
    \ > $l[$i + 1]) {\n      if ($order != null && $order != 1) {\n        return\
    \ false;\n      }\n      $order = -1;\n    }\n  }\n  return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp19uhakyt.php:32\n\
    Stack trace:\n#0 /tmp/tmp19uhakyt.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp19uhakyt.php\
    \ on line 32\n"
  timestamp: 1659824145
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    return checkOrder($l, function($a, $b) {\n        return\
    \ $a < $b;\n    }) || checkOrder($l, function($a, $b) {\n        return $a > $b;\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function checkOrder()\
    \ in /tmp/tmpua1isr3j.php:10\nStack trace:\n#0 /tmp/tmpua1isr3j.php(18): monotonic(Array)\n\
    #1 /tmp/tmpua1isr3j.php(22): candidate(Array)\n#2 /tmp/tmpua1isr3j.php(32): test()\n\
    #3 {main}\n  thrown in /tmp/tmpua1isr3j.php on line 10\n"
  timestamp: 1659824145
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n\tfor ($i = 1; $i < count($l); $i++) {\n\t\tif (($l[$i] - $l[$i\
    \ - 1]) > 0) {\n\t\t\t$sign = 1;\n\t\t\tbreak;\n\t\t} else if (($l[$i] - $l[$i\
    \ - 1]) < 0) {\n\t\t\t$sign = -1;\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor ($i = 1; $i\
    \ < count($l); $i++) {\n\t\tif ($sign > 0 && ($l[$i] - $l[$i - 1]) < 0) {\n\t\t\
    \treturn false;\n\t\t} else if ($sign < 0 && ($l[$i] - $l[$i - 1]) > 0) {\n\t\t\
    \treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined variable $sign in /tmp/tmpq5r3i6dg.php on line 20


    Warning: Undefined variable $sign in /tmp/tmpq5r3i6dg.php on line 22


    Warning: Undefined variable $sign in /tmp/tmpq5r3i6dg.php on line 20


    Warning: Undefined variable $sign in /tmp/tmpq5r3i6dg.php on line 22


    Warning: Undefined variable $sign in /tmp/tmpq5r3i6dg.php on line 20


    Warning: Undefined variable $sign in /tmp/tmpq5r3i6dg.php on line 22

    '
  timestamp: 1659824145
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $a = true;\n  $b = true;\n  for ($i = 1; $i < count($l);\
    \ $i++) {\n    if ($l[$i] < $l[$i - 1]) {\n      $a = false;\n    }\n    if ($l[$i]\
    \ > $l[$i - 1]) {\n      $b = false;\n    }\n  }\n  return $a || $b;\n}\n\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824145
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  if (count($l) <= 1) return true;\n  return array_reduce(\n\
    \    array_slice($l, 1),\n    function($acc, $elem) use ($l) {\n      return $acc\
    \ && $elem === (array_values($l)[0] + count($l) - 1) ||\n        $elem === (array_values($l)[0]\
    \ - count($l) + 1);\n    },\n    true\n  );\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_wonp5l2.php:26\n\
    Stack trace:\n#0 /tmp/tmp_wonp5l2.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp_wonp5l2.php\
    \ on line 26\n"
  timestamp: 1659824145
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $increasing = null;\n    $last_el = null;\n    for ($i\
    \ = 0; $i < count($l); $i++) {\n        if ($i == 0) {\n            $last_el =\
    \ $l[$i];\n            continue;\n        }\n        if ($increasing == null)\
    \ {\n            if ($l[$i] > $last_el) {\n                $increasing = true;\n\
    \            } elseif ($l[$i] < $last_el) {\n                $increasing = false;\n\
    \            }\n        } else {\n            if ($increasing) {\n           \
    \     if ($l[$i] < $last_el) {\n                    return false;\n          \
    \      }\n            } else {\n                if ($l[$i] > $last_el) {\n   \
    \                 return false;\n                }\n            }\n        }\n\
    \        $last_el = $l[$i];\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824145
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $n = count($l);\n  if($n <= 1) {\n    return true;\n  }\n\
    \  $dec = $l[0] > $l[1];\n  for($i = 1; $i < $n - 1; $i++) {\n    if($dec) {\n\
    \      if($l[$i] < $l[$i + 1]) {\n        return false;\n      }\n    } else {\n\
    \      if($l[$i] > $l[$i + 1]) {\n        return false;\n      }\n    }\n  }\n\
    \  return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824145
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $isIncreasing = false;\n    $isDecreasing = false;\n  \
    \  for ($i = 0; $i < sizeof($l) - 1; $i++) {\n        if ($l[$i] < $l[$i + 1])\
    \ {\n            $isIncreasing = true;\n        } else if ($l[$i] > $l[$i + 1])\
    \ {\n            $isDecreasing = true;\n        }\n    }\n    return ($isIncreasing\
    \ && !$isDecreasing) || (!$isIncreasing && $isDecreasing);\n}\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2est2vxw.php:33\n\
    Stack trace:\n#0 /tmp/tmp2est2vxw.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp2est2vxw.php\
    \ on line 33\n"
  timestamp: 1659824145
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $inc = $dec = true;\n    $n = count($l);\n    for ($i =\
    \ 1; $i < $n; $i++) {\n        if ($l[$i] > $l[$i - 1]) {\n            $dec =\
    \ false;\n        } else if ($l[$i] < $l[$i - 1]) {\n            $inc = false;\n\
    \        }\n    }\n    return $inc || $dec;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824145
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n\t$v = $l[0];\n\t$i = 1;\n\t$inc = 0;\n\t$dec = 0;\n\twhile\
    \ ($v == $l[$i]) {\n\t\t$i++;\n\t}\n\tif ($v < $l[$i]) {\n\t\t$inc = 1;\n\t} else\
    \ {\n\t\t$dec = 1;\n\t}\n\twhile ($i < count($l)) {\n\t\tif ($inc) {\n\t\t\tif\
    \ ($l[$i] >= $v) {\n\t\t\t\t$v = $l[$i];\n\t\t\t} else {\n\t\t\t\treturn false;\n\
    \t\t\t}\n\t\t} else {\n\t\t\tif ($l[$i] <= $v) {\n\t\t\t\t$v = $l[$i];\n\t\t\t\
    } else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\t$i++;\n\t}\n\treturn true;\n\
    }\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 4 in /tmp/tmps0eq173n.php on line 14


    Warning: Undefined array key 4 in /tmp/tmps0eq173n.php on line 17

    '
  timestamp: 1659824145

language: php
name: HumanEval_57_monotonic
results:
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    if (sizeof($l) == 1) {\n        return true;\n    }\n \
    \   $t = $l[0] < $l[1];\n    for ($i = 1; $i < sizeof($l); $i++) {\n        if\
    \ ($t != ($l[$i-1] < $l[$i])) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\n\nif (count($argv) != 2) {\n    exit('Please specify 1 input\
    \ file!' . PHP_EOL);\n}\n\n$file = $argv[1];\nif (!is_readable($file)) {\n   \
    \ exit('The file is not readable!' . PHP_EOL);\n}\n\n$lines = explode(PHP_EOL,\
    \ file_get_contents($file));\n$linecount = count($lines);\n\n$input = [];\nforeach\
    \ ($lines as $line) {\n    $input[] = explode(' ', $line);\n}\n\n$valid = 0;\n\
    foreach ($input as $l) {\n    if (monotonic($l)) {\n        $valid++;\n    }\n\
    }\n\necho \"Valid passphrase count: {$valid}.\" . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'Please specify 1 input file!

    '
  timestamp: 1659824145
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    if (count($l) <= 1) {\n        return true;\n    }\n  \
    \  $mono = [];\n    $signs = [];\n    for ($i = 0; $i < count($l); $i++) {\n \
    \       $mono[$i] = $l[$i] - $l[$i - 1];\n        $signs[$i] = $mono[$i] >= 0;\n\
    \    }\n    return count(array_unique($signs)) == 1;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key -1 in /tmp/tmpdwpkv9wd.php on line 16\n\n\
    Warning: Undefined array key -1 in /tmp/tmpdwpkv9wd.php on line 16\n\nWarning:\
    \ Undefined array key -1 in /tmp/tmpdwpkv9wd.php on line 16\n\nWarning: Undefined\
    \ array key -1 in /tmp/tmpdwpkv9wd.php on line 16\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpdwpkv9wd.php:30\nStack trace:\n#0 /tmp/tmpdwpkv9wd.php(37):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpdwpkv9wd.php on line 30\n"
  timestamp: 1659824145
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n\t$order = NULL;\n\t$last = NULL;\n\tforeach ($l as $v) {\n\
    \t\tif ($last != NULL) {\n\t\t\tif ($v > $last) {\n\t\t\t\tif ($order != NULL\
    \ && $order != 1)\n\t\t\t\t\treturn false;\n\t\t\t\t$order = 1;\n\t\t\t} else\
    \ if ($v < $last) {\n\t\t\t\tif ($order != NULL && $order != -1)\n\t\t\t\t\treturn\
    \ false;\n\t\t\t\t$order = -1;\n\t\t\t}\n\t\t}\n\t\t$last = $v;\n\t}\n\treturn\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824145
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $check = \"\";\n    foreach ($l as $i) {\n        if ($check\
    \ == \"increasing\") {\n            if ($i > $last) {\n                $last =\
    \ $i;\n            } else {\n                return false;\n            }\n  \
    \      } elseif ($check == \"decreasing\") {\n            if ($i < $last) {\n\
    \                $last = $i;\n            } else {\n                return false;\n\
    \            }\n        } else {\n            $last = $i;\n            if ($i\
    \ > $last) {\n                $check = \"increasing\";\n            } elseif ($i\
    \ < $last) {\n                $check = \"decreasing\";\n            }\n      \
    \  }\n    }\n    return true;\n}\necho monotonic(array(4, 1, 0, -10));\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplxuudn8m.php:43\n\
    Stack trace:\n#0 /tmp/tmplxuudn8m.php(51): test()\n#1 {main}\n  thrown in /tmp/tmplxuudn8m.php\
    \ on line 43\n"
  timestamp: 1659824145
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $result = true;\n    for ($i = 0; $i < count($l) - 1; $i++)\
    \ {\n        if ($l[$i] > $l[$i + 1]) {\n            $result = $result && ($l[$i]\
    \ - $l[$i + 1] >= 0);\n        } else {\n            $result = $result && ($l[$i\
    \ + 1] - $l[$i] >= 0);\n        }\n    }\n    return $result;\n}\n\nif (monotonic(array(1,\
    \ 2, 4, 20))) {\n    echo \"true\\n\";\n} else {\n    echo \"false\\n\";\n}\n\n\
    if (monotonic(array(1, 20, 4, 10))) {\n    echo \"true\\n\";\n} else {\n    echo\
    \ \"false\\n\";\n}\n\nif (monotonic(array(4, 1, 0, -10))) {\n    echo \"true\\\
    n\";\n} else {\n    echo \"false\\n\";\n}\nfunction candidate(...$args) {\n  \
    \  return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "true\ntrue\ntrue\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd1l6iqwp.php:45\n\
    Stack trace:\n#0 /tmp/tmpd1l6iqwp.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpd1l6iqwp.php\
    \ on line 45\n"
  timestamp: 1659824145
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $sign = null;\n    for ($i = 0; $i < count($l) - 1; $i++)\
    \ {\n        $sign2 = $l[$i + 1] - $l[$i];\n        if ($sign2 == 0) continue;\n\
    \        if ($sign === null) {\n            $sign = $sign2;\n        } else if\
    \ ($sign * $sign2 < 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824145
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n\tif(count($l) <= 1) return true;\n\tif($l[0] == $l[1]) return\
    \ monotonic(array_slice($l, 1));\n\t$diff = $l[0] - $l[1];\n\tfor($i = 1; $i <\
    \ count($l) - 1; $i++) {\n\t\tif($diff != $l[$i] - $l[$i + 1]) return false;\n\
    \t}\n\treturn true;\n}\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx19cdhud.php:23\n\
    Stack trace:\n#0 /tmp/tmpx19cdhud.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx19cdhud.php\
    \ on line 23\n"
  timestamp: 1659824145
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $increasing = NULL;\n    foreach ($l as $i => $v) {\n \
    \       if ($i > 0) {\n            if (is_null($increasing)) {\n             \
    \   $increasing = $v > $l[$i - 1];\n            } else {\n                if (($increasing\
    \ && $v < $l[$i - 1]) || (!$increasing && $v > $l[$i - 1])) {\n              \
    \      return false;\n                }\n            }\n        }\n    }\n   \
    \ return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824145
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $isDecreasing = true;\n  $isIncreasing = true;\n  $curr =\
    \ NULL;\n  foreach ($l as $i) {\n    if ($curr === NULL) {\n      $curr = $i;\n\
    \      continue;\n    }\n    if ($curr > $i) {\n      $isIncreasing = false;\n\
    \    }\n    if ($curr < $i) {\n      $isDecreasing = false;\n    }\n    if (!$isIncreasing\
    \ && !$isDecreasing) {\n      return false;\n    }\n    $curr = $i;\n  }\n  return\
    \ true;\n}\n\nvar_dump(monotonic(array(1, 2, 4, 20)));\nvar_dump(monotonic(array(1,\
    \ 20, 4, 10)));\nvar_dump(monotonic(array(4, 1, 0, -10)));\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'bool(true)

    bool(false)

    bool(true)

    '
  timestamp: 1659824145
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    if (is_array($l)) {\n        $len = count($l);\n      \
    \  $k = 0;\n        for ($i = 0; $i < $len - 1; $i++) {\n            if ($l[$i\
    \ + 1] > $l[$i]) {\n                $k++;\n            }\n        }\n        for\
    \ ($i = 0; $i < $len - 1; $i++) {\n            if ($l[$i + 1] < $l[$i]) {\n  \
    \              $k++;\n            }\n        }\n        if ($k === 0) {\n    \
    \        return true;\n        } else {\n            return false;\n        }\n\
    \    } else {\n        return false;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiwqcdglo.php:38\n\
    Stack trace:\n#0 /tmp/tmpiwqcdglo.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpiwqcdglo.php\
    \ on line 38\n"
  timestamp: 1659824145
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $order = null;\n  for ($i = 0; $i < count($l) - 1; $i++)\
    \ {\n    if ($l[$i] < $l[$i + 1]) {\n      if ($order != null && $order != -1)\
    \ {\n        return false;\n      }\n      $order = 1;\n    } else if ($l[$i]\
    \ > $l[$i + 1]) {\n      if ($order != null && $order != 1) {\n        return\
    \ false;\n      }\n      $order = -1;\n    }\n  }\n  return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp19uhakyt.php:32\n\
    Stack trace:\n#0 /tmp/tmp19uhakyt.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp19uhakyt.php\
    \ on line 32\n"
  timestamp: 1659824145
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    return checkOrder($l, function($a, $b) {\n        return\
    \ $a < $b;\n    }) || checkOrder($l, function($a, $b) {\n        return $a > $b;\n\
    \    });\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function checkOrder()\
    \ in /tmp/tmpua1isr3j.php:10\nStack trace:\n#0 /tmp/tmpua1isr3j.php(18): monotonic(Array)\n\
    #1 /tmp/tmpua1isr3j.php(22): candidate(Array)\n#2 /tmp/tmpua1isr3j.php(32): test()\n\
    #3 {main}\n  thrown in /tmp/tmpua1isr3j.php on line 10\n"
  timestamp: 1659824145
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n\tfor ($i = 1; $i < count($l); $i++) {\n\t\tif (($l[$i] - $l[$i\
    \ - 1]) > 0) {\n\t\t\t$sign = 1;\n\t\t\tbreak;\n\t\t} else if (($l[$i] - $l[$i\
    \ - 1]) < 0) {\n\t\t\t$sign = -1;\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor ($i = 1; $i\
    \ < count($l); $i++) {\n\t\tif ($sign > 0 && ($l[$i] - $l[$i - 1]) < 0) {\n\t\t\
    \treturn false;\n\t\t} else if ($sign < 0 && ($l[$i] - $l[$i - 1]) > 0) {\n\t\t\
    \treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined variable $sign in /tmp/tmpq5r3i6dg.php on line 20


    Warning: Undefined variable $sign in /tmp/tmpq5r3i6dg.php on line 22


    Warning: Undefined variable $sign in /tmp/tmpq5r3i6dg.php on line 20


    Warning: Undefined variable $sign in /tmp/tmpq5r3i6dg.php on line 22


    Warning: Undefined variable $sign in /tmp/tmpq5r3i6dg.php on line 20


    Warning: Undefined variable $sign in /tmp/tmpq5r3i6dg.php on line 22

    '
  timestamp: 1659824145
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $a = true;\n  $b = true;\n  for ($i = 1; $i < count($l);\
    \ $i++) {\n    if ($l[$i] < $l[$i - 1]) {\n      $a = false;\n    }\n    if ($l[$i]\
    \ > $l[$i - 1]) {\n      $b = false;\n    }\n  }\n  return $a || $b;\n}\n\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824145
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  if (count($l) <= 1) return true;\n  return array_reduce(\n\
    \    array_slice($l, 1),\n    function($acc, $elem) use ($l) {\n      return $acc\
    \ && $elem === (array_values($l)[0] + count($l) - 1) ||\n        $elem === (array_values($l)[0]\
    \ - count($l) + 1);\n    },\n    true\n  );\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_wonp5l2.php:26\n\
    Stack trace:\n#0 /tmp/tmp_wonp5l2.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp_wonp5l2.php\
    \ on line 26\n"
  timestamp: 1659824145
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $increasing = null;\n    $last_el = null;\n    for ($i\
    \ = 0; $i < count($l); $i++) {\n        if ($i == 0) {\n            $last_el =\
    \ $l[$i];\n            continue;\n        }\n        if ($increasing == null)\
    \ {\n            if ($l[$i] > $last_el) {\n                $increasing = true;\n\
    \            } elseif ($l[$i] < $last_el) {\n                $increasing = false;\n\
    \            }\n        } else {\n            if ($increasing) {\n           \
    \     if ($l[$i] < $last_el) {\n                    return false;\n          \
    \      }\n            } else {\n                if ($l[$i] > $last_el) {\n   \
    \                 return false;\n                }\n            }\n        }\n\
    \        $last_el = $l[$i];\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824145
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $n = count($l);\n  if($n <= 1) {\n    return true;\n  }\n\
    \  $dec = $l[0] > $l[1];\n  for($i = 1; $i < $n - 1; $i++) {\n    if($dec) {\n\
    \      if($l[$i] < $l[$i + 1]) {\n        return false;\n      }\n    } else {\n\
    \      if($l[$i] > $l[$i + 1]) {\n        return false;\n      }\n    }\n  }\n\
    \  return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824145
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $isIncreasing = false;\n    $isDecreasing = false;\n  \
    \  for ($i = 0; $i < sizeof($l) - 1; $i++) {\n        if ($l[$i] < $l[$i + 1])\
    \ {\n            $isIncreasing = true;\n        } else if ($l[$i] > $l[$i + 1])\
    \ {\n            $isDecreasing = true;\n        }\n    }\n    return ($isIncreasing\
    \ && !$isDecreasing) || (!$isIncreasing && $isDecreasing);\n}\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2est2vxw.php:33\n\
    Stack trace:\n#0 /tmp/tmp2est2vxw.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp2est2vxw.php\
    \ on line 33\n"
  timestamp: 1659824145
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $inc = $dec = true;\n    $n = count($l);\n    for ($i =\
    \ 1; $i < $n; $i++) {\n        if ($l[$i] > $l[$i - 1]) {\n            $dec =\
    \ false;\n        } else if ($l[$i] < $l[$i - 1]) {\n            $inc = false;\n\
    \        }\n    }\n    return $inc || $dec;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824145
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n\t$v = $l[0];\n\t$i = 1;\n\t$inc = 0;\n\t$dec = 0;\n\twhile\
    \ ($v == $l[$i]) {\n\t\t$i++;\n\t}\n\tif ($v < $l[$i]) {\n\t\t$inc = 1;\n\t} else\
    \ {\n\t\t$dec = 1;\n\t}\n\twhile ($i < count($l)) {\n\t\tif ($inc) {\n\t\t\tif\
    \ ($l[$i] >= $v) {\n\t\t\t\t$v = $l[$i];\n\t\t\t} else {\n\t\t\t\treturn false;\n\
    \t\t\t}\n\t\t} else {\n\t\t\tif ($l[$i] <= $v) {\n\t\t\t\t$v = $l[$i];\n\t\t\t\
    } else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\t$i++;\n\t}\n\treturn true;\n\
    }\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 4 in /tmp/tmps0eq173n.php on line 14


    Warning: Undefined array key 4 in /tmp/tmps0eq173n.php on line 17

    '
  timestamp: 1659824145
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n\tif (!$l) {\n\t\treturn false;\n\t}\n\t$direct = null;\n\t\
    $previous = null;\n\tforeach ($l as $k => $i) {\n\t\tif ($previous !== null) {\n\
    \t\t\tif ($direct === null) {\n\t\t\t\t$direct = $i >= $previous;\n\t\t\t} else\
    \ {\n\t\t\t\tif ($direct !== ($i >= $previous)) {\n\t\t\t\t\treturn false;\n\t\
    \t\t\t}\n\t\t\t}\n\t\t}\n\t\t$previous = $i;\n\t}\n\treturn true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx7gvvtxd.php:39\n\
    Stack trace:\n#0 /tmp/tmpx7gvvtxd.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpx7gvvtxd.php\
    \ on line 39\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n\t$s = $l[0];\n\t$is_inc = true;\n\t$is_dec = true;\n\tfor\
    \ ($i = 1; $i < count($l); $i++) {\n\t\tif ($l[$i] > $s) {\n\t\t\t$is_dec = false;\n\
    \t\t} else if ($l[$i] < $s) {\n\t\t\t$is_inc = false;\n\t\t}\n\t\t$s = $l[$i];\n\
    \t}\n\treturn $is_inc || $is_dec;\n}\n\nif (__FILE__ == $_SERVER['SCRIPT_FILENAME'])\
    \ {\n\tassert(monotonic(array(1, 2, 4, 20)));\n\tassert(!monotonic(array(1, 20,\
    \ 4, 10)));\n\tassert(monotonic(array(4, 1, 0, -10)));\n}\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    if (count($l) < 2) {\n        return false;\n    }\n\n\
    \    $is_increasing = ($l[0] < $l[1]);\n    for ($i = 1; $i < count($l); $i++)\
    \ {\n        if (($l[$i] < $l[$i - 1]) !== $is_increasing) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nprint_r(monotonic([1, 2, 4,\
    \ 20]));\nprint_r(monotonic([1, 20, 4, 10]));\nprint_r(monotonic([4, 1, 0, -10]));\n\
    function candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphm91wehk.php:31\n\
    Stack trace:\n#0 /tmp/tmphm91wehk.php(41): test()\n#1 {main}\n  thrown in /tmp/tmphm91wehk.php\
    \ on line 31\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $d = 0;\n  for ($i = 1; $i < count($l); $i++) {\n    $d =\
    \ $l[$i] - $l[$i - 1];\n    if ($d < 0) {\n      break;\n    }\n  }\n  $monotonic\
    \ = true;\n  for ($i++; $i < count($l); $i++) {\n    if ($d * ($l[$i] - $l[$i\
    \ - 1]) < 0) {\n      $monotonic = false;\n      break;\n    }\n  }\n  return\
    \ $monotonic;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $distinct = function($val, $key) use (&$isDistinct) {\n \
    \   if (in_array($val, $isDistinct)) {\n      return false;\n    }\n    $isDistinct[]\
    \ = $val;\n    return true;\n  };\n  $isDistinct = array();\n  return count(array_filter($l,\
    \ $distinct)) == count($l);\n}\n\nvar_dump(monotonic(array(1, 2, 4, 20)));\nvar_dump(monotonic(array(1,\
    \ 20, 4, 10)));\nvar_dump(monotonic(array(4, 1, 0, -10)));\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught ArgumentCountError: Too few arguments to function\
    \ {closure}(), 1 passed and exactly 2 expected in /tmp/tmpfy481mxi.php:10\nStack\
    \ trace:\n#0 [internal function]: {closure}(1)\n#1 /tmp/tmpfy481mxi.php(18): array_filter(Array,\
    \ Object(Closure))\n#2 /tmp/tmpfy481mxi.php(21): monotonic(Array)\n#3 {main}\n\
    \  thrown in /tmp/tmpfy481mxi.php on line 10\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $state = 0;\n    $b = $l[0];\n    foreach ($l as $v) {\n\
    \        if ($state == 0) {\n            if ($v > $b) {\n                $state\
    \ = 1;\n            } else if ($v < $b) {\n                $state = -1;\n    \
    \        }\n        } else if ($state == 1) {\n            if ($v < $b) {\n  \
    \              return false;\n            }\n        } else if ($state == -1)\
    \ {\n            if ($v > $b) {\n                return false;\n            }\n\
    \        }\n        $b = $v;\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $l = array_values($l);\n  $delta = $l[1] - $l[0];\n  for\
    \ ($i = 2; $i < count($l); $i++) {\n    if (($l[$i] - $l[$i - 1]) * $delta < 0)\
    \ {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  return true;\n}\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbtaa2xb1.php:19\n\
    Stack trace:\n#0 /tmp/tmpbtaa2xb1.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpbtaa2xb1.php\
    \ on line 19\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $c = count($l);\n    if($c <= 1) {\n        return true;\n\
    \    }\n    $increase = $l[1] > $l[0];\n    for($i = 2; $i < $c; $i++) {\n   \
    \     if(($increase && $l[$i] < $l[$i - 1]) || (!$increase && $l[$i] > $l[$i -\
    \ 1])) {\n            return false;\n        }\n    }\n    return true;\n}\n\n\
    function candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n\t// check if increasing or decreasing\n\t$inc = true; // increasing?\n\
    \t$dec = true; // decreasing?\n\tfor ($i = 1; $i < count($l); $i++) {\n\t\t$inc\
    \ = $inc && ($l[$i - 1] <= $l[$i]);\n\t\t$dec = $dec && ($l[$i - 1] >= $l[$i]);\n\
    \t}\n\treturn $inc || $dec;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n\t$direction = 0;\n\t$last = 0;\n\tforeach ($l as $i) {\n\t\
    \tif (!$direction) {\n\t\t\tif ($i < $last) {\n\t\t\t\t$direction = -1;\n\t\t\t\
    } else if ($i > $last) {\n\t\t\t\t$direction = 1;\n\t\t\t}\n\t\t} else if ($direction\
    \ == -1 && $i > $last) {\n\t\t\treturn false;\n\t\t} else if ($direction == 1\
    \ && $i < $last) {\n\t\t\treturn false;\n\t\t}\n\t\t$last = $i;\n\t}\n\treturn\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpls14_z57.php:37\n\
    Stack trace:\n#0 /tmp/tmpls14_z57.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpls14_z57.php\
    \ on line 37\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    if(is_array($l)) {\n        $up = true;\n        $down\
    \ = true;\n        for($i = 1; $i < count($l); $i++) {\n            if($l[$i]\
    \ < $l[$i - 1])\n                $up = false;\n            if($l[$i] > $l[$i -\
    \ 1])\n                $down = false;\n        }\n        return $up || $down;\n\
    \    }\n    return false;\n}\n\necho json_encode(monotonic(array(1, 2, 4, 20)))\
    \ . \"\\n\";\necho json_encode(monotonic(array(1, 20, 4, 10))) . \"\\n\";\necho\
    \ json_encode(monotonic(array(4, 1, 0, -10))) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'true

    false

    true

    '
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $n = count($l);\n    $decreasing = false;\n    $increasing\
    \ = false;\n    for ($i = 0; $i < $n - 1; $i++) {\n        if ($l[$i] < $l[$i\
    \ + 1])\n            $increasing = true;\n        if ($l[$i] > $l[$i + 1])\n \
    \           $decreasing = true;\n    }\n    return $increasing && !$decreasing\
    \ || $decreasing && !$increasing;\n}\n\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7p7sosv3.php:34\n\
    Stack trace:\n#0 /tmp/tmp7p7sosv3.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp7p7sosv3.php\
    \ on line 34\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $order = 'increase';\n    for ($i = 0; $i < count($l) -\
    \ 1; $i++) {\n        if ($l[$i] == $l[$i + 1]) {\n            continue;\n   \
    \     } elseif ($l[$i] < $l[$i + 1]) {\n            if ($order == 'decrease')\
    \ {\n                return false;\n            }\n        } else {\n        \
    \    if ($order == 'increase') {\n                $order = 'decrease';\n     \
    \       }\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $mono = false;\n    $diff = $l[1] - $l[0];\n    for ($i\
    \ = 2; $i < count($l); $i++) {\n        if ($diff > 0) {\n            if ($l[$i]\
    \ < $l[$i - 1]) {\n                return false;\n            }\n        } else\
    \ if ($diff < 0) {\n            if ($l[$i] > $l[$i - 1]) {\n                return\
    \ false;\n            }\n        } else {\n            return false;\n       \
    \ }\n    }\n    return true;\n}\n\n$l = array(1, 2, 4, 20);\nassert(monotonic($l)\
    \ == true);\n$l = array(1, 20, 4, 10);\nassert(monotonic($l) == false);\n$l =\
    \ array(4, 1, 0, -10);\nassert(monotonic($l) == true);\n\necho 'done';\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "done\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9k_7k91i.php:48\n\
    Stack trace:\n#0 /tmp/tmp9k_7k91i.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp9k_7k91i.php\
    \ on line 48\n"
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $sign = null;\n    for ($i = 0; $i < count($l) - 1; $i++)\
    \ {\n        $s = $l[$i] <=> $l[$i + 1];\n        if ($sign == null) {\n     \
    \       $sign = $s;\n        } else if ($sign != $s) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n   \
    \ return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp43ovxghh.php:31\n\
    Stack trace:\n#0 /tmp/tmp43ovxghh.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp43ovxghh.php\
    \ on line 31\n"
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n\t$flag = false;\n\tfor ($i = 0; $i < count($l) - 1; $i++)\
    \ {\n\t\tif (abs($l[$i] - $l[$i + 1]) == 1) {\n\t\t\tif ($flag) {\n\t\t\t\tif\
    \ ($flag != sign($l[$i] - $l[$i + 1])) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\
    \t\t\t} else {\n\t\t\t\t$flag = sign($l[$i] - $l[$i + 1]);\n\t\t\t}\n\t\t} else\
    \ {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function sign() in /tmp/tmpof34cvnl.php:18\n\
    Stack trace:\n#0 /tmp/tmpof34cvnl.php(28): monotonic(Array)\n#1 /tmp/tmpof34cvnl.php(32):\
    \ candidate(Array)\n#2 /tmp/tmpof34cvnl.php(42): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmpof34cvnl.php on line 18\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n\t$increasing = $decreasing = true;\n\t$current = $l[0];\n\t\
    foreach ($l as $i) {\n\t\tif ($i > $current) {\n\t\t\t$decreasing = false;\n\t\
    \t} else if ($i < $current) {\n\t\t\t$increasing = false;\n\t\t}\n\t\t$current\
    \ = $i;\n\t}\n\treturn $increasing || $decreasing;\n}\n\necho monotonic(array(1,\
    \ 2, 4, 20)) . \"\\n\";\necho monotonic(array(1, 20, 4, 10)) . \"\\n\";\necho\
    \ monotonic(array(4, 1, 0, -10)) . \"\\n\";\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    1

    '
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n\t$l = array_values($l);\n\t$c = count($l);\n\tif ($c < 2)\
    \ {\n\t\treturn true;\n\t}\n\t$first = $l[0];\n\t$last = $l[$c - 1];\n\tif ($first\
    \ == $last) {\n\t\tfor ($i = 1; $i < $c; $i++) {\n\t\t\tif ($l[$i] != $first)\
    \ {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\t$diff = $last\
    \ - $first;\n\tif ($diff > 0) {\n\t\tfor ($i = 1; $i < $c; $i++) {\n\t\t\tif ($l[$i]\
    \ - $l[$i - 1] <= 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t} else {\n\t\t\
    for ($i = 1; $i < $c; $i++) {\n\t\t\tif ($l[$i] - $l[$i - 1] >= 0) {\n\t\t\t\t\
    return false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\n$test1 = array(1, 2,\
    \ 4, 20);\n$test2 = array(1, 20, 4, 10);\n$test3 = array(4, 1, 0, -10);\n\necho\
    \ \"test 1: \" . (monotonic($test1) ? \"true\" : \"false\") . \"\\n\";\necho \"\
    test 2: \" . (monotonic($test2) ? \"true\" : \"false\") . \"\\n\";\necho \"test\
    \ 3: \" . (monotonic($test3) ? \"true\" : \"false\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "test 1: true\ntest 2: false\ntest 3: true\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpxqhp4t23.php:58\nStack trace:\n#0 /tmp/tmpxqhp4t23.php(64):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpxqhp4t23.php on line 58\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n\t$is_increasing = true;\n\t$is_decreasing = true;\n\t$p =\
    \ $l[0];\n\tforeach ($l as $x) {\n\t\tif ($x < $p) {\n\t\t\t$is_increasing = false;\n\
    \t\t}\n\t\tif ($x > $p) {\n\t\t\t$is_decreasing = false;\n\t\t}\n\t\t$p = $x;\n\
    \t}\n\treturn $is_increasing || $is_decreasing;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $direction = null;\n  for ($i = 0; $i < count($l) - 1; $i++)\
    \ {\n    if ($l[$i + 1] - $l[$i] < 0) {\n      if ($direction == null) {\n   \
    \     $direction = 'down';\n      } else if ($direction == 'up') {\n        return\
    \ false;\n      }\n    } else if ($l[$i + 1] - $l[$i] > 0) {\n      if ($direction\
    \ == null) {\n        $direction = 'up';\n      } else if ($direction == 'down')\
    \ {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nassert_options(ASSERT_BAIL,\
    \ 1);\nassert(monotonic(array(1, 2, 4, 20)));\nassert(monotonic(array(4, 1, 0,\
    \ -10)));\nassert(!monotonic(array(1, 20, 4, 10)));\nassert(!monotonic(array(1,\
    \ 1, 1, 1)));\nassert(!monotonic(array(1, 2, 4, 4)));\nassert(!monotonic(array(1,\
    \ 2, 4, 20, 19)));\nassert(!monotonic(array(1, 2, 4, 20, 19, 1)));\n\necho \"\
    All test passed. monotonic is working\\n\";\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught AssertionError: assert(!monotonic([1, 1, 1, 1]))\
    \ in /tmp/tmps6sea7y4.php:33\nStack trace:\n#0 /tmp/tmps6sea7y4.php(33): assert(false,\
    \ 'assert(!monoton...')\n#1 {main}\n  thrown in /tmp/tmps6sea7y4.php on line 33\n"
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  if (count($l) <= 1) {\n    return true;\n  }\n  $dir = '-'\
    \ ; // xor of -1 and 1\n  for ($i = 1; $i < count($l); $i++) {\n    $dir = $dir^($l[$i-1]\
    \ - $l[$i])/abs($l[$i-1] - $l[$i]);\n  }\n  return $dir > 0;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: Unsupported operand types: string ^\
    \ int in /tmp/tmpartl_488.php:15\nStack trace:\n#0 /tmp/tmpartl_488.php(21): monotonic(Array)\n\
    #1 /tmp/tmpartl_488.php(25): candidate(Array)\n#2 /tmp/tmpartl_488.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmpartl_488.php on line 15\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n\tif (count($l) <= 1) return true;\n\t$diff = $l[1] - $l[0];\n\
    \tfor ($i = 2; $i < count($l); $i++) {\n\t\tif ($diff * ($l[$i] - $l[$i - 1])\
    \ < 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  if (count($l) <= 1) {\n    return true;\n  }\n  $direction\
    \ = 0;\n  for ($i = 1; $i < count($l); $i++) {\n    if ($l[$i] > $l[$i - 1]) {\n\
    \      if ($direction < 0) {\n        return false;\n      }\n      $direction\
    \ = 1;\n    } else if ($l[$i] < $l[$i - 1]) {\n      if ($direction > 0) {\n \
    \       return false;\n      }\n      $direction = -1;\n    }\n  }\n  return true;\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $res = 0;\n    for ($i = 0; $i < count($l) - 1; $i++) {\n\
    \        if ($l[$i] < $l[$i + 1]) {\n            $res = 1;\n        } else if\
    \ ($l[$i] > $l[$i + 1]) {\n            $res = -1;\n        }\n        if ($res\
    \ == 1) {\n            for ($j = $i + 1; $j < count($l) - 1; $j++) {\n       \
    \         if ($l[$j] > $l[$j + 1]) {\n                    return false;\n    \
    \            }\n            }\n        } else if ($res == -1) {\n            for\
    \ ($j = $i + 1; $j < count($l) - 1; $j++) {\n                if ($l[$j] < $l[$j\
    \ + 1]) {\n                    return false;\n                }\n            }\n\
    \        }\n    }\n    return true;\n}\n\n$l = array(1, 2, 4, 20);\necho monotonic($l)\
    \ . \"<br>\";\n$l = array(1, 20, 4, 10);\necho monotonic($l) . \"<br>\";\n$l =\
    \ array(4, 1, 0, -10);\necho monotonic($l) . \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br><br>1<br>
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    if (count($l) <= 1) {\n        return true;\n    }\n  \
    \  $increasing = $l[0] < $l[1];\n    for ($i = 1; $i < count($l) - 1; $i++) {\n\
    \        if ($increasing) {\n            if ($l[$i] > $l[$i + 1]) {\n        \
    \        return false;\n            }\n        } else {\n            if ($l[$i]\
    \ < $l[$i + 1]) {\n                return false;\n            }\n        }\n \
    \   }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  if (count($l) == 1) return true;\n  $ops = array(function($a,\
    \ $b) { return $a > $b; }, function($a, $b) { return $a < $b; });\n  $is_increasing\
    \ = $ops[0]($l[0], $l[1]);\n  foreach (array_slice($l, 1) as $i => $j) {\n   \
    \ if (!($ops[$is_increasing]($l[$i], $j))) return false;\n  }\n  return true;\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnw9hsl5v.php:24\n\
    Stack trace:\n#0 /tmp/tmpnw9hsl5v.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpnw9hsl5v.php\
    \ on line 24\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  if (count($l) <= 1) {\n    return true;\n  }\n  $prev = $l[0];\n\
    \  $increasing = null;\n  for ($i = 1; $i < count($l); $i++) {\n    if ($prev\
    \ === $l[$i]) {\n      continue;\n    }\n    if ($increasing === null) {\n   \
    \   $increasing = $prev < $l[$i];\n    }\n    if ($increasing !== ($prev < $l[$i]))\
    \ {\n      return false;\n    }\n    $prev = $l[$i];\n  }\n  return true;\n}\n\
    \nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n\t$increasing = true;\n\t$decreasing = true;\n\t$len = count($l);\n\
    \tfor ($i = 0; $i < $len - 1; $i++) {\n\t\tif ($l[$i] > $l[$i + 1]) {\n\t\t\t\
    $increasing = false;\n\t\t}\n\t\tif ($l[$i] < $l[$i + 1]) {\n\t\t\t$decreasing\
    \ = false;\n\t\t}\n\t}\n\treturn $increasing || $decreasing;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $prev = null;\n    $increasing = null;\n    foreach ($l\
    \ as $e) {\n        if ($prev == null) {\n            $prev = $e;\n          \
    \  continue;\n        }\n        if ($e == $prev) {\n            continue;\n \
    \       }\n        if ($increasing == null) {\n            $increasing = $e >\
    \ $prev;\n            $prev = $e;\n            continue;\n        }\n        if\
    \ ($increasing && $e < $prev) {\n            return false;\n        }\n      \
    \  if (!$increasing && $e > $prev) {\n            return false;\n        }\n \
    \       $prev = $e;\n    }\n    return true;\n}\n\nvar_dump(monotonic(array(1,\
    \ 2, 4, 20)));\nvar_dump(monotonic(array(1, 20, 4, 10)));\nvar_dump(monotonic(array(4,\
    \ 1, 0, -10)));\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'bool(true)

    bool(false)

    bool(true)

    '
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n\t$direction = null;\n\t$prev = null;\n\tforeach ($l as $v)\
    \ {\n\t\tif ($prev === null) {\n\t\t\t$prev = $v;\n\t\t\tcontinue;\n\t\t}\n\t\t\
    $d = $v - $prev;\n\t\tif ($direction === null) {\n\t\t\t$direction = $d;\n\t\t\
    } else if ($direction * $d < 0) {\n\t\t\treturn false;\n\t\t}\n\t\t$prev = $v;\n\
    \t}\n\treturn true;\n}\n\nif (__FILE__ != TOPLEVEL_FILE) return;\n\nassert(monotonic(array(1,\
    \ 2, 4, 20)));\nassert(!monotonic(array(1, 20, 4, 10)));\nassert(monotonic(array(4,\
    \ 1, 0, -10)));\nassert(monotonic(array(0, 1, 2, 3)));\nassert(monotonic(array(3,\
    \ 2, 1, 0)));\nassert(monotonic(array(3, 3, 3, 3)));\nassert(monotonic(array(0)));\n\
    assert(monotonic(array()));\n\necho \"all test passed\";\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Undefined constant \"TOPLEVEL_FILE\" in\
    \ /tmp/tmp4b5cl5pg.php:28\nStack trace:\n#0 {main}\n  thrown in /tmp/tmp4b5cl5pg.php\
    \ on line 28\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n\t$asc = true;\n\t$desc = true;\n\tfor ($i = 1; $i < count($l);\
    \ $i++) {\n\t\tif ($l[$i] < $l[$i - 1]) {\n\t\t\t$asc = false;\n\t\t}\n\t\tif\
    \ ($l[$i] > $l[$i - 1]) {\n\t\t\t$desc = false;\n\t\t}\n\t}\n\treturn $asc ||\
    \ $desc;\n}\n\n$input0 = array(1, 2, 4, 20);\n$expected0 = true;\n$input1 = array(1,\
    \ 20, 4, 10);\n$expected1 = false;\n$input2 = array(4, 1, 0, -10);\n$expected2\
    \ = true;\n\n$result0 = monotonic($input0);\n$result1 = monotonic($input1);\n\
    $result2 = monotonic($input2);\n\nif ($expected0 === $result0) {\n\techo 'PASS:\
    \ test0'.PHP_EOL;\n} else {\n\techo 'FAIL: test0: Expected '.$expected0.'; Actual:\
    \ '.$result0.PHP_EOL;\n}\n\nif ($expected1 === $result1) {\n\techo 'PASS: test1'.PHP_EOL;\n\
    } else {\n\techo 'FAIL: test1: Expected '.$expected1.'; Actual: '.$result1.PHP_EOL;\n\
    }\n\nif ($expected2 === $result2) {\n\techo 'PASS: test2'.PHP_EOL;\n} else {\n\
    \techo 'FAIL: test2: Expected '.$expected2.'; Actual: '.$result2.PHP_EOL;\n}\n\
    function candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'PASS: test0

    PASS: test1

    PASS: test2

    '
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    if (sizeof($l) <= 1) return true;\n    return (max($l)\
    \ - min($l)) * ($l[0] - $l[sizeof($l) - 1]) >= 0;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmkdd5901.php:19\n\
    Stack trace:\n#0 /tmp/tmpmkdd5901.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpmkdd5901.php\
    \ on line 19\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $l = array_map(function($x) { return (int)$x; }, $l);\n \
    \ $len = count($l);\n  if ($len <= 1) return true;\n  $dir = ($l[1] - $l[0]) >\
    \ 0 ? 1 : -1;\n  for ($i = 1; $i < $len; $i++) {\n    if ($dir * ($l[$i] - $l[$i\
    \ - 1]) < 0) return false;\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n\tif(count($l) == 1) return true;\n\tif($l[0] == $l[1]) return\
    \ monotonic(array_slice($l, 1));\n\t$direction = ($l[0] < $l[1]) ? 1 : -1;\n\t\
    for($i = 1; $i < count($l); $i++) {\n\t\tif($direction * ($l[$i - 1] - $l[$i])\
    \ > 0) continue;\n\t\treturn false;\n\t}\n\treturn true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7kl8o3si.php:25\n\
    Stack trace:\n#0 /tmp/tmp7kl8o3si.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp7kl8o3si.php\
    \ on line 25\n"
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    // your code here\n    $monotonic = false;\n    $monotonic\
    \ = false;\n    $current = NULL;\n    $increment = NULL;\n    $last = count($l)\
    \ - 1;\n    $last_value = $l[$last];\n    $first_value = $l[0];\n    $first_current\
    \ = $first_value;\n    $last_current = $last_value;\n    $first_increment = $first_value;\n\
    \    $last_increment = $last_value;\n    $current_array = array();\n    $increment_array\
    \ = array();\n    $length = count($l);\n    $first_loop = false;\n    $second_loop\
    \ = false;\n    for ($i = 0; $i < $length; $i++) {\n        $current = $l[$i];\n\
    \        if ($first_loop == false) {\n            $first_current = $current;\n\
    \            array_push($current_array, $current);\n            if ($first_current\
    \ > $last_current) {\n                $increment = $first_current - $last_current;\n\
    \                $last_increment = $increment;\n                array_push($increment_array,\
    \ $increment);\n            } else {\n                $increment = $last_current\
    \ - $first_current;\n                $last_increment = $increment;\n         \
    \       array_push($increment_array, $increment);\n            }\n           \
    \ $first_loop = true;\n        } else {\n            $first_current = $current;\n\
    \            array_push($current_array, $current);\n            if ($first_current\
    \ > $last_current) {\n                $increment = $first_current - $last_current;\n\
    \                array_push($increment_array, $increment);\n                if\
    \ ($increment > $last_increment) {\n                    $last_increment = $increment;\n\
    \                }\n            } else {\n                $increment = $last_current\
    \ - $first_current;\n                array_push($increment_array, $increment);\n\
    \                if ($increment > $last_increment) {\n                    $last_increment\
    \ =\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmppl2vw_5_.php on line 56

    '
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $check = 0;\n    for ($i = 0; $i < count($l) - 1; $i++)\
    \ {\n        if ($l[$i] < $l[$i + 1]) {\n            if ($check == -1) {\n   \
    \             return false;\n            }\n            $check = 1;\n        }\
    \ else if ($l[$i] > $l[$i + 1]) {\n            if ($check == 1) {\n          \
    \      return false;\n            }\n            $check = -1;\n        }\n   \
    \ }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    if(count($l) <= 1) {\n        return true;\n    }\n   \
    \ $increase = $l[0] < $l[1];\n    for($i = 1; $i < count($l) - 1; $i++) {\n  \
    \      if($increase && $l[$i] > $l[$i + 1]) {\n            return false;\n   \
    \     }\n        if(!$increase && $l[$i] < $l[$i + 1]) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n   \
    \ return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $inc = true;\n  $dec = true;\n  for ($i = 1; $i < count($l);\
    \ $i++) {\n    if ($l[$i - 1] < $l[$i]) {\n      $dec = false;\n    }\n    if\
    \ ($l[$i - 1] > $l[$i]) {\n      $inc = false;\n    }\n  }\n  return $inc || $dec;\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $flag = $l[0] <= $l[1];\n  for ($i = 1; $i < count($l) -\
    \ 1; $i++) {\n    if ($flag && $l[$i] > $l[$i + 1]) {\n      return false;\n \
    \   }\n    if (!$flag && $l[$i] < $l[$i + 1]) {\n      return false;\n    }\n\
    \  }\n  return true;\n}\n\nvar_dump(monotonic(array(1, 2, 4, 20)));\nvar_dump(monotonic(array(1,\
    \ 20, 4, 10)));\nvar_dump(monotonic(array(4, 1, 0, -10)));\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'bool(true)

    bool(false)

    bool(true)

    '
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n\t$diff = $l[1] - $l[0];\n\tfor ($i = 1; $i < count($l); $i++)\
    \ {\n\t\tif (($l[$i] - $l[$i - 1]) * $diff < 0) {\n\t\t\treturn false;\n\t\t}\n\
    \t}\n\treturn true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n\t$m = $l[0];\n\t$is_increasing = $is_decreasing = false;\n\
    \tforeach ($l as $i) {\n\t\tif ($i > $m) {\n\t\t\t$is_increasing = true;\n\t\t\
    } else if ($i < $m) {\n\t\t\t$is_decreasing = true;\n\t\t}\n\t\t$m = $i;\n\t}\n\
    \treturn $is_increasing != $is_decreasing;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp00a409v0.php:35\n\
    Stack trace:\n#0 /tmp/tmp00a409v0.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp00a409v0.php\
    \ on line 35\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n\tfor ($i = 1; $i < count($l); $i++) {\n\t\tif ($l[$i] > $l[$i\
    \ - 1]) {\n\t\t\t$mode = \"increasing\";\n\t\t\tbreak;\n\t\t} else if ($l[$i]\
    \ < $l[$i - 1]) {\n\t\t\t$mode = \"decreasing\";\n\t\t\tbreak;\n\t\t}\n\t}\n\t\
    if ($mode == \"increasing\") {\n\t\tfor ($i = 1; $i < count($l); $i++) {\n\t\t\
    \tif ($l[$i] < $l[$i - 1]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t} else\
    \ if ($mode == \"decreasing\") {\n\t\tfor ($i = 1; $i < count($l); $i++) {\n\t\
    \t\tif ($l[$i] > $l[$i - 1]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\t\
    return true;\n}\n\nif (monotonic(array(1, 2, 4, 20))) {\n\techo \"1, 2, 4, 20\
    \ is monotonic\";\n} else {\n\techo \"1, 2, 4, 20 is not monotonic\";\n}\necho\
    \ \"<br />\";\nif (monotonic(array(1, 20, 4, 10))) {\n\techo \"1, 20, 4, 10 is\
    \ monotonic\";\n} else {\n\techo \"1, 20, 4, 10 is not monotonic\";\n}\necho \"\
    <br />\";\nif (monotonic(array(4, 1, 0, -10))) {\n\techo \"4, 1, 0, -10 is monotonic\"\
    ;\n} else {\n\techo \"4, 1, 0, -10 is not monotonic\";\n}\necho \"<br />\";\n\
    function candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1, 2, 4, 20 is monotonic<br />1, 20, 4, 10 is not monotonic<br />4, 1,
    0, -10 is monotonic<br />

    Warning: Undefined variable $mode in /tmp/tmp6hr0vww2.php on line 19


    Warning: Undefined variable $mode in /tmp/tmp6hr0vww2.php on line 25

    '
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  if (count($l) <= 1) {\n    return true;\n  }\n  $is_increasing\
    \ = $l[0] < $l[1];\n  for ($i = 1; $i < count($l) - 1; $i++) {\n    if (($l[$i]\
    \ < $l[$i + 1]) != $is_increasing) {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    if (sizeof($l) == 1) return true;\n    $increasing = $l[0]\
    \ < $l[1];\n    for ($i = 1; $i < sizeof($l); $i++) {\n        if (($increasing\
    \ && ($l[$i-1] >= $l[$i])) ||\n            (!$increasing && ($l[$i-1] <= $l[$i])))\
    \ {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4vznfmc9.php:30\n\
    Stack trace:\n#0 /tmp/tmp4vznfmc9.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp4vznfmc9.php\
    \ on line 30\n"
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfmq5w81r.php:18\n\
    Stack trace:\n#0 /tmp/tmpfmq5w81r.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpfmq5w81r.php\
    \ on line 18\n"
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    return $l == array_unique($l) && (sizeof($l) == 1 || $l[1]-$l[0]\
    \ == $l[sizeof($l)-1]-$l[sizeof($l)-2]);\n}\n\n$fh = fopen($argv[1], \"r\");\n\
    while (!feof($fh)) {\n    $val = fgets($fh);\n    if ($val != \"\") {\n      \
    \  $line = explode(\" \", trim($val));\n        echo monotonic($line) ? \"true\"\
    \ : \"false\";\n        echo \"\\n\";\n    }\n}\nfclose($fh);\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 1 in /tmp/tmp0s4ir_p_.php on line 13\n\n\
    Deprecated: fopen(): Passing null to parameter #1 ($filename) of type string is\
    \ deprecated in /tmp/tmp0s4ir_p_.php on line 13\n\nFatal error: Uncaught ValueError:\
    \ Path cannot be empty in /tmp/tmp0s4ir_p_.php:13\nStack trace:\n#0 /tmp/tmp0s4ir_p_.php(13):\
    \ fopen('', 'r')\n#1 {main}\n  thrown in /tmp/tmp0s4ir_p_.php on line 13\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n\tif (count($l) < 2) {\n\t\treturn true;\n\t}\n\tif ($l[0]\
    \ > $l[1]) {\n\t\tfor ($i = 1; $i < count($l) - 1; $i++) {\n\t\t\tif ($l[$i] <\
    \ $l[$i + 1]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfor ($i\
    \ = 1; $i < count($l) - 1; $i++) {\n\t\t\tif ($l[$i] > $l[$i + 1]) {\n\t\t\t\t\
    return false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $i = 0;\n    $inc = true;\n    $dec = true;\n    while\
    \ ($i < count($l) - 1) {\n        if ($l[$i] > $l[$i + 1]) {\n            $inc\
    \ = false;\n        }\n        if ($l[$i] < $l[$i + 1]) {\n            $dec =\
    \ false;\n        }\n        $i++;\n    }\n    return $inc || $dec;\n}\n\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $sign = null;\n    $previous = null;\n    foreach ($l as\
    \ $v) {\n        if ($previous !== null) {\n            $delta = $v - $previous;\n\
    \            if ($sign === null) {\n                $sign = $delta > 0 ? 1 : -1;\n\
    \            } elseif ($sign !== ($delta > 0 ? 1 : -1)) {\n                return\
    \ false;\n            }\n        }\n        $previous = $v;\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n\t$i = 0;\n\t$increasing = True;\n\twhile ($i < count($l)-1)\
    \ {\n\t\tif ($l[$i] > $l[$i+1]) {\n\t\t\t$increasing = False;\n\t\t\tbreak;\n\t\
    \t}\n\t\t$i++;\n\t}\n\tif ($increasing) {\n\t\treturn True;\n\t}\n\t$i = 0;\n\t\
    $decreasing = True;\n\twhile ($i < count($l)-1) {\n\t\tif ($l[$i] < $l[$i+1])\
    \ {\n\t\t\t$decreasing = False;\n\t\t\tbreak;\n\t\t}\n\t\t$i++;\n\t}\n\tif ($decreasing)\
    \ {\n\t\treturn True;\n\t}\n\treturn False;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $l = array_unique($l);\n  sort($l);\n  if (sizeof($l) ===\
    \ 1) return false;\n  if (sizeof($l) === 2) return true;\n  $a = array_slice($l,\
    \ -2);\n  $b = array_slice($l, -3, 1);\n  $c = array_slice($l, -4, 1);\n  return\
    \ $a[0] - $b[0] > 0 ? ($a[0] - $c[0] > 0) : ($a[0] - $c[0] < 0);\n}\n\nif (!DEBUG_EXECUTION)\
    \ {\n  for ($i = 0; $i < 10000; $i++) {\n    $max_val = mt_rand(0, MAX_ELEMENTS);\n\
    \    $l = array();\n    for ($j = 0; $j < $max_val; $j++) {\n      $l[] = mt_rand(-MAX_VAL,\
    \ MAX_VAL);\n    }\n    monotonic($l);\n  }\n} else {\n  $l = array(1, 2, 4, 20);\n\
    \  var_dump(monotonic($l));\n  $l = array(1, 20, 4, 10);\n  var_dump(monotonic($l));\n\
    \  $l = array(4, 1, 0, -10);\n  var_dump(monotonic($l));\n}\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Undefined constant \"DEBUG_EXECUTION\" in\
    \ /tmp/tmpm9upqejg.php:20\nStack trace:\n#0 {main}\n  thrown in /tmp/tmpm9upqejg.php\
    \ on line 20\n"
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n\t$direction = $l[1] - $l[0];\n\tforeach ($l as $i) {\n\t\t\
    if ($direction * ($i - $l[0]) < 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdb360hi0.php:26\n\
    Stack trace:\n#0 /tmp/tmpdb360hi0.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpdb360hi0.php\
    \ on line 26\n"
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $a = array_keys($l);\n    $b = array_values($l);\n    $prev\
    \ = $b[0];\n    $count = 0;\n    $is_increasing = true;\n    $i = 1;\n    while($i\
    \ < count($a)) {\n        if($prev > $b[$i]) {\n            $is_increasing = false;\n\
    \            $count = 0;\n        } else {\n            $count++;\n        }\n\
    \        $prev = $b[$i];\n        $i++;\n    }\n    return $count == count($a)\
    \ - 1;\n}\n\n$a = array(1, 2, 4, 20);\n$r = monotonic($a);\nif ($r) {\n    echo\
    \ \"Monotonic.\";\n} else {\n    echo \"Not monotonic.\";\n}\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Monotonic.\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi83bd3cp.php:44\n\
    Stack trace:\n#0 /tmp/tmpi83bd3cp.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpi83bd3cp.php\
    \ on line 44\n"
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n\t$s = $l[0];\n\t$m = null;\n\tforeach ($l as $v) {\n\t\tif\
    \ ($m === null) {\n\t\t\t$m = $v;\n\t\t} else if ($m == $v) {\n\t\t\tcontinue;\n\
    \t\t} else if ($m < $v) {\n\t\t\tif ($s != '<') {\n\t\t\t\treturn false;\n\t\t\
    \t}\n\t\t\t$s = '<';\n\t\t} else {\n\t\t\tif ($s != '>') {\n\t\t\t\treturn false;\n\
    \t\t\t}\n\t\t\t$s = '>';\n\t\t}\n\t\t$m = $v;\n\t}\n\treturn true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4rlskqlu.php:38\n\
    Stack trace:\n#0 /tmp/tmp4rlskqlu.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp4rlskqlu.php\
    \ on line 38\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $result = true;\n  if (count($l) > 1) {\n    $increasing\
    \ = ($l[1] > $l[0]);\n    for ($i = 1; $i < count($l); $i++) {\n      if ($increasing)\
    \ {\n        if ($l[$i] < $l[$i - 1]) {\n          $result = false;\n        \
    \  break;\n        }\n      } else {\n        if ($l[$i] > $l[$i - 1]) {\n   \
    \       $result = false;\n          break;\n        }\n      }\n    }\n  }\n \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n\tif (sizeof($l) < 2) {\n\t\treturn true;\n\t}\n\n\t$increasing\
    \ = null;\n\tfor ($i = 1; $i < sizeof($l); $i++) {\n\t\tif ($l[$i] == $l[$i -\
    \ 1]) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif ($increasing === null) {\n\t\t\t$increasing\
    \ = $l[$i] > $l[$i - 1];\n\t\t} else if ($increasing) {\n\t\t\tif ($l[$i] < $l[$i\
    \ - 1]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\tif ($l[$i] > $l[$i\
    \ - 1]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n}\n\n\
    function candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n\t$n = count($l);\n\tif ($n < 2) {\n\t\treturn true;\n\t}\n\
    \t$l1 = $l[0];\n\t$l2 = $l[1];\n\t$dir = ($l2 - $l1) / abs($l2 - $l1);\n\t$i =\
    \ 2;\n\twhile ($i < $n) {\n\t\t$l3 = $l[$i];\n\t\t$d = ($l3 - $l2) / abs($l3 -\
    \ $l2);\n\t\tif ($d != $dir) {\n\t\t\treturn false;\n\t\t}\n\t\t$l2 = $l3;\n\t\
    \t$i++;\n\t}\n\treturn true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught DivisionByZeroError: Division by zero in /tmp/tmpp1c768u4.php:20\n\
    Stack trace:\n#0 /tmp/tmpp1c768u4.php(31): monotonic(Array)\n#1 /tmp/tmpp1c768u4.php(39):\
    \ candidate(Array)\n#2 /tmp/tmpp1c768u4.php(45): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmpp1c768u4.php on line 20\n"
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $is_monotonic = true;\n    $diff = $l[1] - $l[0];\n   \
    \ for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i] - $l[$i - 1] != $diff)\
    \ {\n            $is_monotonic = false;\n            break;\n        }\n    }\n\
    \    return $is_monotonic;\n}\n\n$p = [1, 2, 4, 20];\n$p2 = [1, 20, 4, 10];\n\
    $p3 = [4, 1, 0, -10];\necho monotonic($p), \"\\n\";\necho monotonic($p2), \"\\\
    n\";\necho monotonic($p3), \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnx4qhqe7.php:32\n\
    Stack trace:\n#0 /tmp/tmpnx4qhqe7.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpnx4qhqe7.php\
    \ on line 32\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n\t$a = $l[0];\n\t$b = $l[1];\n\t$sign = $a - $b;\n\tfor ($i\
    \ = 1; $i < count($l); $i++) {\n\t\t$a = $l[$i - 1];\n\t\t$b = $l[$i];\n\t\tif\
    \ ($sign * ($a - $b) < 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  if (sizeof($l) < 2) {\n    return true;\n  }\n  $i = 1;\n\
    \  $diff = $l[$i] - $l[$i - 1];\n  while ($i < sizeof($l)) {\n    if ($diff !=\
    \ $l[$i] - $l[$i - 1]) {\n      return false;\n    }\n    $i++;\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk2_6ipgz.php:29\n\
    Stack trace:\n#0 /tmp/tmpk2_6ipgz.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpk2_6ipgz.php\
    \ on line 29\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $i = 1;\n  if (count($l) < 2) {\n    return true;\n  }\n\
    \  while ($i < count($l)) {\n    if ($l[$i] > $l[$i - 1]) {\n      $ascending\
    \ = true;\n      break;\n    } else if ($l[$i] < $l[$i - 1]) {\n      $ascending\
    \ = false;\n      break;\n    }\n    $i++;\n  }\n  while ($i < count($l)) {\n\
    \    if ($ascending && $l[$i] < $l[$i - 1]) {\n      return false;\n    } else\
    \ if (!$ascending && $l[$i] > $l[$i - 1]) {\n      return false;\n    }\n    $i++;\n\
    \  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $is_increasing = true;\n  $is_decreasing = true;\n  for ($i\
    \ = 1; $i < count($l); $i++) {\n    if ($l[$i] < $l[$i - 1]) {\n      $is_increasing\
    \ = false;\n    }\n    if ($l[$i] > $l[$i - 1]) {\n      $is_decreasing = false;\n\
    \    }\n  }\n  return $is_increasing || $is_decreasing;\n}\n\n$l = array(1, 2,\
    \ 4, 20);\necho (monotonic($l) ? 'true' : 'false') . \"\\n\";\n$l = array(1, 20,\
    \ 4, 10);\necho (monotonic($l) ? 'true' : 'false') . \"\\n\";\n$l = array(4, 1,\
    \ 0, -10);\necho (monotonic($l) ? 'true' : 'false') . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'true

    false

    true

    '
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    // change to false if we see a decreasing value\n    $decreasing\
    \ = true;\n    // change to true if we see an increasing value\n    $increasing\
    \ = true;\n    for ($i = 1; $i < count($l); $i++) {\n        $decreasing = $decreasing\
    \ && ($l[$i] <= $l[$i - 1]);\n        $increasing = $increasing && ($l[$i] >=\
    \ $l[$i - 1]);\n    }\n    return $decreasing || $increasing;\n}\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n\t$k = array_keys($l);\n\t$v = array_values($l);\n\tif ($k\
    \ == $v) {\n\t\t$dups = array_count_values($l);\n\t\tif (max($dups) == 1) {\n\t\
    \t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsa111k_p.php:26\n\
    Stack trace:\n#0 /tmp/tmpsa111k_p.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpsa111k_p.php\
    \ on line 26\n"
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n\t$op = $l[0] > $l[1] ? '>' : '<';\n\tfor ($i = 1; $i < count($l)\
    \ - 1; $i++) {\n\t\tif (!(eval(\"return \\$l[\\$i] $op \\$l[\\$i + 1];\"))) {\n\
    \t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nvar_dump(monotonic(array(1,\
    \ 2, 4, 20)));\nvar_dump(monotonic(array(1, 20, 4, 10)));\nvar_dump(monotonic(array(4,\
    \ 1, 0, -10)));\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "bool(true)\nbool(false)\nbool(true)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpbsqc89gp.php:31\nStack trace:\n#0 /tmp/tmpbsqc89gp.php(37):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpbsqc89gp.php on line 31\n"
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    // TODO\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc34_e0ef.php:19\n\
    Stack trace:\n#0 /tmp/tmpc34_e0ef.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpc34_e0ef.php\
    \ on line 19\n"
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $increasing = isIncreasing($l);\n  $decreasing = isDecreasing($l);\n\
    \  return $increasing || $decreasing;\n}\n\nfunction candidate(...$args) {\n \
    \   return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function isIncreasing()\
    \ in /tmp/tmpnk_k96wj.php:10\nStack trace:\n#0 /tmp/tmpnk_k96wj.php(16): monotonic(Array)\n\
    #1 /tmp/tmpnk_k96wj.php(20): candidate(Array)\n#2 /tmp/tmpnk_k96wj.php(30): test()\n\
    #3 {main}\n  thrown in /tmp/tmpnk_k96wj.php on line 10\n"
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $r = isset($l[0]) ? $l[0] : false;\n  for ($i = 1; $i < count($l);\
    \ $i++) {\n    if (($r > $l[$i] && $l[$i] > $l[$i + 1]) ||\n        ($r < $l[$i]\
    \ && $l[$i] < $l[$i + 1])) {\n      return false;\n    }\n  }\n  return true;\n\
    }\n\n$tests = array(\n  array(1, 2, 4, 20),\n  array(1, 20, 4, 10),\n  array(4,\
    \ 1, 0, -10)\n);\n\nforeach ($tests as $test) {\n  var_dump(monotonic($test));\n\
    }\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "bool(false)\nbool(false)\nbool(false)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpl4v2g5ng.php:34\nStack trace:\n#0 /tmp/tmpl4v2g5ng.php(44):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpl4v2g5ng.php on line 34\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $inc = true;\n  $dec = true;\n  for ($i = 1; $i < count($l);\
    \ $i++) {\n    if ($l[$i] < $l[$i - 1]) {\n      $inc = false;\n    }\n    if\
    \ ($l[$i] > $l[$i - 1]) {\n      $dec = false;\n    }\n  }\n  return $inc || $dec;\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  if (count($l) < 2) {\n    return true;\n  }\n  $direction\
    \ = null;\n  for ($i = 1; $i < count($l); $i++) {\n    if ($direction == null)\
    \ {\n      if ($l[$i - 1] > $l[$i]) {\n        $direction = -1;\n      } else\
    \ if ($l[$i - 1] < $l[$i]) {\n        $direction = 1;\n      }\n    } else {\n\
    \      if ($direction == -1 && $l[$i - 1] < $l[$i]) {\n        return false;\n\
    \      } else if ($direction == 1 && $l[$i - 1] > $l[$i]) {\n        return false;\n\
    \      }\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n  \
    \  return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $is_increase = $is_decrease = True;\n  foreach($l as $i=>$x)\
    \ {\n    if ($i > 0) {\n      if ($x - $l[$i-1] < 0) $is_increase = False;\n \
    \     if ($x - $l[$i-1] > 0) $is_decrease = False;\n    }\n  }\n  return $is_increase\
    \ or $is_decrease;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n\t$x = $l[0];\n\t$inc = null;\n\tfor ($i = 1; $i < count($l);\
    \ $i++) {\n\t\tif ($inc === null) {\n\t\t\tif ($l[$i] > $x) {\n\t\t\t\t$inc =\
    \ true;\n\t\t\t} elseif ($l[$i] < $x) {\n\t\t\t\t$inc = false;\n\t\t\t}\n\t\t\
    } elseif ($inc === true && $l[$i] < $x) {\n\t\t\treturn false;\n\t\t} elseif ($inc\
    \ === false && $l[$i] > $x) {\n\t\t\treturn false;\n\t\t}\n\t\t$x = $l[$i];\n\t\
    }\n\treturn true;\n}\n\nclass Test extends PHPUnit_Framework_TestCase {\n\tpublic\
    \ function testMonotonic() {\n\t\t$this->assertTrue(monotonic(array(1, 2, 4, 20)));\n\
    \t\t$this->assertFalse(monotonic(array(1, 20, 4, 10)));\n\t\t$this->assertTrue(monotonic(array(4,\
    \ 1, 0, -10)));\n\t}\n}\nTest::main();\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Class \"PHPUnit_Framework_TestCase\" not\
    \ found in /tmp/tmpy266u36g.php:29\nStack trace:\n#0 {main}\n  thrown in /tmp/tmpy266u36g.php\
    \ on line 29\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $r = true;\n    $s = 0;\n    $length = count($l);\n   \
    \ for ($i = 1; $i < $length; $i++) {\n        $d = $l[$i] - $l[$i - 1];\n    \
    \    if ($s === 0) {\n            $s = $d;\n        } else {\n            if ($s\
    \ * $d < 0) {\n                $r = false;\n                break;\n         \
    \   }\n        }\n    }\n    return $r;\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $last = $l[0];\n  $increasing = true;\n  $decreasing = true;\n\
    \  foreach ($l as $x) {\n    if ($x < $last) {\n      $increasing = false;\n \
    \   }\n    if ($x > $last) {\n      $decreasing = false;\n    }\n    $last = $x;\n\
    \  }\n  return $increasing || $decreasing;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n\t$n = count($l);\n\tif ($n < 2) {\n\t\treturn true;\n\t}\n\
    \n\t$increasing = true;\n\t$previous = $l[0];\n\tfor ($i = 1; $i < $n; $i++) {\n\
    \t\tif ($l[$i] > $previous) {\n\t\t\t$increasing = false;\n\t\t\tbreak;\n\t\t\
    }\n\t\t$previous = $l[$i];\n\t}\n\n\tif ($increasing) {\n\t\treturn true;\n\t\
    }\n\n\t$previous = $l[0];\n\tfor ($i = 1; $i < $n; $i++) {\n\t\tif ($l[$i] < $previous)\
    \ {\n\t\t\treturn false;\n\t\t}\n\t\t$previous = $l[$i];\n\t}\n\n\treturn true;\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $m = null;\n    $r = true;\n    foreach ($l as $i) {\n\
    \        if ($m === null) {\n            $m = $i;\n        } else {\n        \
    \    if ($m != $i) {\n                if ($r === null) {\n                   \
    \ $r = $m > $i;\n                } else {\n                    if ($r !== ($m\
    \ > $i)) {\n                        return false;\n                    }\n   \
    \             }\n            }\n            $m = $i;\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl1h45rhg.php:36\n\
    Stack trace:\n#0 /tmp/tmpl1h45rhg.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpl1h45rhg.php\
    \ on line 36\n"
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  if (count($l) > 1) {\n    for ($i = 1; $i < count($l); $i++)\
    \ {\n      if (abs($l[$i] - $l[$i - 1]) != abs($l[1] - $l[0])) {\n        return\
    \ false;\n      }\n    }\n  }\n  return true;\n}\n\necho monotonic(array(1, 2,\
    \ 4, 20)) ? \"true\" : \"false\";\necho \"\\n\";\necho monotonic(array(1, 20,\
    \ 4, 10)) ? \"true\" : \"false\";\necho \"\\n\";\necho monotonic(array(4, 1, 0,\
    \ -10)) ? \"true\" : \"false\";\necho \"\\n\";\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "false\nfalse\nfalse\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpzf4u_9w1.php:31\nStack trace:\n#0 /tmp/tmpzf4u_9w1.php(41): test()\n\
    #1 {main}\n  thrown in /tmp/tmpzf4u_9w1.php on line 31\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    if (count($l) < 2) {\n        return true;\n    }\n   \
    \ if ($l[0] < $l[1]) {\n        $asc = true;\n    } elseif ($l[0] > $l[1]) {\n\
    \        $asc = false;\n    } else {\n        return monotonic(array_slice($l,\
    \ 1));\n    }\n    $i = 1;\n    while ($i < count($l)) {\n        if ($asc &&\
    \ $l[$i - 1] > $l[$i]) {\n            return false;\n        } elseif (!$asc &&\
    \ $l[$i - 1] < $l[$i]) {\n            return false;\n        }\n        $i++;\n\
    \    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  if (count($l) < 2) {\n    return true;\n  }\n  $state = null;\n\
    \  $last_number = null;\n  foreach ($l as $number) {\n    if ($last_number !=\
    \ null) {\n      if ($state === null) {\n        if ($number > $last_number) {\n\
    \          $state = 'increasing';\n        } else if ($number < $last_number)\
    \ {\n          $state = 'decreasing';\n        }\n      } else if ($state ===\
    \ 'increasing') {\n        if ($number < $last_number) {\n          return false;\n\
    \        }\n      } else if ($state === 'decreasing') {\n        if ($number >\
    \ $last_number) {\n          return false;\n        }\n      }\n    }\n    $last_number\
    \ = $number;\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    // If a list is empty, return true\n    if (count($l) ==\
    \ 0) return true;\n    // Initialize prev element to null\n    $prev = null;\n\
    \    // Get the first element to start the loop\n    $e = array_shift($l);\n \
    \   // Loop through the list until its empty\n    while ($e !== null) {\n    \
    \    // If prev is not set\n        if ($prev === null) {\n            // Set\
    \ prev and get next element\n            $prev = $e;\n            $e = array_shift($l);\n\
    \            continue;\n        }\n        // Check if prev > e or prev < e\n\
    \        if ($prev > $e || $prev < $e) {\n            // If so, return false\n\
    \            return false;\n        }\n        // Set prev to e and get next element\n\
    \        $prev = $e;\n        $e = array_shift($l);\n    }\n    // Return true\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpis2iet_j.php:43\n\
    Stack trace:\n#0 /tmp/tmpis2iet_j.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpis2iet_j.php\
    \ on line 43\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n\tif (count($l) < 2) {\n\t\treturn true;\n\t}\n\t\n\t$diff\
    \ = $l[1] - $l[0];\n\tfor ($i = 2; $i < count($l); $i++) {\n\t\tif ($diff * ($l[$i]\
    \ - $l[$i - 1]) < 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\
    function candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $i = 0;\n    while ($i < count($l)-1) {\n        if (($l[$i]\
    \ > $l[$i+1]) && ($l[$i+1] < $l[$i+2])) {\n            return false;\n       \
    \ }\n        $i++;\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 4 in /tmp/tmpws74kp4b.php on line 12


    Warning: Undefined array key 4 in /tmp/tmpws74kp4b.php on line 12

    '
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n\tif (count($l) == 1) {\n\t\treturn true;\n\t}\n\tif ($l[0]\
    \ < $l[1]) {\n\t\tfor ($i = 0; $i < count($l) - 1; $i++) {\n\t\t\tif ($l[$i] >\
    \ $l[$i + 1]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t} else if ($l[0] > $l[1])\
    \ {\n\t\tfor ($i = 0; $i < count($l) - 1; $i++) {\n\t\t\tif ($l[$i] < $l[$i +\
    \ 1]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    if (count($l) <= 1) {\n        return true;\n    }\n  \
    \  $diff = $l[1] - $l[0];\n    for ($i = 1; $i < count($l); $i++) {\n        if\
    \ ($l[$i] - $l[$i - 1] != $diff) {\n            return false;\n        }\n   \
    \ }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsisar7mq.php:27\n\
    Stack trace:\n#0 /tmp/tmpsisar7mq.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpsisar7mq.php\
    \ on line 27\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $decreasing = true;\n    $increasing = true;\n    for ($i\
    \ = 1; $i < count($l); $i++) {\n        if ($l[$i] < $l[$i - 1])\n           \
    \ $increasing = false;\n        if ($l[$i] > $l[$i - 1])\n            $decreasing\
    \ = false;\n    }\n    return $decreasing || $increasing;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  if(count($l) <= 1) return true;\n  $inc = $l[0] < $l[1];\n\
    \  for($i = 1; $i < count($l) - 1; $i++) {\n    if($inc) {\n      if($l[$i] >\
    \ $l[$i + 1]) return false;\n    } else {\n      if($l[$i] < $l[$i + 1]) return\
    \ false;\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n  \
    \  return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $t = true;\n    $s = 1;\n    if ($l[0] > $l[1]) {\n   \
    \     $s = -1;\n    }\n    for ($i = 1; $i < count($l); $i++) {\n        if ($s\
    \ * ($l[$i] - $l[$i - 1]) < 0) {\n            $t = false;\n            break;\n\
    \        }\n    }\n    return $t;\n}\n\n$test = array(\n    array(1, 2, 4, 20),\n\
    \    array(1, 20, 4, 10),\n    array(4, 1, 0, -10)\n);\n\nforeach ($test as $t)\
    \ {\n    echo implode(', ', $t) . \": \" . var_export(monotonic($t), true) . \"\
    \\n\";\n}\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1, 2, 4, 20: true

    1, 20, 4, 10: false

    4, 1, 0, -10: true

    '
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  if (sizeof($l) < 2) {\n    return true;\n  }\n  else {\n\
    \    if ($l[0] > $l[1]) {\n      $r = array_reverse($l);\n    }\n    else {\n\
    \      $r = $l;\n    }\n    $b = array_shift($r);\n    foreach ($r as $v) {\n\
    \      if ($b > $v) {\n        return false;\n      }\n      $b = $v;\n    }\n\
    \    return true;\n  }\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n\t$prev = $l[0];\n\t$increasing = $decreasing = true;\n\tforeach\
    \ ($l as $curr) {\n\t\tif ($prev > $curr) {\n\t\t\t$increasing = false;\n\t\t\
    } elseif ($prev < $curr) {\n\t\t\t$decreasing = false;\n\t\t}\n\t\t$prev = $curr;\n\
    \t}\n\treturn $increasing || $decreasing;\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    if (count($l) < 2) {\n        return true;\n    }\n   \
    \ $sign = sign($l[1] - $l[0]);\n    for ($i = 1; $i < count($l); $i++) {\n   \
    \     if (sign($l[$i] - $l[$i - 1]) != $sign) {\n            return false;\n \
    \       }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function sign() in /tmp/tmpamnj4s5o.php:13\n\
    Stack trace:\n#0 /tmp/tmpamnj4s5o.php(23): monotonic(Array)\n#1 /tmp/tmpamnj4s5o.php(27):\
    \ candidate(Array)\n#2 /tmp/tmpamnj4s5o.php(37): test()\n#3 {main}\n  thrown in\
    \ /tmp/tmpamnj4s5o.php on line 13\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $is_increasing = true;\n    $is_decreasing = true;\n  \
    \  $len = count($l);\n    for ($i = 0; $i < $len - 1; $i++) {\n        if ($l[$i]\
    \ > $l[$i + 1])\n            $is_increasing = false;\n        if ($l[$i] < $l[$i\
    \ + 1])\n            $is_decreasing = false;\n    }\n    return $is_increasing\
    \ || $is_decreasing;\n}\n$l = array(1, 2, 4, 20);\nvar_dump(monotonic($l));\n\
    $l = array(1, 20, 4, 10);\nvar_dump(monotonic($l));\n$l = array(4, 1, 0, -10);\n\
    var_dump(monotonic($l));\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'bool(true)

    bool(false)

    bool(true)

    '
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n\tif (count($l) < 2) {\n\t\treturn true;\n\t}\n\t$prev = $l[0];\n\
    \t$m = -1;\n\tforeach ($l as $e) {\n\t\tif ($m < 0) {\n\t\t\tif ($e < $prev) {\n\
    \t\t\t\t$m = 1;\n\t\t\t} else if ($e > $prev) {\n\t\t\t\t$m = 0;\n\t\t\t}\n\t\t\
    } else if ($m == 0) {\n\t\t\tif ($e < $prev) {\n\t\t\t\treturn false;\n\t\t\t\
    }\n\t\t} else if ($m == 1) {\n\t\t\tif ($e > $prev) {\n\t\t\t\treturn false;\n\
    \t\t\t}\n\t\t}\n\t\t$prev = $e;\n\t}\n\treturn true;\n}\n\n$numbers = array(1,\
    \ 2, 4, 20);\nvar_dump(monotonic($numbers));\n\n$numbers = array(1, 20, 4, 10);\n\
    var_dump(monotonic($numbers));\n\n$numbers = array(4, 1, 0, -10);\nvar_dump(monotonic($numbers));\n\
    \n$numbers = array(0, 0, 0, 0);\nvar_dump(monotonic($numbers));\n\n$numbers =\
    \ array(1, 1, 1, 1);\nvar_dump(monotonic($numbers));\n\n$numbers = array(0, 0,\
    \ 0, 1);\nvar_dump(monotonic($numbers));\n\n$numbers = array(1, 0, 0, 0);\nvar_dump(monotonic($numbers));\n\
    \n$numbers = array(0, 0, 0, -1);\nvar_dump(monotonic($numbers));\n\n$numbers =\
    \ array(-1, 0, 0, 0);\nvar_dump(monotonic($numbers));\n\n$numbers = array(0, 1,\
    \ 2, 3);\nvar_dump(monotonic($numbers));\n\n$numbers = array(3, 2, 1, 0);\nvar_dump(mon\n\
    function candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmpfa59jbn6.php
    on line 68

    '
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $len = count($l);\n    if ($len < 2) return true;\n   \
    \ $up = $l[1] > $l[0];\n    $dn = $l[1] < $l[0];\n    for ($i = 2; $i < $len;\
    \ $i++) {\n        if (($l[$i] < $l[$i - 1]) && $up) return false;\n        if\
    \ (($l[$i] > $l[$i - 1]) && $dn) return false;\n    }\n    return true;\n}\n\n\
    function candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $s = true;\n    $p = 0;\n    foreach ($l as $i) {\n   \
    \     if ($i < $p) {\n            $s = false;\n            break;\n        }\n\
    \        $p = $i;\n    }\n    return $s;\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi_igd5on.php:30\n\
    Stack trace:\n#0 /tmp/tmpi_igd5on.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpi_igd5on.php\
    \ on line 30\n"
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n\tif (isEmpty($l)) return true;\n\t$sign = $l[0] <=> $l[1];\n\
    \tforeach ($l as $i => $v) {\n\t\tif ($i == 0) continue;\n\t\tif ($v <=> $l[$i-1]\
    \ != $sign) return false;\n\t}\n\treturn true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "!=" in /tmp/tmpcsgr0ytc.php on line
    14

    '
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $is_mono = true;\n    $increasing = true;\n    $size =\
    \ count($l);\n    for ($i = 0; $i < $size - 1; $i++) {\n        if ($l[$i] > $l[$i\
    \ + 1]) {\n            $increasing = false;\n            break;\n        }\n \
    \   }\n    if ($increasing) {\n        return $is_mono;\n    }\n    $decreasing\
    \ = true;\n    for ($i = 0; $i < $size - 1; $i++) {\n        if ($l[$i] < $l[$i\
    \ + 1]) {\n            $decreasing = false;\n            break;\n        }\n \
    \   }\n    if ($decreasing) {\n        return $is_mono;\n    }\n    return !$is_mono;\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $length = count($l);\n    if ($length <= 1) {\n       \
    \ return true;\n    }\n    $decreasing = true;\n    $increasing = true;\n    for\
    \ ($i = 1; $i < $length; $i++) {\n        if ($l[$i - 1] < $l[$i]) {\n       \
    \     $decreasing = false;\n        }\n        if ($l[$i - 1] > $l[$i]) {\n  \
    \          $increasing = false;\n        }\n    }\n    return $decreasing || $increasing;\n\
    }\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    if (count($l) < 2) return false;\n    $slope = 0;\n   \
    \ for ($i = 1; $i < count($l); $i++) {\n        $s = $l[$i] <=> $l[$i - 1];\n\
    \        if ($s) {\n            if ($slope && $s != $slope) {\n              \
    \  return false;\n            }\n            $slope = $s;\n        }\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    if (count($l) <= 1) {\n        return true;\n    }\n  \
    \  $diff = $l[1] - $l[0];\n    for ($i = 1; $i < count($l); $i++) {\n        if\
    \ ($l[$i] - $l[$i - 1] != $diff) {\n            return false;\n        }\n   \
    \ }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsisar7mq.php:27\n\
    Stack trace:\n#0 /tmp/tmpsisar7mq.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpsisar7mq.php\
    \ on line 27\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $mono = true;\n    $l_size = count($l);\n    $state = $l[0]\
    \ < $l[1] ? 1 : ($l[0] > $l[1] ? -1 : 0);\n    for ($i = 1; $i < $l_size - 1;\
    \ $i++) {\n        $prev_state = $state;\n        $state = $l[$i] < $l[$i + 1]\
    \ ? 1 : ($l[$i] > $l[$i + 1] ? -1 : 0);\n        if ($prev_state != 0 && $state\
    \ != 0 && $prev_state != $state) {\n            $mono = false;\n            break;\n\
    \        }\n    }\n    return $mono;\n}\n\nfunction candidate(...$args) {\n  \
    \  return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $ascending = ($l[0] <= $l[1]);\n  $n = count($l);\n  for\
    \ ($i = 1; $i < $n; $i++) {\n    if ($ascending && $l[$i - 1] > $l[$i]) {\n  \
    \    return false;\n    }\n    if (!$ascending && $l[$i - 1] < $l[$i]) {\n   \
    \   return false;\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $increasing = $decreasing = true;\n    for ($i = 0; $i\
    \ < count($l) - 1; $i++) {\n        if ($l[$i] < $l[$i + 1]) $decreasing = false;\n\
    \        if ($l[$i] > $l[$i + 1]) $increasing = false;\n    }\n    return $increasing\
    \ || $decreasing;\n}\n\nassert_options(ASSERT_BAIL, 1);\nassert(monotonic(array(1,\
    \ 2, 4, 20)));\nassert(!monotonic(array(1, 20, 4, 10)));\nassert(monotonic(array(4,\
    \ 1, 0, -10)));\necho \"OK\\n\";\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'OK

    '
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $increasing = null;\n  for ($i = 1; $i < count($l); $i++)\
    \ {\n    if ($l[$i - 1] == $l[$i]) {\n      continue;\n    }\n    if ($increasing\
    \ === null) {\n      $increasing = $l[$i - 1] < $l[$i];\n    } else if ($increasing\
    \ != ($l[$i - 1] < $l[$i])) {\n      return false;\n    }\n  }\n  return true;\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $inc = 0;\n  $dec = 0;\n  for ($i = 0; $i < count($l) - 1;\
    \ $i++) {\n    if ($l[$i] < $l[$i + 1]) {\n      $inc++;\n    } elseif ($l[$i]\
    \ > $l[$i + 1]) {\n      $dec++;\n    }\n  }\n  return ($inc == count($l) - 1\
    \ || $dec == count($l) - 1);\n}\n\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv_2r6ph1.php:31\n\
    Stack trace:\n#0 /tmp/tmpv_2r6ph1.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpv_2r6ph1.php\
    \ on line 31\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $trend = 0; // 0 - no trend defined\n    for ($i = 1; $i\
    \ < count($l); $i++) {\n        $currentTrend = $l[$i] - $l[$i - 1];\n       \
    \ if ($trend == 0) {\n            $trend = $currentTrend;\n        } else {\n\
    \            if (($trend > 0) and ($currentTrend < 0)) {\n                return\
    \ false;\n            }\n            if (($trend < 0) and ($currentTrend > 0))\
    \ {\n                return false;\n            }\n        }\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n\t$i = 1;\n\t$op = ($l[1] > $l[0]) ? '>' : '<';\n\twhile($i\
    \ < count($l) && eval(\"return \\$l[\\$i] $op \\$l[\\$i-1];\")) {\n\t\t$i++;\n\
    \t}\n\treturn $i == count($l);\n}\n\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpld7jy6g_.php:27\n\
    Stack trace:\n#0 /tmp/tmpld7jy6g_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpld7jy6g_.php\
    \ on line 27\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $n = sizeof($l);\n    if ($n < 2) {\n        return true;\n\
    \    }\n\n    $increasing = $l[0] < $l[1];\n    for ($i = 1; $i < $n; $i++) {\n\
    \        if ($increasing) {\n            if ($l[$i] < $l[$i - 1]) {\n        \
    \        return false;\n            }\n        } else {\n            if ($l[$i]\
    \ > $l[$i - 1]) {\n                return false;\n            }\n        }\n \
    \   }\n    return true;\n}\n\n$a = [1, 2, 4, 20];\n$b = [1, 20, 4, 10];\n$c =\
    \ [4, 1, 0, -10];\n\nvar_dump(monotonic($a));\nvar_dump(monotonic($b));\nvar_dump(monotonic($c));\n\
    function candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'bool(true)

    bool(false)

    bool(true)

    '
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n\t$nl = array_unique($l);\n\t$s = sort($nl);\n\tif($l == $nl)\
    \ return true;\n\trsort($nl);\n\tif($l == $nl) return true;\n\treturn false;\n\
    }\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk1gttx1h.php:26\n\
    Stack trace:\n#0 /tmp/tmpk1gttx1h.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpk1gttx1h.php\
    \ on line 26\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n\t$lt = $l[0];\n\t$flag = 0;\n\tforeach ($l as $e) {\n\t\t\
    if ($e > $lt) {\n\t\t\tif ($flag == -1) return false;\n\t\t\t$flag = 1;\n\t\t\
    } elseif ($e < $lt) {\n\t\t\tif ($flag == 1) return false;\n\t\t\t$flag = -1;\n\
    \t\t}\n\t\t$lt = $e;\n\t}\n\treturn true;\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $dir = 0;\n  for ($i = 1; $i < count($l); $i++) {\n    if\
    \ ($l[$i] - $l[$i - 1] != 0) {\n      if ($dir == 0) {\n        $dir = $l[$i]\
    \ - $l[$i - 1];\n      } else {\n        if (($l[$i] - $l[$i - 1]) / $dir < 0)\
    \ {\n          return false;\n        }\n      }\n    }\n  }\n  return true;\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $i = 0;\n  while ($i < count($l)-1) {\n    if ($l[$i] < $l[$i+1])\
    \ {\n      $inc = true;\n      $i++;\n    } else if ($l[$i] > $l[$i+1]) {\n  \
    \    $dec = true;\n      $i++;\n    } else {\n      $i++;\n    }\n  }\n  if (isset($inc)\
    \ && isset($dec)) {\n    return false;\n  } else {\n    return true;\n  }\n}\n\
    \nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n\t$t = null;\n\tfor ($i = 0; $i < count($l) - 1; $i++) {\n\t\
    \tif ($l[$i] < $l[$i + 1]) {\n\t\t\tif ($t !== null && $t !== true) {\n\t\t\t\t\
    return false;\n\t\t\t}\n\t\t\t$t = true;\n\t\t} else if ($l[$i] > $l[$i + 1])\
    \ {\n\t\t\tif ($t !== null && $t !== false) {\n\t\t\t\treturn false;\n\t\t\t}\n\
    \t\t\t$t = false;\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $inc = True;\n    $dec = True;\n    $p = $l[0];\n    foreach($l\
    \ as $c) {\n        if ($c > $p) {\n            $dec = False;\n        }\n   \
    \     if ($c < $p) {\n            $inc = False;\n        }\n        $p = $c;\n\
    \    }\n    return $inc || $dec;\n}\n\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  // must have 2 or more elements\n  if (count($l) < 2) return\
    \ true;\n  // pick first element as sample and compare rest of the elements\n\
    \  $a = $l[0];\n  for ($i = 1; $i < count($l); $i++) {\n    if ($a > $l[$i]) {\n\
    \      // sample is greater than the value, so check that rest of the values are\
    \ also greater than previous\n      for ($j = $i + 1; $j < count($l); $j++) {\n\
    \        if ($l[$j] >= $l[$j - 1]) {\n          return false;\n        }\n   \
    \   }\n      return true;\n    } else if ($a < $l[$i]) {\n      // sample is less\
    \ than the value, so check that rest of the values are also less than previous\n\
    \      for ($j = $i + 1; $j < count($l); $j++) {\n        if ($l[$j] <= $l[$j\
    \ - 1]) {\n          return false;\n        }\n      }\n      return true;\n \
    \   }\n  }\n  return true;\n}\n\nvar_dump(monotonic(array(1, 2, 4, 20)));\nvar_dump(monotonic(array(1,\
    \ 20, 4, 10)));\nvar_dump(monotonic(array(4, 1, 0, -10)));\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "bool(true)\nbool(false)\nbool(true)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpsbhibnha.php:48\nStack trace:\n#0 /tmp/tmpsbhibnha.php(54):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpsbhibnha.php on line 48\n"
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $check = 0;\n    $is_equal = 0;\n    for ($i = 0; $i <\
    \ count($l); $i++) {\n        if (isset($l[$i + 1])) {\n            if ($l[$i]\
    \ > $l[$i + 1]) {\n                $check += 1;\n            } else if ($l[$i]\
    \ < $l[$i + 1]) {\n                $check -= 1;\n            } else {\n      \
    \          $is_equal += 1;\n            }\n        }\n    }\n    if ($check ==\
    \ 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n\
    function candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphrhgxyy5.php:35\n\
    Stack trace:\n#0 /tmp/tmphrhgxyy5.php(45): test()\n#1 {main}\n  thrown in /tmp/tmphrhgxyy5.php\
    \ on line 35\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $dir = null;\n    for ($i = 1; $i < count($l); $i++) {\n\
    \        if ($dir === null) {\n            $dir = $l[$i] - $l[$i - 1];\n     \
    \   } else {\n            if ($dir * ($l[$i] - $l[$i - 1]) < 0) {\n          \
    \      return false;\n            }\n        }\n    }\n    return true;\n}\n\n\
    function candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    return $l == array_merge(range(min($l), max($l)), array_diff($l,\
    \ range(min($l), max($l))));\n}\nprint monotonic(array(1, 2, 4, 20)) ? \"true\\\
    n\" : \"false\\n\";\nprint monotonic(array(1, 20, 4, 10)) ? \"true\\n\" : \"false\\\
    n\";\nprint monotonic(array(4, 1, 0, -10)) ? \"true\\n\" : \"false\\n\";\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "false\nfalse\nfalse\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmputbu6ynb.php:20\nStack trace:\n#0 /tmp/tmputbu6ynb.php(30): test()\n\
    #1 {main}\n  thrown in /tmp/tmputbu6ynb.php on line 20\n"
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n\tif (sizeof($l) <= 1) return true;\n\telse if ($l[0] < $l[1])\
    \ return monotonic(array_slice($l, 1)) && all($l, \"less_than\");\n\telse if ($l[0]\
    \ > $l[1]) return monotonic(array_slice($l, 1)) && all($l, \"greater_than\");\n\
    \telse return monotonic(array_slice($l, 1));\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function all() in /tmp/tmp9lnkn41f.php:11\n\
    Stack trace:\n#0 /tmp/tmp9lnkn41f.php(11): monotonic(Array)\n#1 /tmp/tmp9lnkn41f.php(11):\
    \ monotonic(Array)\n#2 /tmp/tmp9lnkn41f.php(17): monotonic(Array)\n#3 /tmp/tmp9lnkn41f.php(21):\
    \ candidate(Array)\n#4 /tmp/tmp9lnkn41f.php(31): test()\n#5 {main}\n  thrown in\
    \ /tmp/tmp9lnkn41f.php on line 11\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n\t$i = 0;\n\t$n = count($l);\n\tif ($n < 2) return true;\n\t\
    $x = $l[0];\n\t$sign = null;\n\twhile ($i < $n) {\n\t\t$y = $l[$i];\n\t\tif ($x\
    \ != $y) {\n\t\t\t$s = $y - $x;\n\t\t\tif ($sign === null) {\n\t\t\t\t$sign =\
    \ $s;\n\t\t\t} else if ($sign * $s < 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\
    }\n\t\t$x = $y;\n\t\t$i += 1;\n\t}\n\treturn true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $length = count($l);\n  if ($length <= 1) {\n    return true;\n\
    \  }\n\n  $diff = $l[1] - $l[0];\n  if ($diff == 0) {\n    return false;\n  }\n\
    \n  $increasing = $diff > 0;\n  for ($i = 1; $i < $length; $i++) {\n    $diff\
    \ = $l[$i] - $l[$i - 1];\n    if ($diff == 0) {\n      return false;\n    }\n\n\
    \    if ($increasing && $diff < 0) {\n      return false;\n    }\n\n    if (!$increasing\
    \ && $diff > 0) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn3xmlvro.php:48\n\
    Stack trace:\n#0 /tmp/tmpn3xmlvro.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpn3xmlvro.php\
    \ on line 48\n"
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n\tif(count($l) == 1) return true;\n\tif($l[0] < $l[1]) {\n\t\
    \tforeach(array_slice($l, 1) as $i => $e) {\n\t\t\tif($e > $l[$i]) {\n\t\t\t\t\
    return false;\n\t\t\t}\n\t\t}\n\t} else if($l[0] > $l[1]) {\n\t\tforeach(array_slice($l,\
    \ 1) as $i => $e) {\n\t\t\tif($e < $l[$i]) {\n\t\t\t\treturn false;\n\t\t\t}\n\
    \t\t}\n\t}\n\treturn true;\n}\n$inputs = array(\n\tarray(1, 2, 4, 20),\n\tarray(1,\
    \ 20, 4, 10),\n\tarray(4, 1, 0, -10),\n);\nforeach($inputs as $i) {\n\tprint_r(monotonic($i));\n\
    \techo \"\\n\";\n}\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnkev0ijh.php:40\n\
    Stack trace:\n#0 /tmp/tmpnkev0ijh.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpnkev0ijh.php\
    \ on line 40\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n\t$a = array_values($l);\n\t$flip = $a == array_reverse($a);\n\
    \t$inc = false;\n\tfor ($i = 0; $i < count($a) - 1; $i++) {\n\t\tif ($a[$i] ==\
    \ $a[$i + 1])\n\t\t\tcontinue;\n\t\tif (!$inc)\n\t\t\t$inc = $a[$i] < $a[$i +\
    \ 1];\n\t\tif ($flip)\n\t\t\t$inc = !$inc;\n\t\tif ($inc != ($a[$i] < $a[$i +\
    \ 1]))\n\t\t\treturn false;\n\t}\n\treturn true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $diff = $l[1] - $l[0];\n    foreach (array_slice($l, 2)\
    \ as $e) {\n        if ($diff * ($e - $l[0]) < 0) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n   \
    \ return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplxm7f7cu.php:26\n\
    Stack trace:\n#0 /tmp/tmplxm7f7cu.php(34): test()\n#1 {main}\n  thrown in /tmp/tmplxm7f7cu.php\
    \ on line 26\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n\tif (count($l)<2) return true;\n\tif ($l[0] < $l[1]) {\n\t\
    \tfor ($i=1; $i<count($l)-1; $i++) {\n\t\t\tif ($l[$i]>$l[$i+1]) return false;\n\
    \t\t}\n\t} else if ($l[0] > $l[1]) {\n\t\tfor ($i=1; $i<count($l)-1; $i++) {\n\
    \t\t\tif ($l[$i]<$l[$i+1]) return false;\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n\tif (count($l)<2) {\n\t\treturn true;\n\t} else {\n\t\t$diff\
    \ = $l[1]-$l[0];\n\t\tfor ($i=1; $i<count($l); $i++) {\n\t\t\tif ($diff * ($l[$i]-$l[$i-1])\
    \ < 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}\n\n\
    function candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $id = $l[0] < $l[1];\n    for ($i = 1; $i < count($l) -\
    \ 1; $i++) {\n        if ($id != ($l[$i] < $l[$i + 1])) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\n$a = array(1, 2, 4, 20);\n\
    $b = array(1, 20, 4, 10);\n$c = array(4, 1, 0, -10);\n\necho monotonic($a) . '\
    \ ' . monotonic($b) . ' ' . monotonic($c);\nfunction candidate(...$args) {\n \
    \   return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1  1
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $last = $l[0];\n    $incr = 0;\n    $decr = 0;\n    foreach\
    \ ($l as $i) {\n        if ($i > $last) {\n            $incr++;\n        } elseif\
    \ ($i < $last) {\n            $decr++;\n        }\n        $last = $i;\n    }\n\
    \    return $incr * $decr == 0;\n}\n\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n\treturn (\n\t\t$l[0] < $l[1] && $l[1] < $l[2] && $l[2] < $l[3]\
    \ ||\n\t\t$l[0] > $l[1] && $l[1] > $l[2] && $l[2] > $l[3]\n\t);\n}\n\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_8hkkioa.php:25\n\
    Stack trace:\n#0 /tmp/tmp_8hkkioa.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp_8hkkioa.php\
    \ on line 25\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $desc = false;\n  for ($i = 1; $i < count($l); $i++) {\n\
    \    if ($l[$i - 1] < $l[$i]) {\n      if ($desc) {\n        return false;\n \
    \     }\n    } elseif ($l[$i - 1] > $l[$i]) {\n      if (!$desc) {\n        $desc\
    \ = true;\n      }\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $len = count($l);\n  for ($i = 0; $i < $len - 1; $i++) {\n\
    \    if ($l[$i] == $l[$i + 1]) {\n      // Skip over adjacent same values.\n \
    \     continue;\n    }\n    if (($l[$i] > $l[$i + 1]) && ($l[$i] <= $l[$i + 1]\
    \ + 1)) {\n      // Decreasing.\n      $decreasing = true;\n    } else if (($l[$i]\
    \ < $l[$i + 1]) && ($l[$i] >= $l[$i + 1] - 1)) {\n      // Increasing.\n     \
    \ $increasing = true;\n    } else {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr4cszhtj.php:34\n\
    Stack trace:\n#0 /tmp/tmpr4cszhtj.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpr4cszhtj.php\
    \ on line 34\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $increasing = true;\n  $decreasing = true;\n  for ($i = 1;\
    \ $i < count($l); $i++) {\n    if ($l[$i] < $l[$i - 1]) {\n      $increasing =\
    \ false;\n    }\n    if ($l[$i] > $l[$i - 1]) {\n      $decreasing = false;\n\
    \    }\n  }\n  return $increasing || $decreasing;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n\t$direction = null;\n\tfor ($i = 0; $i < count($l) - 1; $i++)\
    \ {\n\t\tif ($l[$i] === $l[$i + 1]) continue;\n\t\tif ($direction === null) {\n\
    \t\t\t$direction = $l[$i] < $l[$i + 1];\n\t\t} else {\n\t\t\tif ($direction !==\
    \ ($l[$i] < $l[$i + 1])) return false;\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $m = 1;\n    for ($i = 1; $i < count($l); $i++) {\n   \
    \     if ($l[$i] > $l[$i - 1]) {\n            if ($m == -1) {\n              \
    \  return false;\n            }\n            $m = 1;\n        } else if ($l[$i]\
    \ < $l[$i - 1]) {\n            if ($m == 1) {\n                return false;\n\
    \            }\n            $m = -1;\n        }\n    }\n    return true;\n}\n\n\
    function candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpenmj7v_g.php:35\n\
    Stack trace:\n#0 /tmp/tmpenmj7v_g.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpenmj7v_g.php\
    \ on line 35\n"
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $c = $l[0];\n  $a = $b = $i = 1;\n  while (++$i < count($l))\
    \ {\n    if ($l[$i] > $c) $a = 1;\n    else if ($l[$i] < $c) $b = 1;\n    else\
    \ return false;\n    $c = $l[$i];\n  }\n  return ($a & $b) ? false : true;\n}\n\
    \nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvieczxr9.php:26\n\
    Stack trace:\n#0 /tmp/tmpvieczxr9.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpvieczxr9.php\
    \ on line 26\n"
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  // ...\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxpwdpho8.php:18\n\
    Stack trace:\n#0 /tmp/tmpxpwdpho8.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpxpwdpho8.php\
    \ on line 18\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  // TODO\n  $increasing = false;\n  $decreasing = false;\n\
    \  $check = true;\n  $count = count($l);\n  $current = $l[0];\n  for ($i = 1;\
    \ $i < $count; $i++) {\n    if ($l[$i] > $current) {\n      $increasing = true;\n\
    \    } else if ($l[$i] < $current) {\n      $decreasing = true;\n    }\n    if\
    \ ($increasing && $decreasing) {\n      $check = false;\n      break;\n    }\n\
    \    $current = $l[$i];\n  }\n  return $check;\n}\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n\t$n = count($l);\n\t$t = -1;\n\t$i = 0;\n\twhile($i < $n)\
    \ {\n\t\tif($i > 0) {\n\t\t\tif($t == -1) {\n\t\t\t\tif($l[$i] > $l[$i - 1]) {\n\
    \t\t\t\t\t$t = 1;\n\t\t\t\t} else if($l[$i] < $l[$i - 1]) {\n\t\t\t\t\t$t = 0;\n\
    \t\t\t\t}\n\t\t\t} else if($t == 1) {\n\t\t\t\tif($l[$i] < $l[$i - 1]) {\n\t\t\
    \t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if($t == 0) {\n\t\t\t\tif($l[$i]\
    \ > $l[$i - 1]) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t$i\
    \ = $i + 1;\n\t}\n\treturn true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $comparison = $l[0] < $l[1] ? '<' : '>';\n    for ($i =\
    \ 0; $i < count($l); $i++) {\n        if ($i + 1 < count($l) && !eval(\"return\
    \ {$l[$i]} {$comparison} {$l[$i + 1]};\")) {\n            return false;\n    \
    \    }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp735fp9bm.php:28\n\
    Stack trace:\n#0 /tmp/tmp735fp9bm.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp735fp9bm.php\
    \ on line 28\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  if (count($l) <= 1) return true;\n  $order = $l[1] - $l[0];\n\
    \  for ($i = 1; $i < count($l) - 1; $i++) {\n    if ($order * ($l[$i+1] - $l[$i])\
    \ < 0) return false;\n  }\n  return true;\n}\n\n$a = array(1, 2, 4, 20);\n$b =\
    \ array(1, 20, 4, 10);\n$c = array(4, 1, 0, -10);\n$d = array(1, 2, 2, 2);\n\n\
    assert(monotonic($a));\nassert(!monotonic($b));\nassert(monotonic($c));\nassert(monotonic($d));\n\
    function candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    // Write your code here\n    // To print results to the\
    \ standard output you can use print\n    // Example: print \"Hello world!\";\n\
    }\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp09w_v9ur.php:19\n\
    Stack trace:\n#0 /tmp/tmp09w_v9ur.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp09w_v9ur.php\
    \ on line 19\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  if (count($l) <= 1) {\n    return true;\n  }\n  $delta =\
    \ $l[1] - $l[0];\n  $monotonic = true;\n  $end = count($l);\n  for ($i = 1; $i\
    \ < $end; $i++) {\n    if (($l[$i] - $l[$i - 1]) * $delta < 0) {\n      $monotonic\
    \ = false;\n      break;\n    }\n  }\n  return $monotonic;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $inc = 0;\n    $dec = 0;\n    for ($i = 0; $i < count($l);\
    \ $i++) {\n        if ($l[$i + 1] > $l[$i]) {\n            $inc++;\n        }\
    \ elseif ($l[$i + 1] < $l[$i]) {\n            $dec++;\n        }\n    }\n    if\
    \ ($inc == count($l) - 1 || $dec == count($l) - 1) {\n        return true;\n \
    \   } else {\n        return false;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 4 in /tmp/tmpkgfxae8h.php on line 13\n\n\
    Warning: Undefined array key 4 in /tmp/tmpkgfxae8h.php on line 15\n\nWarning:\
    \ Undefined array key 4 in /tmp/tmpkgfxae8h.php on line 13\n\nWarning: Undefined\
    \ array key 4 in /tmp/tmpkgfxae8h.php on line 15\n\nWarning: Undefined array key\
    \ 4 in /tmp/tmpkgfxae8h.php on line 13\n\nWarning: Undefined array key 4 in /tmp/tmpkgfxae8h.php\
    \ on line 15\n\nWarning: Undefined array key 4 in /tmp/tmpkgfxae8h.php on line\
    \ 13\n\nWarning: Undefined array key 4 in /tmp/tmpkgfxae8h.php on line 15\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpkgfxae8h.php:34\nStack\
    \ trace:\n#0 /tmp/tmpkgfxae8h.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpkgfxae8h.php\
    \ on line 34\n"
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    if(count($l) <= 1) {\n        return true;\n    }\n   \
    \ $res = true;\n    $prev = $l[0];\n    for($i = 1; $i < count($l); $i++) {\n\
    \        if($prev >= $l[$i]) {\n            $res = false;\n            break;\n\
    \        }\n        $prev = $l[$i];\n    }\n    if($res) {\n        return true;\n\
    \    }\n    $res = true;\n    $prev = $l[0];\n    for($i = 1; $i < count($l);\
    \ $i++) {\n        if($prev <= $l[$i]) {\n            $res = false;\n        \
    \    break;\n        }\n        $prev = $l[$i];\n    }\n    return $res;\n}\n\
    $l = array(1, 2, 4, 20);\nvar_dump(monotonic($l));\n$l = array(1, 20, 4, 10);\n\
    var_dump(monotonic($l));\n$l = array(4, 1, 0, -10);\nvar_dump(monotonic($l));\n\
    function candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "bool(true)\nbool(false)\nbool(true)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpeusvffjz.php:51\nStack trace:\n#0 /tmp/tmpeusvffjz.php(57):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpeusvffjz.php on line 51\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n\t$prev = NULL;\n\t$direction = NULL;\n\tforeach ($l as $i)\
    \ {\n\t\tif ($prev !== NULL) {\n\t\t\tif ($direction === NULL) {\n\t\t\t\t$direction\
    \ = $i > $prev ? 1 : -1;\n\t\t\t} else if ($direction == 1 && $i < $prev) {\n\t\
    \t\t\treturn false;\n\t\t\t} else if ($direction == -1 && $i > $prev) {\n\t\t\t\
    \treturn false;\n\t\t\t}\n\t\t}\n\t\t$prev = $i;\n\t}\n\treturn true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n\t$n = count($l);\n\tif ($n < 2) {\n\t\treturn false;\n\t}\n\
    \t$increasing = $l[0] < $l[1];\n\tfor ($i = 1; $i < $n - 1; $i++) {\n\t\tif (($l[$i]\
    \ < $l[$i + 1]) != $increasing) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $order = 0;\n    $len = count($l);\n    if ($len > 1) {\n\
    \        $order = ($l[1] > $l[0]) ? 1 : -1;\n        for ($i = 2; $i < $len; $i++)\
    \ {\n            if (($l[$i] - $l[$i - 1]) * $order < 0) {\n                return\
    \ false;\n            }\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    if (sizeof($l) <= 1) return true;\n    if (sizeof($l) ==\
    \ 2) {\n        return ($l[0] <= $l[1]) || ($l[0] >= $l[1]);\n    }\n    $delta\
    \ = ($l[1] - $l[0]);\n    for ($i = 2; $i < sizeof($l); $i++) {\n        if (($l[$i]\
    \ - $l[$i - 1]) * $delta < 0) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $mono = true;\n  $dir = 0;\n  foreach ($l as $i => $e) {\n\
    \    if ($i > 0) {\n      if ($dir == 0) {\n        if ($e - $prev > 0) {\n  \
    \        $dir = 1;\n        } else if ($e - $prev < 0) {\n          $dir = -1;\n\
    \        }\n      } else {\n        if ($dir > 0 && $e - $prev < 0) {\n      \
    \    $mono = false;\n          break;\n        } else if ($dir < 0 && $e - $prev\
    \ > 0) {\n          $mono = false;\n          break;\n        }\n      }\n   \
    \ }\n    $prev = $e;\n  }\n  return $mono;\n}\n\nassert(monotonic(array(1, 2,\
    \ 4, 20)));\nassert(!monotonic(array(1, 20, 4, 10)));\nassert(monotonic(array(4,\
    \ 1, 0, -10)));\nassert(monotonic(array(1, 2, 3, 4)));\nassert(monotonic(array(4,\
    \ 3, 2, 1)));\nassert(monotonic(array(1, 0, -1, -2)));\nassert(monotonic(array(-2,\
    \ -1, 0, 1)));\nassert(!monotonic(array(1, 1, 1, 1)));\nassert(!monotonic(array(1,\
    \ 2, 3, 2)));\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught AssertionError: assert(!monotonic([1, 1, 1, 1]))\
    \ in /tmp/tmphdh81ret.php:42\nStack trace:\n#0 /tmp/tmphdh81ret.php(42): assert(false,\
    \ 'assert(!monoton...')\n#1 {main}\n  thrown in /tmp/tmphdh81ret.php on line 42\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $increasing = true;\n    $decreasing = true;\n    for ($i\
    \ = 1; $i < count($l); $i++) {\n        if ($l[$i] < $l[$i - 1]) {\n         \
    \   $increasing = false;\n        }\n        if ($l[$i] > $l[$i - 1]) {\n    \
    \        $decreasing = false;\n        }\n    }\n    return $increasing || $decreasing;\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    // your code here\n    $temp = $l[0];\n    $count = 0;\n\
    \    $result = true;\n    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i]\
    \ >= $temp) {\n            $temp = $l[$i];\n            $count++;\n        } else\
    \ {\n            $temp = $l[$i];\n            $count--;\n        }\n    }\n  \
    \  if ($count != count($l) - 1 && $count != -(count($l) - 1)) {\n        $result\
    \ = false;\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n  \
    \  return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoflzfdgd.php:37\n\
    Stack trace:\n#0 /tmp/tmpoflzfdgd.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpoflzfdgd.php\
    \ on line 37\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $type = $l[0] < $l[1] ? 'inc' : 'dec';\n    for ($i = 0;\
    \ $i < count($l) - 1; $i++) {\n        if ($type == 'inc' && $l[$i] > $l[$i +\
    \ 1]) {\n            return false;\n        }\n        if ($type == 'dec' && $l[$i]\
    \ < $l[$i + 1]) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  if (count($l) <= 1) {\n    return true;\n  }\n  $inc = true;\n\
    \  $dec = true;\n  for ($i = 1; $i < count($l); $i++) {\n    if ($l[$i] < $l[$i\
    \ - 1]) {\n      $inc = false;\n    }\n    if ($l[$i] > $l[$i - 1]) {\n      $dec\
    \ = false;\n    }\n  }\n  return $inc || $dec;\n}\n\n$tests = array(\n  array(1,\
    \ 2, 4, 20),\n  array(1, 20, 4, 10),\n  array(4, 1, 0, -10),\n);\n\nforeach ($tests\
    \ as $test) {\n  var_dump(monotonic($test));\n}\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'bool(true)

    bool(false)

    bool(true)

    '
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $pre = $l[0];\n    $sign = null;\n    foreach ($l as $v)\
    \ {\n        if ($pre == $v) continue;\n        if ($sign == null) {\n       \
    \     $sign = ($pre < $v) ? 1 : -1;\n        } else {\n            if ($sign *\
    \ ($pre - $v) <= 0) return false;\n        }\n        $pre = $v;\n    }\n    return\
    \ true;\n}\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9rxzr098.php:28\n\
    Stack trace:\n#0 /tmp/tmp9rxzr098.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp9rxzr098.php\
    \ on line 28\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $direction = null;\n    $previous = null;\n    foreach\
    \ ($l as $number) {\n        if ($previous == null) {\n            $previous =\
    \ $number;\n            continue;\n        }\n        if ($direction == null)\
    \ {\n            $direction = $number > $previous ? 1 : ($number < $previous ?\
    \ -1 : 0);\n            $previous = $number;\n            continue;\n        }\n\
    \        if ($direction == 0) {\n            continue;\n        }\n        if\
    \ (($direction == 1 && $number >= $previous) || ($direction == -1 && $number <=\
    \ $previous)) {\n            $previous = $number;\n            continue;\n   \
    \     }\n        return false;\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n\t$i = 0;\n\t$len = count($l);\n\t$sign = $l[0] < $l[1] ? 1\
    \ : -1;\n\twhile ($i < $len - 1) {\n\t\tif ($sign == 1 && $l[$i] > $l[$i + 1])\
    \ {\n\t\t\treturn false;\n\t\t}\n\t\tif ($sign == -1 && $l[$i] < $l[$i + 1]) {\n\
    \t\t\treturn false;\n\t\t}\n\t\t$i++;\n\t}\n\treturn true;\n}\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $inc = $dec = true;\n  for ($i = 1; $i < count($l); $i++)\
    \ {\n    if ($l[$i] < $l[$i - 1]) $inc = false;\n    if ($l[$i] > $l[$i - 1])\
    \ $dec = false;\n  }\n  return $inc || $dec;\n}\n\nif (monotonic(array(1, 2, 4,\
    \ 20))) {\n  echo \"true\\n\";\n} else {\n  echo \"false\\n\";\n}\n\nif (monotonic(array(1,\
    \ 20, 4, 10))) {\n  echo \"true\\n\";\n} else {\n  echo \"false\\n\";\n}\n\nif\
    \ (monotonic(array(4, 1, 0, -10))) {\n  echo \"true\\n\";\n} else {\n  echo \"\
    false\\n\";\n}\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'true

    false

    true

    '
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $asc = null;\n    $prev = null;\n    foreach ($l as $v)\
    \ {\n        if ($prev === null) {\n            $prev = $v;\n            continue;\n\
    \        }\n        if ($v === $prev) {\n            continue;\n        }\n  \
    \      if ($asc === null) {\n            $asc = $v > $prev;\n        }\n     \
    \   if ($asc !== ($v > $prev)) {\n            return false;\n        }\n     \
    \   $prev = $v;\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n\
    \    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n\tif (count($l) <= 1) {\n\t\treturn true;\n\t}\n\n\t$diff =\
    \ $l[1] - $l[0];\n\t$test = $diff < 0 ? '<' : '>';\n\tfor ($i = 1; $i < count($l);\
    \ $i++) {\n\t\tif (($l[$i] - $l[$i - 1]) != $diff) {\n\t\t\treturn false;\n\t\t\
    }\n\t}\n\treturn true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvzzvyap3.php:29\n\
    Stack trace:\n#0 /tmp/tmpvzzvyap3.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpvzzvyap3.php\
    \ on line 29\n"
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $diff = array_map(function($a, $b) { return $a - $b; },\
    \ $l, array_slice($l, 1));\n    $inc = array_reduce($diff, function($carry, $item)\
    \ {\n        return $carry || $item > 0;\n    }, false);\n    $dec = array_reduce($diff,\
    \ function($carry, $item) {\n        return $carry || $item < 0;\n    }, false);\n\
    \    return !$inc || !$dec;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvd0eu491.php:25\n\
    Stack trace:\n#0 /tmp/tmpvd0eu491.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpvd0eu491.php\
    \ on line 25\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $increasing = 1;\n  $decreasing = 1;\n  foreach($l as $i\
    \ => $v) {\n    if ($i > 0) {\n      if ($v > $l[$i-1]) $decreasing = 0;\n   \
    \   if ($v < $l[$i-1]) $increasing = 0;\n    }\n  }\n  return $increasing || $decreasing;\n\
    }\n\necho monotonic(array(1, 2, 4, 20)) ? \"true\" : \"false\";\necho \"\\n\"\
    ;\necho monotonic(array(1, 20, 4, 10)) ? \"true\" : \"false\";\necho \"\\n\";\n\
    echo monotonic(array(4, 1, 0, -10)) ? \"true\" : \"false\";\necho \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'true

    false

    true

    '
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $l = $l->toArray();\n  if (count($l) < 2) {\n    return false;\n\
    \  }\n  $direction = ($l[1] - $l[0]) / abs($l[1] - $l[0]);\n  foreach ($l as $idx\
    \ => $val) {\n    if ($idx + 1 >= count($l)) {\n      break;\n    }\n    $curr_direction\
    \ = ($l[$idx + 1] - $val) / abs($l[$idx + 1] - $val);\n    if ($curr_direction\
    \ != $direction) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to a member function toArray() on array\
    \ in /tmp/tmpk9qysm_z.php:10\nStack trace:\n#0 /tmp/tmpk9qysm_z.php(28): monotonic(Array)\n\
    #1 /tmp/tmpk9qysm_z.php(32): candidate(Array)\n#2 /tmp/tmpk9qysm_z.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpk9qysm_z.php on line 10\n"
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  if (sizeof($l) < 3) {\n    return true;\n  }\n\n  $n = 0;\n\
    \  for ($i = 1; $i < sizeof($l); $i++) {\n    if ($l[$i] > $l[$i - 1]) {\n   \
    \   $n += 1;\n    } elseif ($l[$i] < $l[$i - 1]) {\n      $n -= 1;\n    }\n  }\n\
    \n  return abs($n) === sizeof($l) - 1;\n}\n\n$tests = array(\n    array(1, 2,\
    \ 4, 20),\n    array(1, 20, 4, 10),\n    array(4, 1, 0, -10),\n);\n\nforeach ($tests\
    \ as $test) {\n  var_dump(monotonic($test));\n}\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "bool(true)\nbool(false)\nbool(true)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmprlafizzb.php:44\nStack trace:\n#0 /tmp/tmprlafizzb.php(50):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmprlafizzb.php on line 44\n"
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $arraySize = count($l);\n    if($arraySize < 2) return\
    \ true;\n    $differences = array();\n    for($i = 0; $i < $arraySize-1; $i++)\
    \ {\n        $differences[] = $l[$i+1] - $l[$i];\n    }\n    $isIncreasing = $differences[0]\
    \ > 0;\n    $isDecreasing = $differences[0] < 0;\n    $isAllIncreasing = array_reduce($differences,\
    \ function($carry, $value) {\n        return $carry && $value > 0;\n    }, true);\n\
    \    $isAllDecreasing = array_reduce($differences, function($carry, $value) {\n\
    \        return $carry && $value < 0;\n    }, true);\n    return $isIncreasing\
    \ && $isAllIncreasing || $isDecreasing && $isAllDecreasing;\n}\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphwbewasm.php:35\n\
    Stack trace:\n#0 /tmp/tmphwbewasm.php(41): test()\n#1 {main}\n  thrown in /tmp/tmphwbewasm.php\
    \ on line 35\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $asc = true;\n  $des = true;\n  for ($i = 1; $i < count($l);\
    \ $i++) {\n    if ($l[$i] > $l[$i - 1]) {\n      $des = false;\n    }\n    if\
    \ ($l[$i] < $l[$i - 1]) {\n      $asc = false;\n    }\n  }\n  return $asc || $des;\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n\t$asc = $dsc = true;\n\tfor ($i = 1; $i < count($l); $i++)\
    \ {\n\t\tif ($l[$i] > $l[$i - 1]) {\n\t\t\t$dsc = false;\n\t\t} elseif ($l[$i]\
    \ < $l[$i - 1]) {\n\t\t\t$asc = false;\n\t\t}\n\t}\n\treturn $asc || $dsc;\n}\n\
    \nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $a = $l[0];\n    $b = $l[1];\n    if ($a <= $b) {\n   \
    \     $lt = true;\n    } else {\n        $lt = false;\n    }\n    for ($i = 2;\
    \ $i < count($l); $i++) {\n        if ($lt) {\n            if ($b > $l[$i]) {\n\
    \                return false;\n            }\n        } else {\n            if\
    \ ($b < $l[$i]) {\n                return false;\n            }\n        }\n \
    \       $b = $l[$i];\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $cmp = null;\n  foreach($l as $i => $v) {\n    if ($i ==\
    \ 0) {\n      $cmp = $v;\n      continue;\n    }\n    if ($v > $cmp) {\n     \
    \ $cmp = $v;\n    } else if ($v < $cmp) {\n      return false;\n    }\n  }\n \
    \ return true;\n}\n\nvar_dump(monotonic(array(1, 2, 4, 20)));\nvar_dump(monotonic(array(1,\
    \ 20, 4, 10)));\nvar_dump(monotonic(array(4, 1, 0, -10)));\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "bool(true)\nbool(false)\nbool(false)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpvcjj4kq6.php:36\nStack trace:\n#0 /tmp/tmpvcjj4kq6.php(43):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpvcjj4kq6.php on line 36\n"
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  $nl = count($l);\n  if ($nl <= 1) {\n    return true;\n \
    \ }\n  $j = $l[0];\n  $min = $j;\n  $max = $j;\n  $mono = false;\n  for ($i =\
    \ 1; $i < $nl; $i++) {\n    $j = $l[$i];\n    if ($min > $j) {\n      $min = $j;\n\
    \    }\n    if ($max < $j) {\n      $max = $j;\n    }\n  }\n  if ($min == $max)\
    \ {\n    $mono = true;\n  } else {\n    $d = $min;\n    for ($i = 0; $i < $nl;\
    \ $i++) {\n      $j = $l[$i];\n      if ($j == $d) {\n        continue;\n    \
    \  }\n      if (($j - $d) / ($max - $min) >= 0) {\n        $mono = true;\n   \
    \   } else {\n        $mono = false;\n        break;\n      }\n      $d = $j;\n\
    \    }\n  }\n  return $mono;\n}\n\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp84zntbty.php:56\n\
    Stack trace:\n#0 /tmp/tmp84zntbty.php(63): test()\n#1 {main}\n  thrown in /tmp/tmp84zntbty.php\
    \ on line 56\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n\t$i = 0;\n\t$j = count($l);\n\t$dir = 0;\n\twhile ($i + 1\
    \ < $j) {\n\t\tif ($l[$i] < $l[$i + 1]) {\n\t\t\tif ($dir < 0) {\n\t\t\t\treturn\
    \ false;\n\t\t\t}\n\t\t\t$dir = 1;\n\t\t} else if ($l[$i] > $l[$i + 1]) {\n\t\t\
    \tif ($dir > 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t$dir = -1;\n\t\t}\n\t\
    \t$i++;\n\t}\n\treturn true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $monotonic_increase = true;\n    $monotonic_decrease =\
    \ true;\n    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i] < $l[$i\
    \ - 1]) {\n            $monotonic_increase = false;\n        }\n        if ($l[$i]\
    \ > $l[$i - 1]) {\n            $monotonic_decrease = false;\n        }\n    }\n\
    \    return $monotonic_increase || $monotonic_decrease;\n}\nfunction candidate(...$args)\
    \ {\n    return monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    if (is_array($l)) {\n        // Find the minimum and maximum\
    \ elements\n        $n = count($l);\n        $min = $l[0];\n        $max = $l[0];\n\
    \        for ($i = 1; $i < $n; $i++) {\n            if ($l[$i] < $min) $min =\
    \ $l[$i];\n            if ($l[$i] > $max) $max = $l[$i];\n        }\n        //\
    \ Check if the elements are either in increasing order or decreasing order\n \
    \       for ($i = 1; $i < $n; $i++) {\n            if ($l[$i] > $l[$i-1] && $max\
    \ == $l[$i]) return true;\n            if ($l[$i] < $l[$i-1] && $min == $l[$i])\
    \ return true;\n        }\n    }\n    return false;\n}\n\n$arr = array(1, 2, 4,\
    \ 20);\nvar_dump(monotonic($arr));\n\n$arr = array(1, 20, 4, 10);\nvar_dump(monotonic($arr));\n\
    \n$arr = array(4, 1, 0, -10);\nvar_dump(monotonic($arr));\n\n$arr = array(9, 4,\
    \ 1, 0, -10);\nvar_dump(monotonic($arr));\n\n$arr = array(9, 4, 1, 0, -10, -11);\n\
    var_dump(monotonic($arr));\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "bool(true)\nbool(true)\nbool(true)\nbool(true)\nbool(true)\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpkcpc105r.php:50\nStack trace:\n\
    #0 /tmp/tmpkcpc105r.php(58): test()\n#1 {main}\n  thrown in /tmp/tmpkcpc105r.php\
    \ on line 50\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    if (count($l) < 2) return true;\n    $p = $l[0];\n    $increasing\
    \ = $p < $l[1];\n    for ($i = 1; $i < count($l); $i++) {\n        if ($increasing)\
    \ {\n            if ($l[$i] < $p) return false;\n        } else {\n          \
    \  if ($l[$i] > $p) return false;\n        }\n        $p = $l[$i];\n    }\n  \
    \  return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    return (is_monotonic_increasing($l) || is_monotonic_decreasing($l));\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function is_monotonic_increasing()\
    \ in /tmp/tmpkzisepip.php:10\nStack trace:\n#0 /tmp/tmpkzisepip.php(14): monotonic(Array)\n\
    #1 /tmp/tmpkzisepip.php(18): candidate(Array)\n#2 /tmp/tmpkzisepip.php(28): test()\n\
    #3 {main}\n  thrown in /tmp/tmpkzisepip.php on line 10\n"
  timestamp: 1660028639
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n  if (count($l) <= 1) {\n    return true;\n  }\n  $dec = $l[0]\
    \ > $l[1];\n  for ($i = 1; $i < count($l) - 1; $i++) {\n    if (($dec && $l[$i]\
    \ < $l[$i + 1]) || (!$dec && $l[$i] > $l[$i + 1])) {\n      return false;\n  \
    \  }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $n = count($l);\n    if ($n <= 1) {\n        return true;\n\
    \    }\n    $direction = $l[1] - $l[0];\n    for ($i = 1; $i < $n; $i++) {\n \
    \       if ($direction * ($l[$i] - $l[$i - 1]) < 0) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\nfunction candidate(...$args) {\n    return\
    \ monotonic(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 4, 10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 4, 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $inc = $dec = true;\n    for ($i = 1; $i < count($l); $i++)\
    \ {\n        if ($l[$i] > $l[$i - 1]) {\n            $dec = false;\n        }\
    \ elseif ($l[$i] < $l[$i - 1]) {\n            $inc = false;\n        }\n    }\n\
    \    return $inc || $dec;\n}\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4,\
    \ 20)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 20, 4, 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $increasing = true;\n    $decreasing = true;\n    $last\
    \ = $l[0];\n    foreach ($l as $i) {\n        if ($i < $last) {\n            $increasing\
    \ = false;\n        }\n        if ($i > $last) {\n            $decreasing = false;\n\
    \        }\n        $last = $i;\n    }\n    return $increasing || $decreasing;\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $i = count($l);\n    $dec = false;\n    $inc = false;\n\
    \    while (--$i) {\n        if ($l[$i] > $l[$i - 1]) {\n            $inc = true;\n\
    \        } else if ($l[$i] < $l[$i - 1]) {\n            $dec = true;\n       \
    \ }\n        if ($inc && $dec) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\n\nif (!isset($argv[1])) {\n    echo \"No argument\\n\";\n\
    \    exit;\n}\n\n$arr = json_decode($argv[1]);\n\nif (json_last_error() !== JSON_ERROR_NONE)\
    \ {\n    echo json_last_error_msg();\n    exit;\n}\n\nif (!is_array($arr)) {\n\
    \    echo \"Not an array\\n\";\n    exit;\n}\n\nvar_dump(monotonic($arr));\nfunction\
    \ candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0,\
    \ -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'No argument

    '
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// Return true is array elements are monotonically increasing or\
    \ decreasing.\n// >>> monotonic(array(1, 2, 4, 20))\n// true\n// >>> monotonic(array(1,\
    \ 20, 4, 10))\n// false\n// >>> monotonic(array(4, 1, 0, -10))\n// true\nfunction\
    \ monotonic($l) {\n    $d = $l[1] - $l[0];\n    for ($i = 2; $i < count($l); $i++)\
    \ {\n        if ($d == 0) {\n            $d = $l[$i] - $l[$i - 1];\n        }\
    \ else if (($d > 0 && $l[$i] - $l[$i - 1] < 0) || ($d < 0 && $l[$i] - $l[$i -\
    \ 1] > 0)) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4,\
    \ 10)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 0, -10)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
    \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028639

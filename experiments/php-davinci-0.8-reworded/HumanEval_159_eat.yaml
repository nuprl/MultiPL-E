name: HumanEval_159_eat
language: php
prompt: "<?php\n// You're a hungry rabbit, and you already have eaten a certain number\
  \ of carrots,\n// but now you need to eat more carrots to complete the day's meals.\n\
  // you should return an array of [ total number of eaten carrots after your meals,\n\
  // the number of carrots left after your meals ]\n// if there are not enough remaining\
  \ carrots, you will eat all remaining carrots, but will still be hungry.\n// Example:\n\
  // >>> eat(5, 6, 10)\n// array(11, 4)\n// >>> eat(4, 8, 9)\n// array(12, 1)\n//\
  \ >>> eat(1, 10, 10)\n// array(11, 0)\n// >>> eat(2, 11, 5)\n// array(7, 0)\n//\
  \ Variables:\n// @number : integer\n// the number of carrots that you have eaten.\n\
  // @need : integer\n// the number of carrots that you need to eat.\n// @remaining\
  \ : integer\n// the number of remaining carrots thet exist in stock\n// Constrain:\n\
  // * 0 <= number <= 1000\n// * 0 <= need <= 1000\n// * 0 <= remaining <= 1000\n\
  // Have fun :)\nfunction eat($number, $need, $remaining) {\n"
tests: "function candidate(...$args) {\n    return eat(...$args);\n}\n\nfunction test():\
  \ void {\n    if (candidate(5, 6, 10) !== array(11, 4)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(4, 8, 9) !== array(12, 1)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(1, 10, 10) !== array(11, 0)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(2, 11, 5) !== array(7, 0)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(4, 5, 7) !== array(9, 2)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(4, 5, 1) !== array(5, 0)) { throw new Exception(\"\
  Test failed!\"); }\n}\n\ntest();"
completions: ["    // we should eat\n    $total = $number + $need;\n    // if we have\
    \ too much need\n    if ($total > $remaining) {\n        //eat all remaining carrots\
    \ and return the array\n        return [$number + $remaining, 0];\n    }\n   \
    \ // if we do not have too much need\n    // check if we need all carrots\n  \
    \  if ($remaining > $need) {\n        // eat what we need and return the array\n\
    \        return [$total, $remaining - $need];\n    }\n    // eat all remaining\
    \ carrots and return the array\n    return [$number + $remaining, 0];\n}", " \
    \ $hungry_number = $number + $need;\n  $tasty_number = $hungry_number - $remaining;\n\
    \  $eat_number = $hungry_number - $tasty_number;\n  return [$eat_number, $tasty_number];\n\
    }\necho var_dump(eat(5, 6, 10));\necho var_dump(eat(4, 8, 9));\necho var_dump(eat(1,\
    \ 10, 10));\necho var_dump(eat(2, 11, 5));", "\t$eaten = $number;\n\t$all = $number;\n\
    \t$remaining <= $need ? $eaten += $remaining : $eaten += $need;\n\t$all += $remaining;\n\
    \t$remaining <= $need ? $remaining = 0 : $remaining -= $need;\n\tif ($remaining\
    \ < 0) {\n\t\t$remaining = 0;\n\t}\n\t$result = [$eaten, $remaining];\n\treturn\
    \ $result;\n}\n\nprint_r(eat(4, 8, 9));", "\n$rabbit= (($number+$need)-$remaining);\n\
    \n$hungry=($remaining-$rabbit);\n\nif($remaining>=$rabbit){\n    return [$rabbit,$hungry];\n\
    }else{\n    return [$remaining,0];\n}\n\n}", "    // Write your code here\n  \
    \  $eaten = $number + $need;\n    if ($eaten > $remaining) {\n        $remaining\
    \ = 0;\n    } else {\n        $remaining = $remaining - $eaten;\n    }\n    return\
    \ [$eaten, $remaining];\n}", "    if($need > $remaining) {\n        return [$remaining+$number,\
    \ 0];\n    }\n    return [$number+$need, $remaining-$need];\n}\n", "  if ($remaining\
    \ >= $need) {\n    return [$number + $need, $remaining - $need];\n  } else {\n\
    \    return [$number + $remaining, 0];\n  }\n}\n", "    $array = array($number,\
    \ $remaining);\n    $total = $number + $remaining;\n    if ($total > $need) {\n\
    \        $array[0] = $need;\n        $array[1] = $total - $need;\n    } else {\n\
    \        $array[0] = $total;\n        $array[1] = 0;\n    }\n    return $array;\n\
    }\n\n$test = eat(1, 10, 10);\necho $test[0].\" - \".$test[1];", "  $carrots =\
    \ [];\n  if ($remaining >= $need) {\n    $carrots[0] = $number + $need;\n    $carrots[1]\
    \ = $remaining - $need;\n  } else {\n    $carrots[0] = $number + $remaining;\n\
    \    $carrots[1] = 0;\n  }\n  return $carrots;\n}", "  $arr = array();\n  $carrots_left\
    \ = $remaining - $need;\n  $carrots_eaten = $number + $need;\n  if ($carrots_left\
    \ < 0) {\n    $carrots_eaten = $number + $remaining;\n    $carrots_left = 0;\n\
    \  }\n  array_push($arr, $carrots_eaten, $carrots_left);\n  return $arr;\n}",
  "  // Your code here\n}", "  if($need > $remaining){\n      return [$number+$remaining,\
    \ 0];\n  }else{\n      return [$number+$need, $remaining-$need];\n  }\n}", " \
    \   if ($remaining >= $need) {\n        return [$number + $need, $remaining -\
    \ $need];\n    } elseif ($remaining == 0) {\n        return [$number, $remaining];\n\
    \    } else {\n        return [$number + $remaining, 0];\n    }\n}", "    $eaten\
    \ = $number + $need;\n    if ($eaten > $remaining) {\n        $eaten = $remaining;\n\
    \    }\n    $remaining -= $eaten;\n    return [$eaten, $remaining];\n}", "  if\
    \ ($remaining >= $need) {\n    return [$number + $need, $remaining - $need];\n\
    \  } else {\n    return [$number + $remaining, 0];\n  }\n}\n\necho eat(5, 6, 10);\
    \ //should return array(11, 4)\necho eat(4, 8, 9); //should return array(12, 1)\n\
    echo eat(1, 10, 10); //should return array(11, 0)\necho eat(2, 11, 5); //should\
    \ return array(7, 0)", "  $total = $number + $need;\n  if ($total > $remaining)\
    \ {\n    $total = $remaining + $number;\n    $remaining = 0;\n  } else {\n   \
    \ $remaining = $remaining - $total;\n  }\n  return [$total, $remaining];\n}",
  "  $leftover = $remaining - $need;\n  if ($leftover < 0) {\n    $total = $number\
    \ + $remaining;\n    $leftover = 0;\n  } else {\n    $total = $number + $need;\n\
    \  }\n  return [$total, $leftover];\n}\n", "  $remaining = $remaining - $number;\n\
    \  if ($remaining >= $need) {\n    $remaining = $remaining - $need;\n    $number\
    \ = $number + $need;\n  } else {\n    $number = $number + $remaining;\n    $remaining\
    \ = 0;\n  }\n  return array($number, $remaining);\n}", "  $arr = [];\n  $need\
    \ > $remaining ? $arr[] = $remaining + $number : $arr[] = $need + $number;\n \
    \ $need > $remaining ? $arr[] = 0 : $arr[] = $remaining - $need;\n  return $arr;\n\
    }", "    if ($remaining >= $need){\n        return [$number + $need, $remaining\
    \ - $need];\n    }\n    return [$number + $remaining, 0];\n}", "  if($need <=\
    \ $remaining) {\n    return [$number + $need, $remaining - $need];\n  } else {\n\
    \    return [$number + $remaining, 0];\n  }\n}", "    // your code\n    $total\
    \ = $number + $need;\n    $left = 0;\n    if ($total < $remaining) {\n       \
    \ $left = $remaining - $total;\n    }\n    return [$total, $left];\n}", "  if($need\
    \ <= $remaining) {\n    return array($number + $need, $remaining - $need);\n \
    \ } else {\n    return array($number + $remaining, 0);\n  }\n}", "    $total =\
    \ $number + $need;\n    if ($remaining >= $need) {\n        $left = $remaining\
    \ - $need;\n    } else {\n        $left = 0;\n    }\n    return [$total, $left];\n\
    }", "    $eat = $number + $need;\n    if ($eat > $remaining) {\n        $remaining\
    \ = 0;\n    } else {\n        $remaining = $remaining - $eat;\n    }\n    return\
    \ array($eat, $remaining);\n}\nvar_dump(eat(5, 6, 10));\nvar_dump(eat(4, 8, 9));\n\
    var_dump(eat(1, 10, 10));\nvar_dump(eat(2, 11, 5));", "  \n}", "    $eaten = 0;\n\
    \    $eaten = $number + $need;\n    $diff = $eaten - $remaining;\n    if ($diff\
    \ > 0) {\n        return [$remaining, 0];\n    } else {\n        return [$eaten,\
    \ $remaining - $eaten];\n    }\n}", "    $alreadyEaten = $number;\n    $carrotsNeeded\
    \ = $need;\n    $remainingCarrots = $remaining;\n    $carrotsEaten = 0;\n    $hungry\
    \ = false;\n    \n    //eat as many as you need\n    if ($carrotsNeeded > $remainingCarrots)\
    \ {\n        $carrotsEaten = $remainingCarrots;\n        $hungry = true;\n   \
    \ } else {\n        $carrotsEaten = $carrotsNeeded;\n    }\n    \n    //grab the\
    \ remaining carrots\n    $leftoverCarrots = $remainingCarrots - $carrotsEaten;\n\
    \    \n    return [$alreadyEaten + $carrotsEaten, $leftoverCarrots, $hungry];\n\
    }", "  $totalNeed = $number + $need;\n  if ($totalNeed <= $remaining) {\n    return\
    \ [$totalNeed, $remaining - $totalNeed];\n  } else {\n    return [$remaining,\
    \ 0];\n  }\n}", "    $total = $number + $need;\n    $remaining = $remaining -\
    \ $need;\n    $array = array($total, $remaining);\n    return $array;\n  }\n \
    \ \n  $get = eat(5, 6, 10);\n  print_r($get);", "    if($remaining >= $need){\n\
    \        return [ $number + $need, $remaining - $need ];\n    }else{\n       \
    \ return [ $number + $remaining, 0 ];\n    }\n}", "  if ($need < $remaining) {\n\
    \    return [$number + $need, $remaining - $need];\n  }\n  return [$number + $remaining,\
    \ 0];\n}", "  if ($need <= $remaining) {\n    return [$number + $need, $remaining\
    \ - $need];\n  } else {\n    return [$number + $remaining, 0];\n  }\n}\n\necho\
    \ \"\\n\";\necho \"eat(5, 6, 10)\\n\";\necho_result(eat(5, 6, 10));\necho \"\\\
    n\";\necho \"eat(4, 8, 9)\\n\";\necho_result(eat(4, 8, 9));\necho \"\\n\";\necho\
    \ \"eat(1, 10, 10)\\n\";\necho_result(eat(1, 10, 10));\necho \"\\n\";\necho \"\
    eat(2, 11, 5)\\n\";\necho_result(eat(2, 11, 5));\necho \"\\n\";\n", "    // Your\
    \ code here\n}\n\necho '<h1>eat</h1>';\necho '<pre>';\nvar_dump(eat(5, 6, 10));\n\
    echo '</pre>';\nvar_dump(eat(5, 6, 10) == [11, 4]);\necho '<pre>';\nvar_dump(eat(4,\
    \ 8, 9));\necho '</pre>';\nvar_dump(eat(4, 8, 9) == [12, 1]);\necho '<pre>';\n\
    var_dump(eat(1, 10, 10));\necho '</pre>';\nvar_dump(eat(1, 10, 10) == [11, 0]);\n\
    echo '<pre>';\nvar_dump(eat(2, 11, 5));\necho '</pre>';\nvar_dump(eat(2, 11, 5)\
    \ == [7, 0]);\necho '<pre>';\nvar_dump(eat(0, 0, 0));\necho '</pre>';\nvar_dump(eat(0,\
    \ 0, 0) == [0, 0]);\necho '<pre>';\nvar_dump(eat(1000, 1000, 1000));\necho '</pre>';\n\
    var_dump(eat(1000, 1000, 1000) == [2000, 0]);\necho '<pre>';\nvar_dump(eat(2,\
    \ 1, 1000));\necho '</pre>';\nvar_dump(eat(2, 1, 1000) == [3, 999]);\necho '<pre>';\n\
    var_dump(eat(1000, 1, 1000));\necho '</pre>';\nvar_dump(eat(1000, 1, 1000) ==\
    \ [1001, 0]);\necho '<pre>';\nvar_dump(eat(1000, 1000, 1));\necho '</pre>';\n\
    var_dump(eat(1000, 1000, 1) == [1, 0]);\n", "    $total = $number + $need;\n \
    \   if ($total <= $remaining) {\n        return [$total, $remaining - $total];\n\
    \    } elseif ($remaining < $need) {\n        return [$number + $remaining, 0];\n\
    \    } else {\n        return [$total, 0];\n    }\n}", "  $need = $need - $number;\n\
    \  if ($need <= $remaining) {\n    return [$number + $need, $remaining - $need];\n\
    \  } else {\n    return [$number + $remaining, 0];\n  }\n}\n", "    $eat = 0;\n\
    \    $i = 0;\n    while ($i < $need) {\n        if ($number < $need) {\n     \
    \       $number += $remaining;\n            $remaining = 0;\n        }\n     \
    \   $number--;\n        $i++;\n    }\n    if ($i == $need) {\n        $eat = $number;\n\
    \    }\n    return [$eat, $remaining];\n}\nprint_r(eat(5, 6, 10));\nprint_r(eat(4,\
    \ 8, 9));\nprint_r(eat(1, 10, 10));\nprint_r(eat(2, 11, 5));", "    $number+=$need;\n\
    \    if($number>$remaining){\n        $number=$remaining;\n    }\n    return array($number,\
    \ $remaining-$number);\n}\n$fptr = fopen(getenv(\"OUTPUT_PATH\"), \"w\");\n$stdin\
    \ = fopen(\"php://stdin\", \"r\");\nfscanf($stdin, \"%d\\n\", $number);\nfscanf($stdin,\
    \ \"%d\\n\", $need);\nfscanf($stdin, \"%d\\n\", $remaining);\n$result = eat($number,\
    \ $need, $remaining);\nfwrite($fptr, implode(\" \", $result) . \"\\n\");\nfclose($stdin);\n\
    fclose($fptr);", "  $left = $remaining - $need;\n  $total = $number + $need;\n\
    \  if ($left < 0) {\n    $left = 0;\n  }\n  return [$total, $left];\n}", "   \
    \ $remaining = $remaining - $number;\n    if ($remaining > $need) {\n        $remaining\
    \ = $remaining - $need;\n        $number = $number + $need;\n    } else {\n  \
    \      $number = $number + $remaining;\n        $remaining = 0;\n    }\n    return\
    \ array($number, $remaining);\n}", "    $left_overs = $remaining - $need;\n  \
    \  $needed = $need + $number;\n    if ($remaining > $need) {\n        return [$needed,\
    \ $left_overs];\n    } else {\n        return [$remaining + $number, 0];\n   \
    \ }\n}\nvar_dump(eat(5, 6, 10)); // array(11, 4)\nvar_dump(eat(4, 8, 9)); // array(12,\
    \ 1)\nvar_dump(eat(1, 10, 10)); // array(11, 0)\nvar_dump(eat(2, 11, 5)); // array(7,\
    \ 0)", "    $eaten = $number + $need;\n    if ($eaten > $remaining) {\n      \
    \  $eaten = $remaining;\n    }\n    $left = $remaining - $eaten;\n    return [$eaten,\
    \ $left];\n}", "    $eaten = $number + $need;\n    $remain = 0;\n    if ($eaten\
    \ > $remaining) {\n        $remain = $eaten - $remaining;\n        $eaten = $remaining;\n\
    \    }\n    return [$eaten, $remain];\n}", "  // Your code here.\n  $newNumber\
    \ = $number + $need;\n  if ($newNumber > $remaining) {\n    return [$remaining,\
    \ $newNumber - $remaining];\n  }\n  return [$newNumber, 0];\n}", "    // Write\
    \ your code here\n    $eat = $number;\n    if ($remaining >= $need) {\n      \
    \  $eat += $need;\n        $remaining -= $need;\n    } else {\n        $eat +=\
    \ $remaining;\n        $remaining = 0;\n    }\n    return [$eat, $remaining];\n\
    }", "  $total = $number + $need;\n  if ($total <= $remaining) {\n    return [$total,\
    \ $remaining - $total];\n  } elseif ($total > $remaining) {\n    return [$remaining,\
    \ 0];\n  }\n}\n", "    //Happy Coding ^_^\n    return [$number+$need>$remaining?$remaining:$number+$need,$number+$need>$remaining?0:$remaining-($number+$need)];\n\
    }", "  $eaten = $number + $need;\n  if ($remaining >= $need) {\n    $eaten = $number\
    \ + $need;\n    $remaining = $remaining - $need;\n  } elseif ($remaining < $need)\
    \ {\n    $eaten = $number + $remaining;\n    $remaining = 0;\n  }\n  return [$eaten,\
    \ $remaining];\n}\n", "    $eaten = 0;\n    if($remaining >= $need){\n       \
    \ $eaten = $number + $need;\n        $remaining = $remaining - $need;\n    }else{\n\
    \        $eaten = $number + $remaining;\n        $remaining = 0;\n    }\n    return\
    \ array($eaten, $remaining);\n}\n", "    $left = ($number + $need) - $remaining;\n\
    \    if ($left > 0) {\n        $left = 0;\n    }\n    else {\n        $left =\
    \ $remaining - ($number + $need);\n    }\n    return array($number + $need, $left);\n\
    }", "  $mystomach = $number + $need;\n  $i= 0;\n  if ($mystomach >= $remaining)\
    \ {\n    $i = $remaining - $mystomach;\n    $mystomach = $remaining;\n  }\n  return\
    \ [$mystomach, $i];\n}", "  $total = $number + $need;\n  $left = $remaining -\
    \ $need;\n  if ($left < 0) {\n    $total += $left;\n    $left = 0;\n  }\n  return\
    \ [$total, $left];\n}", "  // Your code here\n  if($need == 0 || $remaining ==\
    \ 0){\n    return [$number, $remaining];\n  }\n  if($remaining < $need){\n   \
    \ return [$number + $remaining, 0];\n  }\n  return [$number + $need, $remaining\
    \ - $need];\n}", "  $total = $number + $need;\n  if ($total <= $remaining) {\n\
    \    return [$total, $remaining - $total];\n  } else {\n    return [$remaining\
    \ + $number, 0];\n  }\n}", "  $summ = $number + $need;\n  $left = $remaining -\
    \ $need;\n  if ($left <= 0) {\n    $left = 0;\n  }\n  return [$summ, $left];\n\
    }", "    // your code here\n    if ($need == 0) {\n      return [$number, $remaining];\n\
    \    } elseif ($remaining == 0) {\n      return [$number, $remaining];\n    }\
    \ elseif ($need <= $remaining) {\n      return [$number + $need, $remaining -\
    \ $need];\n    } else {\n      return [$number + $remaining, 0];\n    }\n}\n\n\
    echo json_encode(eat(1,10,10));", "  $total = $number + $need;\n  if ($total <=\
    \ $remaining) {\n    return [$total, $remaining - $total];\n  } else {\n    return\
    \ [$remaining + $number, 0];\n  }\n}\n\nprint_r(eat(5, 6, 10));\nprint_r(eat(4,\
    \ 8, 9));\nprint_r(eat(1, 10, 10));\nprint_r(eat(2, 11, 5));", "    // Your code\
    \ here\n}", "  $number += $need;\n  $remaining -= $need;\n  if ($remaining <=\
    \ 0) {\n    $remaining = 0;\n  }\n  return [$number, $remaining];\n}\n", "  //\
    \ Your code here\n}\n\nprint_r(eat(5, 6, 10));\nprint_r(eat(4, 8, 9));\nprint_r(eat(1,\
    \ 10, 10));\nprint_r(eat(2, 11, 5));", "    $total = $number + $need;\n    if\
    \ ($total > $remaining) {\n        $array = [$remaining, 0];\n    } else {\n \
    \       $array = [$total, $remaining - $total];\n    }\n    return $array;\n}\n",
  "  // your code here\n}", "  if ($remaining == 0) {\n    return [$number, $remaining];\n\
    \  }\n  if ($need == 0) {\n    return [$number, $remaining];\n  }\n  if ($remaining\
    \ < $need) {\n    return [$number + $remaining, 0];\n  }\n  if ($remaining >=\
    \ $need) {\n    return [$number + $need, $remaining - $need];\n  }\n}\n", "  $today_eat\
    \ = $number + $need;\n  $remaining = $remaining - $need;\n  if ($remaining < 0)\
    \ {\n    $remaining = 0;\n  }\n  return [$today_eat, $remaining];\n}\n", "// Your\
    \ code here\n}", "    if($need == $remaining) {\n        return [$need, 0];\n\
    \    } elseif($need > $remaining) {\n        return [$remaining + $number, 0];\n\
    \    } else {\n        return [$need + $number, $remaining - $need];\n    }\n}",
  "  if (($number + $need) > $remaining) {\n    return [$remaining, 0];\n  }\n  else\
    \ {\n    return [$number + $need, $remaining - ($number + $need)];\n  }\n}", "\t\
    if ($need <= $remaining) {\n\t\treturn [$number + $need, $remaining - $need];\n\
    \t} else {\n\t\treturn [$number + $remaining, 0];\n\t}\n}\n", "  if ($remaining\
    \ <= $need) {\n    return [$number + $remaining, 0];\n  } else {\n    return [$number\
    \ + $need, $remaining - $need];\n  }\n}", "  if ($remaining >= $need) {\n    return\
    \ [$number + $need, $remaining - $need];\n  } elseif ($remaining >= 0) {\n   \
    \ return [$number + $remaining, 0];\n  } else {\n    return $number;\n  }\n}\n",
  "  if($need <= $remaining){\n    return [$number + $need, $remaining - $need];\n\
    \  }\n  else{\n    return [$number + $remaining, 0];\n  }\n}", "  // Write your\
    \ code below:\n  $remainingAfterEat = $number + $remaining;\n  if ($remainingAfterEat\
    \ < $need) {\n    return [$remainingAfterEat, 0];\n  } else {\n    return [$need,\
    \ $remainingAfterEat - $need];\n  }\n}\n\n$first = eat(5, 6, 10);\n$second = eat(4,\
    \ 8, 9);\n$third = eat(1, 10, 10);\n$fourth = eat(2, 11, 5);\n\necho \"Input :\
    \ \\n\";\necho \"5, 6, 10\\n\";\necho \"Output : \\n\";\nprint_r($first);\necho\
    \ \"\\n\";\necho \"Input : \\n\";\necho \"4, 8, 9\\n\";\necho \"Output : \\n\"\
    ;\nprint_r($second);\necho \"\\n\";\necho \"Input : \\n\";\necho \"1, 10, 10\\\
    n\";\necho \"Output : \\n\";\nprint_r($third);\necho \"\\n\";\necho \"Input :\
    \ \\n\";\necho \"2, 11, 5\\n\";\necho \"Output : \\n\";\nprint_r($fourth);\necho\
    \ \"\\n\";", "  $return = array();\n  // Write your code here\n  $total = $number\
    \ + $need;\n  $left = $remaining - $need;\n  if ($left < 0) {\n    $total = $total\
    \ + $left;\n    $left = 0;\n  }\n  $return = array($total, $left);\n  return $return;\n\
    }", "  $left = $remaining - $need;\n  if ($left >= 0) {\n    return [$number +\
    \ $need, $left];\n  } else {\n    return [$number + $remaining, 0];\n  }\n}",
  "    if($need > $remaining) {\n        return [$number + $remaining, 0];\n    }\n\
    \    return [$number + $need, $remaining - $need];\n}", "    $total = $number\
    \ + $need;\n    $remaining -= $need;\n    if ($remaining < 0) {\n        $remaining\
    \ = 0;\n    }\n    return [$total, $remaining];\n}", "  if($need >= $remaining){\n\
    \    return [$remaining + $number, 0];\n  }else{\n    return [$number + $need,\
    \ $remaining - $need];\n  }\n}\n", "    $total = $number + $need;\n    if ($total\
    \ > $remaining) {\n        $total = $remaining + $number;\n        $remaining\
    \ = 0;\n    } else {\n        $remaining = $remaining - $total;\n    }\n    return\
    \ [$total, $remaining];\n}", "  // your code here\n  $eat = $number + $need;\n\
    \  if ($eat <= $remaining) {\n    return [$eat, $remaining - $eat];\n  } else\
    \ {\n    return [$remaining, 0];\n  }\n}", "  if ($need < $remaining) {\n    $result\
    \ = $number + $need;\n    $remaining = $remaining - $need;\n  } else {\n    $result\
    \ = $number + $remaining;\n    $remaining = 0;\n  }\n  return array($result, $remaining);\n\
    }", "    if ($remaining < $need - $number) {\n        return [$number + $remaining,\
    \ 0];\n    }\n    return [$number + $need, $remaining - $need];\n}", "  if($need\
    \ < $remaining){\n  $array=[$number+$need,$remaining-$need];\n  }else{\n  $array=[$number+$remaining,0];\n\
    \  }\n  return $array;\n}", "    if($need <= $remaining) {\n      return [$number\
    \ + $need, $remaining - $need];\n    } else {\n      return [$number + $remaining,\
    \ 0];\n    }\n}", "  if ($need + $number > $remaining) {\n    return array($remaining,\
    \ 0);\n  } else {\n    return array($need + $number, $remaining - ($need + $number));\n\
    \  }\n}\necho \"\\n\\n\";\necho \"Verifying Solution 1: \\n\";\nvar_dump(eat(5,\
    \ 6, 10));\necho \"\\n\\n\";\nvar_dump(eat(4, 8, 9));\necho \"\\n\\n\";\nvar_dump(eat(1,\
    \ 10, 10));\necho \"\\n\\n\";\nvar_dump(eat(2, 11, 5));\necho \"\\n\\n\";\n",
  "  $eatCarrots = $number + $need;\n  if ($remaining > $eatCarrots) {\n    $array\
    \ = array($eatCarrots, $remaining - $eatCarrots);\n  } else {\n    $array = array($eatCarrots,\
    \ 0);\n  }\n  return $array;\n}", "    // Write your code here\n    if($remaining\
    \ < $need) {\n        return [$number + $remaining, 0];\n    }\n    return [$number\
    \ + $need, $remaining - $need];\n}\n", "  $eaten = $number + $need;\n  if ($eaten\
    \ > $remaining) {\n    $eaten = $remaining;\n  }\n  return [$eaten, $remaining\
    \ - $eaten];\n}\n ?>", "  // Write your code here\n  $total = $number + $need;\n\
    \  if ($total < $remaining) {\n    return [$total, $remaining - $total];\n  }\
    \ else {\n    return [$remaining, 0];\n  }\n}", "  $total = $number + $need;\n\
    \  if ($total < $remaining) {\n    return [$total, $remaining - $total];\n  }\
    \ else {\n    return [$total, 0];\n  }\n}", "  $x = $number + $need;\n  $y = $remaining\
    \ - $need;\n  if ($x <= $remaining) {\n    return [$x, $y];\n  } else {\n    return\
    \ [$remaining, 0];\n  }\n}", "  $total = $number + $need;\n  if ($total < $remaining)\
    \ {\n    return [$total, $remaining - $total];\n  } elseif ($total >= $remaining)\
    \ {\n    return [$remaining, 0];\n  }\n}", "  $total_number = $number + $need;\n\
    \  $number_left = $remaining - $need;\n  if ($number_left > 0) {\n    return [$total_number,\
    \ $number_left];\n  } else {\n    return [$total_number, 0];\n  }\n}", "    $total\
    \ = $number + $need;\n    if ($total > $remaining) {\n        $total = $remaining\
    \ + $number;\n        $remaining = 0;\n    } else {\n        $remaining = $remaining\
    \ - $total;\n    }\n    return [$total, $remaining];\n}", "  $eaten = $number\
    \ + $need;\n  if ($remaining > $need) {\n    $eaten = $eaten - $need;\n    $remaining\
    \ = $remaining - $need;\n  } else {\n    $eaten = $eaten - $remaining;\n    $remaining\
    \ = 0;\n  }\n  return [$eaten, $remaining];\n}", "  $a = $number + $need;\n  $b\
    \ = $remaining - $need;\n  if ($b < 0) {\n    $b = 0;\n  }\n  return [$a, $b];\n\
    }", "  if ($need > $remaining) {\n    return array($number + $remaining, 0);\n\
    \  }\n  return array($number + $need, $remaining - $need);\n}", "  $eaten = $number\
    \ + $need;\n  if ($eaten > $remaining) {\n    $eaten = $remaining;\n  }\n  return\
    \ [$eaten, $remaining - $eaten];\n}\n", "  $total = $number + $need;\n  if ($total\
    \ > $remaining) {\n    $need = $need - ($total - $remaining);\n    $remaining\
    \ = 0;\n  } else {\n    $remaining = $remaining - $total;\n  }\n  return [$total,\
    \ $remaining];\n}", "    if ($need > $remaining) {\n        $result = $number\
    \ + $remaining;\n        $remaining = 0;\n    } else {\n        $result = $number\
    \ + $need;\n        $remaining = $remaining - $need;\n    }\n    return array($result,\
    \ $remaining);\n}", "  $total = $number + $need;\n  if ($total > $remaining) {\n\
    \    $total = $remaining + $number;\n    $remaining = 0;\n  } else {\n    $remaining\
    \ = $remaining - $total;\n  }\n  return [$total, $remaining];\n}", "    $tot =\
    \ $number + $need;\n    if ($tot <= $remaining) {\n        return [$tot, $remaining\
    \ - $tot];\n    } else {\n        return [$remaining, 0];\n    }\n}", "    $mealCarrots\
    \ = $need;\n    if ($remaining < $need) {\n        $mealCarrots = $remaining;\n\
    \    }\n    $totalCarrots = $number + $mealCarrots;\n    $leftOver = $remaining\
    \ - $mealCarrots;\n    return [$totalCarrots, $leftOver];\n}", "\tif($need >=\
    \ $remaining){\n\t\treturn array($number + $remaining, 0);\n\t}else{\n\t\treturn\
    \ array($number + $need, $remaining - $need);\n\t}\n}\n", "  // Happy coding\n\
    \  $eating = ($need + $number);\n  $carrots = $remaining - $eating;\n  if ($carrots\
    \ < 0) {\n    $carrots = 0;\n  }\n  $ret = [$eating, $carrots];\n  return $ret;\n\
    }", "  if ($need + $number > $remaining) {\n    $number = $remaining;\n    $remaining\
    \ = 0;\n  } else {\n    $remaining -= $need + $number;\n    $number += $need;\n\
    \  }\n  return [$number, $remaining];\n}", "  if ($need - $number >= $remaining)\
    \ {\n    return array(($remaining + $number), 0);\n  } else {\n    return array(($need),\
    \ ($remaining - ($need - $number)));\n  }\n}", "\n}", "    // YOUR CODE HERE\n\
    }", "  if ($need - $number <= $remaining) {\n    return [$number + $need, $remaining\
    \ - ($need - $number)];\n  }\n  return [$number + $remaining, 0];\n}", "  $eaten\
    \ = $number + $need;\n  $left = $remaining - $need;\n  if ($left <= 0) {\n   \
    \ $eaten = $left + $eaten;\n    $left = 0;\n  }\n  return [$eaten, $left];\n}",
  "    $total = $number + $need;\n    if ($total <= $remaining) {\n        return\
    \ [$total, $remaining - $total];\n    } else {\n        return [$remaining + $number,\
    \ 0];\n    }\n}", "\t\n}", "  $total = $number + $need;\n  $remaining -= $need;\n\
    \  return [$total, $remaining < 0 ? 0 : $remaining];\n}", "  if ($remaining <=\
    \ $need - $number) {\n    return [$number + $remaining, 0];\n  }\n  return [$number\
    \ + $need, $remaining - $need];\n}", "  if($remaining >= $need){\n    return [$number\
    \ + $need, $remaining - $need];\n  }\n  else {\n    return [$number + $remaining,\
    \ 0];\n  }\n}", "  if ($need === 0) {\n    return [$number, $remaining];\n  }\n\
    \  if ($remaining === 0) {\n    return [$number, $remaining];\n  }\n  if ($remaining\
    \ < $need) {\n    return [$number + $remaining, 0];\n  }\n  if ($remaining >=\
    \ $need) {\n    return [$number + $need, $remaining - $need];\n  }\n}", "    $total\
    \ = $number + $need;\n    if ($total > $remaining) {\n        $total = $number\
    \ + $remaining;\n        $remaining = 0;\n    } else {\n        $remaining = $remaining\
    \ - $total;\n    }\n    return [$total, $remaining];\n}", "  $left = $remaining\
    \ - $need;\n  if ($left < 0) {\n    $eaten = $number + $remaining;\n    $left\
    \ = 0;\n  } else {\n    $eaten = $number + $need;\n  }\n  return [$eaten, $left];\n\
    }\n", "    $result = [];\n    $remaining -= $number;\n    if ($remaining >= $need)\
    \ {\n        $result[0] = $number + $need;\n        $result[1] = $remaining -\
    \ $need;\n    } else {\n        $result[0] = $number + $remaining;\n        $result[1]\
    \ = 0;\n    }\n    return $result;\n}", "  // Write your code here\n  $number\
    \ += $need;\n  if ($number > $remaining) {\n    $number = $remaining;\n  }\n \
    \ return [$number, $remaining - $number];\n}\n", "    // your code here\n    if($need\
    \ <= $remaining){\n        $array = [$number + $need, $remaining - $need];\n \
    \   } else {\n        $array = [$number + $remaining, 0];\n    }\n    return $array;\n\
    }\n\nprint_r(eat(2, 11, 5));", "    $eaten = $number + $need;\n    if ($remaining\
    \ >= $need) {\n        $left = $remaining - $need;\n    } else {\n        $left\
    \ = 0;\n    }\n    $array = array($eaten, $left);\n    return $array;\n}", " \
    \ $totalEaten = $number + $need;\n  $left = $remaining - $need;\n  if ($totalEaten\
    \ > $remaining) {\n    $left = 0;\n  }\n  return [$totalEaten, $left];\n}", " \
    \   if ($need <= $remaining) {\n        return [$number + $need, $remaining -\
    \ $need];\n    } else {\n        return [$number + $remaining, 0];\n    }\n}",
  "  // Write your code here\n  if ($remaining<($need-$number)){\n    return [$remaining+$number,0];\n\
    \  }\n  else {\n    return [$need,$remaining-($need-$number)];\n  }\n}\n\nprint_r(eat(5,\
    \ 6, 10));\nprint_r(eat(4, 8, 9));\nprint_r(eat(1, 10, 10));\nprint_r(eat(2, 11,\
    \ 5));", "    $eated = 0;\n    $remaining = $remaining - $number;\n    $eated\
    \ = $number;\n    if ($remaining >= $need) {\n        $eated = $eated + $need;\n\
    \        $remaining = $remaining - $need;\n    } else {\n        $eated = $eated\
    \ + $remaining;\n        $remaining = 0;\n    }\n    return array($eated, $remaining);\n\
    }", "  $hunger = $need - $number;\n  $left = ($remaining - $hunger) > 0 ? ($remaining\
    \ - $hunger) : 0;\n  return [$number + $hunger, $left];\n}", "  \n}", "  //..\n\
    \  if($need < $remaining) {\n    return [$number + $need, $remaining - $need];\n\
    \  } else {\n    return [$number + $remaining, 0];\n  }\n}", "  $left = $need\
    \ - $number;\n  $result = [$number + $remaining, $left - $remaining];\n  return\
    \ ($result[1] <= 0) ? [$result[0], 0] : $result;\n}\necho '<pre>';\nvar_dump(eat(5,\
    \ 6, 10));\nvar_dump(eat(4, 8, 9));\nvar_dump(eat(1, 10, 10));\nvar_dump(eat(2,\
    \ 11, 5));\necho '</pre>';", "    // your code here\n}", "\t$total = $number +\
    \ $need;\n\tif ($total < $remaining) {\n\t\treturn [$total, $remaining - $total];\n\
    \t} else {\n\t\treturn [$remaining, 0];\n\t}\n}\nprint_r(eat(5, 6, 10));", " \
    \ // how many carrots can you eat?\n  // how many carrots are left after eating?\n\
    \  if($need > $remaining) {\n    $need = $remaining;\n  }\n  return [$number +\
    \ $need, $remaining - $need];\n}", "  $total = $number + $need;\n  $left = $remaining\
    \ - $need;\n  return $left < 0 ? [$total, 0] : [$total, $left];\n}", "    $total\
    \ = $number + $need;\n    $result = array();\n    if ($remaining <= $need) {\n\
    \        array_push($result, $remaining);\n        array_push($result, 0);\n \
    \   } else {\n        array_push($result, $total);\n        array_push($result,\
    \ $remaining - $need);\n    }\n    return $result;\n}\n", "  $totalEaten = $number\
    \ + $need;\n  if ($remaining >= $need) {\n    $remaining = $remaining - $need;\n\
    \  } else {\n    $remaining = 0;\n  }\n  return [$totalEaten, $remaining];\n}\n",
  "    $result = 0;\n    $realRemain = 0;\n    $result = $number + $need;\n    if($result\
    \ > $remaining){\n        $realRemain = $result - $remaining;\n        $result\
    \ = $remaining;\n    }\n    return [$result, $realRemain];\n}\n\necho '<pre>';\n\
    print_r(eat(1, 10, 10));\necho '</pre>';", "  // Good luck!\n  $eat = 0;\n  $remain\
    \ = 0;\n  if ($remaining >= $need) {\n    $eat = $number + $need;\n    $remain\
    \ = $remaining - $need;\n  } else {\n    $eat = $number + $remaining;\n    $remain\
    \ = 0;\n  }\n  return [$eat, $remain];\n}", "    $left = $remaining - $need;\n\
    \    if ($left >= 0) {\n        return [$number + $need, $left];\n    } else {\n\
    \        return [$number + $remaining, 0];\n    }\n}", "\n}", "\tif($remaining\
    \ >= $need){\n\t\t$arr = [$number + $need, $remaining - $need];\n\t}else{\n\t\t\
    $arr = [$number + $remaining, 0];\n\t}\n\t\n\treturn $arr;\n}\n", "    $aftermeal\
    \ = $number + $need;\n    $leftover = $remaining - $need;\n    if ($leftover >=\
    \ 0) {\n      return [$aftermeal, $leftover];\n    } else {\n      return [$aftermeal,\
    \ 0];\n    }\n  }", "  // Your code here\n}", "  $eat = $number + $need;\n  $left\
    \ = $remaining - $need;\n  if ($left < 0) {\n    $left = 0;\n  }\n  $array = [$eat,\
    \ $left];\n  return $array;\n}", "  $eaten = $number + $need;\n  if ($remaining\
    \ > $need) {\n    $remaining = $remaining - $need;\n  } else {\n    $remaining\
    \ = 0;\n  }\n  return [$eaten, $remaining];\n}\nprint_r(eat(5, 6, 10));\nprint_r(eat(4,\
    \ 8, 9));\nprint_r(eat(1, 10, 10));\nprint_r(eat(2, 11, 5));", "  if ($need >\
    \ $remaining) {\n    return [$remaining, 0];\n  }\n  if ($need === $remaining)\
    \ {\n    return [$remaining, 0];\n  } else {\n    return [$need + $number, $remaining\
    \ - $need];\n  }\n}", "  if ($need > $remaining) {\n    return array($number+$remaining,\
    \ 0);\n  }\n  else {\n    return array($number+$need, $remaining-$need);\n  }\n\
    }\n", "  if ($need > $remaining + $number) {\n    return [$remaining + $number,\
    \ 0];\n  } else {\n    return [$number + $need, $remaining - $need];\n  }\n}\n",
  "  if ($remaining < $need) {\n      return [$number + $remaining, 0];\n  } else\
    \ {\n      return [$number + $need, $remaining - $need];\n  }\n}", "  $remaining\
    \ -= $number;\n  if ($remaining > $need) {\n    return [$number + $need, $remaining\
    \ - $need];\n  } else {\n    return [$number + $remaining, 0];\n  }\n}\necho '<pre>';\n\
    print_r(eat(5, 6, 10)); // array(11, 4)\nprint_r(eat(4, 8, 9)); // array(12, 1)\n\
    print_r(eat(1, 10, 10)); // array(11, 0)\nprint_r(eat(2, 11, 5)); // array(7,\
    \ 0)\necho '</pre>';", "  $eaten = $number + $need;\n  $eaten = $eaten > $remaining\
    \ ? $remaining : $eaten;\n  $left = $remaining - $eaten;\n  return [$eaten, $left];\n\
    }", "  $left = $remaining - $need;\n  $number = $number + $need;\n  if ($left\
    \ > 0) {\n    return [$number, $left];\n  } else {\n    return [$number, 0];\n\
    \  }\n}", "  if ($need > $remaining) {\n    $diff = $need - $remaining;\n    return\
    \ [$remaining + $number, 0];\n  }\n  return [$number + $need, $remaining - $need];\n\
    }", "// my solution\n  if($need >= $remaining+$number){\n  return array($remaining+$number,\
    \ 0);\n  }\n  else if($need < $remaining+$number){\n  return array($remaining+$number,\
    \ $remaining+$number-$need);\n  }", "  $total = $number + $need;\n  if ($total\
    \ > $remaining) {\n    $over = $total - $remaining;\n    $carrots = $remaining\
    \ - $number;\n    $left = $over - $carrots;\n    return [$total - $over, $left];\n\
    \  } else {\n    return [$total, $remaining - $total];\n  }\n}", "    if ($remaining\
    \ >= $need) {\n        return [$number + $need, $remaining - $need];\n    } else\
    \ {\n        return [$number + $remaining, 0];\n    }\n}", "  //your code here\n\
    }\n", "    if ($need > $remaining) {\n        return array($number + $remaining,\
    \ 0);\n    } else {\n        return array($number + $need, $remaining - $need);\n\
    \    }\n}", "  $eaten = $number + $need;\n  $remaining = $remaining - $need;\n\
    \  if ($remaining <= 0) {\n    $remaining = 0;\n  }\n  return [$eaten, $remaining];\n\
    }", "  $eaten = $number + $need;\n  $remaining = $remaining - $need;\n  $left\
    \ = 0;\n  if ($remaining < 0) {\n    $left = 0;\n  } else {\n    $left = $remaining;\n\
    \  }\n  return [$eaten, $left];\n}", "  // need to eat\n  if ($number+$need<=$remaining)\
    \ {\n    return [$number+$need, $remaining-$number-$need];\n  } else {\n    return\
    \ [$remaining, 0];\n  }\n}", "  if($need >= $remaining) {\n    return [$remaining\
    \ + $number, 0];\n  }\n  return [$number + $need, $remaining - $need];\n}", " \
    \   if($remaining>$need){\n        $remaining=$remaining-$need;\n        $number=$number+$need;\n\
    \    }else{\n        $number=$number+$remaining;\n        $remaining=0;\n    }\n\
    \    return [$number,$remaining];\n}\n\n$a = 5;\n$b = 6;\n$c = 10;\n\nprint_r(eat($a,\
    \ $b, $c));\n", "  $eaten = $number + $need;\n  if ($eaten <= $remaining) {\n\
    \    return [$eaten, $remaining - $eaten];\n  } else {\n    return [$remaining,\
    \ 0];\n  }\n}\n\n$test = eat(5, 6, 10);\necho \"Test 1: \" . ($test[0] == 11 &&\
    \ $test[1] == 4 ? \"Pass\" : \"Fail\") . \"\\n\";\n$test = eat(4, 8, 9);\necho\
    \ \"Test 2: \" . ($test[0] == 12 && $test[1] == 1 ? \"Pass\" : \"Fail\") . \"\\\
    n\";\n$test = eat(1, 10, 10);\necho \"Test 3: \" . ($test[0] == 11 && $test[1]\
    \ == 0 ? \"Pass\" : \"Fail\") . \"\\n\";\n$test = eat(2, 11, 5);\necho \"Test\
    \ 4: \" . ($test[0] == 7 && $test[1] == 0 ? \"Pass\" : \"Fail\") . \"\\n\";",
  "    if ($need > $remaining) {\n        $number += $remaining;\n        $remaining\
    \ = 0;\n    } else {\n        $number += $need;\n        $remaining -= $need;\n\
    \    }\n    return [$number, $remaining];\n}", "  $need -= $number;\n  if ($need\
    \ >= $remaining) {\n    return [$remaining + $number, 0];\n  }\n  return [$need\
    \ + $number, $remaining - $need];\n}", "  // TODO: Write your code here!\n}",
  "  //\n  if ($need + $number <= $remaining) {\n    return [$need + $number, $remaining\
    \ - ($need + $number)];\n  } else {\n    return [$remaining + $number, 0];\n \
    \ }\n}", "  $eat = $number + $need;\n  if ($eat > $remaining) {\n    $eat = $remaining;\n\
    \  }\n  return [$eat, $remaining - $eat];\n}", "    $total = $number + $need;\n\
    \    $left = $remaining - $need;\n    if ($left < 0) {\n        $total += $left;\n\
    \        $left = 0;\n    }\n    return [$total, $left];\n}", "  // your code\n\
    }\n", "    if ($need > $remaining) {\n        return [$number + $remaining, 0];\n\
    \    }\n    return [$number + $need, $remaining - $need];\n}", "    if ($need\
    \ - $number <= $remaining) {\n        return [$number + $need, $remaining - ($need\
    \ - $number)];\n    }\n    else {\n        return [$number + $remaining, 0];\n\
    \    }\n}\n", "    $eaten = $number + $need;\n    $left = $remaining - $need;\n\
    \    if ($eaten > $remaining) {\n        $left = 0;\n    }\n    $res[] = $eaten;\n\
    \    $res[] = $left;\n    return $res;\n}\nprint_r(eat(5, 6, 10));\nprint_r(eat(4,\
    \ 8, 9));\nprint_r(eat(1, 10, 10));\nprint_r(eat(2, 11, 5));", "    // Your code\
    \ here!\n}", "  $num = $number + $need;\n  if ($num < $remaining) {\n    return\
    \ array($num, $remaining - $num);\n  } else {\n    return array($num, 0);\n  }\n\
    }\n", "  $eaten = $number + $need;\n  $remainingCarrots = $remaining - $need;\n\
    \  if ($remainingCarrots < 0) {\n    $remainingCarrots = 0;\n  }\n  return [$eaten,\
    \ $remainingCarrots];\n}", "    $eaten = $number + $need;\n    $remaining = $remaining\
    \ - $need;\n    $array = array($eaten, $remaining);\n    return $array;\n}", " \
    \   $final = [($number + $need), ($remaining - $need)];\n    if ($final[1] < 0)\
    \ {\n        $final[0] = $number + $remaining;\n        $final[1] = 0;\n    }\n\
    \    return $final;\n}", "    $need = $need - $number;\n    if ($need <= $remaining)\
    \ {\n        return [$number + $need, $remaining - $need];\n    } else {\n   \
    \     return [$number + $remaining, 0];\n    }\n}", "  $newArr = array();\n  $newArr[]\
    \ = $number + $need;\n  $newArr[] = $remaining - $need;\n  return $newArr;\n}\n\
    print_r(eat(5, 6, 10));\nprint_r(eat(4, 8, 9));\nprint_r(eat(1, 10, 10));\nprint_r(eat(2,\
    \ 11, 5));", "  $need -= $number;\n  if ($need > $remaining) {\n    $number +=\
    \ $remaining;\n    $remaining = 0;\n  } else {\n    $number += $need;\n    $remaining\
    \ -= $need;\n  }\n  return [$number, $remaining];\n}", "    if ($remaining >=\
    \ $need) {\n        return [$number + $need, $remaining - $need];\n    } else\
    \ {\n        return [$number + $remaining, 0];\n    }\n}", "  $eaten = $number\
    \ + $need;\n  $left = 0;\n  if ($eaten <= $remaining) {\n    $left = $remaining\
    \ - $eaten;\n  }\n  return [$eaten, $left];\n}", "  $total = $number + $need;\n\
    \  $left = $remaining - $need;\n  if ($left >= 0) {\n    return [$total, $left];\n\
    \  } else {\n    return [$total + $left, 0];\n  }\n}", "  // Return array\n  $result\
    \ = [];\n  // If need is lower than the remaining, we can add the need to the\
    \ number and subtract it from the remaining and add both to the result array.\n\
    \  if ($need <= $remaining) {\n    $result[] = $number + $need;\n    $result[]\
    \ = $remaining - $need;\n  }\n  // If not, we will have to add the remaining and\
    \ subtract it from the need\n  else {\n    $result[] = $number + $remaining;\n\
    \    $result[] = $need - $remaining;\n  }\n  return $result;\n}\n\necho \"Array(\"\
    .implode(\", \", eat(1, 10, 10)).\")\";", "  $eaten = $number + $need;\n  $leftover\
    \ = $remaining - $need;\n  $array = [$eaten, $leftover];\n  if ($need > $remaining)\
    \ {\n    $array = [$eaten - ($need - $remaining), 0];\n  }\n  return $array;\n\
    }", "  if ($need <= $remaining) {\n    $number += $need;\n    $remaining -= $need;\n\
    \  } else {\n    $number += $remaining;\n    $remaining = 0;\n  }\n  return [$number,\
    \ $remaining];\n}\n", "\tif ($need >= $remaining + $number) {\n\t\treturn [$remaining\
    \ + $number, 0];\n\t}\n\treturn [$need, $remaining + $number - $need];\n}", " \
    \ // Write your code here\n  // Good luck!\n  $result = 0;\n  if ($need <= $remaining)\
    \ {\n    $result = $number + $need;\n    $remaining = $remaining - $need;\n  }\
    \ else {\n    $result = $number + $remaining;\n    $remaining = 0;\n  }\n  return\
    \ [$result, $remaining];\n}\n", "    $left = $remaining - $need;\n    $number\
    \ += $need;\n    if ($left < 0) {\n        $number += $left;\n        $left =\
    \ 0;\n    }\n    return [$number, $left];\n}", "    $total = $number + $need;\n\
    \    $eaten = 0;\n    if ($total > $remaining) {\n        $eaten = $remaining;\n\
    \    } else {\n        $eaten = $total;\n    }\n    return array($eaten, $remaining\
    \ - $eaten);\n}\n", "  if ($remaining >= $need) {\n    return [$number + $need,\
    \ $remaining - $need];\n  }\n  return [$number + $remaining, 0];\n}", "  $answer\
    \ = [$number + $need, $remaining - $need];\n  if ($answer[1] < 0) {\n    $answer[0]\
    \ += $answer[1];\n    $answer[1] = 0;\n  }\n  return $answer;\n}", "    $eat_total\
    \ = $number + $need;\n    if ($eat_total <= $remaining) {\n        $number = $eat_total;\n\
    \        $remaining = $remaining - $eat_total;\n    } else {\n        $number\
    \ = $remaining;\n        $remaining = 0;\n    }\n    return [$number, $remaining];\n\
    }\n\necho PHP_EOL . '<pre>';\necho 'eat(5, 6, 10)' . '<br>';\nprint_r(eat(5, 6,\
    \ 10));\necho 'eat(4, 8, 9)' . '<br>';\nprint_r(eat(4, 8, 9));\necho 'eat(1, 10,\
    \ 10)' . '<br>';\nprint_r(eat(1, 10, 10));\necho 'eat(2, 11, 5)' . '<br>';\nprint_r(eat(2,\
    \ 11, 5));\necho '</pre>';", "  if ($need > $remaining) {\n    $total = $number\
    \ + $remaining;\n    $remaining = 0;\n  } else {\n    $total = $number + $need;\n\
    \    $remaining = $remaining - $need;\n  }\n  return [$total, $remaining];\n}",
  "// your code here\n}\n", "\tif ($remaining >= $need) {\n\t\treturn [$number + $need,\
    \ $remaining - $need];\n\t} else {\n\t\treturn [$number + $remaining, 0];\n\t\
    }\n}\n\nprint_r(eat(5, 6, 10));\nprint_r(eat(4, 8, 9));\nprint_r(eat(1, 10, 10));\n\
    print_r(eat(2, 11, 5));", "  // your code here\n}\n\neat(5, 6, 10); // array(11,\
    \ 4)\neat(4, 8, 9); // array(12, 1)\neat(1, 10, 10); // array(11, 0)\neat(2, 11,\
    \ 5); // array(7, 0)", "    if($remaining>$need){\n        return [$number+$need,$remaining-$need];\n\
    \    }else{\n        return [$number+$remaining,0];\n    }\n}"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

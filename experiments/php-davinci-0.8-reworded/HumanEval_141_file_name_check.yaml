name: HumanEval_141_file_name_check
language: php
prompt: "<?php\n// Create a function which takes a string representing a file's name,\
  \ and returns\n// 'Yes' if the the file's name is valid, and returns 'No' otherwise.\n\
  // A file's name is considered to be valid if and only if all the following conditions\
  \ \n// are met:\n// - There should not be more than three digits ('0'-'9') in the\
  \ file's name.\n// - The file's name contains exactly one dot '.'\n// - The substring\
  \ before the dot should not be empty, and it starts with a letter from \n// the\
  \ latin alphapet ('a'-'z' and 'A'-'Z').\n// - The substring after the dot should\
  \ be one of these: ['txt', 'exe', 'dll']\n// Examples:\n// >>> file_name_check(\"\
  example.txt\")\n// \"Yes\"\n// >>> file_name_check(\"1example.dll\")\n// \"No\"\n\
  function file_name_check($file_name) {\n"
tests: "function candidate(...$args) {\n    return file_name_check(...$args);\n}\n\
  \nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"\
  No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
  ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\"\
  ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
  MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
  \ (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
  \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw new\
  \ Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\") !== \"\
  No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.txt\"\
  ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
  this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\") !== \"No\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_12valid.6exe4.txt\"\
  ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"all.exe.txt\"\
  ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"I563_No.exe\"\
  ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
  Is3youfault.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
  \ if (candidate(\"no_one#knows.dll\") !== \"Yes\") { throw new Exception(\"Test\
  \ failed!\"); }\n    if (candidate(\"1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new\
  \ Exception(\"Test failed!\"); }\n    if (candidate(\"final..txt\") !== \"No\")\
  \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"final132\") !==\
  \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\"\
  ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\"\
  ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\"\
  ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["  $length = strlen($file_name);\n  if ($length < 6) {\n    return \"\
    No\";\n  }\n  $dot_index = strpos($file_name, \".\");\n  if ($dot_index === FALSE)\
    \ {\n    return \"No\";\n  }\n  $name = substr($file_name, 0, $dot_index);\n \
    \ $ext = substr($file_name, $dot_index + 1);\n  if ($dot_index < 1 || !ctype_alpha($name[0]))\
    \ {\n    return \"No\";\n  }\n  if (!preg_match(\"/[A-Za-z]/\", $name)) {\n  \
    \  return \"No\";\n  }\n  if (substr_count($name, \"0\") + substr_count($name,\
    \ \"1\") + substr_count($name, \"2\") + substr_count($name, \"3\") + substr_count($name,\
    \ \"4\") + substr_count($name, \"5\") + substr_count($name, \"6\") + substr_count($name,\
    \ \"7\") + substr_count($name, \"8\") + substr_count($name, \"9\") > 3) {\n  \
    \  return \"No\";\n  }\n  if ($ext !== \"txt\" && $ext !== \"exe\" && $ext !==\
    \ \"dll\") {\n    return \"No\";\n  }\n  return \"Yes\";\n}", "    $arr = explode('.',\
    \ $file_name);\n    if (count($arr) > 2) return 'No';\n    $is_valid = preg_match('/^[a-zA-Z][a-zA-Z0-9]*$/',\
    \ $arr[0]);\n    if (!$is_valid) return 'No';\n    $is_valid = preg_match('/^[0-9]{0,3}$/',\
    \ $arr[0]);\n    if ($is_valid) return 'No';\n    if (!in_array($arr[1], ['txt',\
    \ 'exe', 'dll'])) return 'No';\n    return 'Yes';\n}", "    if (count(explode('.',\
    \ $file_name)) != 2) {\n        return 'No';\n    }\n    $file_name_without_ext\
    \ = explode('.', $file_name)[0];\n    $ext = explode('.', $file_name)[1];\n  \
    \  if (strlen($file_name_without_ext) < 1 || $file_name_without_ext[0] < 'A' ||\
    \ $file_name_without_ext[0] > 'z') {\n        return 'No';\n    }\n    if (!in_array($ext,\
    \ ['txt', 'exe', 'dll'])) {\n        return 'No';\n    }\n    if (preg_match_all('/[0-9]/',\
    \ $file_name_without_ext) > 3) {\n        return 'No';\n    }\n    return 'Yes';\n\
    }\necho file_name_check(\"example.txt\") . \"\\n\";\necho file_name_check(\"1example.dll\"\
    ) . \"\\n\";\necho file_name_check(\"leetcode.exe\") . \"\\n\";\necho file_name_check(\"\
    leetcode.1.exe\") . \"\\n\";\necho file_name_check(\"abc..txt\") . \"\\n\";\n\
    echo file_name_check(\"abc.txt\") . \"\\n\";\necho file_name_check(\"abc.txt.exe\"\
    ) . \"\\n\";\necho file_name_check(\"a.txt\") . \"\\n\";\necho file_name_check(\"\
    a.dll\") . \"\\n\";\necho file_name_check(\"aaa.txt\") . \"\\n\";\necho file_name_check(\"\
    example.txt\") . \"\\n\";\necho file_name_check(\"example.exe\") . \"\\n\";\n\
    echo file_name_check(\"example.dll\") . \"\\n\";\necho file_name_check(\"example1.txt\"\
    ) . \"\\n\";\necho file_name_check(\"example1.exe\") . \"\\n\";\necho file_name_check(\"\
    example1.dll\") . \"\\n\";\necho file_name_check(\"example10.txt\") . \"\\n\"\
    ;\necho file_name_check(\"example10.exe\") . \"\\n\";\necho file_name", "\t$last_dot_position\
    \ = strrpos($file_name, '.');\n\t$dot_count = substr_count($file_name, '.');\n\
    \t$first_part = substr($file_name, 0, $last_dot_position);\n\t$last_part = substr($file_name,\
    \ $last_dot_position + 1);\n\t$digit_count = preg_match_all('/[0-9]/', $file_name);\n\
    \t$first_part_is_valid = (preg_match('/^[a-zA-Z]+$/', $first_part) === 1);\n\t\
    $is_valid_extension = in_array($last_part, ['txt', 'exe', 'dll']);\n\treturn $first_part_is_valid\
    \ && $dot_count === 1 && $digit_count <= 3 && $is_valid_extension ? \"Yes\" :\
    \ \"No\";\n}\necho file_name_check(\"example.txt\") . \"\\n\";\necho file_name_check(\"\
    1example.dll\") . \"\\n\";", "\n}\n", "    if(check($file_name) == true) {\n \
    \       return \"Yes\";\n    }\n    else {\n        return \"No\";\n    }\n}\n",
  "    $dot_position = strpos($file_name, '.');\n    $extension = substr($file_name,\
    \ $dot_position + 1);\n    $extensions = ['txt', 'exe', 'dll'];\n    if(strlen($file_name)\
    \ == $dot_position) {\n        return 'No';\n    }\n    if(!in_array($extension,\
    \ $extensions)) {\n        return 'No';\n    }\n    if(!preg_match('/^[a-zA-Z][a-zA-Z0-9]*$/',\
    \ substr($file_name, 0, $dot_position))) {\n        return 'No';\n    }\n    $digits\
    \ = str_split($file_name);\n    $digit_count = 0;\n    foreach($digits as $digit)\
    \ {\n        if(is_numeric($digit)) {\n            $digit_count++;\n        }\n\
    \    }\n    if($digit_count > 3) {\n        return 'No';\n    }\n    return 'Yes';\n\
    }\n\n$file_name = 'example.txt';\necho file_name_check($file_name);", "    $dot_position\
    \ = strpos($file_name, '.');\n    $substr_before_dot = substr($file_name, 0, $dot_position);\n\
    \    $substr_after_dot = substr($file_name, $dot_position + 1);\n    $count_of_digits\
    \ = 0;\n    for ($i = 0; $i < strlen($substr_before_dot); $i++) {\n        if\
    \ (ctype_digit($substr_before_dot[$i])) {\n            $count_of_digits++;\n \
    \       }\n    }\n    if ($count_of_digits > 3) {\n        return \"No\";\n  \
    \  }\n    $is_letter = ctype_alpha($substr_before_dot[0]);\n    if (!$is_letter)\
    \ {\n        return \"No\";\n    }\n    $available_extensions = ['txt', 'exe',\
    \ 'dll'];\n    if (!in_array($substr_after_dot, $available_extensions)) {\n  \
    \      return \"No\";\n    }\n    return \"Yes\";\n}", "    if (empty($file_name))\
    \ {\n        return \"No\";\n    }\n    $file_info = explode(\".\", $file_name);\n\
    \    if (count($file_info) !== 2) {\n        return \"No\";\n    }\n    $file_name\
    \ = $file_info[0];\n    $file_ext = $file_info[1];\n    $valid_ext = ['txt', 'exe',\
    \ 'dll'];\n    if (!in_array($file_ext, $valid_ext)) {\n        return \"No\"\
    ;\n    }\n    if (empty($file_name)) {\n        return \"No\";\n    }\n    if\
    \ (!preg_match(\"/^[a-zA-Z]/\", $file_name)) {\n        return \"No\";\n    }\n\
    \    if (preg_match(\"/[0-9]{4,}/\", $file_name)) {\n        return \"No\";\n\
    \    }\n    return \"Yes\";\n}\n", "\t$result = \"No\";\n\tif (preg_match('/^[a-zA-Z][a-zA-Z0-9]{0,2}\\\
    .[a-zA-Z]{3}$/', $file_name)) {\n\t\tif (substr($file_name, strpos($file_name,\
    \ \".\") + 1) == \"txt\" ||\n\t\t\tsubstr($file_name, strpos($file_name, \".\"\
    ) + 1) == \"exe\" ||\n\t\t\tsubstr($file_name, strpos($file_name, \".\") + 1)\
    \ == \"dll\") {\n\t\t\t$result = \"Yes\";\n\t\t}\n\t}\n\treturn $result;\n}\n\n\
    echo file_name_check(\"example.txt\") . \"\\n\";\necho file_name_check(\"1example.dll\"\
    ) . \"\\n\";\necho file_name_check(\"example.txt.exe\") . \"\\n\";\necho file_name_check(\"\
    example.txt.3\") . \"\\n\";", "    $flag = 0;\n    $count = 0;\n    $alphabet\
    \ = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',\
    \ 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E',\
    \ 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U',\
    \ 'V', 'W', 'X', 'Y', 'Z'];\n    $num_digits = ['0', '1', '2', '3', '4', '5',\
    \ '6', '7', '8', '9'];\n    $extensions = ['txt', 'exe', 'dll'];\n    // check\
    \ if there is any element in the file_name that is not alphanumeric\n    for ($i\
    \ = 0; $i < strlen($file_name); $i++) {\n        if (!in_array($file_name[$i],\
    \ $alphabet) && !in_array($file_name[$i], $num_digits) && $file_name[$i] != '.')\
    \ {\n            return \"No\";\n        }\n    }\n    // check if the file name\
    \ doesn't contain more than three digits\n    for ($i = 0; $i < strlen($file_name);\
    \ $i++) {\n        if (in_array($file_name[$i], $num_digits)) {\n            $count++;\n\
    \        }\n    }\n    if ($count > 3) {\n        return \"No\";\n    }\n    //\
    \ check if there is exactly one dot\n    for ($i = 0; $i < strlen($file_name);\
    \ $i++) {\n        if ($file_name[$i] == '.') {\n            $flag++;\n      \
    \  }\n    }\n    if ($flag != 1) {\n        return \"No\";\n    }\n    // check\
    \ if the substring before", "    if(preg_match('/^[a-zA-Z]\\w*\\.(txt|exe|dll)$/',\
    \ $file_name))\n        return \"Yes\";\n    else\n        return \"No\";\n}\n\
    print_r(file_name_check(\"example.txt\"));\necho '<br/>';\nprint_r(file_name_check(\"\
    1example.dll\"));\necho '<br/>';\n", "    if(preg_match(\"/[0-9]{4,}/\", $file_name))\
    \ return \"No\";\n    if(preg_match(\"/^[a-zA-Z]\\w*\\.[txt|exe|dll]$/\", $file_name))\
    \ return \"Yes\";\n    return \"No\";\n}\n", "    $file_name_split = explode('.',\
    \ $file_name);\n    if (count($file_name_split) > 2) return 'No';\n    if (count($file_name_split)\
    \ == 1) return 'No';\n    $left_part = $file_name_split[0];\n    $right_part =\
    \ $file_name_split[1];\n    if (count(str_split($left_part)) < 1) return 'No';\n\
    \    if (!preg_match('/^[A-Za-z]{1}/', $left_part)) return 'No';\n    if (!in_array($right_part,\
    \ ['txt', 'exe', 'dll'])) return 'No';\n    if (preg_match('/\\d{4,}/', $left_part))\
    \ return 'No';\n    return 'Yes';\n}", "    \n    $file_name_parts = explode(\"\
    .\", $file_name);\n    $match_count = preg_match_all(\"/[0-9]/\", $file_name);\n\
    \    if (count($file_name_parts) != 2 || $match_count > 3 || empty($file_name_parts[0])\
    \ || \n        !preg_match(\"/^[a-zA-Z]/\", $file_name_parts[0]) || \n       \
    \ !preg_match(\"/^(txt|exe|dll)$/\", $file_name_parts[1])) {\n        return \"\
    No\";\n    }\n    return \"Yes\";\n}\n", "    $check1 = array('0', '1', '2', '3',\
    \ '4', '5', '6', '7', '8', '9');\n    $number_count = 0;\n    for ($i = 0; $i\
    \ < strlen($file_name); $i++) {\n        if (in_array($file_name[$i], $check1))\
    \ {\n            $number_count++;\n        }\n    }\n    if ($number_count > 3)\
    \ {\n        return \"No\";\n    }\n    if (!preg_match('/[a-zA-Z]\\./', $file_name))\
    \ {\n        return \"No\";\n    }\n    if (substr_count($file_name, '.') != 1)\
    \ {\n        return \"No\";\n    }\n    $check2 = array('txt', 'exe', 'dll');\n\
    \    $ext = explode('.', $file_name);\n    if (!in_array($ext[1], $check2)) {\n\
    \        return \"No\";\n    }\n    return \"Yes\";\n}\necho file_name_check(\"\
    example.txt\") . \"<br>\";\necho file_name_check(\"1example.dll\") . \"<br>\"\
    ;\necho file_name_check(\"example.dll\") . \"<br>\";\necho file_name_check(\"\
    a.txt\") . \"<br>\";\necho file_name_check(\"a.exe\") . \"<br>\";\necho file_name_check(\"\
    a.dll\") . \"<br>\";\necho file_name_check(\"1a.txt\") . \"<br>\";\necho file_name_check(\"\
    1a.exe\") . \"<br>\";\necho file_name_check(\"1a.dll\") . \"<br>\";\necho file_name_check(\"\
    2a.txt\") . \"<br>\";\necho file_name_check(\"2a.exe\") . \"<br>\";\necho file_name_check(\"\
    2a.dll\") . \"<br>\";\necho file_name_check(\"3a.txt\") . \"<br>\";\necho file_name_check(\"\
    3a.exe\") . \"<br>\";\necho file_name_check(\"3a.dll\") . \"<", "    // Your code\
    \ goes here.\n    $len = strlen($file_name);\n    $dot = strpos($file_name, '.');\n\
    \    $exp = explode('.', $file_name);\n    $arr = ['txt', 'exe', 'dll'];\n   \
    \ $str = '';\n    for ($i = 0; $i < $len; $i++) {\n        if ($file_name[$i]\
    \ >= '0' && $file_name[$i] <= '9') {\n            $str .= $file_name[$i];\n  \
    \      }\n    }\n    if (strlen($str) > 3) {\n        return 'No';\n    }\n  \
    \  if ($dot == false) {\n        return 'No';\n    }\n    if ($exp[0] == '') {\n\
    \        return 'No';\n    }\n    if ($exp[0][0] < 'a' || $exp[0][0] > 'z' &&\
    \ $exp[0][0] < 'A' || $exp[0][0] > 'Z') {\n        return 'No';\n    }\n    if\
    \ (!in_array($exp[1], $arr)) {\n        return 'No';\n    }\n    return 'Yes';\n\
    }", "\tif (count(explode('.', $file_name)) === 2) {\n\t\t$array = explode('.',\
    \ $file_name);\n\t\tif (count(explode('txt', $array[1])) === 2 \n\t\t\t|| count(explode('exe',\
    \ $array[1])) === 2 \n\t\t\t|| count(explode('dll', $array[1])) === 2) {\n\t\t\
    \t\treturn 'Yes';\n\t\t}\n\t}\n\treturn 'No';\n}\n\necho file_name_check(\"example.txt\"\
    ) . \"\\n\"; // \"Yes\"\necho file_name_check(\"1example.dll\") . \"\\n\"; //\
    \ \"No\"\necho file_name_check(\"123.123\") . \"\\n\"; // \"No\"\necho file_name_check(\"\
    example.exe\") . \"\\n\"; // \"Yes\"\necho file_name_check(\"example.txtt\") .\
    \ \"\\n\"; // \"No\"\necho file_name_check(\"example123.txt\") . \"\\n\"; // \"\
    Yes\"\necho file_name_check(\"example12.txt\") . \"\\n\"; // \"Yes\"\necho file_name_check(\"\
    example.dll\") . \"\\n\"; // \"Yes\"\necho file_name_check(\"example.dlll\") .\
    \ \"\\n\"; // \"No\"\necho file_name_check(\"example123.dll\") . \"\\n\"; // \"\
    No\"\necho file_name_check(\"example12.dll\") . \"\\n\"; // \"No\"\necho file_name_check(\"\
    example.exee\") . \"\\n\"; // \"No\"\necho file_name_check(\"example123.exe\"\
    ) . \"\\n\"; // \"No\"\necho file_name_check(\"example12.exe\") . \"\\n\"; //\
    \ \"No\"", "\t$extension = substr($file_name, strrpos($file_name, '.') + 1);\n\
    \t$file_name = str_replace(\".\" . $extension, \"\", $file_name);\n\t$length =\
    \ strlen($file_name);\n\tif (!preg_match(\"/^[a-zA-Z]+$/\", $file_name[0])) {\n\
    \t\treturn \"No\";\n\t}\n\t$count = 0;\n\tfor ($i = 0; $i < $length; $i++) {\n\
    \t\tif (is_numeric($file_name[$i])) {\n\t\t\t$count++;\n\t\t}\n\t}\n\tif ($count\
    \ > 3) {\n\t\treturn \"No\";\n\t}\n\tif ($extension == \"txt\" || $extension ==\
    \ \"exe\" || $extension == \"dll\") {\n\t\treturn \"Yes\";\n\t}\n\treturn \"No\"\
    ;\n}", "    $file_name_arr = explode('.', $file_name);\n    if (sizeof($file_name_arr)\
    \ != 2) {\n        return \"No\";\n    }\n    $file_name_arr[0] = str_split($file_name_arr[0]);\n\
    \    $file_name_arr[1] = str_split($file_name_arr[1]);\n    $is_valid = true;\n\
    \    $digit_count = 0;\n    for ($i = 0; $i < sizeof($file_name_arr[0]); $i++)\
    \ {\n        if (ord($file_name_arr[0][$i]) < ord('a') || ord($file_name_arr[0][$i])\
    \ > ord('z')) {\n            if (ord($file_name_arr[0][$i]) < ord('A') || ord($file_name_arr[0][$i])\
    \ > ord('Z')) {\n                if (ord($file_name_arr[0][$i]) < ord('0') ||\
    \ ord($file_name_arr[0][$i]) > ord('9')) {\n                    $is_valid = false;\n\
    \                    break;\n                } else {\n                    $digit_count++;\n\
    \                }\n            }\n        }\n    }\n    if ($digit_count > 3)\
    \ {\n        $is_valid = false;\n    }\n    if (!($file_name_arr[1][0] == 't'\
    \ && $file_name_arr[1][1] == 'x' && $file_name_arr[1][2] == 't' ||\n         \
    \   $file_name_arr[1][0] == 'e' && $file_name_arr[1][1] == 'x' && $file_name_arr[1][2]\
    \ == 'e' ||\n            $file_name_arr[1][0] == 'd' && $file_name_arr[1][1] ==\
    \ 'l' && $file_name_arr[1][2] == 'l')) {\n        $is_valid = false;\n    }\n\
    \    if ($is_valid) {\n        return \"Yes\";\n    } else {\n        return",
  "\n}\n", "    $regex_match_result = preg_match('/[a-zA-Z]{1}[a-zA-Z0-9]{0,}(\\.txt|\\\
    .exe|\\.dll)$/', $file_name);\n    if ($regex_match_result) {\n        return\
    \ \"Yes\";\n    } else {\n        return \"No\";\n    }\n}", "    if(count(explode('.',\
    \ $file_name)) == 2) {\n        //makes sure there is only one period\n      \
    \  $name = explode('.', $file_name);\n        $name_ext = array_pop($name);\n\
    \        $name = implode('.', $name);\n        if(preg_match('/^[a-zA-Z]+[a-zA-Z0-9]*$/',\
    \ $name)) {\n            //filename is not empty and only contains alphanumerics\
    \ and starts with letter\n            if(preg_match('/[0-9]{4}/', $name)) {\n\
    \                //checks for more than 3 numbers\n                return \"No\"\
    ;\n            }\n            if(!in_array($name_ext, ['txt', 'exe', 'dll']))\
    \ {\n                //checks to see if extension is correct\n               \
    \ return \"No\";\n            }\n            return \"Yes\";\n        }\n    }\n\
    \    return \"No\";\n}", "    $count_digit = preg_match_all('/[0-9]/', $file_name);\n\
    \    $count_dot = substr_count($file_name, '.');\n    $arr_split = explode('.',\
    \ $file_name);\n    $after_dot = array_pop($arr_split);\n    $before_dot = array_shift($arr_split);\n\
    \    $first_char = substr($before_dot, 0, 1);\n    if (strlen($before_dot) > 0\
    \ && $count_digit <= 3 && $count_dot == 1 && preg_match('/[a-zA-Z]/', $first_char)\
    \ && in_array($after_dot, ['txt', 'exe', 'dll'])) {\n        return 'Yes';\n \
    \   } else {\n        return 'No';\n    }\n}\n", "    $file_name_arr = explode('.',\
    \ $file_name);\n    if (count($file_name_arr) == 2 && preg_match('/^[a-zA-Z]/',\
    \ $file_name_arr[0]) && count(preg_split('/[0-9]/', $file_name_arr[0])) == 1 &&\
    \ in_array($file_name_arr[1], ['txt', 'exe', 'dll'])) {\n        return 'Yes';\n\
    \    } else {\n        return 'No';\n    }\n}\n$input = fgets(STDIN);\necho file_name_check($input)\
    \ . PHP_EOL;", "    $parts = explode('.', $file_name);\n    // check number of\
    \ parts\n    if (count($parts) !== 2) {\n        return 'No';\n    }\n    // get\
    \ substrings\n    $part1 = $parts[0];\n    $part2 = $parts[1];\n    // check number\
    \ of digits\n    $num_digits = 0;\n    for ($i = 0; $i < strlen($part1); $i++)\
    \ {\n        if (is_numeric($part1[$i])) {\n            $num_digits++;\n     \
    \   }\n    }\n    if ($num_digits > 3) {\n        return 'No';\n    }\n    //\
    \ check the first character\n    if (!preg_match('/^[a-zA-Z]/', $part1)) {\n \
    \       return 'No';\n    }\n    // check if part2 is valid\n    if (!in_array($part2,\
    \ ['txt', 'exe', 'dll'])) {\n        return 'No';\n    }\n    return 'Yes';\n}",
  "    $dot_found = false;\n    $pre_dot = \"\";\n    $post_dot = \"\";\n    $num_digits\
    \ = 0;\n    for ($i = 0; $i < strlen($file_name); $i++) {\n        if ($file_name[$i]\
    \ == '.') {\n            $dot_found = true;\n            continue;\n        }\n\
    \        if ($dot_found) {\n            $post_dot .= $file_name[$i];\n       \
    \ } else {\n            $pre_dot .= $file_name[$i];\n        }\n        if ($file_name[$i]\
    \ >= '0' && $file_name[$i] <= '9') {\n            $num_digits++;\n        }\n\
    \    }\n    if (!$dot_found || $num_digits > 3 || strlen($pre_dot) == 0 || !ctype_alpha($pre_dot[0])\
    \ || \n        !in_array($post_dot, ['txt', 'exe', 'dll'])) {\n        return\
    \ \"No\";\n    }\n    return \"Yes\";\n}\n", "    $dot_index = strpos($file_name,\
    \ '.');\n    $name_before_dot = substr($file_name, 0, $dot_index);\n    $name_after_dot\
    \ = substr($file_name, $dot_index + 1);\n    if (preg_match('/[0-9]{4,}/', $name_before_dot)\
    \ || preg_match('/[0-9]{4,}/', $name_after_dot))\n        return \"No\";\n   \
    \ elseif (!preg_match('/[A-Za-z]/', $name_before_dot))\n        return \"No\"\
    ;\n    elseif ($name_after_dot != 'txt' && $name_after_dot != 'exe' && $name_after_dot\
    \ != 'dll')\n        return \"No\";\n    else\n        return \"Yes\";\n}\n",
  "    // Write your code here\n    $n = strlen($file_name);\n    $flag = 1;\n   \
    \ $count = 0;\n    for($i = 0; $i < $n; $i++) {\n        if(ord($file_name[$i])\
    \ >= ord('0') && ord($file_name[$i]) <= ord('9')) {\n            $count++;\n \
    \       }\n    }\n    if($count > 3) {\n        $flag = 0;\n    }\n    $count\
    \ = 0;\n    for($i = 0; $i < $n; $i++) {\n        if($file_name[$i] == '.') {\n\
    \            $count++;\n        }\n    }\n    if($count != 1) {\n        $flag\
    \ = 0;\n    }\n    $flag1 = 0;\n    for($i = 0; $i < $n; $i++) {\n        if($file_name[$i]\
    \ == '.') {\n            $flag1 = 1;\n        }\n        if($flag1 == 0) {\n \
    \           if(ord($file_name[$i]) >= ord('a') && ord($file_name[$i]) <= ord('z')\
    \ || ord($file_name[$i]) >= ord('A') && ord($file_name[$i]) <= ord('Z')) {\n \
    \               continue;\n            }\n            else {\n               \
    \ $flag = 0;\n                break;\n            }\n        }\n    }\n    $flag2\
    \ = 0;\n    for($i = 0; $i < $n; $i++) {\n        if($file_name[$i] == '.') {\n\
    \            $flag2 = 1;\n        }\n        if($flag2 == 1) {\n            if($file_name[$i]\
    \ == '.') {\n                $flag2 = 2;\n            }\n            if($flag2\
    \ == 2) {\n                if($file_name[$i] == 't' && $file_name[$i + 1] == 'x'\
    \ && $file_name[$i + 2] == 't') {\n                    break;\n              \
    \  }\n                else if($file_name[$i] ==", "    $matches = [];\n    preg_match(\"\
    /^[a-zA-Z][a-zA-Z0-9]{0,2}\\.[a-zA-Z]{3}$/\", $file_name, $matches);\n    if (count($matches)\
    \ > 0) {\n        $substrs = explode(\".\", $file_name);\n        if (($substrs[1]\
    \ === \"txt\") || ($substrs[1] === \"exe\") || ($substrs[1] === \"dll\")) {\n\
    \            return \"Yes\";\n        }\n    }\n    return \"No\";\n}", "    $num_pattern\
    \ = '/\\d/';\n    $dot_pattern = '/\\./';\n    $alpha_pattern = '/^[a-zA-Z]/';\n\
    \    $txt_exe_dll_pattern = '/\\.(txt|exe|dll)$/';\n    preg_match_all($num_pattern,\
    \ $file_name, $matches);\n    if (count($matches[0]) > 3) {\n        return \"\
    No\";\n    } else {\n        preg_match_all($dot_pattern, $file_name, $matches);\n\
    \        if (count($matches[0]) != 1) {\n            return \"No\";\n        }\
    \ else {\n            preg_match_all($alpha_pattern, $file_name, $matches);\n\
    \            if (!count($matches[0])) {\n                return \"No\";\n    \
    \        } else {\n                preg_match_all($txt_exe_dll_pattern, $file_name,\
    \ $matches);\n                if (!count($matches[0])) {\n                   \
    \ return \"No\";\n                } else {\n                    return \"Yes\"\
    ;\n                }\n            }\n        }\n    }\n}", "\t// Write your code\
    \ here\n\tif (substr_count($file_name, '.') != 1) {\n\t\treturn \"No\";\n\t}\n\
    \tif (substr_count($file_name, '.') == 1) {\n\t\t$sub_count = substr_count($file_name,\
    \ '.');\n\t\t$sub_str = explode('.', $file_name);\n\t\t$sub_str = $sub_str[$sub_count];\n\
    \t\t$sub_str = $sub_str[0];\n\t\tif (!ctype_alpha($sub_str)) {\n\t\t\treturn \"\
    No\";\n\t\t}\n\t}\n\tif (substr_count($file_name, '.') == 1) {\n\t\t$sub_count\
    \ = substr_count($file_name, '.');\n\t\t$sub_str = explode('.', $file_name);\n\
    \t\t$sub_str = $sub_str[$sub_count];\n\t\tif (!in_array($sub_str, ['txt', 'exe',\
    \ 'dll'])) {\n\t\t\treturn \"No\";\n\t\t}\n\t}\n\tif (substr_count($file_name,\
    \ '.') == 1) {\n\t\t$sub_count = substr_count($file_name, '.');\n\t\t$sub_str\
    \ = explode('.', $file_name);\n\t\t$sub_str = $sub_str[$sub_count - 1];\n\t\t\
    if (strlen($sub_str) == 0) {\n\t\t\treturn \"No\";\n\t\t}\n\t}\n\tif (substr_count($file_name,\
    \ '.') == 1) {\n\t\t$sub_count = substr_count($file_name, '.');\n\t\t$sub_str\
    \ = explode('.', $file_name);\n\t\t$sub_str = $sub_str[$sub_count - 1];\n\t\t\
    if (substr_count($sub_str, '0') + substr_count($sub_str, '1') + substr_count($sub_str,\
    \ '2') + substr_count($sub_str, '3') + substr_count($sub_", "    $arr = explode('.',\
    \ $file_name);\n    $res = preg_match_all('/[0-9]/', $arr[0]);\n    $validExtensions\
    \ = ['txt', 'exe', 'dll'];\n    $c = '';\n    if ($res > 3) {\n        $c = 'No';\n\
    \    } else if (preg_match('/^[a-zA-Z]+$/', $arr[0]) == 0) {\n        $c = 'No';\n\
    \    } else if (!in_array($arr[1], $validExtensions)) {\n        $c = 'No';\n\
    \    } else {\n        $c = 'Yes';\n    }\n    return $c;\n}\n", "    // your\
    \ code here\n}\n", "  $file_name_array = explode(\".\", $file_name);\n  $file_type\
    \ = array(\"txt\", \"exe\", \"dll\");\n  if (count($file_name_array) == 2) {\n\
    \    if (count($file_name_array[0]) <= 3) {\n      if (strlen($file_name_array[1])\
    \ == 3) {\n        if ((ctype_alpha($file_name_array[0][0])) && (strlen($file_name_array[0])\
    \ > 0)) {\n          if (in_array($file_name_array[1], $file_type)) {\n      \
    \      return \"Yes\";\n          }\n        }\n      }\n    }\n  }\n  return\
    \ \"No\";\n}\n\nif (file_name_check(\"e1ample.txt\") == \"Yes\") {\n  echo \"\
    Test passed.<br>\";\n} else {\n  echo \"Test failed.<br>\";\n}\nif (file_name_check(\"\
    example.exe\") == \"Yes\") {\n  echo \"Test passed.<br>\";\n} else {\n  echo \"\
    Test failed.<br>\";\n}\nif (file_name_check(\"example.dll\") == \"Yes\") {\n \
    \ echo \"Test passed.<br>\";\n} else {\n  echo \"Test failed.<br>\";\n}\nif (file_name_check(\"\
    examlpe.txt\") == \"No\") {\n  echo \"Test passed.<br>\";\n} else {\n  echo \"\
    Test failed.<br>\";\n}\nif (file_name_check(\"e.txt\") == \"No\") {\n  echo \"\
    Test passed.<br>\";\n} else {\n  echo \"Test failed.<br>\";\n}\nif (file_name_check(\"\
    exa.mple.txt\") == \"No\") {\n  echo \"Test passed.<br>\";\n} else {\n  echo \"\
    Test failed.<br>\";\n}\nif (file_name_check(\"exa.txt\") == \"No\") {\n  echo\
    \ \"Test passed.<br>\";\n} else {\n  echo \"Test failed.<br>\";\n}\nif (file_name_check(\"\
    e1ample.dll\") == \"No\")", "    if (strlen($file_name) <= 1) {\n        return\
    \ 'No';\n    }\n    if (!preg_match('/^[a-zA-Z][a-zA-Z0-9]*$/', substr($file_name,\
    \ 0, strpos($file_name, '.')))) {\n        return 'No';\n    }\n    if (substr_count($file_name,\
    \ '.') != 1) {\n        return 'No';\n    }\n    if (strlen($file_name) - strpos($file_name,\
    \ '.') <= 1) {\n        return 'No';\n    }\n    if (!preg_match('/^(exe|txt|dll)$/',\
    \ substr($file_name, strpos($file_name, '.') + 1))) {\n        return 'No';\n\
    \    }\n    if (substr_count($file_name, '0') + substr_count($file_name, '1')\
    \ + substr_count($file_name, '2') + substr_count($file_name, '3') + substr_count($file_name,\
    \ '4') + substr_count($file_name, '5') + substr_count($file_name, '6') + substr_count($file_name,\
    \ '7') + substr_count($file_name, '8') + substr_count($file_name, '9') > 3) {\n\
    \        return 'No';\n    }\n    return 'Yes';\n}\necho file_name_check(\"example.txt\"\
    );\necho '<br>';\necho file_name_check(\"1example.dll\");\necho '<br>';\necho\
    \ file_name_check(\"0123456789.dll\");\necho '<br>';\necho file_name_check(\"\
    example.0123\");\necho '<br>';\necho file_name_check(\"example.exe\");\necho '<br>';\n\
    echo file_name_check(\"example.txt\");\necho '<br>';\necho file_name_check(\"\
    1example.dll\");\necho '<br>';\necho file_name_check(\"0123456789.dll\");\necho\
    \ '<br>';\necho file_name", "    \n}\n", "    if (!preg_match('/^\\d{0,3}[a-z]+\\\
    .[txt|exe|dll]$/i', $file_name)) {\n        return \"No\";\n    } else {\n   \
    \     return \"Yes\";\n    }\n}\n", "\t$len = strlen($file_name);\n\t$first_dot\
    \ = -1;\n\t$second_dot = -1;\n\t$is_valid = True;\n\t$num_digit = 0;\n\tfor ($i\
    \ = 0; $i < $len; $i++) {\n\t\tif ($file_name[$i] >= '0' && $file_name[$i] <=\
    \ '9') {\n\t\t\t$num_digit += 1;\n\t\t}\n\t\tif ($file_name[$i] == '.') {\n\t\t\
    \tif ($first_dot == -1) {\n\t\t\t\t$first_dot = $i;\n\t\t\t} else {\n\t\t\t\t\
    $second_dot = $i;\n\t\t\t}\n\t\t}\n\t}\n\tif ($num_digit > 3 || $second_dot !=\
    \ -1 || $first_dot == 0 || $first_dot == $len - 1) {\n\t\t$is_valid = False;\n\
    \t} else {\n\t\t$extension = substr($file_name, $first_dot + 1);\n\t\tif ($extension\
    \ != 'txt' && $extension != 'exe' && $extension != 'dll') {\n\t\t\t$is_valid =\
    \ False;\n\t\t}\n\t}\n\tif ($is_valid) {\n\t\treturn \"Yes\";\n\t} else {\n\t\t\
    return \"No\";\n\t}\n}\necho file_name_check(\"example.txt\"); // \"Yes\"\necho\
    \ \"\\n\";\necho file_name_check(\"1example.dll\"); // \"No\"\necho \"\\n\";",
  "\n}", "    // Write the code here.\n}", "  // To check if the first condition is\
    \ satisfied.\n  if (preg_match_all('/[0-9]/', $file_name) > 3) {\n    return \"\
    No\";\n  }\n  // To check if the file's name contains exactly one dot.\n  $num_of_dots\
    \ = 0;\n  $dot_index = -1;\n  for ($i = 0; $i < strlen($file_name); $i++) {\n\
    \    if ($file_name[$i] == '.') {\n      $num_of_dots++;\n      $dot_index = $i;\n\
    \    }\n  }\n  if ($num_of_dots != 1) {\n    return \"No\";\n  }\n  // To check\
    \ if the substring before the dot starts with a letter from the latin alphapet.\n\
    \  if (!preg_match('/^[a-zA-Z]/', substr($file_name, 0, $dot_index))) {\n    return\
    \ \"No\";\n  }\n  // To check if the substring after the dot is one of these:\
    \ ['txt', 'exe', 'dll'].\n  if (!in_array(substr($file_name, $dot_index + 1),\
    \ ['txt', 'exe', 'dll'])) {\n    return \"No\";\n  }\n  return \"Yes\";\n}", " \
    \   if (substr_count($file_name, '.') != 1) {\n        return \"No\";\n    }\n\
    \n    $before_dot = substr($file_name, 0, strpos($file_name, '.'));\n    $after_dot\
    \ = substr($file_name, strpos($file_name, '.') + 1);\n\n    if (substr_count($before_dot,\
    \ '0') > 3 || substr_count($before_dot, '1') > 3 ||\n        substr_count($before_dot,\
    \ '2') > 3 || substr_count($before_dot, '3') > 3 ||\n        substr_count($before_dot,\
    \ '4') > 3 || substr_count($before_dot, '5') > 3 ||\n        substr_count($before_dot,\
    \ '6') > 3 || substr_count($before_dot, '7') > 3 ||\n        substr_count($before_dot,\
    \ '8') > 3 || substr_count($before_dot, '9') > 3 ||\n        !ctype_alpha($before_dot[0]))\
    \ {\n        return \"No\";\n    }\n\n    if ($after_dot != 'txt' && $after_dot\
    \ != 'exe' && $after_dot != 'dll') {\n        return \"No\";\n    }\n\n    return\
    \ \"Yes\";\n}\n\necho file_name_check(\"example.txt\");\necho \"<br>\";\necho\
    \ file_name_check(\"1example.dll\");\necho \"<br>\";\necho file_name_check(\"\
    1example\");\necho \"<br>\";\necho file_name_check(\"example.exe\");\necho \"\
    <br>\";\necho file_name_check(\"example.hxm\");\necho \"<br>\";\necho file_name_check(\"\
    example.dll\");\necho \"<br>\";\necho file_name_check(\"example.dll\");\necho\
    \ \"<br>\";\necho file_name_check(\"example.dll\");\necho \"<br>\";\necho file_name_check(\"\
    example.dll\");\necho \"<br>\";\necho file_name_check(\"example.dll\");\necho\
    \ \"<br>\";\necho file_name_check(\"example.dll\");\necho \"<br>\";\necho file_name_",
  "    $name_list = explode('.', $file_name);\n    if (count($name_list) != 2) return\
    \ 'No';\n    $name = $name_list[0];\n    $ext = $name_list[1];\n    if (!preg_match('/^[a-zA-Z][\\\
    w]*$/', $name)) return 'No';\n    if (!preg_match('/^\\d*$/', $name)) return 'No';\n\
    \    if (strlen($name) > 3) return 'No';\n    if (!in_array($ext, ['txt', 'exe',\
    \ 'dll'])) return 'No';\n    return 'Yes';\n}\n", "    // write your solution\
    \ here\n}", "\t// sanitize input\n\t$file_name = strtolower($file_name);\n\t//\
    \ split on dot\n\t$parts = explode('.', $file_name);\n\t// check for single dot,\
    \ and for parts\n\tif (count($parts) != 2) {\n\t\treturn 'No';\n\t}\n\t// check\
    \ for no digits in before-dot string\n\tif (preg_match('/\\d/', $parts[0])) {\n\
    \t\treturn 'No';\n\t}\n\t// check for alphabetical letter in before-dot string\n\
    \tif (!preg_match('/[a-z]/', $parts[0])) {\n\t\treturn 'No';\n\t}\n\t// check\
    \ for only three digits in before-dot string\n\tif (preg_match('/\\d{4}/', $parts[0]))\
    \ {\n\t\treturn 'No';\n\t}\n\t// check that extension is valid\n\t$extensions\
    \ = ['txt', 'exe', 'dll'];\n\tif (!in_array($parts[1], $extensions)) {\n\t\treturn\
    \ 'No';\n\t}\n\t// otherwise, it's good\n\treturn 'Yes';\n}\n", "    $pattern\
    \ = '/^[a-zA-Z]{1}[\\w]{0,}[0-9]{0,3}\\.[a-zA-Z]{3}$/';\n    if (preg_match($pattern,\
    \ $file_name) == 1){\n        return \"Yes\";\n    } else {\n        return \"\
    No\";\n    }\n}\necho file_name_check(\"example.txt\").\"\\n\"; // \"Yes\"\necho\
    \ file_name_check(\"1example.dll\").\"\\n\"; // \"No\"", "  $len = strlen($file_name);\n\
    \  $dot_pos = strpos($file_name, '.');\n  $file_extension = substr($file_name,\
    \ $dot_pos + 1);\n  $file_name_no_extension = substr($file_name, 0, $dot_pos);\n\
    \  $cnt = 0;\n  for ($i = 0; $i < $len; $i++) {\n    if (ctype_digit($file_name[$i]))\
    \ {\n      $cnt++;\n    }\n  }\n  if ($cnt > 3) {\n    return \"No\";\n  }\n \
    \ if (ctype_alpha($file_name_no_extension[0]) && in_array($file_extension, ['txt',\
    \ 'exe', 'dll'])) {\n    return \"Yes\";\n  }\n  return \"No\";\n}\necho file_name_check(\"\
    example.txt\");\necho \"\\n\";\necho file_name_check(\"1example.dll\");", "  \
    \  $count_num = 0;\n    $count_dot = 0;\n    $count_dot_position = 0;\n    $str_after_dot\
    \ = \"\";\n    $str_before_dot = \"\";\n    $len = strlen($file_name);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        if (is_numeric($file_name[$i])) {\n   \
    \         $count_num++;\n        } else if ($file_name[$i] == '.') {\n       \
    \     $count_dot++;\n            $count_dot_position = $i;\n        }\n    }\n\
    \    $str_after_dot = substr($file_name, $count_dot_position + 1);\n    $str_before_dot\
    \ = substr($file_name, 0, $count_dot_position);\n    if ($count_num > 3 || !preg_match('/^[a-zA-Z][a-zA-Z0-9]*$/',\
    \ $str_before_dot) || !in_array($str_after_dot, array('txt', 'exe', 'dll'))) {\n\
    \        return \"No\";\n    } else {\n        return \"Yes\";\n    }\n}\necho\
    \ file_name_check(\"example.txt\");\necho file_name_check(\"1example.dll\");",
  "  $substring_after_dot = substr($file_name, strrpos($file_name, '.') + 1);\n  if\
    \ (preg_match('/^[a-zA-Z]+(\\d+){1,3}$/', \n    substr($file_name, 0, strrpos($file_name,\
    \ '.'))) \n    && substr_count($file_name, '.') == 1 \n    && in_array($substring_after_dot,\
    \ ['txt', 'exe', 'dll'])) {\n    return 'Yes';\n  }\n  return 'No';\n}", "  //\
    \ WRITE YOUR CODE HERE\n  // check if it contains a dot\n  $pieces = explode(\"\
    .\", $file_name);\n  if (count($pieces) < 2) {\n    return \"No\";\n  }\n  if\
    \ (count($pieces) > 2) {\n    return \"No\";\n  }\n  $substr = $pieces[0];\n \
    \ if (is_numeric($substr[0])) {\n    return \"No\";\n  }\n  if (strlen($substr)\
    \ < 1) {\n    return \"No\";\n  }\n  $substr_after_dot = $pieces[1];\n  if (!($substr_after_dot\
    \ == \"txt\" || $substr_after_dot == \"exe\" || $substr_after_dot == \"dll\"))\
    \ {\n    return \"No\";\n  }\n  $count = 0;\n  for ($i = 0; $i < strlen($substr);\
    \ $i++) {\n    if (is_numeric($substr[$i])) {\n      $count++;\n    }\n  }\n \
    \ if ($count > 3) {\n    return \"No\";\n  }\n  return \"Yes\";\n}\n", "    $count_digit\
    \ = 0;\n    $count_dot = 0;\n    $count_a = 0;\n    $count_dot_format = 0;\n \
    \   $count_e = 0;\n    $count_first_letter = 0;\n    for ($i = 0; $i < strlen($file_name);\
    \ $i++) {\n        if (ord($file_name[$i]) >= 97 && ord($file_name[$i]) <= 122)\
    \ {\n            $count_a++;\n        }\n        if (ord($file_name[$i]) >= 65\
    \ && ord($file_name[$i]) <= 90) {\n            $count_a++;\n        }\n      \
    \  if (ord($file_name[$i]) >= 48 && ord($file_name[$i]) <= 57) {\n           \
    \ $count_digit++;\n        }\n        if ($file_name[$i] == '.') {\n         \
    \   $count_dot++;\n        }\n        if ($file_name[$i] == 'e') {\n         \
    \   $count_e++;\n        }\n        if ($i == 0) {\n            $count_first_letter++;\n\
    \        }\n    }\n    $dot_format = substr($file_name, strpos($file_name, '.')\
    \ + 1);\n    if ($dot_format == 'txt') {\n        $count_dot_format++;\n    }\n\
    \    if ($dot_format == 'exe') {\n        $count_dot_format++;\n    }\n    if\
    \ ($dot_format == 'dll') {\n        $count_dot_format++;\n    }\n    if ($count_digit\
    \ > 3) {\n        return \"No\";\n    }\n    if ($count_dot != 1) {\n        return\
    \ \"No\";\n    }\n    if ($count_e != 1) {\n        return \"No\";\n    }\n  \
    \  if ($count_a == 0) {\n        return \"No\";\n    }\n    if ($count_dot_format\
    \ == 0) {\n        return \"No\";\n    }\n    if ($count_first_letter == 0) {\n\
    \        return \"No\";\n    }\n    return \"Yes\";\n}\n", "    $digits = 0;\n\
    \    $dot_found = false;\n    $before_dot = '';\n    $after_dot = '';\n    $dot_pos\
    \ = 0;\n    $i = 0;\n    $excellent_exts = ['txt', 'exe', 'dll'];\n    $ext_found\
    \ = false;\n    // Check if number of digits is not more than 3.\n    for($i =\
    \ 0; $i < strlen($file_name); $i++) {\n        if($file_name[$i] >= '0' && $file_name[$i]\
    \ <= '9') {\n            $digits++;\n        }\n    }\n    if($digits > 3) {\n\
    \        return 'No';\n    }\n    // Check if file's name contains exactly one\
    \ dot.\n    $dot_count = 0;\n    for($i = 0; $i < strlen($file_name); $i++) {\n\
    \        if($file_name[$i] == '.') {\n            $dot_count++;\n            $dot_pos\
    \ = $i;\n        }\n    }\n    if($dot_count > 1) {\n        return 'No';\n  \
    \  }\n    // Check if substring before dot is valid.\n    $before_dot = substr($file_name,\
    \ 0, $dot_pos);\n    if(ctype_digit($before_dot[0])) {\n        return 'No';\n\
    \    }\n    if(strlen($before_dot) == 0) {\n        return 'No';\n    }\n    //\
    \ Check if the file's extension is valid.\n    $after_dot = substr($file_name,\
    \ $dot_pos + 1);\n    for($i = 0; $i < count($excellent_exts); $i++) {\n     \
    \   if($after_dot == $excellent_exts[$i]) {\n            $ext_found = true;\n\
    \        }\n    }\n    if(!$ext_found) {\n        return 'No';\n    }\n    return\
    \ 'Yes';\n}\n", "\t$status = 0;\n\t$len = strlen($file_name);\n\t$dot = 0;\n\t\
    $num = 0;\n\t$dot_pos = 0;\n\t$sub1 = \"\";\n\t$sub2 = \"\";\n\tfor ($i = 0; $i\
    \ < $len; $i++) {\n\t\tif ($file_name[$i] == '.') {\n\t\t\t$dot = 1;\n\t\t\t$dot_pos\
    \ = $i;\n\t\t}\n\t\tif ($file_name[$i] >= '0' && $file_name[$i] <= '9')\n\t\t\t\
    $num++;\n\t}\n\tif ($num > 3)\n\t\t$status = 1;\n\tif ($dot == 0)\n\t\t$status\
    \ = 1;\n\tif ($dot_pos == 0)\n\t\t$status = 1;\n\tif ($file_name[0] >= 'a' &&\
    \ $file_name[0] <= 'z' || $file_name[0] >= 'A' && $file_name[0] <= 'Z') {\n\t\t\
    $sub1 = substr($file_name, 0, $dot_pos);\n\t\t$sub2 = substr($file_name, $dot_pos\
    \ + 1);\n\t}\n\telse\n\t\t$status = 1;\n\tif (!($sub2 == \"txt\" || $sub2 == \"\
    exe\" || $sub2 == \"dll\"))\n\t\t$status = 1;\n\tif ($status == 0)\n\t\treturn\
    \ \"Yes\";\n\telse\n\t\treturn \"No\";\n}", "    if (preg_match('/^[a-zA-Z]\\\
    d{0,3}\\.txt$|^[a-zA-Z]\\d{0,3}\\.exe$|^[a-zA-Z]\\d{0,3}\\.dll$/', $file_name))\
    \ {\n        return \"Yes\";\n    }\n    return \"No\";\n}\n\necho file_name_check(\"\
    example.txt\");", "    return 0;\n}", "    if (preg_match(\"/^[a-zA-Z][^.]{0,255}\\\
    .txt$/\", $file_name)) {\n        echo \"yes\";\n    } elseif (preg_match(\"/^[a-zA-Z][^.]{0,255}\\\
    .exe$/\", $file_name)) {\n        echo \"yes\";\n    } elseif (preg_match(\"/^[a-zA-Z][^.]{0,255}\\\
    .dll$/\", $file_name)) {\n        echo \"yes\";\n    } else {\n        echo \"\
    no\";\n    }\n}\n\nfile_name_check(\"example.txt\");\necho \"\\n\";\nfile_name_check(\"\
    1example.dll\");\necho \"\\n\";\nfile_name_check(\"1example.exe\");\necho \"\\\
    n\";\nfile_name_check(\"example.txt.exe\");\necho \"\\n\";\nfile_name_check(\"\
    111example.txt\");\necho \"\\n\";\nfile_name_check(\"example.exe\");\necho \"\\\
    n\";", "  $file_info = pathinfo($file_name);\n  $name = $file_info['filename'];\n\
    \  $extension = $file_info['extension'];\n  $number_count = substr_count($name,\
    \ '0') + substr_count($name, '1')\n      + substr_count($name, '2') + substr_count($name,\
    \ '3') + substr_count($name, '4')\n      + substr_count($name, '5') + substr_count($name,\
    \ '6') + substr_count($name, '7')\n      + substr_count($name, '8') + substr_count($name,\
    \ '9');\n  $dot_count = substr_count($name, '.');\n  $first_character = substr($name,\
    \ 0, 1);\n  $check_extension = $extension == 'txt' || $extension == 'exe' || $extension\
    \ == 'dll';\n  if ($number_count <= 3 && $dot_count == 1 && preg_match('/^[a-zA-Z]/',\
    \ $first_character)\n      && $check_extension) {\n    return 'Yes';\n  } else\
    \ {\n    return 'No';\n  }\n}\n", "    $file_name_list = explode('.', $file_name);\n\
    \    if(!preg_match('/^[a-zA-Z]{1}/', $file_name_list[0])){\n        return 'No';\n\
    \    }\n    if(!in_array($file_name_list[1], array('txt', 'exe', 'dll'))){\n \
    \       return 'No';\n    }\n    if(count($file_name_list) > 2){\n        return\
    \ 'No';\n    }\n    if(count($file_name_list) == 1){\n        return 'No';\n \
    \   }\n    if(preg_match('/[0-9]{4}/', $file_name)){\n        return 'No';\n \
    \   }\n    return 'Yes';\n}\necho file_name_check(\"example.txt\") . PHP_EOL;\n\
    echo file_name_check(\"1example.dll\") . PHP_EOL;\necho file_name_check(\"example.exe\"\
    ) . PHP_EOL;\necho file_name_check(\"example.exe.txt\") . PHP_EOL;\necho file_name_check(\"\
    example\") . PHP_EOL;\necho file_name_check(\"example.exe.exe\") . PHP_EOL;\n\
    echo file_name_check(\"1234example.txt\") . PHP_EOL;\necho file_name_check(\"\
    example1234.txt\") . PHP_EOL;\necho file_name_check(\"example1234\") . PHP_EOL;\n\
    echo file_name_check(\"example.txt1234\") . PHP_EOL;\necho file_name_check(\"\
    example.txt.exe\") . PHP_EOL;\necho file_name_check(\"example1234.dll\") . PHP_EOL;\n\
    echo file_name_check(\"example.dll1234\") . PHP_EOL;\necho file_name_check(\"\
    example.dll.exe\") . PHP_EOL;\necho file_name_check(\"example12345.txt\") . PHP_EOL;\n\
    echo file_name_check(\"12345example.txt\") . PHP_EOL;\necho file_name_check(\"\
    12345.", "\t$result = 'No';\n\t$extensions = ['txt', 'exe', 'dll'];\n\t$extension\
    \ = '';\n\t$latin_alphabet = range('a', 'z');\n\t$count_numbers = 0;\n\t$count_dots\
    \ = 0;\n\t$is_latin_letter = false;\n\tfor ($i = 0; $i < strlen($file_name); $i++)\
    \ {\n\t\tif (ctype_digit($file_name[$i])) {\n\t\t\t$count_numbers++;\n\t\t}\n\t\
    \tif ($file_name[$i] == '.') {\n\t\t\t$count_dots++;\n\t\t}\n\t\tif ($file_name[$i]\
    \ == '.') {\n\t\t\tfor ($j = $i + 1; $j < strlen($file_name); $j++) {\n\t\t\t\t\
    $extension .= $file_name[$j];\n\t\t\t}\n\t\t}\n\t\tif (in_array($file_name[0],\
    \ $latin_alphabet)) {\n\t\t\t$is_latin_letter = true;\n\t\t}\n\t}\n\tif ($count_numbers\
    \ > 3) {\n\t\treturn $result;\n\t}\n\tif ($count_dots != 1) {\n\t\treturn $result;\n\
    \t}\n\tif (!$is_latin_letter) {\n\t\treturn $result;\n\t}\n\tif (!in_array($extension,\
    \ $extensions)) {\n\t\treturn $result;\n\t}\n\t$result = 'Yes';\n\treturn $result;\n\
    }", "\t$res = 'Yes';\n\t$len = strlen($file_name);\n\t$dot_pos = 0;\n\t$digits_count\
    \ = 0;\n\tfor ($i = 0; $i < $len; $i++) {\n\t\tif ($file_name[$i] == '.') {\n\t\
    \t\t$dot_pos = $i;\n\t\t}\n\t\tif (ord($file_name[$i]) >= ord('0') && ord($file_name[$i])\
    \ <= ord('9')) {\n\t\t\t$digits_count++;\n\t\t}\n\t}\n\tif ($digits_count > 3)\
    \ {\n\t\t$res = 'No';\n\t}\n\tif ($dot_pos == 0 || $dot_pos == $len - 1) {\n\t\
    \t$res = 'No';\n\t}\n\tif (!(ord($file_name[0]) >= ord('a') && ord($file_name[0])\
    \ <= ord('z') ||\n\t\tord($file_name[0]) >= ord('A') && ord($file_name[0]) <=\
    \ ord('Z'))) {\n\t\t$res = 'No';\n\t}\n\tif ($file_name[$dot_pos + 1] != 't' ||\
    \ $file_name[$dot_pos + 2] != 'x' || $file_name[$dot_pos + 3] != 't') {\n\t\t\
    if ($file_name[$dot_pos + 1] != 'e' || $file_name[$dot_pos + 2] != 'x' || $file_name[$dot_pos\
    \ + 3] != 'e') {\n\t\t\tif ($file_name[$dot_pos + 1] != 'd' || $file_name[$dot_pos\
    \ + 2] != 'l' || $file_name[$dot_pos + 3] != 'l') {\n\t\t\t\t$res = 'No';\n\t\t\
    \t}\n\t\t}\n\t}\n\treturn $res;\n}\n", "    // WRITE YOUR CODE HERE\n}\n", " \
    \   $sub_string = explode(\".\", $file_name);\n    // check there are 2 sub strings\n\
    \    if (count($sub_string) != 2) {\n        return \"No\";\n    }\n    // check\
    \ there are less than 3 digits in the file name\n    $count = 0;\n    for ($i\
    \ = 0; $i < strlen($sub_string[0]); $i++) {\n        if (ord($sub_string[0][$i])\
    \ >= 48 && ord($sub_string[0][$i]) <= 57) {\n            $count++;\n        }\n\
    \    }\n    if ($count > 3) {\n        return \"No\";\n    }\n    // check that\
    \ the first part of the string starts with a letter\n    if (ord($sub_string[0][0])\
    \ < 65 || (ord($sub_string[0][0]) > 90 && ord($sub_string[0][0]) < 97) || ord($sub_string[0][0])\
    \ > 122) {\n        return \"No\";\n    }\n    // check that the last part of\
    \ the string is valid\n    if ($sub_string[1] != \"txt\" && $sub_string[1] !=\
    \ \"exe\" && $sub_string[1] != \"dll\") {\n        return \"No\";\n    }\n   \
    \ return \"Yes\";\n}\necho file_name_check(\"example.txt\") . PHP_EOL;\necho file_name_check(\"\
    1example.dll\") . PHP_EOL;\necho file_name_check(\"1example.exe\") . PHP_EOL;\n\
    echo file_name_check(\"1example.txt\") . PHP_EOL;\necho file_name_check(\"example.111\"\
    ) . PHP_EOL;", "    if (!preg_match('/^[a-zA-Z]+\\d{0,3}\\.txt$|^[a-zA-Z]+\\d{0,3}\\\
    .exe$|^[a-zA-Z]+\\d{0,3}\\.dll$/', $file_name)) {\n        return \"No\";\n  \
    \  }\n    return \"Yes\";\n}\n", "    $file_name_parts = explode('.', $file_name);\n\
    \    if (sizeof($file_name_parts) != 2) {\n        return \"No\";\n    }\n   \
    \ if (!preg_match('/^[a-zA-Z][a-zA-Z0-9]+$/', $file_name_parts[0])) {\n      \
    \  return \"No\";\n    }\n    if (sizeof(preg_split('/[0-9]/', $file_name_parts[0]))\
    \ > 3) {\n        return \"No\";\n    }\n    if (!in_array($file_name_parts[1],\
    \ ['txt', 'exe', 'dll'])) {\n        return \"No\";\n    }\n    return \"Yes\"\
    ;\n}\necho file_name_check(\"example.txt\") . PHP_EOL;\necho file_name_check(\"\
    1example.dll\") . PHP_EOL;\necho file_name_check(\"example.txts\") . PHP_EOL;\n\
    echo file_name_check(\"1.2.3.4.txt\") . PHP_EOL;\necho file_name_check(\"example\"\
    ) . PHP_EOL;\necho file_name_check(\"example.exe\") . PHP_EOL;\necho file_name_check(\"\
    exa_mple.exe\") . PHP_EOL;\necho file_name_check(\"example.dll\") . PHP_EOL;\n\
    echo file_name_check(\"asdasd.dll\") . PHP_EOL;\necho file_name_check(\"asd.dll\"\
    ) . PHP_EOL;\necho file_name_check(\"1asd.dll\") . PHP_EOL;\necho file_name_check(\"\
    1.asd.dll\") . PHP_EOL;\necho file_name_check(\"1.asd.dll\") . PHP_EOL;\necho\
    \ file_name_check(\"1.asd.d.ll\") . PHP_EOL;\necho file_name_check(\"1.asd.dl\"\
    ) . PHP_EOL;\necho file_name_check(\"1.asd.dlll\") . PHP_EOL;\necho file_name_check",
  "  $file_name_arr = explode('.', $file_name);\n  if(count($file_name_arr) != 2)\
    \ {\n    return \"No\";\n  }\n  if(preg_match('/[^a-zA-Z]/', $file_name_arr[0])\
    \ == 1) {\n    return \"No\";\n  }\n  if(substr_count($file_name_arr[0], '0')\
    \ > 3 || substr_count($file_name_arr[0], '1') > 3 || substr_count($file_name_arr[0],\
    \ '2') > 3 || substr_count($file_name_arr[0], '3') > 3 || substr_count($file_name_arr[0],\
    \ '4') > 3 || substr_count($file_name_arr[0], '5') > 3 || substr_count($file_name_arr[0],\
    \ '6') > 3 || substr_count($file_name_arr[0], '7') > 3 || substr_count($file_name_arr[0],\
    \ '8') > 3 || substr_count($file_name_arr[0], '9') > 3) {\n    return \"No\";\n\
    \  }\n  if($file_name_arr[1] != 'txt' && $file_name_arr[1] != 'exe' && $file_name_arr[1]\
    \ != 'dll') {\n    return \"No\";\n  }\n  return \"Yes\";\n}\n", "\n}\n", "\t\
    $pattern = '/^[a-zA-Z]\\w{1,20}(\\.txt|\\.exe|\\.dll)$/';\n\treturn preg_match($pattern,\
    \ $file_name) ? 'Yes' : 'No';\n}\n", "    $dot_pos = strpos($file_name, '.');\n\
    \    if ($dot_pos === false) {\n        return 'No';\n    }\n    $len = strlen($file_name);\n\
    \    $substring_before_dot = substr($file_name, 0, $dot_pos);\n    $substring_after_dot\
    \ = substr($file_name, $dot_pos + 1, $len - $dot_pos - 1);\n    $first_char =\
    \ substr($substring_before_dot, 0, 1);\n    $is_first_char_letter = ($first_char\
    \ >= 'a' && $first_char <= 'z')\n                          || ($first_char >=\
    \ 'A' && $first_char <= 'Z');\n    $is_substring_after_dot_valid = ($substring_after_dot\
    \ === 'txt')\n                                   || ($substring_after_dot ===\
    \ 'exe')\n                                   || ($substring_after_dot === 'dll');\n\
    \    $count_of_digits = 0;\n    for ($i = 0; $i < $dot_pos; $i++) {\n        $ch\
    \ = substr($substring_before_dot, $i, 1);\n        if ($ch >= '0' && $ch <= '9')\
    \ {\n            $count_of_digits++;\n        }\n    }\n    $is_count_of_digits_valid\
    \ = $count_of_digits <= 3;\n    return $is_first_char_letter\n           && $is_substring_after_dot_valid\n\
    \           && $is_count_of_digits_valid\n           ? 'Yes'\n           : 'No';\n\
    }\necho file_name_check(\"example.txt\") . \"\\n\";\necho file_name_check(\"1example.dll\"\
    ) . \"\\n\";", "    $dot_pos = strpos($file_name, '.');\n    $sub_str_before_dot\
    \ = substr($file_name, 0, $dot_pos);\n    $sub_str_after_dot = substr($file_name,\
    \ $dot_pos + 1);\n    $sub_str_before_dot_ok = preg_match('/^[a-zA-Z][a-zA-Z0-9]*$/',\
    \ $sub_str_before_dot);\n    $sub_str_after_dot_ok = preg_match('/^(txt|exe|dll)$/',\
    \ $sub_str_after_dot);\n    $digit_count = preg_match_all('/[0-9]/', $file_name);\n\
    \    if (substr_count($file_name, '.') != 1) {\n        return 'No';\n    } else\
    \ if (!$sub_str_before_dot_ok) {\n        return 'No';\n    } else if (!$sub_str_after_dot_ok)\
    \ {\n        return 'No';\n    } else if ($digit_count > 3) {\n        return\
    \ 'No';\n    } else {\n        return 'Yes';\n    }\n}\n\n$fcts = [\n    file_name_check(\"\
    example.txt\") => \"Yes\",\n    file_name_check(\"1example.dll\") => \"No\",\n\
    \    file_name_check(\"1example.txt\") => \"No\",\n    file_name_check(\"example.exe\"\
    ) => \"Yes\",\n    file_name_check(\"123456.txt\") => \"No\",\n    file_name_check(\"\
    example.dll\") => \"Yes\",\n    file_name_check(\"example.txt\") => \"Yes\",\n\
    \    file_name_check(\"example.png\") => \"No\",\n    file_name_check(\"ex01ample.txt\"\
    ) => \"Yes\",\n    file_name_check(\"1example.txt\") => \"No\",\n    file_name_check(\"\
    example.txt\") => \"Yes\",\n    file_name_check(\"example.txt\") => \"Yes\",\n\
    \    file_name_check(\"example.txt\") => \"Yes", "    // write your code here\n\
    \    $dot_pos = strpos($file_name, '.');\n    $name = substr($file_name, 0, $dot_pos);\n\
    \    $type = substr($file_name, $dot_pos + 1);\n    if(!ctype_alpha($name[0]))\
    \ return \"No\";\n    if(strlen($name) == 0) return \"No\";\n    if(preg_match('/\\\
    d/', $name)) {\n        $count = 0;\n        for($i = 0; $i < strlen($name); $i++)\
    \ {\n            if(is_numeric($name[$i])) $count++;\n        }\n        if($count\
    \ > 3) return \"No\";\n    }\n    if($type != \"txt\" && $type != \"exe\" && $type\
    \ != \"dll\") return \"No\";\n    return \"Yes\";\n}\n", "  // TODO: Start coding\n\
    \  $dot = 0;\n  $last_dot = strlen($file_name);\n  $num = 0;\n  $check = false;\n\
    \  for ($i = 0; $i < strlen($file_name); $i++) {\n    if (is_numeric($file_name[$i]))\
    \ {\n      $num++;\n    }\n    if ($file_name[$i] == '.') {\n      $dot++;\n \
    \     $last_dot = $i;\n    }\n  }\n  $extension = substr($file_name, $last_dot\
    \ + 1);\n  if ($dot == 1 && $num <= 3 && ctype_alpha($file_name[0]) && ($extension\
    \ == 'txt' || $extension == 'exe' || $extension == 'dll')) {\n    $check = true;\n\
    \  }\n  return $check ? 'Yes' : 'No';\n}", "    $file_name_array = str_split($file_name);\n\
    \    $extension = [\"txt\", \"exe\", \"dll\"];\n    $i = 0;\n    $k = 0;\n   \
    \ $dot_position = 0;\n    $name_array = [];\n    $ext_array = [];\n    $digit_flag\
    \ = false;\n    $name_flag = false;\n    $dot_flag = false;\n    $ext_flag = false;\n\
    \    $j = 0;\n    $dot_array = [];\n    foreach ($file_name_array as $k => $val)\
    \ {\n        if ($val == \".\") {\n            $dot_array[] = $k;\n        }\n\
    \    }\n    if (count($dot_array) == 1) {\n        $dot_position = $dot_array[0];\n\
    \        $dot_flag = true;\n    } else {\n        return \"No\";\n    }\n    foreach\
    \ ($file_name_array as $i => $value) {\n        if (ctype_alpha($value)) {\n \
    \           $name_flag = true;\n        }\n        if (ctype_digit($value)) {\n\
    \            $digit_flag = true;\n        }\n        if ($value == \".\") {\n\
    \            $dot_flag = true;\n        }\n        if ($i < $dot_position) {\n\
    \            $name_array[] = $value;\n        }\n        if ($i > $dot_position)\
    \ {\n            $ext_array[] = $value;\n        }\n    }\n    if (!$name_flag)\
    \ {\n        return \"No\";\n    }\n    if ($digit_flag) {\n        return \"\
    No\";\n    }\n    if (!$dot_flag) {\n        return \"No\";\n    }\n    $ext_string\
    \ = \"\";\n    foreach ($ext_array as $j => $value) {\n        $ext_string .=\
    \ $value;\n    }\n    if (in_array($ext_string, $extension)) {\n        $ext_flag\
    \ = true;\n    }\n    if ($ext_flag) {\n        return \"Yes\";\n    } else {\n\
    \        return \"No\";\n   ", "  // Write your code here\n  // To print results\
    \ to the standard output you can use print\n  // Example: print \"Hello world!\"\
    ;\n}\n", "\t$extensions = array('txt', 'exe', 'dll');\n\t$name_and_ext = explode('.',\
    \ $file_name);\n\t$ext = $name_and_ext[1];\n\t$name = $name_and_ext[0];\n\t$name_len\
    \ = strlen($name);\n\t$dot_index = strpos($file_name, '.');\n\tif (strlen($name_and_ext)\
    \ == 2 && \n\t\t$name_len > 0 && \n\t\t!is_numeric($name[0]) && \n\t\t$name_len\
    \ <= 12 && \n\t\t$dot_index > 0 && \n\t\t$dot_index < $name_len && \n\t\tin_array($ext,\
    \ $extensions)) {\n\t\treturn \"Yes\";\n\t}\n\treturn \"No\";\n}\necho file_name_check(\"\
    example.txt\") . \"\\n\";\necho file_name_check(\"1example.dll\") . \"\\n\";",
  "    $res = preg_match('/^([a-zA-Z])([a-zA-Z0-9]{0,5})(\\.(txt|exe|dll))$/', $file_name);\n\
    \    if ($res === 1)\n        return \"Yes\";\n    else\n        return \"No\"\
    ;\n}", "\n}\n", "    if (!preg_match('/^[a-zA-Z]\\d{0,3}\\.txt$|^[a-zA-Z]\\d{0,3}\\\
    .exe$|^[a-zA-Z]\\d{0,3}\\.dll$/', $file_name)) {\n        return \"No\";\n   \
    \ } else {\n        return \"Yes\";\n    }\n}\n$file_name = 'example.txt';\nprint(file_name_check($file_name).\"\
    \\n\");\n$file_name = '1example.dll';\nprint(file_name_check($file_name).\"\\\
    n\");", "  // write your code here\n}", "    // To be implemented!\n}\n\nfile_name_check(\"\
    example.txt\");\nfile_name_check(\"1example.dll\");", "\t// to check the number\
    \ of digits in the file_name\n\t$number_of_digits = preg_match_all('/[0-9]/',\
    \ $file_name);\n\t\n\t// to count the number of periods ('.') in the file_name\n\
    \t$number_of_periods = substr_count($file_name, '.');\n\t\n\t// to split file_name\
    \ into two parts: part before the dot and part after the dot\n\t$file_extension\
    \ = explode('.', $file_name);\n\t\n\t// to check if the file_name is valid\n\t\
    if ($number_of_digits <= 3 && $number_of_periods == 1 && preg_match('/^[a-zA-Z]/',\
    \ $file_extension[0]) && \n\t($file_extension[1] == 'txt' || $file_extension[1]\
    \ == 'exe' || $file_extension[1] == 'dll')) {\n\t\treturn 'Yes';\n\t} else {\n\
    \t\treturn 'No';\n\t}\n}", "  $dot_pos = strpos($file_name, '.');\n  if (!$dot_pos)\
    \ {\n    return 'No';\n  }\n  $name_start = substr($file_name, 0, $dot_pos);\n\
    \  $name_ext = substr($file_name, $dot_pos + 1);\n  if (!$name_start || !ctype_alpha($name_start[0])\
    \ || !in_array($name_ext, ['txt', 'exe', 'dll'])) {\n    return 'No';\n  }\n \
    \ $count = 0;\n  foreach (str_split($name_start) as $c) {\n    if (ctype_digit($c))\
    \ {\n      $count++;\n    }\n  }\n  if ($count > 3) {\n    return 'No';\n  }\n\
    \  return 'Yes';\n}\necho file_name_check(\"example.txt\") . PHP_EOL; // \"Yes\"\
    \necho file_name_check(\"1example.dll\") . PHP_EOL; // \"No\"\necho file_name_check(\"\
    name.example.txt\") . PHP_EOL; // \"Yes\"\necho file_name_check(\"1.example.txt\"\
    ) . PHP_EOL; // \"No\"\necho file_name_check(\"example.txt1\") . PHP_EOL; // \"\
    No\"\necho file_name_check(\"example.txt.exe\") . PHP_EOL; // \"No\"\necho file_name_check(\"\
    1example.dll\") . PHP_EOL; // \"No\"\necho file_name_check(\"\") . PHP_EOL; //\
    \ \"No\"\necho file_name_check(\"example.txt.\") . PHP_EOL; // \"No\"\necho file_name_check(\"\
    example..txt\") . PHP_EOL; // \"No\"\necho file_name_check(\"example.txt.exe\"\
    ) . PHP_EOL; // \"No\"\necho file_name_check(\"example.txt.exe.txt\") . PHP_EOL;\
    \ // \"No\"\necho file_name_check(\"example.txt.exe.txt1\") . PHP_EOL; // \"No\"\
    \necho file_name_check(\"", "    // WRITE YOUR CODE HERE\n    $allowed_ext = array(\"\
    txt\", \"exe\", \"dll\");\n    $dot_pos = strpos($file_name, \".\");\n    if ($dot_pos\
    \ === false) {\n        return \"No\";\n    }\n    $ext = substr($file_name, $dot_pos\
    \ + 1);\n    if (!in_array($ext, $allowed_ext)) {\n        return \"No\";\n  \
    \  }\n    $file_name = substr($file_name, 0, $dot_pos);\n    $first_char = substr($file_name,\
    \ 0, 1);\n    if (!preg_match(\"/[a-zA-Z]/\", $first_char)) {\n        return\
    \ \"No\";\n    }\n    if (strlen($file_name) == 1) {\n        return \"Yes\";\n\
    \    }\n    if (preg_match(\"/[0-9]/\", $file_name)) {\n        if (preg_match_all(\"\
    /[0-9]/\", $file_name) > 3) {\n            return \"No\";\n        }\n    }\n\
    \    return \"Yes\";\n}", "    // Write your code here\n    // To print results\
    \ to the standard output you can use print\n    // Example: print \"Hello world!\"\
    ;\n}\n", "  $file_name_array = explode(\".\", $file_name);\n  if (count($file_name_array)\
    \ != 2) {\n    return \"No\";\n  }\n  if (strlen($file_name_array[0]) == 0) {\n\
    \    return \"No\";\n  }\n  if (!ctype_alpha($file_name_array[0][0])) {\n    return\
    \ \"No\";\n  }\n  if (preg_match_all(\"/[0-9]/\", $file_name_array[0]) > 3) {\n\
    \    return \"No\";\n  }\n  if (!in_array($file_name_array[1], [\"txt\", \"exe\"\
    , \"dll\"])) {\n    return \"No\";\n  }\n  return \"Yes\";\n}", "\t$result = \"\
    No\";\n\t$len = strlen($file_name);\n\t$pos = strpos($file_name, \".\");\n\t$ext_len\
    \ = $len - $pos - 1;\n\t$name = substr($file_name, 0, $pos);\n\t$ext = substr($file_name,\
    \ $pos + 1, $ext_len);\n\t$num_arr = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\"\
    , \"6\", \"7\", \"8\", \"9\"];\n\t$num_count = 0;\n\tfor ($i = 0; $i < $len; $i++)\
    \ {\n\t\tif (in_array($file_name[$i], $num_arr)) {\n\t\t\t$num_count++;\n\t\t\
    }\n\t}\n\tif ($num_count <= 3) {\n\t\tif (strpos($file_name, \".\") !== false)\
    \ {\n\t\t\tif (preg_match(\"/^[a-zA-Z]/\", $name)) {\n\t\t\t\tif ($ext == \"txt\"\
    \ || $ext == \"exe\" || $ext == \"dll\") {\n\t\t\t\t\t$result = \"Yes\";\n\t\t\
    \t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn $result;\n}", "  $dot_index = strpos($file_name,\
    \ '.');\n  $file_extension = substr($file_name, $dot_index + 1);\n  if (count_num_in_string($file_name)\
    \ > 3) {\n    return \"No\";\n  }\n  if (count_dot_in_string($file_name) != 1)\
    \ {\n    return \"No\";\n  }\n  if (is_alpha(substr($file_name, 0, $dot_index))\
    \ == False) {\n    return \"No\";\n  }\n  if ($file_extension != \"txt\" && $file_extension\
    \ != \"exe\" && $file_extension != \"dll\") {\n    return \"No\";\n  }\n  return\
    \ \"Yes\";\n}\n", "    $preg = '/^([a-zA-Z]+)(\\d{0,3})\\.(txt|exe|dll)$/';\n\
    \    return preg_match($preg, $file_name) ? 'Yes' : 'No';\n}\necho file_name_check(\"\
    example.txt\") . PHP_EOL;\necho file_name_check(\"1example.dll\") . PHP_EOL;\n\
    echo file_name_check(\"1example.exe\") . PHP_EOL;\necho file_name_check(\"1example.txt\"\
    ) . PHP_EOL;\necho file_name_check(\"11example.txt\") . PHP_EOL;\necho file_name_check(\"\
    111example.txt\") . PHP_EOL;\necho file_name_check(\"1111example.txt\") . PHP_EOL;\n\
    echo file_name_check(\"11111example.txt\") . PHP_EOL;\necho file_name_check(\"\
    1example.txt1\") . PHP_EOL;\necho file_name_check(\"example.txt1\") . PHP_EOL;\n\
    echo file_name_check(\"1example.txt1\") . PHP_EOL;\necho file_name_check(\"example.txt11\"\
    ) . PHP_EOL;\necho file_name_check(\"111111example.txt\") . PHP_EOL;\necho file_name_check(\"\
    1111111example.txt\") . PHP_EOL;\necho file_name_check(\"111111111example.txt\"\
    ) . PHP_EOL;\necho file_name_check(\"1111111111example.txt\") . PHP_EOL;\necho\
    \ file_name_check(\"example.txt.txt\") . PHP_EOL;\necho file_name_check(\"example\"\
    ) . PHP_EOL;\necho file_name_check(\"example.txt.\") . PHP_EOL;\necho file_name_check(\"\
    example.txt.txt\") . PHP_EOL;\necho file_name_check(\"example.txt..txt\") . PHP_EOL;\n\
    echo file_name_check(\"example.txt....txt\") . PHP_EOL;\necho file_name_check(\"\
    example.txt.txt.txt\") . PHP_EOL;\necho file", "    if (!preg_match('/^[a-zA-Z][\\\
    w-]*(\\.[\\w-]+)?$/', $file_name)) {\n        return 'No';\n    }\n    $file_name_arr\
    \ = explode('.', $file_name);\n    $file_name_ext = array_pop($file_name_arr);\n\
    \    if (!in_array($file_name_ext, ['txt', 'exe', 'dll'])) {\n        return 'No';\n\
    \    }\n    if (preg_match('/\\d/', $file_name_arr[0])) {\n        return 'No';\n\
    \    }\n    return 'Yes';\n}\n\n$file_name = 'example.txt';\n$file_name = '1example.dll';\n\
    echo file_name_check($file_name);", "    if (preg_match('/^[a-zA-Z][a-zA-Z0-9]{0,2}\\\
    .[a-zA-Z]{3}$/', $file_name)) {\n        return \"Yes\";\n    } else {\n     \
    \   return \"No\";\n    }\n}\n\n$file_name = \"example.txt\";\necho file_name_check($file_name);\n\
    echo \"\\n\";\n$file_name = \"1example.dll\";\necho file_name_check($file_name);\n\
    echo \"\\n\";", "    if (substr_count($file_name, '.') !== 1) {\n        return\
    \ 'No';\n    }\n    $file_name_arr = explode('.', $file_name);\n    if (!preg_match('/^[a-zA-Z]/',\
    \ $file_name_arr[0])) {\n        return 'No';\n    }\n    if (substr_count($file_name_arr[0],\
    \ '0-9') > 3) {\n        return 'No';\n    }\n    if (!in_array($file_name_arr[1],\
    \ ['txt', 'exe', 'dll'])) {\n        return 'No';\n    }\n    return 'Yes';\n}",
  "  $file_name_segments = explode('.', $file_name);\n  $file_name_extension = end($file_name_segments);\n\
    \  $file_name_without_extension = substr($file_name, 0, -(strlen($file_name_extension)\
    \ + 1));\n  $file_name_allowed_extensions = array('txt', 'exe', 'dll');\n  $file_name_allowed_extensions_pattern\
    \ = implode('|', $file_name_allowed_extensions);\n  $file_name_valid_extension\
    \ = preg_match(\"/^($file_name_allowed_extensions_pattern)$/\", $file_name_extension);\n\
    \  $file_name_valid_name = preg_match(\"/^[a-zA-Z][a-zA-Z0-9]{0,3}$/\", $file_name_without_extension);\n\
    \  return (($file_name_valid_extension === 1) && ($file_name_valid_name === 1))\
    \ ? 'Yes' : 'No';\n}\n", "    if (strlen($file_name) <= 3) {\n        return \"\
    No\";\n    }\n\n    if (preg_match('/[0-9]{4,}/', $file_name)) {\n        return\
    \ \"No\";\n    }\n\n    if (substr_count($file_name, '.') != 1) {\n        return\
    \ \"No\";\n    }\n\n    $ext = substr($file_name, strrpos($file_name, '.') + 1);\n\
    \    if (! in_array($ext, ['txt', 'exe', 'dll'])) {\n        return \"No\";\n\
    \    }\n\n    $name = substr($file_name, 0, strrpos($file_name, '.'));\n    if\
    \ (preg_match('/^[0-9]/', $name)) {\n        return \"No\";\n    }\n\n    return\
    \ \"Yes\";\n}\n", "\t$result = \"Yes\";\n\t$dot_pos = strpos($file_name, \".\"\
    );\n\tif ($dot_pos === FALSE) {\n\t\t$result = \"No\";\n\t} else {\n\t\t$file_name_part1\
    \ = substr($file_name, 0, $dot_pos);\n\t\t$file_name_part2 = substr($file_name,\
    \ $dot_pos + 1);\n\t\tif ($file_name_part1 == \"\") {\n\t\t\t$result = \"No\"\
    ;\n\t\t} else {\n\t\t\tif (ctype_alpha($file_name_part1[0]) == FALSE) {\n\t\t\t\
    \t$result = \"No\";\n\t\t\t} else {\n\t\t\t\tif (strlen($file_name_part1) < 2)\
    \ {\n\t\t\t\t\t$result = \"No\";\n\t\t\t\t} else {\n\t\t\t\t\t$file_name_part1_digits\
    \ = preg_replace(\"/[^0-9]/\", \"\", $file_name_part1);\n\t\t\t\t\tif (strlen($file_name_part1_digits)\
    \ > 3) {\n\t\t\t\t\t\t$result = \"No\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif ($file_name_part2\
    \ != \"txt\" and $file_name_part2 != \"exe\" and $file_name_part2 != \"dll\")\
    \ {\n\t\t\t\t\t\t\t$result = \"No\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\
    \t\t}\n\t\t}\n\t}\n\treturn $result;\n}", "  // your code here\n  $result = \"\
    Yes\";\n  $count = preg_match_all('/[0-9]/', $file_name);\n  $sub_str_arr = explode(\"\
    .\", $file_name);\n  $count_dot = substr_count($file_name, \".\");\n  $count_before_dot\
    \ = preg_match_all('/[a-zA-Z]/', $sub_str_arr[0]);\n  $extension = $sub_str_arr[1];\n\
    \  if ($count > 3) {\n    $result = \"No\";\n  } else if ($count_dot != 1) {\n\
    \    $result = \"No\";\n  } else if ($count_before_dot == 0) {\n    $result =\
    \ \"No\";\n  } else if (!($extension == \"txt\" || $extension == \"exe\" || $extension\
    \ == \"dll\")) {\n    $result = \"No\";\n  }\n  return $result;\n}\n$file_name\
    \ = \"example.txt\";\necho file_name_check($file_name);\n\necho \"<br>\";\n",
  "\t$number = preg_match_all('/[0-9]/', $file_name);\n\tif ($number > 3) {\n\t\t\
    return \"No\";\n\t} elseif (substr_count($file_name, '.') != 1) {\n\t\treturn\
    \ \"No\";\n\t} elseif (strlen(strstr($file_name, '.', true)) == 0) {\n\t\treturn\
    \ \"No\";\n\t} elseif (strstr($file_name, '.', true)[0] != strtolower(strstr($file_name,\
    \ '.', true)[0]) && strstr($file_name, '.', true)[0] != strtoupper(strstr($file_name,\
    \ '.', true)[0])) {\n\t\treturn \"No\";\n\t} elseif (strstr($file_name, '.') !=\
    \ \".txt\" && strstr($file_name, '.') != \".exe\" && strstr($file_name, '.') !=\
    \ \".dll\") {\n\t\treturn \"No\";\n\t} else {\n\t\treturn \"Yes\";\n\t}\n}", "\t\
    // Start coding here..\n}\necho \"<h2>Task 1</h2>\";\n$file_name = 'example.txt';\n\
    echo file_name_check($file_name);\necho \"<br>\";\n$file_name = '1example.dll';\n\
    echo file_name_check($file_name);\necho \"<br>\";\n$file_name = '1example.1exe';\n\
    echo file_name_check($file_name);\necho \"<br>\";\n$file_name = '1example.txtt';\n\
    echo file_name_check($file_name);\necho \"<br>\";\n$file_name = '1example.txtt';\n\
    echo file_name_check($file_name);\necho \"<br>\";\n$file_name = 'a1.exe';\necho\
    \ file_name_check($file_name);\necho \"<br>\";\n$file_name = 'a1b.dll';\necho\
    \ file_name_check($file_name);\n", "  $length = strlen($file_name);\n  $pos =\
    \ strpos($file_name, '.');\n  if ($pos === false) {\n    return \"No\";\n  }\n\
    \  $num_of_digit = 0;\n  for ($i = 0; $i < $pos; $i++) {\n    if (is_numeric($file_name[$i]))\
    \ {\n      $num_of_digit++;\n    }\n  }\n  if ($num_of_digit > 3) {\n    return\
    \ \"No\";\n  }\n  $file_type = substr($file_name, $pos + 1);\n  if ($file_type\
    \ != \"txt\" && $file_type != \"exe\" && $file_type != \"dll\") {\n    return\
    \ \"No\";\n  }\n  $file_name = substr($file_name, 0, $pos);\n  if (ctype_alpha($file_name[0]))\
    \ {\n    return \"Yes\";\n  }\n  return \"No\";\n}\necho file_name_check(\"example.txt\"\
    );\necho file_name_check(\"1example.dll\");", "\tif(preg_match('/^[a-zA-Z]\\w{0,2}\\\
    .[txt|exe|dll]$/', $file_name)) {\n\t\treturn \"Yes\";\n\t} else {\n\t\treturn\
    \ \"No\";\n\t}\n}\n\necho file_name_check(\"example.txt\") . \"\\n\";\necho file_name_check(\"\
    1example.dll\") . \"\\n\";\necho file_name_check(\"example.exe\") . \"\\n\";\n\
    echo file_name_check(\"example.dll\") . \"\\n\";\necho file_name_check(\"example.txt\"\
    ) . \"\\n\";\necho file_name_check(\"1example.dll\") . \"\\n\";\necho file_name_check(\"\
    example.exe\") . \"\\n\";\necho file_name_check(\"example.dll\") . \"\\n\";\n\
    echo file_name_check(\"example.txt\") . \"\\n\";\necho file_name_check(\"1example.dll\"\
    ) . \"\\n\";\necho file_name_check(\"example.exe\") . \"\\n\";\necho file_name_check(\"\
    example.dll\") . \"\\n\";\necho file_name_check(\"example.txt\") . \"\\n\";\n\
    echo file_name_check(\"1example.dll\") . \"\\n\";\necho file_name_check(\"example.exe\"\
    ) . \"\\n\";\necho file_name_check(\"example.dll\") . \"\\n\";\necho file_name_check(\"\
    example.txt\") . \"\\n\";\necho file_name_check(\"1example.dll\") . \"\\n\";\n\
    echo file_name_check(\"example.exe\") . \"\\n\";\necho file_name_check(\"example.dll\"\
    ) . \"\\n\";\necho file_name_check(\"example.txt\") . \"\\n\";\necho file_name_check(\"\
    1example.dll\") . \"\\n\";\necho file_name_check(\"example.exe\") . \"\\n\";\n\
    echo file_name_check(\"example.dll\") . \"\\n\";\necho file_name_check(\"example.txt\"\
    ) . \"\\n\";\necho file_name_check(\"1example.dll\") . \"\\n\";\necho file_name_check(\"\
    example.exe\") . \"\\n\";\necho file_name_", "    $dot_pos = strpos($file_name,\
    \ '.');\n    $substr_before_dot = substr($file_name, 0, $dot_pos);\n    $substr_after_dot\
    \ = substr($file_name, $dot_pos + 1);\n    $substr_without_digits = preg_replace('/[0-9]/',\
    \ '', $substr_before_dot);\n    $substr_without_letters = preg_replace('/[a-zA-Z]/',\
    \ '', $substr_before_dot);\n    if(strlen($substr_before_dot) == strlen($substr_without_digits)\
    \ && \n       $substr_without_letters === '' && \n       $substr_after_dot ===\
    \ 'txt' || $substr_after_dot === 'exe' || $substr_after_dot === 'dll') {\n   \
    \    return 'Yes';\n    }\n    return 'No';\n}\n$file_name = trim(fgets(STDIN));\n\
    echo file_name_check($file_name);", "  if (strlen($file_name) < 5) {\n    return\
    \ \"No\";\n  }\n  if (substr_count($file_name, \".\") != 1) {\n    return \"No\"\
    ;\n  }\n  if (substr_count($file_name, \"0\") + substr_count($file_name, \"1\"\
    ) + substr_count($file_name, \"2\") + substr_count($file_name, \"3\") + substr_count($file_name,\
    \ \"4\") + substr_count($file_name, \"5\") + substr_count($file_name, \"6\") +\
    \ substr_count($file_name, \"7\") + substr_count($file_name, \"8\") + substr_count($file_name,\
    \ \"9\") > 3) {\n    return \"No\";\n  }\n  $dot = strpos($file_name, \".\");\n\
    \  $sub1 = substr($file_name, 0, $dot);\n  $sub2 = substr($file_name, $dot + 1);\n\
    \  if (strlen($sub1) < 1) {\n    return \"No\";\n  }\n  if (ord($sub1[0]) < 65\
    \ || ord($sub1[0]) > 122 || (ord($sub1[0]) > 90 && ord($sub1[0]) < 97)) {\n  \
    \  return \"No\";\n  }\n  if ($sub2 != \"txt\" && $sub2 != \"exe\" && $sub2 !=\
    \ \"dll\") {\n    return \"No\";\n  }\n  return \"Yes\";\n}\n\necho file_name_check(\"\
    example.txt\");", "    // Write your code here and return the correct value.\n\
    \    $count = 0;\n    $numberOfDots = 0;\n    $letters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\
    ;\n    $extensions = [\"txt\", \"exe\", \"dll\"];\n    for ($i = 0; $i < strlen($file_name);\
    \ $i++) {\n        if (strpos($letters, $file_name[$i]) === false) {\n       \
    \     if (strpos($file_name, \".\") !== false) {\n                $file_name_after_dot\
    \ = substr($file_name, strpos($file_name, \".\") + 1);\n                if (in_array($file_name_after_dot,\
    \ $extensions)) {\n                    return \"Yes\";\n                } else\
    \ {\n                    return \"No\";\n                }\n            } else\
    \ {\n                return \"No\";\n            }\n        }\n        if (strpos($file_name,\
    \ \".\") !== false) {\n            $file_name_after_dot = substr($file_name, strpos($file_name,\
    \ \".\") + 1);\n            if (in_array($file_name_after_dot, $extensions)) {\n\
    \                return \"Yes\";\n            } else {\n                return\
    \ \"No\";\n            }\n        } else {\n            return \"No\";\n     \
    \   }\n    }\n}", "\t$res = preg_match('/^([a-zA-Z])(\\w)*\\.(txt|exe|dll)$/',\
    \ $file_name);\n\tif($res === 1)\n\t\treturn \"Yes\";\n\telse \n\t\treturn \"\
    No\";\n}", "    $count_number = 0;\n    for ($i = 0; $i < strlen($file_name);\
    \ $i++) {\n        if (is_numeric($file_name[$i])) {\n            $count_number++;\n\
    \        }\n    }\n    if ($count_number > 3) {\n        return \"No\";\n    }\n\
    \    $dot_position = strpos($file_name, \".\");\n    if ($dot_position === false)\
    \ {\n        return \"No\";\n    }\n    $before_dot = substr($file_name, 0, $dot_position);\n\
    \    if (empty($before_dot) || !ctype_alpha($before_dot[0])) {\n        return\
    \ \"No\";\n    }\n    $after_dot = substr($file_name, $dot_position + 1);\n  \
    \  if ($after_dot !== \"txt\" && $after_dot !== \"exe\" && $after_dot !== \"dll\"\
    ) {\n        return \"No\";\n    }\n    return \"Yes\";\n}\n\n$file_name = \"\
    example.txt\";\necho file_name_check($file_name) . \"<br>\";\n$file_name = \"\
    1example.dll\";\necho file_name_check($file_name) . \"<br>\";\n$file_name = \"\
    example.dll\";\necho file_name_check($file_name) . \"<br>\";\n$file_name = \"\
    example\";\necho file_name_check($file_name) . \"<br>\";\n$file_name = \"example.exe\"\
    ;\necho file_name_check($file_name) . \"<br>\";\n$file_name = \"example..txt\"\
    ;\necho file_name_check($file_name) . \"<br>\";\n$file_name = \"example.txt.exe\"\
    ;\necho file_name_check($file_name) . \"<br>\";\n$file_name = \"example..exe\"\
    ;\necho file_name_check($file_name) . \"<br>\";\n$file_name = \"example.txt.dll\"\
    ;\necho file_name_check($file_name) . \"<br>\";", "    $last_dot_pos = strrpos($file_name,\
    \ '.');\n    if ($last_dot_pos === false) {\n        return 'No';\n    }\n   \
    \ $ext = substr($file_name, $last_dot_pos + 1);\n    if ($ext !== 'txt' && $ext\
    \ !== 'exe' && $ext !== 'dll') {\n        return 'No';\n    }\n    $file_name\
    \ = substr($file_name, 0, $last_dot_pos);\n    if (strlen($file_name) == 0) {\n\
    \        return 'No';\n    }\n    $first_letter = substr($file_name, 0, 1);\n\
    \    if (!ctype_alpha($first_letter)) {\n        return 'No';\n    }\n    $count\
    \ = 0;\n    for ($i = 0; $i < strlen($file_name); $i++) {\n        if (ctype_digit($file_name[$i]))\
    \ {\n            $count++;\n        }\n    }\n    if ($count > 3) {\n        return\
    \ 'No';\n    }\n    return 'Yes';\n}", "\t$parts = explode('.', $file_name);\n\
    \t\n\tif (count($parts) != 2)\n\t\treturn \"No\";\n\t\t\n\t$first = $parts[0];\n\
    \t$last = $parts[1];\n\t\n\tif (!preg_match('/^[a-zA-Z]+$/', $first[0]))\n\t\t\
    return \"No\";\n\t\n\tif (!preg_match('/^[a-zA-Z]+$/', $last))\n\t\treturn \"\
    No\";\n\t\n\tif (preg_match('/\\d/', $first))\n\t\treturn \"No\";\n\t\n\tif (preg_match('/\\\
    d/', $last))\n\t\treturn \"No\";\n\t\n\tif (strlen($first) > 10)\n\t\treturn \"\
    No\";\n\t\n\tif (!in_array($last, ['txt', 'exe', 'dll']))\n\t\treturn \"No\";\n\
    \t\n\treturn \"Yes\";\n}", "\t$substrings = explode(\".\", $file_name);\n\t$substring1\
    \ = str_split($substrings[0]);\n\t$substring2 = $substrings[1];\n\t$substring1_length\
    \ = strlen($substrings[0]);\n\t$substring2_length = strlen($substrings[1]);\n\t\
    $substring1_count = 0;\n\t$substring2_count = 0;\n\t$substring3_count = 0;\n\t\
    $count_substring3 = array(\"txt\", \"exe\", \"dll\");\n\tfor ($i = 0; $i < $substring1_length;\
    \ $i++) {\n\t\tif (ord($substring1[$i]) >= 48 && ord($substring1[$i]) <= 57) {\n\
    \t\t\t$substring1_count++;\n\t\t}\n\t}\n\tfor ($i = 0; $i < $substring2_length;\
    \ $i++) {\n\t\tif (ord($substring2[$i]) >= 48 && ord($substring2[$i]) <= 57) {\n\
    \t\t\t$substring2_count++;\n\t\t}\n\t}\n\tfor ($i = 0; $i < 3; $i++) {\n\t\tif\
    \ ($substring2 == $count_substring3[$i]) {\n\t\t\t$substring3_count++;\n\t\t}\n\
    \t}\n\tif ($substring1_count > 3 || $substring2_count > 0 || $substring3_count\
    \ == 0) {\n\t\treturn \"No\";\n\t} else {\n\t\treturn \"Yes\";\n\t}\n}\necho file_name_check(\"\
    example.txt\") . \"<br>\";\necho file_name_check(\"1example.dll\") . \"<br>\"\
    ;\n", "    if (preg_match(\"/^[a-zA-Z]\\w{0,49}\\.txt$|^[a-zA-Z]\\w{0,49}\\.exe$|^[a-zA-Z]\\\
    w{0,49}\\.dll$/\", $file_name)) {\n        return \"Yes\";\n    } else {\n   \
    \     return \"No\";\n    }\n}\n\n$file_name = \"example.txt\";\necho file_name_check($file_name)\
    \ . \"\\n\";\n\n$file_name = \"1example.dll\";\necho file_name_check($file_name)\
    \ . \"\\n\";\n\n$file_name = \"example.exe\";\necho file_name_check($file_name)\
    \ . \"\\n\";\n\n$file_name = \"123examp.txt\";\necho file_name_check($file_name)\
    \ . \"\\n\";\n\n$file_name = \"example\";\necho file_name_check($file_name) .\
    \ \"\\n\";\n\n$file_name = \"example.exe2\";\necho file_name_check($file_name)\
    \ . \"\\n\";\n\n$file_name = \"example.exe.txt\";\necho file_name_check($file_name)\
    \ . \"\\n\";\n\n$file_name = \"example.exe.\";\necho file_name_check($file_name)\
    \ . \"\\n\";\n\n$file_name = \"example.exex\";\necho file_name_check($file_name)\
    \ . \"\\n\";\n", "    // Your code here\n}", "\n}\n", "\t$pattern = '/^[a-zA-Z]+\\\
    d{0,3}\\.txt|exe|dll$/';\n\treturn preg_match($pattern, $file_name) ? 'Yes' :\
    \ 'No';\n}", "  $name_arr = explode('.', $file_name);\n  $p1 = preg_match_all('/\\\
    d/', $name_arr[0]);\n  $p2 = (strlen($name_arr[0]) > 0) && (preg_match('/^[a-zA-Z]/',\
    \ $name_arr[0]));\n  $p3 = preg_match('/txt|exe|dll/', $name_arr[1]);\n  return\
    \ (($p1 <= 3) && ($p2) && ($p3)) ? 'Yes' : 'No';\n}\necho file_name_check(\"example.txt\"\
    ) . \"\\n\";\necho file_name_check(\"1example.dll\") . \"\\n\";", "\t$file_name_pairs\
    \ = explode(\".\", $file_name);\n\t// $file_name_pairs[0] is the file name before\
    \ the dot, $file_name_pairs[1] is the file type after the dot.\n\t$file_name_b_dot\
    \ = $file_name_pairs[0];\n\t$file_name_a_dot = $file_name_pairs[1];\n\t$number_of_digits\
    \ = 0;\n\t$file_name_length = strlen($file_name_b_dot);\n\tfor ($i = 0; $i < $file_name_length;\
    \ $i++) {\n\t\tif (ctype_digit($file_name_b_dot[$i])) {\n\t\t\t$number_of_digits\
    \ += 1;\n\t\t}\n\t}\n\t$correct_file_type = false;\n\tif (in_array($file_name_a_dot,\
    \ ['txt', 'exe', 'dll'])) {\n\t\t$correct_file_type = true;\n\t}\n\tif ($number_of_digits\
    \ <= 3 and ctype_alpha($file_name_b_dot[0]) and count($file_name_pairs) == 2 and\
    \ $correct_file_type) {\n\t\treturn \"Yes\";\n\t} else {\n\t\treturn \"No\";\n\
    \t}\n}\n", "\t$regex = '/^[a-zA-Z]{1}[^0-9]{0,}[.](txt|exe|dll)$/';\n\treturn\
    \ preg_match($regex, $file_name) ? 'Yes' : 'No';\n}\n", "    $condition = array(\n\
    \        preg_match('/^[a-zA-Z][\\da-zA-Z]*\\.txt$/', $file_name),\n        preg_match('/^[a-zA-Z][\\\
    da-zA-Z]*\\.exe$/', $file_name),\n        preg_match('/^[a-zA-Z][\\da-zA-Z]*\\\
    .dll$/', $file_name)\n    );\n    if(in_array(1, $condition)) {\n        return\
    \ \"Yes\";\n    }\n    return \"No\";\n}\necho file_name_check(\"example.txt\"\
    ) . \"\\n\";\necho file_name_check(\"1example.dll\") . \"\\n\";", "    $sub1 =\
    \ substr($file_name, 0, strpos($file_name, '.'));\n    $sub2 = substr($file_name,\
    \ strpos($file_name, '.') + 1);\n    $sub1 = str_split($sub1);\n    if(substr_count($file_name,\
    \ '.') != 1 || !preg_match('/^[a-zA-Z]+/', $sub1[0]) || \n        substr_count($file_name,\
    \ '0') + substr_count($file_name, '1') + \n        substr_count($file_name, '2')\
    \ + substr_count($file_name, '3') + \n        substr_count($file_name, '4') +\
    \ substr_count($file_name, '5') + \n        substr_count($file_name, '6') + substr_count($file_name,\
    \ '7') + \n        substr_count($file_name, '8') + substr_count($file_name, '9')\
    \ > 3 || \n        $sub2 != 'txt' && $sub2 != 'exe' && $sub2 != 'dll')\n     \
    \   return 'No';\n    return 'Yes';\n}\n", "\t// Your code goes here...\n\tif\
    \ ( (is_numeric(substr($file_name, 0, 1)) || !preg_match('/[a-zA-Z]/', substr($file_name,\
    \ 0, 1))) || substr_count($file_name, '.') != 1 ) {\n\t\treturn \"No\";\n\t}\n\
    \t$file_name_exploded = explode('.', $file_name);\n\tif ( !in_array($file_name_exploded[1],\
    \ ['txt', 'exe', 'dll']) ) {\n\t\treturn \"No\";\n\t}\n\t$file_name_without_extension\
    \ = $file_name_exploded[0];\n\tif ( preg_match_all('/[0-9]/', $file_name_without_extension)\
    \ > 3 ) {\n\t\treturn \"No\";\n\t}\n\treturn \"Yes\";\n}", "    $split_file_name\
    \ = explode('.', $file_name);\n    if (count($split_file_name) !== 2) {\n    \
    \    return 'No';\n    }\n    $substring_before_dot = $split_file_name[0];\n \
    \   $substring_after_dot = $split_file_name[1];\n    $substring_after_dot_valid\
    \ = ['txt', 'exe', 'dll'];\n    if (!in_array($substring_after_dot, $substring_after_dot_valid))\
    \ {\n        return 'No';\n    }\n    if (strlen($substring_before_dot) === 0)\
    \ {\n        return 'No';\n    }\n    $count_digit = 0;\n    for ($i = 0; $i <\
    \ strlen($substring_before_dot); $i++) {\n        if ($substring_before_dot[$i]\
    \ >= '0' && $substring_before_dot[$i] <= '9') {\n            $count_digit++;\n\
    \        }\n    }\n    if ($count_digit > 3) {\n        return 'No';\n    }\n\
    \    if ($substring_before_dot[0] < 'a' || $substring_before_dot[0] > 'z') {\n\
    \        if ($substring_before_dot[0] < 'A' || $substring_before_dot[0] > 'Z')\
    \ {\n            return 'No';\n        }\n    }\n    return 'Yes';\n}\n\n$file_name\
    \ = \"example.txt\";\necho file_name_check($file_name);", "    $str_array = explode(\"\
    .\", $file_name);\n    if (count($str_array) != 2) {\n        return \"No\";\n\
    \    } else {\n        $digit_count = 0;\n        $is_valid = true;\n        for\
    \ ($i = 0; $i < strlen($str_array[0]); $i++) {\n            if ($i == 0 && !preg_match(\"\
    /[a-zA-Z]/\", $str_array[0][$i])) {\n                $is_valid = false;\n    \
    \            break;\n            }\n            if (preg_match(\"/[0-9]/\", $str_array[0][$i]))\
    \ {\n                $digit_count++;\n            }\n        }\n        if ($digit_count\
    \ > 3 || $str_array[1] != \"txt\" && $str_array[1] != \"exe\" && $str_array[1]\
    \ != \"dll\") {\n            $is_valid = false;\n        }\n        if ($is_valid)\
    \ {\n            return \"Yes\";\n        } else {\n            return \"No\"\
    ;\n        }\n    }\n}\necho file_name_check(\"example.txt\");\necho \"<br>\"\
    ;\necho file_name_check(\"1example.dll\");\necho \"<br>\";\necho file_name_check(\"\
    1example.txt.txt\");\necho \"<br>\";\necho file_name_check(\"example.txt.txt\"\
    );\necho \"<br>\";\necho file_name_check(\"1example.dll.txt\");\necho \"<br>\"\
    ;\necho file_name_check(\"1example.dll.dll\");\necho \"<br>\";\necho file_name_check(\"\
    1example.dll.exe\");\necho \"<br>\";\necho file_name_check(\"example.txt.exe\"\
    );\necho \"<br>\";\necho file_name_check(\"example.exe.txt\");\necho \"<br>\"\
    ;\necho file_name_check(\"example.exe.exe\");\necho \"<br>\";\necho file_name_check(\"\
    example.exe.dll\");\necho \"<br>\";\necho file_name_check(\"1example.exe.dll\"\
    );\necho \"<br>\";\n", "    \n    $regex = '/^[a-zA-Z][a-zA-Z0-9]{0,2}\\.(txt|exe|dll)$/';\n\
    \    return preg_match($regex, $file_name) ? 'Yes' : 'No';\n}\n", "\t$count_number\
    \ = 0;\n\t$has_dot = false;\n\t$has_extension = false;\n\tfor ($i = 0; $i < strlen($file_name);\
    \ $i++) {\n\t\tif (is_numeric($file_name[$i])) {\n\t\t\t$count_number++;\n\t\t\
    }\n\t\tif ($file_name[$i] == '.') {\n\t\t\t$has_dot = true;\n\t\t}\n\t\tif (substr($file_name,\
    \ $i, 4) == '.txt' || substr($file_name, $i, 4) == '.exe' || substr($file_name,\
    \ $i, 4) == '.dll') {\n\t\t\t$has_extension = true;\n\t\t}\n\t}\n\t$substring_before_dot\
    \ = substr($file_name, 0, strpos($file_name, '.'));\n\tif (preg_match('/[^a-zA-Z]/',\
    \ $substring_before_dot)) {\n\t\treturn \"No\";\n\t}\n\tif ($count_number > 3\
    \ || $has_dot == false || $has_extension == false) {\n\t\treturn \"No\";\n\t}\n\
    \treturn \"Yes\";\n}\necho file_name_check(\"example.txt\") . \"\\n\";\necho file_name_check(\"\
    1example.dll\") . \"\\n\";", "    $is_ok = false;\n    // Replace this line with\
    \ your code\n    $before_dot = substr($file_name, 0, strpos($file_name, '.'));\n\
    \    $after_dot = substr($file_name, strpos($file_name, '.') + 1);\n    $has_three_digits\
    \ = preg_match('#[0-9]{4}#', $file_name);\n    $has_one_dot = substr_count($file_name,\
    \ '.') == 1;\n    $has_valid_extension = in_array($after_dot, ['txt', 'exe', 'dll']);\n\
    \    $has_valid_prefix = preg_match('#^[a-zA-Z]#', $before_dot);\n    $is_ok =\
    \ !$has_three_digits && $has_one_dot && $has_valid_extension && $has_valid_prefix;\n\
    \    // End of your code\n    return $is_ok ? 'Yes' : 'No';\n}\n", "\tif (preg_match('/[0-9]{4}/',\
    \ $file_name)) {\n\t\treturn \"No\";\n\t}\n\tif (preg_match('/^[a-zA-Z]*[.](txt|exe|dll)$/',\
    \ $file_name)) {\n\t\treturn \"Yes\";\n\t}\n\treturn \"No\";\n}\n\n$file_name\
    \ = '1example.dll';\necho file_name_check($file_name);", "\tif (!(strlen($file_name)\
    \ >=5 && strlen($file_name) <=12)) {\n\t\treturn \"No\";\n\t}\n\tif (substr_count($file_name,\
    \ \".\") != 1) {\n\t\treturn \"No\";\n\t}\n\t$position = strpos($file_name, \"\
    .\");\n\t$prefix = substr($file_name, 0, $position);\n\t$suffix = substr($file_name,\
    \ $position+1);\n\tif (!(ctype_alpha($prefix[0]) && ctype_alpha($prefix[1]) &&\
    \ ctype_alpha($prefix[2]))) {\n\t\treturn \"No\";\n\t}\n\tif (!(ctype_digit($prefix[3])\
    \ && ctype_digit($prefix[4]) && ctype_digit($prefix[5]))) {\n\t\treturn \"No\"\
    ;\n\t}\n\tif (!($suffix === \"txt\" || $suffix === \"exe\" || $suffix === \"dll\"\
    )) {\n\t\treturn \"No\";\n\t}\n\treturn \"Yes\";\n}\n", "    $valid_exts = [\"\
    txt\", \"exe\", \"dll\"];\n    $num_digits = preg_match_all(\"/[0-9]/\", $file_name);\n\
    \    $dot_index = strpos($file_name, \".\");\n    $ext = substr($file_name, $dot_index\
    \ + 1);\n    if ($num_digits > 3) return \"No\";\n    if (empty($dot_index)) return\
    \ \"No\";\n    if (substr($file_name, 0, $dot_index) === \"\"\n        || !preg_match(\"\
    /[a-zA-Z]/\", substr($file_name, 0, $dot_index))) return \"No\";\n    if (!in_array($ext,\
    \ $valid_exts)) return \"No\";\n    return \"Yes\";\n}", "    $file_name_arr =\
    \ explode('.', $file_name);\n    $extension = array('txt', 'exe', 'dll');\n  \
    \  $reg_exp = '/^[a-zA-Z]*$/';\n    if (count($file_name_arr) > 2 || count($file_name_arr)\
    \ < 2) {\n        return 'No';\n    } else {\n        if (preg_match($reg_exp,\
    \ $file_name_arr[0])) {\n            if (strlen($file_name_arr[0]) >= 1) {\n \
    \               if (count(preg_split('/[0-9]/', $file_name_arr[0])) <= 3) {\n\
    \                    if (in_array($file_name_arr[1], $extension)) {\n        \
    \                return 'Yes';\n                    } else {\n               \
    \         return 'No';\n                    }\n                } else {\n    \
    \                return 'No';\n                }\n            } else {\n     \
    \           return 'No';\n            }\n        } else {\n            return\
    \ 'No';\n        }\n    }\n}", "  if (preg_match('/^[a-zA-Z]{1}[a-zA-Z0-9]{0,2}[.][txt|exe|dll]{3}$/',\
    \ $file_name)) {\n    return \"Yes\";\n  } else {\n    return \"No\";\n  }\n}\n\
    echo file_name_check(\"example.txt\") . \"\\n\";\necho file_name_check(\"1example.dll\"\
    ) . \"\\n\";", "    if (preg_match(\"/^[a-zA-Z]+\\.txt$|^[a-zA-Z]+\\.exe$|^[a-zA-Z]+\\\
    .dll$/\", $file_name))\n        return \"Yes\";\n    else\n        return \"No\"\
    ;\n}\n", "  // Write your code here...\n}", "    // Your solution goes here.\n\
    \    return 'Yes';\n}", "    $file_type = [\"txt\", \"exe\", \"dll\"];\n    $dot_pos\
    \ = strpos($file_name, \".\");\n    $digit_cnt = 0;\n    $first_char = $file_name[0];\n\
    \    $name_length = strlen($file_name);\n    if ($dot_pos === FALSE || $dot_pos\
    \ == 0 || $dot_pos == $name_length - 1) {\n        return \"No\";\n    } else\
    \ {\n        for ($i = 0; $i < $dot_pos; $i++) {\n            if (ord($file_name[$i])\
    \ >= ord(\"0\") && ord($file_name[$i]) <= ord(\"9\")) {\n                $digit_cnt++;\n\
    \            }\n        }\n        if ($digit_cnt > 3) {\n            return \"\
    No\";\n        }\n        $substring = substr($file_name, $dot_pos + 1);\n   \
    \     if (in_array($substring, $file_type) === FALSE) {\n            return \"\
    No\";\n        }\n        if (ord($first_char) < ord(\"a\") || ord($first_char)\
    \ > ord(\"z\") && ord($first_char) < ord(\"A\") || ord($first_char) > ord(\"Z\"\
    )) {\n            return \"No\";\n        }\n        return \"Yes\";\n    }\n}",
  "\t$count = 0;\n\t$regex = '/^[a-zA-Z][^.]*\\.(txt|exe|dll)$/';\n\tpreg_match_all('/[0-9]/',\
    \ $file_name, $match);\n\t$count = count($match[0]);\n\tif ($count > 3) {\n\t\t\
    return \"No\";\n\t}\n\tif (preg_match($regex, $file_name) == 0) {\n\t\treturn\
    \ \"No\";\n\t}\n\treturn \"Yes\";\n}\n\necho file_name_check(\"example.txt\");\n\
    echo \"\\n\";\necho file_name_check(\"1example.dll\");\necho \"\\n\";\necho file_name_check(\"\
    1example.exe\");\necho \"\\n\";\necho file_name_check(\"1example.tx\");\necho\
    \ \"\\n\";\necho file_name_check(\"1example.txtt\");\necho \"\\n\";\necho file_name_check(\"\
    1example.dlll\");\necho \"\\n\";", "    $has3digits = preg_match('/\\d{4}/', $file_name);\n\
    \    $has1dot = substr_count($file_name, '.') == 1;\n    $before_dot = substr($file_name,\
    \ 0, strpos($file_name, '.'));\n    $after_dot = substr($file_name, strpos($file_name,\
    \ '.') + 1);\n    $before_dot_ok = preg_match('/[a-zA-Z][a-zA-Z0-9]*/', $before_dot);\n\
    \    $after_dot_ok = in_array($after_dot, array('txt', 'exe', 'dll'));\n    return\
    \ $has3digits && $has1dot && $before_dot_ok && $after_dot_ok ? 'Yes' : 'No';\n\
    }\n", "    $arr = explode('.', $file_name);\n    $pos = strpos($arr[0], \"0\"\
    ) || strpos($arr[0], \"1\") || strpos($arr[0], \"2\") || strpos($arr[0], \"3\"\
    ) || strpos($arr[0], \"4\") || strpos($arr[0], \"5\") || strpos($arr[0], \"6\"\
    ) || strpos($arr[0], \"7\") || strpos($arr[0], \"8\") || strpos($arr[0], \"9\"\
    );\n    if(count($arr) == 2) {\n        if(preg_match('/[^a-z]/i', $arr[0][0])\
    \ != 0) {\n            return \"No\";\n        } elseif(preg_match('/[^a-z]/i',\
    \ $arr[1][0]) != 0) {\n            return \"No\";\n        } elseif(strlen($arr[0])\
    \ - substr_count($arr[0], '0') - substr_count($arr[0], '1') - substr_count($arr[0],\
    \ '2') - substr_count($arr[0], '3') - substr_count($arr[0], '4') - substr_count($arr[0],\
    \ '5') - substr_count($arr[0], '6') - substr_count($arr[0], '7') - substr_count($arr[0],\
    \ '8') - substr_count($arr[0], '9') == 0) {\n            return \"No\";\n    \
    \    } elseif($pos > 2) {\n            return \"No\";\n        } elseif($arr[1]\
    \ != \"txt\" && $arr[1] != \"exe\" && $arr[1] != \"dll\") {\n            return\
    \ \"No\";\n        } else {\n            return \"Yes\";\n        }\n    } else\
    \ {\n        return \"No\";\n    }\n}\necho file_name_check(\"1example.dll\");\n\
    echo \"<br>\";\necho file_name_check(\"example.txt\");\necho \"<br>\";\necho file_name_check(\"\
    example.exe\");\necho \"<br>\";\necho file_name_check(\"1example.dll", "\t$file_name_arr\
    \ = explode('.', $file_name);\n\t$number_of_dot = substr_count($file_name, '.');\n\
    \t$len = strlen($file_name);\n\t$extension = end($file_name_arr);\n\t$substr_before_dot\
    \ = strstr($file_name, '.', true);\n\t$substr_before_dot_len = strlen($substr_before_dot);\n\
    \t$substr_before_dot_arr = str_split($substr_before_dot);\n\t$substr_before_dot_arr_num\
    \ = 0;\n\t$substr_before_dot_arr_letter = 0;\n\t$substr_after_dot_len = strlen($extension);\n\
    \t$substr_after_dot_arr = str_split($extension);\n\t$substr_after_dot_arr_num\
    \ = 0;\n\t$substr_after_dot_arr_letter = 0;\n\tforeach ($substr_before_dot_arr\
    \ as $value) {\n\t\tif (is_numeric($value)) {\n\t\t\t$substr_before_dot_arr_num\
    \ += 1;\n\t\t} elseif (preg_match('/[a-zA-Z]/', $value)) {\n\t\t\t$substr_before_dot_arr_letter\
    \ += 1;\n\t\t}\n\t}\n\tforeach ($substr_after_dot_arr as $value) {\n\t\tif (is_numeric($value))\
    \ {\n\t\t\t$substr_after_dot_arr_num += 1;\n\t\t} elseif (preg_match('/[a-zA-Z]/',\
    \ $value)) {\n\t\t\t$substr_after_dot_arr_letter += 1;\n\t\t}\n\t}\n\tif ($substr_before_dot\
    \ == \"\" || $substr_before_dot_arr_num != 0 || $substr_before_dot_arr_letter\
    \ == 0) {\n\t\treturn \"No\";\n\t} elseif ($substr_before_dot_arr_num > 3) {\n\
    \t\treturn \"No\";\n\t", "  // echo substr($file_name, 0, strpos($file_name, '.'));\n\
    \  // echo substr($file_name, strpos($file_name, '.')+1);\n  $pattern = '/^[a-zA-Z][a-zA-Z0-9]{0,2}\\\
    .[txt|exe|dll]$/';\n  if (preg_match($pattern, $file_name)) {\n    return \"Yes\"\
    ;\n  } else {\n    return \"No\";\n  }\n}\necho file_name_check(\"example.txt\"\
    ) . \"<br>\";\necho file_name_check(\"1example.dll\") . \"<br>\";", "    $file_name_parts\
    \ = explode('.', $file_name);\n    $first_part = $file_name_parts[0];\n    $second_part\
    \ = $file_name_parts[1];\n    $count = preg_match_all('/[0-9]/', $first_part);\n\
    \    if ($count < 4 && $count > 0 && preg_match('/[a-zA-Z]/', $first_part) &&\
    \ in_array($second_part, ['txt', 'exe', 'dll'])) {\n        return 'Yes';\n  \
    \  }\n    return 'No';\n}\nprint file_name_check(\"example.txt\") . \"\\n\";\n\
    print file_name_check(\"1example.dll\") . \"\\n\";", "  // Write your code here.\n\
    }\n", "    $file_name_array = explode(\".\", $file_name);\n    $pattern_alpha\
    \ = \"/^[a-zA-Z]{1}/\";\n    $pattern_digit = \"/[0-9]{3}/\";\n    $pattern_dot\
    \ = \"/\\./\";\n    $pattern_type = \"/txt|exe|dll/\";\n    $num_alpha = preg_match($pattern_alpha,\
    \ $file_name_array[0]);\n    $num_digit = preg_match($pattern_digit, $file_name_array[0]);\n\
    \    $num_dot = preg_match($pattern_dot, $file_name);\n    $num_type = preg_match($pattern_type,\
    \ $file_name_array[1]);\n    $file_name_check = \"No\";\n    if ($num_alpha ==\
    \ 1 && $num_digit < 1 && $num_dot == 1 && $num_type == 1) {\n        $file_name_check\
    \ = \"Yes\";\n    }\n    return $file_name_check;\n}", "\t// START SOLUTION\n\t\
    if (substr_count($file_name, '.') != 1) return 'No';\n\t$file_name_arr = explode('.',\
    \ $file_name);\n\tif (!ctype_alpha($file_name_arr[0][0])) return 'No';\n\tif (substr_count($file_name_arr[0],\
    \ '0') +\n\t\tsubstr_count($file_name_arr[0], '1') +\n\t\tsubstr_count($file_name_arr[0],\
    \ '2') +\n\t\tsubstr_count($file_name_arr[0], '3') +\n\t\tsubstr_count($file_name_arr[0],\
    \ '4') +\n\t\tsubstr_count($file_name_arr[0], '5') +\n\t\tsubstr_count($file_name_arr[0],\
    \ '6') +\n\t\tsubstr_count($file_name_arr[0], '7') +\n\t\tsubstr_count($file_name_arr[0],\
    \ '8') +\n\t\tsubstr_count($file_name_arr[0], '9') > 3) return 'No';\n\tif (!in_array($file_name_arr[1],\
    \ ['txt', 'exe', 'dll'])) return 'No';\n\treturn 'Yes';\n\t// END SOLUTION\n}",
  "\t$file_name_arr = explode('.', $file_name);\n\t$file_name_arr_1 = str_split($file_name_arr[0]);\n\
    \t$file_name_arr_2 = str_split($file_name_arr[1]);\n\t$number_of_digits = 0;\n\
    \t$number_of_dots = 0;\n\t$number_of_letters = 0;\n\tif(count($file_name_arr)\
    \ !== 2) {\n\t\treturn \"No\";\n\t}\n\tforeach($file_name_arr_1 as $value) {\n\
    \t\tif(ord($value) >= ord('0') && ord($value) <= ord('9')) {\n\t\t\t$number_of_digits++;\n\
    \t\t}\n\t\tif(ord($value) >= ord('a') && ord($value) <= ord('z') || ord($value)\
    \ >= ord('A') && ord($value) <= ord('Z')) {\n\t\t\t$number_of_letters++;\n\t\t\
    }\n\t}\n\tforeach($file_name_arr_2 as $value) {\n\t\tif(ord($value) >= ord('0')\
    \ && ord($value) <= ord('9')) {\n\t\t\t$number_of_digits++;\n\t\t}\n\t\tif(ord($value)\
    \ >= ord('a') && ord($value) <= ord('z') || ord($value) >= ord('A') && ord($value)\
    \ <= ord('Z')) {\n\t\t\t$number_of_letters++;\n\t\t}\n\t\tif($value === '.') {\n\
    \t\t\t$number_of_dots++;\n\t\t}\n\t}\n\tif($number_of_digits > 3 || $number_of_dots\
    \ !== 1 || $number_of_letters === 0 || !in_array($file_name_arr[1], ['txt', 'exe',\
    \ 'dll'])) {\n\t\treturn \"No\";\n\t}\n\treturn \"Yes\";\n}\n\necho file_name_check(\"\
    example.txt\");\necho file_name_check(\"1example.dll\");", "    if (preg_match('/^[a-zA-Z]+\\\
    d{0,3}\\.txt$|^[a-zA-Z]+\\d{0,3}\\.exe$|^[a-zA-Z]+\\d{0,3}\\.dll$/', $file_name))\
    \ {\n        return \"Yes\";\n    }\n    return \"No\";\n}\necho file_name_check(\"\
    example.txt\") . \"\\n\";\necho file_name_check(\"1example.dll\") . \"\\n\";\n\
    echo file_name_check(\"1example.txt\") . \"\\n\";\necho file_name_check(\"ex1ample.txt\"\
    ) . \"\\n\";\necho file_name_check(\"example123.txt\") . \"\\n\";\necho file_name_check(\"\
    example.exe\") . \"\\n\";\necho file_name_check(\"example.dll\") . \"\\n\";",
  "  $file_name_array = explode(\".\", $file_name);\n  $preg_match_result = preg_match_all(\"\
    /[0-9]/\", $file_name_array[0]);\n  $file_type = $file_name_array[1];\n  if (count($file_name_array)\
    \ !== 2) {\n    return \"No\";\n  }\n  if ($preg_match_result > 3) {\n    return\
    \ \"No\";\n  }\n  if (!(preg_match(\"/^[a-zA-Z]+$/\", $file_name_array[0]))) {\n\
    \    return \"No\";\n  }\n  if (!($file_type === \"txt\" || $file_type === \"\
    exe\" || $file_type === \"dll\")) {\n    return \"No\";\n  }\n  return \"Yes\"\
    ;\n}\n", "    return preg_match('/^[a-zA-Z]+\\d{0,3}+\\.(txt|exe|dll)$/', $file_name)\
    \ ? 'Yes' : 'No';\n}\n", "    // Your code here\n}\n", "\tif (preg_match('/^[a-zA-Z]+[0-9]{0,3}\\\
    .txt$|^[a-zA-Z]+[0-9]{0,3}\\.exe$|^[a-zA-Z]+[0-9]{0,3}\\.dll$/', $file_name))\
    \ {\n\t\treturn \"Yes\";\n\t} else {\n\t\treturn \"No\";\n\t}\n}\n$file_name =\
    \ 'example.txt';\necho file_name_check($file_name);", "    $position = strpos($file_name,\
    \ '.');\n    $start = substr($file_name, 0, $position);\n    $end = substr($file_name,\
    \ $position + 1);\n    $count = preg_match_all('/[0-9]/', $start);\n    if ($count\
    \ > 3) {\n        return \"No\";\n    }\n    if (preg_match('/[a-zA-Z]/', $start)\
    \ && ($end == 'txt' || $end == 'exe' || $end == 'dll')) {\n        return \"Yes\"\
    ;\n    }\n    return \"No\";\n}\necho file_name_check(\"1example.dll\");", " \
    \   $result = \"No\";\n    if (preg_match('/^[a-zA-Z]{1}[a-zA-Z0-9]{0,3}\\.[a-zA-Z]{3}$/',\
    \ $file_name)) {\n        $result = \"Yes\";\n    }\n    return $result;\n}\n\
    echo file_name_check(\"example.txt\") . \"<br>\";\necho file_name_check(\"1example.dll\"\
    ) . \"<br>\";\n", "  $file_name_array = explode(\".\", $file_name);\n  $before_dot\
    \ = $file_name_array[0];\n  $after_dot = $file_name_array[1];\n  $before_dot_array\
    \ = str_split($before_dot);\n  $digit_counter = 0;\n  foreach ($before_dot_array\
    \ as $key => $value) {\n    if (is_numeric($value)) {\n      $digit_counter++;\n\
    \    }\n  }\n  if (count($file_name_array) == 2 && \n  ($after_dot == \"txt\"\
    \ || $after_dot == \"exe\" || $after_dot == \"dll\") && \n  $digit_counter <=\
    \ 3 && \n  preg_match(\"/^[a-zA-Z]/\", $before_dot)) {\n    return \"Yes\";\n\
    \  } else {\n    return \"No\";\n  }\n}\n$file_name = \"example.txt\";\necho file_name_check($file_name)\
    \ . \"<br>\";\n$file_name = \"1example.dll\";\necho file_name_check($file_name)\
    \ . \"<br>\";\n$file_name = \"8example.axt\";\necho file_name_check($file_name)\
    \ . \"<br>\";\n$file_name = \"example.txt\";\necho file_name_check($file_name)\
    \ . \"<br>\";\n$file_name = \"Example.txt\";\necho file_name_check($file_name)\
    \ . \"<br>\";\n$file_name = \"exampl1e.txt\";\necho file_name_check($file_name)\
    \ . \"<br>\";", "  $n = 0;\n  $num_digits = 0;\n  $num_dots = 0;\n  $num_letters\
    \ = 0;\n  $a = array('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l',\
    \ 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B',\
    \ 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R',\
    \ 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z');\n  $dot = '.';\n  $txt = 'txt';\n \
    \ $exe = 'exe';\n  $dll = 'dll';\n  while($n < strlen($file_name)) {\n    if(in_array($file_name[$n],\
    \ $a)) {\n      $num_letters++;\n    }\n    if(is_numeric($file_name[$n])) {\n\
    \      $num_digits++;\n    }\n    if($file_name[$n] == $dot) {\n      $num_dots++;\n\
    \    }\n    $n++;\n  }\n  if($num_digits <= 3 && $num_dots == 1 && $num_letters\
    \ > 0 && (substr($file_name, (strpos($file_name, $dot) + 1)) == $txt || substr($file_name,\
    \ (strpos($file_name, $dot) + 1)) == $exe || substr($file_name, (strpos($file_name,\
    \ $dot) + 1)) == $dll)) {\n    return \"Yes\";\n  }\n  else {\n    return \"No\"\
    ;\n  }\n}\necho file_name_check(\"example.txt\") . \"\\n\";\necho file_name_check(\"\
    1example.dll\") . \"\\n\";", "    //Implement here\n    return $file_name;\n}\n",
  "\t$dot_index = strpos($file_name, '.');\n\t$ext = substr($file_name, $dot_index\
    \ + 1);\n\t$name = substr($file_name, 0, $dot_index);\n\t$num_of_digits = strlen(preg_replace('/[^0-9]/',\
    \ '', $name));\n\t$first_letter = $name[0];\n\tif ($num_of_digits <= 3 && \n\t\
    \t$dot_index != false && \n\t\t$ext == 'txt' || $ext == 'exe' || $ext == 'dll'\
    \ && \n\t\tctype_alpha($first_letter)) {\n\t\treturn 'Yes';\n\t}\n\treturn 'No';\n\
    }", "    $dot_count = 0;\n    $digit_count = 0;\n    $length = strlen($file_name);\n\
    \    $count = 0;\n    while ($count < $length) {\n        if ($file_name[$count]\
    \ == '.') {\n            $dot_count++;\n        }\n        else if ($file_name[$count]\
    \ >= '0' && $file_name[$count] <= '9') {\n            $digit_count++;\n      \
    \  }\n        $count++;\n    }\n    if ($dot_count != 1 || $digit_count > 3) {\n\
    \        return \"No\";\n    }\n    $dot_pos = strpos($file_name, '.');\n    $prefix\
    \ = substr($file_name, 0, $dot_pos);\n    $suffix = substr($file_name, $dot_pos\
    \ + 1);\n    if (empty($prefix) || $prefix[0] < 'A' || ($prefix[0] > 'Z' && $prefix[0]\
    \ < 'a') || $prefix[0] > 'z') {\n        return \"No\";\n    }\n    if ($suffix\
    \ != 'txt' && $suffix != 'exe' && $suffix != 'dll') {\n        return \"No\";\n\
    \    }\n    return \"Yes\";\n}\necho file_name_check(\"example.txt\") . \"\\n\"\
    ;\necho file_name_check(\"1example.dll\") . \"\\n\";", "    // Write your code\
    \ here\n}\n", "    // YOUR CODE GOES HERE\n}", "\tif (preg_match('/^[a-zA-Z]\\\
    d{0,3}\\.txt$|^[a-zA-Z]\\d{0,3}\\.exe$|^[a-zA-Z]\\d{0,3}\\.dll$/', $file_name))\
    \ {\n\t\treturn \"Yes\";\n\t}\n\treturn \"No\";\n}\n", "    $dot_pos = strpos($file_name,\
    \ '.');\n    if ($dot_pos === false) {\n        return 'No';\n    }\n    $before_dot\
    \ = substr($file_name, 0, $dot_pos);\n    $after_dot = substr($file_name, $dot_pos\
    \ + 1);\n    if (strlen($before_dot) == 0 || preg_match('/[a-zA-Z]/', $before_dot[0])\
    \ === 0) {\n        return 'No';\n    }\n    if (substr_count($before_dot, '0')\
    \ + substr_count($before_dot, '1') + substr_count($before_dot, '2') + substr_count($before_dot,\
    \ '3') + substr_count($before_dot, '4') + substr_count($before_dot, '5') + substr_count($before_dot,\
    \ '6') + substr_count($before_dot, '7') + substr_count($before_dot, '8') + substr_count($before_dot,\
    \ '9') > 3) {\n        return 'No';\n    }\n    if ($after_dot !== 'txt' && $after_dot\
    \ !== 'exe' && $after_dot !== 'dll') {\n        return 'No';\n    }\n    return\
    \ 'Yes';\n}\n", "\t$result = \"No\";\n\t$pieces = explode(\".\", $file_name);\n\
    \tif (count($pieces) == 2) {\n\t\t$after_dot = $pieces[1];\n\t\t$before_dot =\
    \ $pieces[0];\n\t\tif (in_array($after_dot, [\"txt\", \"exe\", \"dll\"])) {\n\t\
    \t\tif (count(str_split($before_dot)) > 0) {\n\t\t\t\tif (preg_match(\"/^[A-Za-z]+$/\"\
    , $before_dot[0])) {\n\t\t\t\t\t$count = 0;\n\t\t\t\t\tfor ($i = 0; $i < strlen($before_dot);\
    \ $i++) {\n\t\t\t\t\t\tif (is_numeric($before_dot[$i])) {\n\t\t\t\t\t\t\t$count++;\n\
    \t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ($count <= 3) {\n\t\t\t\t\t\t$result\
    \ = \"Yes\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn $result;\n\
    }\n\n$file_name = \"1example.dll\";\necho file_name_check($file_name) . \"\\n\"\
    ;", "\t$valid = 'No';\n\t$regex = \"/^[a-zA-Z]{1}[^\\.]{1,}[\\.]{1}(txt|exe|dll)$/\"\
    ;\n\tif (preg_match($regex, $file_name)) {\n\t\t$valid = 'Yes';\n\t}\n\treturn\
    \ $valid;\n}", "\t$valid = FALSE;\n\t$digits = '0123456789';\n\t$extension = array(\"\
    txt\", \"exe\", \"dll\");\n\t$extension_check = FALSE;\n\t$digits_num = 0;\n\t\
    $dot_num = 0;\n\t$letters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\
    \t$letter_check = FALSE;\n\t$str_before_dot = \"\";\n\t$str_after_dot = \"\";\n\
    \t$i = 0;\n\t$j = 0;\n\t$n = strlen($file_name);\n\tif ($n > 0) {\n\t\twhile (($i\
    \ < $n) && ($dot_num <= 1) && ($digits_num <= 3)) {\n\t\t\tif (strstr($digits,\
    \ $file_name[$i]) != FALSE) {\n\t\t\t\t$digits_num++;\n\t\t\t}\n\t\t\tif ($file_name[$i]\
    \ == '.') {\n\t\t\t\t$dot_num++;\n\t\t\t}\n\t\t\tif (strstr($letters, $file_name[$i])\
    \ != FALSE) {\n\t\t\t\t$letter_check = TRUE;\n\t\t\t}\n\t\t\t$i++;\n\t\t}\n\t\t\
    if (($dot_num == 1) && ($digits_num <= 3) && ($letter_check == TRUE)) {\n\t\t\t\
    $str_before_dot = substr($file_name, 0, $i - 1);\n\t\t\t$str_after_dot = substr($file_name,\
    \ $i, $n - $i);\n\t\t\twhile (($j < 3) && ($extension_check == FALSE)) {\n\t\t\
    \t\tif ($str_after_dot == $extension[$j]) {\n\t\t\t\t\t$extension_check = TRUE;\n\
    \t\t\t\t}\n\t\t\t\t$j++;\n\t\t\t}\n\t\t\tif ($extension_check == TRUE) {\n\t\t\
    \t\t$valid = TRUE;\n\t\t\t}\n\t\t}\n\t}\n", "    if (preg_match(\"/^([a-zA-Z]+)([0-9]{0,3})\\\
    .(txt|exe|dll)$/\", $file_name)) {\n        return \"Yes\";\n    } else {\n  \
    \      return \"No\";\n    }\n}\n$output = file_name_check(\"123example.txt\"\
    );\necho $output;", "    return \"Yes\";\n}\necho \"file_name_check(\\\"example.txt\\\
    \")\\n\";\necho file_name_check(\"example.txt\") . \"\\n\";\necho \"file_name_check(\\\
    \"1example.dll\\\")\\n\";\necho file_name_check(\"1example.dll\") . \"\\n\";",
  "\n}", "    $result = FALSE;\n    if (substr_count($file_name, '.') == 1) {\n  \
    \      list($prefix, $suffix) = explode('.', $file_name);\n        if (substr_count($prefix,\
    \ '0') + substr_count($prefix, '1') + substr_count($prefix, '2') + substr_count($prefix,\
    \ '3') + substr_count($prefix, '4') + substr_count($prefix, '5') + substr_count($prefix,\
    \ '6') + substr_count($prefix, '7') + substr_count($prefix, '8') + substr_count($prefix,\
    \ '9') <= 3 && !empty($prefix) && ctype_alpha($prefix[0]) && ($suffix == 'txt'\
    \ || $suffix == 'exe' || $suffix == 'dll')) {\n            $result = TRUE;\n \
    \       }\n    }\n    return $result;\n}", "    $count = 0;\n    $ext = \"\";\n\
    \    for ($i = 0; $i < strlen($file_name); $i++) {\n        if ($file_name[$i]\
    \ == '.') {\n            $count++;\n            for ($j = $i + 1; $j < strlen($file_name);\
    \ $j++) {\n                $ext .= $file_name[$j];\n            }\n        }\n\
    \    }\n    if ($count == 1) {\n        if ($ext == \"txt\" || $ext == \"exe\"\
    \ || $ext == \"dll\") {\n            return \"Yes\";\n        }\n    }\n    return\
    \ \"No\";\n}\n\necho file_name_check(\"example.txt\") . \"\\n\";\necho file_name_check(\"\
    1example.dll\") . \"\\n\";", "  return preg_match(\"/^[a-zA-Z][a-zA-Z0-9]{0,2}\\\
    .(txt|exe|dll)$/\", $file_name) === 1 ? \"Yes\" : \"No\";\n}\necho file_name_check(\"\
    example.txt\") . \"\\n\";\necho file_name_check(\"1example.dll\") . \"\\n\";",
  "    if (preg_match(\"/^([a-zA-Z][a-zA-Z0-9]{0,2})(\\.(txt|exe|dll))$/\", $file_name))\
    \ {\n        return \"Yes\";\n    } else {\n        return \"No\";\n    }\n}\n",
  "    // Your code here\n}\n", "\t// Your code goes here\n\t$check_digit = substr_count($file_name,\
    \ '0-9');\n\tif ($check_digit > 3) {\n\t\techo \"No\";\n\t}\n\t$check_dot = substr_count($file_name,\
    \ '.');\n\tif ($check_dot == 1) {\n\t\t$check_sub_string = explode('.', $file_name);\n\
    \t\tif (ctype_alpha($check_sub_string[0]) && ($check_sub_string[1] == 'txt' ||\
    \ $check_sub_string[1] == 'exe' || $check_sub_string[1] == 'dll')) {\n\t\t\techo\
    \ \"Yes\";\n\t\t}\n\t}\n}\nfile_name_check(\"example.txt\");", "    $pattern =\
    \ '/^[a-zA-Z][a-zA-Z0-9]{0,2}\\.(txt|exe|dll)$/';\n    $is_valid = preg_match($pattern,\
    \ $file_name);\n    if ($is_valid) {\n        return \"Yes\";\n    } else {\n\
    \        return \"No\";\n    }\n}", "    return (preg_match('/^[a-zA-Z][a-zA-Z0-9]{0,3}\\\
    .(txt|exe|dll)$/', $file_name) ? \"Yes\" : \"No\");\n}\n\necho file_name_check(\"\
    example.txt\");\necho \"\\n\";\necho file_name_check(\"1example.dll\");", "\t\
    $name_array = explode(\".\", $file_name);\n\tif (count($name_array) != 2) {\n\t\
    \treturn \"No\";\n\t}\n\telse if (preg_match(\"/[^a-zA-Z\\.]/\", $name_array[0]))\
    \ {\n\t\treturn \"No\";\n\t}\n\telse if (preg_match(\"/[^a-zA-Z0-9]/\", $name_array[1]))\
    \ {\n\t\treturn \"No\";\n\t}\n\telse if (!preg_match(\"/^[a-zA-Z]/\", $name_array[0]))\
    \ {\n\t\treturn \"No\";\n\t}\n\telse if (!preg_match(\"/[a-zA-Z]{1,}/\", $name_array[0]))\
    \ {\n\t\treturn \"No\";\n\t}\n\telse if (!preg_match(\"/^[a-zA-Z]{1,}[0-9]{0,3}$/\"\
    , $name_array[0])) {\n\t\treturn \"No\";\n\t}\n\telse if (!in_array($name_array[1],\
    \ [\"txt\", \"exe\", \"dll\"])) {\n\t\treturn \"No\";\n\t}\n\telse {\n\t\treturn\
    \ \"Yes\";\n\t}\n}", "\t$file_name_array = explode(\".\", $file_name);\n\t$file_name_pattern\
    \ = '/^[a-zA-Z]/';\n\t$file_type_pattern = '/^txt|exe|dll$/';\n\t$file_type =\
    \ $file_name_array[1];\n\t$file_name_count = substr_count($file_name, \".\");\n\
    \t$file_num_count = preg_match_all('/[0-9]/', $file_name, $matches);\n\tif (preg_match($file_name_pattern,\
    \ $file_name_array[0]) && $file_name_count == 1 && preg_match($file_type_pattern,\
    \ $file_type) && $file_num_count <= 3) {\n\t\treturn \"Yes\";\n\t} else {\n\t\t\
    return \"No\";\n\t}\n}\necho file_name_check(\"example.txt\") . \"\\n\";\necho\
    \ file_name_check(\"1example.dll\") . \"\\n\";", "    // Write your solution here\n\
    \    $ext_list = ['txt', 'exe', 'dll'];\n    // get the extension of the file\
    \ name\n    $ext = pathinfo($file_name, PATHINFO_EXTENSION);\n    if (ctype_alpha($file_name[0])\
    \ && in_array($ext, $ext_list)) {\n        // count number of digits\n       \
    \ $digit_count = preg_match_all('/[0-9]/', $file_name);\n        if ($digit_count\
    \ <= 3) {\n            return \"Yes\";\n        }\n    }\n    return \"No\";\n\
    }\n", "    $len = strlen($file_name);\n    $dot_loc = strpos($file_name, '.');\n\
    \    if ($dot_loc === FALSE) {\n        return \"No\";\n    }\n    $ext = substr($file_name,\
    \ $dot_loc+1);\n    if ($ext != \"txt\" && $ext != \"exe\" && $ext != \"dll\"\
    ) {\n        return \"No\";\n    }\n    $name = substr($file_name, 0, $dot_loc);\n\
    \    $count = 0;\n    for ($i = 0; $i < strlen($name); $i++) {\n        if (ord($name[$i])\
    \ < ord('0') || ord($name[$i]) > ord('9')) {\n            break;\n        }\n\
    \        $count++;\n    }\n    if ($count >= 4) {\n        return \"No\";\n  \
    \  }\n    return \"Yes\";\n}\necho file_name_check(\"example.txt\");\necho \"\\\
    n\";\necho file_name_check(\"1example.dll\");\necho \"\\n\";\necho file_name_check(\"\
    example.invalid\");\necho \"\\n\";\necho file_name_check(\"1example.invalid\"\
    );\necho \"\\n\";", "    $file_name_array = explode(\".\", $file_name);\n    $name\
    \ = $file_name_array[0];\n    $extension = $file_name_array[1];\n    if ((!is_numeric(substr($name,\
    \ 0, 1))) && (preg_match(\"/[a-zA-Z]/\", $name)) && (count($file_name_array) ==\
    \ 2) && (count(explode(\".\", $file_name_array[0])) == 1) && (count(explode(\"\
    .\", $file_name_array[1])) == 1) && (count(explode(\".\", $file_name)) == 2) &&\
    \ (($extension == \"txt\") || ($extension == \"exe\") || ($extension == \"dll\"\
    )) && ((substr_count($name, \"0\") + substr_count($name, \"1\") + substr_count($name,\
    \ \"2\") + substr_count($name, \"3\") + substr_count($name, \"4\") + substr_count($name,\
    \ \"5\") + substr_count($name, \"6\") + substr_count($name, \"7\") + substr_count($name,\
    \ \"8\") + substr_count($name, \"9\")) <= 3)) {\n        return \"Yes\";\n   \
    \ } else {\n        return \"No\";\n    }\n}\necho file_name_check(\"example.txt\"\
    ) . \"\\n\";\necho file_name_check(\"1example.dll\") . \"\\n\";\necho file_name_check(\"\
    example.exe\") . \"\\n\";\necho file_name_check(\"example.jpg\") . \"\\n\";\n\
    echo file_name_check(\"example.exe.txt\") . \"\\n\";\necho file_name_check(\"\
    example\") . \"\\n\";\necho file_name_check(\"15example.txt\") . \"\\n\";", " \
    \   // Write your code here\n}", "    $max_digits = 3;\n    $correct_extensions\
    \ = ['txt', 'exe', 'dll'];\n    $extension_index = strrpos($file_name, '.');\n\
    \    $name = substr($file_name, 0, $extension_index);\n    $extension = substr($file_name,\
    \ $extension_index + 1);\n    $name_matches = preg_match('/^[a-zA-Z]\\w*$/', $name);\n\
    \    $extension_matches = in_array($extension, $correct_extensions);\n    $digit_count\
    \ = preg_match_all('/\\d/', $file_name);\n    $is_valid = $name_matches && $extension_matches\
    \ && $digit_count <= $max_digits;\n    return $is_valid ? 'Yes' : 'No';\n}\n$file_name\
    \ = \"example.txt\";\necho file_name_check($file_name);", "\t// TODO\n}\necho\
    \ file_name_check(\"example.txt\");\necho file_name_check(\"1example.dll\");",
  "    // YOUR SOLUTION GOES HERE\n}", "  if (preg_match('/^[a-zA-Z][^\\.]*\\.(txt|exe|dll)$/',\
    \ $file_name)) {\n    return \"Yes\";\n  }\n  return \"No\";\n}\necho file_name_check(\"\
    example.txt\") . \"\\n\";\necho file_name_check(\"1example.dll\") . \"\\n\";\n",
  "    $dot_pos = strpos($file_name, '.');\n    $name = substr($file_name, 0, $dot_pos);\n\
    \    $ext = substr($file_name, $dot_pos + 1);\n    $name_len = strlen($name);\n\
    \    if (is_numeric($name) && $name >= 0 && $name <= 255 && $name_len <= 3 &&\
    \ ctype_alpha($name[0]) &&\n        in_array($ext, ['txt', 'exe', 'dll'])) {\n\
    \        return 'Yes';\n    }\n    return 'No';\n}\n\necho file_name_check(\"\
    example.txt\") . PHP_EOL;\necho file_name_check(\"1example.dll\") . PHP_EOL;",
  "\t$file_name_arr = explode('.', $file_name);\n\tif(count($file_name_arr) !== 2)\
    \ {\n\t\treturn 'No';\n\t}\n\n\t$file_name_arr[0] = preg_replace('/[^A-Za-z0-9]/',\
    \ '', $file_name_arr[0]);\n\tif(preg_match('/[0-9]{4,}/', $file_name_arr[0]))\
    \ {\n\t\treturn 'No';\n\t}\n\n\tif(!preg_match('/^[A-Za-z]/', $file_name_arr[0]))\
    \ {\n\t\treturn 'No';\n\t}\n\n\tif(!in_array($file_name_arr[1], ['txt', 'exe',\
    \ 'dll'])) {\n\t\treturn 'No';\n\t}\n\n\treturn 'Yes';\n}\n\necho \"example.txt\\\
    n\";\necho file_name_check(\"example.txt\") . \"\\n\";\necho \"1example.dll\\\
    n\";\necho file_name_check(\"1example.dll\") . \"\\n\";\necho \"example.txt.txt\\\
    n\";\necho file_name_check(\"example.txt.txt\") . \"\\n\";\necho \"1example.exe\\\
    n\";\necho file_name_check(\"1example.exe\") . \"\\n\";\necho \"e.txt\\n\";\n\
    echo file_name_check(\"e.txt\") . \"\\n\";\necho \"example.exe\\n\";\necho file_name_check(\"\
    example.exe\") . \"\\n\";\necho \"1asd.dll\\n\";\necho file_name_check(\"1asd.dll\"\
    ) . \"\\n\";\necho \"a1.dll\\n\";\necho file_name_check(\"a1.dll\") . \"\\n\"\
    ;\necho \"asd.txt\\n\";\necho file_name_check(\"asd.txt\") . \"\\n\";\necho \"\
    a.txt\\n\";\necho file_name_check(\"a.txt\") . \"\\n\";\necho \"1.txt\\n\";\n\
    echo file_name_check(\"1.txt\") . \"\\n\";\n", "  if (count(explode('.', $file_name))\
    \ !== 2) {\n    return 'No';\n  }\n\n  $file_name_part_array = explode('.', $file_name);\n\
    \  $file_name_first_part = $file_name_part_array[0];\n  $file_name_last_part =\
    \ $file_name_part_array[1];\n\n  if (count(str_split($file_name_first_part)) <\
    \ 1 || \n      count(str_split($file_name_first_part)) > 5 ||\n      count(preg_grep('/[^a-zA-Z]/',\
    \ str_split($file_name_first_part))) > 0 ||\n      count(preg_grep('/[0-9]/',\
    \ str_split($file_name_first_part))) > 3) {\n    return 'No';\n  }\n\n  if ($file_name_last_part\
    \ != 'txt' && $file_name_last_part != 'exe' && $file_name_last_part != 'dll')\
    \ {\n    return 'No';\n  }\n\n  return 'Yes';\n}\n", "    $regex = \"/[0-9]{4}/\"\
    ;\n    if (preg_match($regex, $file_name)) {\n        return \"No\";\n    }\n\n\
    \    $regex = \"/^\\w+\\.txt|exe|dll$/\";\n    if (preg_match($regex, $file_name))\
    \ {\n        return \"Yes\";\n    }\n    return \"No\";\n}\n", "\t$pattern = \"\
    /([a-zA-Z]\\d{0,3})\\.txt|([a-zA-Z]\\d{0,3})\\.exe|([a-zA-Z]\\d{0,3})\\.dll/\"\
    ;\n\tif (preg_match($pattern, $file_name)) {\n\t\treturn \"Yes\";\n\t} else {\n\
    \t\treturn \"No\";\n\t}\n}\n\necho file_name_check(\"6example.dll\") . \"\\n\"\
    ;\n\necho file_name_check(\"_example.dll\") . \"\\n\";\n\necho file_name_check(\"\
    example.txt\") . \"\\n\";\n\necho file_name_check(\"1example.dll\") . \"\\n\"\
    ;\n\necho file_name_check(\"67example.txt\") . \"\\n\";\n\necho file_name_check(\"\
    67example.doc\") . \"\\n\";\n\necho file_name_check(\"67example.exe\") . \"\\\
    n\";\n\necho file_name_check(\"example.exe\") . \"\\n\";\n\necho file_name_check(\"\
    example.dll\") . \"\\n\";\n\necho file_name_check(\"example.txt\") . \"\\n\";\n\
    \necho file_name_check(\"example.dll\") . \"\\n\";\n\necho file_name_check(\"\
    1example.dll\") . \"\\n\";\n\necho file_name_check(\"67example.dll\") . \"\\n\"\
    ;\n\necho file_name_check(\"Example67.dll\") . \"\\n\";\n\necho file_name_check(\"\
    Example67.exe\") . \"\\n\";\n\necho file_name_check(\"Example67.txt\") . \"\\\
    n\";\n\necho file_name_check(\"example.txt\") . \"\\n\";\n\necho file_name_check(\"\
    example.exe\") . \"\\n\";\n\necho file_name_check(\"example.dll\") . \"\\n\";\n\
    \necho file_name_check(\"_example.dll\") . \"\\n\";\n\necho file_name_check(\"\
    5Example.txt\") . \"\\n\";\n\necho file_name_check(\"5Example.exe\") . \"\\n\"\
    ;\n\necho file_name_check(\"5Example.dll\") . \"\\n\";\n\necho file", "  // Write\
    \ your code here\n}", "\t// your code goes here ...\n}\n", "    $name_arr = explode('.',\
    \ $file_name);\n    $substring_1 = $name_arr[0];\n    $substring_2 = $name_arr[1];\n\
    \    if(!preg_match('/^[a-zA-Z]+$/', $substring_1)){\n        return \"No\";\n\
    \    }\n    if(!preg_match('/^\\d{0,3}$/', $substring_1)){\n        return \"\
    No\";\n    }\n    if(!preg_match('/^(txt|exe|dll)$/', $substring_2)){\n      \
    \  return \"No\";\n    }\n    return \"Yes\";\n}", "\t$dot_count = substr_count($file_name,\
    \ '.');\n\t$exploded_name = explode('.', $file_name);\n\t$name_regex = \"/^[a-zA-Z]/\"\
    ;\n\t$number_count = preg_match_all(\"/[0-9]/\", $file_name);\n\t$extension_regex\
    \ = \"/^(txt|exe|dll)$/\";\n\t\n\tif ($dot_count != 1 || $number_count > 3 ||\
    \ !preg_match($name_regex, $exploded_name[0]) || !preg_match($extension_regex,\
    \ $exploded_name[1])) {\n\t\techo \"No\";\n\t} else {\n\t\techo \"Yes\";\n\t}\n\
    }\n\nfile_name_check(\"example.txt\");\nfile_name_check(\"1example.dll\");", "\t\
    $name = strtolower($file_name);\n\t$dot_count = 0;\n\t$digit_count = 0;\n\t$first_char\
    \ = ord($name[0]);\n\tif (96 < $first_char && $first_char < 123) {\n\t\tfor ($i\
    \ = 0; $i < strlen($name); $i++) {\n\t\t\t$char = ord($name[$i]);\n\t\t\tif ($char\
    \ == 46) {\n\t\t\t\t$dot_count++;\n\t\t\t} else if (47 < $char && $char < 58)\
    \ {\n\t\t\t\t$digit_count++;\n\t\t\t}\n\t\t}\n\t\tif (substr($name, -4) == \"\
    .txt\" || substr($name, -4) == \".exe\" || substr($name, -4) == \".dll\") {\n\t\
    \t\tif ($dot_count == 1 && $digit_count < 4) {\n\t\t\t\treturn \"Yes\";\n\t\t\t\
    }\n\t\t}\n\t}\n\treturn \"No\";\n}\n\necho file_name_check(\"example.txt\") .\
    \ \"<br>\";\necho file_name_check(\"1example.dll\") . \"<br>\";\necho file_name_check(\"\
    3example.exe\") . \"<br>\";\necho file_name_check(\"example.dll\") . \"<br>\"\
    ;\necho file_name_check(\"example.txt\") . \"<br>\";\necho file_name_check(\"\
    examples.txt\") . \"<br>\";\necho file_name_check(\"example.exe\") . \"<br>\"\
    ;\necho file_name_check(\"exampl.txt\") . \"<br>\";\necho file_name_check(\"exampl.txt\"\
    ) . \"<br>\";\necho file_name_check(\"examples.exe\") . \"<br>\";\necho file_name_check(\"\
    example.txt\") . \"<br>\";\necho file_name_check(\"example1.txt\") . \"<br>\"\
    ;\necho file_name_check(\"exa.mple.txt\") . \"<br>\";\necho file_name_check(\"\
    example1.txt\") . \"<br>\";\necho file_name_check(\"example.", "    $arr = explode('.',\
    \ $file_name);\n    if (count($arr) == 2 && preg_match('/^[a-zA-Z]+$/', $arr[0])\
    \ && in_array($arr[1], ['txt', 'exe', 'dll'])) {\n        return \"Yes\";\n  \
    \  } else {\n        return \"No\";\n    }\n}\necho file_name_check(\"example.txt\"\
    ) . PHP_EOL;\necho file_name_check(\"1example.dll\") . PHP_EOL;\necho file_name_check(\"\
    1example.dll\") . PHP_EOL;", "\t$file_name_arr = explode('.', $file_name);\n\t\
    $count_num = 0;\n\tfor ($i = 0; $i < strlen($file_name_arr[0]); $i++) {\n\t\t\
    if (ord($file_name_arr[0][$i]) >= 48 && ord($file_name_arr[0][$i]) <= 57) {\n\t\
    \t\t$count_num++;\n\t\t}\n\t}\n\tif (count($file_name_arr) == 2 && $count_num\
    \ <= 3 && \n\t\t$file_name_arr[0] != '' && ($file_name_arr[1] == 'txt' || $file_name_arr[1]\
    \ == 'exe' || $file_name_arr[1] == 'dll') && \n\t\t(ord($file_name_arr[0][0])\
    \ >= 65 && ord($file_name_arr[0][0]) <= 90 || ord($file_name_arr[0][0]) >= 97\
    \ && ord($file_name_arr[0][0]) <= 122)) {\n\t\treturn 'Yes';\n\t} else {\n\t\t\
    return 'No';\n\t}\n}\n\n$file_name = \"example.txt\";\necho file_name_check($file_name);\n\
    echo \"<br/>\";\n$file_name = \"1example.dll\";\necho file_name_check($file_name);",
  "    $number_of_digits = 0;\n    $number_of_dots = 0;\n    $first_letter = $file_name[0];\n\
    \    $last_three_letters = substr($file_name, -3);\n    $dot_position = strpos($file_name,\
    \ '.');\n    $dot_position_len = strlen($dot_position);\n    for ($i = 0; $i <\
    \ strlen($file_name); $i++) {\n        if (ctype_digit($file_name[$i])) {\n  \
    \          $number_of_digits++;\n        }\n        if ($file_name[$i] == '.')\
    \ {\n            $number_of_dots++;\n        }\n    }\n    $substring_before_dot\
    \ = substr($file_name, 0, $dot_position);\n    $substring_after_dot = substr($file_name,\
    \ $dot_position_len + 1);\n    if ($number_of_digits > 3 || $number_of_dots !=\
    \ 1) {\n        return \"No\";\n    }\n    if (ctype_alpha($first_letter) && !$substring_before_dot)\
    \ {\n        return \"No\";\n    }\n    if ($last_three_letters != 'txt' && $last_three_letters\
    \ != 'exe' && $last_three_letters != 'dll') {\n        return \"No\";\n    }\n\
    \    return \"Yes\";\n}\n\nprint_r(file_name_check(\"example.txt\"));", "\tif(\
    \ preg_match('/^[a-zA-Z]\\w*[.](txt|exe|dll)$/', $file_name) ) {\n\t\treturn \"\
    Yes\";\n\t}\n\treturn \"No\";\n}\n\necho file_name_check(\"example.txt\") . PHP_EOL;\n\
    echo file_name_check(\"1example.dll\") . PHP_EOL;\necho file_name_check(\"example.exe\"\
    ) . PHP_EOL;\necho file_name_check(\"ex.ample.exe\") . PHP_EOL;\necho file_name_check(\"\
    examp.le.dll\") . PHP_EOL;\necho file_name_check(\"examp.le.txt\") . PHP_EOL;",
  "    $ret = 'No';\n    $pattern = '/^[a-zA-Z]{1}[a-zA-Z0-9]{0,}\\.[a-zA-Z]{3}$/';\n\
    \    if (preg_match($pattern, $file_name)) {\n        $ret = 'Yes';\n    }\n \
    \   return $ret;\n}\n\n$file_name = readline(\"Enter file name: \");\necho file_name_check($file_name)\
    \ . \"\\n\";", "    return preg_match(\"/^[a-zA-Z]+[^\\.]\\d{0,3}\\.txt$|^[a-zA-Z]+[^\\\
    .]\\d{0,3}\\.exe$|^[a-zA-Z]+[^\\.]\\d{0,3}\\.dll$/\", $file_name) ? \"Yes\" :\
    \ \"No\";\n}\necho file_name_check(\"1example.dll\") . PHP_EOL;\necho file_name_check(\"\
    1example.exe\") . PHP_EOL;\necho file_name_check(\"example.txt\") . PHP_EOL;",
  "    if (preg_match(\"/^[a-zA-Z]{1}[a-zA-Z0-9]{0,}[.][txt|exe|dll]{3}$/\", $file_name))\
    \ {\n        return \"Yes\";\n    } else {\n        return \"No\";\n    }\n}",
  "    $file_name_array = explode(\".\", $file_name);\n    $arr_length = count($file_name_array);\n\
    \    if ($arr_length != 2) return \"No\";\n    $first_part = $file_name_array[0];\n\
    \    $digit_count = preg_match_all(\"/[0-9]/\", $first_part);\n    if ($digit_count\
    \ > 3) return \"No\";\n    $fisrt_letter = substr($first_part, 0, 1);\n    if\
    \ (!ctype_alpha($fisrt_letter)) return \"No\";\n    $second_part = $file_name_array[1];\n\
    \    if ($second_part != \"txt\" && $second_part != \"exe\" && $second_part !=\
    \ \"dll\") return \"No\";\n    return \"Yes\";\n}\n$file_name = \"example.txt\"\
    ;\necho file_name_check($file_name);\n", "\t$file_name_list = explode(\".\", $file_name);\n\
    \tif (count($file_name_list) != 2) {\n\t\treturn \"No\";\n\t}\n\tif (is_numeric(substr($file_name_list[0],\
    \ 0, 1))) {\n\t\treturn \"No\";\n\t}\n\tif (preg_match(\"/[0-9]{4}/\", $file_name_list[0]))\
    \ {\n\t\treturn \"No\";\n\t}\n\tif (!preg_match(\"/txt|exe|dll/\", $file_name_list[1]))\
    \ {\n\t\treturn \"No\";\n\t}\n\treturn \"Yes\";\n}\necho file_name_check(\"1example.dll\"\
    );"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

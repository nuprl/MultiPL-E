name: HumanEval_78_hex_key
language: php
prompt: "<?php\n// You have been tasked to write a function that receives \n// a hexadecimal\
  \ number as a string and counts the number of hexadecimal \n// digits that are primes\
  \ (prime number, or a prime, is a natural number \n// greater than 1 that is not\
  \ a product of two smaller natural numbers).\n// Hexadecimal digits are 0, 1, 2,\
  \ 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers are 2, 3, 5, 7, 11, 13,\
  \ 17,...\n// So you have to determine a number of the following digits: 2, 3, 5,\
  \ 7, \n// B (=decimal 11), D (=decimal 13).\n// Note: you may assume the input is\
  \ always correct or empty string, \n// and symbols A,B,C,D,E,F are always uppercase.\n\
  // Examples:\n// >>> hex_key(\"AB\")\n// 1\n// >>> hex_key(\"1077E\")\n// 2\n//\
  \ >>> hex_key(\"ABED1A33\")\n// 4\n// >>> hex_key(\"123456789ABCDEF0\")\n// 6\n\
  // >>> hex_key(\"2020\")\n// 2\nfunction hex_key($num) {\n"
tests: "function candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test\
  \ failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test\
  \ failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
  \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $arr = str_split($num);\n    $counter = 0;\n    $dict = ['1' =>\
    \ true, '2' => true, '3' => true, '5' => true, '7' => true, 'B' => true, 'D' =>\
    \ true];\n    foreach ($arr as $key => $value) {\n        if (array_key_exists($value,\
    \ $dict)) {\n            $counter++;\n        }\n    }\n    return $counter;\n\
    }\necho hex_key(\"ABED1A33\");", "    $primes = ['2', '3', '5', '7', 'B', 'D'];\n\
    \    $count = 0;\n    foreach(str_split($num) as $digit) {\n        if(in_array($digit,\
    \ $primes)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n",
  "    $decimal = hexdec($num);\n    $prime = array();\n    for ($i = 2; $i <= $decimal;\
    \ $i++) {\n        $is_prime = TRUE;\n        for ($j = 2; $j < $i; $j++) {\n\
    \            if ($i % $j == 0) {\n                $is_prime = FALSE;\n       \
    \         break;\n            }\n        }\n        if ($is_prime) {\n       \
    \     $prime[] = $i;\n        }\n    }\n    $hex_prime = array();\n    foreach\
    \ ($prime as $p) {\n        $hex_prime[] = dechex($p);\n    }\n    $count = 0;\n\
    \    for ($i = 0; $i < strlen($num); $i++) {\n        if (in_array($num[$i], $hex_prime))\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}\n\necho hex_key(\"\
    AB\");", "\t$primeHex = array(2, 3, 5, 7, 'B', 'D');\n\t$count = 0;\n\tfor ($i\
    \ = 0; $i < strlen($num); $i++) {\n\t\tif (in_array($num[$i], $primeHex)) {\n\t\
    \t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\necho hex_key(\"AB\");\necho \"\
    <br/>\";\necho hex_key(\"1077E\");\necho \"<br/>\";\necho hex_key(\"ABED1A33\"\
    );\necho \"<br/>\";\necho hex_key(\"123456789ABCDEF0\");\necho \"<br/>\";\necho\
    \ hex_key(\"2020\");\necho \"<br/>\";", "  $primes = ['2', '3', '5', '7', 'B',\
    \ 'D'];\n  $count = 0;\n  for ($i = 0; $i < strlen($num); $i++) {\n    if (in_array($num[$i],\
    \ $primes)) {\n      $count++;\n    }\n  }\n  return $count;\n}", "\t$count =\
    \ 0;\n\t$hex = str_split($num);\n\t$primes = [2, 3, 5, 7, 11, 13];\n\t$hex_numbers\
    \ = array_merge(range(0, 9), range('A', 'F'));\n\t$hex_numbers = array_flip($hex_numbers);\n\
    \t$hex_numbers = array_map(function($key) {\n\t\treturn $key + 1;\n\t}, $hex_numbers);\n\
    \tfor ($i = 0; $i < count($hex); $i++) {\n\t\tif (in_array($hex_numbers[$hex[$i]],\
    \ $primes)) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}", "    $hexes\
    \ = str_split($num);\n    $primes = [2, 3, 5, 7, 11, 13];\n    $hex_primes = 0;\n\
    \    foreach ($hexes as $hex) {\n        if (in_array($hex, $primes)) {\n    \
    \        $hex_primes++;\n        }\n    }\n    return $hex_primes;\n}\n$num =\
    \ '';\necho hex_key($num) . PHP_EOL;\n$num = 'AB';\necho hex_key($num) . PHP_EOL;\n\
    $num = '1077E';\necho hex_key($num) . PHP_EOL;\n$num = 'ABED1A33';\necho hex_key($num)\
    \ . PHP_EOL;\n$num = '123456789ABCDEF0';\necho hex_key($num) . PHP_EOL;\n$num\
    \ = '2020';\necho hex_key($num) . PHP_EOL;", "    $num = strtoupper($num);\n \
    \   $primes = \"2357BD\";\n    $match = str_split($primes);\n    $count = 0;\n\
    \    for ($i = 0; $i < strlen($num); $i++) {\n        if (in_array($num[$i], $match))\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}", "\t// create\
    \ a string of hexadecimal primes\n\t$hexPrimes = \"2357BDF\";\n\t// convert the\
    \ string of hexadecimal primes to an array\n\t$hexPrimes = str_split($hexPrimes);\n\
    \t// convert the hexadecimal number string to an array\n\t$hexNumber = str_split($num);\n\
    \t// initialize a counter\n\t$primeCounter = 0;\n\t// create a foreach loop that\
    \ loops through the hexadecimal number array\n\tforeach ($hexNumber as $value)\
    \ {\n\t\t// create an if statement that checks if the current value is in the\
    \ \n\t\t// array of hexadecimal primes.  If it is, then increment the counter.\n\
    \t\tif (in_array($value, $hexPrimes)) {\n\t\t\t$primeCounter++;\n\t\t}\n\t}\n\t\
    // return the counter\n\treturn $primeCounter;\n}\n", "    $result = 0;\n    $primes\
    \ = [2, 3, 5, 7, 11, 13];\n    $lookup = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,\
    \ 13, 14, 15];\n    $chars = str_split($num);\n    foreach ($chars as $char) {\n\
    \        if (in_array($char, array_keys($lookup))) {\n            if (in_array($lookup[$char],\
    \ $primes)) {\n                $result++;\n            }\n        }\n    }\n \
    \   return $result;\n}", "    $primeHexKeyDigits = array(1 => '2', '3', '5', '7',\
    \ 'B', 'D');\n    $num = str_split($num);\n    $primeDigits = 0;\n    foreach\
    \ ($num as $key => $value) {\n        if (in_array($value, $primeHexKeyDigits))\
    \ {\n            $primeDigits++;\n        }\n    }\n    return $primeDigits;\n\
    }\n", "    $num = strtoupper($num);\n    $primes = [2, 3, 5, 7, 11, 13];\n   \
    \ $hex_key = 0;\n    for ($i = 0; $i < strlen($num); $i++) {\n        if (in_array(hexdec($num[$i]),\
    \ $primes)) {\n            $hex_key++;\n        }\n    }\n    return $hex_key;\n\
    }\n\n$tests = [\n    [\"AB\", 1],\n    [\"1077E\", 2],\n    [\"ABED1A33\", 4],\n\
    \    [\"123456789ABCDEF0\", 6],\n    [\"2020\", 2],\n    [\"B\", 1],\n    [\"\
    FF0\", 1],\n    [\"F0F0F0\", 1],\n    [\"\", 0],\n    [\"0\", 0],\n    [\"F00\"\
    , 0],\n    [\"FAF\", 0],\n    [\"FAAF\", 0],\n    [\"FAAF\", 0],\n    [\"AABB\"\
    , 0],\n    [\"AABC\", 0],\n    [\"AABD\", 0],\n    [\"AABE\", 0],\n    [\"AABF\"\
    , 0],\n    [\"AAC0\", 0],\n    [\"AAC1\", 0],\n    [\"AAC2\", 0],\n    [\"AAC3\"\
    , 0],\n    [\"AAC4\", 0],\n    [\"AAC5\", 0],\n    [\"AAC6\", 0],\n    [\"AAC7\"\
    , 0],\n    [\"AAC8\", 0],\n    [\"AAC9\", 0],\n    [\"AACA\", 0],\n    [\"AACB\"\
    , 0],\n    [\"AACC\", 0],\n    [\"AACD\", 0],\n    [\"AACE\", 0],\n    [\"AACF\"\
    , 0],\n    [\"AAD0\", 0],\n    [\"AAD1\", 0],\n    [\"AAD2\", 0],\n    [\"AAD3\"\
    , 0],\n    [\"AAD4\", 0],\n    [\"AAD5\", 0],\n    [\"AAD6\", 0],\n    [\"AAD7\"\
    , 0],\n    [\"AAD8\", 0],\n    [\"AAD9\", 0],\n    [\"AADA\", 0],\n    [\"A",
  "\t$count = 0;\n\t$hex = ['2', '3', '5', '7', 'B', 'D'];\n\tfor ($i = 0; $i < strlen($num);\
    \ $i++) {\n\t\t$num[$i] = strtoupper($num[$i]);\n\t\tif (in_array($num[$i], $hex))\
    \ {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}", "    $key = [\n      \
    \  '2' => true,\n        '3' => true,\n        '5' => true,\n        '7' => true,\n\
    \        'B' => true,\n        'D' => true,\n    ];\n    $count = 0;\n    $len\
    \ = strlen($num);\n    for ($i = 0; $i < $len; $i++) {\n        if (isset($key[$num[$i]]))\
    \ $count++;\n    }\n    return $count;\n}\n\necho hex_key(\"AB\") . PHP_EOL; //\
    \ 1\necho hex_key(\"1077E\") . PHP_EOL; // 2\necho hex_key(\"ABED1A33\") . PHP_EOL;\
    \ // 4\necho hex_key(\"123456789ABCDEF0\") . PHP_EOL; // 6\necho hex_key(\"2020\"\
    ) . PHP_EOL; // 2", "    $hexArray = array('0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F');\n\
    \    $primeArray = array('2','3','5','7','B','D');\n    $result = 0;\n    for\
    \ ($i = 0; $i < strlen($num); $i++) {\n        if (in_array($num[$i], $primeArray))\
    \ {\n            $result++;\n        }\n    }\n    return $result;\n}", "    $primes\
    \ = array(2, 3, 5, 7, 11, 13);\n    $total = 0;\n    $num = str_split($num);\n\
    \    $num = array_map(function($x) {\n        return hexdec($x);\n    }, $num);\n\
    \    foreach ($num as $x) {\n        if (in_array($x, $primes)) {\n          \
    \  $total++;\n        }\n    }\n    return $total;\n}", "    $hex = ['2','3','5','7','B','D'];\n\
    \    $arr = str_split($num);\n    $result = 0;\n    foreach ($arr as $value) {\n\
    \        if (in_array($value, $hex)) {\n            $result++;\n        }\n  \
    \  }\n    return $result;\n}\necho hex_key(\"AB\") . \"\\n\";\necho hex_key(\"\
    1077E\") . \"\\n\";\necho hex_key(\"ABED1A33\") . \"\\n\";\necho hex_key(\"123456789ABCDEF0\"\
    ) . \"\\n\";\necho hex_key(\"2020\") . \"\\n\";", "    $primes = ['2', '3', '5',\
    \ '7', 'B', 'D'];\n    $stringOfPrimes = '';\n    for ($i = 0; $i < strlen($num);\
    \ $i++) {\n        $hexChar = $num[$i];\n        if (in_array($hexChar, $primes))\
    \ {\n            $stringOfPrimes .= $hexChar;\n        }\n    }\n    return strlen($stringOfPrimes);\n\
    }\necho \"hex_key(\\\"AB\\\"): \" . hex_key(\"AB\") . \"\\n\";\necho \"hex_key(\\\
    \"1077E\\\"): \" . hex_key(\"1077E\") . \"\\n\";\necho \"hex_key(\\\"ABED1A33\\\
    \"): \" . hex_key(\"ABED1A33\") . \"\\n\";\necho \"hex_key(\\\"123456789ABCDEF0\\\
    \"): \" . hex_key(\"123456789ABCDEF0\") . \"\\n\";\necho \"hex_key(\\\"2020\\\"\
    ): \" . hex_key(\"2020\") . \"\\n\";\n", "  // Your code here\n}\n", "\t$primes\
    \ = ['2', '3', '5', '7', 'B', 'D'];\n\t$keys = 0;\n\t$num = str_split($num);\n\
    \tforeach ($num as $value) {\n\t\tif (in_array($value, $primes)) {\n\t\t\t$keys++;\n\
    \t\t}\n\t}\n\treturn $keys;\n}\n", "    $str = 'ABD';\n    $arr = str_split($num);\n\
    \    $result = 0;\n    foreach ($arr as $key => $value) {\n        for ($i=0;\
    \ $i < strlen($str); $i++) { \n            if ($value == $str[$i]) {\n       \
    \         $result++;\n            }\n        }\n    }\n    return $result;\n}\n\
    echo hex_key(\"AB\");\necho hex_key(\"1077E\");\necho hex_key(\"ABED1A33\");\n\
    echo hex_key(\"123456789ABCDEF0\");\necho hex_key(\"2020\");", "    $hexadecimal\
    \ = array(\n        \"0\" => \"0\",\n        \"1\" => \"1\",\n        \"2\" =>\
    \ \"2\",\n        \"3\" => \"3\",\n        \"4\" => \"4\",\n        \"5\" => \"\
    5\",\n        \"6\" => \"6\",\n        \"7\" => \"7\",\n        \"8\" => \"8\"\
    ,\n        \"9\" => \"9\",\n        \"A\" => \"10\",\n        \"B\" => \"11\"\
    ,\n        \"C\" => \"12\",\n        \"D\" => \"13\",\n        \"E\" => \"14\"\
    ,\n        \"F\" => \"15\",\n    );\n    $p = 0;\n    $len = strlen($num);\n \
    \   for ($i = 0; $i < $len; $i++) {\n        if ($hexadecimal[$num[$i]] == 2 ||\
    \ $hexadecimal[$num[$i]] == 3 ||\n            $hexadecimal[$num[$i]] == 5 || $hexadecimal[$num[$i]]\
    \ == 7 ||\n            $hexadecimal[$num[$i]] == 11 || $hexadecimal[$num[$i]]\
    \ == 13) {\n            $p++;\n        }\n    }\n    return $p;\n}\n", "    $num\
    \ = strtoupper($num);\n    $primes = ['2', '3', '5', '7', 'B', 'D'];\n    $sum\
    \ = 0;\n    for ($i = 0; $i < strlen($num); $i++) {\n        if (in_array($num[$i],\
    \ $primes)) {\n            $sum++;\n        }\n    }\n    return $sum;\n}\necho\
    \ hex_key(\"AB\") . \"\\n\";\necho hex_key(\"1077E\") . \"\\n\";\necho hex_key(\"\
    ABED1A33\") . \"\\n\";\necho hex_key(\"123456789ABCDEF0\") . \"\\n\";\necho hex_key(\"\
    2020\") . \"\\n\";\n", "    $hex = str_split(strtoupper($num));\n    $dec = array_map(function($n)\
    \ {\n        return base_convert($n, 16, 10);\n    }, $hex);\n    $prime = array_filter($dec,\
    \ function($n) {\n        if ($n == 1) return false;\n        for ($i = 2; $i\
    \ <= sqrt($n); $i++) {\n            if ($n % $i == 0) return false;\n        }\n\
    \        return true;\n    });\n    return count($prime);\n}", "    $binaryNumber\
    \ = hexdec($num);\n    $result = 0;\n    for ($i = 0; $i < strlen($num); $i++)\
    \ {\n        if (($binaryNumber >> $i) & 1) {\n            $result++;\n      \
    \  }\n    }\n    return $result;\n}\necho hex_key(\"2020\");", "\t$primes = array(2,\
    \ 3, 5, 7, 11, 13);\n\t$count = 0;\n\t$num = str_split($num);\n\tforeach ($num\
    \ as $key => $value) {\n\t\tif (in_array(hexdec($value), $primes)) {\n\t\t\t$count++;\n\
    \t\t}\n\t}\n\treturn $count;\n}", "    $hex = array(0,1,2,3,4,5,6,7,8,9,'A','B','C','D','E','F');\n\
    \    $primes = array(2,3,5,7,11,13);\n    $arr = str_split($num);\n    $result\
    \ = 0;\n    for ($i=0; $i < count($arr); $i++) { \n        if (in_array($arr[$i],\
    \ $primes)) {\n            $result++;\n        }\n    }\n    return $result;\n\
    }\n\necho hex_key(\"1077E\");", "  // use hexdec to convert a hexadecimal string\
    \ to a decimal number.\n  $result = 0;\n  if (strlen($num) > 0) {\n    $arr =\
    \ array();\n    for ($i = 0; $i < strlen($num); $i++) {\n      if (in_array(hexdec($num[$i]),\
    \ $arr)) {\n        $result += 0;\n      } else {\n        $result += 1;\n   \
    \     array_push($arr, hexdec($num[$i]));\n      }\n    }\n  }\n  return $result;\n\
    }\n$result = hex_key(\"AB\");\necho $result;\n", "\t\n}\n\n$ans = hex_key(\"AB\"\
    );\necho $ans;", "  $result = 0;\n  $primes = ['2', '3', '5', '7', 'B', 'D'];\n\
    \  $numArr = str_split($num);\n  foreach ($numArr as $value) {\n    if (in_array($value,\
    \ $primes)) {\n      $result++;\n    }\n  }\n  return $result;\n}\n\nprint_r(hex_key(\"\
    AB\"));\nprint_r(hex_key(\"1077E\"));\nprint_r(hex_key(\"ABED1A33\"));\nprint_r(hex_key(\"\
    123456789ABCDEF0\"));\nprint_r(hex_key(\"2020\"));", "    $hex = array(\"0\",\"\
    1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"A\",\"B\",\"C\",\"D\",\"\
    E\",\"F\");\n    $primes = array(\"2\",\"3\",\"5\",\"7\",\"B\",\"D\");\n    $numarr\
    \ = str_split($num);\n    $total = 0;\n    foreach($numarr as $num){\n       \
    \ foreach($primes as $prime){\n            if($num == $prime){\n             \
    \   $total++;\n            }\n        }\n    }\n    return $total;\n}\n\necho\
    \ hex_key(\"AB\").\"\\n\";\necho hex_key(\"1077E\").\"\\n\";\necho hex_key(\"\
    ABED1A33\").\"\\n\";\necho hex_key(\"123456789ABCDEF0\").\"\\n\";\necho hex_key(\"\
    2020\").\"\\n\";", "    $arr = str_split($num);\n    $cnt = 0;\n    foreach ($arr\
    \ as $v) {\n        if ($v == 2 || $v == 3 || $v == 5 || $v == 7 || $v == 'B'\
    \ || $v == 'D') {\n            $cnt++;\n        }\n    }\n    return $cnt;\n}\n",
  "    // $test = $num;\n    // $dec = hexdec($test);\n    // $count = 0;\n    //\
    \ for ($i = 2; $i <= $dec; $i++) {\n    //     for ($j = 2; $j <= $i; $j++) {\n\
    \    //         if ($i % $j == 0) {\n    //             if ($i == $j) {\n    //\
    \                 $count++;\n    //             }\n    //             break;\n\
    \    //         }\n    //     }\n    // }\n    // return $count;\n    return strlen(str_replace([\"\
    0\", \"1\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\"], \"\", $num));\n}\n", "\t\
    $arr = str_split($num);\n\t$hex = array('0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F');\n\
    \t$digit = count($arr);\n\t$count = 0;\n\tfor ($i=0; $i < $digit; $i++) { \n\t\
    \tif (in_array($arr[$i], $hex)) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n\
    }\necho \"<pre>\";\nprint_r(hex_key(\"1077E\"));\necho \"</pre>\";", "    $prime\
    \ = array(2, 3, 5, 7, 11, 13);\n    $count = 0;\n    $arr = array();\n    for\
    \ ($i = 0; $i < strlen($num); $i++) {\n        $arr[] = $num[$i];\n    }\n   \
    \ for ($i = 0; $i < count($arr); $i++) {\n        $num = hexdec($arr[$i]);\n \
    \       if (in_array($num, $prime)) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}\n", "    $count = 0;\n    $primes = array(2, 3, 5, 7, 11,\
    \ 13);\n    $hex = array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 'A', 'B', 'C', 'D', 'E',\
    \ 'F');\n    for ($i = 0; $i < strlen($num); $i++) {\n        $currentNum = $num[$i];\n\
    \        if (in_array($currentNum, $hex)) {\n            if (in_array($currentNum,\
    \ $primes)) {\n                $count++;\n            }\n        }\n    }\n  \
    \  return $count;\n}\n", "\t// Convert a string representing a number in hexadecimal\
    \ to its \n\t// decimal equivalent (base 16).\n\t$decimal = hexdec($num);\n\t\
    // print_r($decimal);\n\t// Convert a string representing a number in decimal\
    \ to its \n\t// hexadecimal equivalent (base 16).\n\t$hexadecimal = dechex($decimal);\n\
    \t// print_r($hexadecimal);\n\t// Convert a string containing a hexadecimal value\
    \ to a string \n\t// containing a binary value\n\t$binary = decbin($decimal);\n\
    \t// print_r($binary);\n\t// Convert a string containing a binary value to a string\
    \ \n\t// containing a hexadecimal value\n\t$hexadecimal_again = dechex($binary);\n\
    \t// print_r($hexadecimal_again);\n\t// $counter = 0;\n\t// for ($i = 2; $i <\
    \ $decimal; $i++) {\n\t// \tif($decimal % $i == 0) {\n\t// \t\t$counter++;\n\t\
    // \t}\n\t// }\n\t// if($counter == 0) {\n\t// \treturn true;\n\t// }\n\t// else\
    \ {\n\t// \treturn false;\n\t// }\n\t// Converts a string containing an (IPv4)\
    \ Internet Protocol \n\t// dotted address into a proper address\n\t//print_r(ip2long($num));\n\
    \t// Converts an (IPv4) Internet network address into a string in \n\t// Internet\
    \ standard dotted format\n\t//print_r(long2ip($num));\n\t// Return the next lowest\
    \ integer value from the number \n\t// e.g. floor(4.3) == 4\n\t//print_r(floor($num));\n\
    \t// Return the next highest integer value from the number \n\t// e.g. ceil(4.3)\
    \ == 5\n\t//print_r(ceil($num));\n\t// Returns the floating point remainder (modulo)\
    \ of the division \n\t// of the arguments. The division is computed in base 2.\n\
    \t//print_r(fmod($num, $num));\n\t// Returns the arc sine of the", "  // your\
    \ code goes here\n}", "\tif($num == \"\") {\n\t\treturn 0;\n\t}\n\t$arr = range(0,\
    \ 9);\n\t$arr = array_merge($arr, range('A', 'F'));\n\t$arr[] = 2;\n\t$arr[] =\
    \ 3;\n\t$arr[] = 5;\n\t$arr[] = 7;\n\t$arr[] = 11;\n\t$arr[] = 13;\n\t$tot = 0;\n\
    \tfor($i = 0; $i < strlen($num); $i++) {\n\t\tif(in_array($num[$i], $arr)) {\n\
    \t\t\t$tot++;\n\t\t}\n\t}\n\treturn $tot;\n}", "    $primes = array(\"2\", \"\
    3\", \"5\", \"7\", \"B\", \"D\");\n    $total = 0;\n    for ($i = 0; $i < strlen($num);\
    \ $i++) {\n        for ($j = 0; $j < count($primes); $j++) {\n            if ($num[$i]\
    \ == $primes[$j]) {\n                $total += 1;\n            }\n        }\n\
    \    }\n    return $total;\n}\n", "\t$prime_arr = ['2', '3', '5', '7', 'B', 'D'];\n\
    \t$num_arr = str_split($num);\n\t$result = 0;\n\tforeach ($num_arr as $key =>\
    \ $value) {\n\t\tif (in_array($value, $prime_arr)) {\n\t\t\t$result += 1;\n\t\t\
    }\n\t}\n\treturn $result;\n}\necho hex_key(\"AB\") . \"\\n\";\necho hex_key(\"\
    1077E\") . \"\\n\";\necho hex_key(\"ABED1A33\") . \"\\n\";\necho hex_key(\"123456789ABCDEF0\"\
    ) . \"\\n\";\necho hex_key(\"2020\") . \"\\n\";\n", "  $hex_to_num = ['0' => 0,\
    \ '1' => 1, '2' => 2, '3' => 3, '4' => 4, \n                 '5' => 5, '6' =>\
    \ 6, '7' => 7, '8' => 8, '9' => 9, \n                 'A' => 10, 'B' => 11, 'C'\
    \ => 12, 'D' => 13, 'E' => 14, 'F' => 15];\n  $str = preg_split('//', $num, -1,\
    \ PREG_SPLIT_NO_EMPTY);\n  //var_dump($str);\n  $count = 0;\n  for ($i = 0; $i\
    \ < count($str); $i++) {\n    if (in_array($hex_to_num[$str[$i]], [2, 3, 5, 7,\
    \ 11, 13])) {\n      $count++;\n    }\n  }\n  return $count;\n}\n\necho hex_key(\"\
    AB\") . \"\\n\"; // 1\necho hex_key(\"1077E\") . \"\\n\"; // 2\necho hex_key(\"\
    ABED1A33\") . \"\\n\"; // 4\necho hex_key(\"123456789ABCDEF0\") . \"\\n\"; //\
    \ 6\necho hex_key(\"2020\") . \"\\n\"; // 2\n", "    $num = strtoupper($num);\n\
    \    $primes = [2, 3, 5, 7, 11, 13];\n    $count = 0;\n    for ($i = 0; $i < strlen($num);\
    \ $i++) {\n        if (in_array(hexdec($num[$i]), $primes)) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n", "  $n = 0;\n  $hex_num = ['2', '3',\
    \ '5', '7', 'B', 'D'];\n  for ($i = 0; $i < strlen($num); $i++) {\n    if (in_array($num[$i],\
    \ $hex_num)) {\n      $n++;\n    }\n  }\n  return $n;\n}\n\necho hex_key(\"123456789ABCDEF0\"\
    );\necho \"<br>\";\necho hex_key(\"AB\");\necho \"<br>\";\necho hex_key(\"1077E\"\
    );\necho \"<br>\";\necho hex_key(\"ABED1A33\");\necho \"<br>\";\necho hex_key(\"\
    2020\");\necho \"<br>\";\n", "    $primes = array(2, 3, 5, 7, 11, 13);\n    $result\
    \ = 0;\n    $num = str_split($num);\n    $hex = array_map('hexdec', $num);\n \
    \   foreach ($hex as $i) {\n        if (in_array($i, $primes)) {\n           \
    \ $result++;\n        }\n    }\n    return $result;\n}\n\necho hex_key(\"ABED1A33\"\
    ) . \"\\n\";\n", "    $prime = [2, 3, 5, 7, 11, 13];\n    $prime = array_flip($prime);\n\
    \    $array = str_split($num);\n    $result = 0;\n    foreach ($array as $value)\
    \ {\n        if (isset($prime[base_convert($value, 16, 10)])) {\n            $result++;\n\
    \        }\n    }\n    return $result;\n}\n\necho hex_key(\"AB\");\necho \"<br>\"\
    ;\necho hex_key(\"1077E\");\necho \"<br>\";\necho hex_key(\"ABED1A33\");\necho\
    \ \"<br>\";\necho hex_key(\"123456789ABCDEF0\");\necho \"<br>\";\necho hex_key(\"\
    2020\");\necho \"<br>\";\n", "\t$hex = [0,1,2,3,4,5,6,7,8,9,\"A\",\"B\",\"C\"\
    ,\"D\",\"E\",\"F\"];\n\t$primes = [2,3,5,7,11,13];\n\t$nums = str_split($num);\n\
    \t$count = 0;\n\tforeach ($nums as $num) {\n\t\tif (in_array($num, $primes)) {\n\
    \t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\necho hex_key(\"AB\");", "\t\
    $vars = array('A' => '10', 'B' => '11', 'C' => '12', 'D' => '13', 'E' => '14',\
    \ 'F' => '15');\n\t$sum = 0;\n\tfor ($i = 0; $i < strlen($num); $i++) {\n\t\t\
    if (isset($vars[$num[$i]])) {\n\t\t\t$sum += in_array($vars[$num[$i]], array(2,\
    \ 3, 5, 7, 11, 13)) ? 1 : 0;\n\t\t} else {\n\t\t\t$sum += in_array($num[$i], array(2,\
    \ 3, 5, 7, 11, 13)) ? 1 : 0;\n\t\t}\n\t}\n\treturn $sum;\n}\necho hex_key(\"AB\"\
    ) . \"\\n\";\necho hex_key(\"1077E\") . \"\\n\";\necho hex_key(\"ABED1A33\") .\
    \ \"\\n\";\necho hex_key(\"123456789ABCDEF0\") . \"\\n\";\necho hex_key(\"2020\"\
    ) . \"\\n\";", "    $ans = 0;\n    $prime = ['2', '3', '5', '7', 'B', 'D'];\n\
    \    $l = strlen($num);\n    for ($i = 0; $i < $l; $i++) {\n        if (in_array($num[$i],\
    \ $prime)) {\n            $ans++;\n        }\n    }\n    return $ans;\n}\n", "\t\
    $num_arr = str_split($num);\n\t$prime_hex = [\"2\", \"3\", \"5\", \"7\", \"B\"\
    , \"D\"];\n\t$ctr = 0;\n\t\n\tforeach ($num_arr as $value) {\n\t\tif (in_array($value,\
    \ $prime_hex)) {\n\t\t\t$ctr++;\n\t\t}\n\t}\n\t\n\treturn $ctr;\n}\n\necho hex_key(\"\
    1077E\") . \"<br />\";\necho hex_key(\"ABED1A33\") . \"<br />\";\necho hex_key(\"\
    123456789ABCDEF0\") . \"<br />\";\necho hex_key(\"2020\") . \"<br />\";", "  \
    \  $prime = [2, 3, 5, 7, 11, 13];\n    $result = 0;\n    $len = strlen($num);\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if (in_array(hexdec($num[$i]), $prime))\
    \ {\n            $result++;\n        }\n    }\n    return $result;\n}\n\n$num\
    \ = \"1A2B3C\";\n$res = hex_key($num);\necho $res;", "  $result = 0;\n  $hex =\
    \ ['A', 'B', 'D'];\n  for ($i = 0; $i < strlen($num); $i++) {\n    if (in_array($num[$i],\
    \ $hex) || $num[$i] == '2' || $num[$i] == '3' || $num[$i] == '5' || $num[$i] ==\
    \ '7') {\n      $result++;\n    }\n  }\n  return $result;\n}\n\necho hex_key(\"\
    AB\") . PHP_EOL;\necho hex_key(\"1077E\") . PHP_EOL;\necho hex_key(\"ABED1A33\"\
    ) . PHP_EOL;\necho hex_key(\"123456789ABCDEF0\") . PHP_EOL;\necho hex_key(\"2020\"\
    ) . PHP_EOL;", "\t$primes = ['2', '3', '5', '7', 'B', 'D'];\n\t$arr = str_split($num);\n\
    \t$num_primes = 0;\n\tforeach ($arr as $key => $value) {\n\t\tif (in_array($value,\
    \ $primes)) {\n\t\t\t$num_primes++;\n\t\t}\n\t}\n\treturn $num_primes;\n}\necho\
    \ hex_key(\"ABED1A33\");", "    $map = array(2, 3, 5, 7, 11, 13);\n    $num =\
    \ str_split(strtoupper($num));\n    $keys = array_keys($map);\n    $count = 0;\n\
    \    foreach ($num as $value) {\n        if (in_array($value, $keys) || in_array($value,\
    \ $map)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n\
    echo hex_key(\"2020\");\n", "\t$arr = ['2','3','5','7','B','D'];\n\t$count = 0;\n\
    \t$str = str_split($num);\n\tfor ($i=0; $i < count($str); $i++) { \n\t\tif (in_array($str[$i],\
    \ $arr)) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n\necho hex_key(\"\
    AB\") . \"<br>\";\necho hex_key(\"1077E\") . \"<br>\";\necho hex_key(\"ABED1A33\"\
    ) . \"<br>\";\necho hex_key(\"123456789ABCDEF0\") . \"<br>\";\necho hex_key(\"\
    2020\") . \"<br>\";", "    $numArr = str_split($num);\n    $count = 0;\n    foreach\
    \ ($numArr as $key => $value) {\n        if ($value == '2' || $value == '3' ||\
    \ $value == '5' || $value == '7' || $value == 'B' || $value == 'D') {\n      \
    \      $count++;\n        }\n    }\n    return $count;\n}\necho hex_key(\"AB\"\
    );\necho \"<br>\";\necho hex_key(\"1077E\");\necho \"<br>\";\necho hex_key(\"\
    ABED1A33\");\necho \"<br>\";\necho hex_key(\"123456789ABCDEF0\");\necho \"<br>\"\
    ;\necho hex_key(\"2020\");", "\t$hex = ['A' => 10, 'B' => 11, 'C' => 12, 'D' =>\
    \ 13, 'E' => 14, 'F' => 15];\n\t$counter = 0;\n\tforeach (str_split($num) as $value)\
    \ {\n\t\tif (is_numeric($value)) {\n\t\t\tif (is_prime((int)$value)) {\n\t\t\t\
    \t$counter++;\n\t\t\t}\n\t\t} else {\n\t\t\tif (is_prime($hex[$value])) {\n\t\t\
    \t\t$counter++;\n\t\t\t}\n\t\t}\n\t}\n\treturn $counter;\n}", "    $result = 0;\n\
    \    $hexadecimal = [\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n\
    \        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n\
    \        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    ];\n    for ($i = 0; $i < strlen($num); $i++) {\n    \
    \    if (in_array($hexadecimal[$num[$i]], [2, 3, 5, 7, 11, 13])) {\n         \
    \   $result++;\n        }\n    }\n    return $result;\n}\n\necho hex_key(\"AB\"\
    );\necho hex_key(\"1077E\");\necho hex_key(\"ABED1A33\");\necho hex_key(\"123456789ABCDEF0\"\
    );\necho hex_key(\"2020\");", "\t$primeDigits = array(2, 3, 5, 7, 11, 13);\n\t\
    $hexDigits = array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15);\n\t\
    $len = strlen($num);\n\t$count = 0;\n\tfor ($i = 0; $i < $len; $i++) {\n\t\t$char\
    \ = $num[$i];\n\t\t$index = array_search($char, $hexDigits);\n\t\tif (in_array($index,\
    \ $primeDigits)) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n", "  $primes\
    \ = [\n    '2' => true,\n    '3' => true,\n    '5' => true,\n    '7' => true,\n\
    \    'B' => true,\n    'D' => true,\n  ];\n  $count = 0;\n  $arr = str_split($num);\n\
    \  foreach ($arr as $value) {\n    if (array_key_exists($value, $primes)) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\necho hex_key(\"AB\");\necho\
    \ hex_key(\"1077E\");\necho hex_key(\"ABED1A33\");\necho hex_key(\"123456789ABCDEF0\"\
    );\necho hex_key(\"2020\");", "  $primes = [2, 3, 5, 7, 11, 13];\n  $primeCount\
    \ = 0;\n  $num = str_split($num);\n  $num = array_map(function($item) {\n    return\
    \ hexdec($item);\n  }, $num);\n  foreach ($num as $digit) {\n    if (in_array($digit,\
    \ $primes)) {\n      $primeCount++;\n    }\n  }\n  return $primeCount;\n}\necho\
    \ hex_key(\"AB\") . \"\\n\";\necho hex_key(\"1077E\") . \"\\n\";\necho hex_key(\"\
    ABED1A33\") . \"\\n\";\necho hex_key(\"123456789ABCDEF0\") . \"\\n\";\necho hex_key(\"\
    2020\") . \"\\n\";", "  $hex = array('1','2','3','4','5','6','7','8','9','A','B','C','D','E','F');\n\
    \  $primes = array('2','3','5','7','B','D');\n  $hexPrime = array_intersect($hex,\
    \ $primes);\n  return substr_count($num, implode('', $hexPrime));\n}\n\necho \"\
    <pre>\";\necho hex_key(\"AB\"); // 1\necho hex_key(\"1077E\"); // 2\necho hex_key(\"\
    ABED1A33\"); // 4\necho hex_key(\"123456789ABCDEF0\"); // 6\necho hex_key(\"2020\"\
    ); // 2\necho \"</pre>\";\n", "\t$primes = [2, 3, 5, 7, 11, 13];\n\t$count = 0;\n\
    \t$num = str_split($num);\n\tforeach ($num as $number) {\n\t\tif (in_array($number,\
    \ $primes)) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n\nprint_r(hex_key(\"\
    1077E\"));\nprint_r(hex_key(\"2020\"));", "\t$primes = array(2, 3, 5, 7, 11, 13);\n\
    \t$dec = hexdec($num);\n\t$primesInHex = 0;\n\twhile ($dec > 0) {\n\t\t$lastDigit\
    \ = $dec % 10;\n\t\tif (in_array($lastDigit, $primes)) {\n\t\t\t$primesInHex++;\n\
    \t\t}\n\t\t$dec = floor($dec / 10);\n\t}\n\treturn $primesInHex;\n}\n\necho hex_key(\"\
    AB\") . \"<br>\";\necho hex_key(\"1077E\") . \"<br>\";\necho hex_key(\"ABED1A33\"\
    ) . \"<br>\";\necho hex_key(\"123456789ABCDEF0\") . \"<br>\";\necho hex_key(\"\
    2020\") . \"<br>\";", "\t$res = 0;\n\tif ($num == '') {\n\t\treturn $res;\n\t\
    }\n\t$digits = str_split($num);\n\tforeach ($digits as $digit) {\n\t\tif (is_prime(hexdec($digit)))\
    \ {\n\t\t\t$res++;\n\t\t}\n\t}\n\treturn $res;\n}\n", "    $counter = 0;\n   \
    \ $chars = str_split($num);\n    foreach ($chars as $char) {\n        if ($char\
    \ == \"A\" || $char == \"B\" || $char == \"D\") {\n            $counter++;\n \
    \       }\n        if ($char == \"2\" || $char == \"3\" || $char == \"5\" || $char\
    \ == \"7\") {\n            $counter++;\n        }\n    }\n    return $counter;\n\
    }\n\nprint_r(hex_key(\"AB\"));", "    $counter = 0;\n    $hexadecimals = ['A',\
    \ 'B', 'C', 'D', 'E', 'F'];\n    $hexadecimals = array_map(function($char) {\n\
    \        return hexdec($char);\n    }, $hexadecimals);\n    foreach (str_split($num)\
    \ as $char) {\n        if (in_array($char, ['2', '3', '5', '7'])) {\n        \
    \    $counter++;\n        } elseif (in_array(hexdec($char), $hexadecimals)) {\n\
    \            $counter++;\n        }\n    }\n    return $counter;\n}\n", "  //\
    \ check empty string\n  if (strlen($num) == 0) {\n    return 0;\n  }\n  // count\
    \ the number of hexadecimal digits that are primes\n  $i = 0;\n  for ($j = 0;\
    \ $j < strlen($num); $j++) {\n    $singleNum = substr($num, $j, 1);\n    if ($singleNum\
    \ == '2' || $singleNum == '3' || $singleNum == '5' || $singleNum == '7' || $singleNum\
    \ == 'B' || $singleNum == 'D') {\n      $i++;\n    }\n  }\n  return $i;\n}\necho\
    \ hex_key(\"AB\");\necho \"\\n\";\necho hex_key(\"1077E\");\necho \"\\n\";\necho\
    \ hex_key(\"ABED1A33\");\necho \"\\n\";\necho hex_key(\"123456789ABCDEF0\");\n\
    echo \"\\n\";\necho hex_key(\"2020\");\necho \"\\n\";", "  $count = 0;\n  for\
    \ ($i = 0; $i < strlen($num); $i++) {\n    if (isPrime(hexdec($num[$i]))) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n", "    $hexadecimal = ['A',\
    \ 'B', 'C', 'D', 'E', 'F'];\n    $key = 0;\n    $len = strlen($num);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        $hex = strtoupper($num[$i]);\n        if\
    \ (in_array($hex, $hexadecimal)) {\n            if ($hex == 'A' || $hex == 'B'\
    \ || $hex == 'D') {\n                $key++;\n            }\n        } else {\n\
    \            if ($hex > 1 && $hex != 4 && $hex != 6 && $hex != 8 && $hex != 9)\
    \ {\n                $key++;\n            }\n        }\n    }\n    return $key;\n\
    }\necho hex_key(\"AB\") . \"\\n\"; // 1\necho hex_key(\"1077E\") . \"\\n\"; //\
    \ 2\necho hex_key(\"ABED1A33\") . \"\\n\"; // 4\necho hex_key(\"123456789ABCDEF0\"\
    ) . \"\\n\"; // 6\necho hex_key(\"2020\") . \"\\n\"; // 2", "\t$arr = str_split($num);\n\
    \t$count = 0;\n\t$hex = [0,1,2,3,4,5,6,7,8,9,'A','B','C','D','E','F'];\n\t$primes\
    \ = [2,3,5,7,11,13];\n\tforeach ($arr as $key => $value) {\n\t\tif (in_array($value,\
    \ $primes)) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\necho hex_key(\"\
    AB\") . PHP_EOL;\necho hex_key(\"1077E\") . PHP_EOL;\necho hex_key(\"ABED1A33\"\
    ) . PHP_EOL;\necho hex_key(\"123456789ABCDEF0\") . PHP_EOL;\necho hex_key(\"2020\"\
    ) . PHP_EOL;", "  $sum = 0;\n  $arr = [2, 3, 5, 7, 11, 13];\n  $num = str_split($num);\n\
    \  foreach ($num as $key => $value) {\n    if (in_array(hexdec($value), $arr))\
    \ {\n      $sum += 1;\n    }\n  }\n  return $sum;\n}\nprint_r(hex_key(\"AB\"));\n\
    echo \"</br>\";\nprint_r(hex_key(\"1077E\"));\necho \"</br>\";\nprint_r(hex_key(\"\
    ABED1A33\"));\necho \"</br>\";\nprint_r(hex_key(\"123456789ABCDEF0\"));\necho\
    \ \"</br>\";\nprint_r(hex_key(\"2020\"));\necho \"</br>\";", "    $hex_digits\
    \ = array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 'A', 'B', 'C', 'D', 'E', 'F');\n    $hex_primes\
    \ = array(2, 3, 5, 7, 11, 13);\n    $count = 0;\n    for ($i = 0; $i < strlen($num);\
    \ $i++) {\n        if (in_array($num[$i], $hex_primes)) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}", "\t$digit_array = str_split($num);\n\
    \t$prime_array = array(2, 3, 5, 7, 11, 13);\n\t$prime_key = 0;\n\tfor ($i = 0;\
    \ $i < count($digit_array); $i++) {\n\t\tif (in_array($digit_array[$i], $prime_array))\
    \ {\n\t\t\t$prime_key++;\n\t\t}\n\t}\n\techo $prime_key;\n}", "    $hex_key =\
    \ 'A,B,C,D,E,F';\n    $hex_array = explode(',', $hex_key);\n    $hex_array[] =\
    \ '0';\n    $hex_array[] = '1';\n    $hex_array[] = '2';\n    $hex_array[] = '3';\n\
    \    $hex_array[] = '4';\n    $hex_array[] = '5';\n    $hex_array[] = '6';\n \
    \   $hex_array[] = '7';\n    $hex_array[] = '8';\n    $hex_array[] = '9';\n  \
    \  $counter = 0;\n    $num = str_split($num);\n    foreach ($num as $value) {\n\
    \        if (in_array($value, $hex_array)) {\n            $counter++;\n      \
    \  }\n    }\n    return $counter;\n}\necho hex_key(\"1077E\") . \"\\n\";", " \
    \   $hexa = ['A' => 10, 'B' => 11, 'C' => 12, 'D' => 13, 'E' => 14, 'F' => 15];\n\
    \    $prime = 0;\n    $arr = str_split($num);\n    $total = 0;\n    foreach ($arr\
    \ as $value) {\n        if (is_numeric($value)) {\n            $total += $value;\n\
    \        } else {\n            $total += $hexa[$value];\n        }\n    }\n  \
    \  for ($i = 2; $i <= $total; $i++) {\n        if ($total % $i == 0) {\n     \
    \       $prime++;\n        }\n    }\n    if ($prime == 1) {\n        return 1;\n\
    \    } else {\n        return 0;\n    }\n}\n", "  $hexArr = str_split($num);\n\
    \  $primes = [2, 3, 5, 7, 11, 13];\n  $counter = 0;\n  foreach ($hexArr as $key\
    \ => $digit) {\n    if (in_array($digit, $primes)) {\n      $counter += 1;\n \
    \   }\n  }\n  return $counter;\n}\necho hex_key(\"AB\") . \"\\n\";\necho hex_key(\"\
    1077E\") . \"\\n\";\necho hex_key(\"ABED1A33\") . \"\\n\";\necho hex_key(\"123456789ABCDEF0\"\
    ) . \"\\n\";\necho hex_key(\"2020\") . \"\\n\";", "    $prime = [2, 3, 5, 7, 11,\
    \ 13];\n    $hex = ['A', 'B', 'C', 'D', 'E', 'F'];\n    $res = 0;\n    for ($i\
    \ = 0; $i < strlen($num); $i++) {\n        if (in_array($num[$i], $hex)) {\n \
    \           $idx = array_search($num[$i], $hex);\n            if (in_array($prime[$idx],\
    \ $prime)) {\n                $res++;\n            }\n        }\n    }\n    return\
    \ $res;\n}", "  $hex = [2, 3, 5, 7, 11, 13];\n  $length = strlen($num);\n  $count\
    \ = 0;\n  for ($i = 0; $i < $length; $i++) {\n    $char = $num[$i];\n    if (in_array($char,\
    \ $hex)) {\n      $count++;\n    }\n  }\n  return $count;\n}\n", "    $primes\
    \ = array(1,2,3,5,7,11,13);\n    $count = 0;\n    for ($i=0; $i < strlen($num);\
    \ $i++) { \n        $current = strtoupper($num[$i]);\n        if (in_array($current,\
    \ array(\"A\",\"B\",\"C\",\"D\",\"E\",\"F\"))) {\n            $count += in_array(hexdec($current),\
    \ $primes);\n        } else {\n            $count += in_array(intval($current),\
    \ $primes);\n        }\n    }\n    return $count;\n}\n\n$test1 = \"AB\";\n$test2\
    \ = \"1077E\";\n$test3 = \"ABED1A33\";\n$test4 = \"123456789ABCDEF0\";\n$test5\
    \ = \"2020\";\n$test6 = \"\";\n\necho hex_key($test1) . PHP_EOL;\necho hex_key($test2)\
    \ . PHP_EOL;\necho hex_key($test3) . PHP_EOL;\necho hex_key($test4) . PHP_EOL;\n\
    echo hex_key($test5) . PHP_EOL;\necho hex_key($test6) . PHP_EOL;", "    if (empty($num))\
    \ return 0;\n    $arr = [\"2\",\"3\",\"5\",\"7\",\"B\",\"D\"];\n    $sum = 0;\n\
    \    for ($i=0; $i < strlen($num); $i++) { \n        if (in_array($num[$i], $arr))\
    \ {\n            $sum++;\n        }\n    }\n    return $sum;\n}\necho hex_key(\"\
    AB\") . \"<br>\";\necho hex_key(\"1077E\") . \"<br>\";\necho hex_key(\"ABED1A33\"\
    ) . \"<br>\";\necho hex_key(\"123456789ABCDEF0\") . \"<br>\";\necho hex_key(\"\
    2020\") . \"<br>\";", "    $primeNumbers = ['2', '3', '5', '7', 'B', 'D'];\n \
    \   $counter = 0;\n    for ($i = 0; $i < strlen($num); $i++) {\n        for ($j\
    \ = 0; $j < count($primeNumbers); $j++) {\n            if ($num[$i] == $primeNumbers[$j])\
    \ {\n                $counter++;\n            }\n        }\n    }\n    return\
    \ $counter;\n}\necho hex_key(\"AB\") . \"\\n\";\necho hex_key(\"1077E\") . \"\\\
    n\";\necho hex_key(\"ABED1A33\") . \"\\n\";\necho hex_key(\"123456789ABCDEF0\"\
    ) . \"\\n\";\necho hex_key(\"2020\") . \"\\n\";", "    $hex = ['A' => 10, 'B'\
    \ => 11, 'C' => 12, 'D' => 13, 'E' => 14, 'F' => 15];\n    $primes = ['2', '3',\
    \ '5', '7', 'B', 'D'];\n    $counter = 0;\n    for ($i = 0; $i < strlen($num);\
    \ $i++) {\n        $char = substr($num, $i, 1);\n        if (in_array($char, $primes))\
    \ $counter++;\n        if (isset($hex[$char])) {\n            if (in_array($hex[$char],\
    \ $primes)) $counter++;\n        }\n    }\n    return $counter;\n}\necho hex_key(\"\
    AB\") . \"\\n\";\necho hex_key(\"1077E\") . \"\\n\";\necho hex_key(\"ABED1A33\"\
    ) . \"\\n\";\necho hex_key(\"123456789ABCDEF0\") . \"\\n\";\necho hex_key(\"2020\"\
    ) . \"\\n\";", "    $count = 0;\n    for ($i = 0; $i < strlen($num); $i++) {\n\
    \        $char = substr($num, $i, 1);\n        if ($char === '2' || $char ===\
    \ '3' || $char === '5' || $char === '7' || $char === 'B' || $char === 'D') {\n\
    \            $count++;\n        }\n    }\n    return $count;\n}\necho hex_key(\"\
    AB\");", "  $prime = 0;\n  for ($i = 0; $i < strlen($num); $i++) {\n    if ($num[$i]\
    \ == \"2\" || $num[$i] == \"3\" || $num[$i] == \"5\" || \n        $num[$i] ==\
    \ \"7\" || $num[$i] == \"B\" || $num[$i] == \"D\") {\n      $prime++;\n    }\n\
    \  }\n  return $prime;\n}", "    // check if the input is numeric\n    if (is_numeric($num))\
    \ {\n        // convert it to a number and then to a string\n        $num = strval(intval($num));\n\
    \    }\n    // define the hexadecimal digits array\n    $hex = ['0', '1', '2',\
    \ '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'];\n    // define\
    \ the number of primes array\n    $prime = [0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1,\
    \ 0, 1, 0, 0];\n    // define the count of primes\n    $count = 0;\n    // loop\
    \ through the string\n    for ($i = 0; $i < strlen($num); $i++) {\n        //\
    \ determine the index of the character in the array\n        $iKey = array_search($num[$i],\
    \ $hex);\n        // add the number of primes at that index to the count\n   \
    \     $count += $prime[$iKey];\n    }\n    // return the count\n    return $count;\n\
    }\necho hex_key(\"1077E\");", "    $arr = ['A' => 10, 'B' => 11, 'C' => 12, 'D'\
    \ => 13, 'E' => 14, 'F' => 15];\n    $new_num = '';\n    for ($i = 0; $i < strlen($num);\
    \ $i++) {\n        if (isset($arr[$num[$i]])) {\n            $new_num .= $arr[$num[$i]];\n\
    \        } else {\n            $new_num .= $num[$i];\n        }\n    }\n    $new_num\
    \ = (int)$new_num;\n    $cnt = 0;\n    $arr = [2, 3, 5, 7, 11, 13];\n    for ($i\
    \ = 0; $i < strlen($new_num); $i++) {\n        if (in_array($new_num[$i], $arr))\
    \ {\n            $cnt++;\n        }\n    }\n    return $cnt;\n}\necho hex_key(\"\
    AB\") . PHP_EOL;\necho hex_key(\"1077E\") . PHP_EOL;\necho hex_key(\"ABED1A33\"\
    ) . PHP_EOL;\necho hex_key(\"123456789ABCDEF0\") . PHP_EOL;\necho hex_key(\"2020\"\
    ) . PHP_EOL;", "    $primes = [\"2\", \"3\", \"5\", \"7\", \"B\", \"D\"];\n  \
    \  $count = 0;\n    for ($i = 0; $i < strlen($num); $i++) {\n        if (in_array($num[$i],\
    \ $primes)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    echo hex_key(\"1077E\");", "    \n}", "\t$primes = [11, 13, 5, 7, 2, 3];\n\t$count\
    \ = 0;\n\t$num = str_split($num);\n\tfor ($i=0; $i < count($num); $i++) { \n\t\
    \tif (in_array(ord($num[$i]), $primes)) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn\
    \ $count;\n}\necho hex_key(\"AB\") . \"\\n\";\necho hex_key(\"1077E\") . \"\\\
    n\";\necho hex_key(\"ABED1A33\") . \"\\n\";\necho hex_key(\"123456789ABCDEF0\"\
    ) . \"\\n\";\necho hex_key(\"2020\") . \"\\n\";", "    $num_dec = hexdec($num);\n\
    \    $arr_prime = array();\n    for ($i = 1; $i <= $num_dec; $i++) {\n       \
    \ if (is_prime($i)) {\n            $arr_prime[] = $i;\n        }\n    }\n    $count\
    \ = 0;\n    foreach ($arr_prime as $value) {\n        if ($value > 9) {\n    \
    \        $value = strtoupper(dechex($value));\n        }\n        if (strpos($num,\
    \ $value) !== false) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n", "    $hex_value = array(\n        \"0\" => 0,\n        \"1\" => 1,\n   \
    \     \"2\" => 2,\n        \"3\" => 3,\n        \"4\" => 4,\n        \"5\" =>\
    \ 5,\n        \"6\" => 6,\n        \"7\" => 7,\n        \"8\" => 8,\n        \"\
    9\" => 9,\n        \"A\" => 10,\n        \"B\" => 11,\n        \"C\" => 12,\n\
    \        \"D\" => 13,\n        \"E\" => 14,\n        \"F\" => 15,\n    );\n  \
    \  $num = strtoupper($num);\n    $count = 0;\n    for ($i = 0; $i < strlen($num);\
    \ $i++) {\n        if (in_array($hex_value[$num[$i]], array(2, 3, 5, 7, 11, 13)))\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}\n\necho hex_key(\"\
    AB\");\necho hex_key(\"1077E\");\necho hex_key(\"ABED1A33\");\necho hex_key(\"\
    123456789ABCDEF0\");\necho hex_key(\"2020\");", "\t$primes = [2, 3, 5, 7, 11,\
    \ 13];\n\t$hex = str_split(strtoupper($num));\n\t$hex = array_map(function($i)\
    \ {\n\t\tif (ctype_digit($i)) return $i;\n\t\treturn ord($i) - 55;\n\t}, $hex);\n\
    \treturn count(array_intersect($hex, $primes));\n}\n\n$tests = [\n\t'AB' => 1,\n\
    \t'1077E' => 2,\n\t'ABED1A33' => 4,\n\t'123456789ABCDEF0' => 6,\n\t'2020' => 2,\n\
    ];\n\nforeach ($tests as $test => $expected) {\n\techo $test, ' => ', (hex_key($test)\
    \ === $expected ? 'OK' : 'FAIL'), \"\\n\";\n}", "\t// set hexidecimal key\n\t\
    $key = array(\"A\" => 11, \"B\" => 12, \"C\" => 13, \"D\" => 14, \"E\" => 15,\
    \ \"F\" => 16);\n\t$arr_num = str_split($num);\n\t$count = 0;\n\tforeach ($arr_num\
    \ as $value) {\n\t\tif ($value == \"2\" || $value == \"3\" || $value == \"5\"\
    \ || $value == \"7\" || $value == \"B\" || $value == \"D\") {\n\t\t\t$count++;\n\
    \t\t}\n\t}\n\treturn $count;\n}\n\necho hex_key(\"AB\") . PHP_EOL;\necho hex_key(\"\
    1077E\") . PHP_EOL;\necho hex_key(\"ABED1A33\") . PHP_EOL;\necho hex_key(\"123456789ABCDEF0\"\
    ) . PHP_EOL;\necho hex_key(\"2020\") . PHP_EOL;\n", "    $primes = [2, 3, 5, 7,\
    \ 11, 13];\n    $count = 0;\n    $num = str_split($num);\n    $hexKey = array_flip(['A'\
    \ => 10, 'B' => 11, 'C' => 12, 'D' => 13, 'E' => 14, 'F' => 15]);\n    foreach\
    \ ($num as $digit) {\n        if (isset($hexKey[$digit])) {\n            $digit\
    \ = $hexKey[$digit];\n        }\n        if (in_array($digit, $primes)) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}", "  $primes = [2,\
    \ 3, 5, 7, 11, 13];\n  $cnt = 0;\n  foreach(str_split($num) as $val) {\n    if(in_array(hexdec($val),\
    \ $primes)) {\n      $cnt++;\n    }\n  }\n  return $cnt;\n}", "    $number = ['0',\
    \ '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'];\n\
    \    $result = 0;\n    $check = str_split($num);\n    foreach ($check as $value)\
    \ {\n        if(in_array($value, $number)) {\n            if(in_array($value,\
    \ ['2', '3', '5', '7', 'B', 'D'])) {\n                $result++;\n           \
    \ }\n        }\n    }\n    return $result;\n}\n", "\t$hex = str_split($num);\n\
    \t$primehex = array(\"2\", \"3\", \"5\", \"7\", \"B\", \"D\");\n\t$count = 0;\n\
    \tforeach ($hex as $value) {\n\t\tif (in_array($value, $primehex)) {\n\t\t\t$count++;\n\
    \t\t}\n\t}\n\treturn $count;\n}\necho hex_key(\"AB\");\necho \"\\n\";\necho hex_key(\"\
    1077E\");\necho \"\\n\";\necho hex_key(\"ABED1A33\");\necho \"\\n\";\necho hex_key(\"\
    123456789ABCDEF0\");\necho \"\\n\";\necho hex_key(\"2020\");", "  $sum = 0;\n\
    \  if ($num == \"\") {\n    return 0;\n  }\n  $nums = str_split($num);\n  for\
    \ ($i = 0; $i < count($nums); $i++) {\n    $value = (string) $nums[$i];\n    if\
    \ (isPrime(intval($value, 16))) {\n      $sum += 1;\n    }\n  }\n  return $sum;\n\
    }", "  $is_prime = function($num) {\n    for ($i = 2; $i < $num; $i++) {\n   \
    \   if ($num % $i == 0) {\n        return FALSE;\n      }\n    }\n    return TRUE;\n\
    \  };\n  $primes = array();\n  $len = strlen($num);\n  for ($i = 0; $i < $len;\
    \ $i++) {\n    $digit = strtoupper($num[$i]);\n    if ($digit != 'A' && $digit\
    \ != 'B' && $digit != 'C' && $digit != 'D' && $digit != 'E' && $digit != 'F')\
    \ {\n      if ($is_prime($digit)) {\n        $primes[] = $digit;\n      }\n  \
    \  } else {\n      if ($is_prime(hexdec($digit))) {\n        $primes[] = $digit;\n\
    \      }\n    }\n  }\n  return count($primes);\n}\necho hex_key(\"AB\") . \"\\\
    n\";\necho hex_key(\"1077E\") . \"\\n\";\necho hex_key(\"ABED1A33\") . \"\\n\"\
    ;\necho hex_key(\"123456789ABCDEF0\") . \"\\n\";\necho hex_key(\"2020\") . \"\\\
    n\";", "    $primes = [11, 13, 2, 3, 5, 7];\n    $numArr = str_split($num);\n\
    \    $result = 0;\n    foreach ($numArr as $n) {\n        if (in_array(intval($n,\
    \ 16), $primes)) {\n            $result += 1;\n        }\n    }\n    return $result;\n\
    }", "    $keyArray = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\",\
    \ \"8\", \"9\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\"];\n    $hexNumber = str_split($num);\n\
    \    $count = 0;\n    for ($i = 0; $i < count($hexNumber); $i++) {\n        for\
    \ ($j = 0; $j < count($keyArray); $j++) {\n            if ($hexNumber[$i] == $keyArray[$j])\
    \ {\n                if ($keyArray[$j] == \"2\" || $keyArray[$j] == \"3\" || $keyArray[$j]\
    \ == \"5\" || $keyArray[$j] == \"7\" || $keyArray[$j] == \"B\" || $keyArray[$j]\
    \ == \"D\") {\n                    $count++;\n                }\n            }\n\
    \        }\n    }\n    return $count;\n}", "    $p = [\"2\",\"3\",\"5\",\"7\"\
    ,\"B\",\"D\"];\n    $ans = 0;\n    for ($i=0; $i < strlen($num); $i++) { \n  \
    \      if (in_array($num[$i], $p)) {\n            $ans++;\n        }\n    }\n\
    \    return $ans;\n}\n\nprint_r(hex_key(\"123456789ABCDEF0\"));", "    $hexa =\
    \ str_split($num);\n    $output = 0;\n    foreach ($hexa as $i => $val) {\n  \
    \      if ($val % 2 != 0 && $val % 3 != 0 && $val % 5 != 0 && $val % 7 != 0) {\n\
    \            $output++;\n        }\n    }\n    return $output;\n}", "\t$numbers\
    \ = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16];\n\t$letters = ['A','B','C','D','E','F'];\n\
    \t$hex = [];\n\t$primeCount = 0;\n\t$hexDigits = str_split($num);\n\tfor ($i=0;\
    \ $i < count($hexDigits); $i++) { \n\t\tif (in_array($hexDigits[$i], $letters))\
    \ {\n\t\t\tarray_push($hex, array_search($hexDigits[$i], $letters)+10);\n\t\t\
    } else {\n\t\t\tarray_push($hex, $hexDigits[$i]);\n\t\t}\n\t}\n\tfor ($i=0; $i\
    \ < count($hex); $i++) { \n\t\tif ($hex[$i] === 1) {\n\t\t\tcontinue;\n\t\t} elseif\
    \ ($hex[$i] === 2) {\n\t\t\t$primeCount++;\n\t\t} elseif ($hex[$i] === 3) {\n\t\
    \t\t$primeCount++;\n\t\t} elseif ($hex[$i] === 5) {\n\t\t\t$primeCount++;\n\t\t\
    } elseif ($hex[$i] === 7) {\n\t\t\t$primeCount++;\n\t\t} elseif ($hex[$i] ===\
    \ 11) {\n\t\t\t$primeCount++;\n\t\t} elseif ($hex[$i] === 13) {\n\t\t\t$primeCount++;\n\
    \t\t} else {\n\t\t\tcontinue;\n\t\t}\n\t}\n\treturn $primeCount;\n}\necho hex_key(\"\
    2C9B\").PHP_EOL;\necho hex_key(\"A\").PHP_EOL;\necho hex_key(\"1077E\").PHP_EOL;\n\
    echo hex_key(\"ABED1A33\").PHP_EOL;\necho hex_key(\"123456789ABCDEF0\").PHP_EOL;\n\
    echo hex_key(\"2020\").PHP_EOL;\necho hex_key(\"\").PHP_EOL;", "    $hexArr =\
    \ ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E',\
    \ 'F'];\n    $primeArr = [2, 3, 5, 7, 11, 13];\n    $tempStr = $num;\n    $ans\
    \ = 0;\n    for ($i = 0; $i < 6; $i++) {\n        $temp = $primeArr[$i];\n   \
    \     $tempHex = '';\n        while ($temp > 0) {\n            $tempHex = $hexArr[$temp\
    \ % 16] . $tempHex;\n            $temp = (int)($temp / 16);\n        }\n     \
    \   $tempStr = str_replace($tempHex, '*', $tempStr);\n    }\n    $ans = strlen($tempStr)\
    \ - substr_count($tempStr, '*');\n    return $ans;\n}\n\nvar_dump(hex_key(\"AB\"\
    ));\nvar_dump(hex_key(\"1077E\"));\nvar_dump(hex_key(\"ABED1A33\"));\nvar_dump(hex_key(\"\
    123456789ABCDEF0\"));\nvar_dump(hex_key(\"2020\"));", "    // Only digit 0-9 and\
    \ A-F\n    $num = strtoupper($num);\n    $num = preg_replace('/[^0-9A-F]/', '',\
    \ $num);\n    if (!$num) {\n        return 0;\n    }\n    $num = hexdec($num);\n\
    \    $sum = 0;\n    for ($i = 2; $i <= $num; $i++) {\n        if (isPrime($i))\
    \ {\n            $sum++;\n        }\n    }\n    return $sum;\n}\n", "\tif (strlen($num)\
    \ == 0) {\n\t\treturn 0;\n\t}\n\t$primes = [2, 3, 5, 7, 11, 13];\n\t$hexNumbers\
    \ = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E',\
    \ 'F'];\n\t$totalPrimes = 0;\n\tfor ($i = 0; $i < strlen($num); $i++) {\n\t\t\
    $hex = strtoupper($num[$i]);\n\t\tfor ($j = 0; $j < count($hexNumbers); $j++)\
    \ {\n\t\t\tif ($hex == $hexNumbers[$j]) {\n\t\t\t\tif (in_array($j, $primes))\
    \ {\n\t\t\t\t\t$totalPrimes++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn $totalPrimes;\n\
    }\n", "    $map = [\n        \"0\" => 0,\n        \"1\" => 1,\n        \"2\" =>\
    \ 2,\n        \"3\" => 3,\n        \"4\" => 4,\n        \"5\" => 5,\n        \"\
    6\" => 6,\n        \"7\" => 7,\n        \"8\" => 8,\n        \"9\" => 9,\n   \
    \     \"A\" => 10,\n        \"B\" => 11,\n        \"C\" => 12,\n        \"D\"\
    \ => 13,\n        \"E\" => 14,\n        \"F\" => 15\n    ];\n    $primes = [\"\
    2\", \"3\", \"5\", \"7\", \"B\", \"D\"];\n    $counter = 0;\n    for ($i = 0;\
    \ $i < strlen($num); $i++) {\n        if (in_array($num[$i], $primes)) $counter++;\n\
    \    }\n    return $counter;\n}\necho hex_key(\"AB\");\necho \"<br>\";\necho hex_key(\"\
    1077E\");\necho \"<br>\";\necho hex_key(\"ABED1A33\");\necho \"<br>\";\necho hex_key(\"\
    123456789ABCDEF0\");\necho \"<br>\";\necho hex_key(\"2020\");\necho \"<br>\";",
  "    $hex = str_split(strtoupper($num));\n    $sum = 0;\n    $arr = array('2', '3',\
    \ '5', '7', 'B', 'D');\n    foreach ($hex as $key => $value) {\n        if (in_array($value,\
    \ $arr)) {\n            $sum++;\n        }\n    }\n    return $sum;\n}\n", " \
    \   $arr = [2, 3, 5, 7, 11, 13];\n    $result = 0;\n    $numbers = str_split($num);\n\
    \    foreach ($numbers as $number) {\n        if (in_array(hexdec($number), $arr))\
    \ {\n            $result++;\n        }\n    }\n    return $result;\n}", "  $hexPrimes\
    \ = [\"2\", \"3\", \"5\", \"7\", \"B\", \"D\"];\n  $counter = 0;\n  for ($i =\
    \ 0; $i < strlen($num); $i++) {\n    if (in_array($num[$i], $hexPrimes)) {\n \
    \     $counter++;\n    }\n  }\n  return $counter;\n}\necho hex_key(\"AB\") . \"\
    <br>\";\necho hex_key(\"1077E\") . \"<br>\";\necho hex_key(\"ABED1A33\") . \"\
    <br>\";\necho hex_key(\"123456789ABCDEF0\") . \"<br>\";\necho hex_key(\"2020\"\
    ) . \"<br>\";", "\t$n = strtoupper($num);\n\t$len = strlen($n);\n\t$count = 0;\n\
    \t$arr = [11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997];\n\
    \tfor ($i=0; $i < $len; $i++) { \n\t\tif (in_array(ord($n[$i]), $arr)) {\n\t\t\
    \t$count++;\n\t\t}\n\t}\n\treturn $count;\n}", "    $s = strtoupper($num);\n \
    \   $s = str_split($s);\n    $len = count($s);\n    $res = 0;\n    for ($i = 0;\
    \ $i < $len; $i++) {\n        if ($s[$i] == \"A\" || $s[$i] == \"B\" || $s[$i]\
    \ == \"D\") {\n            $res++;\n        }\n        else if (in_array($s[$i],\
    \ [2, 3, 5, 7])) {\n            $res++;\n        }\n    }\n    return $res;\n\
    }\nprint hex_key(\"2020\");\nprint \"\\n\";", "  $s = str_split($num);\n  $count\
    \ = 0;\n  foreach ($s as $key => $value) {\n    if($value == '2' || $value ==\
    \ '3' || $value == '5' || $value == '7' || $value == 'B' || $value == 'D') {\n\
    \      $count ++;\n    }\n  }\n  return $count;\n}\n", "\tif($num == \"\") { return\
    \ 0; }\n\t$hex = str_split($num);\n\t$cnt = 0;\n\t$primes = array(2,3,5,7,11,13);\n\
    \t$hex_map = array(\"A\"=>10,\"B\"=>11,\"C\"=>12,\"D\"=>13,\"E\"=>14,\"F\"=>15);\n\
    \tfor($i=0;$i<count($hex);$i++) {\n\t\tif(in_array($hex[$i],array_keys($hex_map)))\
    \ {\n\t\t\tif(in_array($hex_map[$hex[$i]],$primes)) {\n\t\t\t\t$cnt++;\n\t\t\t\
    }\n\t\t} else if(in_array($hex[$i],$primes)) {\n\t\t\t$cnt++;\n\t\t}\n\t}\n\t\
    return $cnt;\n}\n", "    $primes = [\"B\", \"D\"];\n    $count = 0;\n    for ($i\
    \ = 0; $i < strlen($num); $i++) {\n        if (in_array($num[$i], $primes)) {\n\
    \            $count++;\n        }\n    }\n    return $count;\n}\necho hex_key(\"\
    1077E\").\"\\n\";\necho hex_key(\"123456789ABCDEF0\").\"\\n\";", "  // Write your\
    \ code here\n  // To print results to the standard output you can use print\n\
    \  // Example: print \"Hello world!\";\n  $primes = array(2, 3, 5, 7, 11, 13);\n\
    \  $hex_array = str_split($num);\n  $count = 0;\n  foreach ($hex_array as $key\
    \ => $value) {\n    $decimal = hexdec($value);\n    if (in_array($decimal, $primes))\n\
    \      $count++;\n  }\n  print $count;\n}", "\tif ($num) {\n\t\t$arr = str_split($num);\n\
    \t\t$primes = 0;\n\t\tforeach ($arr as $value) {\n\t\t\tif ($value == \"2\" ||\
    \ $value == \"3\" || $value == \"5\" || $value == \"7\" || $value == \"B\" ||\
    \ $value == \"D\") {\n\t\t\t\t$primes += 1;\n\t\t\t}\n\t\t}\n\t\treturn $primes;\n\
    \t}\n\treturn 0;\n}\necho hex_key(\"ABED1A33\");", "    $arr_hex = ['0', '1',\
    \ '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'];\n   \
    \ $arr_prime = [2, 3, 5, 7, 11, 13];\n    $count = 0;\n    $num_arr = str_split($num);\n\
    \    foreach ($num_arr as $char) {\n        if (in_array($char, $arr_hex)) {\n\
    \            if (in_array($char, $arr_prime)) {\n                $count++;\n \
    \           }\n        }\n    }\n    return $count;\n}\n", "\t$primes = array(2,\
    \ 3, 5, 7, 11, 13);\n\t$arr = str_split($num);\n\t$numb = 0;\n\tforeach ($arr\
    \ as $a) {\n\t\tif (in_array($a, $primes)) {\n\t\t\t$numb++;\n\t\t}\n\t}\n\treturn\
    \ $numb;\n}\n", "    if($num==\"\"){\n        return 0;\n    }\n    $a=str_split($num);\n\
    \    $c=0;\n    foreach($a as $x){\n        if($x=='2'||$x=='3'||$x=='5'||$x=='7'||$x=='B'||$x=='D'){\n\
    \            $c++;\n        }\n    }\n    return $c;\n}\n", "    $hex = ['0',\
    \ '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'];\n\
    \    $prime = [2, 3, 5, 7, 11, 13];\n    $cnt = 0;\n    for ($i = 0; $i < strlen($num);\
    \ $i++) {\n        if (in_array($num[$i], $hex)) {\n            if (in_array(hexdec($num[$i]),\
    \ $prime)) {\n                $cnt++;\n            }\n        }\n    }\n    return\
    \ $cnt;\n}", "    $prime = [2, 3, 5, 7, 11, 13];\n    $arr = str_split($num);\n\
    \    $count = 0;\n    for ($i = 0; $i < count($arr); $i++) {\n        for ($j\
    \ = 0; $j < count($prime); $j++) {\n            if (strtoupper($arr[$i]) == dechex($prime[$j]))\
    \ {\n                $count++;\n            }\n        }\n    }\n    return $count;\n\
    }\necho hex_key(\"AB\") . \"<br>\";\necho hex_key(\"1077E\") . \"<br>\";\necho\
    \ hex_key(\"ABED1A33\") . \"<br>\";\necho hex_key(\"123456789ABCDEF0\") . \"<br>\"\
    ;\necho hex_key(\"2020\") . \"<br>\";", "  $len = strlen($num);\n  $numbers =\
    \ str_split($num);\n  $primes = [2, 3, 5, 7, 11, 13];\n  $sum = 0;\n  foreach\
    \ ($numbers as $i => $number) {\n    $number = strtoupper($number);\n    if ($number\
    \ > 10) {\n      $number = array_search($number, $primes);\n    }\n    if (in_array($number,\
    \ $primes)) {\n      $sum += 1;\n    }\n  }\n  return $sum;\n}", "    $primes\
    \ = [11, 13, 2, 3, 5, 7];\n    $num = str_split(strtoupper($num));\n    $count\
    \ = 0;\n    foreach ($num as $digit) {\n        if (in_array($digit, $primes))\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}", "  $prime_digits\
    \ = [2, 3, 5, 7, 11, 13];\n  $hex_digits = array_merge(range(0, 9), range('A',\
    \ 'F'));\n  $digits = str_split($num);\n  $cnt = 0;\n  foreach ($digits as $key\
    \ => $value) {\n    if (in_array($value, $hex_digits) && in_array($value, $prime_digits))\
    \ {\n      $cnt++;\n    }\n  }\n  return $cnt;\n}", "\t$sum = 0;\n\t$n = strlen($num);\n\
    \tfor ($i = 0; $i < $n; $i++) {\n\t\tif ($num[$i] == \"2\" || $num[$i] == \"3\"\
    \ || $num[$i] == \"5\" || $num[$i] == \"7\" || $num[$i] == \"B\" || $num[$i] ==\
    \ \"D\") {\n\t\t\t$sum++;\n\t\t}\n\t}\n\treturn $sum;\n}\necho hex_key(\"AB\"\
    ) . \"\\n\";\necho hex_key(\"1077E\") . \"\\n\";\necho hex_key(\"ABED1A33\") .\
    \ \"\\n\";\necho hex_key(\"123456789ABCDEF0\") . \"\\n\";\necho hex_key(\"2020\"\
    ) . \"\\n\";", "\t// Your code here\n\t$dec_num = hexdec($num);\n\techo $dec_num;\n\
    \t$count = 0;\n\tfor ($i=2; $i < $dec_num; $i++) { \n\t\tif ($dec_num % $i ==\
    \ 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n", "    if (is_null($num)\
    \ || empty($num)) {\n        return 0;\n    }\n    $hex = \"0123456789ABCDEF\"\
    ;\n    $hex_values = str_split($hex);\n    $primes = [2, 3, 5, 7, 11, 13];\n \
    \   $results = array_map(function($prime) use ($hex_values) {\n        return\
    \ array_search($prime, $hex_values);\n    }, $primes);\n    $count = 0;\n    foreach(str_split($num)\
    \ as $char) {\n        if (in_array($char, $results)) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\nprint_r(hex_key(\"AB\"));\necho \"\\\
    n\";\nprint_r(hex_key(\"1077E\"));\necho \"\\n\";\nprint_r(hex_key(\"ABED1A33\"\
    ));\necho \"\\n\";\nprint_r(hex_key(\"123456789ABCDEF0\"));\necho \"\\n\";\nprint_r(hex_key(\"\
    2020\"));\necho \"\\n\";", "\t$num = strtoupper($num);\n\t$nums = array(\n\t\t\
    '0' => 0,\n\t\t'1' => 1,\n\t\t'2' => 2,\n\t\t'3' => 3,\n\t\t'4' => 4,\n\t\t'5'\
    \ => 5,\n\t\t'6' => 6,\n\t\t'7' => 7,\n\t\t'8' => 8,\n\t\t'9' => 9,\n\t\t'A' =>\
    \ 10,\n\t\t'B' => 11,\n\t\t'C' => 12,\n\t\t'D' => 13,\n\t\t'E' => 14,\n\t\t'F'\
    \ => 15\n\t);\n\t$primes = array(\n\t\t'2' => 2,\n\t\t'3' => 3,\n\t\t'5' => 5,\n\
    \t\t'7' => 7,\n\t\t'B' => 11,\n\t\t'D' => 13\n\t);\n\t$count = 0;\n\tfor ($i =\
    \ 0; $i < strlen($num); $i++) {\n\t\tif (isset($primes[$num[$i]])) {\n\t\t\t$count++;\n\
    \t\t}\n\t}\n\treturn $count;\n}\n$tests = array(\n\tarray('AB', 1),\n\tarray('1077E',\
    \ 2),\n\tarray('ABED1A33', 4),\n\tarray('123456789ABCDEF0', 6),\n\tarray('2020',\
    \ 2)\n);\n$num_tests = count($tests);\nfor ($i = 0; $i < $num_tests; $i++) {\n\
    \t$test = $tests[$i];\n\t$num = $test[0];\n\t$expected = $test[1];\n\t$result\
    \ = hex_key($num);\n\tif ($result == $expected) {\n\t\techo 'Test ' . ($i + 1)\
    \ . ' passed!' . PHP_EOL;\n\t} else {\n\t\techo 'Test ' . ($i + 1) . ' failed.'\
    \ . PHP_EOL;\n\t\techo 'Expected ' . $expected . ', but got ' . $result . PHP_",
  "    $count = 0;\n    $hex = [\n        '0', '1', '2', '3', '4', '5', '6', '7',\n\
    \        '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'\n    ];\n    $hex_prime = ['2',\
    \ '3', '5', '7', 'B', 'D'];\n    for ($i = 0; $i < strlen($num); $i++) {\n   \
    \     if (in_array($num[$i], $hex_prime)) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}\nprint(hex_key(\"AB\"));", "\t$hex_array = array(\n\
    \t\t\t\t\t\t'0' => 0,\n\t\t\t\t\t\t'1' => 1,\n\t\t\t\t\t\t'2' => 2,\n\t\t\t\t\t\
    \t'3' => 3,\n\t\t\t\t\t\t'4' => 4,\n\t\t\t\t\t\t'5' => 5,\n\t\t\t\t\t\t'6' =>\
    \ 6,\n\t\t\t\t\t\t'7' => 7,\n\t\t\t\t\t\t'8' => 8,\n\t\t\t\t\t\t'9' => 9,\n\t\t\
    \t\t\t\t'A' => 10,\n\t\t\t\t\t\t'B' => 11,\n\t\t\t\t\t\t'C' => 12,\n\t\t\t\t\t\
    \t'D' => 13,\n\t\t\t\t\t\t'E' => 14,\n\t\t\t\t\t\t'F' => 15\n\t\t\t\t\t\t);\n\t\
    \n\t$hex_array_keys = array_keys($hex_array);\n\t\n\t$results = array();\n\t\n\
    \tforeach($hex_array_keys as $key => $value) {\n\t\t$results[] = $hex_array[$value];\n\
    \t}\n\t\n\t$prime_numbers = array();\n\t\n\tforeach($results as $key => $value)\
    \ {\n\t\tif ($value == 2 || $value == 3 || $value == 5 || $value == 7 || $value\
    \ == 11 || $value == 13) {\n\t\t\t$prime_numbers[] = $value;\n\t\t}\n\t}\n\t\n\
    \treturn count($prime_numbers);\n}\n\necho hex_key(\"ABCDEF\");", "    $hex =\
    \ array('0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F');\n  \
    \  $primes = array('2','3','5','7','B','D');\n    $counter = 0;\n    for ($i=0;\
    \ $i < strlen($num); $i++) { \n        if (in_array($num[$i], $primes)) {\n  \
    \          $counter++;\n        }\n    }\n    return $counter;\n}", "    $hex_array\
    \ = str_split($num);\n    $counter = 0;\n    $primes = array(\"2\", \"3\", \"\
    5\", \"7\", \"B\", \"D\");\n    foreach ($hex_array as $number) {\n        if\
    \ (in_array($number, $primes)) {\n            $counter++;\n        }\n    }\n\
    \    return $counter;\n}", "\t$primes = ['2', '3', '5', '7', 'B', 'D'];\n\t$count\
    \ = 0;\n\tfor ($i = 0; $i < strlen($num); $i++) {\n\t\tif (in_array($num[$i],\
    \ $primes)) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\necho hex_key(\"\
    AB\") . \"\\n\";\necho hex_key(\"1077E\") . \"\\n\";\necho hex_key(\"ABED1A33\"\
    ) . \"\\n\";\necho hex_key(\"123456789ABCDEF0\") . \"\\n\";\necho hex_key(\"2020\"\
    ) . \"\\n\";", "\t//$count = 0;\n\t$hex_array = ['0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'];\n\
    \t$prime_array = [2,3,5,7,11,13];\n\t$num_array = str_split($num);\n\t//print_r($num_array);\n\
    \t$count = 0;\n\tfor ($i=0; $i < count($num_array); $i++) { \n\t\tif (in_array($num_array[$i],\
    \ $hex_array)) {\n\t\t\t$key = array_search($num_array[$i], $hex_array);\n\t\t\
    \tif (in_array($key, $prime_array)) {\n\t\t\t\t$count++;\n\t\t\t}\n\t\t}\n\t}\n\
    \treturn $count;\n}\necho hex_key(\"AB\").\"\\n\";\necho hex_key(\"1077E\").\"\
    \\n\";\necho hex_key(\"ABED1A33\").\"\\n\";\necho hex_key(\"123456789ABCDEF0\"\
    ).\"\\n\";\necho hex_key(\"2020\").\"\\n\";", "    $hexPrimes = [2, 3, 5, 7, 11,\
    \ 13];\n    $hexDigits = str_split(strtoupper($num));\n    $arr = [];\n    foreach\
    \ ($hexDigits as $digit) {\n        if (ctype_digit($digit)) {\n            $arr[]\
    \ = $digit;\n        } else {\n            switch ($digit) {\n               \
    \ case 'A':\n                    $arr[] = 10;\n                    break;\n  \
    \              case 'B':\n                    $arr[] = 11;\n                 \
    \   break;\n                case 'C':\n                    $arr[] = 12;\n    \
    \                break;\n                case 'D':\n                    $arr[]\
    \ = 13;\n                    break;\n                case 'E':\n             \
    \       $arr[] = 14;\n                    break;\n                case 'F':\n\
    \                    $arr[] = 15;\n                    break;\n            }\n\
    \        }\n    }\n    $count = 0;\n    foreach ($arr as $digit) {\n        if\
    \ (in_array($digit, $hexPrimes)) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}\n\necho hex_key(\"AB\"); //1\necho \"<br>\";\necho hex_key(\"\
    1077E\"); //2\necho \"<br>\";\necho hex_key(\"ABED1A33\"); //4\necho \"<br>\"\
    ;\necho hex_key(\"123456789ABCDEF0\"); //6\necho \"<br>\";\necho hex_key(\"2020\"\
    ); //2\necho \"<br>\";\n", "    if(empty($num)) return 0;\n    $primes = array(2,\
    \ 3, 5, 7, 11, 13);\n    $hex = array('0', '1', '2', '3', '4', '5', '6', '7',\
    \ '8', '9', 'A', 'B', 'C', 'D', 'E', 'F');\n    $digits = str_split($num);\n \
    \   $count = 0;\n    foreach($digits as $digit) {\n        if(in_array($digit,\
    \ $hex) && in_array(array_search($digit, $hex), $primes)) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n", "    $res = 0;\n    $prime_hex =\
    \ ['2', '3', '5', '7', 'B', 'D'];\n    foreach(str_split($num) as $d) {\n    \
    \    if(in_array($d, $prime_hex)) $res++;\n    }\n    return $res;\n}\necho hex_key(\"\
    ABED1A33\");\necho \"\\n\";\necho hex_key(\"123456789ABCDEF0\");", "    $prime_hex\
    \ = [\"2\", \"3\", \"5\", \"7\", \"B\", \"D\"];\n    $count = 0;\n    for ($i\
    \ = 0; $i < strlen($num); $i++) {\n        if (in_array($num[$i], $prime_hex))\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n$num =\
    \ \"1077E\";\necho hex_key($num);", "    $hexVal = array (\n        '0' => 0,\n\
    \        '1' => 1,\n        '2' => 2,\n        '3' => 3,\n        '4' => 4,\n\
    \        '5' => 5,\n        '6' => 6,\n        '7' => 7,\n        '8' => 8,\n\
    \        '9' => 9,\n        'A' => 10,\n        'B' => 11,\n        'C' => 12,\n\
    \        'D' => 13,\n        'E' => 14,\n        'F' => 15\n    );\n    $primes\
    \ = array (2, 3, 5, 7, 11, 13);\n    $count = 0;\n    $arr = str_split($num);\n\
    \    foreach ($arr as $char) {\n        if (in_array($hexVal[$char], $primes))\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}", "    $prime_numbers\
    \ = [2, 3, 5, 7, 11, 13];\n    $hex_numbers = [2, 3, 5, 7, 'B', 'D'];\n    $digits\
    \ = str_split($num);\n    $counter = 0;\n    foreach ($digits as $digit) {\n \
    \       if (in_array($digit, $hex_numbers)) {\n            $counter++;\n     \
    \   }\n    }\n    return $counter;\n}\necho hex_key(\"1077E\");\necho \"<br>\"\
    ;\necho hex_key(\"ABED1A33\");\necho \"<br>\";\necho hex_key(\"123456789ABCDEF0\"\
    );\necho \"<br>\";\necho hex_key(\"2020\");", "    $prime_digits = array('2',\
    \ '3', '5', '7', 'B', 'D');\n    $num_of_primes = 0;\n    foreach(str_split($num)\
    \ as $value) {\n        if(in_array($value, $prime_digits)) {\n            $num_of_primes++;\n\
    \        }\n    }\n    return $num_of_primes;\n}\necho hex_key(\"AB\");\necho\
    \ \"\\n\";\necho hex_key(\"1077E\");\necho \"\\n\";\necho hex_key(\"ABED1A33\"\
    );\necho \"\\n\";\necho hex_key(\"123456789ABCDEF0\");\necho \"\\n\";\necho hex_key(\"\
    2020\");", "\t$hex_digits = str_split(strtoupper($num));\n\t$primes = [2, 3, 5,\
    \ 7, 11, 13];\n\t$prime_digits = [2, 3, 5, 7, 'B', 'D'];\n\t$digits = array_combine($prime_digits,\
    \ $primes);\n\t$counter = 0;\n\tforeach ($hex_digits as $digit) {\n\t\tif (in_array($digit,\
    \ $prime_digits)) {\n\t\t\t$counter += 1;\n\t\t}\n\t}\n\treturn $counter;\n}",
  "    $strArr = str_split($num);\n    $result = 0;\n    $hexNumbers = ['0', '1',\
    \ '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'];\n   \
    \ $hexPrimes = ['2', '3', '5', '7', 'B', 'D'];\n    foreach ($strArr as $num)\
    \ {\n        if (in_array($num, $hexPrimes)) {\n            $result += 1;\n  \
    \      }\n    }\n    return $result;\n}\n", "\t// $newnum = \n}", "    $key =\
    \ '123456789ABCDEF';\n    $prime_numbers = '2357BD';\n    $result = 0;\n    for\
    \ ($i = 0; $i < strlen($num); $i++) {\n        if (strpos($prime_numbers, $num[$i])\
    \ !== false) {\n            $result++;\n        }\n    }\n    return $result;\n\
    }\n", "    //$num = strtoupper($num);\n    $hex = ['2', '3', '5', '7', 'B', 'D'];\n\
    \    $arr = str_split($num);\n    $ct = 0;\n    foreach ($arr as $a) {\n     \
    \   if (in_array($a, $hex)) {\n            $ct++;\n        }\n    }\n    return\
    \ $ct;\n}\necho hex_key(\"AB\");\necho \"\\n\";\necho hex_key(\"1077E\");\necho\
    \ \"\\n\";\necho hex_key(\"ABED1A33\");\necho \"\\n\";\necho hex_key(\"123456789ABCDEF0\"\
    );\necho \"\\n\";\necho hex_key(\"2020\");\necho \"\\n\";", "  $prime_hex_digits\
    \ = array(\"2\", \"3\", \"5\", \"7\", \"B\", \"D\");\n  $matching_digits = 0;\n\
    \  for ($i = 0; $i < strlen($num); $i++) {\n    $hex_digit = $num[$i];\n    if\
    \ (in_array($hex_digit, $prime_hex_digits)) {\n      $matching_digits++;\n   \
    \ }\n  }\n  return $matching_digits;\n}\necho hex_key(\"AB\") . \"\\n\";\necho\
    \ hex_key(\"1077E\") . \"\\n\";\necho hex_key(\"ABED1A33\") . \"\\n\";\necho hex_key(\"\
    123456789ABCDEF0\") . \"\\n\";\necho hex_key(\"2020\") . \"\\n\";", "    $count\
    \ = 0;\n    $primes = [2, 3, 5, 7, 11, 13];\n    $hex = \"0123456789ABCDEF\";\n\
    \    $num = str_split($num);\n    foreach ($num as $val) {\n        if (in_array($val,\
    \ $primes)) {\n            $count++;\n        } else {\n            if (in_array($val,\
    \ str_split($hex))) {\n                $count++;\n            }\n        }\n \
    \   }\n    return $count;\n}\n\necho hex_key(\"AB\") . \"<br>\"; // 1\necho hex_key(\"\
    1077E\") . \"<br>\"; // 2\necho hex_key(\"ABED1A33\") . \"<br>\"; // 4\necho hex_key(\"\
    123456789ABCDEF0\") . \"<br>\"; // 6\necho hex_key(\"2020\") . \"<br>\"; // 2\n",
  "\t$key = 0;\n\t$hexMap = [\n\t\t'A' => 10,\n\t\t'B' => 11,\n\t\t'C' => 12,\n\t\t\
    'D' => 13,\n\t\t'E' => 14,\n\t\t'F' => 15\n\t];\n\tfor ($i = 0; $i < strlen($num);\
    \ $i++) {\n\t\tif (isset($hexMap[$num[$i]])) {\n\t\t\t$key += isPrime($hexMap[$num[$i]]);\n\
    \t\t} else {\n\t\t\t$key += isPrime($num[$i]);\n\t\t}\n\t}\n\treturn $key;\n}\n",
  "    // your code goes here\n    $hexs = [0,1,2,3,4,5,6,7,8,9,\"A\",\"B\",\"C\"\
    ,\"D\",\"E\",\"F\"];\n    $primes = [2,3,5,7,11,13];\n    $count = 0;\n    foreach\
    \ (str_split($num) as $key => $value) {\n        if (in_array($value, $primes))\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}\n\necho hex_key(\"\
    AB\") . \"\\n\";\necho hex_key(\"1077E\") . \"\\n\";\necho hex_key(\"ABED1A33\"\
    ) . \"\\n\";\necho hex_key(\"123456789ABCDEF0\") . \"\\n\";\necho hex_key(\"2020\"\
    ) . \"\\n\";", "    $hex = array(2, 3, 5, 7, 'B', 'D');\n    $sum = 0;\n    $num\
    \ = str_split($num);\n    foreach ($num as $val) {\n        if (in_array($val,\
    \ $hex)) {\n            $sum++;\n        }\n    }\n    return $sum;\n}", "  $primes\
    \ = [\"2\",\"3\",\"5\",\"7\",\"B\",\"D\"];\n  $counter = 0;\n  foreach(str_split($num)\
    \ as $digit) {\n    if(in_array($digit, $primes)) {\n      $counter++;\n    }\n\
    \  }\n  return $counter;\n}\necho \"hex_key(\\\"AB\\\")\\n\";\necho hex_key(\"\
    AB\") . \"\\n\";\necho \"hex_key(\\\"1077E\\\")\\n\";\necho hex_key(\"1077E\"\
    ) . \"\\n\";\necho \"hex_key(\\\"ABED1A33\\\")\\n\";\necho hex_key(\"ABED1A33\"\
    ) . \"\\n\";\necho \"hex_key(\\\"123456789ABCDEF0\\\")\\n\";\necho hex_key(\"\
    123456789ABCDEF0\") . \"\\n\";\necho \"hex_key(\\\"2020\\\")\\n\";\necho hex_key(\"\
    2020\") . \"\\n\";", "    $primes = array(2, 3, 5, 7, 11, 13);\n    $count = 0;\n\
    \    for ($i = 0; $i < strlen($num); $i++) {\n        if (in_array(hexdec($num[$i]),\
    \ $primes)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    echo hex_key(\"AB\");\necho hex_key(\"1077E\");\necho hex_key(\"ABED1A33\");\n\
    echo hex_key(\"123456789ABCDEF0\");\necho hex_key(\"2020\");", "    $digit = str_split($num);\n\
    \    $count = 0;\n    $hex = [\"2\", \"3\", \"5\", \"7\", \"B\", \"D\"];\n   \
    \ for ($i = 0; $i < count($digit); $i++) {\n        for ($j = 0; $j < count($hex);\
    \ $j++) {\n            if ($digit[$i] == $hex[$j]) {\n                $count++;\n\
    \            }\n        }\n    }\n    return $count;\n}\necho hex_key(\"AB\");\n\
    echo \"\\n\";\necho hex_key(\"1077E\");\necho \"\\n\";\necho hex_key(\"ABED1A33\"\
    );\necho \"\\n\";\necho hex_key(\"123456789ABCDEF0\");\necho \"\\n\";\necho hex_key(\"\
    2020\");\necho \"\\n\";\n", "\t$prime = array(2, 3, 5, 7, 11, 13);\n\t$count =\
    \ 0;\n\tfor ($i = 0; $i < strlen($num); $i++) {\n\t\t$current = $num[$i];\n\t\t\
    $dec = hexdec($current);\n\t\tif (in_array($dec, $prime)) $count++;\n\t}\n\treturn\
    \ $count;\n}\n\necho hex_key(\"AB\") . \"\\n\";\necho hex_key(\"1077E\") . \"\\\
    n\";\necho hex_key(\"ABED1A33\") . \"\\n\";\necho hex_key(\"123456789ABCDEF0\"\
    ) . \"\\n\";\necho hex_key(\"2020\") . \"\\n\";", "  $hex = str_split(strtoupper($num));\n\
    \  $primes = [\"2\", \"3\", \"5\", \"7\", \"B\", \"D\"];\n  $prime_count = 0;\n\
    \  foreach ($hex as $key => $value) {\n    if (in_array($value, $primes)) {\n\
    \      $prime_count++;\n    }\n  }\n  return $prime_count;\n}\n\necho hex_key(\"\
    AB\");\necho \"<br>\";\necho hex_key(\"1077E\");\necho \"<br>\";\necho hex_key(\"\
    ABED1A33\");\necho \"<br>\";\necho hex_key(\"123456789ABCDEF0\");\necho \"<br>\"\
    ;\necho hex_key(\"2020\");\necho \"<br>\";", "  $result = 0;\n  $hex = str_split($num);\n\
    \  $primes = [2, 3, 5, 7, 11, 13];\n  $hexPrimes = [2, 3, 5, 7, 11, 13, 'B', 'D'];\n\
    \  foreach ($hex as $symbol) {\n    if (in_array($symbol, $hexPrimes)) $result++;\n\
    \  }\n  return $result;\n}\necho hex_key(\"ABCF\");\necho \"<br>\";\necho hex_key(\"\
    1077E\");\necho \"<br>\";\necho hex_key(\"ABED1A33\");\necho \"<br>\";\necho hex_key(\"\
    123456789ABCDEF0\");\necho \"<br>\";\necho hex_key(\"2020\");", "\t// the primes\
    \ are: 2, 3, 5, 7, 11, 13, 17\n\t$hex = [\"0\", \"1\", \"2\", \"3\", \"4\", \"\
    5\", \"6\", \"7\", \"8\", \"9\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\"];\n\t\
    $prime_hex = [\"2\", \"3\", \"5\", \"7\", \"B\", \"D\"];\n\t$prime_hex_count =\
    \ 0;\n\t\n\tfor ($i = 0; $i < strlen($num); $i++) {\n\t\tif (in_array($num[$i],\
    \ $prime_hex)) {\n\t\t\t$prime_hex_count++;\n\t\t}\n\t}\n\treturn $prime_hex_count;\n\
    }\n\necho hex_key(\"1077E\") . \"\\n\";\necho hex_key(\"ABED1A33\") . \"\\n\"\
    ;\necho hex_key(\"123456789ABCDEF0\") . \"\\n\";\necho hex_key(\"2020\") . \"\\\
    n\";\n", "  $hexArr = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A',\
    \ 'B', 'C', 'D', 'E', 'F'];\n  $numArr = str_split($num);\n  $primeCount = 0;\n\
    \  for ($i = 0; $i < count($numArr); $i++) {\n    if (in_array($numArr[$i], $hexArr))\
    \ {\n      $currNum = hexdec($numArr[$i]);\n      $isPrime = true;\n      for\
    \ ($j = 2; $j < $currNum; $j++) {\n        if ($currNum % $j == 0) {\n       \
    \   $isPrime = false;\n          break;\n        }\n      }\n      if ($isPrime)\
    \ {\n        $primeCount++;\n      }\n    }\n  }\n  return $primeCount;\n}", " \
    \   $primes = [2, 3, 5, 7, 11, 13];\n    $count = 0;\n    $arr = str_split($num);\n\
    \    foreach ($arr as $char) {\n        if (in_array(hexdec($char), $primes))\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}\necho hex_key(\"\
    AB\") . \"<br>\";\necho hex_key(\"1077E\") . \"<br>\";\necho hex_key(\"ABED1A33\"\
    ) . \"<br>\";\necho hex_key(\"123456789ABCDEF0\") . \"<br>\";\necho hex_key(\"\
    2020\") . \"<br>\";\n", "    $primes = [2, 3, 5, 7, 11, 13];\n    $cnt = 0;\n\
    \    for ($i = 0; $i < strlen($num); $i++) {\n        if (in_array(hexdec($num[$i]),\
    \ $primes)) {\n            $cnt++;\n        }\n    }\n    return $cnt;\n}\n\n\
    print_r(hex_key(\"AB\"));\necho \"\\n\";\nprint_r(hex_key(\"1077E\"));\necho \"\
    \\n\";\nprint_r(hex_key(\"ABED1A33\"));\necho \"\\n\";\nprint_r(hex_key(\"123456789ABCDEF0\"\
    ));\necho \"\\n\";\nprint_r(hex_key(\"2020\"));", "    $hex_digits = [\"2\", \"\
    3\", \"5\", \"7\", \"B\", \"D\"];\n    $count = 0;\n    for ($i = 0; $i < strlen($num);\
    \ $i++) {\n        if (in_array($num[$i], $hex_digits)) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}", "\t// Converting hexadecimal number\
    \ to decimal\n\t$decimalNum = hexdec($num);\n\t$arr = str_split($decimalNum);\n\
    \t$digitPrimes = 0;\n\t// Counting the number of hexadecimal digits that are primes\n\
    \tfor ($i = 0; $i < count($arr); $i++) {\n\t\tif ($arr[$i] == 2 || $arr[$i] ==\
    \ 3 || $arr[$i] == 5 || $arr[$i] == 7 || $arr[$i] == 11 || $arr[$i] == 13) {\n\
    \t\t\t$digitPrimes++;\n\t\t}\n\t}\n\treturn $digitPrimes;\n}\necho hex_key(\"\
    AB\") . \"\\n\"; // 1\necho hex_key(\"1077E\") . \"\\n\"; // 2\necho hex_key(\"\
    ABED1A33\") . \"\\n\"; // 4\necho hex_key(\"123456789ABCDEF0\") . \"\\n\"; //\
    \ 6\necho hex_key(\"2020\") . \"\\n\"; // 2", "  $arr = array(2,3,5,7,11,13);\n\
    \  $count = 0;\n  $len = strlen($num);\n  for($i=0;$i<$len;$i++){\n    if(in_array(hexdec($num[$i]),$arr)){\n\
    \      $count++;\n    }\n  }\n  return $count;\n}", "\t$newNum = [];\n\t$newNumTwo\
    \ = [];\n\t$newNumThree = [];\n\t$newNumFour = [];\n\t$newNumFive = [];\n\t$newNumSix\
    \ = [];\n\t$newNumSeven = [];\n\t$newNumEight = [];\n\t$newNumNine = [];\n\t$newNumTen\
    \ = [];\n\t$newNumEleven = [];\n\t$newNumTwelve = [];\n\t$newNumThirteen = [];\n\
    \t$newNumFourteen = [];\n\t$newNumFifteen = [];\n\t$newNumSixteen = [];\n\t$newNumSeventeen\
    \ = [];\n\t$newNumEighteen = [];\n\t$newNumNineteen = [];\n\t$newNumTwenty = [];\n\
    \t$newNumTwentyOne = [];\n\t$newNumTwentyTwo = [];\n\t$newNumTwentyThree = [];\n\
    \t$newNumTwentyFour = [];\n\t$newNumTwentyFive = [];\n\t$newNumTwentySix = [];\n\
    \t$newNumTwentySeven = [];\n\t$newNumTwentyEight = [];\n\t$newNumTwentyNine =\
    \ [];\n\t$newNumThirty = [];\n\t$newNumThirtyOne = [];\n\t$newNumThirtyTwo = [];\n\
    \t$newNumThirtyThree = [];\n\t$newNumThirtyFour = [];\n\t$newNumThirtyFive = [];\n\
    \t$newNumThirtySix = [];\n\t$newNumThirtySeven = [];\n\t$newNumThirtyEight = [];\n\
    \t$newNumThirtyNine = [];\n\t$newNumForty = [];\n\t$newNumFortyOne = [];\n\t$newNumFortyTwo\
    \ = [];\n\t$newNumFortyThree = [];\n\t$newNumFortyFour = [];\n\t$newNumFortyFive\
    \ = [];\n\t$newNumFortySix = [];\n\t$newNumFortySeven = [];\n\t$newNumFortyEight\
    \ = [];\n\t$newNumFortyNine = [];\n\t$newNumFifty = [];\n\t$newNumFiftyOne = [];\n\
    \t$newNumFiftyTwo = [];\n\t$newNumFiftyThree = [];\n\t$newNumFiftyFour = [];\n\
    \t$newNumFiftyFive = [];\n\t$newNumFiftySix = [];\n\t$newNum", "    $h = ['0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'];\n\
    \    $hex_digits = [];\n    $res = '';\n    $j = 0;\n    for ($i = 0; $i < strlen($num);\
    \ $i++) {\n        for ($j = 0; $j < count($h); $j++) {\n            if ($num[$i]\
    \ == $h[$j]) {\n                array_push($hex_digits, $num[$i]);\n         \
    \   }\n        }\n    }\n    for ($i = 0; $i < count($hex_digits); $i++) {\n \
    \       if ($hex_digits[$i] == '2' || $hex_digits[$i] == '3' || $hex_digits[$i]\
    \ == '5' || $hex_digits[$i] == '7' || $hex_digits[$i] == 'B' || $hex_digits[$i]\
    \ == 'D') {\n            $res++;\n        }\n    }\n    return $res;\n}\n\necho\
    \ hex_key(\"AB\") . \"\\n\";\necho hex_key(\"1077E\") . \"\\n\";\necho hex_key(\"\
    ABED1A33\") . \"\\n\";\necho hex_key(\"123456789ABCDEF0\") . \"\\n\";\necho hex_key(\"\
    2020\") . \"\\n\";\n", "    $primes = ['2', '3', '5', '7', 'B', 'D'];\n    $count\
    \ = 0;\n    for ($i = 0; $i < strlen($num); $i++) {\n        if (in_array($num[$i],\
    \ $primes)) {\n            $count++;\n        }\n    }\n    return $count;\n}",
  "\t$primes = ['2', '3', '5', '7', 'B', 'D'];\n\t$count = 0;\n\t$array = str_split($num);\n\
    \tforeach ($array as $element) {\n\t\tif (in_array($element, $primes)) {\n\t\t\
    \t$count++;\n\t\t}\n\t}\n\treturn $count;\n}", "    $hex = ['0', '1', '2', '3',\
    \ '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'];\n    $primes =\
    \ [2, 3, 5, 7, 11, 13];\n    $arr = str_split($num);\n    $count = 0;\n    foreach\
    \ ($arr as $value) {\n        if (in_array($value, $hex)) {\n            $index\
    \ = array_search($value, $hex);\n            if (in_array($index, $primes)) {\n\
    \                $count++;\n            }\n        }\n    }\n    return $count;\n\
    }", "    // your code here\n}\n", "    //Write your code here\n}\n", "  $primes\
    \ = [2, 3, 5, 7, 11, 13];\n  $count = 0;\n  for ($i = 0; $i < strlen($num); $i++)\
    \ {\n    if (in_array(dechex($num[$i]), $primes)) {\n      $count++;\n    }\n\
    \  }\n  return $count;\n}\n\necho hex_key(\"AB\") . \"\\n\"; // 1\necho hex_key(\"\
    1077E\") . \"\\n\"; // 2\necho hex_key(\"ABED1A33\") . \"\\n\"; // 4\necho hex_key(\"\
    123456789ABCDEF0\") . \"\\n\"; // 6\necho hex_key(\"2020\") . \"\\n\"; // 2",
  "  $primes = [2, 3, 5, 7, 11, 13];\n  $count = 0;\n  $hex = array_flip(str_split(\"\
    0123456789ABCDEF\"));\n  $array = str_split($num);\n  foreach ($array as $key\
    \ => $val) {\n    if (in_array($hex[$val], $primes)) {\n      $count++;\n    }\n\
    \  }\n  return $count;\n}", "  $primes = array(2, 3, 5, 7, 11, 13);\n  $len =\
    \ strlen($num);\n  $result = 0;\n  for ($i = 0; $i < $len; $i++) {\n    if (in_array(hexdec($num[$i]),\
    \ $primes)) {\n      $result++;\n    }\n  }\n  return $result;\n}", "    $digits\
    \ = [2, 3, 5, 7, 11, 13];\n    $cnt = 0;\n    for ($i = 0; $i < strlen($num);\
    \ $i++) {\n        if (in_array(hexdec($num[$i]), $digits)) {\n            $cnt++;\n\
    \        }\n    }\n    return $cnt;\n}\n", "    $num = strtoupper($num);\n   \
    \ $new_string = \"\";\n    $prime_string = \"\";\n    for ($i = 0; $i < strlen($num);\
    \ $i++) {\n        if ($num[$i] == \"2\" || $num[$i] == \"3\" || $num[$i] == \"\
    5\" || $num[$i] == \"7\" || $num[$i] == \"B\" || $num[$i] == \"D\") {\n      \
    \      $new_string .= $num[$i];\n        }\n    }\n    for ($i = 0; $i < strlen($new_string);\
    \ $i++) {\n        if (is_prime($new_string[$i])) {\n            $prime_string\
    \ .= $new_string[$i];\n        }\n    }\n    return strlen($prime_string);\n}\n",
  "   $decimalValues = array(\n      '0' => 0,\n      '1' => 1,\n      '2' => 2,\n\
    \      '3' => 3,\n      '4' => 4,\n      '5' => 5,\n      '6' => 6,\n      '7'\
    \ => 7,\n      '8' => 8,\n      '9' => 9,\n      'A' => 10,\n      'B' => 11,\n\
    \      'C' => 12,\n      'D' => 13,\n      'E' => 14,\n      'F' => 15\n   );\n\
    \   $primes = array(2, 3, 5, 7, 11, 13);\n   $result = 0;\n   for ($i = 0; $i\
    \ < strlen($num); $i++) {\n      if (in_array($decimalValues[$num[$i]], $primes))\
    \ {\n         $result++;\n      }\n   }\n   return $result;\n}\n$arr = [\"AB\"\
    , \"1077E\", \"ABED1A33\", \"123456789ABCDEF0\", \"2020\"];\nforeach ($arr as\
    \ $value) {\n   echo hex_key($value) . \"<br>\";\n}", "  $primes = [2, 3, 5, 7,\
    \ 11, 13];\n  $count = 0;\n  for ($i = 0; $i < strlen($num); $i++) {\n    if (in_array(hexdec($num[$i]),\
    \ $primes)) $count++;\n  }\n  return $count;\n}\n\necho hex_key(\"AB\") . PHP_EOL;\n\
    echo hex_key(\"1077E\") . PHP_EOL;\necho hex_key(\"ABED1A33\") . PHP_EOL;\necho\
    \ hex_key(\"123456789ABCDEF0\") . PHP_EOL;\necho hex_key(\"2020\") . PHP_EOL;",
  "\tif (empty($num)) {\n\t\treturn 0;\n\t}\n\t$primes = [2, 3, 5, 7, 11, 13];\n\t\
    $isPrime = function($num) use ($primes) {\n\t\tif ($num <= 1) {\n\t\t\treturn\
    \ false;\n\t\t}\n\t\tfor ($i = 0; $i < count($primes); $i++) {\n\t\t\tif ($num\
    \ % $primes[$i] == 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\
    \t};\n\t$digits = str_split($num);\n\t$count = 0;\n\tfor ($i = 0; $i < count($digits);\
    \ $i++) {\n\t\t$val = hexdec($digits[$i]);\n\t\tif ($isPrime($val)) {\n\t\t\t\
    $count++;\n\t\t}\n\t}\n\treturn $count;\n}", "\t$key = array(2, 3, 5, 7, 11, 13);\n\
    \t$count = 0;\n\tfor ($i = 0; $i < strlen($num); $i++) {\n\t\t$hex = strtoupper($num[$i]);\n\
    \t\tif (in_array($hex, array('A', 'B', 'C', 'D', 'E', 'F'))) {\n\t\t\t$hex = base_convert($hex,\
    \ 16, 10);\n\t\t}\n\t\tif (in_array($hex, $key)) {\n\t\t\t$count++;\n\t\t}\n\t\
    }\n\treturn $count;\n}\necho hex_key(\"AB\").PHP_EOL;\necho hex_key(\"1077E\"\
    ).PHP_EOL;\necho hex_key(\"ABED1A33\").PHP_EOL;\necho hex_key(\"123456789ABCDEF0\"\
    ).PHP_EOL;\necho hex_key(\"2020\").PHP_EOL;", "  $key=0;\n  $hex=['0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'];\n\
    \  for($i=0;$i<strlen($num);$i++){\n    if(in_array($num[$i],$hex)){\n      if($num[$i]=='A'||$num[$i]=='B'||$num[$i]=='D'){\n\
    \        $key++;\n      }\n      if($num[$i]=='C'){\n        $key+=2;\n      }\n\
    \      if($num[$i]=='E'){\n        $key+=3;\n      }\n      if($num[$i]=='F'){\n\
    \        $key+=4;\n      }\n    }\n  }\n  return $key;\n}\n$num=\"AB\";\necho\
    \ hex_key($num);", "  $primes = array(2, 3, 5, 7, 11, 13);\n  $digits = array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16);\n  $hex_digits = array_combine($digits,\
    \ range('0', 'F'));\n  $hex_digits = array_flip($hex_digits);\n  $num = str_split($num);\n\
    \  $result = 0;\n  foreach ($num as $key => $value) {\n    if (in_array($hex_digits[$value],\
    \ $primes)) {\n      $result++;\n    }\n  }\n  return $result;\n}\necho hex_key(\"\
    AB\") . PHP_EOL;\necho hex_key(\"1077E\") . PHP_EOL;\necho hex_key(\"ABED1A33\"\
    ) . PHP_EOL;\necho hex_key(\"123456789ABCDEF0\") . PHP_EOL;\necho hex_key(\"2020\"\
    ) . PHP_EOL;", "    $check = [1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0];\n\
    \    $count = 0;\n    for ($i = 0; $i < strlen($num); $i++) {\n        $hex =\
    \ strtoupper($num[$i]);\n        if ($hex >= 'A') $hex = ord($hex) - ord('A')\
    \ + 10;\n        else $hex = (int)$hex;\n        if ($check[$hex]) $count++;\n\
    \    }\n    return $count;\n}\necho hex_key(\"\");", "\t$prime = array(2, 3, 5,\
    \ 7, 11, 13);\n\t// $prime = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113,\
    \ 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199,\
    \ 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293,\
    \ 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397,\
    \ 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491,\
    \ 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601,\
    \ 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701,\
    \ 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821,\
    \ 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929,\
    \ 937, 941, 947, 953, 967, 971, 977, 983, 991, 997);\n\t$n = strlen($num);\n\t\
    $hex = range(0, 9);\n\t$hex = array_merge($hex, array('A', 'B', 'C', 'D', 'E',\
    \ 'F'));\n\t$result = 0;\n\tfor ($i = 0; $i", "\t$hex = 'ABCDEF';\n\t$primes =\
    \ [2, 3, 5, 7, 11, 13];\n\t$count = 0;\n\tforeach(str_split($num) as $digit) {\n\
    \t\tif(in_array($digit, $primes) || in_array($digit, str_split($hex))) {\n\t\t\
    \t$count++;\n\t\t}\n\t}\n\treturn $count;\n}", "  $primes = array(\n    \"2\"\
    \ => true,\n    \"3\" => true,\n    \"5\" => true,\n    \"7\" => true,\n    \"\
    B\" => true,\n    \"D\" => true\n  );\n  $result = 0;\n  for ($i = 0; $i < strlen($num);\
    \ $i++) {\n    if (array_key_exists($num[$i], $primes)) {\n      $result++;\n\
    \    }\n  }\n  return $result;\n}", "    $primes = [2, 3, 5, 7, 11, 13];\n   \
    \ $count = 0;\n    $digits = str_split($num);\n    foreach ($digits as $dig) {\n\
    \        if (in_array($dig, $primes)) {\n            $count++;\n        }\n  \
    \  }\n    return $count;\n}\n\n$num = 'ABED1A33';\necho hex_key($num);", "   \
    \ $arr = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D',\
    \ 'E', 'F'];\n    $prime = [2, 3, 5, 7, 11, 13];\n    $count = 0;\n    for ($i\
    \ = 0; $i < strlen($num); $i++) {\n        if (in_array($num[$i], $prime)) {\n\
    \            $count++;\n        }\n    }\n    return $count;\n}", "  $prime_hex_numbers\
    \ = [2, 3, 5, 7, 11, 13];\n  $arr = str_split($num);\n  $count = 0;\n  for ($i\
    \ = 0; $i < count($arr); $i++) {\n    if (in_array(hexdec($arr[$i]), $prime_hex_numbers))\
    \ {\n      $count++;\n    }\n  }\n  return $count;\n}\necho hex_key(\"AB\") .\
    \ \"\\n\";\necho hex_key(\"1077E\") . \"\\n\";\necho hex_key(\"ABED1A33\") . \"\
    \\n\";\necho hex_key(\"123456789ABCDEF0\") . \"\\n\";\necho hex_key(\"2020\")\
    \ . \"\\n\";", "  if($num == '') return 0;\n  $hexArray = ['0', '1', '2', '3',\
    \ '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'];\n  $hex2num = array_flip($hexArray);\n\
    \  $arr = str_split($num);\n  $count = 0;\n  foreach($arr as $val) {\n    if($hex2num[$val]\
    \ == 1 || $hex2num[$val] == 0) {\n      continue;\n    } else if($hex2num[$val]\
    \ == 2 || $hex2num[$val] == 3 || $hex2num[$val] == 5 || $hex2num[$val] == 7 ||\
    \ $hex2num[$val] == 11 || $hex2num[$val] == 13) {\n      $count++;\n    }\n  }\n\
    \  return $count;\n}", "    $hexPrimes = array(2, 3, 5, 7, 11, 13);\n    $counter\
    \ = 0;\n    for ($i = 0; $i < strlen($num); $i++) {\n        $numDigit = $num[$i];\n\
    \        if ($numDigit >= 'A') {\n            $numDigit = ord($numDigit) - 55;\n\
    \        }\n        if (in_array($numDigit, $hexPrimes)) {\n            $counter++;\n\
    \        }\n    }\n    return $counter;\n}", "\t$arr = [2, 3, 5, 7, 11, 13];\n\
    \t$sum = 0;\n\tfor ($i = 0; $i < strlen($num); $i++) {\n\t\tif (in_array(hexdec($num[$i]),\
    \ $arr)) {\n\t\t\t$sum++;\n\t\t}\n\t}\n\treturn $sum;\n}\necho hex_key(\"AB\"\
    ) . \"\\n\";\necho hex_key(\"1077E\") . \"\\n\";\necho hex_key(\"ABED1A33\") .\
    \ \"\\n\";\necho hex_key(\"123456789ABCDEF0\") . \"\\n\";\necho hex_key(\"2020\"\
    ) . \"\\n\";", "\t$num = strtoupper($num);\n\t$arr = array_count_values(str_split($num));\n\
    \t$primes = 0;\n\tif (array_key_exists('2', $arr)) {\n\t\t$primes += $arr['2'];\n\
    \t}\n\tif (array_key_exists('3', $arr)) {\n\t\t$primes += $arr['3'];\n\t}\n\t\
    if (array_key_exists('5', $arr)) {\n\t\t$primes += $arr['5'];\n\t}\n\tif (array_key_exists('7',\
    \ $arr)) {\n\t\t$primes += $arr['7'];\n\t}\n\tif (array_key_exists('B', $arr))\
    \ {\n\t\t$primes += $arr['B'];\n\t}\n\tif (array_key_exists('D', $arr)) {\n\t\t\
    $primes += $arr['D'];\n\t}\n\techo $primes;\n}\nhex_key(\"ABED1A33\");", "   //\
    \ Write your code here\n   // To print results to the standard output you can\
    \ use print\n   // Example: print \"Hello world!\";\n   $primes = [2, 3, 5, 7,\
    \ 11, 13];\n   $arr = str_split($num);\n   $count = 0;\n   foreach ($arr as $k\
    \ => $v) {\n      if(in_array(dechex($v), $primes)) {\n         $count++;\n  \
    \    }\n   }\n   print $count;\n}\nhex_key(\"ABED1A33\");", "    $hex = ['2',\
    \ '3', '5', '7', 'B', 'D'];\n    $count = 0;\n    $num = str_split($num);\n  \
    \  foreach ($num as $key => $value) {\n        if (in_array($value, $hex)) {\n\
    \            $count++;\n        }\n    }\n    return $count;\n}\n\nprint_r(hex_key(\"\
    123456789ABCDEF0\"));", "\tif(!$num) return $num;\n\t$arr = [11,13,2,3,5,7];\n\
    \t$digit = str_split($num);\n\t$count = 0;\n\tforeach($digit as $item) {\n\t\t\
    if(in_array(intval($item,16),$arr)){\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n\
    }\n\necho hex_key(\"AB\").PHP_EOL;\necho hex_key(\"1077E\").PHP_EOL;\necho hex_key(\"\
    ABED1A33\").PHP_EOL;\necho hex_key(\"123456789ABCDEF0\").PHP_EOL;\necho hex_key(\"\
    2020\").PHP_EOL;", "    $h = ['2', '3', '5', '7', 'B', 'D'];\n    $s = 0;\n  \
    \  for ($i = 0; $i < strlen($num); $i++) {\n        $c = $num[$i];\n        if\
    \ (in_array($c, $h)) {\n            $s++;\n        }\n    }\n    return $s;\n}"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

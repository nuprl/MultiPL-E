name: HumanEval_78_hex_key
language: php
prompt: "<?php\n// You have been tasked to write a function that receives \n// a hexadecimal\
  \ number as a string and counts the number of hexadecimal \n// digits that are primes\
  \ (prime number, or a prime, is a natural number \n// greater than 1 that is not\
  \ a product of two smaller natural numbers).\n// Hexadecimal digits are 0, 1, 2,\
  \ 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers are 2, 3, 5, 7, 11, 13,\
  \ 17,...\n// So you have to determine a number of the following digits: 2, 3, 5,\
  \ 7, \n// B (=decimal 11), D (=decimal 13).\n// Note: you may assume the input is\
  \ always correct or empty string, \n// and symbols A,B,C,D,E,F are always uppercase.\n\
  // Examples:\n// >>> hex_key(\"AB\")\n// 1\n// >>> hex_key(\"1077E\")\n// 2\n//\
  \ >>> hex_key(\"ABED1A33\")\n// 4\n// >>> hex_key(\"123456789ABCDEF0\")\n// 6\n\
  // >>> hex_key(\"2020\")\n// 2\nfunction hex_key($num) {\n"
tests: "function candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test\
  \ failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test\
  \ failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
  \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $arr = str_split($num);\n    $counter = 0;\n    $dict = ['1' =>\
    \ true, '2' => true, '3' => true, '5' => true, '7' => true, 'B' => true, 'D' =>\
    \ true];\n    foreach ($arr as $key => $value) {\n        if (array_key_exists($value,\
    \ $dict)) {\n            $counter++;\n        }\n    }\n    return $counter;\n\
    }\necho hex_key(\"ABED1A33\");", "    $primes = ['2', '3', '5', '7', 'B', 'D'];\n\
    \    $count = 0;\n    foreach(str_split($num) as $digit) {\n        if(in_array($digit,\
    \ $primes)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n",
  "    $decimal = hexdec($num);\n    $prime = array();\n    for ($i = 2; $i <= $decimal;\
    \ $i++) {\n        $is_prime = TRUE;\n        for ($j = 2; $j < $i; $j++) {\n\
    \            if ($i % $j == 0) {\n                $is_prime = FALSE;\n       \
    \         break;\n            }\n        }\n        if ($is_prime) {\n       \
    \     $prime[] = $i;\n        }\n    }\n    $hex_prime = array();\n    foreach\
    \ ($prime as $p) {\n        $hex_prime[] = dechex($p);\n    }\n    $count = 0;\n\
    \    for ($i = 0; $i < strlen($num); $i++) {\n        if (in_array($num[$i], $hex_prime))\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}\n\necho hex_key(\"\
    AB\");", "\t$primeHex = array(2, 3, 5, 7, 'B', 'D');\n\t$count = 0;\n\tfor ($i\
    \ = 0; $i < strlen($num); $i++) {\n\t\tif (in_array($num[$i], $primeHex)) {\n\t\
    \t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\necho hex_key(\"AB\");\necho \"\
    <br/>\";\necho hex_key(\"1077E\");\necho \"<br/>\";\necho hex_key(\"ABED1A33\"\
    );\necho \"<br/>\";\necho hex_key(\"123456789ABCDEF0\");\necho \"<br/>\";\necho\
    \ hex_key(\"2020\");\necho \"<br/>\";", "  $primes = ['2', '3', '5', '7', 'B',\
    \ 'D'];\n  $count = 0;\n  for ($i = 0; $i < strlen($num); $i++) {\n    if (in_array($num[$i],\
    \ $primes)) {\n      $count++;\n    }\n  }\n  return $count;\n}", "\t$count =\
    \ 0;\n\t$hex = str_split($num);\n\t$primes = [2, 3, 5, 7, 11, 13];\n\t$hex_numbers\
    \ = array_merge(range(0, 9), range('A', 'F'));\n\t$hex_numbers = array_flip($hex_numbers);\n\
    \t$hex_numbers = array_map(function($key) {\n\t\treturn $key + 1;\n\t}, $hex_numbers);\n\
    \tfor ($i = 0; $i < count($hex); $i++) {\n\t\tif (in_array($hex_numbers[$hex[$i]],\
    \ $primes)) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}", "    $hexes\
    \ = str_split($num);\n    $primes = [2, 3, 5, 7, 11, 13];\n    $hex_primes = 0;\n\
    \    foreach ($hexes as $hex) {\n        if (in_array($hex, $primes)) {\n    \
    \        $hex_primes++;\n        }\n    }\n    return $hex_primes;\n}\n$num =\
    \ '';\necho hex_key($num) . PHP_EOL;\n$num = 'AB';\necho hex_key($num) . PHP_EOL;\n\
    $num = '1077E';\necho hex_key($num) . PHP_EOL;\n$num = 'ABED1A33';\necho hex_key($num)\
    \ . PHP_EOL;\n$num = '123456789ABCDEF0';\necho hex_key($num) . PHP_EOL;\n$num\
    \ = '2020';\necho hex_key($num) . PHP_EOL;", "    $num = strtoupper($num);\n \
    \   $primes = \"2357BD\";\n    $match = str_split($primes);\n    $count = 0;\n\
    \    for ($i = 0; $i < strlen($num); $i++) {\n        if (in_array($num[$i], $match))\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}", "\t// create\
    \ a string of hexadecimal primes\n\t$hexPrimes = \"2357BDF\";\n\t// convert the\
    \ string of hexadecimal primes to an array\n\t$hexPrimes = str_split($hexPrimes);\n\
    \t// convert the hexadecimal number string to an array\n\t$hexNumber = str_split($num);\n\
    \t// initialize a counter\n\t$primeCounter = 0;\n\t// create a foreach loop that\
    \ loops through the hexadecimal number array\n\tforeach ($hexNumber as $value)\
    \ {\n\t\t// create an if statement that checks if the current value is in the\
    \ \n\t\t// array of hexadecimal primes.  If it is, then increment the counter.\n\
    \t\tif (in_array($value, $hexPrimes)) {\n\t\t\t$primeCounter++;\n\t\t}\n\t}\n\t\
    // return the counter\n\treturn $primeCounter;\n}\n", "    $result = 0;\n    $primes\
    \ = [2, 3, 5, 7, 11, 13];\n    $lookup = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,\
    \ 13, 14, 15];\n    $chars = str_split($num);\n    foreach ($chars as $char) {\n\
    \        if (in_array($char, array_keys($lookup))) {\n            if (in_array($lookup[$char],\
    \ $primes)) {\n                $result++;\n            }\n        }\n    }\n \
    \   return $result;\n}", "    $primeHexKeyDigits = array(1 => '2', '3', '5', '7',\
    \ 'B', 'D');\n    $num = str_split($num);\n    $primeDigits = 0;\n    foreach\
    \ ($num as $key => $value) {\n        if (in_array($value, $primeHexKeyDigits))\
    \ {\n            $primeDigits++;\n        }\n    }\n    return $primeDigits;\n\
    }\n", "    $num = strtoupper($num);\n    $primes = [2, 3, 5, 7, 11, 13];\n   \
    \ $hex_key = 0;\n    for ($i = 0; $i < strlen($num); $i++) {\n        if (in_array(hexdec($num[$i]),\
    \ $primes)) {\n            $hex_key++;\n        }\n    }\n    return $hex_key;\n\
    }\n\n$tests = [\n    [\"AB\", 1],\n    [\"1077E\", 2],\n    [\"ABED1A33\", 4],\n\
    \    [\"123456789ABCDEF0\", 6],\n    [\"2020\", 2],\n    [\"B\", 1],\n    [\"\
    FF0\", 1],\n    [\"F0F0F0\", 1],\n    [\"\", 0],\n    [\"0\", 0],\n    [\"F00\"\
    , 0],\n    [\"FAF\", 0],\n    [\"FAAF\", 0],\n    [\"FAAF\", 0],\n    [\"AABB\"\
    , 0],\n    [\"AABC\", 0],\n    [\"AABD\", 0],\n    [\"AABE\", 0],\n    [\"AABF\"\
    , 0],\n    [\"AAC0\", 0],\n    [\"AAC1\", 0],\n    [\"AAC2\", 0],\n    [\"AAC3\"\
    , 0],\n    [\"AAC4\", 0],\n    [\"AAC5\", 0],\n    [\"AAC6\", 0],\n    [\"AAC7\"\
    , 0],\n    [\"AAC8\", 0],\n    [\"AAC9\", 0],\n    [\"AACA\", 0],\n    [\"AACB\"\
    , 0],\n    [\"AACC\", 0],\n    [\"AACD\", 0],\n    [\"AACE\", 0],\n    [\"AACF\"\
    , 0],\n    [\"AAD0\", 0],\n    [\"AAD1\", 0],\n    [\"AAD2\", 0],\n    [\"AAD3\"\
    , 0],\n    [\"AAD4\", 0],\n    [\"AAD5\", 0],\n    [\"AAD6\", 0],\n    [\"AAD7\"\
    , 0],\n    [\"AAD8\", 0],\n    [\"AAD9\", 0],\n    [\"AADA\", 0],\n    [\"A",
  "\t$count = 0;\n\t$hex = ['2', '3', '5', '7', 'B', 'D'];\n\tfor ($i = 0; $i < strlen($num);\
    \ $i++) {\n\t\t$num[$i] = strtoupper($num[$i]);\n\t\tif (in_array($num[$i], $hex))\
    \ {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}", "    $key = [\n      \
    \  '2' => true,\n        '3' => true,\n        '5' => true,\n        '7' => true,\n\
    \        'B' => true,\n        'D' => true,\n    ];\n    $count = 0;\n    $len\
    \ = strlen($num);\n    for ($i = 0; $i < $len; $i++) {\n        if (isset($key[$num[$i]]))\
    \ $count++;\n    }\n    return $count;\n}\n\necho hex_key(\"AB\") . PHP_EOL; //\
    \ 1\necho hex_key(\"1077E\") . PHP_EOL; // 2\necho hex_key(\"ABED1A33\") . PHP_EOL;\
    \ // 4\necho hex_key(\"123456789ABCDEF0\") . PHP_EOL; // 6\necho hex_key(\"2020\"\
    ) . PHP_EOL; // 2", "    $hexArray = array('0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F');\n\
    \    $primeArray = array('2','3','5','7','B','D');\n    $result = 0;\n    for\
    \ ($i = 0; $i < strlen($num); $i++) {\n        if (in_array($num[$i], $primeArray))\
    \ {\n            $result++;\n        }\n    }\n    return $result;\n}", "    $primes\
    \ = array(2, 3, 5, 7, 11, 13);\n    $total = 0;\n    $num = str_split($num);\n\
    \    $num = array_map(function($x) {\n        return hexdec($x);\n    }, $num);\n\
    \    foreach ($num as $x) {\n        if (in_array($x, $primes)) {\n          \
    \  $total++;\n        }\n    }\n    return $total;\n}", "    $hex = ['2','3','5','7','B','D'];\n\
    \    $arr = str_split($num);\n    $result = 0;\n    foreach ($arr as $value) {\n\
    \        if (in_array($value, $hex)) {\n            $result++;\n        }\n  \
    \  }\n    return $result;\n}\necho hex_key(\"AB\") . \"\\n\";\necho hex_key(\"\
    1077E\") . \"\\n\";\necho hex_key(\"ABED1A33\") . \"\\n\";\necho hex_key(\"123456789ABCDEF0\"\
    ) . \"\\n\";\necho hex_key(\"2020\") . \"\\n\";", "    $primes = ['2', '3', '5',\
    \ '7', 'B', 'D'];\n    $stringOfPrimes = '';\n    for ($i = 0; $i < strlen($num);\
    \ $i++) {\n        $hexChar = $num[$i];\n        if (in_array($hexChar, $primes))\
    \ {\n            $stringOfPrimes .= $hexChar;\n        }\n    }\n    return strlen($stringOfPrimes);\n\
    }\necho \"hex_key(\\\"AB\\\"): \" . hex_key(\"AB\") . \"\\n\";\necho \"hex_key(\\\
    \"1077E\\\"): \" . hex_key(\"1077E\") . \"\\n\";\necho \"hex_key(\\\"ABED1A33\\\
    \"): \" . hex_key(\"ABED1A33\") . \"\\n\";\necho \"hex_key(\\\"123456789ABCDEF0\\\
    \"): \" . hex_key(\"123456789ABCDEF0\") . \"\\n\";\necho \"hex_key(\\\"2020\\\"\
    ): \" . hex_key(\"2020\") . \"\\n\";\n", "  // Your code here\n}\n", "\t$primes\
    \ = ['2', '3', '5', '7', 'B', 'D'];\n\t$keys = 0;\n\t$num = str_split($num);\n\
    \tforeach ($num as $value) {\n\t\tif (in_array($value, $primes)) {\n\t\t\t$keys++;\n\
    \t\t}\n\t}\n\treturn $keys;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

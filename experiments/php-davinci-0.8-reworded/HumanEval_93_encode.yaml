name: HumanEval_93_encode
language: php
prompt: "<?php\n// Write a function that takes a message, and encodes in such a \n\
  // way that it swaps case of all letters, replaces all vowels in \n// the message\
  \ with the letter that appears 2 places ahead of that \n// vowel in the english\
  \ alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode(\"test\")\n\
  // \"TGST\"\n// >>> encode(\"This is a message\")\n// \"tHKS KS C MGSSCGG\"\nfunction\
  \ encode($message) {\n"
tests: "function candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new\
  \ Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"This is a message\") !==\
  \ \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
  I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"\
  Test failed!\"); }\n}\n\ntest();"
completions: ["    $result = \"\";\n    $vowels = array('a', 'e', 'i', 'o', 'u');\n\
    \    $word = str_split($message);\n    for ($i = 0; $i < count($word); $i++) {\n\
    \        $letter = $word[$i];\n        if ($letter == strtoupper($letter)) {\n\
    \            $letter = strtolower($letter);\n        } else {\n            $letter\
    \ = strtoupper($letter);\n        }\n        if (in_array($letter, $vowels)) {\n\
    \            $key = array_search($letter, $vowels);\n            if ($key > 2)\
    \ {\n                $letter = $vowels[$key - 2];\n            } else {\n    \
    \            $letter = $vowels[4 - (2 - $key)];\n            }\n        }\n  \
    \      $result .= $letter;\n    }\n    return $result;\n}\nprint encode(\"test\"\
    ) . \"\\n\";\nprint encode(\"This is a message\") . \"\\n\";", "\t$vowels = ['a',\
    \ 'e', 'i', 'o', 'u'];\n\t$encoded_message = '';\n\t$message_length = strlen($message);\n\
    \tfor ($i = 0; $i < $message_length; $i++) {\n\t\t$current_char = $message[$i];\n\
    \t\tif (preg_match('/[a-z]/i', $current_char)) {\n\t\t\t$is_vowel = in_array(strtolower($current_char),\
    \ $vowels);\n\t\t\tif ($is_vowel) {\n\t\t\t\t$current_char = strtolower($current_char);\n\
    \t\t\t\t$current_char_index = array_search($current_char, $vowels);\n\t\t\t\t\
    $vowel_to_add = $vowels[($current_char_index + 2) % 5];\n\t\t\t\t$encoded_message\
    \ .= strtoupper($vowel_to_add);\n\t\t\t} else {\n\t\t\t\t$encoded_message .= strtoupper($current_char);\n\
    \t\t\t}\n\t\t} else {\n\t\t\t$encoded_message .= $current_char;\n\t\t}\n\t}\n\t\
    return $encoded_message;\n}\n\nprint(\">>> encode(\\\"test\\\")\\n\\\"\".encode(\"\
    test\").\"\\\"\\n\");\nprint(\">>> encode(\\\"This is a message\\\")\\n\\\"\"\
    .encode(\"This is a message\").\"\\\"\\n\");", "\t$encodedMsg = \"\";\n\t$vowels\
    \ = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$msgArray = str_split($message);\n\
    \tfor ($i = 0; $i < count($msgArray); $i++) {\n\t\tif (in_array($msgArray[$i],\
    \ $vowels)) {\n\t\t\tif ($msgArray[$i] == \"u\") {\n\t\t\t\t$encodedMsg .= \"\
    a\";\n\t\t\t} else {\n\t\t\t\t$encodedMsg .= $vowels[array_search($msgArray[$i],\
    \ $vowels) + 2];\n\t\t\t}\n\t\t} else if (ctype_upper($msgArray[$i])) {\n\t\t\t\
    $encodedMsg .= strtolower($msgArray[$i]);\n\t\t} else {\n\t\t\t$encodedMsg .=\
    \ strtoupper($msgArray[$i]);\n\t\t}\n\t}\n\treturn $encodedMsg;\n}\necho encode(\"\
    test\") . PHP_EOL;\necho encode(\"This is a message\") . PHP_EOL;", "\t$output\
    \ = '';\n\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\t$letter = strtolower($message[$i]);\n\t\tif (ctype_alpha($letter))\
    \ {\n\t\t\tif (in_array($letter, $vowels)) {\n\t\t\t\t$new_letter = $vowels[array_search($letter,\
    \ $vowels) + 2 % 5];\n\t\t\t} else {\n\t\t\t\t$new_letter = $letter;\n\t\t\t}\n\
    \t\t\t$output .= ctype_upper($message[$i]) ? strtoupper($new_letter) : $new_letter;\n\
    \t\t} else {\n\t\t\t$output .= $message[$i];\n\t\t}\n\t}\n\treturn $output;\n\
    }\necho encode(\"aBcD\");", "\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t$encodedMessage\
    \ = '';\n\t$message = strtolower($message);\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\t$encodedMessage .= (\n\t\t\tin_array($message[$i], $vowels)\n\t\
    \t\t? chr(ord($message[$i]) + 2)\n\t\t\t: $message[$i]\n\t\t);\n\t}\n\treturn\
    \ $encodedMessage;\n}\n\necho encode('This is a message') . PHP_EOL;\necho encode('test')\
    \ . PHP_EOL;", "    $encoded = \"\";\n    for ($i = 0; $i < strlen($message);\
    \ $i++) {\n        $letter = $message[$i];\n        if (ctype_upper($letter))\
    \ {\n            $letter = strtolower($letter);\n        } else {\n          \
    \  $letter = strtoupper($letter);\n        }\n        $charCode = ord($letter);\n\
    \        if ($charCode >= 97 && $charCode <= 100) {\n            $charCode +=\
    \ 22;\n        } else if ($charCode >= 101 && $charCode <= 104) {\n          \
    \  $charCode += 20;\n        } else if ($charCode >= 105 && $charCode <= 108)\
    \ {\n            $charCode += 18;\n        } else if ($charCode >= 109 && $charCode\
    \ <= 112) {\n            $charCode += 16;\n        } else if ($charCode >= 113\
    \ && $charCode <= 116) {\n            $charCode += 14;\n        } else if ($charCode\
    \ >= 117 && $charCode <= 122) {\n            $charCode += 12;\n        }\n   \
    \     $encoded .= chr($charCode);\n    }\n    return $encoded;\n}\n$message =\
    \ \"test\";\n$encoded = encode($message);\nprint_r($encoded);\n$message = \"This\
    \ is a message\";\n$encoded = encode($message);\nprint_r($encoded);", "\t$vowels\
    \ = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$cypher = \"\";\n\t$len = strlen($message);\n\
    \tfor ($i = 0; $i < $len; $i++) {\n\t\tif (in_array($message[$i], $vowels)) {\n\
    \t\t\t$cypher .= $vowels[array_search($message[$i], $vowels) + 2];\n\t\t} else\
    \ {\n\t\t\t$cypher .= $message[$i];\n\t\t}\n\t}\n\treturn $cypher;\n}\n\n$message\
    \ = \"test\";\necho encode($message) . \"\\n\";\n\n$message = \"This is a message\"\
    ;\necho encode($message) . \"\\n\";\n", "\t$result = \"\";\n\t$message = strtolower($message);\n\
    \t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$replacements = array(\"\
    c\", \"f\", \"j\", \"n\", \"r\");\n\tfor ($i = 0; $i < strlen($message); $i++)\
    \ {\n\t\tif (in_array($message[$i], $vowels)) {\n\t\t\t$result .= $replacements[array_search($message[$i],\
    \ $vowels)];\n\t\t} else {\n\t\t\t$result .= $message[$i];\n\t\t}\n\t}\n\treturn\
    \ strtoupper($result);\n}\n\necho encode(\"test\") . \"\\n\";\necho encode(\"\
    This is a message\") . \"\\n\";", "    $message = strtolower($message);\n    $vowels\
    \ = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $message = str_split($message);\n\
    \    for ($i = 0; $i < count($message); $i++) {\n        if (in_array($message[$i],\
    \ $vowels)) {\n            if ($message[$i] == \"u\") {\n                $message[$i]\
    \ = \"a\";\n            } else {\n                $message[$i] = ++$message[$i];\n\
    \            }\n        }\n    }\n    $message = implode($message);\n    $message\
    \ = strtoupper($message);\n    return $message;\n}\necho encode(\"This is a message\"\
    );", "    $encrypted_message = \"\";\n    $length = strlen($message);\n    for\
    \ ($i = 0; $i < $length; $i++) {\n        $current_letter = $message[$i];\n  \
    \      $encrypted_message .= encodeLetter($current_letter);\n    }\n    return\
    \ $encrypted_message;\n}\n", "  $vowels = array(\"a\", \"e\", \"i\", \"o\", \"\
    u\");\n  $newMessage = \"\";\n  for ($i = 0; $i < strlen($message); $i++) {\n\
    \    $originalChar = $message[$i];\n    $newChar = \"\";\n    if (ctype_upper($originalChar))\
    \ {\n      $newChar = strtolower($originalChar);\n    } else if (ctype_lower($originalChar))\
    \ {\n      $newChar = strtoupper($originalChar);\n    }\n    if (in_array($newChar,\
    \ $vowels)) {\n      $newMessage .= $vowels[(array_search($newChar, $vowels) +\
    \ 2) % 5];\n    } else {\n      $newMessage .= $newChar;\n    }\n  }\n  return\
    \ $newMessage;\n}", "  $newStr = '';\n  $vowels = ['a', 'e', 'i', 'o', 'u'];\n\
    \  for ($i = 0; $i < strlen($message); $i++) {\n    $ch = $message[$i];\n    if\
    \ (strtolower($ch) == $ch) {\n      if (in_array($ch, $vowels)) {\n        $newStr\
    \ .= ($vowels[(array_search($ch, $vowels) + 2) % 5]);\n      } else {\n      \
    \  $newStr .= strtoupper($ch);\n      }\n    } else {\n      if (in_array(strtolower($ch),\
    \ $vowels)) {\n        $newStr .= strtolower($vowels[(array_search(strtolower($ch),\
    \ $vowels) + 2) % 5]);\n      } else {\n        $newStr .= strtolower($ch);\n\
    \      }\n    }\n  }\n  return $newStr;\n}\n\necho encode(\"test\") . \"<br>\"\
    ;\necho encode(\"This is a message\") . \"<br>\";\n", "  $characters = str_split($message);\n\
    \  $newMessage = \"\";\n  $vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n  $charValue\
    \ = \"\";\n  foreach ($characters as $char) {\n    if (ctype_upper($char)) {\n\
    \      $charValue = strtolower($char);\n    } else {\n      $charValue = strtoupper($char);\n\
    \    }\n    if (in_array($charValue, $vowels)) {\n      if ($charValue == \"z\"\
    ) {\n        $charValue = \"b\";\n      } else if ($charValue == \"u\") {\n  \
    \      $charValue = \"a\";\n      } else {\n        $charValue = chr(ord($charValue)\
    \ + 2);\n      }\n    }\n    $newMessage .= $charValue;\n  }\n  return $newMessage;\n\
    }\n\necho encode(\"test\");\necho \"\\n\";\necho encode(\"This is a message\"\
    );\necho \"\\n\";", "\t$message_arr = str_split($message);\n\t$str = \"\";\n\t\
    foreach ($message_arr as $value) {\n\t\tif (ctype_upper($value)) {\n\t\t\t$str\
    \ .= strtolower($value);\n\t\t}\n\t\telse if (ctype_lower($value)) {\n\t\t\t$str\
    \ .= strtoupper($value);\n\t\t}\n\t\telse {\n\t\t\t$str .= $value;\n\t\t}\n\t\
    }\n\treturn $str;\n}\n\n$message = \"This is a message\";\necho encode($message);",
  "\t$alphabet = array('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l',\
    \ 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z');\n\t$vowels\
    \ = array('a', 'e', 'i', 'o', 'u');\n\t$messageArray = str_split($message);\n\t\
    $newMessage = '';\n\tforeach ($messageArray as $letter) {\n\t\tif (ctype_upper($letter))\
    \ {\n\t\t\t$newMessage .= strtolower($letter);\n\t\t} elseif (ctype_lower($letter))\
    \ {\n\t\t\t$newMessage .= strtoupper($letter);\n\t\t} else {\n\t\t\t$newMessage\
    \ .= $letter;\n\t\t}\n\t}\n\t$newMessageArray = str_split($newMessage);\n\t$encodedMessage\
    \ = '';\n\tforeach ($newMessageArray as $letter) {\n\t\tif (in_array($letter,\
    \ $vowels)) {\n\t\t\t$position = array_search($letter, $alphabet);\n\t\t\t$encodedMessage\
    \ .= $alphabet[$position + 2];\n\t\t} else {\n\t\t\t$encodedMessage .= $letter;\n\
    \t\t}\n\t}\n\treturn $encodedMessage;\n}", "    $table = ['a' => 'c', 'e' => 'g',\
    \ 'i' => 'k', 'o' => 'q', 'u' => 'w'];\n    $encoded = '';\n    $message = strtolower($message);\n\
    \    for ($i = 0; $i < strlen($message); $i++) {\n        if (in_array($message[$i],\
    \ array_keys($table))) {\n            $encoded .= $table[$message[$i]];\n    \
    \    } else {\n            $encoded .= $message[$i];\n        }\n    }\n    return\
    \ strtoupper($encoded);\n}\necho encode(\"test\");\necho \"\\n\";\necho encode(\"\
    This is a message\");\necho \"\\n\";\necho encode(\"this is a message\");\necho\
    \ \"\\n\";\necho encode(\"This is a MESSAGE\");\necho \"\\n\";\n", "    $vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    $result = '';\n    for ($i = 0; $i < strlen($message);\
    \ $i++) {\n        $curr_letter = $message[$i];\n        if (in_array($curr_letter,\
    \ $vowels)) {\n            $next_letter = $message[$i + 1];\n            $result\
    \ .= $next_letter;\n            $i++;\n        } else {\n            $result .=\
    \ $curr_letter;\n        }\n    }\n    return $result;\n}\n\n$original = 'This\
    \ is a message';\n$encoded = encode($original);\n$decoded = encode($encoded);\n\
    \nassert($original == $decoded);\n", "\t// your code here\n\t$message = strtolower($message);\n\
    \t$vowels = ['a','e','i','o','u'];\n\t$newMessage = \"\";\n\t$messageArray = str_split($message);\n\
    \tfor ($i=0; $i < count($messageArray); $i++) { \n\t\tif (in_array($messageArray[$i],\
    \ $vowels)) {\n\t\t\tif ($messageArray[$i] == 'u') {\n\t\t\t\t$newMessage .= 'a';\n\
    \t\t\t}\n\t\t\telse {\n\t\t\t\t$vowelIndex = array_search($messageArray[$i], $vowels);\n\
    \t\t\t\t$newMessage .= $vowels[$vowelIndex+2];\n\t\t\t}\n\t\t}\n\t\telse {\n\t\
    \t\t$newMessage .= $messageArray[$i];\n\t\t}\n\t}\n\treturn strtoupper($newMessage);\n\
    }\necho encode(\"This is a message\");", "\n}\n", "    // write your solution\
    \ here\n    $messageArr = str_split($message);\n    $result = \"\";\n    foreach\
    \ ($messageArr as $character) {\n        $result .= toEncode($character);\n  \
    \  }\n    return $result;\n}\n", "\t$encoded = \"\";\n\t$letters = str_split($message);\n\
    \t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\t$vowels = \"aeiou\";\n\tforeach\
    \ ($letters as $letter) {\n\t\t$upper = strtoupper($letter);\n\t\t$lower = strtolower($letter);\n\
    \t\tif ($upper != $letter) {\n\t\t\tif (strpos($vowels, $upper) !== false) {\n\
    \t\t\t\t$letter = strtolower(substr($alphabet, strpos($alphabet, $upper) + 2,\
    \ 1));\n\t\t\t}\n\t\t\t$encoded .= $letter;\n\t\t} else {\n\t\t\tif (strpos($vowels,\
    \ $lower) !== false) {\n\t\t\t\t$letter = strtoupper(substr($alphabet, strpos($alphabet,\
    \ $lower) + 2, 1));\n\t\t\t}\n\t\t\t$encoded .= $letter;\n\t\t}\n\t}\n\treturn\
    \ $encoded;\n}\n\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\"\
    ) . \"\\n\";", "\t$vowels = \"aeiou\";\n\t$newMessage = \"\";\n\tfor ($i = 0;\
    \ $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\t\tif (ctype_alpha($char))\
    \ {\n\t\t\tif (ctype_upper($char)) {\n\t\t\t\t$upper = true;\n\t\t\t\t$char =\
    \ strtolower($char);\n\t\t\t} else {\n\t\t\t\t$upper = false;\n\t\t\t}\n\t\t\t\
    if (strpos($vowels, $char) !== false) {\n\t\t\t\t$newChar = $vowels[(strpos($vowels,\
    \ $char) + 2) % 5];\n\t\t\t} else {\n\t\t\t\t$newChar = $char;\n\t\t\t}\n\t\t\t\
    if ($upper) {\n\t\t\t\t$newChar = strtoupper($newChar);\n\t\t\t}\n\t\t\t$newMessage\
    \ .= $newChar;\n\t\t} else {\n\t\t\t$newMessage .= $char;\n\t\t}\n\t}\n\treturn\
    \ $newMessage;\n}\n", "    $letters = str_split($message);\n    $encoded = [];\n\
    \    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    foreach ($letters as $letter) {\n\
    \        if (in_array($letter, $vowels)) {\n            $next_vowel = $vowels[(array_search($letter,\
    \ $vowels) + 2) % 5];\n            $encoded[] = $next_vowel;\n        } else {\n\
    \            $encoded[] = ucfirst($letter);\n        }\n    }\n    return join($encoded);\n\
    }\necho encode(\"This is a message\") . \"\\n\";", "\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\t$letter = $message[$i];\n\t\t$isLower = $letter == strtolower($letter);\n\
    \t\t$isVowel = in_array($letter, [\"a\", \"e\", \"i\", \"o\", \"u\"]);\n\t\t$isUpper\
    \ = $letter == strtoupper($letter);\n\t\t$isVowel = $isVowel || in_array($letter,\
    \ [\"A\", \"E\", \"I\", \"O\", \"U\"]);\n\t\tif ($isLower && $isVowel) {\n\t\t\
    \tif ($letter == \"u\") {\n\t\t\t\t$letter = \"a\";\n\t\t\t} else {\n\t\t\t\t\
    $letter = chr(ord($letter) + 2);\n\t\t\t}\n\t\t} else if ($isUpper && $isVowel)\
    \ {\n\t\t\tif ($letter == \"U\") {\n\t\t\t\t$letter = \"A\";\n\t\t\t} else {\n\
    \t\t\t\t$letter = chr(ord($letter) + 2);\n\t\t\t}\n\t\t} else if ($isLower) {\n\
    \t\t\t$letter = strtoupper($letter);\n\t\t} else if ($isUpper) {\n\t\t\t$letter\
    \ = strtolower($letter);\n\t\t}\n\t\t$message[$i] = $letter;\n\t}\n\treturn $message;\n\
    }\n\necho encode(\"test\") . PHP_EOL;\necho encode(\"This is a message\") . PHP_EOL;",
  "\t$vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n\t$message = strtolower($message);\n\
    \t$answer = \"\";\n\t$len = strlen($message);\n\tfor ($i = 0; $i < $len; $i++)\
    \ {\n\t\t$character = $message[$i];\n\t\tif (ctype_alpha($character)) {\n\t\t\t\
    if (in_array($character, $vowels)) {\n\t\t\t\t$count = 0;\n\t\t\t\t$next = $character;\n\
    \t\t\t\twhile ($count < 2) {\n\t\t\t\t\t$letter = ord($next);\n\t\t\t\t\t$letter++;\n\
    \t\t\t\t\tif ($letter == 123) {\n\t\t\t\t\t\t$letter = 97;\n\t\t\t\t\t}\n\t\t\t\
    \t\t$next = chr($letter);\n\t\t\t\t\t$count++;\n\t\t\t\t}\n\t\t\t\t$answer .=\
    \ $next;\n\t\t\t} else {\n\t\t\t\t$letter = ord($character);\n\t\t\t\t$letter\
    \ -= 32;\n\t\t\t\t$next = chr($letter);\n\t\t\t\t$answer .= $next;\n\t\t\t}\n\t\
    \t} else {\n\t\t\t$answer .= $character;\n\t\t}\n\t}\n\treturn $answer;\n}\n$message\
    \ = \"This is a message\";\necho \"Message is: \" . $message . \"<br>\";\necho\
    \ \"Encoded: \" . encode($message) . \"<br>\";", "  $letters = str_split($message);\n\
    \  $vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n  $encoded = \"\";\n  for ($i\
    \ = 0; $i < count($letters); $i++) {\n    if (ctype_upper($letters[$i])) {\n \
    \     $encoded .= strtolower($letters[$i]);\n    } else if (ctype_lower($letters[$i]))\
    \ {\n      $encoded .= strtoupper($letters[$i]);\n    } else {\n      $encoded\
    \ .= $letters[$i];\n    }\n    if (in_array($letters[$i], $vowels)) {\n      $vowelIndex\
    \ = array_search($letters[$i], $vowels);\n      $encoded .= $vowels[($vowelIndex\
    \ + 2) % 5];\n    }\n  }\n  return $encoded;\n}", "\t$output = '';\n\t//your code\
    \ goes here!\n\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t$alphabet = ['a', 'b',\
    \ 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r',\
    \ 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'];\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\t$letter = $message[$i];\n\t\t$lowerCase = strtolower($letter);\n\
    \t\tif (in_array($lowerCase, $vowels)) {\n\t\t\t$index = array_search($lowerCase,\
    \ $alphabet);\n\t\t\t$output .= $alphabet[$index + 2];\n\t\t} else {\n\t\t\t$output\
    \ .= ctype_upper($letter) ? strtoupper($lowerCase) : $lowerCase;\n\t\t}\n\t}\n\
    \t\n\treturn $output;\n}\n\necho encode(\"test\") . PHP_EOL;\necho encode(\"This\
    \ is a message\") . PHP_EOL;", "\t$alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n\
    \t$count = 0;\n\t$messageArr = str_split($message);\n\t$newMessage = \"\";\n\t\
    for ($i = 0; $i < sizeof($messageArr); $i++) {\n\t\t$char = $messageArr[$i];\n\
    \t\tif ($char == \" \") {\n\t\t\t$newMessage .= \" \";\n\t\t} else {\n\t\t\t$newMessage\
    \ .= $char;\n\t\t}\n\t}\n\techo $newMessage;\n}\necho encode(\"test\");\necho\
    \ \"\\n\";\necho encode(\"This is a message\");", "\t$alphabet = array(\n\t\t\
    'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p',\
    \ 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'\n\t);\n\t$vowels = array('a',\
    \ 'e', 'i', 'o', 'u');\n\t$new_message = '';\n\t$message = strtolower($message);\n\
    \tfor ($i = 0; $i < strlen($message); $i++) {\n\t\tif (in_array($message[$i],\
    \ $vowels)) {\n\t\t\t$new_message .= $alphabet[array_search($message[$i], $alphabet)\
    \ + 2];\n\t\t} else {\n\t\t\t$new_message .= $message[$i];\n\t\t}\n\t}\n\treturn\
    \ $new_message;\n}\n\necho encode(\"This is a message\");\n", "\t$message = strtolower($message);\n\
    \t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t$encoded = \"\";\n\tfor ($i = 0; $i\
    \ < strlen($message); $i++) {\n\t\t$encoded .= in_array($message[$i], $vowels)\
    \ ? \n\t\t\t\t\t\tchr(ord($message[$i]) + 2) : \n\t\t\t\t\t\tchr(ord($message[$i])\
    \ - 32);\n\t}\n\treturn $encoded;\n}\necho encode(\"This is a message\");", "\n\
    }\n", "  $encodedMessage = '';\n  $vowels = ['a', 'e', 'i', 'o', 'u'];\n  $message\
    \ = strtolower($message);\n  for ($i = 0; $i < strlen($message); $i++) {\n   \
    \ $letter = $message[$i];\n    if (in_array($letter, $vowels)) {\n      // get\
    \ the current vowel's position\n      $position = array_search($letter, $vowels);\n\
    \      // add two to the position\n      $newPosition = $position + 2;\n     \
    \ // get the letter at the new position\n      $newLetter = $vowels[$newPosition];\n\
    \      // add it to the encoded message\n      $encodedMessage .= $newLetter;\n\
    \    } else {\n      $encodedMessage .= $letter;\n    }\n  }\n  return $encodedMessage;\n\
    }\n\necho encode('test') . PHP_EOL;\necho encode('This is a message') . PHP_EOL;",
  "\t// your code here\n\t$message = strtolower($message);\n\t$encoded = \"\";\n\t\
    $alphabet = range('a', 'z');\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\
    \tif (in_array($message[$i], $alphabet)) {\n\t\t\tif ($message[$i] == 'a' || $message[$i]\
    \ == 'e' || $message[$i] == 'i' || $message[$i] == 'o' || $message[$i] == 'u')\
    \ {\n\t\t\t\t$index = array_search($message[$i], $alphabet);\n\t\t\t\t$encoded\
    \ .= $alphabet[($index + 2) % 26];\n\t\t\t} else {\n\t\t\t\t$encoded .= $message[$i];\n\
    \t\t\t}\n\t\t} else {\n\t\t\t$encoded .= $message[$i];\n\t\t}\n\t}\n\treturn $encoded;\n\
    }", "    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $encode = array();\n \
    \   $message = strtolower($message);\n    $message = str_split($message);\n  \
    \  foreach ($message as $letter) {\n        if (in_array($letter, $vowels)) {\n\
    \            $encode[] = $vowels[(array_search($letter, $vowels) + 2) % count($vowels)];\n\
    \        } else {\n            $encode[] = $letter;\n        }\n    }\n    return\
    \ implode($encode);\n}\n", "\t$encodedMessage = \"\";\n\t$vowels = array(\"a\"\
    , \"e\", \"i\", \"o\", \"u\");\n\t\n\t$encodeArr = str_split($message);\n\t\n\t\
    for ($i = 0; $i < count($encodeArr); $i++) {\n\t\tif (in_array($encodeArr[$i],\
    \ $vowels)) {\n\t\t\tif ($encodeArr[$i] == \"u\") {\n\t\t\t\t$encodedMessage .=\
    \ \"a\";\n\t\t\t} else {\n\t\t\t\t$encodedMessage .= chr(ord($encodeArr[$i]) +\
    \ 2);\n\t\t\t}\n\t\t} else {\n\t\t\t$encodedMessage .= $encodeArr[$i];\n\t\t}\n\
    \t}\n\t\n\treturn strtoupper($encodedMessage);\n}\n\nprint encode(\"this is a\
    \ message\") . \"\\n\";", "  $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\"\
    );\n  $encoded = \"\";\n  for ($i = 0; $i < strlen($message); $i++) {\n    if\
    \ (in_array(strtolower($message[$i]), $vowels)) {\n      if ($message[$i] == \"\
    Z\" || $message[$i] == \"z\") {\n        $encoded .= \"b\";\n      } else if ($message[$i]\
    \ == \"Y\" || $message[$i] == \"y\") {\n        $encoded .= \"a\";\n      } else\
    \ {\n        $encoded .= ++$message[$i];\n      }\n    } else if (strtoupper($message[$i])\
    \ === $message[$i]) {\n      $encoded .= strtolower($message[$i]);\n    } else\
    \ {\n      $encoded .= strtoupper($message[$i]);\n    }\n  }\n  return $encoded;\n\
    }\n\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\
    \\n\";", "    // Write your code here!\n}\n", "    $a = array(\"a\", \"e\", \"\
    i\", \"o\", \"u\");\n    $b = array(\"c\", \"g\", \"k\", \"o\", \"s\");\n    $replaced\
    \ = str_replace($a, $b, $message);\n    $encoded = strtoupper($replaced);\n  \
    \  return $encoded;\n}\n\necho encode(\"This is a message\");", "    $vowels =\
    \ [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    $encrypted = \"\";\n    for ($i =\
    \ 0; $i < strlen($message); $i++) {\n        if (in_array(strtolower($message[$i]),\
    \ $vowels)) {\n            $encrypted .= get_vowel(strtolower($message[$i]));\n\
    \        } else if (ctype_upper($message[$i])) {\n            $encrypted .= strtolower($message[$i]);\n\
    \        } else {\n            $encrypted .= strtoupper($message[$i]);\n     \
    \   }\n    }\n    return $encrypted;\n}\n", "  $lower = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n  $upper = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n  $vowels = \"aeiou\";\n  $encoded\
    \ = \"\";\n  for ($i = 0; $i < strlen($message); $i++) {\n    $vowel = false;\n\
    \    for ($j = 0; $j < strlen($vowels); $j++) {\n      if ($message[$i] == $vowels[$j])\
    \ {\n        $vowel = true;\n        $encoded .= $vowels[($j + 2) % 5];\n    \
    \  }\n    }\n    if (!$vowel) {\n      $encoded .= $message[$i];\n    }\n  }\n\
    \  for ($i = 0; $i < strlen($encoded); $i++) {\n    for ($j = 0; $j < strlen($lower);\
    \ $j++) {\n      if ($encoded[$i] == $lower[$j]) {\n        $encoded[$i] = $upper[$j];\n\
    \      } else if ($encoded[$i] == $upper[$j]) {\n        $encoded[$i] = $lower[$j];\n\
    \      }\n    }\n  }\n  return $encoded;\n}\necho encode(\"This is a message\"\
    ) . \"\\n\";", "\t$secret = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\
    \t\t$letter = $message[$i];\n\t\tif (ctype_lower($letter)) {\n\t\t\t$secret .=\
    \ strtoupper($letter);\n\t\t} else {\n\t\t\t$secret .= strtolower($letter);\n\t\
    \t}\n\t}\n\t$secret = str_replace(array('a', 'e', 'i', 'o', 'u'), array('c', 'g',\
    \ 'k', 's', 'y'), $secret);\n\treturn $secret;\n}\n\necho encode(\"This is a message\"\
    );", "    $alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    $vowels = ['A', 'E',\
    \ 'I', 'O', 'U'];\n    $encodedMessage = '';\n    $message = strtoupper($message);\n\
    \    for ($i = 0; $i < strlen($message); $i++) {\n        $char = $message[$i];\n\
    \        $letterPosition = strpos($alphabet, $char);\n        if ($letterPosition\
    \ === false) {\n            $encodedMessage .= $char;\n        } else {\n    \
    \        if (in_array($char, $vowels)) {\n                $encodedMessage .= $alphabet[($letterPosition\
    \ + 2) % 26];\n            } else {\n                $encodedMessage .= strtolower($char);\n\
    \            }\n        }\n    }\n    return $encodedMessage;\n}\n\n$message =\
    \ 'Test';\n$encodedMessage = encode($message);\necho \"Message: $message, Encoded\
    \ message: $encodedMessage\\n\";\n$message = 'This is a message';\n$encodedMessage\
    \ = encode($message);\necho \"Message: $message, Encoded message: $encodedMessage\\\
    n\";", "    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $array =\
    \ str_split($message);\n    $alphabet = str_split(\"abcdefghijklmnopqrstuvwxyz\"\
    );\n    $encodedArray = array();\n    foreach ($array as $letter) {\n        if\
    \ (in_array($letter, $vowels)) {\n            $index = array_search($letter, $vowels);\n\
    \            if ($index == 4) {\n                $index = -1;\n            }\n\
    \            $encodedArray[] = $vowels[$index + 2];\n        } else if (ctype_upper($letter))\
    \ {\n            $encodedArray[] = strtolower($letter);\n        } else if (ctype_lower($letter))\
    \ {\n            $encodedArray[] = strtoupper($letter);\n        } else {\n  \
    \          $encodedArray[] = $letter;\n        }\n    }\n    return implode(\"\
    \", $encodedArray);\n}\n\necho encode(\"test\");\necho \"\\n\";\necho encode(\"\
    This is a message\");\necho \"\\n\";\necho encode(\"This is a message!\");\necho\
    \ \"\\n\";\necho encode(\"!@#$%\");\necho \"\\n\";\necho encode(\"12345\");\n\
    echo \"\\n\";\necho encode(\"This is a longer message that should be encrypted\
    \ in more time and space.\");\necho \"\\n\";", "\t$vowels = array(\"a\", \"e\"\
    , \"i\", \"o\", \"u\");\n\t$encoded = \"\";\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\tif (in_array(strtolower($message[$i]), $vowels)) {\n\t\t\t$encoded\
    \ .= encodeVowel($message[$i]);\n\t\t} else {\n\t\t\t$encoded .= ($message[$i]\
    \ == strtoupper($message[$i])) ? strtolower($message[$i]) : strtoupper($message[$i]);\n\
    \t\t}\n\t}\n\treturn $encoded;\n}\n", "\t$message_split = str_split($message);\n\
    \t$alphabet = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm',\
    \ 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'];\n\t$vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n\t$code = [];\n\tforeach ($message_split as $key\
    \ => $value) {\n\t\tif (in_array($value, $vowels)) {\n\t\t\t$vowel_key = array_search($value,\
    \ $vowels);\n\t\t\tif ($vowel_key == 4) {\n\t\t\t\t$code[$key] = $vowels[0];\n\
    \t\t\t} else {\n\t\t\t\t$code[$key] = $vowels[$vowel_key + 1];\n\t\t\t}\n\t\t\
    } else {\n\t\t\t$code[$key] = $value;\n\t\t}\n\t}\n\t$code = implode($code);\n\
    \treturn strtoupper($code);\n}\necho encode(\"This is a message\");", "    //\
    \ your code here\n}\n\n$results = encode(\"Hello\");\nvar_dump($results);", "\t\
    $vowels = ['a', 'e', 'i', 'o', 'u'];\n\t$alphabet = range('a', 'z');\n\t$message\
    \ = strtolower($message);\n\t$encoded = '';\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\tif (in_array($message[$i], $vowels)) {\n\t\t\t$index = array_search($message[$i],\
    \ $alphabet);\n\t\t\t$encoded .= $alphabet[$index + 2];\n\t\t} else {\n\t\t\t\
    $encoded .= $message[$i];\n\t\t}\n\t}\n\treturn $encoded;\n}\n", "    $ret = \"\
    \";\n    for ($i = 0; $i < strlen($message); $i++) {\n        $c = $message[$i];\n\
    \        $c = ($c >= 'a' && $c <= 'z') ? $c : strtolower($c);\n        if ($c\
    \ >= 'a' && $c <= 'z') {\n            $ret .= $c == 'z' ? 'a' : chr(ord($c) +\
    \ 1);\n        } else {\n            $ret .= $c;\n        }\n    }\n    return\
    \ $ret;\n}\n", "  $alphabet = 'abcdefghijklmnopqrstuvwxyz';\n  $encoded = '';\n\
    \  foreach (str_split($message) as $letter) {\n    if (preg_match('/[a-z]/i',\
    \ $letter)) {\n      $letter = strtolower($letter);\n      $idx = strpos($alphabet,\
    \ $letter);\n      $encoded .= strtoupper($alphabet[$idx + 2]);\n    } else {\n\
    \      $encoded .= $letter;\n    }\n  }\n  return $encoded;\n}\n", "    $vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    $message = strtolower($message);\n    $message\
    \ = str_split($message);\n    foreach ($message as $key => $char) {\n        if\
    \ (in_array($char, $vowels)) {\n            $message[$key] = getNextVowel($char);\n\
    \        } else {\n            $message[$key] = strtoupper($char);\n        }\n\
    \    }\n    return implode('', $message);\n}\n", "  // return strtoupper($message);\n\
    \  // Your code here\n  $ascii_code = 0;\n  $encode_message = \"\";\n  for ($i\
    \ = 0; $i < strlen($message); $i++) {\n  \t$ascii_code = ord($message[$i]);\n\
    \  \tif ($ascii_code >= 65 && $ascii_code <= 90) {\n  \t\t$ascii_code += 32;\n\
    \  \t} elseif ($ascii_code >= 97 && $ascii_code <= 122) {\n  \t\t$ascii_code -=\
    \ 32;\n  \t} elseif ($ascii_code == 97) {\n  \t\t$ascii_code = 99;\n  \t} elseif\
    \ ($ascii_code == 101) {\n  \t\t$ascii_code = 102;\n  \t} elseif ($ascii_code\
    \ == 105) {\n  \t\t$ascii_code = 107;\n  \t} elseif ($ascii_code == 111) {\n \
    \ \t\t$ascii_code = 112;\n  \t} elseif ($ascii_code == 117) {\n  \t\t$ascii_code\
    \ = 118;\n  \t}\n  \t$encode_message .= chr($ascii_code);\n  }\n  return $encode_message;\n\
    }\n", "\t$alphabet = array(\n\t\t\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"\
    g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\",\n\t\t\"n\", \"o\", \"p\", \"q\"\
    , \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"\n\t);\n\t$vowels\
    \ = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$message = strtolower($message);\n\
    \t$message = str_split($message);\n\t$new_message = \"\";\n\tforeach ($message\
    \ as $letter) {\n\t\t$letter_index = array_search($letter, $alphabet);\n\t\tif\
    \ ($letter_index) {\n\t\t\t$letter_index = $letter_index + 2;\n\t\t\tif ($letter_index\
    \ > 25) {\n\t\t\t\t$letter_index = $letter_index - 26;\n\t\t\t}\n\t\t\t$letter\
    \ = $alphabet[$letter_index];\n\t\t}\n\t\t$new_message .= $letter;\n\t}\n\treturn\
    \ $new_message;\n}\n\nvar_dump(encode(\"test\"));\nvar_dump(encode(\"This is a\
    \ message\"));\nvar_dump(encode(\"@#$%^&*()\"));\n", "\t//Start with the message\
    \ in all lowercase\n\t$message = strtolower($message);\n\t$vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n\t$newMessage = '';\n\t$length = strlen($message);\n\t//For\
    \ each character in the message, check if it is a vowel.\n\t//If it is, replace\
    \ it with the letter two ahead in the alphabet\n\t//If it is not, capitalize it\n\
    \tfor ($i = 0; $i < $length; $i++) {\n\t\tif (in_array($message[$i], $vowels))\
    \ {\n\t\t\t$key = array_search($message[$i], $vowels);\n\t\t\tif ($key == 4) {\n\
    \t\t\t\t$newMessage .= $vowels[0];\n\t\t\t} else {\n\t\t\t\t$newMessage .= $vowels[$key\
    \ + 1];\n\t\t\t}\n\t\t} else {\n\t\t\t$newMessage .= strtoupper($message[$i]);\n\
    \t\t}\n\t}\n\treturn $newMessage;\n}\necho encode(\"test\") . PHP_EOL;\necho encode(\"\
    This is a message\") . PHP_EOL;\n", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\
    \t$result = \"\";\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\tif (ctype_upper($message[$i]))\
    \ {\n\t\t\t$result .= strtolower($message[$i]);\n\t\t} else if (ctype_lower($message[$i]))\
    \ {\n\t\t\t$result .= strtoupper($message[$i]);\n\t\t} else {\n\t\t\t$result .=\
    \ $message[$i];\n\t\t}\n\t}\n\tfor ($i = 0; $i < count($vowels); $i++) {\n\t\t\
    $result = str_replace($vowels[$i], $vowels[($i + 2) % 5], $result);\n\t}\n\treturn\
    \ $result;\n}\necho encode(\"This is a test\") . \"\\n\";\necho encode(\"This\
    \ is a message\") . \"\\n\";", "    $message = strtolower($message);\n    $message\
    \ = str_split($message);\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    foreach\
    \ ($message as $key => $letter) {\n        if (in_array($letter, $vowels)) {\n\
    \            $message[$key] = $vowels[($vowels.indexOf($letter) + 2) % 5];\n \
    \       }\n    }\n    $message = strtoupper($message);\n    return $message;\n\
    }", "\n$vowels = array('a', 'e', 'i', 'o', 'u');\n", "    // write code here...\n\
    }", "  return preg_replace_callback(\"/[aeiou]/\", function($matches) {\n    return\
    \ chr(ord($matches[0]) + 2);\n  }, strtoupper($message));\n}", "    $alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    $vowels = array(\"a\", \"e\", \"i\",\
    \ \"o\", \"u\");\n    $encoded = \"\";\n    for ($i = 0; $i < strlen($message);\
    \ $i++) {\n        $char = strtolower($message[$i]);\n        if (ctype_alpha($char))\
    \ {\n            if (ctype_upper($char)) {\n                $encoded .= strtoupper($char);\n\
    \            } else {\n                $index = strpos($alphabet, $char);\n  \
    \              if (in_array($char, $vowels)) {\n                    $encoded .=\
    \ $alphabet[($index + 2) % 26];\n                } else {\n                  \
    \  $encoded .= $char;\n                }\n            }\n        } else {\n  \
    \          $encoded .= $char;\n        }\n    }\n    return $encoded;\n}\necho\
    \ encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\\n\";",
  "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $message = strtolower($message);\n\
    \    $encoded_message = \"\";\n    for ($i = 0; $i < strlen($message); $i++) {\n\
    \        $char = $message[$i];\n        if (in_array($char, $vowels)) {\n    \
    \        $pos = strpos($vowels, $char);\n            $next_pos = $pos + 2;\n \
    \           if ($next_pos > (count($vowels) - 1)) {\n                $next_pos\
    \ = $next_pos - count($vowels);\n            }\n            $char = $vowels[$next_pos];\n\
    \        } else {\n            $char = strtoupper($char);\n        }\n       \
    \ $encoded_message .= $char;\n    }\n    return $encoded_message;\n}\n\necho encode(\"\
    test\") . \"\\n\";\necho encode(\"This is a message\") . \"\\n\";\n", "\t$alphabet\
    \ = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n\t$message = strtoupper($message);\n\t$message\
    \ = str_split($message);\n\tforeach ($message as $key => $value) {\n\t\tif (strpos($alphabet,\
    \ $value) !== false) {\n\t\t\t$message[$key] = $alphabet[(strpos($alphabet, $value)\
    \ + 2) % 26];\n\t\t}\n\t}\n\treturn implode(\"\", $message);\n}\necho encode(\"\
    This is a message\");", "    //your code here\n    $result = '';\n    $vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    $message = strtolower($message);\n    for\
    \ ($i = 0; $i < strlen($message); $i++) {\n        if (in_array($message[$i],\
    \ $vowels)) {\n            if ($message[$i] == 'z') {\n                $result\
    \ .= 'b';\n            } else if ($message[$i] == 'u') {\n                $result\
    \ .= 'a';\n            } else {\n                $result .= chr(ord($message[$i])\
    \ + 2);\n            }\n        } else {\n            $result .= $message[$i];\n\
    \        }\n    }\n    return $result;\n}\n\necho encode(\"test\");\necho \"\\\
    n\";\necho encode(\"This is a message\");\necho \"\\n\";", "  $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n  $vowels = \"aeiou\";\n  $map = array();\n  $encodeMsg = '';\n  $indexVowel\
    \ = array();\n  $indexLetter = array();\n  $indexAlphabet = array();\n  for ($i\
    \ = 0; $i < strlen($alphabet); $i++) {\n    if (strpos($vowels, $alphabet[$i])\
    \ !== false) {\n      $indexVowel[] = $i;\n    }\n    $indexLetter[] = $i;\n \
    \   $indexAlphabet[] = $i;\n  }\n  for ($i = 0; $i < count($indexVowel); $i++)\
    \ {\n    $map[$alphabet[$indexVowel[$i]]] = $alphabet[($indexVowel[$i] + 2) %\
    \ 26];\n  }\n  for ($i = 0; $i < strlen($message); $i++) {\n    if (strpos($alphabet,\
    \ $message[$i]) !== false) {\n      if (strpos($vowels, $message[$i]) !== false)\
    \ {\n        $encodeMsg .= $map[$message[$i]];\n      } else {\n        $encodeMsg\
    \ .= strtoupper($message[$i]);\n      }\n    } else {\n      $encodeMsg .= $message[$i];\n\
    \    }\n  }\n  return $encodeMsg;\n}\n\necho encode(\"This is a message\") . \"\
    \\n\";", "    $alphabet = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k',\
    \ 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'];\n\
    \    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $message = strtolower($message);\n\
    \    $messageArray = str_split($message);\n    $messageArray = array_map(function($message)\
    \ use ($alphabet, $vowels) {\n        $message = (in_array($message, $vowels))\
    \ ? $alphabet[(array_search($message, $alphabet) + 2) % 26] : $message;\n    \
    \    $message = (ctype_upper($message)) ? strtoupper($message) : $message;\n \
    \       return $message;\n    }, $messageArray);\n    return implode($messageArray);\n\
    }\n", "\t$vowels = \"aeiou\";\n\t$result = \"\";\n\t$count = 0;\n\t$len = strlen($message);\n\
    \twhile ($count < $len) {\n\t\t$char = strtolower($message[$count]);\n\t\tif (ctype_alpha($char))\
    \ {\n\t\t\tif (ctype_upper($message[$count])) {\n\t\t\t\t$result .= strtoupper(swapCase($char,\
    \ $vowels));\n\t\t\t} else {\n\t\t\t\t$result .= swapCase($char, $vowels);\n\t\
    \t\t}\n\t\t} else {\n\t\t\t$result .= $message[$count];\n\t\t}\n\t\t$count++;\n\
    \t}\n\treturn $result;\n}\n", "\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t$message\
    \ = strtolower($message);\n\t$new_message = '';\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\t$new_message .= (in_array($message[$i], $vowels)) ? \n\t\t$vowels[(array_search($message[$i],\
    \ $vowels) + 2) % 5] : $message[$i];\n\t}\n\treturn $new_message;\n}\n\necho encode(\"\
    test\") . \"\\n\";\necho encode(\"This is a message\") . \"\\n\";\n", "    $message_array\
    \ = str_split($message);\n    $encoded_array = [];\n    $vowels = [\"a\", \"e\"\
    , \"i\", \"o\", \"u\"];\n    foreach ($message_array as $char) {\n        if (ctype_upper($char))\
    \ {\n            if (in_array(strtolower($char), $vowels)) {\n               \
    \ array_push($encoded_array, ucfirst(next_vowel(strtolower($char))));\n      \
    \      } else {\n                array_push($encoded_array, strtolower($char));\n\
    \            }\n        } else {\n            if (in_array($char, $vowels)) {\n\
    \                array_push($encoded_array, next_vowel($char));\n            }\
    \ else {\n                array_push($encoded_array, $char);\n            }\n\
    \        }\n    }\n    return implode($encoded_array);\n}\n", "    $alphabet =\
    \ ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'];\n\
    \    $vowels = ['a','e','i','o','u'];\n    $message = strtolower($message);\n\
    \    $arr = str_split($message);\n    $index = 0;\n    foreach ($arr as $value)\
    \ {\n        if (in_array($value, $vowels)) {\n            $index = array_search($value,\
    \ $alphabet);\n            $arr[$index] = $alphabet[$index + 2];\n        }\n\
    \    }\n    return implode($arr);\n}", "\t$ret = array();\n\tforeach(str_split($message)\
    \ as $letter) {\n\t\t$lower = strtolower($letter);\n\t\tif ($lower == 'z') $lower\
    \ = 'b';\n\t\tif ($lower == 'y') $lower = 'a';\n\t\tswitch($lower) {\n\t\t\tcase\
    \ 'a': $encode = 'c'; break;\n\t\t\tcase 'e': $encode = 'g'; break;\n\t\t\tcase\
    \ 'i': $encode = 'k'; break;\n\t\t\tcase 'o': $encode = 'q'; break;\n\t\t\tcase\
    \ 'u': $encode = 'y'; break;\n\t\t\tdefault: $encode = $letter;\n\t\t}\n\t\tif\
    \ (ctype_upper($letter)) $encode = strtoupper($encode);\n\t\t$ret[] = $encode;\n\
    \t}\n\treturn implode('', $ret);\n}\n", "\t$result = '';\n\t$vowels = array('a',\
    \ 'e', 'i', 'o', 'u');\n\t$message = strtolower($message);\n\tfor ($i = 0; $i\
    \ < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\t\t$result .= in_array($char,\
    \ $vowels) ? $vowels[(array_search($char, $vowels) + 2) % 5] : $char;\n\t}\n\t\
    return strtoupper($result);\n}\nprint encode(\"This is a message\");", "\t$characters\
    \ = str_split($message);\n\t$encode_characters = [];\n\t$vowels = ['a', 'e', 'i',\
    \ 'o', 'u'];\n\tforeach ($characters as $character) {\n\t\tif (ctype_upper($character))\
    \ {\n\t\t\t$encode_characters[] = strtolower($character);\n\t\t} else if (ctype_lower($character))\
    \ {\n\t\t\t$encode_characters[] = strtoupper($character);\n\t\t} else {\n\t\t\t\
    $encode_characters[] = $character;\n\t\t}\n\t}\n\t$encode_characters = implode('',\
    \ $encode_characters);\n\t$encode_characters = str_split($encode_characters);\n\
    \t$vowels_encode_characters = [];\n\tforeach ($encode_characters as $encode_character)\
    \ {\n\t\tif (in_array($encode_character, $vowels)) {\n\t\t\t$vowels_encode_characters[]\
    \ = $encode_character;\n\t\t}\n\t}\n\t$vowels_encode_characters = implode('',\
    \ $vowels_encode_characters);\n\t$vowels_encode_characters = str_split($vowels_encode_characters);\n\
    \t$vowels_encode_characters_two_places_ahead = [];\n\tforeach ($vowels_encode_characters\
    \ as $vowels_encode_character) {\n\t\tif ($vowels_encode_character == 'a') {\n\
    \t\t\t$vowels_encode_characters_two_places_ahead[] = 'c';\n\t\t} else if ($vowels_encode_character\
    \ == 'e') {\n\t\t\t$vowels_encode_characters_two_places_ahead[] = 'g';\n\t\t}\
    \ else if ($vowels_encode_character == 'i') {\n\t\t\t$vowels_encode_characters_two_places_ahead[]\
    \ = 'k';\n\t\t} else if ($", "\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t$newMessage\
    \ = '';\n\t$message = strtolower($message);\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\t$currentLetter = $message[$i];\n\t\tif (in_array($currentLetter,\
    \ $vowels)) {\n\t\t\t$currentLetter = $vowels[array_search($currentLetter, $vowels)\
    \ + 2];\n\t\t} else {\n\t\t\t$currentLetter = $currentLetter;\n\t\t}\n\t\t$newMessage\
    \ .= $currentLetter;\n\t}\n\treturn $newMessage;\n}\n", "    $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    $vowels = \"aeiou\";\n    $messageArray = str_split($message);\n    $encodedMessage\
    \ = \"\";\n    for ($i = 0; $i < count($messageArray); $i++) {\n        if (ctype_upper($messageArray[$i]))\
    \ {\n            $messageArray[$i] = strtolower($messageArray[$i]);\n        }\n\
    \        if (strstr($vowels, $messageArray[$i])) {\n            $vowelIndex =\
    \ strpos($vowels, $messageArray[$i]);\n            $messageArray[$i] = $vowels[($vowelIndex\
    \ + 2) % 5];\n        }\n        $encodedMessage .= $messageArray[$i];\n    }\n\
    \    return strtoupper($encodedMessage);\n}", "\t$chars = str_split($message);\n\
    \t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t$encoded = \"\";\n\tforeach ($chars\
    \ as $char) {\n\t\t$lowerChar = strtolower($char);\n\t\tif (in_array($lowerChar,\
    \ $vowels)) {\n\t\t\t$charIndex = array_search($lowerChar, $vowels);\n\t\t\t$charIndex\
    \ += 2;\n\t\t\tif ($charIndex > count($vowels) - 1) {\n\t\t\t\t$charIndex = $charIndex\
    \ - count($vowels);\n\t\t\t}\n\t\t\t$char = $vowels[$charIndex];\n\t\t}\n\t\t\
    if (ctype_upper($char)) {\n\t\t\t$encoded .= strtolower($char);\n\t\t} else {\n\
    \t\t\t$encoded .= strtoupper($char);\n\t\t}\n\t}\n\treturn $encoded;\n}", "\t\
    $vowels = array('a', 'e', 'i', 'o', 'u');\n\t$new_message = '';\n\tfor ($i = 0;\
    \ $i < strlen($message); $i++) {\n\t\t$letter = strtolower($message[$i]);\n\t\t\
    if (in_array($letter, $vowels)) {\n\t\t\t$new_message .= $vowels[array_search($letter,\
    \ $vowels) + 2];\n\t\t} else {\n\t\t\t$new_message .= $letter;\n\t\t}\n\t}\n\t\
    return $new_message;\n}\n\necho encode(\"This is a message\") . PHP_EOL;", "\n\
    }\n", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\t$vowels = array(\"a\"\
    , \"e\", \"i\", \"o\", \"u\");\n\t$output = \"\";\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\t$char = $message[$i];\n\t\tif (ctype_upper($char)) {\n\t\t\t$output\
    \ .= strtolower($char);\n\t\t} else if (ctype_lower($char)) {\n\t\t\t$output .=\
    \ strtoupper($char);\n\t\t} else {\n\t\t\t$output .= $char;\n\t\t}\n\t}\n\tfor\
    \ ($i = 0; $i < strlen($output); $i++) {\n\t\tif (in_array($output[$i], $vowels))\
    \ {\n\t\t\t$idx = strpos($alphabet, $output[$i]) + 2;\n\t\t\tif ($idx > 25) {\n\
    \t\t\t\t$idx -= 26;\n\t\t\t}\n\t\t\t$output[$i] = $alphabet[$idx];\n\t\t}\n\t\
    }\n\treturn $output;\n}", "\t$newmessage = \"\";\n\t$vowels = array('a', 'e',\
    \ 'i', 'o', 'u');\n\t$len = strlen($message);\n\tfor ($i = 0; $i < $len; $i++)\
    \ {\n\t\t$char = $message[$i];\n\t\tif (ord($char) > 64 && ord($char) < 91) {\n\
    \t\t\t$char = chr(ord($char) + 32);\n\t\t}\n\t\tif (ord($char) > 96 && ord($char)\
    \ < 123) {\n\t\t\tif (in_array($char, $vowels)) {\n\t\t\t\tif ($char == 'u') {\n\
    \t\t\t\t\t$char = 'a';\n\t\t\t\t} else if ($char == 'z') {\n\t\t\t\t\t$char =\
    \ 'b';\n\t\t\t\t} else {\n\t\t\t\t\t$char = chr(ord($char) + 2);\n\t\t\t\t}\n\t\
    \t\t}\n\t\t}\n\t\t$newmessage .= $char;\n\t}\n\treturn $newmessage;\n}\n\necho\
    \ encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\\n\";",
  "\t$lower = \"abcdefghijklmnopqrstuvwxyz\";\n\t$upper = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n\t$new_message = \"\";\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t\
    if (ctype_upper($message[$i])) {\n\t\t\t$new_message .= strtolower($message[$i]);\n\
    \t\t} else if (ctype_lower($message[$i])) {\n\t\t\t$new_message .= strtoupper($message[$i]);\n\
    \t\t} else {\n\t\t\t$new_message .= $message[$i];\n\t\t}\n\t}\n\t$vowels = \"\
    aeiou\";\n\tfor ($i = 0; $i < strlen($new_message); $i++) {\n\t\tif (strpos($vowels,\
    \ $new_message[$i]) !== false) {\n\t\t\t$new_message[$i] = $lower[strpos($lower,\
    \ $new_message[$i]) + 2];\n\t\t}\n\t}\n\treturn $new_message;\n}\necho encode(\"\
    This is a message\") . \"\\n\";", "\t$vowels = array(\"a\", \"e\", \"i\", \"o\"\
    , \"u\");\n\t$message = strtolower($message);\n\t$encodedMessage = \"\";\n\t$len\
    \ = strlen($message);\n\tfor ($i = 0; $i < $len; $i++) {\n\t\t$character = $message[$i];\n\
    \t\tif (in_array($character, $vowels)) {\n\t\t\t$encodedMessage .= $vowels[(array_search($character,\
    \ $vowels) + 2) % 5];\n\t\t} else if (ctype_upper($character)) {\n\t\t\t$encodedMessage\
    \ .= strtolower($character);\n\t\t} else if (ctype_lower($character)) {\n\t\t\t\
    $encodedMessage .= strtoupper($character);\n\t\t} else {\n\t\t\t$encodedMessage\
    \ .= $character;\n\t\t}\n\t}\n\treturn $encodedMessage;\n}\n", "    $vowels =\
    \ ['a', 'e', 'i', 'o', 'u'];\n    $letters = str_split($message);\n    $encoded\
    \ = \"\";\n    foreach ($letters as $letter) {\n        $upper = strtoupper($letter)\
    \ === $letter;\n        $lower = strtolower($letter) === $letter;\n        if\
    \ ($upper) {\n            $encoded .= strtolower($letter);\n        } else if\
    \ ($lower) {\n            $encoded .= strtoupper($letter);\n        } else {\n\
    \            $encoded .= $letter;\n        }\n    }\n    $encodedArray = str_split($encoded);\n\
    \    $encoded = \"\";\n    foreach ($encodedArray as $letter) {\n        if (in_array($letter,\
    \ $vowels)) {\n            $key = array_search($letter, $vowels);\n          \
    \  $encoded .= $vowels[($key + 2) % 5];\n        } else {\n            $encoded\
    \ .= $letter;\n        }\n    }\n    return $encoded;\n}\n\necho encode(\"test\"\
    );\necho \"\\n\";\necho encode(\"This is a message\");", "\t// TODO\n}", "\t$alpha\
    \ = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n\t$output = \"\";\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\t$current = strtoupper($message[$i]);\n\t\tif (ctype_upper($current))\
    \ {\n\t\t\t$current = strtolower($current);\n\t\t} else if (ctype_lower($current))\
    \ {\n\t\t\t$current = strtoupper($current);\n\t\t}\n\t\t$index = strpos($alpha,\
    \ $current);\n\t\tif ($index === false) {\n\t\t\t$output .= $message[$i];\n\t\t\
    } else {\n\t\t\t$index += 2;\n\t\t\tif ($index > 25) {\n\t\t\t\t$index -= 26;\n\
    \t\t\t}\n\t\t\t$output .= $alpha[$index];\n\t\t}\n\t}\n\treturn $output;\n}\n\
    $message = \"This is a message\";\necho encode($message);", "    $alphabet = ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'];\n\
    \    $vowels = ['a','e','i','o','u'];\n    $message = strtolower($message);\n\
    \    $newMessage = '';\n    for ($i = 0; $i < strlen($message); $i++) {\n    \
    \    if (in_array($message[$i], $vowels)) {\n            $key = array_search($message[$i],\
    \ $alphabet);\n            $newMessage .= $alphabet[$key + 2];\n        } else\
    \ {\n            $newMessage .= $message[$i];\n        }\n    }\n    return $newMessage;\n\
    }\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $encoded_message = \"\";\n\
    \    for ($i = 0; $i < strlen($message); $i++) {\n        if (in_array($message[$i],\
    \ $vowels)) {\n            if ($message[$i] == 'u') {\n                $encoded_message\
    \ .= 'a';\n            } else {\n                $encoded_message .= chr(ord($message[$i])\
    \ + 2);\n            }\n        } else {\n            $encoded_message .= $message[$i];\n\
    \        }\n    }\n    return $encoded_message;\n}\n", "\t$vowels = array(\"a\"\
    , \"e\", \"i\", \"o\", \"u\");\n\t$encoded_message = '';\n\tfor ($i = 0; $i <\
    \ strlen($message); $i++) {\n\t\tif (in_array(strtolower($message[$i]), $vowels))\
    \ {\n\t\t\t$value = strtolower($message[$i]);\n\t\t\t$encoded_message .= $vowels[(array_search($value,\
    \ $vowels) + 2) % 5];\n\t\t} else {\n\t\t\t$encoded_message .= $message[$i];\n\
    \t\t}\n\t}\n\treturn $encoded_message;\n}\n$tests = array(\"test\", \"this is\
    \ a message\");\nforeach ($tests as $test) {\n\techo encode($test) . \"<br>\"\
    ;\n}", "  $message = strtolower($message);\n  $vowels = array('a','e','i','o','u');\n\
    \  $output = \"\";\n  for ($i=0; $i < strlen($message); $i++) { \n    $char =\
    \ $message[$i];\n    if(in_array($char, $vowels)) {\n      $index = array_search($char,\
    \ $vowels);\n      $index = ($index + 2) % count($vowels);\n      $output .= $vowels[$index];\n\
    \    } else {\n      $output .= $char;\n    }\n  }\n  return strtoupper($output);\n\
    }", "  $vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n  $result = \"\";\n  for\
    \ ($i = 0; $i < strlen($message); $i++) {\n    $letter = strtolower($message[$i]);\n\
    \    if (in_array($letter, $vowels)) {\n      $result .= $vowels[(array_search($letter,\
    \ $vowels) + 2) % 5];\n    } else {\n      $result .= $letter;\n    }\n  }\n \
    \ return $result;\n}\n\necho encode(\"test\");\necho encode(\"This is a message\"\
    );", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\t$vowels = \"aeiou\";\n\t\
    $encodedMessage = \"\";\n\t$upperCase = false;\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\t$position = strpos($alphabet, strtolower($message[$i]));\n\t\t\
    if ($position === false) {\n\t\t\t$encodedMessage .= $message[$i];\n\t\t} else\
    \ if (ctype_upper($message[$i])) {\n\t\t\t$upperCase = true;\n\t\t} else {\n\t\
    \t\t$upperCase = false;\n\t\t}\n\t\tif ($position !== false) {\n\t\t\tif (strpos($vowels,\
    \ strtolower($message[$i])) !== false) {\n\t\t\t\t$position += 2;\n\t\t\t\tif\
    \ ($position > 25) {\n\t\t\t\t\t$position = $position - 26;\n\t\t\t\t}\n\t\t\t\
    }\n\t\t\tif ($upperCase) {\n\t\t\t\t$encodedMessage .= strtoupper($alphabet[$position]);\n\
    \t\t\t} else {\n\t\t\t\t$encodedMessage .= $alphabet[$position];\n\t\t\t}\n\t\t\
    }\n\t}\n\treturn $encodedMessage;\n}\n\necho encode(\"This is a message\");\n",
  "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\t$alphabet .= $alphabet;\n\t$encoded\
    \ = \"\";\n\t$message = strtolower($message);\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\t$index = strpos($alphabet, $message[$i]);\n\t\tif ($index !== false)\
    \ {\n\t\t\t$encoded .= $alphabet[$index + 2];\n\t\t} else {\n\t\t\t$encoded .=\
    \ $message[$i];\n\t\t}\n\t}\n\treturn $encoded;\n}\n", "    $encodedMessage =\
    \ \"\";\n    $vowelsArray = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $messageArray\
    \ = str_split($message);\n    $numVowels = count($vowelsArray);\n    $messageSize\
    \ = count($messageArray);\n    for ($i = 0; $i < $messageSize; $i++) {\n     \
    \   $isLetter = ctype_alpha($messageArray[$i]);\n        if ($isLetter) {\n  \
    \          $isLower = ctype_lower($messageArray[$i]);\n            if ($isLower)\
    \ {\n                $upper = strtoupper($messageArray[$i]);\n               \
    \ $encodedMessage .= $upper;\n            } else {\n                $lower = strtolower($messageArray[$i]);\n\
    \                $encodedMessage .= $lower;\n            }\n        } else {\n\
    \            $encodedMessage .= $messageArray[$i];\n        }\n    }\n    $encodedMessageArray\
    \ = str_split($encodedMessage);\n    $encodedMessageSize = count($encodedMessageArray);\n\
    \    for ($i = 0; $i < $encodedMessageSize; $i++) {\n        for ($j = 0; $j <\
    \ $numVowels; $j++) {\n            if ($encodedMessageArray[$i] == $vowelsArray[$j])\
    \ {\n                $encodedMessageArray[$i] = $vowelsArray[($j + 2) % $numVowels];\n\
    \            }\n        }\n    }\n    $encodedMessage = implode(\"\", $encodedMessageArray);\n\
    \    return $encodedMessage;\n}\n\n$message = \"This is a message\";\n$encodedMessage\
    \ = encode($message);\necho $encodedMessage;", "\n}\n", "    $encoded = '';\n\
    \    $message = strtolower($message);\n    for ($i = 0; $i < strlen($message);\
    \ $i++) {\n        $temp = ord($message[$i]);\n        if ($temp >= 97 && $temp\
    \ <= 102) {\n            $encoded .= chr($temp + 20);\n        } else if ($temp\
    \ >= 103 && $temp <= 122) {\n            $encoded .= chr($temp - 4);\n       \
    \ } else {\n            $encoded .= $message[$i];\n        }\n    }\n    return\
    \ $encoded;\n}\n", "  $result = \"\";\n  $len = strlen($message);\n  for ($i =\
    \ 0; $i < $len; $i++) {\n    $char = $message[$i];\n    if (ctype_upper($char))\
    \ {\n      $result .= strtolower($char);\n    } else if (ctype_lower($char)) {\n\
    \      $result .= strtoupper($char);\n    } else {\n      switch($char) {\n  \
    \      case 'a':\n          $result .= 'c';\n          break;\n        case 'e':\n\
    \          $result .= 'g';\n          break;\n        case 'i':\n          $result\
    \ .= 'k';\n          break;\n        case 'o':\n          $result .= 'q';\n  \
    \        break;\n        case 'u':\n          $result .= 'y';\n          break;\n\
    \        default:\n          $result .= $char;\n      }\n    }\n  }\n  return\
    \ $result;\n}\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\"\
    ) . \"\\n\";", "    $messageArray = str_split($message);\n    $vowels = array('a',\
    \ 'e', 'i', 'o', 'u');\n    $encodedMessage = array();\n    foreach ($messageArray\
    \ as $letter) {\n        $encodedMessage[] = ctype_upper($letter) ? strtolower($letter)\
    \ : strtoupper($letter);\n    }\n    foreach ($encodedMessage as $key => $letter)\
    \ {\n        if (in_array($letter, $vowels)) {\n            $vowelIndex = array_search($letter,\
    \ $vowels);\n            $vowelIndex = ($vowelIndex + 2 > count($vowels) - 1)\
    \ ? 0 : $vowelIndex + 2;\n            $encodedMessage[$key] = $vowels[$vowelIndex];\n\
    \        }\n    }\n    return implode($encodedMessage);\n}\n\necho encode(\"test\"\
    );", "    // your code here\n}\n", "    $encodedString = '';\n    $vowels = ['a',\
    \ 'e', 'i', 'o', 'u'];\n    $letters = str_split($message);\n    foreach ($letters\
    \ as $letter) {\n        if (in_array($letter, $vowels)) {\n            $vowelNumber\
    \ = ord($letter) + 2;\n            $vowel = chr($vowelNumber);\n            $encodedString\
    \ .= $vowel;\n        } else {\n            $encodedString .= $letter;\n     \
    \   }\n    }\n    $encodedString = strtoupper($encodedString);\n    return $encodedString;\n\
    }\necho encode(\"test\");\necho \"\\n\";\necho encode(\"This is a message\");\n\
    echo \"\\n\";\n", "\t$alphabet = range('a', 'z');\n\t$alphabet_upper = range('A',\
    \ 'Z');\n\t$message_encoded = '';\n\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t\
    $vowels_upper = ['A', 'E', 'I', 'O', 'U'];\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\t$letter = $message[$i];\n\t\t$letter_upper = strtoupper($letter);\n\
    \t\t$found = array_search($letter, $alphabet);\n\t\t$found_upper = array_search($letter_upper,\
    \ $alphabet_upper);\n\t\tif ($found_upper !== false) {\n\t\t\tif ($letter_upper\
    \ == 'Z') {\n\t\t\t\t$message_encoded .= 'A';\n\t\t\t} else {\n\t\t\t\t$message_encoded\
    \ .= $alphabet_upper[$found_upper + 2];\n\t\t\t}\n\t\t} elseif ($found !== false)\
    \ {\n\t\t\tif ($letter == 'z') {\n\t\t\t\t$message_encoded .= 'a';\n\t\t\t} else\
    \ {\n\t\t\t\t$message_encoded .= $alphabet[$found + 2];\n\t\t\t}\n\t\t} else {\n\
    \t\t\t$message_encoded .= $letter;\n\t\t}\n\t}\n\treturn $message_encoded;\n}\n",
  "\t$alphabet = array('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l',\
    \ 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z');\n\t$vowels\
    \ = array('a', 'e', 'i', 'o', 'u');\n\t$new_message = '';\n\t$pos = 0;\n\tfor\
    \ ($i = 0; $i < strlen($message); $i++) {\n\t\t$pos = array_search($message[$i],\
    \ $alphabet);\n\t\tif (array_search($message[$i], $vowels) !== false) {\n\t\t\t\
    $new_message .= $alphabet[($pos + 2) % count($alphabet)];\n\t\t} else {\n\t\t\t\
    $new_message .= $alphabet[($pos + (26 - 2)) % count($alphabet)];\n\t\t}\n\t}\n\
    \treturn $new_message;\n}\n", "    $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    $encoded_message = \"\";\n    for ($i = 0; $i < strlen($message); $i++)\
    \ {\n        if (strtolower($message[$i]) == $message[$i]) {\n            $encoded_message\
    \ .= strtoupper($message[$i]);\n        } else {\n            $encoded_message\
    \ .= strtolower($message[$i]);\n        }\n        if (strtolower($message[$i])\
    \ == \"a\") {\n            $encoded_message .= \"C\";\n        } else if (strtolower($message[$i])\
    \ == \"e\") {\n            $encoded_message .= \"G\";\n        } else if (strtolower($message[$i])\
    \ == \"i\") {\n            $encoded_message .= \"K\";\n        } else if (strtolower($message[$i])\
    \ == \"o\") {\n            $encoded_message .= \"M\";\n        } else if (strtolower($message[$i])\
    \ == \"u\") {\n            $encoded_message .= \"Q\";\n        }\n    }\n    return\
    \ $encoded_message;\n}\n", "    $alphabet = 'abcdefghijklmnopqrstuvwxyz';\n  \
    \  $vowels = 'aeiou';\n    $output = '';\n    $vowelCount = 0;\n    for ($i =\
    \ 0; $i < strlen($message); $i++) {\n        if (in_array($message[$i], $vowels))\
    \ {\n            $vowelCount++;\n            $output .= $alphabet[strpos($alphabet,\
    \ $message[$i]) + ($vowelCount % 2) * 2];\n        } else {\n            $output\
    \ .= $message[$i];\n        }\n    }\n    return $output;\n}\necho '<br>';\necho\
    \ encode('test'); // \"TGST\"\necho '<br>';\necho encode('This is a message');\
    \ // \"tHKS KS C MGSSCGG\"\necho '<br>';\necho encode('WE LOVE YOU JESSIE!');\
    \ // \"YR NQQG ZQ ZKKIV!\"\necho '<br>';\necho encode('HEY! WE LOVE YOU JESSIE!');\
    \ // \"tHKS KS C MGSSCGG\"\necho '<br>';\necho encode('HEY! WE LOVE YOU JESSIE!\
    \ AND YOU LOVE US!'); // \"tHKS KS C MGSSCGG\"\necho '<br>';\n", "    $encodedString\
    \ = '';\n    $messageLength = strlen($message);\n    for ($i = 0; $i < $messageLength;\
    \ $i++) {\n        $currentChar = $message[$i];\n        if ($currentChar == strtoupper($currentChar))\
    \ {\n            $encodedString .= strtolower($currentChar);\n        } else if\
    \ ($currentChar == strtolower($currentChar)) {\n            $encodedString .=\
    \ strtoupper($currentChar);\n        } else {\n            $encodedString .= $currentChar;\n\
    \        }\n    }\n    echo $encodedString;\n}\n\nencode(\"This is a message\"\
    );", "\t$alphabet = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"\
    i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"\
    t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n\t$replaced = \"\";\n\tfor ($i\
    \ = 0; $i < strlen($message); $i++) {\n\t\t$currentLetter = $message[$i];\n\t\t\
    if (in_array($currentLetter, $alphabet)) {\n\t\t\t$newLetter = strtolower($currentLetter);\n\
    \t\t\t$key = array_search($newLetter, $alphabet);\n\t\t\tif (strtolower($currentLetter)\
    \ == \"z\") {\n\t\t\t\t$newLetter = \"b\";\n\t\t\t} elseif (strtolower($currentLetter)\
    \ == \"y\") {\n\t\t\t\t$newLetter = \"a\";\n\t\t\t} else {\n\t\t\t\t$newLetter\
    \ = $alphabet[$key + 2];\n\t\t\t}\n\t\t\tif (ctype_upper($currentLetter)) {\n\t\
    \t\t\t$newLetter = strtoupper($newLetter);\n\t\t\t}\n\t\t\t$replaced .= $newLetter;\n\
    \t\t} else {\n\t\t\t$replaced .= $currentLetter;\n\t\t}\n\t}\n\treturn $replaced;\n\
    }\necho encode(\"test\") . PHP_EOL;\necho encode(\"This is a message\") . PHP_EOL;",
  "  $message = strtolower($message);\n  $vowels = [\"a\", \"e\", \"i\", \"o\", \"\
    u\"];\n  $vowels_two_up = [\"c\", \"g\", \"k\", \"o\", \"s\"];\n  $new_message\
    \ = \"\";\n  for ($i = 0; $i < strlen($message); $i++) {\n    $char = $message[$i];\n\
    \    $location = array_search($char, $vowels);\n    if ($location !== false) {\n\
    \      $new_message .= $vowels_two_up[$location];\n    } else {\n      $new_message\
    \ .= $char;\n    }\n  }\n  return strtoupper($new_message);\n}\n\necho encode(\"\
    tHKS KS C MGSSCGG\");", "    $vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n\
    \    $newMessage = \"\";\n    for ($i = 0; $i < strlen($message); $i++) {\n  \
    \      if (ctype_alpha($message[$i])) {\n            if (in_array(strtolower($message[$i]),\
    \ $vowels)) {\n                $newMessage .= $vowels[(array_search(strtolower($message[$i]),\
    \ $vowels) + 2) % 5];\n            } else {\n                $newMessage .= strtoupper($message[$i]);\n\
    \            }\n        } else {\n            $newMessage .= $message[$i];\n \
    \       }\n    }\n    return $newMessage;\n}\n", "  $low = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n  $high = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n  $first_half = substr($low, 0,\
    \ 8);\n  $second_half = substr($low, 8);\n  $vowels = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"];\n  $message = str_split($message);\n  $encoded = [];\n  for ($i =\
    \ 0; $i < count($message); $i++) {\n    if (in_array($message[$i], $vowels)) {\n\
    \      $key = strpos($vowels, $message[$i]);\n      $offset = ($key + 2) % 5;\n\
    \      array_push($encoded, $vowels[$offset]);\n    } else if (in_array($message[$i],\
    \ $first_half)) {\n      $key = strpos($first_half, $message[$i]);\n      $offset\
    \ = ($key + 13) % 26;\n      array_push($encoded, $second_half[$offset]);\n  \
    \  } else if (in_array($message[$i], $second_half)) {\n      $key = strpos($second_half,\
    \ $message[$i]);\n      $offset = ($key + 13) % 26;\n      array_push($encoded,\
    \ $first_half[$offset]);\n    } else {\n      array_push($encoded, $message[$i]);\n\
    \    }\n  }\n  $encoded = implode(\"\", $encoded);\n  return $encoded;\n}\n\n\
    $message = \"This is a message\";\necho $message . \"\\n\";\necho encode($message)\
    \ . \"\\n\";\n", "\t$msg_arr = str_split($message);\n\t$vowels = ['a', 'e', 'i',\
    \ 'o', 'u'];\n\tforeach ($msg_arr as $key => $value) {\n\t\t$ascii = ord($value);\n\
    \t\tif ($ascii >= 65 && $ascii <= 90) {\n\t\t\t$ascii += 32;\n\t\t}\n\t\tif (in_array($value,\
    \ $vowels)) {\n\t\t\t$ascii += 2;\n\t\t}\n\t\t$msg_arr[$key] = chr($ascii);\n\t\
    }\n\treturn implode('', $msg_arr);\n}\n\necho encode(\"test\") . \"\\n\";\necho\
    \ encode(\"This is a message\") . \"\\n\";", "  // return \"TGST\";\n  // return\
    \ \"tHKS KS C MGSSCGG\";\n  // echo $message;\n  $replace = \"\";\n  $message\
    \ = strtolower($message);\n  $message = str_split($message);\n  // return $message;\n\
    \  foreach ($message as $k => $v) {\n    if(ctype_alpha($v)) {\n      if(ctype_upper($v))\
    \ {\n        $message[$k] = strtolower($v);\n      } else {\n        $message[$k]\
    \ = strtoupper($v);\n      }\n    }\n  }\n  // return $message;\n  $message =\
    \ implode(\"\", $message);\n  $message = str_split($message);\n  // return $message;\n\
    \  foreach ($message as $k => $v) {\n    if($v == \"a\") {\n      $replace = \"\
    c\";\n    } elseif($v == \"e\") {\n      $replace = \"g\";\n    } elseif($v ==\
    \ \"i\") {\n      $replace = \"k\";\n    } elseif($v == \"o\") {\n      $replace\
    \ = \"q\";\n    } elseif($v == \"u\") {\n      $replace = \"y\";\n    } else {\n\
    \      $replace = $v;\n    }\n    $message[$k] = $replace;\n  }\n  // return $message;\n\
    \  $message = implode(\"\", $message);\n  return $message;\n}\necho encode(\"\
    test\");\necho \"<br>\";\necho encode(\"This is a message\");", "\t$encodedMessage\
    \ = '';\n\t$lower_case = 'abcdefghijklmnopqrstuvwxyz';\n\t$upper_case = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\
    \tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$lower_case_key = strpos($lower_case,\
    \ $message[$i]);\n\t\t$upper_case_key = strpos($upper_case, $message[$i]);\n\t\
    \tif (false !== $lower_case_key) {\n\t\t\t$encodedMessage .= $lower_case[$lower_case_key\
    \ + 2];\n\t\t} elseif (false !== $upper_case_key) {\n\t\t\t$encodedMessage .=\
    \ $upper_case[$upper_case_key + 2];\n\t\t} else {\n\t\t\t$encodedMessage .= $message[$i];\n\
    \t\t}\n\t}\n\treturn $encodedMessage;\n}\n\n$message = \"This is a message\";\n\
    echo \"Encoded message is: \" . encode($message);", "    \n}", "    // Your code\
    \ here\n}", "\t$alphabet = array('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z');\n\
    \t$encoded = '';\n\tfor ($i=0; $i < strlen($message); $i++) { \n\t\tif (in_array(strtolower($message[$i]),\
    \ $alphabet)) {\n\t\t\t$index = array_search(strtolower($message[$i]), $alphabet);\n\
    \t\t\tif ($index > strlen($alphabet) - 3) {\n\t\t\t\t$encoded .= $alphabet[$index\
    \ - (strlen($alphabet) - 2)];\n\t\t\t} else {\n\t\t\t\t$encoded .= $alphabet[$index\
    \ + 2];\n\t\t\t}\n\t\t} else {\n\t\t\t$encoded .= $message[$i];\n\t\t}\n\t}\n\t\
    return $encoded;\n}", "    $letters = str_split($message);\n    $encoded_message\
    \ = [];\n    foreach ($letters as $letter) {\n        // Set to lowercase\n  \
    \      $letter = strtolower($letter);\n        // Check for vowel\n        if\
    \ (in_array($letter, [\"a\", \"e\", \"i\", \"o\", \"u\"])) {\n            $vowel_index\
    \ = array_search($letter, [\"a\", \"e\", \"i\", \"o\", \"u\"]);\n            //\
    \ Check for end of alphabet\n            if ($vowel_index === 4) {\n         \
    \       $letter = \"a\";\n            } else {\n                $letter = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"][$vowel_index + 2];\n            }\n        }\n\
    \        // Check case of original letter\n        if (strtoupper($letter) ===\
    \ $letter) {\n            $letter = strtoupper($letter);\n        }\n        $encoded_message[]\
    \ = $letter;\n    }\n    return implode(\"\", $encoded_message);\n}\n", "\t$encoded_message\
    \ = \"\";\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$vowels_hash\
    \ = array(\"a\" => \"c\", \"e\" => \"g\", \"i\" => \"k\", \"o\" => \"q\", \"u\"\
    \ => \"y\");\n\t$index = 0;\n\twhile ($index < strlen($message)) {\n\t\tif (in_array($message[$index],\
    \ $vowels)) {\n\t\t\t$encoded_message .= $vowels_hash[$message[$index]];\n\t\t\
    } else {\n\t\t\t$encoded_message .= $message[$index];\n\t\t}\n\t\t$index++;\n\t\
    }\n\treturn strtoupper($encoded_message);\n}\n$message = \"I am a test message\"\
    ;\necho \"Your encoded message is: \".encode($message);", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n\t$encoded_message = '';\n\tforeach (str_split($message) as $char) {\n\t\t\
    $pos = strpos($alphabet, strtolower($char));\n\t\tif ($pos !== false) {\n\t\t\t\
    $pos = $pos + 2;\n\t\t\tif ($pos > 25) {\n\t\t\t\t$pos = $pos - 26;\n\t\t\t}\n\
    \t\t\t$encoded_message .= $alphabet[$pos];\n\t\t} else {\n\t\t\t$encoded_message\
    \ .= $char;\n\t\t}\n\t}\n\treturn $encoded_message;\n}", "    // let's use arrays\
    \ instead of strings\n    $message_array = str_split($message);\n    $encoded_message\
    \ = array();\n    $vowels = array('a', 'e', 'i', 'o', 'u');\n    // write code\
    \ here\n\n    foreach ($message_array as $letter) {\n        if ($letter == 'a')\
    \ {\n            $letter = 'c';\n        } elseif ($letter == 'e') {\n       \
    \     $letter = 'g';\n        } elseif ($letter == 'i') {\n            $letter\
    \ = 'k';\n        } elseif ($letter == 'o') {\n            $letter = 'q';\n  \
    \      } elseif ($letter == 'u') {\n            $letter = 'y';\n        } elseif\
    \ ($letter == 'A') {\n            $letter = 'C';\n        } elseif ($letter ==\
    \ 'E') {\n            $letter = 'G';\n        } elseif ($letter == 'I') {\n  \
    \          $letter = 'K';\n        } elseif ($letter == 'O') {\n            $letter\
    \ = 'Q';\n        } elseif ($letter == 'U') {\n            $letter = 'Y';\n  \
    \      } elseif ($letter == ' ') {\n            $letter = ' ';\n        } else\
    \ {\n            $letter = strtoupper($letter);\n        }\n        array_push($encoded_message,\
    \ $letter);\n    }\n    return implode($encoded_message);\n}\n", "\t$alphabet\
    \ = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n\t$vowels = array(\"A\", \"E\", \"I\", \"\
    O\", \"U\");\n\t$vowelsUpper = array(\"A\", \"E\", \"I\", \"O\", \"U\");\n\t$vowelsLower\
    \ = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$vowelsLower = array_map('strtolower',\
    \ $vowelsUpper);\n\t$encoded = \"\";\n\t$count = 0;\n\t$message = str_split($message);\n\
    \tforeach ($message as $letter) {\n\t\tif (in_array($letter, $vowelsUpper)) {\n\
    \t\t\t$letter = array_search($letter, $vowelsUpper);\n\t\t\t$letter = $letter\
    \ + 2;\n\t\t\t$letter = $vowelsLower[$letter];\n\t\t\t$encoded .= $letter;\n\t\
    \t} elseif (in_array($letter, $vowelsLower)) {\n\t\t\t$letter = array_search($letter,\
    \ $vowelsLower);\n\t\t\t$letter = $letter + 2;\n\t\t\t$letter = $vowelsLower[$letter];\n\
    \t\t\t$encoded .= $letter;\n\t\t} else {\n\t\t\t$encoded .= $letter;\n\t\t}\n\t\
    }\n\treturn $encoded;\n}\n\necho encode(\"This is a message\") . \"\\n\";\n",
  "    // This is where you write your function\n    $a = strtolower($message);\n\
    \    $a = str_split($a);\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $new_arr\
    \ = [];\n    foreach ($a as $char) {\n        if (in_array($char, $vowels)) {\n\
    \            $index = array_search($char, $vowels);\n            $index++;\n \
    \           $new_arr[] = $vowels[$index];\n        } else {\n            $new_arr[]\
    \ = $char;\n        }\n    }\n    foreach ($new_arr as $c) {\n        if (in_array($c,\
    \ $vowels)) {\n            $index = array_search($c, $vowels);\n            $index\
    \ += 2;\n            $str_char = $vowels[$index];\n            $up_str_char =\
    \ strtoupper($str_char);\n            $index_char = array_search($c, $new_arr);\n\
    \            $new_arr[$index_char] = $up_str_char;\n        }\n    }\n    $new_arr\
    \ = implode('', $new_arr);\n    return $new_arr;\n}\n", "\t$vowels = array('a',\
    \ 'e', 'i', 'o', 'u');\n\t$encoded_message = \"\";\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\t$character = $message[$i];\n\t\t$encoded_character = $character;\n\
    \t\tif (ctype_alpha($character)) {\n\t\t\tif (ctype_upper($character)) {\n\t\t\
    \t\t$encoded_character = strtolower($character);\n\t\t\t} else {\n\t\t\t\t$encoded_character\
    \ = strtoupper($character);\n\t\t\t}\n\t\t\tif (in_array($encoded_character, $vowels))\
    \ {\n\t\t\t\t$vowel_index = array_search($encoded_character, $vowels);\n\t\t\t\
    \t$encoded_character = $vowels[($vowel_index + 2) % 5];\n\t\t\t}\n\t\t}\n\t\t\
    $encoded_message .= $encoded_character;\n\t}\n\treturn $encoded_message;\n}\n\n\
    $test_strings = array(\"test\", \"This is a message\");\nfor ($i = 0; $i < count($test_strings);\
    \ $i++) {\n\t$test_string = $test_strings[$i];\n\techo \"\\n\".encode($test_string);\n\
    }", "\t// your code goes here\n\t$encoded = \"\";\n\t$message = strtolower($message);\n\
    \t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$next_char = $message[0];\n\
    \t$next_next_char = $message[1];\n\t$next_next_next_char = $message[2];\n\t\n\t\
    for ($i = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\t\t$is_vowel\
    \ = in_array($char, $vowels);\n\t\tif ($is_vowel) {\n\t\t\t$encoded .= $next_next_char;\n\
    \t\t} else {\n\t\t\t$encoded .= $char;\n\t\t}\n\t\t$next_char = $next_next_char;\n\
    \t\t$next_next_char = $next_next_next_char;\n\t\t$next_next_next_char = $message[$i\
    \ + 3];\n\t}\n\treturn $encoded;\n}\n\necho encode(\"this is a message\");\necho\
    \ \"\\n\";\necho encode(\"test\");\necho \"\\n\";", "\t$vowels = ['a', 'e', 'i',\
    \ 'o', 'u'];\n\t$encoded = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\
    \t\tif (ctype_alpha($message[$i])) {\n\t\t\tif (ctype_upper($message[$i])) {\n\
    \t\t\t\t$encoded .= strtolower($message[$i]);\n\t\t\t} else {\n\t\t\t\t$encoded\
    \ .= strtoupper($message[$i]);\n\t\t\t}\n\t\t} else {\n\t\t\t$encoded .= $message[$i];\n\
    \t\t}\n\t}\n\t$encoded_array = str_split($encoded);\n\tfor ($i = 0; $i < count($encoded_array);\
    \ $i++) {\n\t\tif (in_array($encoded_array[$i], $vowels)) {\n\t\t\tif ($encoded_array[$i]\
    \ == 'a') {\n\t\t\t\t$encoded_array[$i] = 'c';\n\t\t\t} elseif ($encoded_array[$i]\
    \ == 'e') {\n\t\t\t\t$encoded_array[$i] = 'g';\n\t\t\t} elseif ($encoded_array[$i]\
    \ == 'i') {\n\t\t\t\t$encoded_array[$i] = 'k';\n\t\t\t} elseif ($encoded_array[$i]\
    \ == 'o') {\n\t\t\t\t$encoded_array[$i] = 'm';\n\t\t\t} elseif ($encoded_array[$i]\
    \ == 'u') {\n\t\t\t\t$encoded_array[$i] = 'q';\n\t\t\t}\n\t\t}\n\t}\n\t$encoded\
    \ = '';\n\tforeach ($encoded_array as $char) {\n\t\t$encoded .= $char;\n\t}\n\t\
    return $encoded;\n}\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a\
    \ message\") . \"\\n\";\n", "    $encoded = '';\n    for ($i = 0; $i < strlen($message);\
    \ $i++) {\n        $letter = $message[$i];\n        if (strtolower($letter) ==\
    \ 'a') {\n            $encoded .= 'c';\n        } else if (strtolower($letter)\
    \ == 'e') {\n            $encoded .= 'g';\n        } else if (strtolower($letter)\
    \ == 'i') {\n            $encoded .= 'k';\n        } else if (strtolower($letter)\
    \ == 'o') {\n            $encoded .= 'q';\n        } else if (strtolower($letter)\
    \ == 'u') {\n            $encoded .= 'y';\n        } else if (ctype_upper($letter))\
    \ {\n            $encoded .= strtolower($letter);\n        } else {\n        \
    \    $encoded .= strtoupper($letter);\n        }\n    }\n    return $encoded;\n\
    }\n\n$message = 'This is a test';\necho $message . '<br>';\necho encode($message);\n",
  "    $letters = str_split($message);\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n\
    \    $new_string = '';\n    foreach ($letters as $letter) {\n        if (in_array($letter,\
    \ $vowels)) {\n            if ($letter == 'u') {\n                $new_string\
    \ .= 'a';\n            } else {\n                $new_string .= ++$letter;\n \
    \           }\n        } else {\n            $new_string .= $letter;\n       \
    \ }\n    }\n    return strtoupper($new_string);\n}\n\necho encode(\"test\") .\
    \ \"\\n\";\necho encode(\"This is a message\") . \"\\n\";\n", "\t$message = strtolower($message);\n\
    \t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$chars = str_split($message);\n\
    \t$num_chars = count($chars);\n\t$res = \"\";\n\tfor ($i = 0; $i < $num_chars;\
    \ $i++) {\n\t\tif ($chars[$i] === \" \") {\n\t\t\t$res .= \" \";\n\t\t} else if\
    \ (in_array($chars[$i], $vowels)) {\n\t\t\t$vowel_index = array_search($chars[$i],\
    \ $vowels);\n\t\t\t$next_vowel_index = ($vowel_index + 2) % 5;\n\t\t\t$res .=\
    \ $vowels[$next_vowel_index];\n\t\t} else {\n\t\t\t$res .= $chars[$i];\n\t\t}\n\
    \t}\n\treturn strtoupper($res);\n}\n\necho encode(\"this is a message\") . \"\\\
    n\";\necho encode(\"TEST\") . \"\\n\";\necho encode(\"aEIOU\") . \"\\n\";\necho\
    \ encode(\"aeiou\") . \"\\n\";\necho encode(\"\") . \"\\n\";", "\t$str = strtolower($message);\n\
    \t$result = array();\n\t$abc = 'abcdefghijklmnopqrstuvwxyz';\n\t$len = strlen($str);\n\
    \tfor ($i = 0; $i < $len; $i++) {\n\t\t$char = $str[$i];\n\t\tif ($char == ' ')\
    \ {\n\t\t\t$result[] = ' ';\n\t\t} else {\n\t\t\t$index = strpos($abc, $char);\n\
    \t\t\t$index = ($index + 2) % 26;\n\t\t\t$result[] = $abc[$index];\n\t\t}\n\t\
    }\n\treturn strtoupper(implode($result));\n}\necho encode(\"TEST!\");\necho \"\
    \\n\";\necho encode(\"This is a message\");\necho \"\\n\";", "\t$vowels = ['a',\
    \ 'e', 'i', 'o', 'u'];\n\t$new_message = \"\";\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\t$char = $message[$i];\n\t\tif (ctype_upper($char)) {\n\t\t\t$char\
    \ = strtolower($char);\n\t\t} else if (ctype_lower($char)) {\n\t\t\t$char = strtoupper($char);\n\
    \t\t}\n\t\t\n\t\tif (in_array($char, $vowels)) {\n\t\t\t$char = $vowels[(array_search($char,\
    \ $vowels) + 2) % 5];\n\t\t}\n\t\t$new_message .= $char;\n\t}\n\treturn $new_message;\n\
    }\n\necho encode(\"This is a message\");", "    // Remove non-alphabetical characters\
    \ and lowercase\n    $message = strtolower(preg_replace(\"/[^a-z]/\", \"\", $message));\n\
    \    // Get the ASCII values of all characters\n    $char_array = str_split($message);\n\
    \    $char_num_array = array_map('ord', $char_array);\n    $char_num_array_after\
    \ = [];\n    $vowels = [97, 101, 105, 111, 117];\n\n    foreach ($char_num_array\
    \ as $char_num) {\n        // For non-vowels, add two, if greater than 122, then\
    \ subtract 26\n        if (!in_array($char_num, $vowels)) {\n            $char_num_plus\
    \ = $char_num + 2;\n            if ($char_num_plus > 122) {\n                $char_num_after\
    \ = $char_num_plus - 26;\n            } else {\n                $char_num_after\
    \ = $char_num_plus;\n            }\n        // For vowels, add two, if greater\
    \ than 101, then subtract 5\n        } else {\n            $char_num_plus = $char_num\
    \ + 2;\n            if ($char_num_plus > 101) {\n                $char_num_after\
    \ = $char_num_plus - 5;\n            } else {\n                $char_num_after\
    \ = $char_num_plus;\n            }\n        }\n        // Add new number to array\n\
    \        array_push($char_num_array_after, $char_num_after);\n    }\n    // Convert\
    \ new ASCII numbers to letters\n    $encoded_message = array_map('chr', $char_num_array_after);\n\
    \    $encoded_message = implode(\"\", $encoded_message);\n    // Uppercase the\
    \ letters\n    $encoded_message = strtoupper($encoded_message);\n    return $encoded_message;\n\
    }", "    // WRITE CODE HERE\n    $result = \"\";\n    $vowels = array('a', 'e',\
    \ 'i', 'o', 'u');\n    $lower = array('A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z');\n\
    \    $upper = array('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z');\n\
    \    for ($i = 0; $i < strlen($message); $i++) {\n        if (ctype_alpha($message[$i]))\
    \ {\n            if (in_array($message[$i], $vowels)) {\n                $result\
    \ .= $lower[(array_search($message[$i], $vowels) + 2) % 5];\n            } else\
    \ {\n                $result .= $upper[(array_search($message[$i], $lower) + 2)\
    \ % 26];\n            }\n        } else {\n            $result .= $message[$i];\n\
    \        }\n    }\n    return $result;\n}\n", "\t$vowels = array(\"a\", \"e\"\
    , \"i\", \"o\", \"u\");\n\t$message = strtolower($message);\n\t$encoded = \"\"\
    ;\n\t$chars = str_split($message);\n\tfor ($i = 0; $i < count($chars); $i++) {\n\
    \t\tif ($chars[$i] == \"z\") {\n\t\t\t$chars[$i] = \"b\";\n\t\t} else if (in_array($chars[$i],\
    \ $vowels)) {\n\t\t\t$chars[$i] = chr(ord($chars[$i]) + 2);\n\t\t} else {\n\t\t\
    \t$chars[$i] = chr(ord($chars[$i]) + 1);\n\t\t}\n\t\t$encoded .= $chars[$i];\n\
    \t}\n\treturn $encoded;\n}", "\t$encoded = \"\";\n\t$vowels = [\"a\",\"e\",\"\
    i\",\"o\",\"u\"];\n\tfor ($i=0; $i < strlen($message); $i++) { \n\t\t$letter =\
    \ strtolower($message[$i]);\n\t\tif(ctype_alpha($letter)){\n\t\t\tif(in_array($letter,\
    \ $vowels)){\n\t\t\t\tif(strtolower($message[$i]) == \"u\"){\n\t\t\t\t\t$letter\
    \ = \"a\";\n\t\t\t\t} else {\n\t\t\t\t\t$letter = chr(ord($letter) + 2);\n\t\t\
    \t\t}\n\t\t\t}\n\t\t\tif(ctype_upper($message[$i])){\n\t\t\t\t$letter = strtoupper($letter);\n\
    \t\t\t}\n\t\t}\n\t\t$encoded .= $letter;\n\t}\n\treturn $encoded;\n}\n", "   \
    \ $letters = str_split($message);\n    $output = \"\";\n    foreach ($letters\
    \ as $letter) {\n        if (ctype_upper($letter)) {\n            $upper = strtolower($letter);\n\
    \            if (in_array($upper, ['a', 'e', 'i', 'o', 'u'])) {\n            \
    \    $output .= nextVowel($upper);\n            } else {\n                $output\
    \ .= $upper;\n            }\n        } else {\n            $lower = strtoupper($letter);\n\
    \            if (in_array($lower, ['A', 'E', 'I', 'O', 'U'])) {\n            \
    \    $output .= nextVowel($lower);\n            } else {\n                $output\
    \ .= $lower;\n            }\n        }\n    }\n    return $output;\n}\n", "\t\
    $alphabet = array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\"\
    , \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\"\
    , \"u\", \"v\", \"w\", \"x\", \"y\", \"z\");\n\t$vowels = array(\"a\", \"e\",\
    \ \"i\", \"o\", \"u\");\n\t$output = \"\";\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\tif (in_array($message[$i], $vowels)) {\n\t\t\t$output .= $alphabet[array_search($message[$i],\
    \ $alphabet) + 2];\n\t\t} else if (in_array(strtolower($message[$i]), $alphabet))\
    \ {\n\t\t\t$output .= strtoupper($message[$i]);\n\t\t} else {\n\t\t\t$output .=\
    \ $message[$i];\n\t\t}\n\t}\n\treturn $output;\n}\necho encode(\"This is a message\"\
    );", "\t$a = ord('a');\n\t$z = ord('z');\n\t$A = ord('A');\n\t$Z = ord('Z');\n\
    \t\n\t$vowels = ['a','e','i','o','u'];\n\t$arr = str_split($message);\n\tforeach\
    \ ($arr as $key => $value) {\n\t\t$char = ord($value);\n\t\tif ($char >= $a &&\
    \ $char <= $z) {\n\t\t\t$char = $char - $a;\n\t\t\t$char = ($char + 2) % 26;\n\
    \t\t\t$char = $char + $A;\n\t\t\t$arr[$key] = chr($char);\n\t\t}\n\t\telse if\
    \ ($char >= $A && $char <= $Z) {\n\t\t\t$char = $char - $A;\n\t\t\t$char = ($char\
    \ + 2) % 26;\n\t\t\t$char = $char + $a;\n\t\t\t$arr[$key] = chr($char);\n\t\t\
    }\n\t}\n\t$string = implode('', $arr);\n\tforeach ($vowels as $vowel) {\n\t\t\
    $string = str_replace($vowel, chr(ord($vowel) + 2), $string);\n\t}\n\treturn $string;\n\
    }\necho encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\\\
    n\";\n", "\t$message = strtolower($message);\n\t$vowels = array('a', 'e', 'i',\
    \ 'o', 'u');\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\tif (in_array($message[$i],\
    \ $vowels)) {\n\t\t\t$vowel_index = array_search($message[$i], $vowels);\n\t\t\
    \t$message[$i] = $vowels[($vowel_index + 2) % count($vowels)];\n\t\t}\n\t}\n\t\
    return strtoupper($message);\n}\necho encode(\"This is a message\") . PHP_EOL;",
  "\t$message = strtolower($message);\n\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$index = strpos($alphabet,\
    \ $message[$i]);\n\t\tif ($index === false) {\n\t\t\techo $message[$i];\n\t\t\
    } else {\n\t\t\tif ($index < 25) {\n\t\t\t\t$index += 2;\n\t\t\t} else if ($index\
    \ === 25) {\n\t\t\t\t$index = 1;\n\t\t\t} else {\n\t\t\t\t$index = 0;\n\t\t\t\
    }\n\t\t\techo $alphabet[$index];\n\t\t}\n\t}\n}\n", "  $alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n  $vowels = array('A', 'E', 'I', 'O', 'U');\n  $split = str_split($message);\n\
    \  $new_message = \"\";\n  foreach ($split as $letter) {\n    $current_letter\
    \ = $letter;\n    if (strtoupper($letter) == $letter) {\n      $current_letter\
    \ = strtolower($letter);\n    } else if (strtolower($letter) == $letter) {\n \
    \     $current_letter = strtoupper($letter);\n    }\n    if (in_array($current_letter,\
    \ $vowels)) {\n      $index = strpos($alphabet, $current_letter);\n      $index\
    \ += 2;\n      if ($index > strlen($alphabet)) {\n        $index -= strlen($alphabet);\n\
    \      }\n      $current_letter = $alphabet[$index];\n    }\n    $new_message\
    \ .= $current_letter;\n  }\n  return $new_message;\n}\necho \"test \" . encode(\"\
    test\") . \"\\n\";\necho \"This is a message \" . encode(\"This is a message\"\
    ) . \"\\n\";", "\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$alpha\
    \ = range(\"a\", \"z\");\n\t$alpha = array_combine($alpha, $alpha);\n\t$index\
    \ = array_search(\"a\", $alpha);\n\t$index++;\n\t$index++;\n\tforeach ($vowels\
    \ as $vowel) {\n\t\t$alpha[$vowel] = $alpha[$index];\n\t\t$index++;\n\t\t$index++;\n\
    \t}\n\tforeach (str_split($message) as $letter) {\n\t\tif (ctype_upper($letter))\
    \ {\n\t\t\t$newMessage .= strtoupper($alpha[strtolower($letter)]);\n\t\t} else\
    \ {\n\t\t\t$newMessage .= $alpha[$letter];\n\t\t}\n\t}\n\treturn $newMessage;\n\
    }\n$message = \"This is a message\";\necho encode($message);", "\t$alphabet =\
    \ 'abcdefghijklmnopqrstuvwxyz';\n\t$alphabet_length = strlen($alphabet);\n\t$encoded_message\
    \ = '';\n\t$message_length = strlen($message);\n\tfor ($index = 0; $index < $message_length;\
    \ $index++) {\n\t\tif (preg_match('/[aeiouAEIOU]/', $message[$index])) {\n\t\t\
    \t$vowel_offset = strpos($alphabet, strtolower($message[$index])) + 2;\n\t\t\t\
    if ($vowel_offset > $alphabet_length) {\n\t\t\t\t$vowel_offset = $vowel_offset\
    \ - $alphabet_length;\n\t\t\t}\n\t\t\t$encoded_message .= $alphabet[$vowel_offset];\n\
    \t\t} else {\n\t\t\t$encoded_message .= $message[$index];\n\t\t}\n\t}\n\treturn\
    \ $encoded_message;\n}\necho encode('test') . PHP_EOL;\necho encode('This is a\
    \ message') . PHP_EOL;\n", "\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\"\
    );\n\t$consonants = array(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"\
    k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"\
    x\", \"y\", \"z\");\n\t$len = strlen($message);\n\t$ret = \"\";\n\tfor ($i = 0;\
    \ $i < $len; $i++) {\n\t\t$c = strtolower($message[$i]);\n\t\tif (in_array($c,\
    \ $vowels)) {\n\t\t\t$pos = array_search($c, $vowels);\n\t\t\t$ret .= strtoupper($vowels[($pos\
    \ + 2) % 5]);\n\t\t} else if (in_array($c, $consonants)) {\n\t\t\t$pos = array_search($c,\
    \ $consonants);\n\t\t\t$ret .= strtoupper($consonants[($pos + 1) % 21]);\n\t\t\
    } else {\n\t\t\t$ret .= $message[$i];\n\t\t}\n\t}\n\treturn $ret;\n}\n", "   \
    \ // Your code here\n    $alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    $vowels\
    \ = \"aeiou\";\n    $result = \"\";\n    $alphabet_length = strlen($alphabet);\n\
    \    $message_length = strlen($message);\n    for ($i = 0; $i < $message_length;\
    \ $i++) {\n        $c = $message[$i];\n        $c_lower = strtolower($c);\n  \
    \      $is_vowel = strpos($vowels, $c_lower) !== false;\n        $index = strpos($alphabet,\
    \ $c_lower);\n        if ($is_vowel) {\n            $index = ($index + 2) % $alphabet_length;\n\
    \            $result .= $alphabet[$index];\n        } else {\n            $result\
    \ .= $c;\n        }\n    }\n    return $result;\n}\n", "\t$vowels = [\"a\", \"\
    e\", \"i\", \"o\", \"u\"];\n\t$alphabet = str_split(\"abcdefghijklmnopqrstuvwxyz\"\
    );\n\t$translatedMessage = \"\";\n\t\n\tfor ($i = 0; $i < strlen($message); $i++)\
    \ {\n\t\t$char = $message[$i];\n\t\t$ord = ord($char);\n\t\t\n\t\tif ($ord >=\
    \ 65 && $ord <= 90) {\n\t\t\t$ord += 32;\n\t\t}\n\t\t\n\t\t$char = chr($ord);\n\
    \t\t\n\t\tif (in_array($char, $vowels)) {\n\t\t\t$index = array_search($char,\
    \ $alphabet);\n\t\t\t\n\t\t\tif ($index < 24) {\n\t\t\t\t$translatedMessage .=\
    \ $alphabet[$index + 2];\n\t\t\t} else {\n\t\t\t\t$translatedMessage .= $alphabet[$index\
    \ - 24];\n\t\t\t}\n\t\t} else {\n\t\t\t$translatedMessage .= $char;\n\t\t}\n\t\
    }\n\t\n\treturn $translatedMessage;\n}\n\n$message = \"This is a message\";\n\
    echo encode($message);", "\t$arr = str_split($message);\n\t// $vowels = ['a',\
    \ 'e', 'i', 'o', 'u'];\n\t$vowels = [97, 101, 105, 111, 117];\n\t$alpha = range(97,\
    \ 122);\n\t// $count = 0;\n\tforeach ($arr as $key => $char) {\n\t\tif (in_array(ord($char),\
    \ $vowels)) {\n\t\t\t$keyOfVowel = array_search(ord($char), $alpha);\n\t\t\tif\
    \ ($keyOfVowel === 23) {\n\t\t\t\t$arr[$key] = chr($alpha[1]);\n\t\t\t} else if\
    \ ($keyOfVowel === 24) {\n\t\t\t\t$arr[$key] = chr($alpha[2]);\n\t\t\t} else {\n\
    \t\t\t\t$arr[$key] = chr($alpha[$keyOfVowel + 3]);\n\t\t\t}\n\t\t} else {\n\t\t\
    \t$arr[$key] = strtoupper($char);\n\t\t}\n\t}\n\treturn implode('', $arr);\n}\n\
    \n$message = \"this is a message\";\necho encode($message);", "    $encoded =\
    \ \"\";\n    $vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    $values = [\n\
    \        \"a\" => \"c\",\n        \"e\" => \"g\",\n        \"i\" => \"k\",\n \
    \       \"o\" => \"q\",\n        \"u\" => \"y\"\n    ];\n    for ($i = 0; $i <\
    \ strlen($message); $i++) {\n        $currentLetter = $message[$i];\n        if\
    \ (in_array($currentLetter, $vowels)) {\n            $encoded .= $values[$currentLetter];\n\
    \        } else {\n            $encoded .= strtoupper($currentLetter);\n     \
    \   }\n    }\n    return $encoded;\n}\n", "  //takes input, makes sure it's all\
    \ uppercase\n  $message = strtoupper($message);\n  //removes all numbers and converts\
    \ the message to an array.\n  $message = preg_replace('/[0-9]+/', '', $message);\n\
    \  $message = str_split($message);\n  //converts array to string, replaces vowels\
    \ with letters 2 places ahead of it\n  $message = implode(\"\",$message);\n  $message\
    \ = str_replace(\"A\",\"C\",$message);\n  $message = str_replace(\"E\",\"G\",$message);\n\
    \  $message = str_replace(\"I\",\"K\",$message);\n  $message = str_replace(\"\
    O\",\"Q\",$message);\n  $message = str_replace(\"U\",\"W\",$message);\n  //swaps\
    \ case for every letter.\n  $message = strtolower($message);\n  $message = strtoupper($message);\n\
    \  //returns encoded message\n  return $message;\n}", "\t$letters = str_split($message);\n\
    \t$encoded = \"\";\n\tforeach ($letters as $letter) {\n\t\tif ($letter == \" \"\
    ) {\n\t\t\t$encoded .= \" \";\n\t\t} else {\n\t\t\t$encoded .= encodeLetter($letter);\n\
    \t\t}\n\t}\n\treturn $encoded;\n}\n", "    // Write code here\n}", "    $vowels\
    \ = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $encoded = strtoupper($message);\n\
    \    $encoded = str_replace($vowels, \"\", $encoded);\n    $encoded = str_replace(\"\
    T\", \"A\", $encoded);\n    $encoded = str_replace(\"H\", \"E\", $encoded);\n\
    \    $encoded = str_replace(\"S\", \"I\", $encoded);\n    $encoded = str_replace(\"\
    \ \", \"O\", $encoded);\n    $encoded = str_replace(\"S\", \"U\", $encoded);\n\
    \    $encoded = str_replace(\"S\", \"\", $encoded);\n    $encoded = str_replace(\"\
    C\", \"A\", $encoded);\n    $encoded = str_replace(\"G\", \"E\", $encoded);\n\
    \    $encoded = str_replace(\"G\", \"I\", $encoded);\n    return $encoded;\n}",
  "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$letters = array('a', 'b', 'c',\
    \ 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's',\
    \ 't', 'u', 'v', 'w', 'x', 'y', 'z');\n\t$messArr = str_split($message);\n\tforeach\
    \ ($messArr as $key => $value) {\n\t\tif (in_array($value, $vowels)) {\n\t\t\t\
    $newKey = array_search($value, $letters);\n\t\t\t$newKey += 3;\n\t\t\tif ($newKey\
    \ > 25) {\n\t\t\t\t$newKey -= 26;\n\t\t\t}\n\t\t\t$messArr[$key] = $letters[$newKey];\n\
    \t\t} elseif (strtoupper($value) === $value) {\n\t\t\t$messArr[$key] = strtolower($value);\n\
    \t\t} else {\n\t\t\t$messArr[$key] = strtoupper($value);\n\t\t}\n\t}\n\treturn\
    \ implode('', $messArr);\n}\n\necho encode(\"test\");\necho \"<br />\";\necho\
    \ encode(\"This is a message\");", "\t// $message is the string to be encoded\n\
    \t// your code here!\n\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t$alphabet = ['a',\
    \ 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q',\
    \ 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'];\n\t$newmessage = '';\n\t$length\
    \ = strlen($message);\n\tfor ($i = 0; $i < $length; $i++) {\n\t\tif (in_array($message[$i],\
    \ $vowels)) {\n\t\t\t$newmessage = $newmessage . $alphabet[array_search($message[$i],\
    \ $alphabet) + 2];\n\t\t} else if (ctype_upper($message[$i])) {\n\t\t\t$newmessage\
    \ = $newmessage . strtolower($message[$i]);\n\t\t} else if (ctype_lower($message[$i]))\
    \ {\n\t\t\t$newmessage = $newmessage . strtoupper($message[$i]);\n\t\t} else {\n\
    \t\t\t$newmessage = $newmessage . $message[$i];\n\t\t}\n\t}\n\treturn $newmessage;\n\
    }\n\necho encode(\"This is a message\") . PHP_EOL;\necho encode(\"test\") . PHP_EOL;\n\
    echo encode(\"This is a sentence with punctuation!\") . PHP_EOL;", "    $vowels\
    \ = array('a', 'e', 'i', 'o', 'u');\n    $new_message = \"\";\n    $char_arr =\
    \ str_split($message);\n    foreach ($char_arr as $char) {\n        $case = ctype_upper($char)\
    \ ? \"upper\" : \"lower\";\n        if ($case == \"upper\") {\n            $new_message\
    \ .= strtolower($char);\n        } else {\n            $new_message .= strtoupper($char);\n\
    \        }\n        if (in_array($char, $vowels)) {\n            if ($char ==\
    \ \"u\") {\n                $new_message .= \"a\";\n            } else if ($char\
    \ == \"z\") {\n                $new_message .= \"b\";\n            } else {\n\
    \                $new_message .= ++$char;\n            }\n        }\n    }\n \
    \   return $new_message;\n}\necho \"------ENCODE------\\n\";\necho encode(\"test\"\
    ) . \"\\n\";\necho encode(\"This is a message\") . \"\\n\";\n", "\t$vowels = array('a',\
    \ 'e', 'i', 'o', 'u');\n\t$alphabet = 'abcdefghijklmnopqrstuvwxyz';\n\t$encode\
    \ = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\tif (ctype_upper($message[$i]))\
    \ {\n\t\t\t$letter = strtolower($message[$i]);\n\t\t\tif (in_array($letter, $vowels))\
    \ {\n\t\t\t\t$pos = strpos($alphabet, $letter);\n\t\t\t\t$encode .= strtoupper($alphabet[($pos\
    \ + 2) % 26]);\n\t\t\t} else {\n\t\t\t\t$encode .= strtoupper($message[$i]);\n\
    \t\t\t}\n\t\t} else {\n\t\t\tif (in_array($message[$i], $vowels)) {\n\t\t\t\t\
    $pos = strpos($alphabet, $message[$i]);\n\t\t\t\t$encode .= $alphabet[($pos +\
    \ 2) % 26];\n\t\t\t} else {\n\t\t\t\t$encode .= $message[$i];\n\t\t\t}\n\t\t}\n\
    \t}\n\treturn $encode;\n}\necho encode(\"This is a message\") . \"\\n\";\n", "\t\
    $alpha = array(\n\t\t\"a\" => 2, \n\t\t\"e\" => 4, \n\t\t\"i\" => 6, \n\t\t\"\
    o\" => 8, \n\t\t\"u\" => 0\n\t);\n\t$message = strtolower($message);\n\t$encoded_message\
    \ = \"\";\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$character = $message[$i];\n\
    \t\tif (isset($alpha[$character])) {\n\t\t\t$encoded_message .= strtoupper($message[$i\
    \ + $alpha[$character]]);\n\t\t} else {\n\t\t\t$encoded_message .= $character;\n\
    \t\t}\n\t}\n\treturn $encoded_message;\n}\n", "    $messageArray = str_split($message);\n\
    \    $lowercaseArray = range('a', 'z');\n    $uppercaseArray = range('A', 'Z');\n\
    \    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $newMessage = array();\n \
    \   foreach ($messageArray as $key => $value) {\n        if (in_array($value,\
    \ $vowels)) {\n            $vowelIndex = array_search($value, $vowels);\n    \
    \        $vowelIndex += 2;\n            if ($vowelIndex > 4) {\n             \
    \   $vowelIndex -= 5;\n            }\n            if (ctype_upper($value)) {\n\
    \                $newMessage[] = $uppercaseArray[$vowelIndex];\n            }\
    \ else {\n                $newMessage[] = $lowercaseArray[$vowelIndex];\n    \
    \        }\n        } else {\n            if (ctype_upper($value)) {\n       \
    \         $newMessage[] = strtolower($value);\n            } else {\n        \
    \        $newMessage[] = strtoupper($value);\n            }\n        }\n    }\n\
    \    $newMessage = implode($newMessage);\n    return $newMessage;\n}\n\necho encode(\"\
    test\");\necho encode(\"This is a message\");", "    $replace = [\n        'a'\
    \ => 'c',\n        'e' => 'g',\n        'i' => 'k',\n        'o' => 'q',\n   \
    \     'u' => 'w',\n        'A' => 'C',\n        'E' => 'G',\n        'I' => 'K',\n\
    \        'O' => 'Q',\n        'U' => 'W',\n    ];\n    return str_replace(array_keys($replace),\
    \ array_values($replace), strtoupper($message));\n}\n", "\t$message_encoded =\
    \ '';\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\tfor ($i = 0; $i\
    \ < strlen($message); $i++) {\n\t\tif (in_array($message[$i], $vowels)) {\n\t\t\
    \t$message_encoded .= $vowels[(array_search($message[$i], $vowels) + 2) % 5];\n\
    \t\t} else {\n\t\t\t$message_encoded .= $message[$i];\n\t\t}\n\t}\n\treturn $message_encoded;\n\
    }\n$message = \"This is a message\";\necho $message . '<br>';\necho encode($message);",
  "    $message = strtolower($message);\n    $vowels = \"aeiou\";\n    $translatedMessage\
    \ = \"\";\n    for ($i = 0; $i < strlen($message); $i++) {\n        if ($message[$i]\
    \ == \" \") {\n            $translatedMessage .= \" \";\n        } else if ($message[$i]\
    \ == \"z\") {\n            $translatedMessage .= \"b\";\n        } else if ($message[$i]\
    \ == \"y\") {\n            $translatedMessage .= \"a\";\n        } else if (strpos($vowels,\
    \ $message[$i]) !== false) {\n            $translatedMessage .= $vowels[(strpos($vowels,\
    \ $message[$i]) + 2) % 5];\n        } else {\n            $translatedMessage .=\
    \ chr(ord($message[$i]) + 2);\n        }\n    }\n    return $translatedMessage;\n\
    }\n\necho(encode(\"test\") . \"\\n\");\necho(encode(\"This is a message\") . \"\
    \\n\");\necho(encode(\"M\") . \"\\n\");\necho(encode(\"z\") . \"\\n\");\necho(encode(\"\
    y\") . \"\\n\");\necho(encode(\"vowels\") . \"\\n\");", "    // declare a string\n\
    \    $message = strtolower($message);\n    $encodeMessage = '';\n    // for each\
    \ character in the message, find the ascii value\n    for ($i = 0; $i < strlen($message);\
    \ $i++) {\n        $ascii = ord($message[$i]);\n        // if the ascii value\
    \ is a number, make the character upper case\n        if ($ascii >= 48 && $ascii\
    \ <= 57) {\n            $encodeMessage .= strtoupper($message[$i]);\n        }\n\
    \        // if the ascii value is not a number, check if it is a vowel\n     \
    \   else {\n            if ($ascii >= 97 && $ascii <= 122) {\n               \
    \ if ($ascii == 97 || $ascii == 101 || $ascii == 105 || $ascii == 111 || $ascii\
    \ == 117) {\n                    $encodeMessage .= chr($ascii + 2);\n        \
    \        }\n                else {\n                    $encodeMessage .= $message[$i];\n\
    \                }\n            }\n        }\n    }\n    return $encodeMessage;\n\
    }\necho encode(\"TEST\") . \"\\n\";\necho encode(\"This is a message\") . \"\\\
    n\";\necho encode(\"!@#\") . \"\\n\";", "\t$vowels = array(\"a\", \"e\", \"i\"\
    , \"o\", \"u\");\n\t$encoded = \"\";\n\tfor ($i = 0; $i < strlen($message); $i++)\
    \ {\n\t\t$letter = $message[$i];\n\t\tif (in_array($letter, $vowels)) {\n\t\t\t\
    $pos = array_search($letter, $vowels);\n\t\t\t$letter = $vowels[($pos + 2) % count($vowels)];\n\
    \t\t}\n\t\t$encoded .= strtoupper($letter);\n\t}\n\treturn $encoded;\n}\n", " \
    \ $answer = \"\";\n  $vowels = ['a', 'e', 'i', 'o', 'u'];\n  $convert = ['c',\
    \ 'd', 'f', 'g', 'h'];\n  $message = strtolower($message);\n  for ($i = 0; $i\
    \ < strlen($message); $i++) {\n    $char = $message[$i];\n    if ($char == ' ')\
    \ {\n      $answer .= ' ';\n    } else if ($char == 'z') {\n      $answer .= 'b';\n\
    \    } else if (in_array($char, $vowels)) {\n      $letter_place = array_search($char,\
    \ $vowels);\n      $answer .= $convert[$letter_place];\n    } else {\n      $ascii\
    \ = ord($char);\n      $answer .= chr($ascii + 2);\n    }\n  }\n  return $answer;\n\
    }", "  // your code here\n  $message = strtolower($message);\n  $vowels = [\"\
    a\",\"e\",\"i\",\"o\",\"u\"];\n  $alpha = range('a', 'z');\n  $encodedMessage\
    \ = [];\n  for ($i=0; $i < strlen($message); $i++) { \n  \tif (in_array($message[$i],\
    \ $vowels)) {\n  \t\t$vowelIndex = array_search($message[$i], $vowels);\n  \t\t\
    $encodedMessage[] = $vowels[($vowelIndex + 2) % 5];\n  \t} else {\n  \t\t$encodedMessage[]\
    \ = $message[$i];\n  \t}\n  }\n  return implode(\"\", $encodedMessage);\n}\n\n\
    echo encode(\"This is a message\");", "    $encoded_message = \"\";\n    for ($i\
    \ = 0; $i < strlen($message); $i++) {\n        $encoded_message .= get_encoded_char($message[$i]);\n\
    \    }\n    return $encoded_message;\n}\n", "    $messageLength = strlen($message);\n\
    \    $newMessage = \"\";\n    for ($i = 0; $i < $messageLength; $i++) {\n    \
    \    if ($message[$i] == \"a\") {\n            $newMessage = $newMessage . \"\
    c\";\n        } else if ($message[$i] == \"e\") {\n            $newMessage = $newMessage\
    \ . \"g\";\n        } else if ($message[$i] == \"i\") {\n            $newMessage\
    \ = $newMessage . \"k\";\n        } else if ($message[$i] == \"o\") {\n      \
    \      $newMessage = $newMessage . \"q\";\n        } else if ($message[$i] ==\
    \ \"u\") {\n            $newMessage = $newMessage . \"y\";\n        } else if\
    \ ($message[$i] == \"A\") {\n            $newMessage = $newMessage . \"C\";\n\
    \        } else if ($message[$i] == \"E\") {\n            $newMessage = $newMessage\
    \ . \"G\";\n        } else if ($message[$i] == \"I\") {\n            $newMessage\
    \ = $newMessage . \"K\";\n        } else if ($message[$i] == \"O\") {\n      \
    \      $newMessage = $newMessage . \"Q\";\n        } else if ($message[$i] ==\
    \ \"U\") {\n            $newMessage = $newMessage . \"Y\";\n        } else if\
    \ (strtoupper($message[$i]) == $message[$i]) {\n            $newMessage = $newMessage\
    \ . strtolower($message[$i]);\n        } else {\n            $newMessage = $newMessage\
    \ . strtoupper($message[$i]);\n        }\n    }\n    return $newMessage;\n}\n\
    echo encode(\"test\") . \"\\n\";\necho encode(\"This is a message\") . \"\\n\"\
    ;", "\n}\n", "    $result = '';\n    for ($i = 0; $i < strlen($message); $i++)\
    \ {\n        $letter = $message[$i];\n        $isUpper = ctype_upper($letter);\n\
    \        $letter = strtolower($letter);\n        if (strpos('aeiou', $letter)\
    \ !== false) {\n            $letter = chr(ord($letter) + 2);\n        }\n    \
    \    if ($isUpper) {\n            $letter = strtoupper($letter);\n        }\n\
    \        $result .= $letter;\n    }\n    return $result;\n}\n\nvar_dump(encode('test')\
    \ === 'TGST');\nvar_dump(encode('This is a message') === 'tHKS KS C MGSSCGG');",
  "  $message_length = strlen($message);\n  $vowels = array('a', 'e', 'i', 'o', 'u');\n\
    \  $new_message = '';\n  for ($i = 0; $i < $message_length; $i++) {\n    $current_char\
    \ = $message[$i];\n    if (in_array($current_char, $vowels)) {\n      $new_char\
    \ = $vowels[array_search($current_char, $vowels) + 2];\n    } else {\n      $new_char\
    \ = $current_char;\n    }\n    $new_message .= strtoupper($new_char);\n  }\n \
    \ return $new_message;\n}\n\necho encode(\"test\") . \"\\n\";\necho encode(\"\
    This is a message\") . \"\\n\";\n", "    $characters = str_split($message);\n\
    \    $swapped = '';\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    foreach ($characters\
    \ as $character) {\n        if (ctype_upper($character)) {\n            $character\
    \ = strtolower($character);\n        } elseif (ctype_lower($character)) {\n  \
    \          $character = strtoupper($character);\n        }\n        if (in_array($character,\
    \ $vowels)) {\n            $character = substr($character, -1) === 'u' ? 'a' :\
    \ ++$character;\n        }\n        $swapped .= $character;\n    }\n    return\
    \ $swapped;\n}", "\t$alphabet = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i',\
    \ 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y',\
    \ 'z'];\n\t$messageArray = str_split($message);\n\t$newMessage = '';\n\tfor ($i\
    \ = 0; $i < count($messageArray); $i++) {\n\t\t$letter = $messageArray[$i];\n\t\
    \t$newLetter = $letter;\n\t\tif (in_array($letter, $alphabet)) {\n\t\t\t$newLetter\
    \ = $letter;\n\t\t\tif (is_numeric(array_search($letter, $alphabet))) {\n\t\t\t\
    \t$newLetter = $alphabet[array_search($letter, $alphabet) + 2];\n\t\t\t} else\
    \ {\n\t\t\t\t$newLetter = $alphabet[0];\n\t\t\t}\n\t\t}\n\t\t$newMessage .= $newLetter;\n\
    \t}\n\treturn $newMessage;\n}\n\necho encode(\"test\") . PHP_EOL;\necho encode(\"\
    This is a message\") . PHP_EOL;", "  $lowervowels = array('a', 'e', 'i', 'o',\
    \ 'u');\n  $uppervowels = array('A', 'E', 'I', 'O', 'U');\n  $output = '';\n \
    \ for ($i = 0; $i < strlen($message); $i++) {\n    if (in_array($message[$i],\
    \ $lowervowels)) {\n      $output .= $lowervowels[(array_search($message[$i],\
    \ $lowervowels) + 2) % 5];\n    } else if (in_array($message[$i], $uppervowels))\
    \ {\n      $output .= $uppervowels[(array_search($message[$i], $uppervowels) +\
    \ 2) % 5];\n    } else if (ctype_upper($message[$i])) {\n      $output .= strtolower($message[$i]);\n\
    \    } else {\n      $output .= strtoupper($message[$i]);\n    }\n  }\n  return\
    \ $output;\n}\necho encode(\"This is a message\").'<br>';\n", "\treturn $message;\n\
    }", "\t$alphabet = array('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z');\n\
    \t$message = strtolower($message);\n\t$vowels = array('a','e','i','o','u');\n\t\
    $message = str_split($message);\n\t$encoded_message = \"\";\n\tforeach ($message\
    \ as $letter) {\n\t\tif (in_array($letter, $vowels)) {\n\t\t\t$key = array_search($letter,\
    \ $alphabet);\n\t\t\t$key += 2;\n\t\t\tif ($key > 25) {\n\t\t\t\t$key -= 26;\n\
    \t\t\t}\n\t\t\t$encoded_message .= $alphabet[$key];\n\t\t} else {\n\t\t\t$encoded_message\
    \ .= $letter;\n\t\t}\n\t}\n\treturn $encoded_message;\n}\necho encode(\"test\"\
    );\necho \"<br>\";\necho encode(\"This is a message\");", "    $vowels = [\"a\"\
    , \"e\", \"i\", \"o\", \"u\"];\n    $messageArr = str_split($message);\n    $newArr\
    \ = [];\n    for ($i = 0; $i < count($messageArr); $i++) {\n        if (in_array($messageArr[$i],\
    \ $vowels)) {\n            array_push($newArr, $vowels[($vowels.indexOf($messageArr[$i])\
    \ + 2) % 5]);\n        } else {\n            array_push($newArr, $messageArr[$i]);\n\
    \        }\n    }\n    return implode($newArr);\n}\n", "    $message = strtolower($message);\n\
    \    $vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    $encoded = [];\n    for\
    \ ($i = 0; $i < strlen($message); $i++) {\n        if ($message[$i] === $message[$i]\
    \ ^ $message[$i]) {\n            array_push($encoded, strtoupper($message[$i]));\n\
    \        } else if (in_array($message[$i], $vowels)) {\n            $key = array_search($message[$i],\
    \ $vowels);\n            $val = $vowels[($key + 2) % 5];\n            array_push($encoded,\
    \ $val);\n        } else {\n            array_push($encoded, $message[$i]);\n\
    \        }\n    }\n    $encodedMessage = implode($encoded);\n    return $encodedMessage;\n\
    }\necho encode(\"This is a message\") . \"\\n\";", "    $index_vowels = array(\n\
    \        'a' => 2,\n        'e' => 4,\n        'i' => 6,\n        'o' => 8,\n\
    \        'u' => 10\n    );\n    $array_message = str_split($message);\n    $vowels\
    \ = array_keys($index_vowels);\n    $result = array();\n    foreach ($array_message\
    \ as $letter) {\n        $letter = strtolower($letter);\n        if (in_array($letter,\
    \ $vowels)) {\n            $result[] = chr(ord($letter) + $index_vowels[$letter]);\n\
    \        } else {\n            $result[] = $letter;\n        }\n    }\n    return\
    \ implode($result);\n}\necho encode(\"test\") . \"\\n\";\necho encode(\"This is\
    \ a message\") . \"\\n\";", "    $newMessage = \"\";\n    $vowels = [\"a\", \"\
    e\", \"i\", \"o\", \"u\"];\n    for ($i = 0; $i < strlen($message); $i++) {\n\
    \        if ($message[$i] == strtoupper($message[$i])) {\n            $newMessage\
    \ .= strtolower($message[$i]);\n        } else if ($message[$i] == strtolower($message[$i]))\
    \ {\n            $newMessage .= strtoupper($message[$i]);\n        } else {\n\
    \            $newMessage .= $message[$i];\n        }\n    }\n    $newMessage =\
    \ str_split($newMessage);\n    $output = \"\";\n    foreach ($newMessage as $letter)\
    \ {\n        if ($letter == \"a\") {\n            $output .= \"c\";\n        }\
    \ else if ($letter == \"e\") {\n            $output .= \"g\";\n        } else\
    \ if ($letter == \"i\") {\n            $output .= \"k\";\n        } else if ($letter\
    \ == \"o\") {\n            $output .= \"q\";\n        } else if ($letter == \"\
    u\") {\n            $output .= \"y\";\n        } else {\n            $output .=\
    \ $letter;\n        }\n    }\n    return $output;\n}\necho encode(\"test\") .\
    \ PHP_EOL;\necho encode(\"This is a message\") . PHP_EOL;", "    $alphabet = \"\
    abcdefghijklmnopqrstuvwxyz\";\n    $result = \"\";\n    for ($i = 0; $i < strlen($message);\
    \ $i++) {\n        $curr = $message[$i];\n        if (ctype_alpha($curr)) {\n\
    \            $lower = strtolower($curr);\n            $index = strpos($alphabet,\
    \ $lower);\n            if (is_vowel($lower)) {\n                $result .= $alphabet[($index\
    \ + 2) % 26];\n            } else {\n                $result .= $curr;\n     \
    \       }\n        } else {\n            $result .= $curr;\n        }\n    }\n\
    \    return $result;\n}\n", "\t$alphabet = array(\"a\", \"b\", \"c\", \"d\", \"\
    e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\");\n\t\
    $length = strlen($message);\n\t$encoded = \"\";\n\tfor ($i = 0; $i < $length;\
    \ $i++) {\n\t\t$char = $message[$i];\n\t\tif (in_array($char, $alphabet)) {\n\t\
    \t\t$position = array_search($char, $alphabet);\n\t\t\tif (in_array($char, array(\"\
    a\", \"e\", \"i\", \"o\", \"u\"))) {\n\t\t\t\t$char = $alphabet[($position + 2)\
    \ % 26];\n\t\t\t}\n\t\t\t$encoded .= $char;\n\t\t} else {\n\t\t\t$encoded .= $char;\n\
    \t\t}\n\t}\n\treturn $encoded;\n}", "\t$vowels = array(\"a\", \"e\", \"i\", \"\
    o\", \"u\");\n\t$new_message = \"\";\n\t$count = 0;\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\tif (in_array($message[$i], $vowels)) {\n\t\t\t$count++;\n\t\t\t\
    if ($count == count($vowels)) {\n\t\t\t\t$count = 0;\n\t\t\t}\n\t\t\tif ($message[$i]\
    \ == \"u\") {\n\t\t\t\t$new_message .= \"a\";\n\t\t\t} else {\n\t\t\t\t$index\
    \ = array_search($message[$i], $vowels);\n\t\t\t\t$new_message .= $vowels[$index\
    \ + 1];\n\t\t\t}\n\t\t} else {\n\t\t\tif (ctype_upper($message[$i])) {\n\t\t\t\
    \t$new_message .= strtolower($message[$i]);\n\t\t\t} else {\n\t\t\t\t$new_message\
    \ .= strtoupper($message[$i]);\n\t\t\t}\n\t\t}\n\t}\n\treturn $new_message;\n\
    }\n\nvar_dump(encode(\"This is a message\"));\nvar_dump(encode(\"tHKS KS C MGSSCGG\"\
    ));\nvar_dump(encode(\"test\"));\nvar_dump(encode(\"tgst\"));\n", "  $vowels =\
    \ [\n    'a' => 'c',\n    'e' => 'g',\n    'i' => 'k',\n    'o' => 'q',\n    'u'\
    \ => 'y',\n  ];\n  $letters = str_split($message);\n  $encoded = [];\n  foreach\
    \ ($letters as $letter) {\n    if (ctype_alpha($letter)) {\n      $encoded[] =\
    \ strtoupper($letter) === $letter ? strtolower($letter) : strtoupper($letter);\n\
    \    } else {\n      $encoded[] = $letter;\n    }\n  }\n  $encoded = implode('',\
    \ $encoded);\n  return strtr($encoded, $vowels);\n}\necho encode(\"test\");\n\
    echo encode(\"This is a message\");", "\n}", "\t$vowels = ['a', 'e', 'i', 'o',\
    \ 'u'];\n\t$encoded_msg = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\
    \t\tif (in_array($message[$i], $vowels)) {\n\t\t\t// encode the message\n\t\t\t\
    $index = array_search($message[$i], $vowels);\n\t\t\t$encoded_msg .= $vowels[($index\
    \ + 2) % 5];\n\t\t} else {\n\t\t\t// leave it as it is\n\t\t\t$encoded_msg .=\
    \ $message[$i];\n\t\t}\n\t}\n\treturn $encoded_msg;\n}\n\necho encode(\"This is\
    \ a message\") . PHP_EOL;\necho encode(\"Test\") . PHP_EOL;", "    $vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    $letters = str_split($message);\n    $newMessage\
    \ = \"\";\n    for ($i = 0; $i < count($letters); $i++) {\n        if (ctype_upper($letters[$i]))\
    \ {\n            $newMessage .= strtolower($letters[$i]);\n        } else if (ctype_lower($letters[$i]))\
    \ {\n            $newMessage .= strtoupper($letters[$i]);\n        } else {\n\
    \            $newMessage .= $letters[$i];\n        }\n    }\n    $letters = str_split($newMessage);\n\
    \    $newMessage = \"\";\n    for ($i = 0; $i < count($letters); $i++) {\n   \
    \     if (in_array($letters[$i], $vowels)) {\n            $newMessage .= getNextTwo($letters[$i]);\n\
    \        } else {\n            $newMessage .= $letters[$i];\n        }\n    }\n\
    \    return $newMessage;\n}", "\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"\
    u\");\n\t$encode_message = \"\";\n\tfor ($i = 0; $i < strlen($message); $i++)\
    \ {\n\t\t$current_char = $message[$i];\n\t\tif (in_array($current_char, $vowels))\
    \ {\n\t\t\t$encode_message .= chr(ord($current_char) + 2);\n\t\t} else if (ord($current_char)\
    \ > 64 && ord($current_char) < 91) {\n\t\t\t$encode_message .= chr(ord($current_char)\
    \ + 32);\n\t\t} else if (ord($current_char) > 96 && ord($current_char) < 123)\
    \ {\n\t\t\t$encode_message .= chr(ord($current_char) - 32);\n\t\t} else {\n\t\t\
    \t$encode_message .= $current_char;\n\t\t}\n\t}\n\treturn $encode_message;\n}\n\
    \necho \"This is a message: \" . encode(\"This is a message\") . \"\\n\";\necho\
    \ \"test: \" . encode(\"test\") . \"\\n\";\necho \"cjcb: \" . encode(\"cjcb\"\
    ) . \"\\n\";\necho \"cjCb: \" . encode(\"cjCb\") . \"\\n\";\necho \"7: \" . encode(\"\
    7\") . \"\\n\";\necho \"TEST: \" . encode(\"TEST\") . \"\\n\";", "\t$encoded =\
    \ \"\";\n\t$vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n\t$codes = [0, 0, 0,\
    \ 0, 0];\n\t$codes[0] = str_replace(\"a\", \"c\", $message);\n\t$codes[1] = str_replace(\"\
    e\", \"g\", $codes[0]);\n\t$codes[2] = str_replace(\"i\", \"k\", $codes[1]);\n\
    \t$codes[3] = str_replace(\"o\", \"q\", $codes[2]);\n\t$codes[4] = str_replace(\"\
    u\", \"s\", $codes[3]);\n\t$encoded = $codes[4];\n\tfor ($i = 0; $i < strlen($encoded);\
    \ $i++) {\n\t\tif (ctype_upper($encoded[$i])) {\n\t\t\t$encoded[$i] = strtolower($encoded[$i]);\n\
    \t\t} else {\n\t\t\t$encoded[$i] = strtoupper($encoded[$i]);\n\t\t}\n\t}\n\treturn\
    \ $encoded;\n}\n", "\t\n\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t$charArray =\
    \ str_split($message);\n\t$encodedArray = [];\n\t\n\tforeach ($charArray as $char)\
    \ {\n\t\tif(ctype_upper($char)) {\n\t\t\t$encodedArray[] = strtolower($char);\n\
    \t\t} else if(ctype_lower($char)) {\n\t\t\t$encodedArray[] = strtoupper($char);\n\
    \t\t} else {\n\t\t\t$encodedArray[] = $char;\n\t\t}\n\t}\n\t\n\t$encodedArray\
    \ = str_split(implode('', $encodedArray));\n\t$newArray = [];\n\t\n\tforeach ($encodedArray\
    \ as $char) {\n\t\tif(in_array($char, $vowels)) {\n\t\t\t$charIndex = array_search($char,\
    \ $vowels);\n\t\t\t$newArray[] = $vowels[$charIndex + 2];\n\t\t} else {\n\t\t\t\
    $newArray[] = $char;\n\t\t}\n\t}\n\t\n\treturn implode('', $newArray);\n}\necho\
    \ encode(\"test\");\necho encode(\"This is a message\");", "    // Create an array\
    \ of all vowels, in order\n    $vowels = str_split(\"aeiou\");\n    // Create\
    \ an array of the letters of the alphabet\n    $alphabet = str_split(\"abcdefghijklmnopqrstuvwxyz\"\
    );\n    // Create an empty output string\n    $output = \"\";\n    // Create an\
    \ array of all the letters in the message\n    $letterArr = str_split($message);\n\
    \    // Loop through the message\n    foreach ($letterArr as $letter) {\n    \
    \    // If the letter is uppercase, downcase it\n        if (ctype_upper($letter))\
    \ {\n            $letter = strtolower($letter);\n        }\n        // If the\
    \ letter is a vowel, replace it with the next two letters in the alphabet\n  \
    \      if (in_array($letter, $vowels)) {\n            $currentIndex = array_search($letter,\
    \ $vowels);\n            $letter = $vowels[($currentIndex + 2) % count($vowels)];\n\
    \        }\n        // Add the letter to the output string\n        $output .=\
    \ $letter;\n    }\n    // Swap case of each letter in the output string\n    $output\
    \ = strtoupper($output);\n    return $output;\n}", "  $alphabet = range('a', 'z');\n\
    \  $encoded_message = \"\";\n  for ($i = 0; $i < strlen($message); $i++) {\n \
    \   $position = array_search(strtolower($message[$i]), $alphabet);\n    if ($position\
    \ === false) {\n      $encoded_message .= $message[$i];\n    } else if ($message[$i]\
    \ === strtoupper($message[$i])) {\n      $encoded_message .= strtoupper($alphabet[($position\
    \ + 2) % 26]);\n    } else {\n      $encoded_message .= $alphabet[($position +\
    \ 2) % 26];\n    }\n  }\n  return $encoded_message;\n}\necho encode(\"test\")\
    \ . \"\\n\";\necho encode(\"This is a message\") . \"\\n\";", "\t$message = strtolower($message);\n\
    \t$cipher = \"\";\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\tfor\
    \ ($i = 0; $i < strlen($message); $i++) {\n\t\tif (ctype_alpha($message[$i]))\
    \ {\n\t\t\tif (ctype_upper($message[$i])) {\n\t\t\t\t$cipher .= strtoupper(\n\t\
    \t\t\t\t(in_array($message[$i], $vowels)) ? $vowels[(array_search($message[$i],\
    \ $vowels) + 2) % 5] : $message[$i]\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\t$cipher\
    \ .= (in_array($message[$i], $vowels)) ? $vowels[(array_search($message[$i], $vowels)\
    \ + 2) % 5] : $message[$i];\n\t\t\t}\n\t\t} else {\n\t\t\t$cipher .= $message[$i];\n\
    \t\t}\n\t}\n\treturn $cipher;\n}\necho encode(\"This is a message\") . \"\\n\"\
    ;", "    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $newMessage = \"\";\n\
    \    for ($i = 0; $i < strlen($message); $i++) {\n        $letter = strtolower($message[$i]);\n\
    \        $newLetter = $letter;\n        if (in_array($letter, $vowels)) {\n  \
    \          $newIndex = array_search($letter, $vowels) + 2;\n            if ($newIndex\
    \ > count($vowels) - 1) {\n                $newIndex = $newIndex - count($vowels);\n\
    \            }\n            $newLetter = $vowels[$newIndex];\n        }\n    \
    \    if (rand(0, 1) === 1) {\n            $newLetter = strtoupper($newLetter);\n\
    \        }\n        $newMessage .= $newLetter;\n    }\n    return $newMessage;\n\
    }\n\necho \"test: \" . encode(\"test\") . \"\\n\";\necho \"This is a message:\
    \ \" . encode(\"This is a message\") . \"\\n\";", "\t$offset = 2;\n\t$out = \"\
    \";\n\t$vowels = \"aeiou\";\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\
    \t$c = strtolower($message[$i]);\n\t\t$out .= ($c >= 'a' && $c <= 'z') ? (($c\
    \ >= 'a' && $c <= 'z') ? (ctype_upper($message[$i]) ? strtoupper($c) : $c) : $message[$i]);\n\
    \t\tif (strpos($vowels, $c) !== false) {\n\t\t\t$out[$i] = $vowels[(strpos($vowels,\
    \ $c) + $offset) % strlen($vowels)];\n\t\t}\n\t}\n\treturn $out;\n}\necho \"Sample\
    \ usage:\\n\";\necho \">>> encode(\\\"test\\\")\\n\";\necho \"\\\"\".encode(\"\
    test\").\"\\\"\\n\";\necho \">>> encode(\\\"This is a message\\\")\\n\";\necho\
    \ \"\\\"\".encode(\"This is a message\").\"\\\"\\n\";", "    $message = strtolower($message);\n\
    \    $message = str_split($message);\n    $vowels = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"];\n    $encoded = [];\n    for ($i = 0; $i < count($message); $i++) {\n\
    \        if (in_array($message[$i], $vowels)) {\n            $encoded[] = $vowels[(array_search($message[$i],\
    \ $vowels) + 2) % 5];\n        } else {\n            $encoded[] = $message[$i];\n\
    \        }\n    }\n    return implode(\"\", $encoded);\n}\n\necho encode(\"This\
    \ is a message\") . PHP_EOL;\n", "    $alphabet = 'abcdefghijklmnopqrstuvwxyz';\n\
    \    $message = strtolower($message);\n    $encodedMessage = '';\n    $vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    for ($i = 0; $i < strlen($message); $i++)\
    \ {\n        if (in_array($message[$i], $vowels)) {\n            $index = strpos($alphabet,\
    \ $message[$i]) + 2;\n            $encodedMessage .= $alphabet[$index % 26];\n\
    \        } else {\n            $encodedMessage .= $message[$i];\n        }\n \
    \   }\n    return strtoupper($encodedMessage);\n}\n\necho encode('test') . PHP_EOL;\n\
    echo encode('This is a message') . PHP_EOL;", "    $letters = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    $encoded_message = \"\";\n    for ($i = 0; $i < strlen($message); $i++)\
    \ {\n        $index = strpos($letters, strtolower($message[$i]));\n        if\
    \ ($index === false) {\n            $encoded_message .= $message[$i];\n      \
    \  } else {\n            $letter = $letters[($index + 2) % 26];\n            if\
    \ (ctype_upper($message[$i])) {\n                $letter = strtoupper($letter);\n\
    \            }\n            $encoded_message .= $letter;\n        }\n    }\n \
    \   return $encoded_message;\n}\n", "    $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    $vowels = \"aeiou\";\n    $new_message = \"\";\n    for ($i = 0; $i < strlen($message);\
    \ $i++) {\n        $new_message = $new_message . convert_letter($message[$i],\
    \ $alphabet, $vowels);\n    }\n    return $new_message;\n}\n", "\t$encoded = '';\n\
    \t$vowels = array('a', 'e', 'i', 'o', 'u');\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\t$letter = strtolower($message[$i]);\n\t\tif (in_array($letter,\
    \ $vowels)) {\n\t\t\t$encoded .= $vowels[(array_search($letter, $vowels) + 2)\
    \ % 5];\n\t\t} else if (ctype_alpha($letter)) {\n\t\t\t$encoded .= (ctype_upper($message[$i]))\
    \ ? strtoupper($letter) : $letter;\n\t\t}\n\t}\n\treturn $encoded;\n}\nprint_r(encode(\"\
    test\"));\necho \"<br>\";\nprint_r(encode(\"This is a message\"));\necho \"<br>\"\
    ;\nprint_r(encode(\"This is a question?\"));\necho \"<br>\";\nprint_r(encode(\"\
    Hello?\"));\necho \"<br>\";\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n  \
    \  $newMessage = \"\";\n    for ($i = 0; $i < strlen($message); $i++) {\n    \
    \    if (in_array($message[$i], $vowels)) {\n            $newMessage .= $vowels[(array_search($message[$i],\
    \ $vowels) + 2) % count($vowels)];\n        } else {\n            $newMessage\
    \ .= $message[$i];\n        }\n    }\n    return strtoupper($newMessage);\n}\n\
    echo encode(\"This is a message\");", "    $encoded_string = \"\";\n    $count\
    \ = 0;\n    while($count < strlen($message)) {\n        $encoded_string .= $message[$count];\n\
    \        $count++;\n    }\n    return $encoded_string;\n}", "  $message = strtolower($message);\n\
    \  $encoded = \"\";\n  for ($i = 0; $i < strlen($message); $i++) {\n    $c = $message[$i];\n\
    \    $encoded .= ($c == \"z\") ? \"b\" : chr(ord($c) + 2);\n  }\n  return $encoded;\n\
    }\n", "    $alphabet = str_split(\"abcdefghijklmnopqrstuvwxyz\");\n    $vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    $characters = str_split($message);\n\
    \    $encoded = [];\n    foreach ($characters as $key => $char) {\n        if\
    \ (ctype_alpha($char)) {\n            if (in_array(strtolower($char), $vowels))\
    \ {\n                $vowel_ind = array_search(strtolower($char), $vowels);\n\
    \                $vowel_ind += 2;\n                if ($vowel_ind > 4) {\n   \
    \                 $vowel_ind -= 5;\n                }\n                $char =\
    \ strtoupper($vowels[$vowel_ind]);\n            } else {\n                $character_ind\
    \ = array_search(strtolower($char), $alphabet);\n                $character_ind\
    \ += 2;\n                if ($character_ind > 25) {\n                    $character_ind\
    \ -= 26;\n                }\n                $char = strtoupper($alphabet[$character_ind]);\n\
    \            }\n        }\n        $encoded[] = $char;\n    }\n    return implode(\"\
    \", $encoded);\n}\n", "  $letters = str_split($message);\n  $encoded = [];\n \
    \ $vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n  $newvowels = [\"c\", \"g\"\
    , \"k\", \"o\", \"s\"];\n  foreach ($letters as $index => $letter) {\n    if (in_array($letter,\
    \ $vowels)) {\n      $encoded[] = $newvowels[array_search($letter, $vowels)];\n\
    \    } else if (in_array(strtolower($letter), $vowels)) {\n      $encoded[] =\
    \ strtoupper($newvowels[array_search(strtolower($letter), $vowels)]);\n    } else\
    \ if (in_array(strtoupper($letter), $vowels)) {\n      $encoded[] = strtolower($newvowels[array_search(strtoupper($letter),\
    \ $vowels)]);\n    } else {\n      $encoded[] = $letter;\n    }\n  }\n  return\
    \ implode($encoded);\n}\n\necho encode(\"This is a message\") . \"\\n\";", "\t\
    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$message = strtolower($message);\n\
    \t$message = str_split($message);\n\tfor ($i = 0; $i < count($message); $i++)\
    \ {\n\t\tif (in_array($message[$i], $vowels)) {\n\t\t\tif ($message[$i] == \"\
    u\") {\n\t\t\t\t$message[$i] = \"a\";\n\t\t\t} else {\n\t\t\t\t$message[$i] =\
    \ ++$message[$i];\n\t\t\t}\n\t\t}\n\t}\n\t$message = strtoupper($message);\n\t\
    $message = implode($message);\n\treturn $message;\n}\n\necho encode(\"This is\
    \ a message\");\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

language: php
name: HumanEval_102_choose_num
results:
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  if ($x > $y) {\n    return -1;\n  }\n  for ($i = $y; $i >= $x; $i--)\
    \ {\n    if ($i % 2 == 0) {\n      return $i;\n    }\n  }\n  return -1;\n}\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823419
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // Your code here\n  // Hint: use the % operator\n}\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxs66a3zl.php:19\n\
    Stack trace:\n#0 /tmp/tmpxs66a3zl.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpxs66a3zl.php\
    \ on line 19\n"
  timestamp: 1659823419
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // REPLACE THE BODY OF THIS FUNCTION WITH YOUR OWN IMPLEMENTATION\n\
    \    if ($x > $y) {\n        return -1;\n    }\n    $num = -1;\n    for ($i =\
    \ $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $num = $i;\n\
    \        }\n    }\n    return $num;\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823419
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // YOUR CODE HERE\n    if ($x % 2 != 0) {\n        $x += 1;\n   \
    \ }\n    if ($y % 2 != 0) {\n        $y -= 1;\n    }\n    if ($x < $y) {\n   \
    \     return $y;\n    } else if ($x > $y) {\n        return $x;\n    } else {\n\
    \        return -1;\n    }\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphf0xsfye.php:32\n\
    Stack trace:\n#0 /tmp/tmphf0xsfye.php(41): test()\n#1 {main}\n  thrown in /tmp/tmphf0xsfye.php\
    \ on line 32\n"
  timestamp: 1659823419
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\t$biggest = $x;\n\tfor ($i = $x + 1; $i <= $y; $i++) {\n\t\tif ($i %\
    \ 2 == 0) {\n\t\t\t$biggest = $i;\n\t\t}\n\t}\n\tif ($biggest % 2 == 0) {\n\t\t\
    return $biggest;\n\t} else {\n\t\treturn -1;\n\t}\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpltocju79.php:32\n\
    Stack trace:\n#0 /tmp/tmpltocju79.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpltocju79.php\
    \ on line 32\n"
  timestamp: 1659823419
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n    $num = max($x, $y);\n    if ($num % 2 == 0)\
    \ {\n        return $num;\n    } else {\n        return -1;\n    }\n}\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa8ndzoq1.php:24\n\
    Stack trace:\n#0 /tmp/tmpa8ndzoq1.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpa8ndzoq1.php\
    \ on line 24\n"
  timestamp: 1659823419
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\t$i = min($x, $y);\n\n\twhile ($i <= max($x, $y)) {\n\t\tif ($i % 2\
    \ == 0) {\n\t\t\treturn $i;\n\t\t}\n\t\t$i++;\n\t}\n\treturn -1;\n}\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkvgol7pp.php:26\n\
    Stack trace:\n#0 /tmp/tmpkvgol7pp.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpkvgol7pp.php\
    \ on line 26\n"
  timestamp: 1659823419
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // declare placeholder\n  $the_number = -1;\n  // start loop at first\
    \ number\n  for ($i = $x; $i <= $y; $i++) {\n    // if the number is even, set\
    \ the placeholder to that number\n    if ($i % 2 == 0) {\n      $the_number =\
    \ $i;\n    }\n  }\n  // return the placeholder\n  return $the_number;\n}\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823419
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\t// TODO\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprswdwpp2.php:19\n\
    Stack trace:\n#0 /tmp/tmprswdwpp2.php(29): test()\n#1 {main}\n  thrown in /tmp/tmprswdwpp2.php\
    \ on line 19\n"
  timestamp: 1659823419
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Replace this line with your code.\n}\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp2nzkjsm.php:18\n\
    Stack trace:\n#0 /tmp/tmpp2nzkjsm.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpp2nzkjsm.php\
    \ on line 18\n"
  timestamp: 1659823419
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // Your code here\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp511hwr8t.php:18\n\
    Stack trace:\n#0 /tmp/tmp511hwr8t.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp511hwr8t.php\
    \ on line 18\n"
  timestamp: 1659823419
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n   \
    \         return $i;\n        }\n    }\n    return -1;\n}\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx70pa10f.php:23\n\
    Stack trace:\n#0 /tmp/tmpx70pa10f.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx70pa10f.php\
    \ on line 23\n"
  timestamp: 1659823419
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  if ($x%2==0){\n    if ($y%2==0){\n      return max($x, $y);\n    }\
    \ else {\n      return $y-1;\n    }\n  } else {\n    if ($y%2==0){\n      return\
    \ $y;\n    } else {\n      return -1;\n    }\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8rf1pijw.php:32\n\
    Stack trace:\n#0 /tmp/tmp8rf1pijw.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp8rf1pijw.php\
    \ on line 32\n"
  timestamp: 1659823419
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  for ($i = $x; $i <= $y; $i++) {\n    if ($i % 2 == 0) {\n      return\
    \ $i;\n    }\n  }\n  return -1;\n}\necho choose_num(12, 15);\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "12\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm4i4oja0.php:24\n\
    Stack trace:\n#0 /tmp/tmpm4i4oja0.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpm4i4oja0.php\
    \ on line 24\n"
  timestamp: 1659823419
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n   if($x > $y){\n       return -1;\n   } else if($x % 2 == 0){\n    \
    \   return $x;\n   } else if($x % 2 == 1 && $y % 2 == 1){\n       return -1;\n\
    \   } else if($x % 2 == 1 && $y % 2 == 0){\n       return $y;\n   }\n}\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdwmj4a3d.php:26\n\
    Stack trace:\n#0 /tmp/tmpdwmj4a3d.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdwmj4a3d.php\
    \ on line 26\n"
  timestamp: 1659823419
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\t\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyuvxne2a.php:19\n\
    Stack trace:\n#0 /tmp/tmpyuvxne2a.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpyuvxne2a.php\
    \ on line 19\n"
  timestamp: 1659823419
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    $n = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2\
    \ == 0) {\n            $n = $i;\n        }\n    }\n    return $n;\n}\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823419
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write your code here\n    // To print results to the standard\
    \ output you can use print\n    // Example:\n    // print \"Hello world!\";\n\
    \    $result = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 ==\
    \ 0) {\n            $result = $i;\n        }\n    }\n    print $result;\n}\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwb7lnzj4.php:28\n\
    Stack trace:\n#0 /tmp/tmpwb7lnzj4.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpwb7lnzj4.php\
    \ on line 28\n"
  timestamp: 1659823419
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    $z = min($x, $y);\n    $w = max($x, $y);\n    if ($z % 2 == 0) {\n\
    \        return $z;\n    } else {\n        return choose_num($z + 1, $w);\n  \
    \  }\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyi5nam4a.php:25\n\
    Stack trace:\n#0 /tmp/tmpyi5nam4a.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpyi5nam4a.php\
    \ on line 25\n"
  timestamp: 1659823419
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // YOUR CODE HERE\n    $biggest_even = -1;\n    if ($x % 2 == 0)\
    \ {\n        $biggest_even = $x;\n    }\n    if ($y % 2 == 0) {\n        $biggest_even\
    \ = $y;\n    }\n    if ($x % 2 == 0 && $y % 2 == 0) {\n        if ($x > $y) {\n\
    \            $biggest_even = $x;\n        } else {\n            $biggest_even\
    \ = $y;\n        }\n    }\n    return $biggest_even;\n}\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy4j4z8qp.php:33\n\
    Stack trace:\n#0 /tmp/tmpy4j4z8qp.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpy4j4z8qp.php\
    \ on line 33\n"
  timestamp: 1659823419
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  $max = -1;\n  if ($x < $y) {\n    for ($i = $x; $i <= $y; $i++) {\n\
    \      if ($i % 2 == 0) {\n        $max = $i;\n      }\n    }\n  }\n  return $max;\n\
    }\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2c55kzk3.php:33\n\
    Stack trace:\n#0 /tmp/tmp2c55kzk3.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp2c55kzk3.php\
    \ on line 33\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    return (choose_max_even($x, $y) == -1) ? -1 : choose_max_even($x,\
    \ $y);\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function choose_max_even()\
    \ in /tmp/tmpf9da19k_.php:11\nStack trace:\n#0 /tmp/tmpf9da19k_.php(15): choose_num(12,\
    \ 15)\n#1 /tmp/tmpf9da19k_.php(19): candidate(12, 15)\n#2 /tmp/tmpf9da19k_.php(29):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpf9da19k_.php on line 11\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    $biggest_even = -1;\n    if ($x > $y) {\n        $tmp = $x;\n   \
    \     $x = $y;\n        $y = $tmp;\n    }\n    for ($i = $x; $i <= $y; $i++) {\n\
    \        if ($i % 2 == 0) {\n            $biggest_even = $i;\n        }\n    }\n\
    \    return $biggest_even;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi08fnn5f.php:31\n\
    Stack trace:\n#0 /tmp/tmpi08fnn5f.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpi08fnn5f.php\
    \ on line 31\n"
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  $evens = array();\n  for ($i = $x; $i <= $y; $i++) {\n    if ($i %\
    \ 2 == 0) {\n      array_push($evens, $i);\n    }\n  }\n  if (empty($evens)) {\n\
    \    return -1;\n  } else {\n    return max($evens);\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    $result = -1;\n    // Fill in the code for this function here.\n\
    \    // Hint: You need to use a for loop. This problem is more difficult than\
    \ \n    // you think. Think carefully about what is the best way to design this\n\
    \    // loop.\n    // Your code here.\n    if ($x <= $y) {\n    \tfor ($i = $x;\
    \ $i <= $y; $i++) {\n    \t\tif ($i % 2 == 0) {\n    \t\t\t$result = $i;\n   \
    \ \t\t}\n    \t}\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x < 0 or $y < 0) {\n        return -1;\n    }\n    if ($x ==\
    \ $y) {\n        if ($x % 2 == 0) {\n            return $x;\n        } else {\n\
    \            return -1;\n        }\n    }\n    if ($x > $y) {\n        $low =\
    \ $y;\n        $high = $x;\n    } else {\n        $low = $x;\n        $high =\
    \ $y;\n    }\n    $max = -1;\n    for ($num = $low; $num <= $high; $num = $num\
    \ + 1) {\n        if ($num % 2 == 0) {\n            $max = $num;\n        }\n\
    \    }\n    return $max;\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjm0jpwxu.php:42\n\
    Stack trace:\n#0 /tmp/tmpjm0jpwxu.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpjm0jpwxu.php\
    \ on line 42\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    $biggest = -1;\n    if ($x > $y) {\n        $temp = $x;\n       \
    \ $x = $y;\n        $y = $temp;\n    }\n    for ($i = $x; $i <= $y; $i += 1) {\n\
    \        if ($i % 2 == 0 && $i > $biggest) {\n            $biggest = $i;\n   \
    \     }\n    }\n    return $biggest;\n}\n\nfunction candidate(...$args) {\n  \
    \  return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx1z7fx2w.php:31\n\
    Stack trace:\n#0 /tmp/tmpx1z7fx2w.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpx1z7fx2w.php\
    \ on line 31\n"
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  if ($x > $y) {\n    return -1;\n  }\n  else {\n    $bignum = -1;\n\
    \    for ($i = $x; $i <= $y; $i++) {\n      if ($i % 2 == 0 && $i > $bignum) {\n\
    \        $bignum = $i;\n      }\n    }\n    return $bignum;\n  }\n}\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  if ($x > $y) {\n    $tmp = $x;\n    $x = $y;\n    $y = $tmp;\n  }\n\
    \  while ($x <= $y) {\n    if ($x % 2 == 0) {\n      return $x;\n    }\n    $x++;\n\
    \  }\n  return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiqbeyi96.php:30\n\
    Stack trace:\n#0 /tmp/tmpiqbeyi96.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpiqbeyi96.php\
    \ on line 30\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // YOUR CODE HERE\n  if($x%2==0 && $y%2==0){\n    if($x>$y){\n    \
    \  return $x;\n    }\n    else{\n      return $y;\n    }\n  }\n  elseif($x%2==0){\n\
    \    return $x;\n  }\n  elseif($y%2==0){\n    return $y;\n  }\n  else{\n    return\
    \ -1;\n  }\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphb0q9wtl.php:36\n\
    Stack trace:\n#0 /tmp/tmphb0q9wtl.php(46): test()\n#1 {main}\n  thrown in /tmp/tmphb0q9wtl.php\
    \ on line 36\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptd83h490.php:19\n\
    Stack trace:\n#0 /tmp/tmptd83h490.php(29): test()\n#1 {main}\n  thrown in /tmp/tmptd83h490.php\
    \ on line 19\n"
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\tif($x % 2 != 0) {\n\t\t$x++;\n\t}\n\tif($y % 2 != 0) {\n\t\t$y--;\n\
    \t}\n\tif($x <= $y) {\n\t\treturn $y;\n\t}\n\telse {\n\t\treturn -1;\n\t}\n}\n\
    function candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  if ($x % 2 != 0) {\n    $x = $x + 1;\n  }\n  if ($y % 2 != 0) {\n \
    \   $y = $y - 1;\n  }\n  if ($x < $y) {\n    return $y;\n  } else if ($x > $y)\
    \ {\n    return $x;\n  } else {\n    return -1;\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmfqbk0bh.php:32\n\
    Stack trace:\n#0 /tmp/tmpmfqbk0bh.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpmfqbk0bh.php\
    \ on line 32\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n   \
    \         return $i;\n        }\n    }\n    return -1;\n}\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx70pa10f.php:23\n\
    Stack trace:\n#0 /tmp/tmpx70pa10f.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx70pa10f.php\
    \ on line 23\n"
  timestamp: 1659823419
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Fill in your code here\n    $biggest = $x;\n    for ($i = $x;\
    \ $i <= $y; $i++){\n        if ($i % 2 == 0){\n            if ($i > $biggest){\n\
    \                $biggest = $i;\n            }\n        }\n    }\n    if ($biggest\
    \ == $x){\n        return -1;\n    }\n    return $biggest;\n}\n$x = 14;\n$y =\
    \ 17;\necho choose_num($x, $y);\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptyd3pb8q.php:40\n\
    Stack trace:\n#0 /tmp/tmptyd3pb8q.php(43): test()\n#1 {main}\n  thrown in /tmp/tmptyd3pb8q.php\
    \ on line 40\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  \n  // Your code here\n  // Find out if x is even\n  if ($x % 2 ==\
    \ 0) {\n    // if yes return x\n    return $x;\n  } else {\n    // if no, find\
    \ the next even number in the sequence\n    $x = $x + 1;\n    while ($x <= $y)\
    \ {\n      if ($x % 2 == 0) {\n        return $x;\n      }\n      $x = $x + 1;\n\
    \    }\n    // if no even number is found, return -1\n    return -1;\n  }\n}\n\
    \nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcw35gvva.php:36\n\
    Stack trace:\n#0 /tmp/tmpcw35gvva.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpcw35gvva.php\
    \ on line 36\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\t// Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5__e8m41.php:19\n\
    Stack trace:\n#0 /tmp/tmp5__e8m41.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp5__e8m41.php\
    \ on line 19\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\tif ($x % 2 == 0){\n\t\t$result = $x;\n\t} else {\n\t\t$result = $x\
    \ + 1;\n\t}\n\tif ($y < $result){\n\t\t$result = -1;\n\t}\n\treturn $result;\n\
    }\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2ma3brdo.php:26\n\
    Stack trace:\n#0 /tmp/tmp2ma3brdo.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp2ma3brdo.php\
    \ on line 26\n"
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // TODO: write the code for this function\n  $biggest_even = -1;\n\
    \  for ($i = $x; $i <= $y; $i++) {\n    if ($i % 2 == 0) {\n      $biggest_even\
    \ = $i;\n    }\n  }\n  return $biggest_even;\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  $number = -1;\n  // $number = $x % 2;\n  // echo $number;\n  // if\
    \ ($number == 0) {\n  //   $number = $x;\n  // } else {\n  //   $number = $x -\
    \ 1;\n  // }\n  // while ($number < $y) {\n  //   $number = $number + 2;\n  //\
    \ }\n  // echo $number;\n  // return $number;\n  if ($x % 2 != 0) {\n    $x =\
    \ $x + 1;\n  }\n  if ($y % 2 != 0) {\n    $y = $y - 1;\n  }\n  if ($x > $y) {\n\
    \    return -1;\n  }\n  $number = $y;\n  while ($number >= $x) {\n    if ($number\
    \ % 2 == 0) {\n      return $number;\n    }\n    $number = $number - 1;\n  }\n\
    \  return -1;\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmnp5bnu6.php:19\n\
    Stack trace:\n#0 /tmp/tmpmnp5bnu6.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpmnp5bnu6.php\
    \ on line 19\n"
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n   \
    \         $biggest_even = $i;\n        }\n    }\n    if (isset($biggest_even))\
    \ {\n        return $biggest_even;\n    } else {\n        return -1;\n    }\n\
    }\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x % 2 === 0) {\n        $smaller = $x;\n    } else {\n     \
    \   $smaller = $x + 1;\n    }\n    if ($y % 2 === 0) {\n        $bigger = $y;\n\
    \    } else {\n        $bigger = $y - 1;\n    }\n    if ($bigger < $smaller) {\n\
    \        return -1;\n    } else {\n        return $bigger;\n    }\n}\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\t// put your code here\n\tfor ($x; $x <= $y; $x++) {\n\t\tif ($x % 2\
    \ == 0) {\n\t\t\treturn $x;\n\t\t}\n\t}\n\treturn -1;\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpesosrpec.php:25\n\
    Stack trace:\n#0 /tmp/tmpesosrpec.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpesosrpec.php\
    \ on line 25\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\t\n\t// If y is less than x, or y is equal to x, return -1\n\tif ($y\
    \ < $x || $y == $x) {\n\t\treturn -1;\n\t}\n\t\n\t// Else while x < y, increment\
    \ x by one and check if x is even\n\twhile ($x < $y) {\n\t\t$x += 1;\n\t\tif ($x\
    \ % 2 == 0) {\n\t\t\t// If it is even, return x\n\t\t\treturn $x;\n\t\t}\n\t}\n\
    \t\n\t// If x is not even then return -1\n\treturn -1;\n}\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5odlwvs1.php:36\n\
    Stack trace:\n#0 /tmp/tmp5odlwvs1.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp5odlwvs1.php\
    \ on line 36\n"
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    $result = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i\
    \ % 2 == 0) {\n            $result = $i;\n        }\n    }\n    return $result;\n\
    }\necho choose_num(12, 15);\necho \"\\n\";\necho choose_num(13, 12);\necho \"\\\
    n\";\necho choose_num(15, 12);\necho \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '14

    -1

    -1

    '
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // YOUR CODE HERE\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7spbbvdv.php:19\n\
    Stack trace:\n#0 /tmp/tmp7spbbvdv.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp7spbbvdv.php\
    \ on line 19\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  for ($i = $x; $i <= $y; $i++) {\n    if ($i % 2 == 0) {\n      return\
    \ $i;\n    }\n  }\n  return -1;\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp__60c4ea.php:23\n\
    Stack trace:\n#0 /tmp/tmp__60c4ea.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp__60c4ea.php\
    \ on line 23\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\t// Fill in your code here.\n\treturn -1;\n}\n\necho \"choose_num(12,\
    \ 15) => \" . choose_num(12, 15) . \"\\n\";\necho \"choose_num(13, 12) => \" .\
    \ choose_num(13, 12) . \"\\n\";\necho \"choose_num(3, 6) => \" . choose_num(3,\
    \ 6) . \"\\n\";\necho \"choose_num(3, 7) => \" . choose_num(3, 7) . \"\\n\";\n\
    echo \"choose_num(100, 110) => \" . choose_num(100, 110) . \"\\n\";\necho \"choose_num(1112,\
    \ 1545) => \" . choose_num(1112, 1545) . \"\\n\";\necho \"choose_num(12, 1545)\
    \ => \" . choose_num(12, 1545) . \"\\n\";\nfunction candidate(...$args) {\n  \
    \  return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "choose_num(12, 15) => -1\nchoose_num(13, 12) => -1\nchoose_num(3, 6) =>\
    \ -1\nchoose_num(3, 7) => -1\nchoose_num(100, 110) => -1\nchoose_num(1112, 1545)\
    \ => -1\nchoose_num(12, 1545) => -1\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmph8yibb7k.php:27\nStack trace:\n#0 /tmp/tmph8yibb7k.php(37): test()\n\
    #1 {main}\n  thrown in /tmp/tmph8yibb7k.php on line 27\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  \t// your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9i7j4wlz.php:19\n\
    Stack trace:\n#0 /tmp/tmp9i7j4wlz.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp9i7j4wlz.php\
    \ on line 19\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x == $y) {\n        return $x;\n    }\n    else if ($x > $y)\
    \ {\n        return -1;\n    }\n    else {\n        $biggest = $x;\n        $number\
    \ = $x + 1;\n        while ($number <= $y) {\n            if ($number % 2 == 0)\
    \ {\n                $biggest = $number;\n            }\n            $number++;\n\
    \        }\n        return $biggest;\n    }\n}\nfunction candidate(...$args) {\n\
    \    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7vado361.php:40\n\
    Stack trace:\n#0 /tmp/tmp7vado361.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp7vado361.php\
    \ on line 40\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    $numbers = range($x, $y);\n    $evens = array_filter($numbers, function($num)\
    \ {\n        return $num % 2 == 0;\n    });\n    if (count($evens) > 0) {\n  \
    \      return max($evens);\n    } else {\n        return -1;\n    }\n}\n\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd4zsoqof.php:28\n\
    Stack trace:\n#0 /tmp/tmpd4zsoqof.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpd4zsoqof.php\
    \ on line 28\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\t// TODO: Implement the function\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt2_rqqnn.php:19\n\
    Stack trace:\n#0 /tmp/tmpt2_rqqnn.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpt2_rqqnn.php\
    \ on line 19\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // Your code here!\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp15y7gf6z.php:18\n\
    Stack trace:\n#0 /tmp/tmp15y7gf6z.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp15y7gf6z.php\
    \ on line 18\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  $min = $x < $y ? $x : $y;\n  $max = $x > $y ? $x : $y;\n  $min_even\
    \ = $min % 2 == 0 ? $min : $min + 1;\n  $max_even = $max % 2 == 0 ? $max : $max\
    \ - 1;\n  return $min_even > $max_even ? -1 : $max_even;\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplrtv2374.php:24\n\
    Stack trace:\n#0 /tmp/tmplrtv2374.php(33): test()\n#1 {main}\n  thrown in /tmp/tmplrtv2374.php\
    \ on line 24\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    $result = -1;\n    // Your answer here\n    return $result;\n}\n\
    function candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9utshp7p.php:20\n\
    Stack trace:\n#0 /tmp/tmp9utshp7p.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp9utshp7p.php\
    \ on line 20\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // This function takes two integers and returns the biggest even\n\
    \    // integer number that is in the range [x, y] inclusive. If there's no \n\
    \    // such number, then the function should return -1.\n    // Note: I've used\
    \ the floor function to round the numbers down\n    // Note: The first if statement\
    \ is true when the first integer is even\n    // and greater than the second integer\n\
    \    if ($x % 2 == 0 && $x > $y){\n        return floor($x);\n    }\n    // Note:\
    \ The second if statement is true when the first integer is \n    // odd and greater\
    \ than the second integer\n    elseif ($x % 2 == 1 && $x > $y){\n        return\
    \ floor($x-1);\n    }\n    // Note: The third if statement is true when the first\
    \ integer is odd\n    // and the second integer is greater than the first integer\n\
    \    elseif ($x % 2 == 1 && $x < $y){\n        if ($y % 2 == 0){\n           \
    \ return floor($y);\n        }\n        else{\n            return floor($y-1);\n\
    \        }\n    }\n    // Note: The fourth if statement is true when the first\
    \ integer is even\n    // and the second integer is greater than the first integer\n\
    \    elseif ($x % 2 == 0 && $x < $y){\n        if ($y % 2 == 0){\n           \
    \ return floor($y);\n        }\n        else{\n            return floor($y-1);\n\
    \        }\n    }\n    // Note: This else statement is true when the first and\
    \ second \n    // integer are the same number\n    else{\n        if ($x % 2 ==\
    \ 0){\n            return floor($x);\n        }\n        else{\n            return\
    \ -1;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp034lkhni.php:62\n\
    Stack trace:\n#0 /tmp/tmp034lkhni.php(72): test()\n#1 {main}\n  thrown in /tmp/tmp034lkhni.php\
    \ on line 62\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\tif ($x <= $y) {\n\t\tif ($x % 2 == 0) {\n\t\t\treturn $x;\n\t\t} else\
    \ {\n\t\t\treturn choose_num($x + 1, $y);\n\t\t}\n\t} else {\n\t\treturn -1;\n\
    \t}\n}\necho choose_num(12, 15);\necho \"<br>\";\necho choose_num(13, 12);\necho\
    \ \"<br>\";\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "12<br>-1<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy3pcco7u.php:30\n\
    Stack trace:\n#0 /tmp/tmpy3pcco7u.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpy3pcco7u.php\
    \ on line 30\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  $z = 0;\n  if ($x % 2 == 0 && $y % 2 == 0) {\n    if ($x < $y) {\n\
    \      $z = $y;\n    } else {\n      $z = $x;\n    }\n  } else if ($x % 2 == 0\
    \ && $y % 2 != 0) {\n    $z = $x;\n  } else if ($x % 2 != 0 && $y % 2 == 0) {\n\
    \    $z = $y;\n  } else {\n    $z = -1;\n  }\n  return $z;\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpep7cmn2a.php:33\n\
    Stack trace:\n#0 /tmp/tmpep7cmn2a.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpep7cmn2a.php\
    \ on line 33\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // Your code here\n  if($x > $y) {\n    $lowest = $y;\n    $highest\
    \ = $x;\n  }\n  else {\n    $lowest = $x;\n    $highest = $y;\n  }\n  for($i =\
    \ $highest; $i >= $lowest; $i--) {\n    if($i % 2 == 0) {\n      return $i;\n\
    \    }\n  }\n  return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6sz7u5ra.php:34\n\
    Stack trace:\n#0 /tmp/tmp6sz7u5ra.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp6sz7u5ra.php\
    \ on line 34\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n   \
    \         return $i;\n        }\n    }\n    return -1;\n}\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx70pa10f.php:23\n\
    Stack trace:\n#0 /tmp/tmpx70pa10f.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx70pa10f.php\
    \ on line 23\n"
  timestamp: 1659823419
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // YOUR CODE HERE\n  $biggest = -1;\n  while ($x <= $y) {\n    if ($x\
    \ % 2 == 0) {\n      $biggest = $x;\n    }\n    $x++;\n  }\n  return $biggest;\n\
    }\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    $result = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i\
    \ % 2 == 0) {\n            $result = $i;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // YOUR CODE HERE\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7spbbvdv.php:19\n\
    Stack trace:\n#0 /tmp/tmp7spbbvdv.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp7spbbvdv.php\
    \ on line 19\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\t// Your code goes here!\n\tif ($x <= $y) {\n\t\tif ($x % 2 == 0) {\n\
    \t\t\treturn $x;\n\t\t}\n\t\telse {\n\t\t\t$x++;\n\t\t\treturn choose_num($x,\
    \ $y);\n\t\t}\n\t}\n\telse if ($x > $y) {\n\t\treturn -1;\n\t}\n}\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5b1fgbn7.php:30\n\
    Stack trace:\n#0 /tmp/tmp5b1fgbn7.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp5b1fgbn7.php\
    \ on line 30\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  if ($x%2==0) {\n    return max($x, $y);\n  } else {\n    return max($x-1,\
    \ $y);\n  }\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpllf_qemc.php:22\n\
    Stack trace:\n#0 /tmp/tmpllf_qemc.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpllf_qemc.php\
    \ on line 22\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  if ($x > $y) {\n    return -1;\n  }\n  if ($x % 2 == 0) {\n    return\
    \ $x;\n  }\n  return choose_num($x + 1, $y);\n}\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7_0m8mfv.php:24\n\
    Stack trace:\n#0 /tmp/tmp7_0m8mfv.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp7_0m8mfv.php\
    \ on line 24\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  if ($x % 2 == 0) {\n    return $x;\n  }\n  else {\n    $x++;\n    return\
    \ choose_num($x, $y);\n  }\n}\n\necho choose_num(12, 15) . \"\\n\";\necho choose_num(13,\
    \ 12) . \"\\n\";\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "12\n14\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5mo_nsiq.php:27\n\
    Stack trace:\n#0 /tmp/tmp5mo_nsiq.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp5mo_nsiq.php\
    \ on line 27\n"
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    $z = -1;\n    for ($i = $x; $i <= $y; $i++){\n        if ($i % 2\
    \ == 0){\n            $z = $i;\n        }\n    }\n    return $z;\n}\n\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  if ($x%2 == 0 && $y%2 == 0) {\n    return max($x, $y);\n  }\n  else\
    \ if ($x%2 == 0 && $y%2 != 0) {\n    return $y-1;\n  }\n  else if ($x%2 != 0 &&\
    \ $y%2 == 0) {\n    return $x+1;\n  }\n  else {\n    return -1;\n  }\n}\n\necho\
    \ choose_num(12, 15);\necho '<br>';\necho choose_num(13, 12);\necho '<br>';\n\
    echo choose_num(13, 14);\necho '<br>';\necho choose_num(14, 13);\necho '<br>';\n\
    echo choose_num(15, 15);\necho '<br>';\necho choose_num(12, 12);\necho '<br>';\n\
    echo choose_num(14, 15);\necho '<br>';\necho choose_num(15, 14);\necho '<br>';\n\
    echo choose_num(12, 13);\necho '<br>';\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14<br>14<br>14<br>12<br>-1<br>12<br>14<br>16<br>12<br>\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp1dgu3hmf.php:49\nStack trace:\n#0 /tmp/tmp1dgu3hmf.php(58):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp1dgu3hmf.php on line 49\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x == $y) {\n        return $x % 2 == 0 ? $x : -1;\n    }\n \
    \   $result = max($x, $y);\n    while ($result > min($x, $y)) {\n        if ($result\
    \ % 2 == 0) {\n            return $result;\n        }\n        $result--;\n  \
    \  }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1xyz8b8z.php:32\n\
    Stack trace:\n#0 /tmp/tmp1xyz8b8z.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp1xyz8b8z.php\
    \ on line 32\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  for ($i = $x; $i <= $y; $i++) {\n    if ($i % 2 == 0) {\n      return\
    \ $i;\n    }\n  }\n  return -1;\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwgqyvxf6.php:24\n\
    Stack trace:\n#0 /tmp/tmpwgqyvxf6.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpwgqyvxf6.php\
    \ on line 24\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  if ($x % 2 != 0 || $y % 2 != 0) {\n    $x = $x + 1;\n  }\n  if ($x\
    \ > $y) {\n    return -1;\n  }\n  return $y;\n}\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgv2htpxb.php:24\n\
    Stack trace:\n#0 /tmp/tmpgv2htpxb.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpgv2htpxb.php\
    \ on line 24\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0cv8eu2o.php:19\n\
    Stack trace:\n#0 /tmp/tmp0cv8eu2o.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp0cv8eu2o.php\
    \ on line 19\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Check if $x and $y are positive integers. If not, then print\n\
    \    // an error message and return -1.\n    if (!(is_int($x) && is_int($y)))\
    \ {\n        print \"ERROR: you can only enter positive integers.\";\n       \
    \ return -1;\n    }\n    // Switch the values of $x and $y if $x is greater than\
    \ $y.\n    if ($x > $y) {\n        $tmp = $x;\n        $x = $y;\n        $y =\
    \ $tmp;\n    }\n    // If $x is even and $x is smaller than or equal to $y, then\n\
    \    // return $x.\n    if (($x % 2) == 0 && $x <= $y) {\n        return $x;\n\
    \    }\n    // If $x is odd and $x + 1 is smaller than or equal to $y, then\n\
    \    // return $x + 1.\n    if (($x % 2) == 1 && $x + 1 <= $y) {\n        return\
    \ $x + 1;\n    }\n    // Return -1 if $x is bigger than $y.\n    return -1;\n\
    }\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp73bxi6h0.php:42\n\
    Stack trace:\n#0 /tmp/tmp73bxi6h0.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp73bxi6h0.php\
    \ on line 42\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // IMPLEMENT THIS FUNCTION\n    if ($x % 2 == 0) {\n        return\
    \ $x;\n    }\n    else {\n        if ($x + 1 <= $y) {\n            return $x +\
    \ 1;\n        }\n        else {\n            return -1;\n        }\n    }\n}\n\
    \nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl6yg5me6.php:30\n\
    Stack trace:\n#0 /tmp/tmpl6yg5me6.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpl6yg5me6.php\
    \ on line 30\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write the code for this function here\n}\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0f7lgtwu.php:18\n\
    Stack trace:\n#0 /tmp/tmp0f7lgtwu.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp0f7lgtwu.php\
    \ on line 18\n"
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  if ($x % 2 != 0) {\n    $x = $x + 1;\n  }\n  if ($y % 2 != 0) {\n \
    \   $y = $y - 1;\n  }\n  if ($x > $y) {\n    return -1;\n  }\n  return $y;\n}\n\
    \necho choose_num(12, 15) . \"\\n\";\necho choose_num(13, 12) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '14

    -1

    '
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // ...\n    if($x > $y) {\n        return -1;\n    }\n    elseif($x\
    \ % 2 == 0) {\n        return $x;\n    }\n    else {\n        return $x + 1;\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_78qo9jz.php:28\n\
    Stack trace:\n#0 /tmp/tmp_78qo9jz.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp_78qo9jz.php\
    \ on line 28\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // your code here\n  if($x%2==0 && $y%2==0){\n    return $y;\n  }\n\
    \  elseif($x%2==0 && $y%2!=0){\n    return $y-1;\n  }\n  elseif($x%2!=0 && $y%2==0){\n\
    \    return $x;\n  }\n  else{\n    return -1;\n  }\n}\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp24v5l5hb.php:31\n\
    Stack trace:\n#0 /tmp/tmp24v5l5hb.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp24v5l5hb.php\
    \ on line 31\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\tif ($x%2==0) {\n\t\treturn $x;\n\t} else {\n\t\t$x++;\n\t\twhile ($x<=$y)\
    \ {\n\t\t\tif ($x%2==0) {\n\t\t\t\treturn $x;\n\t\t\t} else {\n\t\t\t\t$x++;\n\
    \t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n}\n\nfunction candidate(...$args) {\n   \
    \ return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsahck1jb.php:31\n\
    Stack trace:\n#0 /tmp/tmpsahck1jb.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpsahck1jb.php\
    \ on line 31\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\tif ($x > $y) {\n\t\treturn -1;\n\t}\n\telse if ($x % 2 == 0 && $y %\
    \ 2 == 0) {\n\t\treturn $y;\n\t}\n\telse if ($x % 2 == 0 && $y % 2 != 0) {\n\t\
    \treturn $y - 1;\n\t}\n\telse if ($x % 2 != 0 && $y % 2 == 0) {\n\t\treturn $y;\n\
    \t}\n\telse if ($x % 2 != 0 && $y % 2 != 0) {\n\t\treturn $y - 1;\n\t}\n}\n\n\
    echo choose_num(13, 15);\necho \"\\n\";\n\nfunction candidate(...$args) {\n  \
    \  return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyc28ehhl.php:42\n\
    Stack trace:\n#0 /tmp/tmpyc28ehhl.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpyc28ehhl.php\
    \ on line 42\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\tif ($x == $y) {\n\t\tif ($x % 2 == 0) {\n\t\t\treturn $x;\n\t\t} else\
    \ {\n\t\t\treturn -1;\n\t\t}\n\t} else if ($x > $y) {\n\t\t$x = $x + $y;\n\t\t\
    $y = $x - $y;\n\t\t$x = $x - $y;\n\t}\n\t$i = $x;\n\twhile ($i < $y) {\n\t\tif\
    \ ($i % 2 == 0) {\n\t\t\t$check = $i;\n\t\t}\n\t\t$i = $i + 1;\n\t}\n\tif ($check\
    \ == \"\") {\n\t\treturn -1;\n\t} else {\n\t\treturn $check;\n\t}\n}\n\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpef9pzn3z.php:42\n\
    Stack trace:\n#0 /tmp/tmpef9pzn3z.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpef9pzn3z.php\
    \ on line 42\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  for ($z = $x; $z <= $y; $z++) {\n    if ($z % 2 == 0) {\n      return\
    \ $z;\n    }\n  }\n  return -1;\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr5mmn4el.php:24\n\
    Stack trace:\n#0 /tmp/tmpr5mmn4el.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpr5mmn4el.php\
    \ on line 24\n"
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    $max_even = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if\
    \ ($i % 2 == 0) {\n            $max_even = $i;\n        }\n    }\n    return $max_even;\n\
    }\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\tif(!is_int($x) || !is_int($y)) {\n\t\treturn -1;\n\t} elseif($x ==\
    \ $y && $x % 2 == 0) {\n\t\treturn $x;\n\t} elseif($x < $y) {\n\t\tfor($i = $x;\
    \ $i <= $y; $i++) {\n\t\t\tif($i % 2 == 0) {\n\t\t\t\treturn $i;\n\t\t\t}\n\t\t\
    }\n\t} elseif($x > $y) {\n\t\tfor($i = $x; $i >= $y; $i--) {\n\t\t\tif($i % 2\
    \ == 0) {\n\t\t\t\treturn $i;\n\t\t\t}\n\t\t}\n\t}\n\treturn -1;\n}\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgueajpm5.php:35\n\
    Stack trace:\n#0 /tmp/tmpgueajpm5.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpgueajpm5.php\
    \ on line 35\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  $i = $x;\n  while ($i <= $y) {\n    if ($i % 2 == 0) {\n      return\
    \ $i;\n    }\n    $i++;\n  }\n  return -1;\n}\nfunction candidate(...$args) {\n\
    \    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_4e_ez70.php:25\n\
    Stack trace:\n#0 /tmp/tmp_4e_ez70.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp_4e_ez70.php\
    \ on line 25\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    $maxEven = $x;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i\
    \ % 2 == 0) {\n            $maxEven = $i;\n        }\n    }\n    if ($maxEven\
    \ % 2 == 0) {\n        return $maxEven;\n    } else {\n        return -1;\n  \
    \  }\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1gkdsls7.php:32\n\
    Stack trace:\n#0 /tmp/tmp1gkdsls7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp1gkdsls7.php\
    \ on line 32\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\t$max = $x;\n\tfor ($i = $x; $i <= $y; $i++) {\n\t\tif ($i % 2 == 0)\
    \ {\n\t\t\tif ($i > $max) {\n\t\t\t\t$max = $i;\n\t\t\t}\n\t\t}\n\t}\n\tif ($max\
    \ % 2 == 0) {\n\t\treturn $max;\n\t} else {\n\t\treturn -1;\n\t}\n}\n\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeepitxo6.php:34\n\
    Stack trace:\n#0 /tmp/tmpeepitxo6.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpeepitxo6.php\
    \ on line 34\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\tfor ($i = $x; $i <= $y; $i++) {\n\t\tif ($i % 2 == 0) {\n\t\t\treturn\
    \ $i;\n\t\t}\n\t}\n\treturn -1;\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu_htdg3x.php:23\n\
    Stack trace:\n#0 /tmp/tmpu_htdg3x.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpu_htdg3x.php\
    \ on line 23\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  //WRITE YOUR CODE HERE\n  \n}\nfunction candidate(...$args) {\n   \
    \ return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphgloszbq.php:19\n\
    Stack trace:\n#0 /tmp/tmphgloszbq.php(29): test()\n#1 {main}\n  thrown in /tmp/tmphgloszbq.php\
    \ on line 19\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    $choose = 0;\n    if ($x % 2 == 0 && $y % 2 == 0) {\n        $choose\
    \ = max($x, $y);\n    } else if ($x % 2 == 0 && $y % 2 != 0) {\n        $choose\
    \ = $x;\n    } else if ($x % 2 != 0 && $y % 2 == 0) {\n        $choose = $y;\n\
    \    } else {\n        $choose = -1;\n    }\n    return $choose;\n}\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7o25niy3.php:28\n\
    Stack trace:\n#0 /tmp/tmp7o25niy3.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp7o25niy3.php\
    \ on line 28\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // here goes your solution\n  if ($x > $y) {\n    return -1;\n  }\n\
    \  else {\n    while($x <= $y) {\n      if ($x % 2 == 0) {\n        return $x;\n\
    \      }\n      $x++;\n    }\n  }\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk6yo3xiy.php:29\n\
    Stack trace:\n#0 /tmp/tmpk6yo3xiy.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpk6yo3xiy.php\
    \ on line 29\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  if ($x%2!=0) $x = $x+1;\n  for ($i=$x; $i<=$y; $i++) {\n    if ($i%2==0)\
    \ return $i;\n  }\n  return -1;\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdnz8rdy5.php:22\n\
    Stack trace:\n#0 /tmp/tmpdnz8rdy5.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpdnz8rdy5.php\
    \ on line 22\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  $start = min($x, $y);\n  $end = max($x, $y);\n  $count = 0;\n  while\
    \ ($start <= $end) {\n    if ($start % 2 == 0) {\n      return $start;\n    }\n\
    \    $start += 1;\n  }\n  return -1;\n}\n\nfunction candidate(...$args) {\n  \
    \  return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcxlpbx42.php:28\n\
    Stack trace:\n#0 /tmp/tmpcxlpbx42.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpcxlpbx42.php\
    \ on line 28\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Use a while loop here\n}\nfunction candidate(...$args) {\n   \
    \ return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu7cktua3.php:18\n\
    Stack trace:\n#0 /tmp/tmpu7cktua3.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpu7cktua3.php\
    \ on line 18\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  $n = $x;\n  if ($n % 2 != 0) {\n    $n++;\n  }\n  for (; $n <= $y;\
    \ $n += 2) {\n    return $n;\n  }\n  return -1;\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4_ewdx_j.php:26\n\
    Stack trace:\n#0 /tmp/tmp4_ewdx_j.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp4_ewdx_j.php\
    \ on line 26\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  for ($i = $x; $i <= $y; $i++) {\n    if (($i % 2) == 0) {\n      return\
    \ $i;\n    }\n  }\n  return -1;\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvee_e1zx.php:24\n\
    Stack trace:\n#0 /tmp/tmpvee_e1zx.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpvee_e1zx.php\
    \ on line 24\n"
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  if ($x > $y) {\n    return -1;\n  }\n  for ($i = $y; $i >= $x; $i--)\
    \ {\n    if ($i % 2 == 0) {\n      return $i;\n    }\n  }\n  return -1;\n}\n\n\
    echo \"ANSWER: \" . choose_num(13, 12) . \"\\n\";\necho \"ANSWER: \" . choose_num(12,\
    \ 15) . \"\\n\";\necho \"ANSWER: \" . choose_num(15, 12) . \"\\n\";\necho \"ANSWER:\
    \ \" . choose_num(12, 16) . \"\\n\";\necho \"ANSWER: \" . choose_num(12, 14) .\
    \ \"\\n\";\necho \"ANSWER: \" . choose_num(14, 12) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'ANSWER: -1

    ANSWER: 14

    ANSWER: -1

    ANSWER: 16

    ANSWER: 14

    ANSWER: -1

    '
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  if($x % 2 != 0) {\n    $x++;\n  }\n  for($i = $x; $i <= $y; $i += 2)\
    \ {\n    return $i;\n  }\n  return -1;\n}\n\n\nfunction candidate(...$args) {\n\
    \    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbiuxj1us.php:26\n\
    Stack trace:\n#0 /tmp/tmpbiuxj1us.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpbiuxj1us.php\
    \ on line 26\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // Write your code here\n  // To print results to the standard output\
    \ you can use print\n  // Example:\n  // print \"Hello world!\";\n}\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphtoy1eqi.php:21\n\
    Stack trace:\n#0 /tmp/tmphtoy1eqi.php(31): test()\n#1 {main}\n  thrown in /tmp/tmphtoy1eqi.php\
    \ on line 21\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpskrjeqh2.php:18\n\
    Stack trace:\n#0 /tmp/tmpskrjeqh2.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpskrjeqh2.php\
    \ on line 18\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  for ($i = $x; $i <= $y; $i++) {\n    if ($i % 2 == 0) {\n      return\
    \ $i;\n    }\n  }\n  return -1;\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwgqyvxf6.php:24\n\
    Stack trace:\n#0 /tmp/tmpwgqyvxf6.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpwgqyvxf6.php\
    \ on line 24\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n    if(($x%2==0)&&($y%2==0)){\n        return\
    \ $y;\n    }\n    if(($x%2==0)&&($y%2!=0)){\n        return $x;\n    }\n    if(($x%2!=0)&&($y%2==0)){\n\
    \        return $y;\n    }\n    if(($x%2!=0)&&($y%2!=0)){\n        return -1;\n\
    \    }\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplzyg9huq.php:30\n\
    Stack trace:\n#0 /tmp/tmplzyg9huq.php(40): test()\n#1 {main}\n  thrown in /tmp/tmplzyg9huq.php\
    \ on line 30\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\t\n\t// First, handle the case where x is greater than y, since \n\t\
    // we're supposed to return -1 if there's no number in the range.\n\tif ($x >\
    \ $y) {\n\t\treturn -1;\n\t}\n\t\n\t// Then we'll find the biggest even number\
    \ in the range. The \n\t// smallest number in the range is $x, so let's start\
    \ there.\n\t$biggest_even = $x;\n\t\n\t// Loop through the range, increasing $biggest_even\
    \ when we \n\t// find an even number that's bigger than the one we have.\n\tfor\
    \ ($i = $x; $i <= $y; $i++) {\n\t\tif (($i % 2) == 0) {\n\t\t\tif ($i > $biggest_even)\
    \ {\n\t\t\t\t$biggest_even = $i;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// Now we have the\
    \ biggest even number in the range. If it's \n\t// the same as $x, then we didn't\
    \ find an even number in the \n\t// range, so we should return -1. Otherwise,\
    \ return $biggest_even.\n\tif ($biggest_even == $x) {\n\t\treturn -1;\n\t} else\
    \ {\n\t\treturn $biggest_even;\n\t}\n}\n\nfunction candidate(...$args) {\n   \
    \ return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpltgp82y7.php:54\n\
    Stack trace:\n#0 /tmp/tmpltgp82y7.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpltgp82y7.php\
    \ on line 54\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwy4pde99.php:19\n\
    Stack trace:\n#0 /tmp/tmpwy4pde99.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpwy4pde99.php\
    \ on line 19\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // TODO: Write your code here\n}\n\nfunction candidate(...$args) {\n\
    \    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcgu8xp68.php:19\n\
    Stack trace:\n#0 /tmp/tmpcgu8xp68.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpcgu8xp68.php\
    \ on line 19\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\t// TODO: Fill in the code\n}\n\nfunction candidate(...$args) {\n  \
    \  return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmxtl1du8.php:19\n\
    Stack trace:\n#0 /tmp/tmpmxtl1du8.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpmxtl1du8.php\
    \ on line 19\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x % 2 == 0 && $y % 2 == 0) {\n        if ($x > $y) {\n     \
    \       return $x;\n        } else {\n            return $y;\n        }\n    }\
    \ else if ($x % 2 == 0 && $y % 2 != 0) {\n        return $x;\n    } else if ($x\
    \ % 2 != 0 && $y % 2 == 0) {\n        return $y;\n    } else {\n        return\
    \ -1;\n    }\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2q_2aoik.php:30\n\
    Stack trace:\n#0 /tmp/tmp2q_2aoik.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp2q_2aoik.php\
    \ on line 30\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // YOUR CODE HERE\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjwys38ql.php:18\n\
    Stack trace:\n#0 /tmp/tmpjwys38ql.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpjwys38ql.php\
    \ on line 18\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // YOUR CODE HERE\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjwys38ql.php:18\n\
    Stack trace:\n#0 /tmp/tmpjwys38ql.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpjwys38ql.php\
    \ on line 18\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\tif ($x > $y) {\n\t\treturn -1;\n\t}\n\tif ($x % 2 != 0) {\n\t\t$x++;\n\
    \t}\n\tif ($y % 2 != 0) {\n\t\t$y--;\n\t}\n\treturn $y;\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3hiqi1ts.php:34\n\
    Stack trace:\n#0 /tmp/tmp3hiqi1ts.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp3hiqi1ts.php\
    \ on line 34\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0cv8eu2o.php:19\n\
    Stack trace:\n#0 /tmp/tmp0cv8eu2o.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp0cv8eu2o.php\
    \ on line 19\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  if ($x % 2 !== 0 && $y % 2 !== 0) {\n    return -1;\n  } elseif ($x\
    \ % 2 !== 0) {\n    return $y;\n  } elseif ($y % 2 !== 0) {\n    return $x;\n\
    \  } else {\n    if ($x >= $y) {\n      return $x;\n    } else {\n      return\
    \ $y;\n    }\n  }\n}\n\n$x = 12;\n$y = 15;\necho \"choose_num($x, $y) => \" .\
    \ choose_num($x, $y) . \"\\n\";\n\n$x = 13;\n$y = 12;\necho \"choose_num($x, $y)\
    \ => \" . choose_num($x, $y) . \"\\n\";\n\n$x = 7;\n$y = 3;\necho \"choose_num($x,\
    \ $y) => \" . choose_num($x, $y) . \"\\n\";\n\n$x = 5;\n$y = 9;\necho \"choose_num($x,\
    \ $y) => \" . choose_num($x, $y) . \"\\n\";\n\n$x = 12;\n$y = 5;\necho \"choose_num($x,\
    \ $y) => \" . choose_num($x, $y) . \"\\n\";\n\n$x = 12;\n$y = 12;\necho \"choose_num($x,\
    \ $y) => \" . choose_num($x, $y) . \"\\n\";\n\n$x = -2;\n$y = -1;\necho \"choose_num($x,\
    \ $y) => \" . choose_num($x, $y) . \"\\n\";\n\nfunction candidate(...$args) {\n\
    \    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "choose_num(12, 15) => 12\nchoose_num(13, 12) => 12\nchoose_num(7, 3) =>\
    \ -1\nchoose_num(5, 9) => -1\nchoose_num(12, 5) => 12\nchoose_num(12, 12) => 12\n\
    choose_num(-2, -1) => -2\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo3dcoweg.php:59\n\
    Stack trace:\n#0 /tmp/tmpo3dcoweg.php(69): test()\n#1 {main}\n  thrown in /tmp/tmpo3dcoweg.php\
    \ on line 59\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbhz8889t.php:18\n\
    Stack trace:\n#0 /tmp/tmpbhz8889t.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpbhz8889t.php\
    \ on line 18\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x % 2 == 0) {\n        if ($y % 2 == 0) {\n            return\
    \ $y;\n        } else {\n            return $x;\n        }\n    } else {\n   \
    \     if ($y % 2 == 0) {\n            return $y;\n        } else {\n         \
    \   return -1;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv98p5ghx.php:31\n\
    Stack trace:\n#0 /tmp/tmpv98p5ghx.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpv98p5ghx.php\
    \ on line 31\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\t// Write your code here\n\t// To print results to the standard output\
    \ you can use print\n\t// Example:\n\t// print \"Hello world!\";\n}\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbbagbjy0.php:21\n\
    Stack trace:\n#0 /tmp/tmpbbagbjy0.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpbbagbjy0.php\
    \ on line 21\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppv3384qt.php:18\n\
    Stack trace:\n#0 /tmp/tmppv3384qt.php(28): test()\n#1 {main}\n  thrown in /tmp/tmppv3384qt.php\
    \ on line 18\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Write the body of this function\n    // please note that the input\
    \ arguments are not necessarily integers,\n    // they might not be even numbers.\n\
    }\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmp77s_4j.php:21\n\
    Stack trace:\n#0 /tmp/tmpmp77s_4j.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpmp77s_4j.php\
    \ on line 21\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\t$z = -1;\n\tif ($x > $y) {\n\t\tfor ($i = $y; $i <= $x; $i++) {\n\t\
    \t\tif (($i % 2) == 0) {\n\t\t\t\t$z = $i;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfor\
    \ ($i = $x; $i <= $y; $i++) {\n\t\t\tif (($i % 2) == 0) {\n\t\t\t\t$z = $i;\n\t\
    \t\t}\n\t\t}\n\t}\n\treturn $z;\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptxj06s4h.php:33\n\
    Stack trace:\n#0 /tmp/tmptxj06s4h.php(42): test()\n#1 {main}\n  thrown in /tmp/tmptxj06s4h.php\
    \ on line 33\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x % 2 === 0 && $y % 2 === 0) {\n        return max($x, $y);\n\
    \    } else if ($x % 2 === 0) {\n        return $x;\n    } else if ($y % 2 ===\
    \ 0) {\n        return $y;\n    } else {\n        return -1;\n    }\n}\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp48ft01_z.php:26\n\
    Stack trace:\n#0 /tmp/tmp48ft01_z.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp48ft01_z.php\
    \ on line 26\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  \n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3vbcfenw.php:18\n\
    Stack trace:\n#0 /tmp/tmp3vbcfenw.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp3vbcfenw.php\
    \ on line 18\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphfgp62h4.php:17\n\
    Stack trace:\n#0 /tmp/tmphfgp62h4.php(27): test()\n#1 {main}\n  thrown in /tmp/tmphfgp62h4.php\
    \ on line 17\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\t\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz0vzsqgi.php:18\n\
    Stack trace:\n#0 /tmp/tmpz0vzsqgi.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpz0vzsqgi.php\
    \ on line 18\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // Write your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9w0_pf9f.php:19\n\
    Stack trace:\n#0 /tmp/tmp9w0_pf9f.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp9w0_pf9f.php\
    \ on line 19\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // Fill in your answer here\n}\nfunction candidate(...$args) {\n  \
    \  return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_sx6gn7t.php:18\n\
    Stack trace:\n#0 /tmp/tmp_sx6gn7t.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp_sx6gn7t.php\
    \ on line 18\n"
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    $biggest = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i\
    \ % 2 == 0 && $i > $biggest) {\n            $biggest = $i;\n        }\n    }\n\
    \    return $biggest;\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptd83h490.php:19\n\
    Stack trace:\n#0 /tmp/tmptd83h490.php(29): test()\n#1 {main}\n  thrown in /tmp/tmptd83h490.php\
    \ on line 19\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\n}\n\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm1f067ss.php:20\n\
    Stack trace:\n#0 /tmp/tmpm1f067ss.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpm1f067ss.php\
    \ on line 20\n"
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x < 0 || $y < 0) {\n        return -1;\n    }\n    for ($i =\
    \ $y; $i >= $x; $i--) {\n        if ($i % 2 == 0) {\n            return $i;\n\
    \        }\n    }\n    return -1;\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\t// Write your code here\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjcs33fw_.php:18\n\
    Stack trace:\n#0 /tmp/tmpjcs33fw_.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpjcs33fw_.php\
    \ on line 18\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // TODO: implement me!\n  if ($x % 2 == 0 || $y % 2 == 0) {\n    if\
    \ ($x % 2 == 0) {\n      return $x;\n    } else {\n      return $y;\n    }\n \
    \ } else {\n    return -1;\n  }\n}\n\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnkuak4ol.php:29\n\
    Stack trace:\n#0 /tmp/tmpnkuak4ol.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpnkuak4ol.php\
    \ on line 29\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n   //fill in your code here\n}\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpof7av3mt.php:18\n\
    Stack trace:\n#0 /tmp/tmpof7av3mt.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpof7av3mt.php\
    \ on line 18\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\tif ($x % 2 == 0){\n\t\treturn $x;\n\t}\n\telse if ($y % 2 == 0) {\n\
    \t\treturn $y;\n\t}\n\telse {\n\t\treturn -1;\n\t}\n}\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq8jheabt.php:26\n\
    Stack trace:\n#0 /tmp/tmpq8jheabt.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpq8jheabt.php\
    \ on line 26\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // REPLACE THIS WITH YOUR CODE\n}\n\nfunction candidate(...$args) {\n\
    \    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp28q99to5.php:19\n\
    Stack trace:\n#0 /tmp/tmp28q99to5.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp28q99to5.php\
    \ on line 19\n"
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\t$max = -1;\n\t$i = $x;\n\twhile ($i <= $y) {\n\t\tif ($i % 2 == 0 &&\
    \ $i > $max) {\n\t\t\t$max = $i;\n\t\t}\n\t\t$i++;\n\t}\n\treturn $max;\n}\n\n\
    function candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x > $y) {\n        $temp = $x;\n        $x = $y;\n        $y\
    \ = $temp;\n    }\n    for ($i = $y; $i >= $x; $i--) {\n        if ($i % 2 ==\
    \ 0) {\n            return $i;\n        }\n    }\n    return -1;\n}\n\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2stslxiq.php:30\n\
    Stack trace:\n#0 /tmp/tmp2stslxiq.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp2stslxiq.php\
    \ on line 30\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    return ((($x + $y) % 2 == 0) && ($x + $y) / 2 >= $x) ? ($x + $y)\
    \ / 2 : -1;\n}\necho choose_num(12, 15);\necho \"<br/>\";\necho choose_num(13,\
    \ 12);\necho \"<br/>\";\necho choose_num(15, 12);\necho \"<br/>\";\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-1<br/>-1<br/>-1<br/>\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp83vdss5b.php:24\nStack trace:\n#0 /tmp/tmp83vdss5b.php(34): test()\n\
    #1 {main}\n  thrown in /tmp/tmp83vdss5b.php on line 24\n"
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Use a for loop to find the biggest even integer number in the\n\
    \    // range [x, y] inclusive.\n    // Once you find an even number, return it.\n\
    \    // If you can't find one, return -1.\n    $result = -1;\n    for ($i = $x;\
    \ $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $result = $i;\n \
    \       }\n    }\n    return $result;\n}\nfunction candidate(...$args) {\n   \
    \ return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    $min = $x < $y ? $x : $y;\n    $max = $x > $y ? $x : $y;\n    for\
    \ ($i = $max; $i >= $min; $i--) {\n        if ($i % 2 == 0) {\n            return\
    \ $i;\n        }\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n\
    \    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpffnyr0bq.php:27\n\
    Stack trace:\n#0 /tmp/tmpffnyr0bq.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpffnyr0bq.php\
    \ on line 27\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\t// Write your code here\n\t$sum = 0;\n\t$length = (strlen($x) + strlen($y));\n\
    \t$sum += $x + $y;\n\t$average = ($sum / $length);\n\tif ($average % 2 == 0) {\n\
    \t\treturn $average;\n\t}\n\telseif ($average % 2 == 1) {\n\t\treturn -1;\n\t\
    }\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 6.75 to int loses precision\
    \ in /tmp/tmpjd6f8hnl.php on line 16\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpjd6f8hnl.php:29\nStack trace:\n#0 /tmp/tmpjd6f8hnl.php(39):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpjd6f8hnl.php on line 29\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  $smaller = min($x, $y);\n  $larger = max($x, $y);\n  for ($i = $larger;\
    \ $i >= $smaller; $i--) {\n    if ($i % 2 == 0) {\n      return $i;\n    }\n \
    \ }\n  return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsrdj8256.php:27\n\
    Stack trace:\n#0 /tmp/tmpsrdj8256.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpsrdj8256.php\
    \ on line 27\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    $res = $x;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i%2\
    \ == 0) {\n            $res = $i;\n        }\n    }\n    if ($res%2 == 0) {\n\
    \        return $res;\n    } else {\n        return -1;\n    }\n}\n\n$ans = choose_num(12,\
    \ 15);\nvar_dump($ans);\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "int(14)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps3rm8ydv.php:34\n\
    Stack trace:\n#0 /tmp/tmps3rm8ydv.php(41): test()\n#1 {main}\n  thrown in /tmp/tmps3rm8ydv.php\
    \ on line 34\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  if ($x % 2 == 0) {\n    return $x;\n  }\n  else {\n    if ($x == $y)\
    \ {\n      return -1;\n    }\n    else {\n      return choose_num($x + 1, $y);\n\
    \    }\n  }\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmjhug760.php:29\n\
    Stack trace:\n#0 /tmp/tmpmjhug760.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpmjhug760.php\
    \ on line 29\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // YOUR CODE HERE\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7spbbvdv.php:19\n\
    Stack trace:\n#0 /tmp/tmp7spbbvdv.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp7spbbvdv.php\
    \ on line 19\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\tif(($x % 2 != 0) || ($y % 2 != 0)) {\n\t\t$x = $x + 1;\n\t}\n\tif($x\
    \ >= $y) {\n\t\treturn -1;\n\t}\n\treturn $y;\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2fl4ngi1.php:25\n\
    Stack trace:\n#0 /tmp/tmp2fl4ngi1.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp2fl4ngi1.php\
    \ on line 25\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\t// Put your code below this line\n\tif($x<$y){\n\t\t$big_num = $y;\n\
    \t\t$small_num = $x;\n\t}\n\telse if($x>$y){\n\t\t$big_num = $x;\n\t\t$small_num\
    \ = $y;\n\t}\n\telse{\n\t\t$big_num = $x;\n\t\t$small_num = $y;\n\t}\n\tfor($i=$big_num;\
    \ $i>=$small_num; $i--){\n\t\tif($i%2==0){\n\t\t\treturn $i;\n\t\t}\n\t}\n\treturn\
    \ -1;\n\t// Put your code above this line\n}\n\nfunction candidate(...$args) {\n\
    \    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptlq84yt7.php:39\n\
    Stack trace:\n#0 /tmp/tmptlq84yt7.php(48): test()\n#1 {main}\n  thrown in /tmp/tmptlq84yt7.php\
    \ on line 39\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbhz8889t.php:18\n\
    Stack trace:\n#0 /tmp/tmpbhz8889t.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpbhz8889t.php\
    \ on line 18\n"
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    $evens = [];\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i\
    \ % 2 == 0) {\n            array_push($evens, $i);\n        }\n    }\n    if (empty($evens))\
    \ {\n        return -1;\n    } else {\n        return max($evens);\n    }\n}\n\
    \nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\t// Write your code here\n\t\n}\n\n$x = (int)fgets(STDIN);\n$y = (int)fgets(STDIN);\n\
    $num = choose_num($x, $y);\necho $num;\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdbjz0yqu.php:24\n\
    Stack trace:\n#0 /tmp/tmpdbjz0yqu.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpdbjz0yqu.php\
    \ on line 24\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x % 2 == 0 && $y % 2 == 0) {\n        if ($x > $y) {\n     \
    \       return $x;\n        } else {\n            return $y;\n        }\n    }\
    \ else if ($x % 2 == 0 && $y % 2 != 0) {\n        return $x;\n    } else if ($x\
    \ % 2 != 0 && $y % 2 == 0) {\n        return $y;\n    } else {\n        return\
    \ -1;\n    }\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2tprqybm.php:31\n\
    Stack trace:\n#0 /tmp/tmp2tprqybm.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp2tprqybm.php\
    \ on line 31\n"
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    $i = $x;\n    $num = -1;\n    while ($i <= $y) {\n        if ($i\
    \ % 2 == 0) {\n            $num = $i;\n        }\n        $i++;\n    }\n    return\
    \ $num;\n}\n\necho choose_num(12, 15) . \"\\n\";\necho choose_num(13, 12) . \"\
    \\n\";\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '14

    -1

    '
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // TODO: Write this function!\n}\nfunction candidate(...$args) {\n\
    \    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptfn4lb3r.php:18\n\
    Stack trace:\n#0 /tmp/tmptfn4lb3r.php(28): test()\n#1 {main}\n  thrown in /tmp/tmptfn4lb3r.php\
    \ on line 18\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\tif ($x <= $y) {\n\t\tif ($x % 2 == 0) {\n\t\t\treturn $x;\n\t\t} else\
    \ {\n\t\t\treturn choose_num($x + 1, $y);\n\t\t}\n\t} else {\n\t\treturn -1;\n\
    \t}\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6eltqzp_.php:27\n\
    Stack trace:\n#0 /tmp/tmp6eltqzp_.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp6eltqzp_.php\
    \ on line 27\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // insert your code here\n}\n\nfunction candidate(...$args) {\n \
    \   return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7052x1fs.php:19\n\
    Stack trace:\n#0 /tmp/tmp7052x1fs.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp7052x1fs.php\
    \ on line 19\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here!\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpubmqezyv.php:19\n\
    Stack trace:\n#0 /tmp/tmpubmqezyv.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpubmqezyv.php\
    \ on line 19\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  if($x % 2 == 0){\n    return $x;\n  }\n  elseif($y % 2 == 0){\n   \
    \ return $y;\n  }\n  else{\n    return -1;\n  }\n}\nprint choose_num(12, 15) .\
    \ \"\\n\";\nprint choose_num(13, 12) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "12\n12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqo_o_r7p.php:28\n\
    Stack trace:\n#0 /tmp/tmpqo_o_r7p.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpqo_o_r7p.php\
    \ on line 28\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    $max = max($x, $y);\n    $min = min($x, $y);\n    for ($i = $max;\
    \ $i >= $min; $i--) {\n        if ($i % 2 == 0) {\n            return $i;\n  \
    \      }\n    }\n    return -1;\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptrigoa1z.php:27\n\
    Stack trace:\n#0 /tmp/tmptrigoa1z.php(36): test()\n#1 {main}\n  thrown in /tmp/tmptrigoa1z.php\
    \ on line 27\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x % 2 == 0) {\n        return $x;\n    } else {\n        $x++;\n\
    \        return choose_num($x, $y);\n    }\n}\n\necho(choose_num(1, 14));\necho(\"\
    \\n\");\necho(choose_num(5, 14));\necho(\"\\n\");\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "2\n6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4jx6krkb.php:28\n\
    Stack trace:\n#0 /tmp/tmp4jx6krkb.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4jx6krkb.php\
    \ on line 28\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpskrjeqh2.php:18\n\
    Stack trace:\n#0 /tmp/tmpskrjeqh2.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpskrjeqh2.php\
    \ on line 18\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // Replace 0 with your code\n  return 0;\n}\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgc8msrzx.php:19\n\
    Stack trace:\n#0 /tmp/tmpgc8msrzx.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpgc8msrzx.php\
    \ on line 19\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  for ($i = $x; $i <= $y; $i++) {\n    if ($i % 2 == 0) {\n      return\
    \ $i;\n    }\n  }\n  return -1;\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwgqyvxf6.php:24\n\
    Stack trace:\n#0 /tmp/tmpwgqyvxf6.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpwgqyvxf6.php\
    \ on line 24\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // Your code here\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp511hwr8t.php:18\n\
    Stack trace:\n#0 /tmp/tmp511hwr8t.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp511hwr8t.php\
    \ on line 18\n"
  timestamp: 1659823419
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // declare the return variable\n  $result = -1;\n\n  // check if $x\
    \ is even\n  $is_x_even = $x % 2 == 0;\n\n  // check if $y is even\n  $is_y_even\
    \ = $y % 2 == 0;\n\n  // if x and y are both even, the result is the larger number\n\
    \  if ($is_x_even && $is_y_even) {\n    if ($x > $y) {\n      $result = $x;\n\
    \    } else {\n      $result = $y;\n    }\n  } else {\n    // if x is odd and\
    \ y is even, the result is y\n    if (!$is_x_even && $is_y_even) {\n      $result\
    \ = $y;\n    } else {\n      // if x is even and y is odd, the result is x\n \
    \     if ($is_x_even && !$is_y_even) {\n        $result = $x;\n      } else {\n\
    \        // if x and y are both odd, the result is -1\n        if (!$is_x_even\
    \ && !$is_y_even) {\n          $result = -1;\n        }\n      }\n    }\n  }\n\
    \n  return $result;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprcrad9tu.php:52\n\
    Stack trace:\n#0 /tmp/tmprcrad9tu.php(62): test()\n#1 {main}\n  thrown in /tmp/tmprcrad9tu.php\
    \ on line 52\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\t$start = $x;\n\t$end = $y;\n\t$start = max($start, $end);\n\t$end =\
    \ min($start, $end);\n\t$end = $end - $end % 2;\n\tif ($start > $end) {\n\t\t\
    return -1;\n\t}\n\t$x = $end;\n\treturn $x;\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9t518c8p.php:28\n\
    Stack trace:\n#0 /tmp/tmp9t518c8p.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp9t518c8p.php\
    \ on line 28\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6egjbrpt.php:19\n\
    Stack trace:\n#0 /tmp/tmp6egjbrpt.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp6egjbrpt.php\
    \ on line 19\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x == $y) {\n        return $x % 2 ? -1 : $x;\n    }\n    $i\
    \ = min($x, $y);\n    while ($i <= max($x, $y)) {\n        if ($i % 2 == 0) {\n\
    \            return $i;\n        }\n        $i++;\n    }\n    return -1;\n}\n\n\
    function candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp079_z7le.php:29\n\
    Stack trace:\n#0 /tmp/tmp079_z7le.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp079_z7le.php\
    \ on line 29\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // FIXME: Fill in the code here\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyv3dgojw.php:19\n\
    Stack trace:\n#0 /tmp/tmpyv3dgojw.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpyv3dgojw.php\
    \ on line 19\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbhz8889t.php:18\n\
    Stack trace:\n#0 /tmp/tmpbhz8889t.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpbhz8889t.php\
    \ on line 18\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\tif ($x % 2 == 0) {\n\t\tif ($y % 2 == 0) {\n\t\t\treturn $y;\n\t\t\
    } else {\n\t\t\treturn $y - 1;\n\t\t}\n\t} else {\n\t\tif ($y % 2 == 0) {\n\t\t\
    \treturn $y;\n\t\t} else {\n\t\t\treturn $y - 1;\n\t\t}\n\t}\n}\necho choose_num(12,\
    \ 15) . \"\\n\";\necho choose_num(13, 12) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\n12\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf0m5wmlp.php:33\n\
    Stack trace:\n#0 /tmp/tmpf0m5wmlp.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpf0m5wmlp.php\
    \ on line 33\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  if ($x % 2 === 0 && $y % 2 === 0) {\n    return $y;\n  } elseif ($x\
    \ % 2 === 0 && $y % 2 !== 0) {\n    return $x;\n  } elseif ($x % 2 !== 0 && $y\
    \ % 2 === 0) {\n    return $y;\n  } else {\n    return -1;\n  }\n}\n\necho choose_num(12,\
    \ 15);\necho '<br>';\necho choose_num(13, 12);\necho '<br>';\necho choose_num(12,\
    \ 14);\necho '<br>';\necho choose_num(13, 13);\necho '<br>';\necho choose_num(15,\
    \ 15);\necho '<br>';\necho choose_num(14, 15);\necho '<br>';\necho choose_num(12,\
    \ 13);\necho '<br>';\necho choose_num(15, 16);\necho '<br>';\necho choose_num(16,\
    \ 17);\necho '<br>';\necho choose_num(14, 14);\necho '<br>';\necho choose_num(13,\
    \ 15);\necho '<br>';\necho choose_num(12, 16);\necho '<br>';\necho choose_num(14,\
    \ 15);\necho '<br>';\necho choose_num(16, 17);\necho '<br>';\necho choose_num(15,\
    \ 16);\necho '<br>';\necho choose_num(15, 15);\necho '<br>';\necho choose_num(12,\
    \ 12);\necho '<br>';\necho choose_num(14, 14);\necho '<br>';\necho choose_num(12,\
    \ 13);\necho '<br>';\necho choose_num(12, 15);\necho '<br>';\necho choose_num(13,\
    \ 16);\necho '<br>';\necho choose_num(12, 14);\necho '<br>';\necho choose_num(14,\
    \ 16);\necho '<br>';\necho choose_num(12, 13);\necho '<br>';\necho choose_num(13,\
    \ 15\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmp8znp9pf8.php
    on line 71

    '
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptd83h490.php:19\n\
    Stack trace:\n#0 /tmp/tmptd83h490.php(29): test()\n#1 {main}\n  thrown in /tmp/tmptd83h490.php\
    \ on line 19\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // Write your code here\n  if ($x > $y) {\n    return -1;\n  }\n  else\
    \ {\n    $smallest_even = $x;\n    while ($smallest_even <= $y) {\n      if ($smallest_even\
    \ % 2 == 0) {\n        return $smallest_even;\n      }\n      $smallest_even++;\n\
    \    }\n    return -1;\n  }\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4piof_kz.php:32\n\
    Stack trace:\n#0 /tmp/tmp4piof_kz.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp4piof_kz.php\
    \ on line 32\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // YOUR CODE HERE\n  $i = min($x, $y);\n  $max = -1;\n  while ($i <=\
    \ max($x, $y)) {\n    if ($i % 2 == 0) {\n      $max = $i;\n    }\n    $i++;\n\
    \  }\n  return $max;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdpn0lhbn.php:29\n\
    Stack trace:\n#0 /tmp/tmpdpn0lhbn.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpdpn0lhbn.php\
    \ on line 29\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    $i = $x;\n    while ($i <= $y) {\n        if ($i % 2 == 0) {\n  \
    \          return $i;\n        }\n        $i++;\n    }\n    return -1;\n}\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzz9_4xmm.php:25\n\
    Stack trace:\n#0 /tmp/tmpzz9_4xmm.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpzz9_4xmm.php\
    \ on line 25\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // YOUR CODE HERE\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7o7bukve.php:19\n\
    Stack trace:\n#0 /tmp/tmp7o7bukve.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp7o7bukve.php\
    \ on line 19\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\t// Write your code here\n    // Hint: Remember you can use the modulus\
    \ operator to get the remainder.\n    // Hint: Use while loops or if statements\n\
    }\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr9_rkoel.php:20\n\
    Stack trace:\n#0 /tmp/tmpr9_rkoel.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpr9_rkoel.php\
    \ on line 20\n"
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  $biggest_even = -1;\n  $i = $x;\n  while ($i <= $y) {\n    if ($i %\
    \ 2 == 0) {\n      $biggest_even = $i;\n    }\n    $i = $i + 1;\n  }\n  return\
    \ $biggest_even;\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // your code here\n    $b = 0;\n    if ($x > $y){\n        return\
    \ -1;\n    }else{\n        while ($x <= $y){\n            if($x % 2 == 0){\n \
    \               $b = $x;\n            }\n            $x++;\n        }\n    }\n\
    \    return $b;\n}\n\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpliyiaaqc.php:38\n\
    Stack trace:\n#0 /tmp/tmpliyiaaqc.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpliyiaaqc.php\
    \ on line 38\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    // Your code here\n    $i = 0;\n    for ($i = $x; $i <= $y; $i++)\
    \ {\n        if ($i % 2 == 0) {\n            return $i;\n        }\n    }\n  \
    \  return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpck2plenz.php:26\n\
    Stack trace:\n#0 /tmp/tmpck2plenz.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpck2plenz.php\
    \ on line 26\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\t// your code here\n    if ($x > $y) {\n        return -1;\n    }\n\
    \    if ($x % 2 == 0) {\n        return $x;\n    } else {\n        return $x +\
    \ 1;\n    }\n}\n\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmz8iql7z.php:28\n\
    Stack trace:\n#0 /tmp/tmpmz8iql7z.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpmz8iql7z.php\
    \ on line 28\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  if ( !is_int($x) || !is_int($y) ) {\n    // if either $x or $y is not\
    \ an integer, return -1\n    return -1;\n  } else if ( $x > $y ) {\n    // if\
    \ $x is greater than $y, return -1\n    return -1;\n  } else if ( $x == $y ) {\n\
    \    // if $x and $y are equal\n    if ( $x % 2 == 0 ) {\n      // if $x is even,\
    \ return $x\n      return $x;\n    } else {\n      // if $x is odd, return -1\n\
    \      return -1;\n    }\n  } else {\n    // if $x is less than $y\n    if ( $x\
    \ % 2 == 0 ) {\n      // if $x is even, return $x\n      return $x;\n    } else\
    \ {\n      // if $x is odd, call choose_num() again with the next highest integer\n\
    \      return choose_num($x + 1, $y);\n    }\n  }\n}\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxmxdap0x.php:42\n\
    Stack trace:\n#0 /tmp/tmpxmxdap0x.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpxmxdap0x.php\
    \ on line 42\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpskrjeqh2.php:18\n\
    Stack trace:\n#0 /tmp/tmpskrjeqh2.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpskrjeqh2.php\
    \ on line 18\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x > $y) {\n        echo -1;\n    }\n    elseif ($x % 2 == 0)\
    \ {\n        echo $x;\n    }\n    elseif ($x % 2 != 0) {\n        $x = $x + 1;\n\
    \        choose_num($x, $y);\n    }\n}\n\nchoose_num(12, 15);\nchoose_num(13,\
    \ 12);\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "12-112\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn_o_l5wl.php:31\n\
    Stack trace:\n#0 /tmp/tmpn_o_l5wl.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpn_o_l5wl.php\
    \ on line 31\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\t// This is your job. :)\n    if($x == $y){\n        if($x % 2 == 0){\n\
    \            return $x;\n        }else{\n            return -1;\n        }\n \
    \   }else{\n        if($x > $y){\n            $temp = $x;\n            $x = $y;\n\
    \            $y = $temp;\n        }\n        \n        for($i = $y; $i >= $x;\
    \ $i--){\n            if($i % 2 == 0){\n                return $i;\n         \
    \   }\n        }\n        return -1;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq9ijxku3.php:40\n\
    Stack trace:\n#0 /tmp/tmpq9ijxku3.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpq9ijxku3.php\
    \ on line 40\n"
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x > $y) {\n        return -1;\n    } else {\n        for ($i\
    \ = $y; $i >= $x; $i--) {\n            if ($i % 2 == 0) {\n                return\
    \ $i;\n            }\n        }\n        return -1;\n    }\n}\necho choose_num(12,15);\n\
    echo \"<br>\";\necho choose_num(13,12);\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 14<br>-1
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\t$range = range($x, $y);\n\tforeach ($range as $value) {\n\t\tif ($value\
    \ % 2 == 0) {\n\t\t\treturn $value;\n\t\t}\n\t}\n\treturn -1;\n}\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsxl6vclk.php:24\n\
    Stack trace:\n#0 /tmp/tmpsxl6vclk.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpsxl6vclk.php\
    \ on line 24\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    if ($x == $y) {\n        if ($x % 2 == 0) {\n            return $x;\n\
    \        } else {\n            return -1;\n        }\n    } else {\n        if\
    \ ($x > $y) {\n            $temp = $x;\n            $x = $y;\n            $y =\
    \ $temp;\n        }\n        for ($i = $y; $i >= $x; $i--) {\n            if ($i\
    \ % 2 == 0) {\n                return $i;\n            }\n        }\n        return\
    \ -1;\n    }\n}\n\n$x = intval(fgets(STDIN));\n$y = intval(fgets(STDIN));\n\n\
    $result = choose_num($x, $y);\n\nfwrite(STDOUT, $result);\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5354hntp.php:44\n\
    Stack trace:\n#0 /tmp/tmp5354hntp.php(53): test()\n#1 {main}\n  thrown in /tmp/tmp5354hntp.php\
    \ on line 44\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  if ($x % 2 == 0 && $y % 2 == 0) {\n    return $y;\n  }\n  elseif ($x\
    \ % 2 == 0 && $y % 2 != 0) {\n    return $x;\n  }\n  elseif ($x % 2 != 0 && $y\
    \ % 2 == 0) {\n    return $y;\n  }\n  else {\n    return -1;\n  }\n}\n\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiz9ksjcy.php:30\n\
    Stack trace:\n#0 /tmp/tmpiz9ksjcy.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpiz9ksjcy.php\
    \ on line 30\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\tif($x % 2 == 0){\n\t\t$biggest_even = $x;\n\t}\n\telse{\n\t\t$biggest_even\
    \ = $x + 1;\n\t}\n\tif($biggest_even <= $y){\n\t\treturn $biggest_even;\n\t}\n\
    \telse{\n\t\treturn -1;\n\t}\n}\n\nfunction candidate(...$args) {\n    return\
    \ choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12, 15)\
    \ !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13, 12)\
    \ !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33, 12354)\
    \ !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo5zyriv7.php:30\n\
    Stack trace:\n#0 /tmp/tmpo5zyriv7.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpo5zyriv7.php\
    \ on line 30\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  if ($x < $y) {\n    $x = $x + 1;\n    while ($x <= $y) {\n      if\
    \ ($x % 2 == 0) {\n        return $x;\n      }\n      $x = $x + 1;\n    }\n  }\n\
    \  return -1;\n}\n\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps22ccn81.php:30\n\
    Stack trace:\n#0 /tmp/tmps22ccn81.php(38): test()\n#1 {main}\n  thrown in /tmp/tmps22ccn81.php\
    \ on line 30\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  if ($x > $y) {\n    $z = $x;\n    $x = $y;\n    $y = $z;\n  }\n  if\
    \ ($x % 2 == 0) {\n    $even = $x;\n  } else {\n    $even = $x + 1;\n  }\n  if\
    \ ($even <= $y) {\n    return $even;\n  } else {\n    return -1;\n  }\n}\n\nfunction\
    \ candidate(...$args) {\n    return choose_num(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvnnzjoxf.php:33\n\
    Stack trace:\n#0 /tmp/tmpvnnzjoxf.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpvnnzjoxf.php\
    \ on line 33\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\tif ($x%2 == 0 && $y%2 == 0) {\n\t\tif ($x < $y) {\n\t\t\treturn $y;\n\
    \t\t} else if ($x > $y) {\n\t\t\treturn $x;\n\t\t} else {\n\t\t\treturn $x;\n\t\
    \t}\n\t} else if ($x%2 == 0 && $y%2 != 0) {\n\t\tif ($x > $y) {\n\t\t\treturn\
    \ $x;\n\t\t} else {\n\t\t\treturn -1;\n\t\t}\n\t} else if ($x%2 != 0 && $y%2 ==\
    \ 0) {\n\t\tif ($x < $y) {\n\t\t\treturn $y;\n\t\t} else {\n\t\t\treturn -1;\n\
    \t\t}\n\t} else {\n\t\treturn -1;\n\t}\n}\n\nfunction candidate(...$args) {\n\
    \    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6yn4czzd.php:41\n\
    Stack trace:\n#0 /tmp/tmp6yn4czzd.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp6yn4czzd.php\
    \ on line 41\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n   \
    \         return $i;\n        }\n    }\n    return -1;\n}\n\nprint(choose_num(12,\
    \ 15) . \"\\n\");\nprint(choose_num(13, 12) . \"\\n\");\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "12\n-1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6lncn6xm.php:26\n\
    Stack trace:\n#0 /tmp/tmp6lncn6xm.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp6lncn6xm.php\
    \ on line 26\n"
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  $z = 0;\n  if ($x % 2 == 0) {\n    $z = $x;\n  } else {\n    $z = $x\
    \ + 1;\n  }\n  while ($z <= $y) {\n    if ($z == $y) {\n      return $z;\n   \
    \ }\n    $z += 2;\n  }\n  return -1;\n}\n\nfunction candidate(...$args) {\n  \
    \  return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo2bjq9s5.php:31\n\
    Stack trace:\n#0 /tmp/tmpo2bjq9s5.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpo2bjq9s5.php\
    \ on line 31\n"
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\t$biggest = -1;\n\tfor ($i = $x; $i <= $y; $i++) {\n\t\tif ($i % 2 ==\
    \ 0) {\n\t\t\t$biggest = $i;\n\t\t}\n\t}\n\treturn $biggest;\n}\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n\tif ($x % 2 != 0) {\n\t\t$x += 1;\n\t}\n\tif ($y % 2 != 0) {\n\t\t$y\
    \ -= 1;\n\t}\n\tif ($x > $y) {\n\t\treturn -1;\n\t}\n\treturn $y;\n}\necho choose_num(12,\
    \ 15);\necho \"\\n\";\necho choose_num(13, 12);\necho \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '14

    -1

    '
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n    return -1;\n}\nfunction candidate(...$args) {\n    return choose_num(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(12, 15) !== 14) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(13, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(33, 12354) !== 12354) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5234, 5233) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 29) !== 28) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(27, 10) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 7) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(546, 546) !== 546) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpck0l3aj1.php:18\n\
    Stack trace:\n#0 /tmp/tmpck0l3aj1.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpck0l3aj1.php\
    \ on line 18\n"
  timestamp: 1659978262
- exit_code: 0
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // Write your code here\n  // To print results to the standard output\
    \ you can use print\n  // Example:\n  // print \"Hello world!\";\n  if($x > $y){\n\
    \    return -1;\n  }\n  for($i = $y; $i >= $x; $i--){\n    if($i % 2 == 0){\n\
    \      return $i;\n    }\n  }\n  return -1;\n}\nfunction candidate(...$args) {\n\
    \    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978262
- exit_code: 255
  program: "<?php\n// This function takes two positive numbers x and y and returns\
    \ the\n// biggest even integer number that is in the range [x, y] inclusive. If\
    \ \n// there's no such number, then the function should return -1.\n// For example:\n\
    // >>> choose_num(12, 15)\n// 14\n// >>> choose_num(13, 12)\n// -1\nfunction choose_num($x,\
    \ $y) {\n  // TODO: check that $x and $y are both positive numbers\n  if (!is_numeric($x)\
    \ || !is_numeric($y)) {\n    throw new Exception(\"$x and $y must be numbers\"\
    );\n  }\n  if ($x < 0 || $y < 0) {\n    throw new Exception(\"$x and $y must be\
    \ positive numbers\");\n  }\n  // TODO: check that $x and $y are both integers\n\
    \  if (!is_int($x) || !is_int($y)) {\n    throw new Exception(\"$x and $y must\
    \ be integers\");\n  }\n  // TODO: find the biggest even number in the range [$x,\
    \ $y] inclusive\n  // and return it. If there's no such number, then return -1.\n\
    \  if ($x > $y) {\n    throw new Exception(\"$x cannot be greater than $y\");\n\
    \  }\n  $result = -1;\n  for ($i = $x; $i <= $y; $i++) {\n    if ($i % 2 == 0)\
    \ {\n      $result = $i;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return choose_num(...$args);\n}\n\nfunction test(): void {\n    if (candidate(12,\
    \ 15) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(13,\
    \ 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(33,\
    \ 12354) !== 12354) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5234,\
    \ 5233) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 29) !== 28) { throw new Exception(\"Test failed!\"); }\n    if (candidate(27,\
    \ 10) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 7) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(546,\
    \ 546) !== 546) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: 13 cannot be greater than 12 in /tmp/tmpkwzb5i5c.php:25\n\
    Stack trace:\n#0 /tmp/tmpkwzb5i5c.php(37): choose_num(13, 12)\n#1 /tmp/tmpkwzb5i5c.php(42):\
    \ candidate(13, 12)\n#2 /tmp/tmpkwzb5i5c.php(51): test()\n#3 {main}\n  thrown\
    \ in /tmp/tmpkwzb5i5c.php on line 25\n"
  timestamp: 1659978262

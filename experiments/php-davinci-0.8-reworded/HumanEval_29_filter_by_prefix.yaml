name: HumanEval_29_filter_by_prefix
language: php
prompt: "<?php\n// Filter an input array of strings only for ones that start with\
  \ a given prefix.\n// >>> filter_by_prefix(array(), \"a\")\n// array()\n// >>> filter_by_prefix(array(\"\
  abc\", \"bcd\", \"cde\", \"array\"), \"a\")\n// array(\"abc\", \"array\")\nfunction\
  \ filter_by_prefix($strings, $prefix) {\n"
tests: "function candidate(...$args) {\n    return filter_by_prefix(...$args);\n}\n\
  \nfunction test(): void {\n    if (candidate(array(), \"john\") !== array()) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"xxx\", \"asd\",\
  \ \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"), \"xxx\") !== array(\"xxx\", \"xxxAAA\"\
  , \"xxx\")) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $result = array();\n    foreach ($strings as $string) {\n     \
    \   if (strpos($string, $prefix) === 0) {\n            $result[] = $string;\n\
    \        }\n    }\n    return $result;\n}", "\t$result = array();\n\tforeach ($strings\
    \ as $str) {\n\t\tif (strpos($str, $prefix) === 0) {\n\t\t\t$result[] = $str;\n\
    \t\t}\n\t}\n\treturn $result;\n}\n", "    $filtered = array();\n    foreach ($strings\
    \ as $string) {\n        if (strpos($string, $prefix) === 0) {\n            $filtered[]\
    \ = $string;\n        }\n    }\n    return $filtered;\n}\n", "\t$result = array();\n\
    \tforeach ($strings as $item) {\n\t\tif (preg_match(\"/^\" . $prefix . \".*/\"\
    , $item)) {\n\t\t\tarray_push($result, $item);\n\t\t}\n\t}\n\treturn $result;\n\
    }", "    $result = array();\n    foreach ($strings as $string) {\n        if (substr($string,\
    \ 0, strlen($prefix)) == $prefix) {\n            $result[] = $string;\n      \
    \  }\n    }\n    return $result;\n}\n", "  $result = array();\n  foreach ($strings\
    \ as $string) {\n    if (substr($string, 0, strlen($prefix)) == $prefix) {\n \
    \     $result[] = $string;\n    }\n  }\n  return $result;\n}\n", "  $result =\
    \ array();\n  foreach ($strings as $string) {\n    if (substr($string, 0, strlen($prefix))\
    \ == $prefix) {\n      $result[] = $string;\n    }\n  }\n  return $result;\n}\n",
  "\t$filtered = array();\n\tforeach ($strings as $str) {\n\t\tif (strpos($str, $prefix)\
    \ === 0) {\n\t\t\t$filtered[] = $str;\n\t\t}\n\t}\n\treturn $filtered;\n}\n",
  "    return array_filter($strings, function($s) use ($prefix) {\n        return\
    \ substr($s, 0, strlen($prefix)) == $prefix;\n    });\n}\n", "\t$ret = array();\n\
    \tforeach ($strings as $string) {\n\t\tif (substr($string, 0, strlen($prefix))\
    \ == $prefix) {\n\t\t\t$ret[] = $string;\n\t\t}\n\t}\n\treturn $ret;\n}\n", "\t\
    $prefix_len = strlen($prefix);\n\t$result = array();\n\tforeach ($strings as $string)\
    \ {\n\t\tif (substr($string, 0, $prefix_len) == $prefix) {\n\t\t\t$result[] =\
    \ $string;\n\t\t}\n\t}\n\treturn $result;\n}\n", "    $list = array();\n    foreach\
    \ ($strings as $string) {\n        if (strncmp($string, $prefix, strlen($prefix))\
    \ == 0) {\n            $list[] = $string;\n        }\n    }\n    return $list;\n\
    }\n", "    $rv = array();\n    foreach ($strings as $string) {\n        if (strpos($string,\
    \ $prefix) === 0) {\n            $rv[] = $string;\n        }\n    }\n    return\
    \ $rv;\n}\n", "    $filtered = array();\n    foreach ($strings as $str) {\n  \
    \      if (strpos($str, $prefix) === 0) {\n            $filtered[] = $str;\n \
    \       }\n    }\n    return $filtered;\n}\n", "  $result = array();\n  foreach\
    \ ($strings as $str) {\n    if (strpos($str, $prefix) === 0) {\n      $result[]\
    \ = $str;\n    }\n  }\n  return $result;\n}\n", "    $new_array = array();\n \
    \   foreach ($strings as $element) {\n        if (strpos($element, $prefix) ===\
    \ 0) {\n            $new_array[] = $element;\n        }\n    }\n    return $new_array;\n\
    }", "    $result = array();\n    foreach ($strings as $item) {\n        if (starts_with($item,\
    \ $prefix)) {\n            $result[] = $item;\n        }\n    }\n    return $result;\n\
    }\n", "    $result = array();\n    foreach ($strings as $string) {\n        if\
    \ (strpos($string, $prefix) === 0) {\n            $result[] = $string;\n     \
    \   }\n    }\n    return $result;\n}", "    $filtered = array();\n    foreach\
    \ ($strings as $s) {\n        if (substr($s, 0, strlen($prefix)) == $prefix) {\n\
    \            $filtered[] = $s;\n        }\n    }\n    return $filtered;\n}\n",
  "    $result = array();\n    foreach ($strings as $string) {\n        if (strpos($string,\
    \ $prefix) === 0) {\n            $result[] = $string;\n        }\n    }\n    return\
    \ $result;\n}\n", "    $filtered = array();\n    foreach ($strings as $string)\
    \ {\n        if (substr($string, 0, strlen($prefix)) == $prefix) {\n         \
    \   $filtered[] = $string;\n        }\n    }\n    return $filtered;\n}\n", " \
    \   return array_filter($strings, function($string) use ($prefix) {\n        return\
    \ strpos($string, $prefix) === 0;\n    });\n}\n", "    $filtered = array();\n\
    \    foreach ($strings as $string) {\n        if (startswith($string, $prefix))\
    \ {\n            $filtered[] = $string;\n        }\n    }\n    return $filtered;\n\
    }\n", "\t// Your code here.\n\t$filter_array = array();\n\tforeach ($strings as\
    \ $strings_key => $strings_value) {\n\t\tif (strpos($strings_value, $prefix) ===\
    \ 0) {\n\t\t\t$filter_array[] = $strings_value;\n\t\t}\n\t}\n\tprint_r($filter_array);\n\
    }\n\n$test1 = filter_by_prefix(array(), \"a\");\n$test2 = filter_by_prefix(array(\"\
    abc\", \"bcd\", \"cde\", \"array\"), \"a\");\nprint_r($test1);\nprint_r($test2);",
  "    return array_filter($strings, function($v) use ($prefix) {\n        return\
    \ substr($v, 0, strlen($prefix)) == $prefix;\n    });\n}\n", "    $is_prefix =\
    \ function($string) use ($prefix) {\n        return substr($string, 0, strlen($prefix))\
    \ === $prefix;\n    };\n    return array_filter($strings, $is_prefix);\n}\n",
  "\t$result = array();\n\tforeach ($strings as $str) {\n\t\tif (0 === strpos($str,\
    \ $prefix)) {\n\t\t\t$result[] = $str;\n\t\t}\n\t}\n\treturn $result;\n}\n", " \
    \   $ret = array();\n    foreach ($strings as $string) {\n        if (substr($string,\
    \ 0, strlen($prefix)) == $prefix) {\n            $ret[] = $string;\n        }\n\
    \    }\n    return $ret;\n}\n", "    $result = array();\n    foreach ($strings\
    \ as $string) {\n        if (strpos($string, $prefix) === 0) {\n            $result[]\
    \ = $string;\n        }\n    }\n    return $result;\n}\n", "\tforeach ($strings\
    \ as $key => $value) {\n\t\tif (strpos($value, $prefix) !== 0) {\n\t\t\tunset($strings[$key]);\n\
    \t\t}\n\t}\n\treturn $strings;\n}\n", "    $filtered = array();\n    foreach ($strings\
    \ as $string) {\n        if (strpos($string, $prefix) === 0) {\n            $filtered[]\
    \ = $string;\n        }\n    }\n    return $filtered;\n}\n", "    $result = array();\n\
    \    for ($i = 0; $i < count($strings); $i++) {\n        if (strpos($strings[$i],\
    \ $prefix) === 0) {\n            $result[] = $strings[$i];\n        }\n    }\n\
    \    return $result;\n}", "    $result = array();\n    foreach ($strings as $str)\
    \ {\n        if (starts_with($str, $prefix)) {\n            $result[] = $str;\n\
    \        }\n    }\n    return $result;\n}\n", "    $out = array();\n    foreach\
    \ ($strings as $s) {\n        if (substr($s, 0, strlen($prefix)) == $prefix) {\n\
    \            $out[] = $s;\n        }\n    }\n    return $out;\n}\n\n", "\t// CODE\
    \ HERE\n\t$result = array();\n\tforeach ($strings as $string) {\n\t\tif (strlen($string)\
    \ > strlen($prefix)) {\n\t\t\tif (substr($string, 0, strlen($prefix)) == $prefix)\
    \ {\n\t\t\t\tarray_push($result, $string);\n\t\t\t}\n\t\t}\n\t}\n\treturn $result;\n\
    }", "\t// Your code here\n\t//return [];\n\t//$the_array = [];\n\t$the_array =\
    \ array_filter($strings, function($val) use ($prefix) {\n\t\treturn stripos($val,\
    \ $prefix) === 0;\n\t});\n\treturn $the_array;\n}", "\t$ans = array();\n\tforeach\
    \ ($strings as $string) {\n\t\tif (startswith($string, $prefix)) {\n\t\t\t$ans[]\
    \ = $string;\n\t\t}\n\t}\n\treturn $ans;\n}\n", "\treturn array_filter($strings,\
    \ function($item) use ($prefix) {\n\t\treturn starts_with($item, $prefix);\n\t\
    });\n}\n", "\treturn array_filter($strings, function($str) use ($prefix) {\n\t\
    \treturn strpos($str, $prefix) === 0;\n\t});\n}\n", "    $filtered = array();\n\
    \    foreach ($strings as $s) {\n        if (strpos($s, $prefix) === 0) {\n  \
    \          $filtered[] = $s;\n        }\n    }\n    return $filtered;\n}\n", "\t\
    return array_filter($strings, function($string) use ($prefix) {\n\t\treturn !empty($string)\
    \ && $string[0] == $prefix;\n\t});\n}\n", "    $result = array();\n    foreach\
    \ ($strings as $string) {\n        if (starts_with($string, $prefix)) {\n    \
    \        $result[] = $string;\n        }\n    }\n    return $result;\n}\n", " \
    \ $result = array();\n  foreach ($strings as $s) {\n    if (strncmp($s, $prefix,\
    \ strlen($prefix)) == 0) {\n      $result[] = $s;\n    }\n  }\n  return $result;\n\
    }\n", "\t$result = array();\n\tforeach ($strings as $string) {\n\t\tif (0 ===\
    \ strpos($string, $prefix)) {\n\t\t\t$result[] = $string;\n\t\t}\n\t}\n\treturn\
    \ $result;\n}\n", "\t$strings = is_array($strings) ? $strings : array();\n\t$result\
    \ = array();\n\tforeach ($strings as $string) {\n\t\tif (starts_with($string,\
    \ $prefix)) {\n\t\t\t$result[] = $string;\n\t\t}\n\t}\n\treturn $result;\n}\n",
  "    $results = array();\n    foreach ($strings as $str) {\n        if (strpos($str,\
    \ $prefix) === 0) {\n            $results[] = $str;\n        }\n    }\n    return\
    \ $results;\n}", "    $filtered = array();\n    foreach ($strings as $string)\
    \ {\n        if (0 === strpos($string, $prefix)) {\n            $filtered[] =\
    \ $string;\n        }\n    }\n    return $filtered;\n}\n", "    return array_filter($strings,\
    \ function($string) use ($prefix) {\n        return (strpos($string, $prefix)\
    \ === 0);\n    });\n}\n", "    $result = array();\n    foreach ($strings as $str)\
    \ {\n        if (strpos($str, $prefix) === 0) {\n            $result[] = $str;\n\
    \        }\n    }\n    return $result;\n}\n", "    // TODO\n    $new_arr = array();\n\
    \    foreach ($strings as $string) {\n        if (starts_with($string, $prefix))\
    \ {\n            array_push($new_arr, $string);\n        }\n    }\n    return\
    \ $new_arr;\n}", "    return array_filter($strings, function($string) use ($prefix)\
    \ {\n        return strpos($string, $prefix) === 0;\n    });\n}", "    $result\
    \ = array();\n    foreach ($strings as $string) {\n        if (strncmp($string,\
    \ $prefix, strlen($prefix)) == 0) {\n            $result[] = $string;\n      \
    \  }\n    }\n    return $result;\n}\n", "  return array_filter($strings, function($string)\
    \ use ($prefix) {\n    return strpos($string, $prefix) === 0;\n  });\n}\n", " \
    \ $ret = array();\n  foreach ($strings as $str) {\n    if (strpos($str, $prefix)\
    \ === 0) {\n      $ret[] = $str;\n    }\n  }\n  return $ret;\n}\n", "  $filtered\
    \ = array();\n  foreach ($strings as $string) {\n    if (substr($string, 0, strlen($prefix))\
    \ == $prefix) {\n      $filtered[] = $string;\n    }\n  }\n  return $filtered;\n\
    }\n", "    $filtered = array();\n    foreach ($strings as $str) {\n        if\
    \ (str_starts_with($str, $prefix)) {\n            $filtered[] = $str;\n      \
    \  }\n    }\n    return $filtered;\n}", "  $result = array();\n  foreach ($strings\
    \ as $string) {\n    if (0 === strpos($string, $prefix)) {\n      $result[] =\
    \ $string;\n    }\n  }\n  return $result;\n}", "  $result = array();\n  foreach\
    \ ($strings as $string) {\n    if (substr($string, 0, strlen($prefix)) == $prefix)\
    \ {\n      $result[] = $string;\n    }\n  }\n  return $result;\n}\n", "\t// Your\
    \ code here.\n\t$result = array();\n\tforeach ($strings as $s) {\n\t\tif (strlen($s)\
    \ >= strlen($prefix) && substr($s, 0, strlen($prefix)) == $prefix) {\n\t\t\tarray_push($result,\
    \ $s);\n\t\t}\n\t}\n\treturn $result;\n}\n", "    $filterd = array();\n    foreach\
    \ ($strings as $str) {\n        if (strpos($str, $prefix) === 0) {\n         \
    \   $filterd[] = $str;\n        }\n    }\n    return $filterd;\n}\n", "  $ret\
    \ = array();\n  foreach ($strings as $string) {\n    if (0 === strpos($string,\
    \ $prefix)) {\n      $ret[] = $string;\n    }\n  }\n  return $ret;\n}\n", "\t\
    $new_array = array();\n\tforeach ($strings as $string) {\n\t\tif (starts_with($string,\
    \ $prefix)) {\n\t\t\t$new_array[] = $string;\n\t\t}\n\t}\n\treturn $new_array;\n\
    }\n", "\t$filtered = array();\n\tfor ($i = 0; $i < count($strings); $i++) {\n\t\
    \tif (strpos($strings[$i], $prefix) === 0) {\n\t\t\t$filtered[] = $strings[$i];\n\
    \t\t}\n\t}\n\treturn $filtered;\n}\n", "  $result = array();\n  foreach ($strings\
    \ as $string) {\n    if (strlen($string) >= strlen($prefix) &&\n        substr($string,\
    \ 0, strlen($prefix)) == $prefix) {\n      $result[] = $string;\n    }\n  }\n\
    \  return $result;\n}", "\t$filtered = array();\n\tforeach ($strings as $string)\
    \ {\n\t\tif (strpos($string, $prefix) === 0) {\n\t\t\t$filtered[] = $string;\n\
    \t\t}\n\t}\n\treturn $filtered;\n}\n", "  // YOUR CODE HERE\n  $result = array();\n\
    \  foreach ($strings as $str) {\n    if (strpos($str, $prefix) === 0) {\n    \
    \  array_push($result, $str);\n    }\n  }\n  return $result;\n}\n", "    $prefix_strings\
    \ = array();\n    foreach ($strings as $string) {\n        if (starts_with($string,\
    \ $prefix)) {\n            $prefix_strings[] = $string;\n        }\n    }\n  \
    \  return $prefix_strings;\n}\n", "    $filtered = array();\n    foreach ($strings\
    \ as $string) {\n        if (starts_with($string, $prefix)) {\n            $filtered[]\
    \ = $string;\n        }\n    }\n    return $filtered;\n}\n", "    $valid = array();\n\
    \    foreach ($strings as $string) {\n        if (str_starts_with($string, $prefix))\
    \ {\n            $valid[] = $string;\n        }\n    }\n    return $valid;\n}\n",
  "  $prefix_length = strlen($prefix);\n  $result = array();\n  foreach ($strings\
    \ as $string) {\n    if (substr($string, 0, $prefix_length) == $prefix) {\n  \
    \    $result[] = $string;\n    }\n  }\n  return $result;\n}\n", "    $result =\
    \ array();\n    foreach ($strings as $item) {\n        if (0 === strpos($item,\
    \ $prefix)) {\n            $result[] = $item;\n        }\n    }\n    return $result;\n\
    }", "    $results = array();\n    foreach ($strings as $str) {\n        if (substr($str,\
    \ 0, strlen($prefix)) == $prefix) {\n            $results[] = $str;\n        }\n\
    \    }\n    return $results;\n}\n", "\t// Your code here.\n\t$result = array();\n\
    \tforeach ($strings as $x) {\n\t\tif (strlen($x) >= strlen($prefix)) {\n\t\t\t\
    if (substr($x, 0, strlen($prefix)) == $prefix) {\n\t\t\t\tarray_push($result,\
    \ $x);\n\t\t\t}\n\t\t}\n\t}\n\treturn $result;\n}\necho '<p>filter_by_prefix(array(),\
    \ \"a\") = ';\nprint_r(filter_by_prefix(array(), \"a\"));\necho '</p>';\necho\
    \ '<p>filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\") = ';\n\
    print_r(filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"), \"a\"));\n\
    echo '</p>';", "  $filtered = array();\n  foreach ($strings as $string) {\n  \
    \  if (strpos($string, $prefix) === 0) {\n      $filtered[] = $string;\n    }\n\
    \  }\n  return $filtered;\n}\n", "    $matched = array();\n    foreach ($strings\
    \ as $s) {\n        if (substr($s, 0, strlen($prefix)) == $prefix) {\n       \
    \     $matched[] = $s;\n        }\n    }\n    return $matched;\n}\n\n", "    $filtered\
    \ = array();\n    foreach ($strings as $string) {\n        if (substr($string,\
    \ 0, strlen($prefix)) == $prefix) {\n            $filtered[] = $string;\n    \
    \    }\n    }\n    return $filtered;\n}\n", "    $output = array();\n    foreach\
    \ ($strings as $string) {\n        if (strpos($string, $prefix) === 0) {\n   \
    \         $output[] = $string;\n        }\n    }\n    return $output;\n}\n", " \
    \   $matches = array();\n    foreach ($strings as $string) {\n        if (starts_with($string,\
    \ $prefix)) {\n            $matches[] = $string;\n        }\n    }\n    return\
    \ $matches;\n}\n", "    $filtered = array();\n    foreach ($strings as $s) {\n\
    \        if (strpos($s, $prefix) === 0) {\n            $filtered[] = $s;\n   \
    \     }\n    }\n    return $filtered;\n}\n", "  return array_filter($strings,\
    \ function($str) use ($prefix) {\n    return strpos($str, $prefix) === 0;\n  });\n\
    }\n\n$strings = array(\"abc\", \"bcd\", \"cde\", \"array\");\n$result = filter_by_prefix($strings,\
    \ \"a\");\nprint_r($result);", "    $result = array();\n    foreach ($strings\
    \ as $s) {\n        if (substr($s, 0, strlen($prefix)) == $prefix) {\n       \
    \     $result[] = $s;\n        }\n    }\n    return $result;\n}\n", "    $result\
    \ = array();\n    foreach ($strings as $string) {\n        if (preg_match(\"/^\"\
    \ . $prefix . \"/\", $string)) {\n            $result[] = $string;\n        }\n\
    \    }\n    return $result;\n}", "  return array_filter($strings, function($string)\
    \ use ($prefix) {\n    return strpos($string, $prefix) === 0;\n  });\n}\n", " \
    \   // YOUR CODE HERE\n    $result=array();\n    foreach($strings as $s){\n  \
    \      if (strpos($s,$prefix)===0){\n            array_push($result,$s);\n   \
    \     }\n    }\n    return $result;\n}\n", "  $result = array();\n  foreach ($strings\
    \ as $string) {\n    if (strpos($string, $prefix) === 0) {\n      $result[] =\
    \ $string;\n    }\n  }\n  return $result;\n}\n", "    $array = array();\n    foreach\
    \ ($strings as $string) {\n        if (starts_with($string, $prefix)) {\n    \
    \        $array[] = $string;\n        }\n    }\n    return $array;\n}\n", "  $strings_with_prefix\
    \ = array();\n  foreach ($strings as $string) {\n    if (starts_with($string,\
    \ $prefix)) {\n      $strings_with_prefix[] = $string;\n    }\n  }\n  return $strings_with_prefix;\n\
    }\n", "    $output = array();\n    foreach ($strings as $string) {\n        if\
    \ (substr($string, 0, strlen($prefix)) == $prefix) {\n            $output[] =\
    \ $string;\n        }\n    }\n    return $output;\n}\n", "    $filtered = array();\n\
    \    foreach ($strings as $string) {\n        if (starts_with($string, $prefix))\
    \ {\n            $filtered[] = $string;\n        }\n    }\n    return $filtered;\n\
    }", "    $new_array = array();\n    foreach ($strings as $str) {\n        if (substr($str,\
    \ 0, strlen($prefix)) == $prefix) {\n            $new_array[] = $str;\n      \
    \  }\n    }\n    return $new_array;\n}\n", "    // your code here\n    $result\
    \ = array();\n    foreach ($strings as $string) {\n        if (strpos($string,\
    \ $prefix) === 0) {\n            $result[] = $string;\n        }\n    }\n    return\
    \ $result;\n}", "    $answer = array();\n    foreach ($strings as $string) {\n\
    \        if (strncmp($string, $prefix, strlen($prefix)) == 0) {\n            $answer[]\
    \ = $string;\n        }\n    }\n    return $answer;\n}\n", "    $filtered = array();\n\
    \    foreach ($strings as $string) {\n        if (starts_with($string, $prefix))\
    \ {\n            $filtered[] = $string;\n        }\n    }\n    return $filtered;\n\
    }\n", "\treturn array_filter($strings, function($string) use ($prefix) {\n\t\t\
    return strpos($string, $prefix) === 0;\n\t});\n}\n", "  $ret = array();\n  foreach\
    \ ($strings as $str) {\n    if (strpos($str, $prefix) === 0) {\n      $ret[] =\
    \ $str;\n    }\n  }\n  return $ret;\n}\n", "\t$filtered = array();\n\tforeach\
    \ ($strings as $string) {\n\t\tif (strncmp($string, $prefix, strlen($prefix))\
    \ == 0) {\n\t\t\t$filtered[] = $string;\n\t\t}\n\t}\n\treturn $filtered;\n}\n",
  "  $ret = array();\n  foreach ($strings as $s) {\n    if (strpos($s, $prefix) ===\
    \ 0) {\n      $ret[] = $s;\n    }\n  }\n  return $ret;\n}\n", "\treturn array_filter($strings,\
    \ function($str) use ($prefix) {\n\t\treturn strpos($str, $prefix) === 0;\n\t\
    });\n}\n", "  $ret = array();\n  foreach ($strings as $value) {\n    if (strpos($value,\
    \ $prefix) === 0) {\n      $ret[] = $value;\n    }\n  }\n  return $ret;\n}\n",
  "\t$results = array();\n\tforeach ($strings as $string) {\n\t\tif (strpos($string,\
    \ $prefix) === 0) {\n\t\t\t$results[] = $string;\n\t\t}\n\t}\n\treturn $results;\n\
    }\n", "\t// Implement this function.\n}\n", "\t$filtered = array();\n\tforeach\
    \ ($strings as $str) {\n\t\tif (strpos($str, $prefix) === 0) {\n\t\t\t$filtered[]\
    \ = $str;\n\t\t}\n\t}\n\treturn $filtered;\n}\n", "\t$result = array();\n\tforeach\
    \ ($strings as $string) {\n\t\tif (substr($string, 0, strlen($prefix)) == $prefix)\
    \ {\n\t\t\t$result[] = $string;\n\t\t}\n\t}\n\treturn $result;\n}\n", "    $result\
    \ = array();\n    foreach ($strings as $string) {\n        if (strpos($string,\
    \ $prefix) === 0) {\n            $result[] = $string;\n        }\n    }\n    return\
    \ $result;\n}\n", "    return array_filter($strings, function($string) use ($prefix)\
    \ {\n        return strpos($string, $prefix) === 0;\n    });\n}\n", "    $strings\
    \ = array_filter($strings, function($item) use ($prefix) {\n        return strpos($item,\
    \ $prefix) === 0;\n    });\n    return $strings;\n}\n", "    $result = array();\n\
    \    foreach ($strings as $string) {\n        if (starts_with($string, $prefix))\
    \ {\n            $result[] = $string;\n        }\n    }\n    return $result;\n\
    }\n", "\t$len = strlen($prefix);\n\t$result = array();\n\tfor ($i = 0; $i < count($strings);\
    \ $i++) {\n\t\tif (substr($strings[$i], 0, $len) == $prefix) {\n\t\t\t$result[]\
    \ = $strings[$i];\n\t\t}\n\t}\n\treturn $result;\n}\n", "    $filtered = array();\n\
    \    foreach ($strings as $string) {\n        if (strpos($string, $prefix) ===\
    \ 0) {\n            $filtered[] = $string;\n        }\n    }\n    return $filtered;\n\
    }\n", "    $match = array();\n    foreach ($strings as $string) {\n        if\
    \ (preg_match(\"/^$prefix/\", $string)) {\n            $match[] = $string;\n \
    \       }\n    }\n    return $match;\n}\n", "  // Use array_filter() and a callback\
    \ function to filter the array.\n  return array_filter($strings, function($s)\
    \ use ($prefix) {\n    return (strpos($s, $prefix) === 0);\n  });\n}", "    $result\
    \ = array();\n    foreach ($strings as $string) {\n        if (substr($string,\
    \ 0, strlen($prefix)) == $prefix) {\n            $result[] = $string;\n      \
    \  }\n    }\n    return $result;\n}\n", "    // YOUR CODE HERE\n    $arr1=array();\n\
    \    foreach($strings as $key=>$value){\n        if(preg_match(\"/^\".$prefix.\"\
    /\",$value)){\n            $arr1[]=$value;\n        }\n    }\n    return $arr1;\n\
    }\n", "\t$result = array();\n\tforeach ($strings as $s) {\n\t\tif (starts_with($s,\
    \ $prefix)) {\n\t\t\t$result[] = $s;\n\t\t}\n\t}\n\treturn $result;\n}", "\t$prefixed\
    \ = array();\n\tforeach ($strings as $s) {\n\t\tif (starts_with($s, $prefix))\n\
    \t\t\t$prefixed[] = $s;\n\t}\n\treturn $prefixed;\n}\n", "    $filtered = array();\n\
    \    foreach ($strings as $string) {\n        if (strpos($string, $prefix) ===\
    \ 0) {\n            $filtered[] = $string;\n        }\n    }\n    return $filtered;\n\
    }\n", "  $filtered = array();\n  foreach ($strings as $string) {\n    if (substr($string,\
    \ 0, strlen($prefix)) == $prefix) {\n      $filtered[] = $string;\n    }\n  }\n\
    \  return $filtered;\n}\n", "\t$result = array();\n\tforeach ($strings as $string)\
    \ {\n\t\tif (strpos($string, $prefix) === 0) {\n\t\t\t$result[] = $string;\n\t\
    \t}\n\t}\n\treturn $result;\n}\n", "    $filtered = array();\n    foreach ($strings\
    \ as $string) {\n        if (strpos($string, $prefix) === 0) {\n            $filtered[]\
    \ = $string;\n        }\n    }\n    return $filtered;\n}", "    $result = array();\n\
    \    foreach ($strings as $string) {\n        if (preg_match(\"/^$prefix/\", $string))\
    \ {\n            $result[] = $string;\n        }\n    }\n    return $result;\n\
    }", "\t$strings = array_filter($strings, function($s) use ($prefix) {\n\t\treturn\
    \ strpos($s, $prefix) === 0;\n\t});\n\treturn $strings;\n}\n", "    $result =\
    \ array();\n    foreach ($strings as $string) {\n        if (preg_match(\"/^\"\
    \ . $prefix . \"/\", $string)) {\n            $result[] = $string;\n        }\n\
    \    }\n    return $result;\n}\n", "    $filtered = array();\n    foreach ($strings\
    \ as $string) {\n        if (starts_with($string, $prefix)) {\n            $filtered[]\
    \ = $string;\n        }\n    }\n    return $filtered;\n}\n", "\t$result = array();\n\
    \tforeach ($strings as $string) {\n\t\tif (startswith($string, $prefix)) {\n\t\
    \t\t$result[] = $string;\n\t\t}\n\t}\n\treturn $result;\n}\n", "\t$results = array();\n\
    \tforeach ($strings as $string) {\n\t\tif (substr($string, 0, strlen($prefix))\
    \ == $prefix) {\n\t\t\t$results[] = $string;\n\t\t}\n\t}\n\treturn $results;\n\
    }\n", "\t$filtered = array();\n\tforeach ($strings as $string) {\n\t\tif (substr($string,\
    \ 0, strlen($prefix)) == $prefix) {\n\t\t\t$filtered[] = $string;\n\t\t}\n\t}\n\
    \treturn $filtered;\n}\n", "\t$prefix = strtolower($prefix);\n\t$new_array = array();\n\
    \tforeach ($strings as $string) {\n\t\tif (strtolower(substr($string, 0, strlen($prefix)))\
    \ == $prefix) {\n\t\t\t$new_array[] = $string;\n\t\t}\n\t}\n\treturn $new_array;\n\
    }\n", "    $result = array();\n    foreach ($strings as $string) {\n        if\
    \ (strpos($string, $prefix) === 0) {\n            $result[] = $string;\n     \
    \   }\n    }\n    return $result;\n}", "\t$filtered = array();\n\tforeach ($strings\
    \ as $string) {\n\t\tif (substr($string, 0, strlen($prefix)) == $prefix) {\n\t\
    \t\t$filtered[] = $string;\n\t\t}\n\t}\n\treturn $filtered;\n}\n", "\t$out = array();\n\
    \tforeach ($strings as $str) {\n\t\tif (strpos($str, $prefix) === 0) {\n\t\t\t\
    $out[] = $str;\n\t\t}\n\t}\n\treturn $out;\n}\n", "\t$filtered = array();\n\t\
    foreach ($strings as $string) {\n\t\tif (strlen($string) >= strlen($prefix) &&\
    \ substr($string, 0, strlen($prefix)) == $prefix) {\n\t\t\t$filtered[] = $string;\n\
    \t\t}\n\t}\n\treturn $filtered;\n}\n", "    $ret = array();\n    foreach ($strings\
    \ as $string) {\n        if (starts_with($string, $prefix)) {\n            $ret[]\
    \ = $string;\n        }\n    }\n    return $ret;\n}", "    $filtered = array();\n\
    \    foreach ($strings as $val) {\n        if (preg_match(\"/^$prefix/\", $val))\
    \ {\n            $filtered[] = $val;\n        }\n    }\n    return $filtered;\n\
    }\n", "    // Fill this in.\n    $result = array();\n    foreach ($strings as\
    \ $string) {\n        if (strpos($string, $prefix) === 0) {\n            $result[]\
    \ = $string;\n        }\n    }\n    return $result;\n}\n", "    $prefix_length\
    \ = strlen($prefix);\n    $len = count($strings);\n    $filtered = array();\n\
    \    for ($i = 0; $i < $len; $i++) {\n        $str = $strings[$i];\n        if\
    \ (substr($str, 0, $prefix_length) == $prefix) {\n            $filtered[] = $str;\n\
    \        }\n    }\n    return $filtered;\n}", "  $result = array();\n  foreach\
    \ ($strings as $s) {\n    if (substr($s, 0, strlen($prefix)) == $prefix) {\n \
    \     $result[] = $s;\n    }\n  }\n  return $result;\n}\n", "  // WRITE ME\n}\n",
  "\treturn array_filter($strings, function($element) use ($prefix) {\n\t\treturn\
    \ strpos($element, $prefix) === 0;\n\t});\n}\n", "    // Fill this in.\n    return\
    \ array_filter($strings, function($string) use ($prefix) {\n        return strpos($string,\
    \ $prefix) === 0;\n    });\n}\n\nprint_r(filter_by_prefix(array(\"abc\", \"bcd\"\
    , \"cde\", \"array\"), \"a\"));\n", "\t$matches = array();\n\tforeach ($strings\
    \ as $string) {\n\t\tif (substr($string, 0, strlen($prefix)) == $prefix) {\n\t\
    \t\t$matches[] = $string;\n\t\t}\n\t}\n\treturn $matches;\n}\n", "    $return_array\
    \ = array();\n    foreach ($strings as $string) {\n        if (substr($string,\
    \ 0, strlen($prefix)) == $prefix) {\n            $return_array[] = $string;\n\
    \        }\n    }\n    return $return_array;\n}\n", "\t$filtered = array();\n\t\
    foreach ($strings as $str) {\n\t\tif (strpos($str, $prefix) === 0) {\n\t\t\t$filtered[]\
    \ = $str;\n\t\t}\n\t}\n\treturn $filtered;\n}\n", "    $filtered = array();\n\
    \    foreach ($strings as $string) {\n        if (substr($string, 0, strlen($prefix))\
    \ == $prefix) {\n            $filtered[] = $string;\n        }\n    }\n    return\
    \ $filtered;\n}\n", "\treturn array_filter($strings, function($s) use ($prefix)\
    \ {\n\t\treturn strpos($s, $prefix) === 0;\n\t});\n}\n", "    $result = array();\n\
    \    foreach ($strings as $string) {\n        if (substr($string, 0, strlen($prefix))\
    \ == $prefix) {\n            $result[] = $string;\n        }\n    }\n    return\
    \ $result;\n}", "    $filtered = array();\n    foreach ($strings as $string) {\n\
    \        if (substr($string, 0, strlen($prefix)) == $prefix) {\n            $filtered[]\
    \ = $string;\n        }\n    }\n    return $filtered;\n}\n", "    $filtered =\
    \ array();\n    foreach ($strings as $string) {\n        if (substr($string, 0,\
    \ strlen($prefix)) == $prefix) {\n            $filtered[] = $string;\n       \
    \ }\n    }\n    return $filtered;\n}", "    // YOUR CODE HERE\n    $result = array();\n\
    \    foreach ($strings as $key => $value) {\n        if(substr($value, 0, strlen($prefix))\
    \ == $prefix){\n            array_push($result, $value);\n        }\n    }\n \
    \   return $result;\n}", "\t$filtered = array();\n\tforeach ($strings as $string)\
    \ {\n\t\tif (strpos($string, $prefix) === 0) {\n\t\t\t$filtered[] = $string;\n\
    \t\t}\n\t}\n\treturn $filtered;\n}\n", "  $result = array();\n  foreach ($strings\
    \ as $s) {\n    if (strpos($s, $prefix) === 0) {\n      $result[] = $s;\n    }\n\
    \  }\n  return $result;\n}\n", "  $prelen = strlen($prefix);\n  $output = array();\n\
    \  foreach ($strings as $str) {\n    if (substr($str, 0, $prelen) == $prefix)\
    \ {\n      $output[] = $str;\n    }\n  }\n  return $output;\n}\n", "  $result\
    \ = array();\n  foreach ($strings as $string) {\n    if (strpos($string, $prefix)\
    \ === 0) {\n      $result[] = $string;\n    }\n  }\n  return $result;\n}\n", "\t\
    return preg_grep(\"/^\" . $prefix . \"/\", $strings);\n}\n", "  return array_filter($strings,\
    \ function($string) use ($prefix) {\n    return strpos($string, $prefix) === 0;\n\
    \  });\n}", "    $retval = array();\n    foreach ($strings as $i => $string) {\n\
    \        if (starts_with($string, $prefix)) {\n            $retval[] = $string;\n\
    \        }\n    }\n    return $retval;\n}\n", "    return array_filter($strings,\
    \ function($v) use ($prefix) {\n        return strpos($v, $prefix) === 0;\n  \
    \  });\n}", "\t$ret = array();\n\tforeach ($strings as $s) {\n\t\tif (str_starts_with($s,\
    \ $prefix)) {\n\t\t\t$ret[] = $s;\n\t\t}\n\t}\n\treturn $ret;\n}\n", "  $ret =\
    \ array();\n  foreach ($strings as $s) {\n    if (strpos($s, $prefix) === 0) {\n\
    \      $ret[] = $s;\n    }\n  }\n  return $ret;\n}\n", "    $filtered = array();\n\
    \    foreach ($strings as $string) {\n        if (strpos($string, $prefix) ===\
    \ 0) {\n            $filtered[] = $string;\n        }\n    }\n    return $filtered;\n\
    }", "    $length = strlen($prefix);\n    $filtered = array();\n    foreach ($strings\
    \ as $string) {\n        if (substr($string, 0, $length) == $prefix) {\n     \
    \       $filtered[] = $string;\n        }\n    }\n    return $filtered;\n}", " \
    \   $result = array();\n    foreach ($strings as $str) {\n        if (strncmp($str,\
    \ $prefix, strlen($prefix)) == 0) {\n            $result[] = $str;\n        }\n\
    \    }\n    return $result;\n}\n", "    $result = array();\n    foreach ($strings\
    \ as $string) {\n        if (strpos($string, $prefix) === 0) {\n            $result[]\
    \ = $string;\n        }\n    }\n    return $result;\n}", "  $result = array();\n\
    \  foreach ($strings as $string) {\n    if (substr($string, 0, strlen($prefix))\
    \ == $prefix) {\n      $result[] = $string;\n    }\n  }\n  return $result;\n}\n",
  "    $result = array();\n    for ($i = 0; $i < count($strings); $i++) {\n      \
    \  if (substr($strings[$i], 0, strlen($prefix)) == $prefix) {\n            $result[]\
    \ = $strings[$i];\n        }\n    }\n    return $result;\n}\n", "\treturn array_filter($strings,\
    \ function($str) use ($prefix) {\n\t\treturn starts_with($str, $prefix);\n\t});\n\
    }\n", "\t$result = array();\n\tforeach ($strings as $string) {\n\t\tif (substr($string,\
    \ 0, strlen($prefix)) == $prefix) {\n\t\t\t$result[] = $string;\n\t\t}\n\t}\n\t\
    return $result;\n}\n", "    $result = array();\n    foreach ($strings as $string)\
    \ {\n        if (substr($string, 0, strlen($prefix)) == $prefix) {\n         \
    \   $result[] = $string;\n        }\n    }\n    return $result;\n}\n", "\t$return\
    \ = array();\n\t\n\tforeach ($strings as $string) {\n\t\tif (strpos($string, $prefix)\
    \ === 0) {\n\t\t\t$return[] = $string;\n\t\t}\n\t}\n\t\n\treturn $return;\n}\n",
  "  $result = array();\n  foreach ($strings as $str) {\n    if (strpos($str, $prefix)\
    \ === 0) {\n      $result[] = $str;\n    }\n  }\n  return $result;\n}\n", "\t\
    $result = array();\n\tforeach ($strings as $str) {\n\t\tif (strpos($str, $prefix)\
    \ === 0) {\n\t\t\t$result[] = $str;\n\t\t}\n\t}\n\treturn $result;\n}\n", "  $filtered\
    \ = array();\n  for ($i = 0; $i < count($strings); $i++) {\n    if (strpos($strings[$i],\
    \ $prefix) === 0) {\n      $filtered[] = $strings[$i];\n    }\n  }\n  return $filtered;\n\
    }\n", "  $retval = array();\n  foreach ($strings as $string) {\n    if (strpos($string,\
    \ $prefix) === 0) {\n      $retval[] = $string;\n    }\n  }\n  return $retval;\n\
    }\n", "    return array_filter($strings, function($string) use ($prefix) {\n \
    \       return strpos($string, $prefix) === 0;\n    });\n}\n", "  return array_filter($strings,\
    \ function($string) use ($prefix) {\n    return strpos($string, $prefix) === 0;\n\
    \  });\n}\n", "  return array_filter($strings, function($str) use ($prefix) {\n\
    \    return substr($str, 0, strlen($prefix)) == $prefix;\n  });\n}\n", "    $arr\
    \ = array();\n    foreach ($strings as $string) {\n        if (startswith($string,\
    \ $prefix)) {\n            $arr[] = $string;\n        }\n    }\n    return $arr;\n\
    }\n", "  $temp = array();\n  foreach ($strings as $string) {\n    if (strpos($string,\
    \ $prefix) === 0) {\n      $temp[] = $string;\n    }\n  }\n  return $temp;\n}",
  "\t$result = array();\n\tforeach ($strings as $str) {\n\t\tif (strpos($str, $prefix)\
    \ === 0) {\n\t\t\t$result[] = $str;\n\t\t}\n\t}\n\treturn $result;\n}\n", "  \
    \  return array_filter($strings, function($string) use ($prefix) {\n        return\
    \ strncmp($string, $prefix, strlen($prefix)) == 0;\n    });\n}\n", "    return\
    \ array_filter($strings, function($string) use ($prefix) {\n        return substr($string,\
    \ 0, strlen($prefix)) == $prefix;\n    });\n}\n", "    $result = array();\n  \
    \  foreach ($strings as $s) {\n        if (strlen($s) >= strlen($prefix) && substr($s,\
    \ 0, strlen($prefix)) == $prefix) {\n            $result[] = $s;\n        }\n\
    \    }\n    return $result;\n}\n", "    $filtered = array();\n    foreach ($strings\
    \ as $str) {\n        if (str_starts_with($str, $prefix)) {\n            $filtered[]\
    \ = $str;\n        }\n    }\n    return $filtered;\n}\n", "  $result = array();\n\
    \  foreach ($strings as $string) {\n    if (strpos($string, $prefix) === 0) {\n\
    \      $result[] = $string;\n    }\n  }\n  return $result;\n}\n", "  $result =\
    \ array();\n  foreach ($strings as $str) {\n    if (strpos($str, $prefix) ===\
    \ 0) {\n      $result[] = $str;\n    }\n  }\n  return $result;\n}\n\n$s = array(\"\
    abc\", \"bcd\", \"cde\", \"array\");\nprint_r(filter_by_prefix($s, \"a\"));\n",
  "    $result = array();\n    foreach ($strings as $string) {\n        if (substr($string,\
    \ 0, strlen($prefix)) == $prefix) {\n            $result[] = $string;\n      \
    \  }\n    }\n    return $result;\n}", "\t// BEGIN (write your solution here)\n\
    \t$arr = [];\n\tforeach ($strings as $str) {\n\t\tif (strpos($str, $prefix) ===\
    \ 0) {\n\t\t\t$arr[] = $str;\n\t\t}\n\t}\n\treturn $arr;\n\t// END\n}\n\nprint_r(filter_by_prefix(array(),\
    \ \"a\"));\nprint_r(filter_by_prefix(array(\"abc\", \"bcd\", \"cde\", \"array\"\
    ), \"a\"));\n", "\t$return_array = array();\n\tfor ($i = 0; $i < count($strings);\
    \ $i++) {\n\t\tif (substr($strings[$i], 0, strlen($prefix)) == $prefix) {\n\t\t\
    \tarray_push($return_array, $strings[$i]);\n\t\t}\n\t}\n\treturn $return_array;\n\
    }\n", "    $result = array();\n    foreach ($strings as $string) {\n        if\
    \ (strpos($string, $prefix) === 0) {\n            $result[] = $string;\n     \
    \   }\n    }\n    return $result;\n}\n", "  $result = array();\n  foreach ($strings\
    \ as $string) {\n    if (strlen($string) > strlen($prefix) && substr($string,\
    \ 0, strlen($prefix)) == $prefix) {\n      $result[] = $string;\n    }\n  }\n\
    \  return $result;\n}\n", "    return array_filter($strings, function($x) use\
    \ ($prefix) {\n        return strpos($x, $prefix) === 0;\n    });\n}\n", "   \
    \ $result = array();\n    foreach ($strings as $string) {\n        if (substr($string,\
    \ 0, strlen($prefix)) == $prefix) {\n            $result[] = $string;\n      \
    \  }\n    }\n    return $result;\n}\n", "    $filtered = array();\n    foreach\
    \ ($strings as $i => $string) {\n        if (strpos($string, $prefix) === 0) {\n\
    \            $filtered[] = $string;\n        }\n    }\n    return $filtered;\n\
    }\n", "    $filtered = array();\n    foreach ($strings as $string) {\n       \
    \ if (starts_with($string, $prefix)) {\n            $filtered[] = $string;\n \
    \       }\n    }\n    return $filtered;\n}", "\t$filtered = array();\n\tforeach\
    \ ($strings as $string) {\n\t\tif (strpos($string, $prefix) === 0) {\n\t\t\t$filtered[]\
    \ = $string;\n\t\t}\n\t}\n\treturn $filtered;\n}\n", "    return array_filter($strings,\
    \ function($element) use ($prefix) {\n        return strpos($element, $prefix)\
    \ === 0;\n    });\n}\n", "    $res = array();\n    foreach ($strings as $string)\
    \ {\n        if (starts_with($string, $prefix)) {\n            $res[] = $string;\n\
    \        }\n    }\n    return $res;\n}\n", "\t$output = array();\n\tforeach ($strings\
    \ as $str) {\n\t\tif (strpos($str, $prefix) === 0) {\n\t\t\t$output[] = $str;\n\
    \t\t}\n\t}\n\treturn $output;\n}\n", "  $filtered = array();\n  foreach ($strings\
    \ as $v) {\n    if (strpos($v, $prefix) === 0) {\n      $filtered[] = $v;\n  \
    \  }\n  }\n  return $filtered;\n}\n", "  // Fill this in.\n  $prefix_arr = [];\n\
    \  foreach($strings as $str) {\n    if (strpos($str, $prefix) == 0) {\n      array_push($prefix_arr,\
    \ $str);\n    }\n  }\n  return $prefix_arr;\n}\n\nprint_r(filter_by_prefix(array(\"\
    abc\", \"bcd\", \"cde\", \"array\"), \"a\"));\nprint_r(filter_by_prefix(array(),\
    \ \"a\"));", "    $ret = array();\n    foreach ($strings as $string) {\n     \
    \   if (starts_with($string, $prefix)) {\n            $ret[] = $string;\n    \
    \    }\n    }\n    return $ret;\n}"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

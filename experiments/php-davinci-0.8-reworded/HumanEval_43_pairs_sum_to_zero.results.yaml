language: php
name: HumanEval_43_pairs_sum_to_zero
results:
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvg6x8inh.php:24\n\
    Stack trace:\n#0 /tmp/tmpvg6x8inh.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpvg6x8inh.php\
    \ on line 24\n"
  timestamp: 1659824145
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmtvc4vjj.php:23\n\
    Stack trace:\n#0 /tmp/tmpmtvc4vjj.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpmtvc4vjj.php\
    \ on line 23\n"
  timestamp: 1659824145
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    // Your code here.\n    for ($i = 0; $i < count($l); $i++) {\n      \
    \  for ($j = 0; $j < count($l); $j++) {\n            if ($i != $j && $l[$i] +\
    \ $l[$j] == 0) {\n                return true;\n            }\n        }\n   \
    \ }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824145
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\tforeach ($l as $i) {\n\t\tforeach ($l as $j) {\n\t\t\tif ($i + $j == 0\
    \ && $i != $j) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824145
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$map = array();\n\tforeach ($l as $item) {\n\t\tif (array_key_exists($item,\
    \ $map)) {\n\t\t\treturn true;\n\t\t}\n\t\t$map[-1 * $item] = true;\n\t}\n\treturn\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824145
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n  // $l is an array of integers\n  // replace this line with the correct\
    \ return value\n  $result = false;\n  for ($i = 0; $i < count($l); $i++) {\n \
    \   for ($j = $i + 1; $j < count($l); $j++) {\n      if ($l[$i] + $l[$j] == 0)\
    \ {\n        $result = true;\n      }\n    }\n  }\n  return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824145
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    for ($i = 0; $i < count($l); $i++) {\n        for ($j = $i + 1; $j <\
    \ count($l); $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n              \
    \  return true;\n            }\n        }\n    }\n    return false;\n}\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824145
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$positive = 0;\n\t$negative = 0;\n\tforeach ($l as $value) {\n\t\tif ($value\
    \ > 0) {\n\t\t\t$positive += 1;\n\t\t} elseif ($value < 0) {\n\t\t\t$negative\
    \ += 1;\n\t\t}\n\t}\n\t$comb = ($positive * ($positive - 1)) / 2 + ($negative\
    \ * ($negative - 1)) / 2;\n\treturn (($positive + $negative) >= 2) && ($comb %\
    \ 2 == 0);\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbr1j6tsa.php:36\n\
    Stack trace:\n#0 /tmp/tmpbr1j6tsa.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpbr1j6tsa.php\
    \ on line 36\n"
  timestamp: 1659824145
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\treturn false;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt1stgvjj.php:27\n\
    Stack trace:\n#0 /tmp/tmpt1stgvjj.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpt1stgvjj.php\
    \ on line 27\n"
  timestamp: 1659824145
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    // COUNTING SORT\n    // Count the number of occurences of each key.\n\
    \    $counts = array();\n    foreach ($l as $value) {\n        if (!array_key_exists($value,\
    \ $counts)) {\n            $counts[$value] = 0;\n        }\n        $counts[$value]++;\n\
    \    }\n    foreach ($counts as $key => $value) {\n        // If the key has a\
    \ negative of itself, return true.\n        $negative_key = -$key;\n        if\
    \ (array_key_exists($negative_key, $counts)) {\n            return true;\n   \
    \     }\n    }\n    return false;\n}\nfunction candidate(...$args) {\n    return\
    \ pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptlnw7dsq.php:39\n\
    Stack trace:\n#0 /tmp/tmptlnw7dsq.php(50): test()\n#1 {main}\n  thrown in /tmp/tmptlnw7dsq.php\
    \ on line 39\n"
  timestamp: 1659824145
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\tif (count($l) < 2) {\n\t\treturn false;\n\t}\n\t$i = 0;\n\twhile ($i <\
    \ count($l)) {\n\t\t$j = $i + 1;\n\t\twhile ($j < count($l)) {\n\t\t\tif ($l[$i]\
    \ + $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t$j = $j + 1;\n\t\t}\n\
    \t\t$i = $i + 1;\n\t}\n\treturn false;\n}\nfunction candidate(...$args) {\n  \
    \  return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824145
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    // your code here\n    //your code here\n    if (count($l) <= 1) {\n\
    \        return false;\n    }\n    foreach ($l as $element) {\n        if (in_array(-1\
    \ * $element, $l)) {\n            return true;\n        }\n    }\n    return false;\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2uv_735x.php:34\n\
    Stack trace:\n#0 /tmp/tmp2uv_735x.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp2uv_735x.php\
    \ on line 34\n"
  timestamp: 1659824145
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    $p = array();\n    $pairs = array();\n    for ($i = 0; $i < count($l);\
    \ $i++) {\n        if (!array_key_exists($l[$i], $p)) {\n            $p[$l[$i]]\
    \ = array();\n        }\n        array_push($p[$l[$i]], $i);\n    }\n    $found\
    \ = false;\n    foreach ($p as $k => $v) {\n        if (array_key_exists(-$k,\
    \ $p)) {\n            if ($k == 0 && count($p[0]) == 1) {\n                continue;\n\
    \            }\n            foreach ($p[$k] as $a) {\n                foreach\
    \ ($p[-$k] as $b) {\n                    if ($a == $b) {\n                   \
    \     continue;\n                    }\n                    $found = true;\n \
    \                   array_push($pairs, array($a, $b));\n                }\n  \
    \          }\n        }\n    }\n    return $pairs;\n}\n\n$array = array(1, 3,\
    \ 5, 0);\n$result = pairs_sum_to_zero($array);\nprint_r($result);\n$array = array(1,\
    \ 3, -2, 1);\n$result = pairs_sum_to_zero($array);\nprint_r($result);\n$array\
    \ = array(1, 2, 3, 7);\n$result = pairs_sum_to_zero($array);\nprint_r($result);\n\
    $array = array(2, 4, -5, 3, 5, 7);\n$result = pairs_sum_to_zero($array);\nprint_r($result);\n\
    $array = array(1);\n$result = pairs_sum_to_zero($array);\nprint_r($result);\n\
    function candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n)\nArray\n(\n)\nArray\n(\n)\nArray\n(\n    [0] => Array\n   \
    \     (\n            [0] => 2\n            [1] => 4\n        )\n\n    [1] => Array\n\
    \        (\n            [0] => 4\n            [1] => 2\n        )\n\n)\nArray\n\
    (\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzemtia3h.php:64\n\
    Stack trace:\n#0 /tmp/tmpzemtia3h.php(75): test()\n#1 {main}\n  thrown in /tmp/tmpzemtia3h.php\
    \ on line 64\n"
  timestamp: 1659824145
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n  \n  $arr = [];\n  foreach ($l as $k => $v) {\n    if (array_key_exists($v,\
    \ $arr)) {\n      return true;\n    }\n    $arr[-$v] = true;\n  }\n  return false;\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824145
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\tif (count($l) <= 1) {\n\t\treturn false;\n\t}\n\tsort($l);\n\t$i = 0;\n\
    \t$j = count($l) - 1;\n\twhile ($i < $j) {\n\t\t$sum = $l[$i] + $l[$j];\n\t\t\
    if ($sum === 0) {\n\t\t\treturn true;\n\t\t} else if ($sum < 0) {\n\t\t\t$i++;\n\
    \t\t} else {\n\t\t\t$j--;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824145
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    return false;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsxn2csd6.php:27\n\
    Stack trace:\n#0 /tmp/tmpsxn2csd6.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpsxn2csd6.php\
    \ on line 27\n"
  timestamp: 1659824145
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    $x = array_filter($l, function($y) { return $y == 0; });\n    if (count($x)\
    \ > 1) {\n        return true;\n    }\n    $a = array_unique($l);\n    sort($a);\n\
    \    for ($i = 0; $i < count($a); $i++) {\n        for ($j = $i + 1; $j < count($a);\
    \ $j++) {\n            if ($a[$i] + $a[$j] == 0) {\n                return true;\n\
    \            }\n        }\n    }\n    return false;\n}\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824145
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\t// START\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwi881rew.php:24\n\
    Stack trace:\n#0 /tmp/tmpwi881rew.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpwi881rew.php\
    \ on line 24\n"
  timestamp: 1659824145
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    if(empty($l)) {\n        return false;\n    }\n    $seen = array();\n\
    \    foreach($l as $i) {\n        if(isset($seen[-$i])) {\n            return\
    \ true;\n        }\n        $seen[$i] = 1;\n    }\n    return false;\n}\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824145
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n  foreach ($l as $i) {\n    foreach ($l as $j) {\n      if ($i + $j == 0\
    \ && $i != $j) {\n        return true;\n      }\n    }\n  }\n  return false;\n\
    }\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824145
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n  // echo \"Entering \" . __FUNCTION__ . \"\\n\";\n  $has_zero = array_search(0,\
    \ $l);\n  if ($has_zero) {\n    return false;\n  }\n  // echo \"No zero found\
    \ in array\\n\";\n  $l = array_unique($l);\n  $length = count($l);\n  // echo\
    \ \"Array length: $length\\n\";\n  for ($i = 0; $i < $length; $i++) {\n    $current\
    \ = $l[$i];\n    // echo \"Current: $current\\n\";\n    if ($current == 0) {\n\
    \      continue;\n    }\n    $test = -$current;\n    // echo \"Test: $test\\n\"\
    ;\n    $search = array_search($test, $l);\n    if ($search) {\n      return true;\n\
    \    }\n  }\n  return false;\n}\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660008727
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\t// TODO\n\t$count = count($l);\n\tif($count < 2) {\n\t\treturn false;\n\
    \t}\n\tsort($l);\n\t$lo = 0;\n\t$hi = $count - 1;\n\twhile($lo < $hi) {\n\t\t\
    $sum = $l[$lo] + $l[$hi];\n\t\tif($sum == 0) {\n\t\t\treturn true;\n\t\t}\n\t\t\
    else if($sum < 0) {\n\t\t\t$lo++;\n\t\t}\n\t\telse {\n\t\t\t$hi--;\n\t\t}\n\t\
    }\n\treturn false;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660008727
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n  if (count($l) <= 1) {\n    return false;\n  }\n  $first = array_shift($l);\n\
    \  return in_array(-$first, $l) || pairs_sum_to_zero($l);\n}\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660008727
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    return false;\n}\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5fiouyr9.php:26\n\
    Stack trace:\n#0 /tmp/tmp5fiouyr9.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp5fiouyr9.php\
    \ on line 26\n"
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\tforeach ($l as $num) {\n\t\tforeach ($l as $other_num) {\n\t\t\tif ($num\
    \ + $other_num == 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpumaq12om.php:31\n\
    Stack trace:\n#0 /tmp/tmpumaq12om.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpumaq12om.php\
    \ on line 31\n"
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    // Your code here.\n    return false;\n}\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxq1rcm71.php:27\n\
    Stack trace:\n#0 /tmp/tmpxq1rcm71.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpxq1rcm71.php\
    \ on line 27\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n  // WRITE ME\n  for ($i = 0; $i < count($l); $i++) {\n    for ($j = 0; $j\
    \ < count($l); $j++) {\n      if ($l[$i] == $l[$j] || $i == $j) {\n        continue;\n\
    \      }\n      if ($l[$i] + $l[$j] == 0) {\n        return true;\n      }\n \
    \   }\n  }\n  return false;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    $count = count($l);\n    $result = false;\n    for ($i = 0; $i < $count;\
    \ $i++) {\n        for ($j = $i + 1; $j < $count; $j++) {\n            if ($l[$i]\
    \ + $l[$j] == 0) {\n                $result = true;\n                break;\n\
    \            }\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    $l2 = $l;\n    foreach ($l as $i) {\n        foreach ($l2 as $j) {\n\
    \            if ($i + $j == 0) {\n                return true;\n            }\n\
    \        }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n  \
    \  return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpei77zrtj.php:32\n\
    Stack trace:\n#0 /tmp/tmpei77zrtj.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpei77zrtj.php\
    \ on line 32\n"
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvg6x8inh.php:24\n\
    Stack trace:\n#0 /tmp/tmpvg6x8inh.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpvg6x8inh.php\
    \ on line 24\n"
  timestamp: 1659824145
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n  if(count($l) < 2) return false;\n  for($i = 0; $i < count($l); $i++) {\n\
    \    for($j = $i + 1; $j < count($l); $j++) {\n      if($l[$i] + $l[$j] == 0)\
    \ return true;\n    }\n  }\n  return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    // YOUR CODE HERE\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0jh48om_.php:28\n\
    Stack trace:\n#0 /tmp/tmp0jh48om_.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp0jh48om_.php\
    \ on line 28\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$num_keys = count($l);\n\tfor ($i = 0; $i < $num_keys; $i++) {\n\t\tfor\
    \ ($j = $i+1; $j < $num_keys; $j++) {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\
    \t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\tif (count($l) <= 1) {\n\t\treturn false;\n\t}\n\t$i = 0;\n\twhile ($i <\
    \ count($l)) {\n\t\tif (in_array(-$l[$i], $l)) {\n\t\t\treturn true;\n\t\t}\n\t\
    \t$i++;\n\t}\n\treturn false;\n}\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2mu_x9jl.php:33\n\
    Stack trace:\n#0 /tmp/tmp2mu_x9jl.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp2mu_x9jl.php\
    \ on line 33\n"
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\n}\n\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz46g115c.php:25\n\
    Stack trace:\n#0 /tmp/tmpz46g115c.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpz46g115c.php\
    \ on line 25\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n  // YOUR CODE HERE\n  if (count($l) < 2) {\n    return false;\n  }\n  for\
    \ ($i = 0; $i < count($l); $i++) {\n    for ($j = $i + 1; $j < count($l); $j++)\
    \ {\n      if ($l[$i] + $l[$j] == 0) {\n        return true;\n      }\n    }\n\
    \  }\n  return false;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n  $zero = 0;\n  $result = false;\n  if (empty($l)) {\n    return $result;\n\
    \  }\n  $size = count($l);\n  for ($i = 0; $i < $size; $i++) {\n    for ($j =\
    \ $i + 1; $j < $size; $j++) {\n      if ($l[$i] + $l[$j] == $zero) {\n       \
    \ $result = true;\n        break;\n      }\n    }\n  }\n  return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    $A = $l;\n    $n = count($A);\n    sort($A);\n    $left = 0;\n    $right\
    \ = $n - 1;\n    while ($left < $right) {\n        $sum = $A[$left] + $A[$right];\n\
    \        if ($sum == 0) {\n            return true;\n        } else if ($sum <\
    \ 0) {\n            $left++;\n        } else {\n            $right--;\n      \
    \  }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return\
    \ pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    if (count($l) <= 1) {\n        return false;\n    }\n    $map = array();\n\
    \    for ($i = 0; $i < count($l); $i++) {\n        $map[$l[$i]] = true;\n    }\n\
    \    foreach ($map as $key => $value) {\n        if (array_key_exists(-$key, $map))\
    \ {\n            return true;\n        }\n    }\n    return false;\n}\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeurkzn8j.php:35\n\
    Stack trace:\n#0 /tmp/tmpeurkzn8j.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpeurkzn8j.php\
    \ on line 35\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    // Your code here\n    $temp = [];\n    $len = count($l);\n    for ($i\
    \ = 0; $i < $len; $i++) {\n        if (!isset($temp[$l[$i]])) {\n            $temp[$l[$i]]\
    \ = 1;\n        } else {\n            $temp[$l[$i]] += 1;\n        }\n    }\n\
    \    for ($i = 0; $i < $len; $i++) {\n        if ($l[$i] == 0) {\n           \
    \ if ($temp[$l[$i]] >= 2) {\n                return true;\n            }\n   \
    \     } else if (isset($temp[-$l[$i]])) {\n            return true;\n        }\n\
    \    }\n    return false;\n}\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    $ln = count($l);\n    if ($ln === 0) {\n        return false;\n    }\
    \ else if ($ln === 1) {\n        return false;\n    } else {\n        for ($i\
    \ = 0; $i < $ln; $i++) {\n            for ($j = 0; $j < $ln; $j++) {\n       \
    \         if ($l[$i] + $l[$j] === 0 && $i !== $j) {\n                    return\
    \ true;\n                }\n            }\n        }\n        return false;\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n  foreach ($l as $l1) {\n    foreach ($l as $l2) {\n      if ($l1 != $l2\
    \ && $l1 + $l2 == 0)\n        return true;\n    }\n  }\n  return false;\n}\n\n\
    function candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n  for ($i = 0; $i < count($l); $i++) {\n    for ($j = $i + 1; $j < count($l);\
    \ $j++) {\n      if ($l[$i] + $l[$j] == 0) return true;\n    }\n  }\n  return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n  $l1 = $l;\n  foreach ($l as $e1) {\n    foreach ($l1 as $e2) {\n      if\
    \ ($e1 + $e2 == 0) {\n        return true;\n      }\n    }\n  }\n  return false;\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpitjqgzr5.php:32\n\
    Stack trace:\n#0 /tmp/tmpitjqgzr5.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpitjqgzr5.php\
    \ on line 32\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n  $found = False;\n  for ($i = 0; $i < count($l); $i++) {\n    for ($j =\
    \ $i + 1; $j < count($l); $j++) {\n      if ($l[$i] + $l[$j] == 0) {\n       \
    \ $found = True;\n      }\n    }\n  }\n  return $found;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\n}\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp21_3lpsf.php:23\n\
    Stack trace:\n#0 /tmp/tmp21_3lpsf.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp21_3lpsf.php\
    \ on line 23\n"
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    // WRITE ME\n    // vars for working on the array\n    $len = count($l);\n\
    \    $result = false;\n    for ($i = 0; $i < $len; $i++) {\n        for ($j =\
    \ 0; $j < $len; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n           \
    \     $result = true;\n            }\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc14ywwz3.php:35\n\
    Stack trace:\n#0 /tmp/tmpc14ywwz3.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpc14ywwz3.php\
    \ on line 35\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\tfor ($i = 0; $i < count($l); $i++) {\n\t\tfor ($j = $i + 1; $j < count($l);\
    \ $j++) {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\
    \t}\n\t}\n\treturn false;\n}\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n  return false;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp09xjf0ns.php:27\n\
    Stack trace:\n#0 /tmp/tmp09xjf0ns.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp09xjf0ns.php\
    \ on line 27\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\tfor ($i = 0; $i < count($l) - 1; $i++) {\n\t\tfor ($j = $i + 1; $j < count($l);\
    \ $j++) {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\
    \t}\n\t}\n\treturn false;\n}\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\t// the idea is to sort the array. this takes O(n log n) time. then we can\n\
    \t// walk down the list and look for matches. this is O(n), so that's\n\t// O(n\
    \ log n) overall.\n\n\t// the sort only needs to know if the two values are in\
    \ the right order\n\t// or not. this means you could use a custom function for\
    \ the sort, or\n\t// you could use a \"sort\" function that only compares and\
    \ not swaps. this\n\t// seems to be the PHP version:\n\t// http://php.net/manual/en/function.usort.php\n\
    \t// they use the same sort that quicksort uses. it's O(n log n) worst case\n\t\
    // but in the average case it is O(n) time. there are a few other sorts\n\t//\
    \ that are faster (i.e. O(n) time, but they use extra space.\n\t$i = 0;\n\t$len\
    \ = count($l);\n\t$a = true;\n\twhile($i < $len) {\n\t\tif ($l[$i] < 0) {\n\t\t\
    \t$a = false;\n\t\t\tbreak;\n\t\t}\n\t\t$i++;\n\t}\n\tif ($a)\n\t\treturn false;\n\
    \t$i = 0;\n\twhile($i < $len) {\n\t\tif ($l[$i] > 0) {\n\t\t\t$a = true;\n\t\t\
    \tbreak;\n\t\t}\n\t\t$i++;\n\t}\n\tif (!$a)\n\t\treturn false;\n\tsort($l);\n\t\
    $i = 0;\n\t$j = $len - 1;\n\twhile($i < $j) {\n\t\t$val = $l[$i] + $l[$j];\n\t\
    \tif ($val == 0)\n\t\t\treturn true;\n\t\tif ($val < 0)\n\t\t\t$i++;\n\t\telse\n\
    \t\t\t$j--;\n\t}\n\treturn false;\n}\n\nfunction candidate(...$args) {\n    return\
    \ pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\tif(count($l)==0) return false;\n\tif(count($l)==1) return false;\n\tif(count($l)==2)\
    \ return false;\n\t\n\tfor($i=0;$i<count($l);$i++){\n\t\tfor($j=$i+1;$j<count($l);$j++){\n\
    \t\t\tif($l[$i]+$l[$j]==0) return true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n\
    function candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n  $t = array();\n  foreach ($l as $n) {\n    if (array_key_exists($n, $t))\
    \ {\n      return true;\n    }\n    $t[-1 * $n] = 1;\n  }\n  return false;\n}\n\
    \nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    // your code here\n\t$len = count($l);\n\tfor($i=0;$i<$len;$i++){\n\t\
    \tfor($j=$i+1;$j<$len;$j++){\n\t\t\tif(($l[$i]+$l[$j])==0){\n\t\t\t\treturn true;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction candidate(...$args) {\n  \
    \  return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvg6x8inh.php:24\n\
    Stack trace:\n#0 /tmp/tmpvg6x8inh.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpvg6x8inh.php\
    \ on line 24\n"
  timestamp: 1659824145
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$i = 0;\n\t$j = 0;\n\t$i_length = count($l);\n\tif ($i_length == 1) {\n\
    \t\treturn false;\n\t}\n\t$j_length = count($l);\n\twhile ($i < $i_length) {\n\
    \t\twhile ($j < $j_length) {\n\t\t\tif ($i != $j) {\n\t\t\t\tif ($l[$i] + $l[$j]\
    \ == 0) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t$j++;\n\t\t}\n\t\t\
    $i++;\n\t\t$j = 0;\n\t}\n\treturn false;\n}\n\nfunction candidate(...$args) {\n\
    \    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\treturn false;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt1stgvjj.php:27\n\
    Stack trace:\n#0 /tmp/tmpt1stgvjj.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpt1stgvjj.php\
    \ on line 27\n"
  timestamp: 1659824145
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n  if (count($l) <= 1) {\n    return false;\n  }\n  $counter = 0;\n  for ($i\
    \ = 0; $i < count($l); $i++) {\n    for ($j = 0; $j < count($l); $j++) {\n   \
    \   if ($i != $j) {\n        if ($l[$i] + $l[$j] == 0) {\n          $counter +=\
    \ 1;\n        }\n      }\n    }\n  }\n  if ($counter >= 1) {\n    return true;\n\
    \  } else {\n    return false;\n  }\n}\n\nfunction candidate(...$args) {\n   \
    \ return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n  $pairs = array();\n  foreach ($l as $i) {\n    if (array_key_exists(-$i,\
    \ $pairs)) {\n      return true;\n    }\n    $pairs[$i] = $i;\n  }\n  return false;\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n  // your code here\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoy7a9m6y.php:24\n\
    Stack trace:\n#0 /tmp/tmpoy7a9m6y.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpoy7a9m6y.php\
    \ on line 24\n"
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    // $l is the array of integers\n    // return true if there are two elements\
    \ that sum to zero\n    // false otherwise\n    return false;\n}\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsbi03v6q.php:29\n\
    Stack trace:\n#0 /tmp/tmpsbi03v6q.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpsbi03v6q.php\
    \ on line 29\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\tforeach ($l as $key1 => $value1) {\n\t\tforeach ($l as $key2 => $value2)\
    \ {\n\t\t\tif ($key1 != $key2 && $value1 == -$value2) {\n\t\t\t\treturn true;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction candidate(...$args) {\n  \
    \  return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\tfor ($i = 0; $i < count($l) - 1; $i++) {\n\t\tfor ($j = $i + 1; $j < count($l);\
    \ $j++) {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\
    \t}\n\t}\n\treturn false;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    // hint 1: use sort\n    // hint 2: use two pointers: one at the beginning,\
    \ and one at the end\n    // hint 3: a loop is also required\n    // loop invariant:\
    \ because of how two pointers are moved,\n    //                 at any time,\
    \ there are at most 2 elements of $l\n    //                 that sum to zero.\n\
    \    //                 the sum of these two elements is the sum of\n    //  \
    \               the element pointed to by the first pointer\n    //          \
    \       and the element pointed to by the second pointer\n    // hint 4: you don't\
    \ need to store all the possible pairs\n    //         that sum to zero in an\
    \ array\n    // hint 5: use return\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo7esre9t.php:39\n\
    Stack trace:\n#0 /tmp/tmpo7esre9t.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpo7esre9t.php\
    \ on line 39\n"
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    foreach ($l as $value) {\n        if (in_array(-1 * $value, $l)) {\n\
    \            return true;\n        }\n    }\n    return false;\n}\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplvat8mfm.php:29\n\
    Stack trace:\n#0 /tmp/tmplvat8mfm.php(40): test()\n#1 {main}\n  thrown in /tmp/tmplvat8mfm.php\
    \ on line 29\n"
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\t// your code here\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxly0rz9g.php:24\n\
    Stack trace:\n#0 /tmp/tmpxly0rz9g.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpxly0rz9g.php\
    \ on line 24\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    $check = 0;\n    for ($i = 0; $i < count($l); $i++) {\n        for ($j\
    \ = 0; $j < count($l); $j++) {\n            if ($i !== $j) {\n               \
    \ if ($l[$i] + $l[$j] === 0) {\n                    $check = 1;\n            \
    \    }\n            }\n        }\n    }\n    if ($check === 1) {\n        return\
    \ true;\n    } else {\n        return false;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    $prev = null;\n    $curr = null;\n    foreach ($l as $i) {\n        if\
    \ ($prev !== null) {\n            if ($prev + $i === 0) {\n                return\
    \ true;\n            }\n        }\n        $prev = $i;\n    }\n    return false;\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7cx2iv00.php:37\n\
    Stack trace:\n#0 /tmp/tmp7cx2iv00.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp7cx2iv00.php\
    \ on line 37\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    if (count($l) == 0) {\n        return false;\n    }\n    $first = array_shift($l);\n\
    \    foreach ($l as $second) {\n        if ($first + $second == 0) {\n       \
    \     return true;\n        }\n    }\n    return pairs_sum_to_zero($l);\n}\n\n\
    function candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    $sum = 0;\n    foreach ($l as $value) {\n        if ($value === $sum)\
    \ {\n            return true;\n        }\n        $sum += $value;\n    }\n   \
    \ return false;\n}\nassert(false === pairs_sum_to_zero(array(1, 3, 5, 0)));\n\
    assert(false === pairs_sum_to_zero(array(1, 3, -2, 1)));\nassert(false === pairs_sum_to_zero(array(1,\
    \ 2, 3, 7)));\nassert(true === pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7)));\n\
    assert(false === pairs_sum_to_zero(array(1)));\nfunction candidate(...$args) {\n\
    \    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught AssertionError: assert(false === pairs_sum_to_zero([1,\
    \ 2, 3, 7])) in /tmp/tmpj_fjk3he.php:27\nStack trace:\n#0 /tmp/tmpj_fjk3he.php(27):\
    \ assert(false, 'assert(false ==...')\n#1 {main}\n  thrown in /tmp/tmpj_fjk3he.php\
    \ on line 27\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    $last = count($l)-1;\n    $b = false;\n    if ($last < 1) {\n       \
    \ return $b;\n    }\n    for ($i = 0; $i < $last; $i++) {\n        $s = $l[$i];\n\
    \        for ($j = $i+1; $j <= $last; $j++) {\n            $sum = $s + $l[$j];\n\
    \            if ($sum == 0) {\n                $b = true;\n                break;\n\
    \            }\n        }\n    }\n    return $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    // YOUR CODE HERE\n    // Initialize empty array\n    $sum_vals = array();\n\
    \    // loop through list\n    foreach ($l as $val) {\n        // add the current\
    \ value to existing vals (otherwise 0) and check if value exists in array\n  \
    \      if (isset($sum_vals[$val])) {\n            // return true if we find our\
    \ value\n            return True;\n        } else {\n            // Otherwise,\
    \ add the negative value to the array\n            $sum_vals[$val * -1] = $val;\n\
    \        }\n    }\n    // return false if we don't find any\n    return False;\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    $n = count($l);\n    if ($n == 0) return false;\n    for ($i = 0; $i\
    \ < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n            if ($l[$i]\
    \ + $l[$j] == 0) return true;\n        }\n    }\n    return false;\n}\n\nif (count($argv)\
    \ > 1) {\n    $x = array();\n    for ($i = 1; $i < count($argv); $i++) {\n   \
    \     $x[] = intval($argv[$i]);\n    }\n    echo(pairs_sum_to_zero($x) ? \"true\"\
    \ : \"false\") . \"\\n\";\n}\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n  return false;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp09xjf0ns.php:27\n\
    Stack trace:\n#0 /tmp/tmp09xjf0ns.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp09xjf0ns.php\
    \ on line 27\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\tif (count($l) < 2) {\n\t\treturn false;\n\t}\n\t$hash = array();\n\tfor\
    \ ($i = 0; $i < count($l); $i++) {\n\t\tif (array_key_exists($l[$i], $hash)) {\n\
    \t\t\treturn true;\n\t\t}\n\t\t$hash[-1 * $l[$i]] = true;\n\t}\n\treturn false;\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n  $h = array();\n  for ($i = 0; $i < count($l); $i++) {\n    if ($l[$i] ==\
    \ 0) {\n      return false;\n    }\n    if (isset($h[$l[$i]])) {\n      return\
    \ true;\n    }\n    $h[-$l[$i]] = 1;\n  }\n  return false;\n}\n\n/*\n  Given an\
    \ array of integers, return indices of the two numbers such that they add up to\
    \ a specific target.\n\n  You may assume that each input would have exactly one\
    \ solution, and you may not use the same element twice.\n\n  Example:\n\n  Given\
    \ nums = [2, 7, 11, 15], target = 9,\n\n  Because nums[0] + nums[1] = 2 + 7 =\
    \ 9,\n  return [0, 1].\n */\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$size = count($l);\n\tfor ($i = 0; $i < $size; $i++) {\n\t\tfor ($j = $i\
    \ + 1; $j < $size; $j++) {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn\
    \ true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    foreach ($l as $x) {\n        foreach ($l as $y) {\n            if ($x\
    \ + $y == 0 && $x != $y) {\n                return true;\n            }\n    \
    \    }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return\
    \ pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    if (count($l) <= 1) return false;\n    $i = 0;\n    $j = count($l) -\
    \ 1;\n    while ($i < $j) {\n        if ($l[$i] + $l[$j] == 0) return true;\n\
    \        if ($l[$i] + $l[$j] > 0) $j--;\n        else $i++;\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1i84r_2d.php:35\n\
    Stack trace:\n#0 /tmp/tmp1i84r_2d.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp1i84r_2d.php\
    \ on line 35\n"
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    // write your code here and return the correct result.\n    return true;\n\
    }\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwhx45ao5.php:24\n\
    Stack trace:\n#0 /tmp/tmpwhx45ao5.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpwhx45ao5.php\
    \ on line 24\n"
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\treturn false;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt1stgvjj.php:27\n\
    Stack trace:\n#0 /tmp/tmpt1stgvjj.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpt1stgvjj.php\
    \ on line 27\n"
  timestamp: 1659824145
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n  return false;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp09xjf0ns.php:27\n\
    Stack trace:\n#0 /tmp/tmp09xjf0ns.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp09xjf0ns.php\
    \ on line 27\n"
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$i = 0;\n\t$arr1 = array();\n\t$arr2 = array();\n\twhile ($i < count($l))\
    \ {\n\t\t$j = 0;\n\t\twhile ($j < count($l)) {\n\t\t\tif ($l[$i] + $l[$j] == 0)\
    \ {\n\t\t\t\tarray_push($arr1, $l[$i]);\n\t\t\t\tarray_push($arr2, $l[$j]);\n\t\
    \t\t}\n\t\t\t$j = $j + 1;\n\t\t}\n\t\t$i = $i + 1;\n\t}\n\tif (count($arr1) >\
    \ 1) {\n\t\t$k = 0;\n\t\twhile ($k < count($arr1)) {\n\t\t\t$n = 0;\n\t\t\twhile\
    \ ($n < count($arr2)) {\n\t\t\t\tif ($arr1[$k] == $arr2[$n]) {\n\t\t\t\t\treturn\
    \ false;\n\t\t\t\t}\n\t\t\t\t$n = $n + 1;\n\t\t\t}\n\t\t\t$k = $k + 1;\n\t\t}\n\
    \t\treturn true;\n\t}\n\treturn false;\n}\nfunction candidate(...$args) {\n  \
    \  return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpymn9rs28.php:54\n\
    Stack trace:\n#0 /tmp/tmpymn9rs28.php(62): test()\n#1 {main}\n  thrown in /tmp/tmpymn9rs28.php\
    \ on line 54\n"
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmtvc4vjj.php:23\n\
    Stack trace:\n#0 /tmp/tmpmtvc4vjj.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpmtvc4vjj.php\
    \ on line 23\n"
  timestamp: 1659824145
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    for ($i = 0; $i < count($l); $i++) {\n        for ($j = $i + 1; $j <\
    \ count($l); $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n              \
    \  return true;\n            }\n        }\n    }\n    return false;\n}\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzoqitg7g.php:23\n\
    Stack trace:\n#0 /tmp/tmpzoqitg7g.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpzoqitg7g.php\
    \ on line 23\n"
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvg6x8inh.php:24\n\
    Stack trace:\n#0 /tmp/tmpvg6x8inh.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpvg6x8inh.php\
    \ on line 24\n"
  timestamp: 1659824145
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    $pairs = 0;\n    for ($i = 0; $i < count($l); $i++) {\n        for ($j\
    \ = $i + 1; $j < count($l); $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n\
    \                $pairs++;\n            }\n        }\n    }\n    if ($pairs >\
    \ 0) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n\
    function candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$count = count($l);\n\tif ($count < 2) {\n\t\treturn false;\n\t}\n\tfor\
    \ ($i = 0; $i < $count; $i++) {\n\t\tfor ($j = $i + 1; $j < $count; $j++) {\n\t\
    \t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\t\
    return false;\n}\n\nclass TestPairsSumToZero extends PHPUnit_Framework_TestCase\
    \ {\n\tfunction test_pairs_sum_to_zero() {\n\t\t$this->assertFalse(pairs_sum_to_zero(array(1,\
    \ 3, 5, 0)));\n\t\t$this->assertFalse(pairs_sum_to_zero(array(1, 3, -2, 1)));\n\
    \t\t$this->assertFalse(pairs_sum_to_zero(array(1, 2, 3, 7)));\n\t\t$this->assertTrue(pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7)));\n\t\t$this->assertFalse(pairs_sum_to_zero(array(1)));\n\t\
    }\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Class \"PHPUnit_Framework_TestCase\" not\
    \ found in /tmp/tmp5l9c795u.php:30\nStack trace:\n#0 {main}\n  thrown in /tmp/tmp5l9c795u.php\
    \ on line 30\n"
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n  // Write a function that takes an array of integers and determines if\n\
    \  // there exists a pair that sums to zero.\n  // Hint: Use a hash\n  return\
    \ false;\n}\n\n$l = array(1, 3, 5, 0);\n$l = array(1, 3, -2, 1);\n$l = array(1,\
    \ 2, 3, 7);\n$l = array(2, 4, -5, 3, 5, 7);\n$l = array(1);\necho pairs_sum_to_zero($l)\
    \ ? \"true\\n\" : \"false\\n\";\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "false\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5zbi4_v5.php:36\n\
    Stack trace:\n#0 /tmp/tmp5zbi4_v5.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp5zbi4_v5.php\
    \ on line 36\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n  $count = 0;\n  for ($i = 0; $i < count($l); $i++) {\n    for ($j = $i +\
    \ 1; $j < count($l); $j++) {\n      if ($l[$i] + $l[$j] == 0) {\n        $count++;\n\
    \      }\n    }\n  }\n  if ($count > 0) {\n    return true;\n  } else {\n    return\
    \ false;\n  }\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    // ...\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcs6slbrm.php:24\n\
    Stack trace:\n#0 /tmp/tmpcs6slbrm.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpcs6slbrm.php\
    \ on line 24\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    // note: there is no need to declare $l as an array, since it is\n  \
    \  //       an array by default.\n    // note: we are using the PHP built-in function\
    \ count() to get the\n    //       length of the array. However, count() is O(N)\
    \ for arrays,\n    //       so if you would like to do it in O(1), then you can\
    \ use\n    //       the function sizeof() instead.\n    // note: $i is the index\
    \ of the elements in the array. Note that the\n    //       maximum value of $i\
    \ can reach the last index of the array,\n    //       which is one less than\
    \ the length of the array.\n    for ($i = 0; $i < count($l) - 1; $i++) {\n   \
    \     // note: $j is used as the value of the element in the array.\n        //\
    \ note: we need to use $l[$i] because we are getting the value\n        //   \
    \    of the elements in the array by index.\n        $target = -$l[$i];\n    \
    \    // note: array_search returns the index of the first element that\n     \
    \   //       matches the target value. Returns false if the value is\n       \
    \ //       not found.\n        if (array_search($target, $l) !== false) {\n  \
    \          return true;\n        }\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\t// write your solution below\n}\n\nfunction candidate(...$args) {\n   \
    \ return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph19zcefu.php:24\n\
    Stack trace:\n#0 /tmp/tmph19zcefu.php(35): test()\n#1 {main}\n  thrown in /tmp/tmph19zcefu.php\
    \ on line 24\n"
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\t// Your code here\n\treturn false;\n}\n\nfunction candidate(...$args) {\n\
    \    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb4p77p7t.php:28\n\
    Stack trace:\n#0 /tmp/tmpb4p77p7t.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpb4p77p7t.php\
    \ on line 28\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    if (count($l)<2) {\n        return false;\n    }\n    foreach ($l as\
    \ $i) {\n        $rest = array_diff($l, array($i));\n        foreach ($rest as\
    \ $j) {\n            if ($i + $j == 0) {\n                return true;\n     \
    \       }\n        }\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n}\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxpqt2enn.php:22\n\
    Stack trace:\n#0 /tmp/tmpxpqt2enn.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpxpqt2enn.php\
    \ on line 22\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\tif (count($l) < 2) {\n\t\treturn false;\n\t}\n\t$numbers = [];\n\tfor ($i\
    \ = 0; $i < count($l); $i++) {\n\t\t$number = $l[$i];\n\t\tif (!$numbers[$number])\
    \ {\n\t\t\t$numbers[$number] = 1;\n\t\t} else {\n\t\t\t$numbers[$number]++;\n\t\
    \t}\n\t}\n\tforeach ($numbers as $key => $value) {\n\t\tif ($key === 0) {\n\t\t\
    \tif ($value >= 2) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else if ($numbers[-$key])\
    \ {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 1 in /tmp/tmp96zekq40.php on line 22


    Warning: Undefined array key 3 in /tmp/tmp96zekq40.php on line 22


    Warning: Undefined array key 5 in /tmp/tmp96zekq40.php on line 22


    Warning: Undefined array key 0 in /tmp/tmp96zekq40.php on line 22


    Warning: Undefined array key -1 in /tmp/tmp96zekq40.php on line 33


    Warning: Undefined array key -3 in /tmp/tmp96zekq40.php on line 33


    Warning: Undefined array key -5 in /tmp/tmp96zekq40.php on line 33


    Warning: Undefined array key 1 in /tmp/tmp96zekq40.php on line 22


    Warning: Undefined array key 3 in /tmp/tmp96zekq40.php on line 22


    Warning: Undefined array key -2 in /tmp/tmp96zekq40.php on line 22


    Warning: Undefined array key -1 in /tmp/tmp96zekq40.php on line 33


    Warning: Undefined array key -3 in /tmp/tmp96zekq40.php on line 33


    Warning: Undefined array key 2 in /tmp/tmp96zekq40.php on line 33


    Warning: Undefined array key 1 in /tmp/tmp96zekq40.php on line 22


    Warning: Undefined array key 2 in /tmp/tmp96zekq40.php on line 22


    Warning: Undefined array key 3 in /tmp/tmp96zekq40.php on line 22


    Warning: Undefined array key 7 in /tmp/tmp96zekq40.php on line 22


    Warning: Undefined array key -1 in /tmp/tmp96zekq40.php on line 33


    Warning: Undefined array key -2 in /tmp/tmp96zekq40.php on line 33


    Warning: Undefined array key -3 in /tmp/tmp96zekq40.php on line 33


    Warning: Undefined array key -7 in /tmp/tmp96zekq40.php on line 33


    Warning: Undefined array key 2 in /tmp/tmp96zekq40.php on line 22


    Warning: Undefined array key 4 in /tmp/tmp96zekq40.php on line 22


    Warning: Undefined array key -5 in /tmp/tmp96zekq40.php on line 22


    Warning: Undefined array key 3 in /tmp/tmp96zekq40.php on line 22


    Warning: Undefined array key 5 in /tmp/tmp96zekq40.php on line 22


    Warning: Undefined array key 7 in /tmp/tmp96zekq40.php on line 22


    Warning: Undefined array key -2 in /tmp/tmp96zekq40.php on line 33


    Warning: Undefined array key -4 in /tmp/tmp96zekq40.php on line 33


    Warning: Undefined array key -3 in /tmp/tmp96zekq40.php on line 22


    Warning: Undefined arra'
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    // your code here\n    // your code here\n    \n    // Assume no two\
    \ distinct elements in the array that sum to zero\n    $pairs = false;\n    \n\
    \    // Create an array of the positive and negative values in the original array\n\
    \    $positive_array = array();\n    $negative_array = array();\n    foreach ($l\
    \ as $value) {\n        if ($value > 0) {\n            array_push($positive_array,\
    \ $value);\n        } else {\n            array_push($negative_array, $value);\n\
    \        }\n    }\n    \n    // Use a for loop to find a match, if any, between\
    \ values in the positive and negative arrays. \n    foreach ($positive_array as\
    \ $positive_value) {\n        foreach ($negative_array as $negative_value) {\n\
    \            if ($positive_value + $negative_value == 0) {\n                $pairs\
    \ = true;\n            }\n        }\n    }\n    \n    return $pairs;\n}\n\n\n\n\
    function candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\tfor ($i = 0; $i < count($l); $i++) {\n\t\t$a = $l[$i];\n\t\tfor ($j = $i\
    \ + 1; $j < count($l); $j++) {\n\t\t\t$b = $l[$j];\n\t\t\tif ($a + $b == 0) {\n\
    \t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n  // Write your solution here\n  $arr = [];\n  $i = 0;\n  $j = 0;\n  $length\
    \ = count($l);\n  while ($i < $length) {\n    while ($j < $length) {\n      if\
    \ ($l[$i] + $l[$j] == 0) {\n        return true;\n      }\n      $j++;\n    }\n\
    \    $i++;\n  }\n  return false;\n}\n\nfunction candidate(...$args) {\n    return\
    \ pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkmq8iugq.php:41\n\
    Stack trace:\n#0 /tmp/tmpkmq8iugq.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpkmq8iugq.php\
    \ on line 41\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    $c=count($l);\n    for($i=0;$i<$c;$i++){\n        for($j=0;$j<$c;$j++){\n\
    \            if($i!=$j){\n                if($l[$i]+$l[$j]==0){\n            \
    \        return true;\n                }\n            }\n        }\n    }\n  \
    \  return false;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvg6x8inh.php:24\n\
    Stack trace:\n#0 /tmp/tmpvg6x8inh.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpvg6x8inh.php\
    \ on line 24\n"
  timestamp: 1659824145
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvg6x8inh.php:24\n\
    Stack trace:\n#0 /tmp/tmpvg6x8inh.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpvg6x8inh.php\
    \ on line 24\n"
  timestamp: 1659824145
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\tfor ($i = 0; $i < count($l); $i++) {\n\t\tfor ($j = $i + 1; $j < count($l);\
    \ $j++) {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\
    \t}\n\t}\n\treturn false;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n  return false;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp09xjf0ns.php:27\n\
    Stack trace:\n#0 /tmp/tmp09xjf0ns.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp09xjf0ns.php\
    \ on line 27\n"
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    // I want to know if there are 2 numbers in the list\n    // that sum\
    \ to zero. This is the same as asking if\n    // there are two numbers in the\
    \ list that have the\n    // opposite value\n    // I start by building a new\
    \ list with the negative values\n    // of all the numbers in the input list\n\
    \    $r = array();\n    foreach ($l as $e) {\n        $r[] = -$e;\n    }\n   \
    \ // now, I just need to know if there are two identical\n    // values in my\
    \ list\n    return has_duplicates($r);\n}\n\nfunction candidate(...$args) {\n\
    \    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function has_duplicates()\
    \ in /tmp/tmperyr47hy.php:28\nStack trace:\n#0 /tmp/tmperyr47hy.php(32): pairs_sum_to_zero(Array)\n\
    #1 /tmp/tmperyr47hy.php(36): candidate(Array)\n#2 /tmp/tmperyr47hy.php(47): test()\n\
    #3 {main}\n  thrown in /tmp/tmperyr47hy.php on line 28\n"
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n  return false;\n}\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw41psh3o.php:26\n\
    Stack trace:\n#0 /tmp/tmpw41psh3o.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpw41psh3o.php\
    \ on line 26\n"
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvg6x8inh.php:24\n\
    Stack trace:\n#0 /tmp/tmpvg6x8inh.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpvg6x8inh.php\
    \ on line 24\n"
  timestamp: 1659824145
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    // your code here\n    // use a hashtable to find the complement\n  \
    \  $comp = array();\n    foreach ($l as $e) {\n        if (array_key_exists($e,\
    \ $comp))\n            return true;\n        $comp[-1 * $e] = 1;\n    }\n    return\
    \ false;\n}\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n  $n = count($l);\n  if ($n == 0) {\n    return false;\n  }\n  $d = array();\n\
    \  for ($i = 0; $i < $n; $i++) {\n    $d[$l[$i]] = true;\n  }\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    if (isset($d[-$l[$i]])) {\n      return true;\n    }\n\
    \  }\n  return false;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe6e533x3.php:37\n\
    Stack trace:\n#0 /tmp/tmpe6e533x3.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpe6e533x3.php\
    \ on line 37\n"
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmtvc4vjj.php:23\n\
    Stack trace:\n#0 /tmp/tmpmtvc4vjj.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpmtvc4vjj.php\
    \ on line 23\n"
  timestamp: 1659824145
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\t// WRITE YOUR CODE HERE\n}\nfunction candidate(...$args) {\n    return\
    \ pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbmu9112q.php:23\n\
    Stack trace:\n#0 /tmp/tmpbmu9112q.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpbmu9112q.php\
    \ on line 23\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\t// TODO: your code here\n\t$n = count($l);\n\t$found = false;\n\tfor ($i\
    \ = 0; $i < $n; $i++) {\n\t\tfor ($j = $i + 1; $j < $n; $j++) {\n\t\t\tif ($l[$i]\
    \ + $l[$j] == 0) {\n\t\t\t\t$found = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\
    }\n\treturn $found;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\t// sum to zero is a special case where we want to check for positive\n\t\
    // and negative values of the same number.\n\t//\n\t// this function can be solved\
    \ in O(n) time.\n\t// hint: use an associative array.\n\t$array = array();\n\t\
    foreach ($l as $number) {\n\t\tif (isset($array[$number])) {\n\t\t\treturn true;\n\
    \t\t}\n\t\t$array[-$number] = true;\n\t}\n\treturn false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\tif (sizeof($l) <= 1) {\n\t\treturn false;\n\t}\n\tsort($l);\n\tif ($l[0]\
    \ + $l[sizeof($l) - 1] < 0) {\n\t\treturn false;\n\t}\n\tfor ($i = 0; $i < sizeof($l);\
    \ $i++) {\n\t\tfor ($j = $i + 1; $j < sizeof($l); $j++) {\n\t\t\tif ($l[$i] +\
    \ $l[$j] == 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n  for ($i = 0; $i < count($l); $i++) {\n    for ($j = $i + 1; $j < count($l);\
    \ $j++) {\n      if ($l[$i] + $l[$j] == 0) {\n        return true;\n      }\n\
    \    }\n  }\n  return false;\n}\n\nfunction candidate(...$args) {\n    return\
    \ pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n  $l = array_unique($l); // remove duplicates\n  foreach ($l as $a) {\n \
    \   if (in_array(-$a, $l)) {\n      return true;\n    }\n  }\n  return false;\n\
    }\n\nclass TestPairsSumToZero extends Test {\n  public function testEmpty() {\n\
    \    $this->assert(pairs_sum_to_zero(array()), false);\n  }\n  public function\
    \ testPositive() {\n    $this->assert(pairs_sum_to_zero(array(1, 3, 5, 0)), false);\n\
    \  }\n  public function testNegative() {\n    $this->assert(pairs_sum_to_zero(array(1,\
    \ 3, -2, 1)), false);\n  }\n  public function testNoMatch() {\n    $this->assert(pairs_sum_to_zero(array(1,\
    \ 2, 3, 7)), false);\n  }\n  public function testMatch() {\n    $this->assert(pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7)), true);\n  }\n  public function testSingle() {\n    $this->assert(pairs_sum_to_zero(array(1)),\
    \ false);\n  }\n}\n\n(new TestPairsSumToZero())->run();\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Class \"Test\" not found in /tmp/tmpf8gm3u_d.php:25\n\
    Stack trace:\n#0 {main}\n  thrown in /tmp/tmpf8gm3u_d.php on line 25\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n  $result = false;\n  foreach ($l as $v1) {\n    foreach ($l as $v2) {\n\
    \      if ($v1 == $v2) {\n        continue;\n      } elseif ($v1 + $v2 == 0) {\n\
    \        $result = true;\n      }\n    }\n  }\n  return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$l_in_order = insertion_sort($l);\n\t//print_r($l_in_order);\n\t\n\tfor\
    \ ($i = 0; $i < count($l_in_order); $i++) {\n\t\tif ($l_in_order[$i] > 0) {\n\t\
    \t\t$j = $i;\n\t\t\twhile ($j > 0) {\n\t\t\t\t$j--;\n\t\t\t\tif ($l_in_order[$i]\
    \ + $l_in_order[$j] == 0) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\
    }\n\t}\n\treturn false;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function insertion_sort()\
    \ in /tmp/tmp0cgp1mhp.php:16\nStack trace:\n#0 /tmp/tmp0cgp1mhp.php(34): pairs_sum_to_zero(Array)\n\
    #1 /tmp/tmp0cgp1mhp.php(38): candidate(Array)\n#2 /tmp/tmp0cgp1mhp.php(49): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0cgp1mhp.php on line 16\n"
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    // Write your solution here.  Be sure to use helper functions where possible.\n\
    \    sort($l);\n    for ($i = 0; $i < count($l); $i++) {\n        if ($l[$i] >\
    \ 0) {\n            return false;\n        }\n        $j = binary_search($l, -$l[$i],\
    \ $i + 1, count($l) - 1);\n        if ($j > 0) {\n            return true;\n \
    \       }\n    }\n    return false;\n}\n\nfunction candidate(...$args) {\n   \
    \ return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function binary_search()\
    \ in /tmp/tmp7nsr63b9.php:22\nStack trace:\n#0 /tmp/tmp7nsr63b9.php(31): pairs_sum_to_zero(Array)\n\
    #1 /tmp/tmp7nsr63b9.php(35): candidate(Array)\n#2 /tmp/tmp7nsr63b9.php(46): test()\n\
    #3 {main}\n  thrown in /tmp/tmp7nsr63b9.php on line 22\n"
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n  // check if there are at least two numbers in the array\n  if (count($l)\
    \ < 2) {\n    return false;\n  }\n  // check if there is a zero in the array\n\
    \  for ($i = 0; $i < count($l); $i++) {\n    if ($l[$i] == 0) {\n      return\
    \ true;\n    }\n  }\n  // if we haven't found a zero in the array yet, go over\
    \ each\n  // number in the array and check if there's a number in the array\n\
    \  // that's the negative of the current number\n  for ($i = 0; $i < count($l);\
    \ $i++) {\n    for ($j = 0; $j < count($l); $j++) {\n      if ($l[$i] + $l[$j]\
    \ == 0) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk_0wfacn.php:43\n\
    Stack trace:\n#0 /tmp/tmpk_0wfacn.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpk_0wfacn.php\
    \ on line 43\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\tforeach ($l as $i) {\n\t\t$sums[] = 0 - $i;\n\t}\n\treturn count(array_intersect($l,\
    \ $sums)) > 1;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028639
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    $zero = array_search(0, $l);\n    if ($zero !== false) {\n        unset($l[$zero]);\n\
    \    }\n    $l2 = array_flip($l);\n    for ($i = 0; $i < count($l); $i++) {\n\
    \        if (isset($l2[-1 * $l[$i]])) {\n            return true;\n        }\n\
    \    }\n    return false;\n}\n$l = array(1, 2, 3, 7);\necho pairs_sum_to_zero($l);\n\
    function candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n  return true;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9ommo3vt.php:24\n\
    Stack trace:\n#0 /tmp/tmp9ommo3vt.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp9ommo3vt.php\
    \ on line 24\n"
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\t\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps14g1l38.php:24\n\
    Stack trace:\n#0 /tmp/tmps14g1l38.php(35): test()\n#1 {main}\n  thrown in /tmp/tmps14g1l38.php\
    \ on line 24\n"
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n  // TODO\n}\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1y96tj4x.php:23\n\
    Stack trace:\n#0 /tmp/tmp1y96tj4x.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp1y96tj4x.php\
    \ on line 23\n"
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n  // Note: this solution iterates through every pair in the array,\n  //\
    \ and returns true immediately if it finds a pair that sums to zero.\n  // In\
    \ general, it's best to return early from a function if you can.\n  foreach ($l\
    \ as $x) {\n    foreach ($l as $y) {\n      if ($x + $y == 0) return true;\n \
    \   }\n  }\n  return false;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwrj88_sy.php:32\n\
    Stack trace:\n#0 /tmp/tmpwrj88_sy.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpwrj88_sy.php\
    \ on line 32\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n  // 1. sort the array in ascending order\n  // 2. grab the first and last\
    \ element. if they are equal to zero, return true\n  // 3. iterate through the\
    \ array starting at 0, moving the left pointer to the right\n  //    and the right\
    \ pointer to the left. Use the sum of the left and right pointers\n  //    to\
    \ figure out what to do next.\n  // 4. if the sum is greater than zero, increment\
    \ the left pointer. If the sum is less\n  //    than zero, decrement the right\
    \ pointer. Otherwise, return true.\n  // 5. if the left pointer is greater than\
    \ the right pointer, return false.\n\n  // 1.\n  sort($l);\n\n  // 2.\n  if (array_key_exists(0,\
    \ $l) && array_key_exists(-1, $l) && ($l[0] == 0 && $l[-1] == 0)) {\n    return\
    \ true;\n  }\n\n  // 3.\n  $left = 0;\n  $right = count($l) - 1;\n  while ($left\
    \ < $right) {\n    if ($l[$left] + $l[$right] > 0) {\n      $right--;\n    } elseif\
    \ ($l[$left] + $l[$right] < 0) {\n      $left++;\n    } else {\n      return true;\n\
    \    }\n  }\n\n  // 5.\n  return false;\n}\n\n$l = array(1, 3, 5, 0);\nvar_dump(pairs_sum_to_zero($l));\n\
    $l = array(1, 3, -2, 1);\nvar_dump(pairs_sum_to_zero($l));\n$l = array(1, 2, 3,\
    \ 7);\nvar_dump(pairs_sum_to_zero($l));\n$l = array(2, 4, -5, 3, 5, 7);\nvar_dump(pairs_sum_to_zero($l));\n\
    $l = array(1);\nvar_dump(pairs_sum_to_zero($l));\n$l = array(0, 0);\nvar_dump(pairs_sum_to_zero($l));\n\
    function candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: 'bool(false)

    bool(false)

    bool(false)

    bool(true)

    bool(false)

    bool(true)

    '
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n  // loop through the array\n  foreach ($l as $i) {\n    // compare each\
    \ element against each other element\n    // to see if they sum to zero\n    foreach\
    \ ($l as $j) {\n      if ($i + $j == 0) {\n        return True;\n      }\n   \
    \ }\n  }\n  return False;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzl90d8ck.php:34\n\
    Stack trace:\n#0 /tmp/tmpzl90d8ck.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpzl90d8ck.php\
    \ on line 34\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    // your code here\n    if (sizeof($l) < 2) return false;\n    for ($i\
    \ = 0; $i < sizeof($l); $i++) {\n        for ($j = $i + 1; $j < sizeof($l); $j++)\
    \ {\n            if ($l[$i] + $l[$j] == 0) return true;\n        }\n    }\n  \
    \  return false;\n}\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    // your code here\n    $sum = 0;\n    foreach ($l as $x) {\n        $sum\
    \ = $sum + $x;\n    }\n    if ($sum == 0) {\n        return true;\n    } else\
    \ {\n        return false;\n    }\n}\nfunction candidate(...$args) {\n    return\
    \ pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfgur1az8.php:35\n\
    Stack trace:\n#0 /tmp/tmpfgur1az8.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpfgur1az8.php\
    \ on line 35\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    $count = count($l);\n    for ($i = 0; $i < $count; $i++) {\n        for\
    \ ($j = $i + 1; $j < $count; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n\
    \                return true;\n            }\n        }\n    }\n    return false;\n\
    }\n\necho pairs_sum_to_zero(array(1, 3, 5, 0)) . PHP_EOL;\necho pairs_sum_to_zero(array(1,\
    \ 3, -2, 1)) . PHP_EOL;\necho pairs_sum_to_zero(array(1, 2, 3, 7)) . PHP_EOL;\n\
    echo pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7)) . PHP_EOL;\necho pairs_sum_to_zero(array(1))\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: '



    1


    '
  timestamp: 1660028639
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    $count = count($l);\n    if ($count == 1) {\n        return false;\n\
    \    } else {\n        $x = $l[0];\n        $ls = array_slice($l, 1);\n      \
    \  if (in_array(-$x, $ls)) {\n            return true;\n        } else {\n   \
    \         return pairs_sum_to_zero($ls);\n        }\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028639
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    $count = count($l);\n    for ($i = 0; $i < $count; $i++) {\n        for\
    \ ($j = $i + 1; $j < $count; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n\
    \                return true;\n            }\n        }\n    }\n    return false;\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028639
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    for ($i = 0; $i < count($l); $i++) {\n        for ($j = $i + 1; $j <\
    \ count($l); $j++) {\n            if ($l[$i] + $l[$j] == 0)\n                return\
    \ true;\n        }\n    }\n    return false;\n}\n\nassert(false == pairs_sum_to_zero(array(1,\
    \ 3, 5, 0)));\nassert(false == pairs_sum_to_zero(array(1, 3, -2, 1)));\nassert(false\
    \ == pairs_sum_to_zero(array(1, 2, 3, 7)));\nassert(true == pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7)));\nassert(false == pairs_sum_to_zero(array(1)));\nassert(false\
    \ == pairs_sum_to_zero(array()));\necho \"All test passed\\n\";\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'All test passed

    '
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n  // TODO: complete the implementation of pairs_sum_to_zero\n}\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpndl_kx00.php:24\n\
    Stack trace:\n#0 /tmp/tmpndl_kx00.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpndl_kx00.php\
    \ on line 24\n"
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n  // TODO: implement\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_98qaj4g.php:24\n\
    Stack trace:\n#0 /tmp/tmp_98qaj4g.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp_98qaj4g.php\
    \ on line 24\n"
  timestamp: 1660028639
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    // Your code here\n    $index = 0;\n    foreach ($l as $num) {\n    \
    \    if ($num == 0) {\n            $index++;\n        }\n    }\n    if ($index\
    \ > 1) {\n        return true;\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn9rkaodo.php:37\n\
    Stack trace:\n#0 /tmp/tmpn9rkaodo.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpn9rkaodo.php\
    \ on line 37\n"
  timestamp: 1660028639
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n  return false;\n}\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw41psh3o.php:26\n\
    Stack trace:\n#0 /tmp/tmpw41psh3o.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpw41psh3o.php\
    \ on line 26\n"
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    if (empty($l))\n        return false;\n    $l = array_unique($l);\n \
    \   if (count($l) < 2)\n        return false;\n    if (in_array(0, $l))\n    \
    \    return true;\n    $p = 0;\n    $n = 0;\n    for ($i = 0; $i < count($l);\
    \ $i++) {\n        if ($l[$i] < 0)\n            $n++;\n        else\n        \
    \    $p++;\n    }\n    if ($p > 0 && $n > 0)\n        return true;\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_8n6upvq.php:41\n\
    Stack trace:\n#0 /tmp/tmp_8n6upvq.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp_8n6upvq.php\
    \ on line 41\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n  $h = array();\n  foreach ($l as $val) {\n    $h[$val] = 1;\n  }\n  foreach\
    \ ($l as $val) {\n    if ($val != 0 && array_key_exists(-$val, $h)) {\n      return\
    \ true;\n    }\n  }\n  return false;\n}\n\nfunction candidate(...$args) {\n  \
    \  return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028638
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    // TODO\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprhn208ap.php:24\n\
    Stack trace:\n#0 /tmp/tmprhn208ap.php(35): test()\n#1 {main}\n  thrown in /tmp/tmprhn208ap.php\
    \ on line 24\n"
  timestamp: 1660028639
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n  \n}\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphsvd9d_h.php:23\n\
    Stack trace:\n#0 /tmp/tmphsvd9d_h.php(34): test()\n#1 {main}\n  thrown in /tmp/tmphsvd9d_h.php\
    \ on line 23\n"
  timestamp: 1660028639
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n  $length = count($l);\n  for ($i = 0; $i < $length; $i++) {\n    for ($j\
    \ = $i + 1; $j < $length; $j++) {\n      if ($l[$i] + $l[$j] == 0) {\n       \
    \ return true;\n      }\n    }\n  }\n  return false;\n}\n\nassert(false == pairs_sum_to_zero(array(1,\
    \ 3, 5, 0)));\nassert(false == pairs_sum_to_zero(array(1, 3, -2, 1)));\nassert(false\
    \ == pairs_sum_to_zero(array(1, 2, 3, 7)));\nassert(true == pairs_sum_to_zero(array(2,\
    \ 4, -5, 3, 5, 7)));\nassert(false == pairs_sum_to_zero(array(1)));\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028639
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    $count = 0;\n    for ($i = 0; $i < count($l); $i++) {\n        for ($j\
    \ = 0; $j < count($l); $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n    \
    \            $count = $count + 1;\n            }\n        }\n    }\n    if ($count\
    \ == 2) {\n        return true;\n    } else {\n        return false;\n    }\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028639
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    // TODO: implement this function\n}\n\nfunction candidate(...$args) {\n\
    \    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdqad53u4.php:24\n\
    Stack trace:\n#0 /tmp/tmpdqad53u4.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpdqad53u4.php\
    \ on line 24\n"
  timestamp: 1660028639
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    $n = count($l);\n    $pairs = array();\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        $pairs[$l[$i]] = $i;\n    }\n    for ($i = 0; $i < $n; $i++) {\n\
    \        if (isset($pairs[-$l[$i]]) && $pairs[-$l[$i]] != $i) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028639
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ $i + 1; $j < $n; $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n        \
    \        return true;\n            }\n        }\n    }\n    return false;\n}\n\
    $l = array(1, 2, 3, 7);\nprint(pairs_sum_to_zero($l));\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028639
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$arrayLength = count($l);\n\t$arrayLengthMinusOne = $arrayLength - 1;\n\
    \tfor ($i = 0; $i < $arrayLengthMinusOne; $i++) {\n\t\tfor ($j = $i + 1; $j <\
    \ $arrayLength; $j++) {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\treturn true;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction candidate(...$args) {\n  \
    \  return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028639
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n  if (sizeof($l) < 2) {\n    return false;\n  }\n\n  $s = [];\n  for ($i\
    \ = 0; $i < sizeof($l); $i++) {\n    for ($j = $i + 1; $j < sizeof($l); $j++)\
    \ {\n      $s[] = [$l[$i], $l[$j]];\n    }\n  }\n\n  for ($i = 0; $i < sizeof($s);\
    \ $i++) {\n    if (array_sum($s[$i]) == 0) {\n      return true;\n    }\n  }\n\
    \n  return false;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028639
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n  // your code here\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoy7a9m6y.php:24\n\
    Stack trace:\n#0 /tmp/tmpoy7a9m6y.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpoy7a9m6y.php\
    \ on line 24\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$f = [];\n\tforeach ($l as $v) {\n\t\tif (isset($f[-$v])) {\n\t\t\treturn\
    \ true;\n\t\t}\n\t\t$f[$v] = 1;\n\t}\n\treturn false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028639
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpic2i9c4l.php:24\n\
    Stack trace:\n#0 /tmp/tmpic2i9c4l.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpic2i9c4l.php\
    \ on line 24\n"
  timestamp: 1660028639
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvg6x8inh.php:24\n\
    Stack trace:\n#0 /tmp/tmpvg6x8inh.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpvg6x8inh.php\
    \ on line 24\n"
  timestamp: 1659824145
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\t// Your code here\n\treturn FALSE;\n}\nfunction candidate(...$args) {\n\
    \    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm8_74noa.php:27\n\
    Stack trace:\n#0 /tmp/tmpm8_74noa.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpm8_74noa.php\
    \ on line 27\n"
  timestamp: 1660028639
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$l2 = array();\n\tforeach ($l as $value) {\n\t\t$l2[] = -$value;\n\t}\n\
    \treturn count(array_intersect($l, $l2)) > 0;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9f5s1e38.php:28\n\
    Stack trace:\n#0 /tmp/tmp9f5s1e38.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp9f5s1e38.php\
    \ on line 28\n"
  timestamp: 1660028639
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    // your code here\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvmis51yi.php:24\n\
    Stack trace:\n#0 /tmp/tmpvmis51yi.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpvmis51yi.php\
    \ on line 24\n"
  timestamp: 1660028639
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n  if (empty($l)) {\n    return false;\n  }\n\n  $result = [];\n  for ($i\
    \ = 0; $i < count($l); $i++) {\n    $result[$l[$i]] = $l[$i];\n  }\n\n  foreach\
    \ ($result as $k => $v) {\n    if (array_key_exists($k, $result)) {\n      return\
    \ true;\n    }\n  }\n\n  return false;\n}\n\nfunction candidate(...$args) {\n\
    \    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_1oidyg0.php:39\n\
    Stack trace:\n#0 /tmp/tmp_1oidyg0.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp_1oidyg0.php\
    \ on line 39\n"
  timestamp: 1660028639
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    // Write your code here\n    // To print results to the standard output\
    \ you can use print\n    // Example: print \"Hello world!\";\n}\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpso4dvw04.php:25\n\
    Stack trace:\n#0 /tmp/tmpso4dvw04.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpso4dvw04.php\
    \ on line 25\n"
  timestamp: 1660028639
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    $pairs = [];\n    foreach ($l as $v) {\n        if (isset($pairs[-$v]))\
    \ return true;\n        $pairs[$v] = $v;\n    }\n    return false;\n}\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028639
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    // ...\n}\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpydsurix9.php:23\n\
    Stack trace:\n#0 /tmp/tmpydsurix9.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpydsurix9.php\
    \ on line 23\n"
  timestamp: 1660028639
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n  // Finish this one on your own!\n  return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv5iblo9n.php:28\n\
    Stack trace:\n#0 /tmp/tmpv5iblo9n.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpv5iblo9n.php\
    \ on line 28\n"
  timestamp: 1660028639
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    $dict = array();\n    foreach ($l as $value) {\n        if (array_key_exists(-$value,\
    \ $dict)) {\n            return true;\n        }\n        $dict[$value] = true;\n\
    \    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028639
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\t// TODO: fill this in\n}\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmn2xqhue.php:23\n\
    Stack trace:\n#0 /tmp/tmpmn2xqhue.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpmn2xqhue.php\
    \ on line 23\n"
  timestamp: 1660028639
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\t// TODO: Write your code here\n}\nfunction candidate(...$args) {\n    return\
    \ pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2j_7o3bz.php:23\n\
    Stack trace:\n#0 /tmp/tmp2j_7o3bz.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp2j_7o3bz.php\
    \ on line 23\n"
  timestamp: 1660028639
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\tif (count($l) < 2) {\n\t\treturn false;\n\t}\n\t$h = array();\n\tfor ($i\
    \ = 0; $i < count($l); $i++) {\n\t\t$n = $l[$i];\n\t\tif (array_key_exists($n,\
    \ $h)) {\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\t$h[-$n] = true;\n\t\t}\n\
    \t}\n\treturn false;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028639
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n  return false;\n}\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw41psh3o.php:26\n\
    Stack trace:\n#0 /tmp/tmpw41psh3o.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpw41psh3o.php\
    \ on line 26\n"
  timestamp: 1660028638
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n  sort($l);\n  $low = 0;\n  $high = count($l) - 1;\n  while ($low < $high)\
    \ {\n    $sum = $l[$low] + $l[$high];\n    if ($sum == 0) {\n      return true;\n\
    \    } else if ($sum < 0) {\n      $low++;\n    } else {\n      $high--;\n   \
    \ }\n  }\n  return false;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028639
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\t// takes O(n^2) time\n\tforeach ($l as $value1) {\n\t\tforeach ($l as $value2)\
    \ {\n\t\t\tif ($value1 + $value2 == 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\
    }\n\t}\n\treturn false;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpekmiyh7a.php:32\n\
    Stack trace:\n#0 /tmp/tmpekmiyh7a.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpekmiyh7a.php\
    \ on line 32\n"
  timestamp: 1660028639
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n  $found = 0;\n  foreach ($l as $el) {\n    if (isset($el_index[-$el])) {\n\
    \      $found++;\n    }\n    $el_index[$el] = 1;\n  }\n  return $found > 0;\n\
    }\n\nif (!check_test_pairs_sum_to_zero()) {\n  print(\"Test for pairs_sum_to_zero\
    \ failed.\\n\");\n} else {\n  print(\"Test for pairs_sum_to_zero passed.\\n\"\
    );\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function check_test_pairs_sum_to_zero()\
    \ in /tmp/tmpl862bde0.php:26\nStack trace:\n#0 {main}\n  thrown in /tmp/tmpl862bde0.php\
    \ on line 26\n"
  timestamp: 1660028639
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n  $ar = array();\n  foreach ($l as $i) {\n    if (isset($ar[$i])) {\n   \
    \   return true;\n    }\n    $ar[-$i] = 1;\n  }\n  return false;\n}\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028639
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    return max($l) == min($l);\n}\nfunction candidate(...$args) {\n    return\
    \ pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvqxh0vk7.php:26\n\
    Stack trace:\n#0 /tmp/tmpvqxh0vk7.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpvqxh0vk7.php\
    \ on line 26\n"
  timestamp: 1660028639
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmtvc4vjj.php:23\n\
    Stack trace:\n#0 /tmp/tmpmtvc4vjj.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpmtvc4vjj.php\
    \ on line 23\n"
  timestamp: 1659824145
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n  $vals = array();\n  foreach ($l as $v) {\n    if (array_key_exists(-$v,\
    \ $vals)) {\n      return true;\n    }\n    $vals[$v] = $v;\n  }\n  return false;\n\
    }\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028639
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\t// your code here\n\treturn false;\n}\n\nfunction candidate(...$args) {\n\
    \    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0ezms7a3.php:28\n\
    Stack trace:\n#0 /tmp/tmp0ezms7a3.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp0ezms7a3.php\
    \ on line 28\n"
  timestamp: 1660028639
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    foreach ($l as $i) {\n        if (in_array(-$i, $l)) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpndu30gfw.php:29\n\
    Stack trace:\n#0 /tmp/tmpndu30gfw.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpndu30gfw.php\
    \ on line 29\n"
  timestamp: 1660028639
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n  // TODO: you know what to do.\n  return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5rqb9eys.php:28\n\
    Stack trace:\n#0 /tmp/tmp5rqb9eys.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp5rqb9eys.php\
    \ on line 28\n"
  timestamp: 1660028639
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$len = count($l);\n\tif ($len < 2) {\n\t\treturn false;\n\t}\n\t// if there\
    \ is a zero in the array, we know that at least two elements\n\t// sum to zero.\n\
    \tif (in_array(0, $l)) {\n\t\treturn true;\n\t}\n\t$seen = array();\n\tfor ($i\
    \ = 0; $i < $len; $i++) {\n\t\tif (in_array($l[$i], $seen)) {\n\t\t\treturn true;\n\
    \t\t}\n\t\t$seen[] = -1 * $l[$i];\n\t}\n\treturn false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphpb36s1h.php:40\n\
    Stack trace:\n#0 /tmp/tmphpb36s1h.php(51): test()\n#1 {main}\n  thrown in /tmp/tmphpb36s1h.php\
    \ on line 40\n"
  timestamp: 1660028639
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n  // TODO: your code here\n  // use function to determine if there are duplicate\
    \ values\n  $dupes = array_unique($l);\n  // check if the array length is the\
    \ same if it is there are no dupes\n  if (count($l) === count($dupes)) {\n  \t\
    // loop through the array\n  \tfor ($i=0; $i < count($l); $i++) { \n  \t\t// this\
    \ will equal the current value\n  \t\t$current = $l[$i];\n  \t\t// remove the\
    \ current value\n  \t\tunset($l[$i]);\n  \t\t// loop through and check if the\
    \ negative number exists\n  \t\tfor ($j=0; $j < count($l); $j++) { \n  \t\t\t\
    if (in_array(-$current, $l)) {\n  \t\t\t\treturn true;\n  \t\t\t}\n  \t\t}\n \
    \ \t}\n  }\n\n  return false;\n}\n\nfunction candidate(...$args) {\n    return\
    \ pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028639
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n  // check if the array has only one element.\n  if (count($l) == 1) {\n\
    \    return false;\n  }\n\n  // create an empty associative array.\n  $buffer\
    \ = array();\n\n  // populate the associative array with negative values from\
    \ the list.\n  foreach ($l as $value) {\n    $buffer[-$value] = -$value;\n  }\n\
    \n  // check if the list contains a key, which is also a value.\n  foreach ($l\
    \ as $value) {\n    if (array_key_exists($value, $buffer)) {\n      return true;\n\
    \    }\n  }\n\n  return false;\n}\n\nfunction candidate(...$args) {\n    return\
    \ pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcxrd_5g_.php:44\n\
    Stack trace:\n#0 /tmp/tmpcxrd_5g_.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpcxrd_5g_.php\
    \ on line 44\n"
  timestamp: 1660028639
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n  // Write your code here\n}\nfunction candidate(...$args) {\n    return\
    \ pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplzi58j73.php:23\n\
    Stack trace:\n#0 /tmp/tmplzi58j73.php(34): test()\n#1 {main}\n  thrown in /tmp/tmplzi58j73.php\
    \ on line 23\n"
  timestamp: 1660028639
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n  // first sort the list\n  sort($l);\n  // set up two pointers, called i\
    \ and j.\n  // i should point to the first element in the list,\n  // and j should\
    \ point to the last element in the list.\n  $i = 0;\n  $j = count($l) - 1;\n \
    \ // as long as i is less than j, we need to check to see if the sum\n  // of\
    \ the elements at index i and index j is zero.\n  while ($i < $j) {\n    // if\
    \ the sum is 0, return true.\n    if ($l[$i] + $l[$j] == 0) {\n      return true;\n\
    \    }\n    // otherwise, if the sum is positive, move the element in j back by\
    \ one.\n    else if ($l[$i] + $l[$j] > 0) {\n      $j--;\n    }\n    // otherwise,\
    \ if the sum is negative, move the element in i forward by one.\n    else {\n\
    \      $i++;\n    }\n  }\n  // if we get to this point, then we never found a\
    \ sum of zero.\n  // return false.\n  return false;\n}\n\n$l = array(1, 2, 3,\
    \ 7);\nprint_r($l);\necho pairs_sum_to_zero($l) . \"\\n\";\n$l = array(2, 4, -5,\
    \ 3, 5, 7);\nprint_r($l);\necho pairs_sum_to_zero($l) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 7\n)\n\n\
    Array\n(\n    [0] => 2\n    [1] => 4\n    [2] => -5\n    [3] => 3\n    [4] =>\
    \ 5\n    [5] => 7\n)\n1\n"
  timestamp: 1660028639
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    for ($i = 0; $i < count($l); $i++) {\n        for ($j = $i + 1; $j <\
    \ count($l); $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n              \
    \  return true;\n            }\n        }\n    }\n    return false;\n}\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824145
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    if (count($l) < 2) {\n        return false;\n    }\n    foreach ($l as\
    \ $v) {\n        if (in_array(-$v, $l)) {\n            return true;\n        }\n\
    \    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb62z7f2j.php:32\n\
    Stack trace:\n#0 /tmp/tmpb62z7f2j.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpb62z7f2j.php\
    \ on line 32\n"
  timestamp: 1660028639
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    // Remove the following line when you start working on the function.\n\
    \    return false;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsi3pnzah.php:28\n\
    Stack trace:\n#0 /tmp/tmpsi3pnzah.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpsi3pnzah.php\
    \ on line 28\n"
  timestamp: 1660028639
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n  foreach ($l as $k => $v) {\n    if (in_array(-$v, $l)) {\n      return\
    \ true;\n    }\n  }\n  return false;\n}\n\nfunction candidate(...$args) {\n  \
    \  return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnmcmivbk.php:29\n\
    Stack trace:\n#0 /tmp/tmpnmcmivbk.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpnmcmivbk.php\
    \ on line 29\n"
  timestamp: 1660028639
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\t\n\t// O(nlogn)\n\t// sort the array first\n\tsort($l);\n\t\n\t// define\
    \ head and tail pointers\n\t$head = 0;\n\t$tail = count($l) - 1;\n\t\n\t// keep\
    \ going until the two pointers cross\n\twhile ($head < $tail) {\n\t\t$head_el\
    \ = $l[$head];\n\t\t$tail_el = $l[$tail];\n\t\t$sum = $head_el + $tail_el;\n\t\
    \t\n\t\t// if the sum is greater than zero, we need to decrement the tail pointer\n\
    \t\tif ($sum > 0) {\n\t\t\t$tail--;\n\t\t// if the sum is less than zero, we need\
    \ to increment the head pointer\n\t\t} else if ($sum < 0) {\n\t\t\t$head++;\n\t\
    \t// if the sum is zero, we can stop looking. we have a pair!\n\t\t} else {\n\t\
    \t\treturn true;\n\t\t}\n\t}\n\t\n\t// if we run out of elements, no pair exists\n\
    \treturn false;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028639
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    // your solution here\n}\nfunction candidate(...$args) {\n    return\
    \ pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpraus8486.php:23\n\
    Stack trace:\n#0 /tmp/tmpraus8486.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpraus8486.php\
    \ on line 23\n"
  timestamp: 1660028639
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n  if (count($l) < 2) {\n    return false;\n  }\n  sort($l);\n  for ($i =\
    \ 0; $i < count($l); $i++) {\n    $target = -$l[$i];\n    $left = $i + 1;\n  \
    \  $right = count($l) - 1;\n    while ($left < $right) {\n      $sum = $l[$left]\
    \ + $l[$right];\n      if ($sum < $target) {\n        $left++;\n      } else if\
    \ ($sum > $target) {\n        $right--;\n      } else {\n        return true;\n\
    \      }\n    }\n  }\n  return false;\n}\nfunction candidate(...$args) {\n   \
    \ return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeji6ius0.php:43\n\
    Stack trace:\n#0 /tmp/tmpeji6ius0.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpeji6ius0.php\
    \ on line 43\n"
  timestamp: 1660028639
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n  $count = 0;\n  foreach ($l as $key => $value) {\n    $count++;\n  }\n \
    \ if ($count < 2) {\n    return false;\n  }\n  foreach ($l as $key => $value)\
    \ {\n    for ($i = 0; $i < $count - 1; $i++) {\n      if (($l[$key] + $l[$i])\
    \ == 0) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\necho\
    \ pairs_sum_to_zero(array(1,3,5,0));\necho pairs_sum_to_zero(array(1,3,-2,1));\n\
    echo pairs_sum_to_zero(array(1,2,3,7));\necho pairs_sum_to_zero(array(2,4,-5,3,5,7));\n\
    echo pairs_sum_to_zero(array(1));\nfunction candidate(...$args) {\n    return\
    \ pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660028639
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    // TODO: implement me\n    return false;\n}\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvyj8ts76.php:27\n\
    Stack trace:\n#0 /tmp/tmpvyj8ts76.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpvyj8ts76.php\
    \ on line 27\n"
  timestamp: 1660028639
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    // YOUR CODE HERE\n    for ($i = 0; $i < count($l); $i++) {\n       \
    \ for ($j = $i + 1; $j < count($l); $j++) {\n            if ($l[$i] + $l[$j] ==\
    \ 0) {\n                return true;\n            }\n        }\n    }\n    return\
    \ false;\n}\n\nfunction candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2,\
    \ 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028639
- exit_code: 255
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n  foreach ($l as $v) {\n    $val = -$v;\n    if (in_array($val, $l)) {\n\
    \      return true;\n    }\n  }\n  return false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2qtoqzb3.php:30\n\
    Stack trace:\n#0 /tmp/tmp2qtoqzb3.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp2qtoqzb3.php\
    \ on line 30\n"
  timestamp: 1660028639
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\t// Write your code here.\n\t$count = count($l);\n\tif ($count < 2) return\
    \ false;\n\t$i = 0;\n\t$j = $count - 1;\n\tsort($l);\n\twhile ($i < $j) {\n\t\t\
    $sum = $l[$i] + $l[$j];\n\t\tif ($sum == 0) return true;\n\t\telse if ($sum >\
    \ 0) $j--;\n\t\telse $i++;\n\t}\n\treturn false;\n}\n\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028639
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n  if (count($l) < 2) return false;\n  $matches = array();\n  foreach ($l\
    \ as $value) {\n    if (in_array(-$value, $matches)) return true;\n    $matches[]\
    \ = $value;\n  }\n  return false;\n}\n\nfunction candidate(...$args) {\n    return\
    \ pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028639
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$found = false;\n\tfor ($i = 0; $i < count($l) - 1; $i++) {\n\t\tfor ($j\
    \ = $i + 1; $j < count($l); $j++) {\n\t\t\tif ($l[$i] + $l[$j] == 0) {\n\t\t\t\
    \t$found = true;\n\t\t\t}\n\t\t}\n\t}\n\treturn $found;\n}\nfunction candidate(...$args)\
    \ {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 7)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, -5, 3, 5, 7))\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028639
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n    // your code here\n    $n = count($l);\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        for ($j = $i + 1; $j < $n; $j++) {\n            if ($l[$i] + $l[$j]\
    \ == 0) {\n                return true;\n            }\n        }\n    }\n   \
    \ return false;\n}\n\n$l = array(2, 4, -5, 3, 5, 7);\necho pairs_sum_to_zero($l);\n\
    function candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660028639
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\t\n\t$elements = count($l);\n\t\n\tif ($elements < 2) {\n\t\treturn false;\n\
    \t}\n\t\n\tsort($l);\n\t\n\t$low = 0;\n\t$high = $elements - 1;\n\t\n\twhile ($low\
    \ < $high) {\n\t\t$sum = $l[$low] + $l[$high];\n\t\tif ($sum == 0) {\n\t\t\treturn\
    \ true;\n\t\t} elseif ($sum > 0) {\n\t\t\t$high--;\n\t\t} else {\n\t\t\t$low++;\n\
    \t\t}\n\t}\n\t\n\treturn false;\n}\n\nfunction candidate(...$args) {\n    return\
    \ pairs_sum_to_zero(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 3, 5, 0)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 3, -2, 1)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028639
- exit_code: 0
  program: "<?php\n// pairs_sum_to_zero takes an array of integers as an input.\n\
    // it returns true if there are two distinct elements in the array that\n// sum\
    \ to zero, and false otherwise.\n// >>> pairs_sum_to_zero(array(1, 3, 5, 0))\n\
    // false\n// >>> pairs_sum_to_zero(array(1, 3, -2, 1))\n// false\n// >>> pairs_sum_to_zero(array(1,\
    \ 2, 3, 7))\n// false\n// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))\n//\
    \ true\n// >>> pairs_sum_to_zero(array(1))\n// false\nfunction pairs_sum_to_zero($l)\
    \ {\n\t$count = 0;\n\t$i = 0;\n\t$length = count($l);\n\twhile ($i < $length)\
    \ {\n\t\t$j = $i + 1;\n\t\twhile ($j < $length) {\n\t\t\tif ($l[$i] + $l[$j] ==\
    \ 0) {\n\t\t\t\t$count++;\n\t\t\t}\n\t\t\t$j++;\n\t\t}\n\t\t$i++;\n\t}\n\tif ($count\
    \ > 0) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\nfunction\
    \ candidate(...$args) {\n    return pairs_sum_to_zero(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 3, 5, 0)) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 3, -2, 1)) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 7)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 4, -5, 3, 5, 7)) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1)) !== false) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3, 9, -1,\
    \ 4, 2, 30)) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-3,\
    \ 9, -1, 4, 2, 31)) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028639

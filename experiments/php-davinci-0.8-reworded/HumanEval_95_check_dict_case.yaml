name: HumanEval_95_check_dict_case
language: php
prompt: "<?php\n// Given an array, return true if all keys are strings in lower \n\
  // case or all keys are strings in upper case, else return false.\n// The function\
  \ should return false is the given array is empty.\n// Examples:\n// >>> check_dict_case(array(\"\
  a\" => \"apple\", \"b\" => \"banana\"))\n// true\n// >>> check_dict_case(array(\"\
  a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\n// false\n// >>> check_dict_case(array(\"\
  a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\n// false\n// >>> check_dict_case(array(\"\
  Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\n// false\n// >>>\
  \ check_dict_case(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\"))\n// true\nfunction\
  \ check_dict_case($dict) {\n"
tests: "function candidate(...$args) {\n    return check_dict_case(...$args);\n}\n\
  \nfunction test(): void {\n    if (candidate(array(\"p\" => \"pineapple\", \"b\"\
  \ => \"banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
  p\" => \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
  , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
  36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !== true)\
  \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"fruit\"\
  \ => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"Test\
  \ failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
  Test failed!\"); }\n}\n\ntest();"
completions: ["\t$lower = 0;\n\t$upper = 0;\n\t$count = 0;\n\tforeach ($dict as $key\
    \ => $value) {\n\t\t$count++;\n\t\tif (ctype_lower($key)) {\n\t\t\t$lower++;\n\
    \t\t} elseif (ctype_upper($key)) {\n\t\t\t$upper++;\n\t\t}\n\t}\n\tif (($lower\
    \ == $count) || ($upper == $count)) {\n\t\treturn true;\n\t} else {\n\t\treturn\
    \ false;\n\t}\n}\n", "    //$upper = 0;\n    //$lower = 0;\n    $previous = '';\n\
    \    foreach ($dict as $key => $value) {\n        if (!is_string($key)) {\n  \
    \          return false;\n        }\n        $key_upper = strtoupper($key);\n\
    \        $key_lower = strtolower($key);\n        //echo $key_upper . ' ' . $key_lower\
    \ . \"\\n\";\n        if ($key == $key_upper && $key != $key_lower) {\n      \
    \      if ($previous != 'upper') {\n                $previous = 'upper';\n   \
    \         } else {\n                return false;\n            }\n        } else\
    \ if ($key == $key_lower && $key != $key_upper) {\n            if ($previous !=\
    \ 'lower') {\n                $previous = 'lower';\n            } else {\n   \
    \             return false;\n            }\n        } else {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n", "\tif(empty($dict)){\n\t\t\
    return false;\n\t}\n\t$isLowerCase = array_key_exists(0,$dict);\n\t$keys = array_keys($dict);\n\
    \tif($isLowerCase){\n\t\tforeach($keys as $key){\n\t\t\tif(ctype_upper($key)){\n\
    \t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}else{\n\t\tforeach($keys as $key){\n\
    \t\t\tif(ctype_lower($key)){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ true;\n}", "    if (count($dict) == 0) {\n        return false;\n    }\n   \
    \ $keys = array_keys($dict);\n    $first_value = $keys[0];\n    $is_lower_case\
    \ = ctype_lower($first_value);\n    foreach ($keys as $key) {\n        if ($is_lower_case)\
    \ {\n            if (!ctype_lower($key)) {\n                return false;\n  \
    \          }\n        } else {\n            if (!ctype_upper($key)) {\n      \
    \          return false;\n            }\n        }\n    }\n    return true;\n\
    }\n", "  if (! is_array($dict)) {\n    return false;\n  }\n  if (empty($dict))\
    \ {\n    return false;\n  }\n  $upper = array_map('strtoupper', array_keys($dict));\n\
    \  $lower = array_map('strtolower', array_keys($dict));\n  if ($upper == array_keys($dict))\
    \ {\n    return true;\n  }\n  if ($lower == array_keys($dict)) {\n    return true;\n\
    \  }\n  return false;\n}\n", "    if (count($dict) == 0) {\n        return false;\n\
    \    }\n\n    $lowercase = true;\n    $uppercase = true;\n    foreach ($dict as\
    \ $key => $value) {\n        if (!is_string($key)) {\n            return false;\n\
    \        }\n        if (strtolower($key) !== $key) {\n            $lowercase =\
    \ false;\n        }\n        if (strtoupper($key) !== $key) {\n            $uppercase\
    \ = false;\n        }\n    }\n    return $lowercase or $uppercase;\n}\n", "  $value\
    \ = true;\n  $key = array_keys($dict);\n  if (!empty($dict)) {\n    foreach ($key\
    \ as $v) {\n      if (ctype_lower($v)) {\n        $value = true;\n      } else\
    \ if (ctype_upper($v)) {\n        $value = true;\n      } else {\n        $value\
    \ = false;\n      }\n    }\n  } else {\n    $value = false;\n  }\n  return $value;\n\
    }\necho (check_dict_case(array(\"a\" => \"apple\", \"b\" => \"banana\")) ? 'true'\
    \ : 'false') . \"\\n\";\necho (check_dict_case(array(\"a\" => \"apple\", \"A\"\
    \ => \"banana\", \"B\" => \"banana\")) ? 'true' : 'false') . \"\\n\";\necho (check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\")) ? 'true' : 'false') .\
    \ \"\\n\";\necho (check_dict_case(array(\"Name\" => \"John\", \"Age\" => \"36\"\
    , \"City\" => \"Houston\")) ? 'true' : 'false') . \"\\n\";\necho (check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\")) ? 'true' : 'false') . \"\\n\";", "\t\
    // if ($dict == null) return false;\n\t// $flag = is_int(key($dict));\n\t// foreach\
    \ ($dict as $key => $value) {\n\t// \tif ($flag) {\n\t// \t\tif (!is_int($key))\
    \ return false;\n\t// \t} else {\n\t// \t\tif (is_int($key)) return false;\n\t\
    // \t}\n\t// }\n\t// return true;\n\treturn is_array($dict) && \n\tcount(array_filter(array_keys($dict),\
    \ \"is_string\")) != 0 && \n\tcount(array_filter(array_keys($dict), \"is_int\"\
    )) != 0;\n}\n\n$tests = array(\n\tarray(\n\t\t\"input\" => array(\"a\" => \"apple\"\
    , \"b\" => \"banana\"),\n\t\t\"expected\" => true,\n\t),\n\tarray(\n\t\t\"input\"\
    \ => array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"),\n\t\t\
    \"expected\" => false,\n\t),\n\tarray(\n\t\t\"input\" => array(\"a\" => \"apple\"\
    , 8 => \"banana\", \"a\" => \"apple\"),\n\t\t\"expected\" => false,\n\t),\n\t\
    array(\n\t\t\"input\" => array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\"\
    \ => \"Houston\"),\n\t\t\"expected\" => false,\n\t),\n\tarray(\n\t\t\"input\"\
    \ => array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\"),\n\t\t\"expected\" => true,\n\
    \t),\n\tarray(\n\t\t\"input\" => array(),\n\t\t\"expected\" => false,\n\t),\n\t\
    array(\n\t\t\"input\" => null,\n\t\t\"expected\" => false,\n\t),\n);\n\nforeach\
    \ ($tests as $test) {\n\t$result = check_dict_case($test[\"input\"]);\n\techo\
    \ \"Input: \\n\";\n\tprint_r($test[\"input\"]);\n\techo \"\\n\";\n\techo \"Expected:\\\
    n\";\n\tprint_r($test[\"expected", "  if (empty($dict)) return false;\n  $keys\
    \ = array_keys($dict);\n  if (strtolower($keys[0]) === $keys[0]) {\n    foreach\
    \ ($keys as $key) {\n      if (strtolower($key) !== $key) return false;\n    }\n\
    \  } else if (strtoupper($keys[0]) === $keys[0]) {\n    foreach ($keys as $key)\
    \ {\n      if (strtoupper($key) !== $key) return false;\n    }\n  } else {\n \
    \   return false;\n  }\n  return true;\n}\n", "\t$is_dict_case = false;\n\t$is_all_lower_case\
    \ = false;\n\t$is_all_upper_case = false;\n\tforeach ($dict as $key => $value)\
    \ {\n\t\tif (is_string($key)) {\n\t\t\tif ($is_all_lower_case && (strtolower($key)\
    \ != $key)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif ($is_all_upper_case &&\
    \ (strtoupper($key) != $key)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (strtolower($key)\
    \ == $key) {\n\t\t\t\t$is_all_lower_case = true;\n\t\t\t}\n\t\t\tif (strtoupper($key)\
    \ == $key) {\n\t\t\t\t$is_all_upper_case = true;\n\t\t\t}\n\t\t} else {\n\t\t\t\
    return false;\n\t\t}\n\t}\n\treturn true;\n}\n\n$arr1 = array(\"a\" => \"apple\"\
    , \"b\" => \"banana\");\n$arr2 = array(\"a\" => \"apple\", \"A\" => \"banana\"\
    , \"B\" => \"banana\");\n$arr3 = array(\"a\" => \"apple\", 8 => \"banana\", \"\
    a\" => \"apple\");\n$arr4 = array(\"Name\" => \"John\", \"Age\" => \"36\", \"\
    City\" => \"Houston\");\n$arr5 = array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\"\
    );\n$arr6 = array(\"ADDRESS\" => \"123 MAIN\", \"STATE\" => \"NC\", \"ZIP\" =>\
    \ \"12345\");\n\nprint \"check_dict_case(array(\\\"a\\\" => \\\"apple\\\", \\\"\
    b\\\" => \\\"banana\\\"))\";\nif (check_dict_case($arr1)) {\n\tprint \"true\\\
    n\";\n} else {\n\tprint \"false\\n\";\n}\n\nprint \"check_dict_case(array(\\\"\
    a\\\" => \\\"apple\\\", \\\"A\\\" => \\\"banana\\\", \\\"B\\\" => \\\"banana\\\
    \"))\";\nif (check", "    // TODO\n}", "  $keys = array_keys($dict);\n  $case\
    \ = \"\";\n  $first = true;\n  for ($i = 0; $i < count($keys); $i++) {\n    if\
    \ (gettype($keys[$i]) != \"string\") return false;\n    if ($first) {\n      $case\
    \ = ctype_lower($keys[$i]) ? \"lower\" : \"upper\";\n      $first = false;\n \
    \   } else {\n      if ($case == \"lower\" && ctype_upper($keys[$i])) return false;\n\
    \      if ($case == \"upper\" && ctype_lower($keys[$i])) return false;\n    }\n\
    \  }\n  return true;\n}\n$a = array(\"a\" => \"apple\", \"b\" => \"banana\");\n\
    if (check_dict_case($a)) {\n  echo \"True\\n\";\n} else {\n  echo \"False\\n\"\
    ;\n}\n$a = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"\
    );\nif (check_dict_case($a)) {\n  echo \"True\\n\";\n} else {\n  echo \"False\\\
    n\";\n}\n$a = array(\"a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\");\n\
    if (check_dict_case($a)) {\n  echo \"True\\n\";\n} else {\n  echo \"False\\n\"\
    ;\n}\n$a = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"\
    );\nif (check_dict_case($a)) {\n  echo \"True\\n\";\n} else {\n  echo \"False\\\
    n\";\n}\n$a = array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\");\nif (check_dict_case($a))\
    \ {\n  echo \"True\\n\";\n} else {\n  echo \"False\\n\";\n}", "    return empty($dict)\
    \ ? false : all_string_keys_same_case($dict);\n}\n", "\t// TEST CASES\n\t// \t\
    echo check_dict_case(array(\"a\" => \"apple\", \"b\" => \"banana\")) . \"\\n\"\
    ; // true\n\t// \techo check_dict_case(array(\"a\" => \"apple\", \"A\" => \"banana\"\
    , \"B\" => \"banana\")) . \"\\n\"; // false\n\t// \techo check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\")) . \"\\n\"; // false\n\t\
    // \techo check_dict_case(array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\"\
    \ => \"Houston\")) . \"\\n\"; // false\n\t// \techo check_dict_case(array(\"STATE\"\
    \ => \"NC\", \"ZIP\" => \"12345\")) . \"\\n\"; // true\n\t// \techo check_dict_case(array())\
    \ . \"\\n\"; // false\n\t\n\tif(!$dict) {\n\t\treturn false;\n\t}\n\n\t$lowercase\
    \ = true;\n\t$uppercase = true;\n\n\tforeach($dict as $key => $value) {\n\t\t\
    if(!ctype_lower($key)) {\n\t\t\t$lowercase = false;\n\t\t}\n\n\t\tif(!ctype_upper($key))\
    \ {\n\t\t\t$uppercase = false;\n\t\t}\n\t}\n\n\treturn $lowercase || $uppercase;\n\
    }\n", "\t$flag = false;\n\t$counter = 0;\n\t$l_case = 0;\n\t$u_case = 0;\n\tforeach\
    \ ($dict as $key => $value) {\n\t\tif (is_string($key)) {\n\t\t\t$counter++;\n\
    \t\t\tif (preg_match(\"/^[a-z]+$/\", $key)) {\n\t\t\t\t$l_case++;\n\t\t\t}\n\t\
    \t\tif (preg_match(\"/^[A-Z]+$/\", $key)) {\n\t\t\t\t$u_case++;\n\t\t\t}\n\t\t\
    }\n\t}\n\tif ($counter > 0) {\n\t\tif ($l_case == $counter) {\n\t\t\t$flag = true;\n\
    \t\t}\n\t\tif ($u_case == $counter) {\n\t\t\t$flag = true;\n\t\t}\n\t}\n\treturn\
    \ $flag;\n}\n\n$dict = array(\"a\" => \"apple\", \"b\" => \"banana\");\n$dict2\
    \ = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\");\n$dict3\
    \ = array(\"a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\");\n$dict4 =\
    \ array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\");\n$dict5\
    \ = array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\");\n\n$test = check_dict_case($dict);\n\
    $test2 = check_dict_case($dict2);\n$test3 = check_dict_case($dict3);\n$test4 =\
    \ check_dict_case($dict4);\n$test5 = check_dict_case($dict5);\n\nvar_dump($test);\n\
    var_dump($test2);\nvar_dump($test3);\nvar_dump($test4);\nvar_dump($test5);", " \
    \   $upper_case = true;\n    $lower_case = true;\n    foreach ($dict as $key =>\
    \ $value) {\n        $upper_case = $upper_case && strtoupper($key) == $key;\n\
    \        $lower_case = $lower_case && strtolower($key) == $key;\n    }\n    return\
    \ $upper_case || $lower_case;\n}\n\n$dicts = array(\n    array(\"a\" => \"apple\"\
    , \"b\" => \"banana\"),\n    array(\"a\" => \"apple\", \"A\" => \"banana\", \"\
    B\" => \"banana\"),\n    array(\"a\" => \"apple\", 8 => \"banana\", \"a\" => \"\
    apple\"),\n    array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"\
    ),\n    array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\"),\n);\n\nforeach ($dicts\
    \ as $dict) {\n    echo \"check_dict_case(\" . json_encode($dict) . \") == \"\
    \ . (check_dict_case($dict) ? \"true\" : \"false\") . \"\\n\";\n}", "    $str_count\
    \ = $str_count_upper = 0;\n    foreach ($dict as $key => $value) {\n        if\
    \ (gettype($key) == \"string\") {\n            $str_count += 1;\n            if\
    \ (strtoupper($key) == $key) {\n                $str_count_upper += 1;\n     \
    \       }\n        }\n    }\n    return $str_count == 0 || ($str_count == $str_count_upper);\n\
    }\n\nif (!debug_backtrace()) {\n    $testcases = array(\n        array(\"a\" =>\
    \ \"apple\", \"b\" => \"banana\"),\n        array(\"a\" => \"apple\", \"A\" =>\
    \ \"banana\", \"B\" => \"banana\"),\n        array(\"a\" => \"apple\", 8 => \"\
    banana\", \"a\" => \"apple\"),\n        array(\"Name\" => \"John\", \"Age\" =>\
    \ \"36\", \"City\" => \"Houston\"),\n        array(\"STATE\" => \"NC\", \"ZIP\"\
    \ => \"12345\"),\n    );\n    foreach ($testcases as $testcase) {\n        echo\
    \ check_dict_case($testcase), \"\\n\";\n    }\n}", "    $keys = array_keys($dict);\n\
    \    $str = implode('', $keys);\n    if (preg_match('/[a-z]/', $str)) {\n    \
    \    if (preg_match('/[A-Z]/', $str)) {\n            return false;\n        }\
    \ else {\n            return true;\n        }\n    } else {\n        return true;\n\
    \    }\n}\n", "  $lower = false;\n  $upper = false;\n  foreach ($dict as $key\
    \ => $value) {\n    if (is_string($key)) {\n      if (strtolower($key) == $key)\
    \ {\n        $lower = true;\n      } elseif (strtoupper($key) == $key) {\n   \
    \     $upper = true;\n      } else {\n        return false;\n      }\n    } else\
    \ {\n      return false;\n    }\n  }\n  return !($lower && $upper);\n}\n", " \
    \   if (!count($dict)) {\n        return false;\n    }\n\n    $lower = 0;\n  \
    \  $upper = 0;\n    foreach ($dict as $key => $value) {\n        if (ctype_lower($key))\
    \ {\n            $lower++;\n        }\n        if (ctype_upper($key)) {\n    \
    \        $upper++;\n        }\n    }\n\n    if ($lower > 0 && $upper > 0) {\n\
    \        return false;\n    }\n\n    return true;\n}\n\nvar_dump(check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\")));\necho PHP_EOL;\nvar_dump(check_dict_case(array(\"\
    a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\")));\necho PHP_EOL;\n\
    var_dump(check_dict_case(array(\"a\" => \"apple\", 8 => \"banana\", \"a\" => \"\
    apple\")));\necho PHP_EOL;\nvar_dump(check_dict_case(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")));\necho PHP_EOL;\nvar_dump(check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\")));\necho PHP_EOL;"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

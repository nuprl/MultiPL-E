name: HumanEval_155_even_odd_count
language: php
prompt: "<?php\n// Given an integer. return an array that has the number of even and\
  \ odd digits respectively.\n// Example:\n// >>> even_odd_count(-12)\n// array(1,\
  \ 1)\n// >>> even_odd_count(123)\n// array(1, 2)\nfunction even_odd_count($num)\
  \ {\n"
tests: "function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
  function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
  Test failed!\"); }\n}\n\ntest();"
completions: ["  // Write your code here\n\n}\n\n$input1 = -12;\nprint_r(even_odd_count($input1));\n\
    \n$input2 = 123;\nprint_r(even_odd_count($input2));\n", "    $num = abs($num);\n\
    \    $even_counter = 0;\n    $odd_counter = 0;\n    $num_as_string = \"$num\"\
    ;\n    for ($i = 0; $i < strlen($num_as_string); $i++) {\n        if ($num_as_string[$i]\
    \ % 2 == 0) {\n            $even_counter++;\n        } else {\n            $odd_counter++;\n\
    \        }\n    }\n    return array($even_counter, $odd_counter);\n}\n\necho \"\
    <pre>\";\necho \"Given the number -12, array(1, 1) should be returned.\\n\";\n\
    print_r(even_odd_count(-12));\necho \"Given the number 123, array(1, 2) should\
    \ be returned.\\n\";\nprint_r(even_odd_count(123));\necho \"</pre>\";", "    if\
    \ ($num >= 0) {\n        $num = (string)$num;\n        $odd = substr_count($num,\
    \ \"1\") + substr_count($num, \"3\") + substr_count($num, \"5\") + substr_count($num,\
    \ \"7\") + substr_count($num, \"9\");\n        $even = substr_count($num, \"0\"\
    ) + substr_count($num, \"2\") + substr_count($num, \"4\") + substr_count($num,\
    \ \"6\") + substr_count($num, \"8\");\n    } else {\n        $num = (string)$num;\n\
    \        $num = substr($num, 1);\n        $odd = substr_count($num, \"1\") + substr_count($num,\
    \ \"3\") + substr_count($num, \"5\") + substr_count($num, \"7\") + substr_count($num,\
    \ \"9\");\n        $even = substr_count($num, \"0\") + substr_count($num, \"2\"\
    ) + substr_count($num, \"4\") + substr_count($num, \"6\") + substr_count($num,\
    \ \"8\");\n    }\n    $res = array($even, $odd);\n    return $res;\n}", "  $digits\
    \ = str_split(abs($num));\n  $even = array_filter($digits, function($num) { return\
    \ $num % 2 == 0; });\n  $odd = array_filter($digits, function($num) { return $num\
    \ % 2 == 1; });\n  return array(count($even), count($odd));\n}\n\necho 'even_odd_count(-12):\
    \ ';\nvar_dump(even_odd_count(-12));\necho 'even_odd_count(123): ';\nvar_dump(even_odd_count(123));\n",
  "  $digits = str_split(abs($num));\n  $even = 0;\n  $odd = 0;\n  foreach ($digits\
    \ as $digit) {\n    if ($digit % 2 == 0) {\n      $even++;\n    } else {\n   \
    \   $odd++;\n    }\n  }\n  return array($even, $odd);\n}", "  $arr = [];\n  if\
    \ ($num < 0) {\n    $num = $num * -1;\n  }\n  $num = strval($num);\n  for ($i\
    \ = 0; $i < strlen($num); $i++) {\n    if ($num[$i] % 2 == 0) {\n      $arr[0]\
    \ += 1;\n    } else {\n      $arr[1] += 1;\n    }\n  }\n  return $arr;\n}\n",
  "  $num = str_split($num);\n  $count = 0;\n  $count2 = 0;\n  for ($i = 0; $i < count($num);\
    \ $i++) {\n    if ($num[$i] % 2 == 0) {\n      $count++;\n    } else {\n     \
    \ $count2++;\n    }\n  }\n  return array($count, $count2);\n}\n", "   $arr = str_split(abs($num));\n\
    \   $even_count = 0;\n   $odd_count = 0;\n   foreach ($arr as $num) {\n      if\
    \ ($num % 2 == 0) {\n         $even_count += 1;\n      } else {\n         $odd_count\
    \ += 1;\n      }\n   }\n   $result = array($even_count, $odd_count);\n   return\
    \ $result;\n}", "\t$digits = str_split(abs($num));\n\t$even = 0;\n\t$odd = 0;\n\
    \tforeach ($digits as $digit) {\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\
    \t} else {\n\t\t\t$odd++;\n\t\t}\n\t}\n\treturn array($even, $odd);\n}", "\t$array\
    \ = array();\n\t$evenCount = 0;\n\t$oddCount = 0;\n\t$num = strval($num);\n\t\
    for ($i = 0; $i < strlen($num); $i++) {\n\t\tif ($num[$i] % 2 == 0) {\n\t\t\t\
    $evenCount++;\n\t\t} else {\n\t\t\t$oddCount++;\n\t\t}\n\t}\n\tarray_push($array,\
    \ $evenCount, $oddCount);\n\treturn $array;\n}\n\nprint_r(even_odd_count(-12));\n\
    echo \"\\n\";\nprint_r(even_odd_count(123));\necho \"\\n\";", "  $arr = str_split($num);\n\
    \  $evenCount = 0;\n  $oddCount = 0;\n  for ($i = 0; $i < count($arr); $i++) {\n\
    \    if ($arr[$i] % 2 == 0) {\n      $evenCount++;\n    } else {\n      $oddCount++;\n\
    \    }\n  }\n  return array($evenCount, $oddCount);\n}", "\tif (empty($num)) {\n\
    \t\treturn 0;\n\t}\n\tif ($num < 0) {\n\t\t$num = $num * -1;\n\t}\n\t$even = 0;\n\
    \t$odd = 0;\n\t$digits = str_split($num);\n\tforeach ($digits as $digit) {\n\t\
    \tif ($digit % 2 == 0) {\n\t\t\t$even += 1;\n\t\t} else {\n\t\t\t$odd += 1;\n\t\
    \t}\n\t}\n\treturn array($even, $odd);\n}\n", "  $even_count = 0;\n  $odd_count\
    \ = 0;\n  while ($num > 0) {\n    $rem = $num % 10;\n    if ($rem % 2 == 0) {\n\
    \      $even_count++;\n    } else {\n      $odd_count++;\n    }\n    $num = floor($num\
    \ / 10);\n  }\n  return array($even_count, $odd_count);\n}\n\n$num = -12;\n$result\
    \ = even_odd_count($num);\nprint_r($result);\n\n$num = 123;\n$result = even_odd_count($num);\n\
    print_r($result);", "    $even = 0;\n    $odd = 0;\n    for ($i = 0; $i < strlen($num);\
    \ $i++) {\n        if ($num[$i] % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n    }\n    return array($even, $odd);\n}\n\
    echo \"even_odd_count(-12) = \";\nprint_r(even_odd_count(-12));\necho \"<br />\"\
    ;\necho \"even_odd_count(123) = \";\nprint_r(even_odd_count(123));", "    $numAbs\
    \ = abs($num);\n    $oddCount = 0;\n    $evenCount = 0;\n    while ($numAbs >\
    \ 0) {\n        $remainder = $numAbs % 10;\n        if ($remainder % 2 == 0) {\n\
    \            $evenCount += 1;\n        } else {\n            $oddCount += 1;\n\
    \        }\n        $numAbs = floor($numAbs / 10);\n    }\n    return array($evenCount,\
    \ $oddCount);\n}\n", "  $even = 0;\n  $odd = 0;\n  $num = str_split(abs($num));\n\
    \  foreach ($num as $digit) {\n    if ($digit % 2 == 0) {\n      $even++;\n  \
    \  } else {\n      $odd++;\n    }\n  }\n  return array($even, $odd);\n}\n", " \
    \   if($num < 0) {\n        $num = -1 * $num;\n    }\n    $digits = str_split($num);\n\
    \    $even = 0;\n    $odd = 0;\n    foreach($digits as $digit) {\n        if($digit\
    \ % 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n \
    \       }\n    }\n    return array($even, $odd);\n}\n$even_odd_count = even_odd_count(12356);\n\
    print_r($even_odd_count);", "  $stringNum = (string) $num;\n  $evenCount = 0;\n\
    \  $oddCount = 0;\n  for ($i = 0; $i < strlen($stringNum); $i++) {\n    if ($stringNum[$i]\
    \ % 2 == 0) {\n      $evenCount++;\n    } else {\n      $oddCount++;\n    }\n\
    \  }\n  return array($evenCount, $oddCount);\n}\n\n$evensOdds = even_odd_count(-12);\n\
    print_r($evensOdds);", "  $num = str_split(abs($num));\n  $result = [0, 0];\n\
    \  for ($i = 0; $i < count($num); $i++) {\n    if ($num[$i] % 2 === 0) {\n   \
    \   $result[0]++;\n    } else {\n      $result[1]++;\n    }\n  }\n  return $result;\n\
    }", "    $num = abs($num);\n    $evens = 0;\n    $odds = 0;\n    while ($num >\
    \ 0) {\n        $digit = $num % 10;\n        if ($digit % 2 === 0) {\n       \
    \     $evens++;\n        } else {\n            $odds++;\n        }\n        $num\
    \ = floor($num / 10);\n    }\n    return array($evens, $odds);\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

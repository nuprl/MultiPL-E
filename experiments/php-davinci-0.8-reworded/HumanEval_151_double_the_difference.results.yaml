language: php
name: HumanEval_151_double_the_difference
results:
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $odds = get_odds($lst);\n  $odds_squared = array_map(function($x) { return\
    \ $x * $x; }, $odds);\n  return array_sum($odds_squared);\n}\n\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function get_odds() in\
    \ /tmp/tmp7z1280af.php:14\nStack trace:\n#0 /tmp/tmp7z1280af.php(20): double_the_difference(Array)\n\
    #1 /tmp/tmp7z1280af.php(24): candidate(Array)\n#2 /tmp/tmp7z1280af.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmp7z1280af.php on line 14\n"
  timestamp: 1659823299
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $squares = [];\n  foreach ($lst as $number) {\n    if ($number % 2 ===\
    \ 1) {\n      $squares[] = $number * $number;\n    }\n  }\n  return array_sum($squares);\n\
    }\necho double_the_difference([1, 3, 2, 0]) . PHP_EOL;\necho double_the_difference([-1,\
    \ -2, 0]) . PHP_EOL;\necho double_the_difference([9, -2]) . PHP_EOL;\necho double_the_difference([0])\
    \ . PHP_EOL;\necho double_the_difference([]) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "10\n0\n81\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpikcc4zsv.php:33\n\
    Stack trace:\n#0 /tmp/tmpikcc4zsv.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpikcc4zsv.php\
    \ on line 33\n"
  timestamp: 1659823299
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t$difference = 0;\n\tforeach ($lst as $key => $val) {\n\t\tif ($val % 2\
    \ != 0 && is_int($val)) {\n\t\t\t$difference += $val * $val;\n\t\t}\n\t}\n\treturn\
    \ $difference;\n}\n\necho double_the_difference(array(1, 3, 2, 0)) . \"\\n\";\n\
    echo double_the_difference(array(-1, -2, 0)) . \"\\n\";\necho double_the_difference(array(9,\
    \ -2)) . \"\\n\";\necho double_the_difference(array(0)) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "10\n1\n81\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx2x4js69.php:33\n\
    Stack trace:\n#0 /tmp/tmpx2x4js69.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpx2x4js69.php\
    \ on line 33\n"
  timestamp: 1659823299
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    return 0;\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxvsd6kt_.php:23\n\
    Stack trace:\n#0 /tmp/tmpxvsd6kt_.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpxvsd6kt_.php\
    \ on line 23\n"
  timestamp: 1659823299
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $count = 0;\n    foreach ($lst as $element) {\n        if (is_int($element)\
    \ && $element >= 0) {\n            if ($element % 2 == 1) {\n                $count\
    \ += pow($element, 2);\n            }\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppjhyzd53.php:31\n\
    Stack trace:\n#0 /tmp/tmppjhyzd53.php(39): test()\n#1 {main}\n  thrown in /tmp/tmppjhyzd53.php\
    \ on line 31\n"
  timestamp: 1659823299
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    if(empty($lst)) {\n        return 0;\n    }\n    $res = 0;\n    foreach($lst\
    \ as $el) {\n        if(is_int($el) && $el > 0 && $el % 2 == 1) {\n          \
    \  $res += $el * $el;\n        }\n    }\n    return $res * 2;\n}\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe729df36.php:31\n\
    Stack trace:\n#0 /tmp/tmpe729df36.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpe729df36.php\
    \ on line 31\n"
  timestamp: 1659823299
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (gettype($num) ==\
    \ \"integer\" && $num >= 0) {\n            if ($num % 2 == 1) {\n            \
    \    $sum += $num * $num;\n            }\n        }\n    }\n    return $sum;\n\
    }\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5ng0w1of.php:30\n\
    Stack trace:\n#0 /tmp/tmp5ng0w1of.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp5ng0w1of.php\
    \ on line 30\n"
  timestamp: 1659823299
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $return = 0;\n    if (empty($lst)) {\n        return $return;\n    }\n\
    \    $return = array_sum(array_map(function($n) {\n        if (is_int($n) && $n\
    \ > 0) {\n            return pow($n, 2);\n        }\n        return 0;\n    },\
    \ $lst));\n    return $return;\n}\nfunction candidate(...$args) {\n    return\
    \ double_the_difference(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5.0,\
    \ 4.0)) !== 25) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.1,\
    \ 0.2, 0.3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0,\
    \ -20.0, -30.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpch7y9sj3.php:32\n\
    Stack trace:\n#0 /tmp/tmpch7y9sj3.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpch7y9sj3.php\
    \ on line 32\n"
  timestamp: 1659823299
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $result = array_filter($lst, function($item) {\n        return $item\
    \ > 0 && is_int($item);\n    });\n    if (count($result) == 0) {\n        return\
    \ 0;\n    }\n    $result = array_map(function($item) {\n        return $item *\
    \ $item;\n    }, $result);\n    return 2 * array_sum($result);\n}\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpddt20nr0.php:31\n\
    Stack trace:\n#0 /tmp/tmpddt20nr0.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpddt20nr0.php\
    \ on line 31\n"
  timestamp: 1659823299
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $i = 0;\n    $new = array();\n    while ($i < count($lst)) {\n      \
    \  if ($lst[$i] > 0 && $lst[$i] % 2 != 0) {\n            array_push($new, $lst[$i]);\n\
    \        }\n        $i++;\n    }\n    $i = 0;\n    $sum = 0;\n    while ($i <\
    \ count($new)) {\n        $sum += pow($new[$i], 2);\n        $i++;\n    }\n  \
    \  return $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz3obn20v.php:36\n\
    Stack trace:\n#0 /tmp/tmpz3obn20v.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpz3obn20v.php\
    \ on line 36\n"
  timestamp: 1659823299
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    if(empty($lst)) {\n        return 0;\n    } else {\n        $odd_values\
    \ = [];\n        foreach($lst as $value) {\n            if($value > 0 && $value\
    \ % 2 != 0) {\n                array_push($odd_values, $value);\n            }\n\
    \        }\n        $sum = 0;\n        foreach($odd_values as $value) {\n    \
    \        $sum += pow($value, 2);\n        }\n        return $sum * 2;\n    }\n\
    }\necho double_the_difference([9, -2]);\necho double_the_difference([1, 3, 2,\
    \ 0]);\necho double_the_difference([-1, -2, 0]);\necho double_the_difference([0]);\n\
    function candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1622000\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdvoca2ax.php:40\n\
    Stack trace:\n#0 /tmp/tmpdvoca2ax.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpdvoca2ax.php\
    \ on line 40\n"
  timestamp: 1659823299
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $ret = 0;\n  foreach ($lst as $v) {\n    if ($v > 0 && is_int($v)) {\n\
    \      $ret += pow($v, 2);\n    }\n  }\n  return $ret;\n}\n\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0acpc8tc.php:29\n\
    Stack trace:\n#0 /tmp/tmp0acpc8tc.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp0acpc8tc.php\
    \ on line 29\n"
  timestamp: 1659823299
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $item) {\n        if ($item % 2 != 0\
    \ && is_int($item) && $item > 0) {\n            $sum += $item * $item;\n     \
    \   }\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ double_the_difference(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5.0,\
    \ 4.0)) !== 25) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.1,\
    \ 0.2, 0.3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0,\
    \ -20.0, -30.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmx6otiyx.php:29\n\
    Stack trace:\n#0 /tmp/tmpmx6otiyx.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpmx6otiyx.php\
    \ on line 29\n"
  timestamp: 1659823299
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t$odds = [];\n\tforeach ($lst as $value) {\n\t\tif ($value > 0 && $value\
    \ % 2 != 0) {\n\t\t\tarray_push($odds, $value);\n\t\t}\n\t}\n\t$sum = 0;\n\tforeach\
    \ ($odds as $value) {\n\t\t$sum += $value ** 2;\n\t}\n\treturn $sum;\n}\nfunction\
    \ candidate(...$args) {\n    return double_the_difference(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk8rsb0_o.php:32\n\
    Stack trace:\n#0 /tmp/tmpk8rsb0_o.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpk8rsb0_o.php\
    \ on line 32\n"
  timestamp: 1659823299
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  // your code here\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzykghh58.php:21\n\
    Stack trace:\n#0 /tmp/tmpzykghh58.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpzykghh58.php\
    \ on line 21\n"
  timestamp: 1659823299
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $sum = 0;\n  foreach ($lst as $number) {\n    if (is_numeric($number) &&\
    \ $number > 0 && $number % 2 == 1) {\n      $sum += $number*$number;\n    }\n\
    \  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx6i8meca.php:29\n\
    Stack trace:\n#0 /tmp/tmpx6i8meca.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpx6i8meca.php\
    \ on line 29\n"
  timestamp: 1659823299
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $sum = 0;\n  foreach ($lst as $num) {\n    if (is_int($num) && $num > 0)\
    \ {\n      $sum += $num * $num;\n    }\n  }\n  return $sum * 2;\n}\n\necho double_the_difference(array(1,\
    \ 3, 2, 0));\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "28\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjx9c7vlj.php:30\n\
    Stack trace:\n#0 /tmp/tmpjx9c7vlj.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpjx9c7vlj.php\
    \ on line 30\n"
  timestamp: 1659823299
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $sum = 0;\n  $num = 0;\n  foreach ($lst as $i) {\n    if (gettype($i) ==\
    \ \"integer\" && $i > 0) {\n      $sum += pow($i, 2);\n      $num += 1;\n    }\n\
    \  }\n  if ($num == 0) {\n    return 0;\n  }\n  else {\n    return $sum;\n  }\n\
    }\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8fx19ii_.php:35\n\
    Stack trace:\n#0 /tmp/tmp8fx19ii_.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp8fx19ii_.php\
    \ on line 35\n"
  timestamp: 1659823299
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $squares = array_map(function($n) {\n    return $n * $n;\n  }, $lst);\n\
    \  $squares = array_filter($squares, function($n) {\n    return $n > 0 && $n %\
    \ 2 != 0;\n  });\n  $double = array_reduce($squares, function($acc, $n) {\n  \
    \  return $acc + $n;\n  }, 0);\n  return $double * 2;\n}\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpujee0gdj.php:31\n\
    Stack trace:\n#0 /tmp/tmpujee0gdj.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpujee0gdj.php\
    \ on line 31\n"
  timestamp: 1659823299
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\tif (count($lst) == 0) {\n\t\treturn 0;\n\t}\n\t$sum = 0;\n\tforeach ($lst\
    \ as $n) {\n\t\tif (is_int($n) && $n > 0) {\n\t\t\t$sum += pow($n, 2);\n\t\t}\n\
    \t}\n\treturn $sum * 2;\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcyj_2_dk.php:32\n\
    Stack trace:\n#0 /tmp/tmpcyj_2_dk.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpcyj_2_dk.php\
    \ on line 32\n"
  timestamp: 1659823299

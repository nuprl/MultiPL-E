language: php
name: HumanEval_151_double_the_difference
results:
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $odds = get_odds($lst);\n  $odds_squared = array_map(function($x) { return\
    \ $x * $x; }, $odds);\n  return array_sum($odds_squared);\n}\n\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function get_odds() in\
    \ /tmp/tmp7z1280af.php:14\nStack trace:\n#0 /tmp/tmp7z1280af.php(20): double_the_difference(Array)\n\
    #1 /tmp/tmp7z1280af.php(24): candidate(Array)\n#2 /tmp/tmp7z1280af.php(33): test()\n\
    #3 {main}\n  thrown in /tmp/tmp7z1280af.php on line 14\n"
  timestamp: 1659823299
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $squares = [];\n  foreach ($lst as $number) {\n    if ($number % 2 ===\
    \ 1) {\n      $squares[] = $number * $number;\n    }\n  }\n  return array_sum($squares);\n\
    }\necho double_the_difference([1, 3, 2, 0]) . PHP_EOL;\necho double_the_difference([-1,\
    \ -2, 0]) . PHP_EOL;\necho double_the_difference([9, -2]) . PHP_EOL;\necho double_the_difference([0])\
    \ . PHP_EOL;\necho double_the_difference([]) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "10\n0\n81\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpikcc4zsv.php:33\n\
    Stack trace:\n#0 /tmp/tmpikcc4zsv.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpikcc4zsv.php\
    \ on line 33\n"
  timestamp: 1659823299
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t$difference = 0;\n\tforeach ($lst as $key => $val) {\n\t\tif ($val % 2\
    \ != 0 && is_int($val)) {\n\t\t\t$difference += $val * $val;\n\t\t}\n\t}\n\treturn\
    \ $difference;\n}\n\necho double_the_difference(array(1, 3, 2, 0)) . \"\\n\";\n\
    echo double_the_difference(array(-1, -2, 0)) . \"\\n\";\necho double_the_difference(array(9,\
    \ -2)) . \"\\n\";\necho double_the_difference(array(0)) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "10\n1\n81\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx2x4js69.php:33\n\
    Stack trace:\n#0 /tmp/tmpx2x4js69.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpx2x4js69.php\
    \ on line 33\n"
  timestamp: 1659823299
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    return 0;\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxvsd6kt_.php:23\n\
    Stack trace:\n#0 /tmp/tmpxvsd6kt_.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpxvsd6kt_.php\
    \ on line 23\n"
  timestamp: 1659823299
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $count = 0;\n    foreach ($lst as $element) {\n        if (is_int($element)\
    \ && $element >= 0) {\n            if ($element % 2 == 1) {\n                $count\
    \ += pow($element, 2);\n            }\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppjhyzd53.php:31\n\
    Stack trace:\n#0 /tmp/tmppjhyzd53.php(39): test()\n#1 {main}\n  thrown in /tmp/tmppjhyzd53.php\
    \ on line 31\n"
  timestamp: 1659823299
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    if(empty($lst)) {\n        return 0;\n    }\n    $res = 0;\n    foreach($lst\
    \ as $el) {\n        if(is_int($el) && $el > 0 && $el % 2 == 1) {\n          \
    \  $res += $el * $el;\n        }\n    }\n    return $res * 2;\n}\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe729df36.php:31\n\
    Stack trace:\n#0 /tmp/tmpe729df36.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpe729df36.php\
    \ on line 31\n"
  timestamp: 1659823299
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (gettype($num) ==\
    \ \"integer\" && $num >= 0) {\n            if ($num % 2 == 1) {\n            \
    \    $sum += $num * $num;\n            }\n        }\n    }\n    return $sum;\n\
    }\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5ng0w1of.php:30\n\
    Stack trace:\n#0 /tmp/tmp5ng0w1of.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp5ng0w1of.php\
    \ on line 30\n"
  timestamp: 1659823299
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $return = 0;\n    if (empty($lst)) {\n        return $return;\n    }\n\
    \    $return = array_sum(array_map(function($n) {\n        if (is_int($n) && $n\
    \ > 0) {\n            return pow($n, 2);\n        }\n        return 0;\n    },\
    \ $lst));\n    return $return;\n}\nfunction candidate(...$args) {\n    return\
    \ double_the_difference(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5.0,\
    \ 4.0)) !== 25) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.1,\
    \ 0.2, 0.3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0,\
    \ -20.0, -30.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpch7y9sj3.php:32\n\
    Stack trace:\n#0 /tmp/tmpch7y9sj3.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpch7y9sj3.php\
    \ on line 32\n"
  timestamp: 1659823299
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $result = array_filter($lst, function($item) {\n        return $item\
    \ > 0 && is_int($item);\n    });\n    if (count($result) == 0) {\n        return\
    \ 0;\n    }\n    $result = array_map(function($item) {\n        return $item *\
    \ $item;\n    }, $result);\n    return 2 * array_sum($result);\n}\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpddt20nr0.php:31\n\
    Stack trace:\n#0 /tmp/tmpddt20nr0.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpddt20nr0.php\
    \ on line 31\n"
  timestamp: 1659823299
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $i = 0;\n    $new = array();\n    while ($i < count($lst)) {\n      \
    \  if ($lst[$i] > 0 && $lst[$i] % 2 != 0) {\n            array_push($new, $lst[$i]);\n\
    \        }\n        $i++;\n    }\n    $i = 0;\n    $sum = 0;\n    while ($i <\
    \ count($new)) {\n        $sum += pow($new[$i], 2);\n        $i++;\n    }\n  \
    \  return $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz3obn20v.php:36\n\
    Stack trace:\n#0 /tmp/tmpz3obn20v.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpz3obn20v.php\
    \ on line 36\n"
  timestamp: 1659823299
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    if(empty($lst)) {\n        return 0;\n    } else {\n        $odd_values\
    \ = [];\n        foreach($lst as $value) {\n            if($value > 0 && $value\
    \ % 2 != 0) {\n                array_push($odd_values, $value);\n            }\n\
    \        }\n        $sum = 0;\n        foreach($odd_values as $value) {\n    \
    \        $sum += pow($value, 2);\n        }\n        return $sum * 2;\n    }\n\
    }\necho double_the_difference([9, -2]);\necho double_the_difference([1, 3, 2,\
    \ 0]);\necho double_the_difference([-1, -2, 0]);\necho double_the_difference([0]);\n\
    function candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1622000\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdvoca2ax.php:40\n\
    Stack trace:\n#0 /tmp/tmpdvoca2ax.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpdvoca2ax.php\
    \ on line 40\n"
  timestamp: 1659823299
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $ret = 0;\n  foreach ($lst as $v) {\n    if ($v > 0 && is_int($v)) {\n\
    \      $ret += pow($v, 2);\n    }\n  }\n  return $ret;\n}\n\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0acpc8tc.php:29\n\
    Stack trace:\n#0 /tmp/tmp0acpc8tc.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp0acpc8tc.php\
    \ on line 29\n"
  timestamp: 1659823299
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $item) {\n        if ($item % 2 != 0\
    \ && is_int($item) && $item > 0) {\n            $sum += $item * $item;\n     \
    \   }\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ double_the_difference(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5.0,\
    \ 4.0)) !== 25) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.1,\
    \ 0.2, 0.3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0,\
    \ -20.0, -30.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmx6otiyx.php:29\n\
    Stack trace:\n#0 /tmp/tmpmx6otiyx.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpmx6otiyx.php\
    \ on line 29\n"
  timestamp: 1659823299
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t$odds = [];\n\tforeach ($lst as $value) {\n\t\tif ($value > 0 && $value\
    \ % 2 != 0) {\n\t\t\tarray_push($odds, $value);\n\t\t}\n\t}\n\t$sum = 0;\n\tforeach\
    \ ($odds as $value) {\n\t\t$sum += $value ** 2;\n\t}\n\treturn $sum;\n}\nfunction\
    \ candidate(...$args) {\n    return double_the_difference(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk8rsb0_o.php:32\n\
    Stack trace:\n#0 /tmp/tmpk8rsb0_o.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpk8rsb0_o.php\
    \ on line 32\n"
  timestamp: 1659823299
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  // your code here\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzykghh58.php:21\n\
    Stack trace:\n#0 /tmp/tmpzykghh58.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpzykghh58.php\
    \ on line 21\n"
  timestamp: 1659823299
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $sum = 0;\n  foreach ($lst as $number) {\n    if (is_numeric($number) &&\
    \ $number > 0 && $number % 2 == 1) {\n      $sum += $number*$number;\n    }\n\
    \  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx6i8meca.php:29\n\
    Stack trace:\n#0 /tmp/tmpx6i8meca.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpx6i8meca.php\
    \ on line 29\n"
  timestamp: 1659823299
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $sum = 0;\n  foreach ($lst as $num) {\n    if (is_int($num) && $num > 0)\
    \ {\n      $sum += $num * $num;\n    }\n  }\n  return $sum * 2;\n}\n\necho double_the_difference(array(1,\
    \ 3, 2, 0));\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "28\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjx9c7vlj.php:30\n\
    Stack trace:\n#0 /tmp/tmpjx9c7vlj.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpjx9c7vlj.php\
    \ on line 30\n"
  timestamp: 1659823299
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $sum = 0;\n  $num = 0;\n  foreach ($lst as $i) {\n    if (gettype($i) ==\
    \ \"integer\" && $i > 0) {\n      $sum += pow($i, 2);\n      $num += 1;\n    }\n\
    \  }\n  if ($num == 0) {\n    return 0;\n  }\n  else {\n    return $sum;\n  }\n\
    }\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8fx19ii_.php:35\n\
    Stack trace:\n#0 /tmp/tmp8fx19ii_.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp8fx19ii_.php\
    \ on line 35\n"
  timestamp: 1659823299
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $squares = array_map(function($n) {\n    return $n * $n;\n  }, $lst);\n\
    \  $squares = array_filter($squares, function($n) {\n    return $n > 0 && $n %\
    \ 2 != 0;\n  });\n  $double = array_reduce($squares, function($acc, $n) {\n  \
    \  return $acc + $n;\n  }, 0);\n  return $double * 2;\n}\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpujee0gdj.php:31\n\
    Stack trace:\n#0 /tmp/tmpujee0gdj.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpujee0gdj.php\
    \ on line 31\n"
  timestamp: 1659823299
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\tif (count($lst) == 0) {\n\t\treturn 0;\n\t}\n\t$sum = 0;\n\tforeach ($lst\
    \ as $n) {\n\t\tif (is_int($n) && $n > 0) {\n\t\t\t$sum += pow($n, 2);\n\t\t}\n\
    \t}\n\treturn $sum * 2;\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcyj_2_dk.php:32\n\
    Stack trace:\n#0 /tmp/tmpcyj_2_dk.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpcyj_2_dk.php\
    \ on line 32\n"
  timestamp: 1659823299
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    // Write your code here\n    // To print results to the standard output\
    \ you can use print\n    // Example: print \"Hello world!\";\n}\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl1hi9mrs.php:23\n\
    Stack trace:\n#0 /tmp/tmpl1hi9mrs.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpl1hi9mrs.php\
    \ on line 23\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  if (count($lst) == 0) {\n    return 0;\n  }\n  $lst = array_filter($lst,\
    \ function($n) {\n    return !preg_match('/^\\d*\\.\\d+$/', $n) and ($n >= 0)\
    \ and ($n == round($n));\n  });\n  $lst = array_map(function($n) {\n    return\
    \ ($n % 2) ? $n * $n : 0;\n  }, $lst);\n  return array_sum($lst) * 2;\n}\nfunction\
    \ candidate(...$args) {\n    return double_the_difference(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkdk_eo75.php:31\n\
    Stack trace:\n#0 /tmp/tmpkdk_eo75.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpkdk_eo75.php\
    \ on line 31\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    return array_reduce($lst, function($carry, $item) {\n        if ($item\
    \ % 2 == 1 && is_int($item)) {\n            $carry += $item * $item;\n       \
    \ }\n        return $carry;\n    }, 0);\n}\n\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7edu013m.php:28\n\
    Stack trace:\n#0 /tmp/tmp7edu013m.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp7edu013m.php\
    \ on line 28\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $odd_squares = array_filter($lst, function($x) {\n    return (gettype($x)\
    \ == \"integer\" && $x >= 0 && $x % 2 == 1);\n  });\n  $odd_squares = array_map(function($x)\
    \ { return $x * $x; }, $odd_squares);\n  return array_sum($odd_squares) * 2;\n\
    }\necho double_the_difference(array(1, 3, 2, 0)) . \"\\n\";\necho double_the_difference(array(-1,\
    \ -2, 0)) . \"\\n\";\necho double_the_difference(array(9, -2)) . \"\\n\";\necho\
    \ double_the_difference(array(0)) . \"\\n\";\necho double_the_difference(array())\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "20\n0\n162\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplcnds23v.php:31\n\
    Stack trace:\n#0 /tmp/tmplcnds23v.php(39): test()\n#1 {main}\n  thrown in /tmp/tmplcnds23v.php\
    \ on line 31\n"
  timestamp: 1659977939
- exit_code: 0
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $x) {\n        if (is_numeric($x) &&\
    \ intval($x) % 2 == 1) {\n            $sum += intval($x) * intval($x);\n     \
    \   }\n    }\n    return $sum;\n}\nfunction candidate(...$args) {\n    return\
    \ double_the_difference(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5.0,\
    \ 4.0)) !== 25) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.1,\
    \ 0.2, 0.3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0,\
    \ -20.0, -30.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $sum = 0;\n  foreach ($lst as $x) {\n    if (is_int($x) && $x >= 0 && $x\
    \ % 2 == 1) {\n      $sum += $x*$x;\n    }\n  }\n  return $sum;\n}\n\nclass DoubleTheDifferenceTest\
    \ extends PHPUnit_Framework_TestCase {\n  public function testSolution() {\n \
    \   $this->assertEquals(0, double_the_difference(array(0)));\n    $this->assertEquals(0,\
    \ double_the_difference(array(-1, -2, 0)));\n    $this->assertEquals(81, double_the_difference(array(9,\
    \ -2)));\n    $this->assertEquals(10, double_the_difference(array(1, 3, 2, 0)));\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Class \"PHPUnit_Framework_TestCase\" not\
    \ found in /tmp/tmpvdiffk2j.php:23\nStack trace:\n#0 {main}\n  thrown in /tmp/tmpvdiffk2j.php\
    \ on line 23\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if ($num % 2 != 0 and\
    \ $num > 0 and is_int($num)) {\n            $sum += $num * $num;\n        }\n\
    \    }\n    return $sum;\n}\n\necho double_the_difference(array(1, 3, 2, 0));\n\
    echo double_the_difference(array(-1, -2, 0));\necho double_the_difference(array(9,\
    \ -2));\necho double_the_difference(array(0));\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "100810\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_u00o3cz.php:33\n\
    Stack trace:\n#0 /tmp/tmp_u00o3cz.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp_u00o3cz.php\
    \ on line 33\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk503ctp7.php:20\n\
    Stack trace:\n#0 /tmp/tmpk503ctp7.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpk503ctp7.php\
    \ on line 20\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $even = 0;\n    $odd = 0;\n    foreach ($lst as $value) {\n        if\
    \ (is_int($value) && $value >= 0) {\n            if ($value % 2 == 0) {\n    \
    \            $even += $value;\n            } else {\n                $odd += $value;\n\
    \            }\n        }\n    }\n    return ($even - $odd) * 2;\n}\nfunction\
    \ candidate(...$args) {\n    return double_the_difference(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbduveay8.php:33\n\
    Stack trace:\n#0 /tmp/tmpbduveay8.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpbduveay8.php\
    \ on line 33\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t$results = array();\n\tforeach ($lst as $value) {\n\t\tif($value > 0 &&\
    \ $value % 2 == 1) {\n\t\t\t$results[] = $value;\n\t\t}\n\t}\n\t$sum = 0;\n\t\
    foreach ($results as $value) {\n\t\t$sum += $value * $value;\n\t}\n\treturn $sum;\n\
    }\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoxyz0ezi.php:32\n\
    Stack trace:\n#0 /tmp/tmpoxyz0ezi.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpoxyz0ezi.php\
    \ on line 32\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $answer = 0;\n    foreach ($lst as $number) {\n        if (is_numeric($number)\
    \ && intval($number) === $number && $number >= 0) {\n            if ($number %\
    \ 2 !== 0) {\n                $answer += $number ** 2;\n            }\n      \
    \  }\n    }\n    return $answer;\n}\nfunction candidate(...$args) {\n    return\
    \ double_the_difference(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5.0,\
    \ 4.0)) !== 25) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.1,\
    \ 0.2, 0.3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0,\
    \ -20.0, -30.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2p8cdwfm.php:30\n\
    Stack trace:\n#0 /tmp/tmp2p8cdwfm.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp2p8cdwfm.php\
    \ on line 30\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $total = 0;\n    foreach ($lst as $item) {\n        if ($item % 2 !=\
    \ 0) {\n            $total += $item ** 2;\n        }\n    }\n    return $total;\n\
    }\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1_o19nyf.php:28\n\
    Stack trace:\n#0 /tmp/tmp1_o19nyf.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp1_o19nyf.php\
    \ on line 28\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $sum = 0;\n  foreach ($lst as $number) {\n    if (is_int($number) && $number\
    \ >= 0 && $number % 2 == 1) {\n      $sum += $number * $number;\n    }\n  }\n\
    \  return $sum;\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpononk7lr.php:29\n\
    Stack trace:\n#0 /tmp/tmpononk7lr.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpononk7lr.php\
    \ on line 29\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $sum = 0;\n  for ($i = 0; $i < count($lst); $i++) {\n    if ($lst[$i] <\
    \ 0) {\n      continue;\n    }\n    if ($lst[$i] != intval($lst[$i])) {\n    \
    \  continue;\n    }\n    if ($lst[$i] % 2 === 0) {\n      continue;\n    }\n \
    \   $sum += pow($lst[$i], 2);\n  }\n  return $sum;\n}\n\n$input1 = array(1, 3,\
    \ 2, 0);\n$input2 = array(-1, -2, 0);\n$input3 = array(9, -2);\n$input4 = array(0);\n\
    $input5 = array();\n\necho double_the_difference($input1) . \"\\n\";\necho double_the_difference($input2)\
    \ . \"\\n\";\necho double_the_difference($input3) . \"\\n\";\necho double_the_difference($input4)\
    \ . \"\\n\";\necho double_the_difference($input5) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "10\n0\n81\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv9lovz6x.php:47\n\
    Stack trace:\n#0 /tmp/tmpv9lovz6x.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpv9lovz6x.php\
    \ on line 47\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    if (empty($lst))\n        return 0;\n    $odd_sum = 0;\n    foreach ($lst\
    \ as $n) {\n        if (!is_int($n) || $n < 0)\n            continue;\n      \
    \  if ($n % 2 == 1)\n            $odd_sum += $n * $n;\n    }\n    return $odd_sum\
    \ * 2;\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1gbq_y31.php:32\n\
    Stack trace:\n#0 /tmp/tmp1gbq_y31.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp1gbq_y31.php\
    \ on line 32\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $squares = 0;\n    foreach ($lst as $item) {\n        if ($item > 0 &&\
    \ is_int($item)) {\n            if ($item % 2 !== 0) {\n                $squares\
    \ += pow($item, 2);\n            }\n        }\n    }\n    return $squares;\n}\n\
    \nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprxhpvk5m.php:31\n\
    Stack trace:\n#0 /tmp/tmprxhpvk5m.php(39): test()\n#1 {main}\n  thrown in /tmp/tmprxhpvk5m.php\
    \ on line 31\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  if (empty($lst)) {\n    return 0;\n  }\n  $odd_squares = array_map(function($el)\
    \ {\n    return $el > 0 && $el % 2 == 1 ? $el * $el : 0;\n  }, $lst);\n  return\
    \ array_sum($odd_squares) * 2;\n}\n\nfunction candidate(...$args) {\n    return\
    \ double_the_difference(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5.0,\
    \ 4.0)) !== 25) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.1,\
    \ 0.2, 0.3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0,\
    \ -20.0, -30.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbw30lqxi.php:29\n\
    Stack trace:\n#0 /tmp/tmpbw30lqxi.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpbw30lqxi.php\
    \ on line 29\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $item) {\n        if ($item % 2 == 1\
    \ && $item > 0) {\n            $sum += pow($item, 2);\n        }\n    }\n    return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy4_x1xb3.php:29\n\
    Stack trace:\n#0 /tmp/tmpy4_x1xb3.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpy4_x1xb3.php\
    \ on line 29\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $numbers = array_filter($lst, function($n) { return is_numeric($n) && $n\
    \ >= 0 && $n % 2 == 1; });\n  return array_reduce($numbers, function($total, $n)\
    \ { return $total + pow($n, 2); }, 0);\n}\n\nif (count(debug_backtrace()) == 0)\
    \ {\n  require 'test.php';\n  checkTest(__FILE__, 'test1');\n  checkTest(__FILE__,\
    \ 'test2');\n  checkTest(__FILE__, 'test3');\n  checkTest(__FILE__, 'test4');\n\
    }\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: require(test.php): Failed to open stream: No such file or directory\
    \ in /tmp/tmpnag11w53.php on line 19\n\nFatal error: Uncaught Error: Failed opening\
    \ required 'test.php' (include_path='.:') in /tmp/tmpnag11w53.php:19\nStack trace:\n\
    #0 {main}\n  thrown in /tmp/tmpnag11w53.php on line 19\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  if (count($lst) === 0) {\n    return 0;\n  }\n  $filtered = array_filter($lst,\
    \ function($elem) {\n    return is_int($elem) && $elem > 0;\n  });\n  $mapped\
    \ = array_map(function($elem) {\n    return $elem ** 2;\n  }, $filtered);\n  return\
    \ array_sum($mapped) * 2;\n}\n\nassert_options(ASSERT_BAIL, 1);\nassert(double_the_difference(array(1,\
    \ 3, 2, 0)) === 10);\nassert(double_the_difference(array(-1, -2, 0)) === 0);\n\
    assert(double_the_difference(array(9, -2)) === 81);\nassert(double_the_difference(array(0))\
    \ === 0);\nassert(double_the_difference(array()) === 0);\n\necho \"All test passed.\
    \ double_the_difference is good to go.\\n\";\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught AssertionError: assert(double_the_difference([1,\
    \ 3, 2, 0]) === 10) in /tmp/tmpfhi7exzs.php:27\nStack trace:\n#0 /tmp/tmpfhi7exzs.php(27):\
    \ assert(false, 'assert(double_t...')\n#1 {main}\n  thrown in /tmp/tmpfhi7exzs.php\
    \ on line 27\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $sum = 0;\n  foreach ($lst as $item) {\n    if ($item % 2 == 1 && is_int($item)\
    \ && $item > 0) {\n      $sum += $item*$item;\n    }\n  }\n  return $sum*2;\n\
    }\n\necho double_the_difference(array(1, 3, 2, 0));\necho \"<br>\";\necho double_the_difference(array(-1,\
    \ -2, 0));\necho \"<br>\";\necho double_the_difference(array(9, -2));\necho \"\
    <br>\";\necho double_the_difference(array(0));\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "20<br>0<br>162<br>0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjpunwfq1.php:36\n\
    Stack trace:\n#0 /tmp/tmpjpunwfq1.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpjpunwfq1.php\
    \ on line 36\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    if (empty($lst)) {\n        return 0;\n    }\n    $sum_of_squares = 0;\n\
    \    foreach ($lst as $num) {\n        if (is_int($num) && $num >= 0 && $num %\
    \ 2 == 1) {\n            $sum_of_squares += $num ** 2;\n        }\n    }\n   \
    \ return $sum_of_squares * 2;\n}\n\nfunction candidate(...$args) {\n    return\
    \ double_the_difference(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5.0,\
    \ 4.0)) !== 25) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.1,\
    \ 0.2, 0.3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0,\
    \ -20.0, -30.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvfrkkr54.php:32\n\
    Stack trace:\n#0 /tmp/tmpvfrkkr54.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpvfrkkr54.php\
    \ on line 32\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $x = array_filter($lst, function($elem) { return (is_int($elem) && $elem\
    \ >= 0); });\n  return empty($x) ? 0 : 2 * (array_sum($x) - array_sum(array_map(function($elem)\
    \ { return $elem * $elem; }, $x)));\n}\n\nfunction candidate(...$args) {\n   \
    \ return double_the_difference(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4og6eg1s.php:24\n\
    Stack trace:\n#0 /tmp/tmp4og6eg1s.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp4og6eg1s.php\
    \ on line 24\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\tif (empty($lst)) {\n\t\treturn 0;\n\t}\n\t$total = 0;\n\tforeach ($lst\
    \ as $num) {\n\t\tif (is_int($num) && $num > 0) {\n\t\t\tif ($num % 2 == 1) {\n\
    \t\t\t\t$total += $num ** 2;\n\t\t\t}\n\t\t}\n\t}\n\treturn $total * 2;\n}\n\n\
    echo double_the_difference(array(9, -2));\nfunction candidate(...$args) {\n  \
    \  return double_the_difference(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "162\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc13hd0ta.php:35\n\
    Stack trace:\n#0 /tmp/tmpc13hd0ta.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpc13hd0ta.php\
    \ on line 35\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t$sum = 0;\n\tforeach ($lst as $num) {\n\t\tif (is_int($num) && $num % 2\
    \ == 1) {\n\t\t\t$sum += $num ** 2;\n\t\t}\n\t}\n\treturn $sum * 2;\n}\nfunction\
    \ candidate(...$args) {\n    return double_the_difference(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpypcnkiwn.php:28\n\
    Stack trace:\n#0 /tmp/tmpypcnkiwn.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpypcnkiwn.php\
    \ on line 28\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    if (empty($lst)) {\n        return 0;\n    }\n    $sum = 0;\n    foreach\
    \ ($lst as $item) {\n        if (is_int($item) && $item > 0 && $item % 2 != 0)\
    \ {\n            $sum += $item * $item;\n        }\n    }\n    return $sum * 2;\n\
    }\n$lst = array(1, 3, 2, 0);\n$sum = double_the_difference($lst);\nprint_r($sum);\n\
    \nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "20\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy2_k2h_k.php:35\n\
    Stack trace:\n#0 /tmp/tmpy2_k2h_k.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpy2_k2h_k.php\
    \ on line 35\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $total=0;\n  for ($i=0; $i < count($lst); $i++) {\n    if(($lst[$i]%2)\
    \ != 0) {\n      $total += pow($lst[$i], 2);\n    }\n  }\n  return $total;\n}\n\
    function candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpie6_4jao.php:28\n\
    Stack trace:\n#0 /tmp/tmpie6_4jao.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpie6_4jao.php\
    \ on line 28\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $sum = 0;\n  foreach ($lst as $n) {\n    if (is_int($n) && $n >= 0 && $n\
    \ % 2 !== 0) {\n      $sum += $n * $n;\n    }\n  }\n  return $sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return double_the_difference(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe_n44x3g.php:29\n\
    Stack trace:\n#0 /tmp/tmpe_n44x3g.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpe_n44x3g.php\
    \ on line 29\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t$sum = 0;\n\tforeach ($lst as $val) {\n\t\tif ((is_int($val) || is_float($val))\
    \ && $val > 0) {\n\t\t\t$sum += $val * $val;\n\t\t}\n\t}\n\treturn $sum;\n}\n\n\
    function candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_9wxphv5.php:29\n\
    Stack trace:\n#0 /tmp/tmp_9wxphv5.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp_9wxphv5.php\
    \ on line 29\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $odds = array_filter($lst, function($n) {\n        return is_int($n)\
    \ && $n > 0 && $n % 2 !== 0;\n    });\n    $sqrs = array_map(function($n) {\n\
    \        return $n * $n;\n    }, $odds);\n    return 2 * array_sum($sqrs);\n}\n\
    \n$lst = array(1, 3, 2, 0);\necho double_the_difference($lst) . PHP_EOL;\n$lst\
    \ = array(-1, -2, 0);\necho double_the_difference($lst) . PHP_EOL;\n$lst = array(9,\
    \ -2);\necho double_the_difference($lst) . PHP_EOL;\n$lst = array(0);\necho double_the_difference($lst)\
    \ . PHP_EOL;\n$lst = array();\necho double_the_difference($lst) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return double_the_difference(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "20\n0\n162\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3cf2scv6.php:39\n\
    Stack trace:\n#0 /tmp/tmp3cf2scv6.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp3cf2scv6.php\
    \ on line 39\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    $n = count($lst);\n    for ($i = 0; $i < $n; $i++) {\n\
    \        if (is_integer($lst[$i]) && $lst[$i] >= 0) {\n            if ($lst[$i]\
    \ % 2 == 1) {\n                $sum += pow($lst[$i], 2);\n            }\n    \
    \    }\n    }\n    return $sum;\n}\nfunction candidate(...$args) {\n    return\
    \ double_the_difference(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5.0,\
    \ 4.0)) !== 25) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.1,\
    \ 0.2, 0.3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0,\
    \ -20.0, -30.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpas0pnmdb.php:31\n\
    Stack trace:\n#0 /tmp/tmpas0pnmdb.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpas0pnmdb.php\
    \ on line 31\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $sum = 0;\n  foreach ($lst as $item) {\n    if (is_int($item) && $item\
    \ > 0) {\n      $sum += $item ** 2;\n    }\n  }\n  return $sum * 2;\n}\n\nfunction\
    \ candidate(...$args) {\n    return double_the_difference(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmtik_sqs.php:29\n\
    Stack trace:\n#0 /tmp/tmpmtik_sqs.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpmtik_sqs.php\
    \ on line 29\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  if (count($lst)==0) {\n    return 0;\n  }\n  $new_lst = array();\n  for\
    \ ($i=0; $i<count($lst); $i++) {\n    if ($lst[$i] > 0 && intval($lst[$i]) ==\
    \ $lst[$i]) {\n      array_push($new_lst, $lst[$i]);\n    }\n  }\n  $sum = 0;\n\
    \  foreach ($new_lst as $i) {\n    if ($i % 2 != 0) {\n      $sum += $i*$i;\n\
    \    }\n  }\n  return $sum*2;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa35zfwpn.php:37\n\
    Stack trace:\n#0 /tmp/tmpa35zfwpn.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpa35zfwpn.php\
    \ on line 37\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    $odds = array_filter($lst, function($x) { return $x %\
    \ 2 != 0; });\n    foreach ($odds as $x) {\n        $sum += pow($x, 2);\n    }\n\
    \    return $sum;\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkxsqvhp6.php:28\n\
    Stack trace:\n#0 /tmp/tmpkxsqvhp6.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpkxsqvhp6.php\
    \ on line 28\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $i) {\n        if (gettype($i) == \"\
    integer\" && $i > 0) {\n            $sum += pow($i, 2);\n        }\n    }\n  \
    \  return $sum * 2;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3d0tuxyh.php:28\n\
    Stack trace:\n#0 /tmp/tmp3d0tuxyh.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp3d0tuxyh.php\
    \ on line 28\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    // NOTE: I do not love this syntax ...\n    return array_reduce(array_filter($lst,\
    \ function($n) {\n        return is_int($n) && $n > 0;\n    }), function($a, $n)\
    \ {\n        return $a + $n * $n;\n    }, 0);\n}\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyqw2ifhu.php:27\n\
    Stack trace:\n#0 /tmp/tmpyqw2ifhu.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpyqw2ifhu.php\
    \ on line 27\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return\
    \ $sum * 2;\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmxkndbf8.php:29\n\
    Stack trace:\n#0 /tmp/tmpmxkndbf8.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpmxkndbf8.php\
    \ on line 29\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $result = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $result += pow($num, 2);\n        }\n    }\n   \
    \ return $result;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplt8knok3.php:28\n\
    Stack trace:\n#0 /tmp/tmplt8knok3.php(36): test()\n#1 {main}\n  thrown in /tmp/tmplt8knok3.php\
    \ on line 28\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $lst = array_filter($lst, function($v) { return $v > 0 && is_int($v);\
    \ });\n    if (empty($lst)) {\n        return 0;\n    }\n    $even_sum = array_sum(array_filter($lst,\
    \ function($v) { return $v % 2 == 0; }));\n    $odd_sum = array_sum(array_filter($lst,\
    \ function($v) { return $v % 2 == 1; }));\n    return pow($even_sum - $odd_sum,\
    \ 2);\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb9rc_tj0.php:28\n\
    Stack trace:\n#0 /tmp/tmpb9rc_tj0.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpb9rc_tj0.php\
    \ on line 28\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $oddSquares = array_filter($lst, function($item) {\n        return $item\
    \ % 2 !== 0;\n    });\n    $oddSquares = array_map(function($item) {\n       \
    \ return $item * $item;\n    }, $oddSquares);\n    $sumOfOddSquares = array_sum($oddSquares);\n\
    \    return $sumOfOddSquares * 2;\n}\nfunction candidate(...$args) {\n    return\
    \ double_the_difference(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5.0,\
    \ 4.0)) !== 25) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.1,\
    \ 0.2, 0.3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0,\
    \ -20.0, -30.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp62ml8hrf.php:29\n\
    Stack trace:\n#0 /tmp/tmp62ml8hrf.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp62ml8hrf.php\
    \ on line 29\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_int($lst[$i])\
    \ && $lst[$i] >= 0) {\n            if ($lst[$i] % 2 != 0) {\n                $sum\
    \ += $lst[$i] * $lst[$i];\n            }\n        }\n    }\n    return $sum;\n\
    }\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmkjhf9m6.php:30\n\
    Stack trace:\n#0 /tmp/tmpmkjhf9m6.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpmkjhf9m6.php\
    \ on line 30\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $odd_lst = array_filter($lst, function($a) {\n        return $a % 2 !=\
    \ 0 && is_int($a);\n    });\n    $sum = array_reduce($odd_lst, function($a, $b)\
    \ {\n        return $a + $b;\n    });\n    return $sum * 2;\n}\n\necho double_the_difference(array(9,\
    \ -2));\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "18\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4gkmk8_v.php:30\n\
    Stack trace:\n#0 /tmp/tmp4gkmk8_v.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4gkmk8_v.php\
    \ on line 30\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    if(empty($lst)){\n      return 0;\n    }\n    $odd = array();\n    $square\
    \ = array();\n    foreach($lst as $key=>$val){\n      if($val%2 == 1 && is_int($val)){\n\
    \        array_push($odd, $val);\n      }\n    }\n    if(empty($odd)){\n     \
    \ return 0;\n    }\n    foreach($odd as $key=>$val){\n      array_push($square,\
    \ $val**2);\n    }\n    $max = max($square);\n    $min = min($square);\n    return\
    \ $max-$min;\n}\n    $lst = array(1, 3, 2, 0);\n    $lst2 = array(-1, -2, 0);\n\
    \    $lst3 = array(9, -2);\n    $lst4 = array(0);\n    $lst5 = array();\n    $lst6\
    \ = array(1,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1\n\
    function candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmpvkjzkdsu.php
    on line 40

    '
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $item) {\n        if (is_int($item) &&\
    \ $item > 0) {\n            $sum += $item * $item;\n        }\n    }\n    return\
    \ $sum * 2;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2wf1idle.php:28\n\
    Stack trace:\n#0 /tmp/tmp2wf1idle.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp2wf1idle.php\
    \ on line 28\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $diff = array_diff($lst, array_filter($lst, function($v) { return ($v\
    \ < 0 || !is_int($v)); }));\n    $odds = array_filter($diff, function($v) { return\
    \ ($v % 2); });\n    $sum = array_sum(array_map(function($v) { return $v * $v;\
    \ }, $odds));\n    return $sum * 2;\n}\n\nfunction candidate(...$args) {\n   \
    \ return double_the_difference(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpymi8_tif.php:26\n\
    Stack trace:\n#0 /tmp/tmpymi8_tif.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpymi8_tif.php\
    \ on line 26\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t$sum = 0;\n\tfor ($i = 0; $i < count($lst); $i++) {\n\t\tif (is_int($lst[$i])\
    \ && $lst[$i] > 0) {\n\t\t\t$sum += $lst[$i] * $lst[$i];\n\t\t}\n\t}\n\treturn\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt77eo4um.php:28\n\
    Stack trace:\n#0 /tmp/tmpt77eo4um.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpt77eo4um.php\
    \ on line 28\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $sum = 0;\n  foreach ($lst as $num) {\n    if ($num % 2 !== 0 and is_int($num)\
    \ and $num > 0) {\n      $sum += pow($num, 2);\n    }\n  }\n  return $sum;\n}\n\
    function candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaee6hf7q.php:28\n\
    Stack trace:\n#0 /tmp/tmpaee6hf7q.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpaee6hf7q.php\
    \ on line 28\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $filtered = array_filter($lst, function($x) {\n        return ($x > 0\
    \ && (int)$x === $x);\n    });\n    $odd_squares = array_map(function($x) {\n\
    \        return $x * $x;\n    }, array_filter($filtered, function($x) {\n    \
    \    return $x % 2 == 1;\n    }));\n    return array_sum($odd_squares) * 2;\n\
    }\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_p29bavc.php:30\n\
    Stack trace:\n#0 /tmp/tmp_p29bavc.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp_p29bavc.php\
    \ on line 30\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t// TODO: implement me\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1zdixzx7.php:21\n\
    Stack trace:\n#0 /tmp/tmp1zdixzx7.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp1zdixzx7.php\
    \ on line 21\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if (is_int($lst[$i])\
    \ && $lst[$i] > 0) {\n            if ($lst[$i] % 2 == 1) {\n                $sum\
    \ += $lst[$i] * $lst[$i];\n            }\n        }\n    }\n    return $sum;\n\
    }\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqla8y1re.php:30\n\
    Stack trace:\n#0 /tmp/tmpqla8y1re.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpqla8y1re.php\
    \ on line 30\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if ($num > 0 && $num\
    \ % 2 == 1) {\n            $sum += $num*$num;\n        }\n    }\n    return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9au2boxt.php:29\n\
    Stack trace:\n#0 /tmp/tmp9au2boxt.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp9au2boxt.php\
    \ on line 29\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $i = 0;\n    $result = 0;\n    $count = count($lst);\n    while ($i <\
    \ $count) {\n        if ($lst[$i] % 2 !== 0) {\n            $result += pow($lst[$i],\
    \ 2);\n        }\n        $i += 1;\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpav43hq2w.php:31\n\
    Stack trace:\n#0 /tmp/tmpav43hq2w.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpav43hq2w.php\
    \ on line 31\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t$sum=0;\n\tforeach ($lst as $value) {\n\t\tif (is_int($value)&&($value%2!=0)&&($value>0))\
    \ {\n\t\t\t$sum += $value * $value;\n\t\t}\n\t}\n\treturn $sum;\n}\n\necho double_the_difference(array(1,\
    \ 3, 2, 0));\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "10\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppluqi1k6.php:30\n\
    Stack trace:\n#0 /tmp/tmppluqi1k6.php(38): test()\n#1 {main}\n  thrown in /tmp/tmppluqi1k6.php\
    \ on line 30\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $count = 0;\n  for ($i = 0; $i < count($lst); $i++) {\n    if (is_int($lst[$i])\
    \ && $lst[$i] > 0) {\n      if ($lst[$i] % 2 == 1) {\n        $count += $lst[$i]\
    \ ** 2;\n      }\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzoyqbl9a.php:31\n\
    Stack trace:\n#0 /tmp/tmpzoyqbl9a.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpzoyqbl9a.php\
    \ on line 31\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $n) {\n        if (is_int($n) && $n >\
    \ 0) {\n            $sum += $n * $n;\n        }\n    }\n    return $sum * 2;\n\
    }\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_d41x20t.php:29\n\
    Stack trace:\n#0 /tmp/tmp_d41x20t.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp_d41x20t.php\
    \ on line 29\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    if (count($lst) == 0) {\n        return 0;\n    }\n    // In order to\
    \ square a number, multiply it by itself.\n    $arr = array_map(function($num)\
    \ {\n        if (is_int($num) && $num > 0) {\n            return $num * $num;\n\
    \        }\n        return 0;\n    }, $lst);\n    $sum = array_sum($arr);\n  \
    \  return $sum * 2;\n}\n\necho double_the_difference(array(9, -2));\n\nfunction\
    \ candidate(...$args) {\n    return double_the_difference(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "162\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9kx5xive.php:36\n\
    Stack trace:\n#0 /tmp/tmp9kx5xive.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp9kx5xive.php\
    \ on line 36\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    if (empty($lst)) {\n        return 0;\n    }\n    $odds = [];\n    foreach\
    \ ($lst as $item) {\n        if (is_numeric($item) && $item >= 0 && $item % 2\
    \ != 0) {\n            $odds[] = $item;\n        }\n    }\n    $sum = 0;\n   \
    \ foreach ($odds as $odd) {\n        $sum += pow($odd, 2);\n    }\n    return\
    \ $sum * 2;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqzqlb4jk.php:35\n\
    Stack trace:\n#0 /tmp/tmpqzqlb4jk.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpqzqlb4jk.php\
    \ on line 35\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $ret = 0;\n    foreach ($lst as $item) {\n        if (is_int($item) &&\
    \ $item > 0 && $item % 2 != 0) {\n            $ret += $item * $item;\n       \
    \ }\n    }\n    return $ret;\n}\n\nclass UnitTests extends PHPUnit_Framework_TestCase\
    \ {\n    public function test_double_the_difference() {\n        $this->assertEquals(10,\
    \ double_the_difference(array(1, 3, 2, 0)));\n        $this->assertEquals(0, double_the_difference(array(-1,\
    \ -2, 0)));\n        $this->assertEquals(81, double_the_difference(array(9, -2)));\n\
    \        $this->assertEquals(0, double_the_difference(array(0)));\n        $this->assertEquals(0,\
    \ double_the_difference(array()));\n    }\n}\n\n$t = new UnitTests();\n$t->test_double_the_difference();\n\
    function candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Class \"PHPUnit_Framework_TestCase\" not\
    \ found in /tmp/tmpv9f9ikmm.php:23\nStack trace:\n#0 {main}\n  thrown in /tmp/tmpv9f9ikmm.php\
    \ on line 23\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $odd_numbers = array_filter($lst, function($x) { return ($x % 2) != 0;\
    \ });\n    return array_reduce($odd_numbers, function($sum, $x) { return $sum\
    \ + pow($x, 2); }, 0);\n}\necho double_the_difference(array(1, 3, 2, 0)) . \"\\\
    n\";\necho double_the_difference(array(-1, -2, 0)) . \"\\n\";\necho double_the_difference(array(9,\
    \ -2)) . \"\\n\";\necho double_the_difference(array(0)) . \"\\n\";\necho double_the_difference(array())\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "10\n1\n81\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4svawisn.php:28\n\
    Stack trace:\n#0 /tmp/tmp4svawisn.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp4svawisn.php\
    \ on line 28\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    return array_reduce($lst, function($carry, $item) {\n        if (!is_numeric($item)\
    \ || $item < 0) {\n            return $carry;\n        }\n        return $carry\
    \ + $item ** 2;\n    }, 0);\n}\necho double_the_difference([1, 3, 2, 0]);\nfunction\
    \ candidate(...$args) {\n    return double_the_difference(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuwr9oors.php:28\n\
    Stack trace:\n#0 /tmp/tmpuwr9oors.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpuwr9oors.php\
    \ on line 28\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  // TODO\n  $sum = 0;\n  foreach ($lst as $item) {\n    if ($item < 0) {\n\
    \      continue;\n    }\n    if (!is_int($item)) {\n      continue;\n    }\n \
    \   if ($item % 2 === 0) {\n      continue;\n    }\n    $sum += pow($item, 2);\n\
    \  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9fsd62fd.php:37\n\
    Stack trace:\n#0 /tmp/tmp9fsd62fd.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp9fsd62fd.php\
    \ on line 37\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum_of_odds = 0;\n    foreach ($lst as $item) {\n        if ($item %\
    \ 2 !== 0) {\n            $sum_of_odds += $item;\n        }\n    }\n    return\
    \ $sum_of_odds * 2;\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp22kzwytf.php:29\n\
    Stack trace:\n#0 /tmp/tmp22kzwytf.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp22kzwytf.php\
    \ on line 29\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    // your code here\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgfh8d6hs.php:22\n\
    Stack trace:\n#0 /tmp/tmpgfh8d6hs.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpgfh8d6hs.php\
    \ on line 22\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $double_the_difference = 0;\n    foreach ($lst as $number) {\n      \
    \  if ($number % 2 !== 0) {\n            $double_the_difference += $number * $number;\n\
    \        }\n    }\n    return $double_the_difference;\n}\n\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpof0ddv98.php:29\n\
    Stack trace:\n#0 /tmp/tmpof0ddv98.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpof0ddv98.php\
    \ on line 29\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $answer = 0;\n    foreach ($lst as $val) {\n        if (is_int($val)\
    \ and $val > 0) {\n            $answer += $val * $val;\n        }\n    }\n   \
    \ return $answer;\n}\necho double_the_difference(array(1, 3, 2, 0));\necho double_the_difference(array(-1,\
    \ -2, 0));\necho double_the_difference(array(9, -2));\necho double_the_difference(array(0));\n\
    echo double_the_difference(array());\nfunction candidate(...$args) {\n    return\
    \ double_the_difference(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5.0,\
    \ 4.0)) !== 25) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.1,\
    \ 0.2, 0.3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0,\
    \ -20.0, -30.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1408100\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmktveq5v.php:33\n\
    Stack trace:\n#0 /tmp/tmpmktveq5v.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpmktveq5v.php\
    \ on line 33\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    if (empty($lst)) {\n        return 0;\n    }\n    $total = 0;\n    foreach\
    \ ($lst as $num) {\n        if ($num % 2 == 1) {\n            $total += $num *\
    \ $num;\n        }\n    }\n    return $total * 2;\n}\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq01usx5v.php:31\n\
    Stack trace:\n#0 /tmp/tmpq01usx5v.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpq01usx5v.php\
    \ on line 31\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $item) {\n        if (!is_int($item)\
    \ || $item < 0) {\n            continue;\n        }\n        if ($item % 2 ==\
    \ 1) {\n            $sum += $item * $item;\n        }\n    }\n    return $sum;\n\
    }\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzssrdv6n.php:31\n\
    Stack trace:\n#0 /tmp/tmpzssrdv6n.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpzssrdv6n.php\
    \ on line 31\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $sum = 0;\n  foreach ($lst as $num) {\n    if (is_int($num) && $num >=\
    \ 0 && $num % 2 != 0) {\n      $sum += $num * $num;\n    }\n  }\n  return $sum;\n\
    }\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsq700z41.php:28\n\
    Stack trace:\n#0 /tmp/tmpsq700z41.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpsq700z41.php\
    \ on line 28\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $n) {\n        if (is_int($n) && $n >=\
    \ 0) {\n            $sum += $n * $n;\n        }\n    }\n    return $sum;\n}\n\
    $test = array(1, 3, 2, 0);\necho double_the_difference($test);\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8k70q_8y.php:30\n\
    Stack trace:\n#0 /tmp/tmp8k70q_8y.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp8k70q_8y.php\
    \ on line 30\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $result = 0;\n    foreach ($lst as $val) {\n        if (is_int($val)\
    \ && $val > 0) {\n            $result += pow($val, 2);\n        }\n    }\n   \
    \ return $result;\n}\n\necho double_the_difference(array(1, 3, 2, 0)) . \"\\n\"\
    ;\necho double_the_difference(array(-1, -2, 0)) . \"\\n\";\necho double_the_difference(array(9,\
    \ -2)) . \"\\n\";\necho double_the_difference(array(0)) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\n0\n81\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpttm8sh2l.php:33\n\
    Stack trace:\n#0 /tmp/tmpttm8sh2l.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpttm8sh2l.php\
    \ on line 33\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t$odd_squares = array_map(function($x) {\n\t\treturn $x * $x;\n\t}, array_filter($lst,\
    \ function($x) {\n\t\treturn $x % 2 == 1;\n\t}));\n\tif(count($odd_squares) ==\
    \ 0) {\n\t\treturn 0;\n\t}\n\treturn 2 * (array_sum($odd_squares) - max($odd_squares));\n\
    }\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfau3gs5s.php:30\n\
    Stack trace:\n#0 /tmp/tmpfau3gs5s.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpfau3gs5s.php\
    \ on line 30\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  if (count($lst) === 0) {\n    return 0;\n  } else {\n    $difference =\
    \ 0;\n    foreach ($lst as $num) {\n      if (is_numeric($num) && $num > 0 &&\
    \ $num % 2 !== 0) {\n        $difference += $num * $num;\n      }\n    }\n   \
    \ return $difference * 2;\n  }\n}\n\nfunction candidate(...$args) {\n    return\
    \ double_the_difference(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5.0,\
    \ 4.0)) !== 25) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.1,\
    \ 0.2, 0.3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0,\
    \ -20.0, -30.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7kst09or.php:33\n\
    Stack trace:\n#0 /tmp/tmp7kst09or.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp7kst09or.php\
    \ on line 33\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum * 2;\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj6ne16j_.php:29\n\
    Stack trace:\n#0 /tmp/tmpj6ne16j_.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpj6ne16j_.php\
    \ on line 29\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    if (count($lst) == 0) {\n        return 0;\n    }\n    $sum = 0;\n  \
    \  foreach ($lst as $value) {\n        if (gettype($value) == \"integer\" && $value\
    \ >= 0) {\n            if ($value % 2 != 0) {\n                $sum += pow($value,\
    \ 2);\n            }\n        }\n    }\n    return $sum * 2;\n}\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6mw8d055.php:33\n\
    Stack trace:\n#0 /tmp/tmp6mw8d055.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp6mw8d055.php\
    \ on line 33\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $lst = array_filter($lst, 'is_int');\n    $lst = array_filter($lst, 'is_positive');\n\
    \    $lst = array_map('square', $lst);\n    return 2 * array_sum($lst);\n}\nfunction\
    \ candidate(...$args) {\n    return double_the_difference(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: array_filter(): Argument #2 ($callback)\
    \ must be a valid callback or null, function \"is_positive\" not found or invalid\
    \ function name in /tmp/tmp38v4ktj4.php:15\nStack trace:\n#0 /tmp/tmp38v4ktj4.php(15):\
    \ array_filter(Array, 'is_positive')\n#1 /tmp/tmp38v4ktj4.php(20): double_the_difference(Array)\n\
    #2 /tmp/tmp38v4ktj4.php(24): candidate(Array)\n#3 /tmp/tmp38v4ktj4.php(33): test()\n\
    #4 {main}\n  thrown in /tmp/tmp38v4ktj4.php on line 15\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $total = 0;\n    foreach ($lst as $item) {\n        if ($item < 0) {\n\
    \            continue;\n        }\n        if (!is_int($item)) {\n           \
    \ continue;\n        }\n        if ($item % 2 == 0) {\n            continue;\n\
    \        }\n        $total += $item * $item;\n    }\n    return $total;\n}\nfunction\
    \ candidate(...$args) {\n    return double_the_difference(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1b_0n5he.php:35\n\
    Stack trace:\n#0 /tmp/tmp1b_0n5he.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp1b_0n5he.php\
    \ on line 35\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $odds = array_filter($lst, function($x) {\n        return ($x % 2) ==\
    \ 1;\n    });\n    $odd_squares = array_map(function($x) {\n        return $x\
    \ * $x;\n    }, $odds);\n    $sum = array_reduce($odd_squares, function($prev,\
    \ $x) {\n        return $prev + $x;\n    }, 0);\n    return $sum * 2;\n}\n\nfunction\
    \ candidate(...$args) {\n    return double_the_difference(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu3szaefw.php:32\n\
    Stack trace:\n#0 /tmp/tmpu3szaefw.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpu3szaefw.php\
    \ on line 32\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  if(count($lst) == 0) {\n    return 0;\n  }\n  else {\n    $sum = 0;\n \
    \   foreach($lst as $value) {\n      if((is_int($value) || is_float($value)) &&\
    \ $value > 0) {\n        $sum += pow($value, 2);\n      }\n    }\n    return 2\
    \ * $sum;\n  }\n}\n\necho double_the_difference(array(1, 3, 2, 0));\necho double_the_difference(array(-1,\
    \ -2, 0));\necho double_the_difference(array(9, -2));\necho double_the_difference(array(0));\n\
    \necho double_the_difference(array(1, 'b', 2, 0));\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "280162010\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdszb0cln.php:40\n\
    Stack trace:\n#0 /tmp/tmpdszb0cln.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpdszb0cln.php\
    \ on line 40\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t$result = 0;\n\tforeach ($lst as $val) {\n\t\tif (fmod($val, 2) == 1 &&\
    \ $val > 0) {\n\t\t\t$result += pow($val, 2);\n\t\t}\n\t}\n\treturn $result;\n\
    }\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0_tk99uq.php:29\n\
    Stack trace:\n#0 /tmp/tmp0_tk99uq.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp0_tk99uq.php\
    \ on line 29\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  return 0;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfr5jxggl.php:22\n\
    Stack trace:\n#0 /tmp/tmpfr5jxggl.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpfr5jxggl.php\
    \ on line 22\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum * 2;\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj6ne16j_.php:29\n\
    Stack trace:\n#0 /tmp/tmpj6ne16j_.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpj6ne16j_.php\
    \ on line 29\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $odd_sqr_total = 0;\n  foreach ($lst as $l) {\n    if (is_int($l) && $l\
    \ > 0 && $l % 2 === 1) {\n      $odd_sqr_total += $l * $l;\n    }\n  }\n  return\
    \ $odd_sqr_total * 2;\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp54py3lxd.php:29\n\
    Stack trace:\n#0 /tmp/tmp54py3lxd.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp54py3lxd.php\
    \ on line 29\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t$total = 0;\n\tforeach ($lst as $item) {\n\t\tif (is_int($item) && $item\
    \ % 2 != 0) {\n\t\t\t$total += $item * $item;\n\t\t}\n\t}\n\treturn $total;\n\
    }\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd3genhud.php:28\n\
    Stack trace:\n#0 /tmp/tmpd3genhud.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpd3genhud.php\
    \ on line 28\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    if (count($lst) === 0) {\n        return 0;\n    }\n    $double_the_difference\
    \ = 0;\n    foreach ($lst as $x) {\n        if (is_int($x) && $x >= 0 && $x %\
    \ 2 === 1) {\n            $double_the_difference += $x * $x;\n        }\n    }\n\
    \    return $double_the_difference;\n}\nfunction candidate(...$args) {\n    return\
    \ double_the_difference(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5.0,\
    \ 4.0)) !== 25) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.1,\
    \ 0.2, 0.3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0,\
    \ -20.0, -30.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmperpfy96k.php:31\n\
    Stack trace:\n#0 /tmp/tmperpfy96k.php(39): test()\n#1 {main}\n  thrown in /tmp/tmperpfy96k.php\
    \ on line 31\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t// your code here\n\t// /$num = array_fill(0, $a, 0);\n\t// for ($i = 0;\
    \ $i <= $b; $i++) {\n\t// \t$num[$i] = $i;\n\t// }\n\t// return $num;\n}\n\nfunction\
    \ candidate(...$args) {\n    return double_the_difference(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw7m4npwk.php:27\n\
    Stack trace:\n#0 /tmp/tmpw7m4npwk.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpw7m4npwk.php\
    \ on line 27\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    if (empty($lst)) {\n        return 0;\n    }\n    return array_reduce($lst,\
    \ function ($sum, $num) {\n        if (is_int($num) && $num > 0) {\n         \
    \   if ($num % 2 === 1) {\n                $sum += $num * $num;\n            }\n\
    \        }\n        return $sum;\n    }, 0);\n}\n\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdvx3_0j3.php:33\n\
    Stack trace:\n#0 /tmp/tmpdvx3_0j3.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpdvx3_0j3.php\
    \ on line 33\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $sum = 0;\n  foreach ($lst as $i) {\n    if (is_int($i) && $i > 0) {\n\
    \      $sum += pow($i, 2);\n    }\n  }\n  return $sum * 2;\n}\n$a = [1, 3, 2,\
    \ 0];\n$b = [-1, -2, 0];\n$c = [9, -2];\n$d = [0];\n$e = [];\nvar_dump(double_the_difference($a)\
    \ === 10);\nvar_dump(double_the_difference($b) === 0);\nvar_dump(double_the_difference($c)\
    \ === 81);\nvar_dump(double_the_difference($d) === 0);\nvar_dump(double_the_difference($e)\
    \ === 0);\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "bool(false)\nbool(true)\nbool(false)\nbool(true)\nbool(true)\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmppxzgdndf.php:38\nStack trace:\n\
    #0 /tmp/tmppxzgdndf.php(46): test()\n#1 {main}\n  thrown in /tmp/tmppxzgdndf.php\
    \ on line 38\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $res = 0;\n    foreach ($lst as $v) {\n        if (is_numeric($v) &&\
    \ $v % 2 != 0) {\n            $res += pow($v, 2);\n        }\n    }\n    return\
    \ $res;\n}\necho double_the_difference(array(1, 3, 2, 0));\necho double_the_difference(array(-1,\
    \ -2, 0));\necho double_the_difference(array(9, -2));\necho double_the_difference(array(0));\n\
    echo double_the_difference(array());\necho \"\\n\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1018100\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7zzprov2.php:35\n\
    Stack trace:\n#0 /tmp/tmp7zzprov2.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp7zzprov2.php\
    \ on line 35\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\tif(sizeof($lst) == 0) {\n\t\treturn 0;\n\t} else {\n\t\t$the_sum = 0;\n\
    \t\tforeach($lst as $item) {\n\t\t\tif($item % 2 !== 0 && $item > 0 && is_int($item))\
    \ {\n\t\t\t\t$the_sum += pow($item, 2);\n\t\t\t}\n\t\t}\n\t\treturn $the_sum;\n\
    \t}\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv_v1pb_n.php:32\n\
    Stack trace:\n#0 /tmp/tmpv_v1pb_n.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpv_v1pb_n.php\
    \ on line 32\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t// Your code here\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7c8pa4gu.php:22\n\
    Stack trace:\n#0 /tmp/tmp7c8pa4gu.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp7c8pa4gu.php\
    \ on line 22\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t$sum = 0;\n\tforeach ($lst as $value) {\n\t\tif (is_int($value) && $value\
    \ % 2 != 0) {\n\t\t\t$sum += $value ** 2;\n\t\t}\n\t}\n\treturn $sum;\n}\n$sum\
    \ = double_the_difference(array(1, 3, 2, 0));\necho $sum;\necho \"<br>\";\n$sum\
    \ = double_the_difference(array(-1, -2, 0));\necho $sum;\necho \"<br>\";\n$sum\
    \ = double_the_difference(array(9, -2));\necho $sum;\necho \"<br>\";\n$sum = double_the_difference(array(0));\n\
    echo $sum;\necho \"<br>\";\n$sum = double_the_difference(array());\necho $sum;\n\
    function candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "10<br>1<br>81<br>0<br>0\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp98lq5nyn.php:42\nStack trace:\n#0 /tmp/tmp98lq5nyn.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmp98lq5nyn.php on line 42\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $elm) {\n        if (($elm % 2 == 1)\
    \ && ($elm > 0)) {\n            $sum += pow($elm, 2);\n        }\n    }\n    return\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbgqs7ed2.php:29\n\
    Stack trace:\n#0 /tmp/tmpbgqs7ed2.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpbgqs7ed2.php\
    \ on line 29\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n$total = 0;\nforeach ($lst as $num) {\nif (is_int($num) && $num > 0) {\n\
    if ($num % 2 == 1) {\n$total += pow($num, 2);\n}\n}\n}\nreturn $total * 2;\n}\n\
    function candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeyh21xri.php:30\n\
    Stack trace:\n#0 /tmp/tmpeyh21xri.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpeyh21xri.php\
    \ on line 30\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $odds = array_filter($lst, function($n) {\n    return is_int($n) && ($n\
    \ % 2 != 0);\n  });\n  $sum = array_reduce($odds, function($acc, $n) {\n    return\
    \ $acc + pow($n, 2);\n  }, 0);\n  return $sum * 2;\n}\n\n$cases = [\n  [[1, 3,\
    \ 2, 0], 10],\n  [[-1, -2, 0], 0],\n  [[9, -2], 81],\n  [[0], 0],\n  [[], 0],\n\
    ];\n\nfor ($i = 0; $i < count($cases); $i++) {\n  $testcase = $cases[$i];\n  $output\
    \ = double_the_difference($testcase[0]);\n  if ($output == $testcase[1]) {\n \
    \   echo \"Passed test {$i} of \" . count($cases) . PHP_EOL;\n  } else {\n   \
    \ echo \"Failed test {$i}!\" . PHP_EOL;\n    echo \"Expected \" . $testcase[1]\
    \ . \" but got \" . $output . PHP_EOL;\n  }\n}\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Failed test 0!\nExpected 10 but got 20\nFailed test 1!\nExpected 0 but\
    \ got 2\nFailed test 2!\nExpected 81 but got 162\nPassed test 3 of 5\nPassed test\
    \ 4 of 5\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4fj0zptk.php:47\n\
    Stack trace:\n#0 /tmp/tmp4fj0zptk.php(55): test()\n#1 {main}\n  thrown in /tmp/tmp4fj0zptk.php\
    \ on line 47\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    // check for empty\n    if (empty($lst)) {\n        return 0;\n    }\n\
    \    // filter out non-integers and negatives\n    $lst = array_filter($lst, function($num)\
    \ {\n        return is_int($num) && $num >= 0;\n    });\n    // filter out evens\n\
    \    $lst = array_filter($lst, function($num) {\n        return ($num % 2) !=\
    \ 0;\n    });\n    // return sum of squares\n    return array_sum(array_map(function($num)\
    \ {\n        return $num * $num;\n    }, $lst));\n}\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqrjdp3cf.php:37\n\
    Stack trace:\n#0 /tmp/tmpqrjdp3cf.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpqrjdp3cf.php\
    \ on line 37\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\treturn;\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj_cpb4ge.php:22\n\
    Stack trace:\n#0 /tmp/tmpj_cpb4ge.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpj_cpb4ge.php\
    \ on line 22\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $n) {\n        if (is_int($n) && $n >\
    \ 0) {\n            $sum += pow($n, 2);\n        }\n    }\n    return $sum * 2;\n\
    }\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7el35oe7.php:28\n\
    Stack trace:\n#0 /tmp/tmp7el35oe7.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp7el35oe7.php\
    \ on line 28\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  // Here, use a loop and assign to `total` the sum of odd squares\n  //\
    \ in the input list.\n  $total = 0;\n  for ($i = 0; $i < count($lst); $i++) {\n\
    \    if ($lst[$i] % 2 == 1 && $lst[$i] >= 0) {\n      $total += $lst[$i] ** 2;\n\
    \    }\n  }\n  return $total;\n}\n\n$lst = array(1, 3, 2, 0);\necho double_the_difference($lst);\n\
    echo \"\\n\";\n$lst = array(-1, -2, 0);\necho double_the_difference($lst);\necho\
    \ \"\\n\";\n$lst = array(9, -2);\necho double_the_difference($lst);\necho \"\\\
    n\";\n$lst = array(0);\necho double_the_difference($lst);\necho \"\\n\";\n\nfunction\
    \ candidate(...$args) {\n    return double_the_difference(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "10\n0\n81\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfir91umn.php:44\n\
    Stack trace:\n#0 /tmp/tmpfir91umn.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpfir91umn.php\
    \ on line 44\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t$pow = 2;\n\t$sum = 0;\n\tforeach ($lst as $value) {\n\t\tif ($value >\
    \ 0 && is_int($value)) {\n\t\t\t$sum += pow($value, $pow);\n\t\t}\n\t}\n\treturn\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl8m2nmd7.php:30\n\
    Stack trace:\n#0 /tmp/tmpl8m2nmd7.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpl8m2nmd7.php\
    \ on line 30\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t$sum = 0;\n\tforeach ($lst as $k => $v) {\n\t\tif ($v < 0 || $v != intval($v))\
    \ {\n\t\t\tcontinue;\n\t\t}\n\t\tif ($v % 2 == 1) {\n\t\t\t$sum += $v * $v;\n\t\
    \t}\n\t}\n\treturn $sum * 2;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1zy9r09b.php:31\n\
    Stack trace:\n#0 /tmp/tmp1zy9r09b.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp1zy9r09b.php\
    \ on line 31\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $numbers = array_filter($lst, function($x) {\n        return (is_int($x)\
    \ && $x >= 0);\n    });\n    $odd = array_filter($numbers, function($x) {\n  \
    \      return ($x % 2 == 1);\n    });\n    $squares = array_map(function($x) {\n\
    \        return $x * $x;\n    }, $odd);\n    $sum = array_reduce($squares, function($acc,\
    \ $x) {\n        return $acc + $x;\n    }, 0);\n    return $sum * 2;\n}\n\nfunction\
    \ candidate(...$args) {\n    return double_the_difference(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph8k7xgqq.php:35\n\
    Stack trace:\n#0 /tmp/tmph8k7xgqq.php(43): test()\n#1 {main}\n  thrown in /tmp/tmph8k7xgqq.php\
    \ on line 35\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t$arr = array();\n\tforeach ($lst as $item) {\n\t\tif ($item > 0 && is_int($item))\
    \ {\n\t\t\t$arr[] = $item;\n\t\t}\n\t}\n\treturn array_sum($arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return double_the_difference(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpec0peeqv.php:29\n\
    Stack trace:\n#0 /tmp/tmpec0peeqv.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpec0peeqv.php\
    \ on line 29\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $total=0;\n    foreach ($lst as $i){\n        if(abs($i) % 2 == 1 &&\
    \ $i != 0){\n            $total += $i * $i;\n        }\n    }\n    return $total;\n\
    }\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsu70iqoz.php:28\n\
    Stack trace:\n#0 /tmp/tmpsu70iqoz.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpsu70iqoz.php\
    \ on line 28\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $arr = array();\n  foreach ($lst as $key => $value) {\n    if($value >\
    \ 0 && floor($value) == $value){\n      if ($value % 2 != 0) {\n        array_push($arr,\
    \ $value);\n      }\n    }\n  }\n  if (count($arr) == 0) {\n    return 0;\n  }\n\
    \  return array_sum($arr);\n}\necho double_the_difference(array(1, 3, 2, 0));\n\
    echo \"\\n\";\necho double_the_difference(array(-1, -2, 0));\necho \"\\n\";\n\
    echo double_the_difference(array(9, -2));\necho \"\\n\";\necho double_the_difference(array(0));\n\
    echo \"\\n\";\necho double_the_difference(array());\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "4\n0\n9\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgx3yajah.php:43\n\
    Stack trace:\n#0 /tmp/tmpgx3yajah.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpgx3yajah.php\
    \ on line 43\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $diff = 0;\n  foreach ($lst as $num) {\n    if ($num > 0 && $num % 2 ==\
    \ 1) {\n      $diff += $num * $num;\n    }\n  }\n  return $diff;\n}\n$lst = array(1,\
    \ 3, 2, 0);\nprint(double_the_difference($lst));\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "10\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw739ucai.php:30\n\
    Stack trace:\n#0 /tmp/tmpw739ucai.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpw739ucai.php\
    \ on line 30\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  if(sizeof($lst) == 0) {\n    return 0;\n  }\n  $odd_nums = array();\n \
    \ foreach($lst as $val) {\n    if($val % 2 != 0 && $val > 0) {\n      array_push($odd_nums,\
    \ $val);\n    }\n  }\n  if(sizeof($odd_nums) == 0) {\n    return 0;\n  }\n  $sum\
    \ = 0;\n  foreach($odd_nums as $val) {\n    $sum += $val * $val;\n  }\n  return\
    \ $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps256fs51.php:38\n\
    Stack trace:\n#0 /tmp/tmps256fs51.php(46): test()\n#1 {main}\n  thrown in /tmp/tmps256fs51.php\
    \ on line 38\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $i = 0;\n  $sum = 0;\n  while ($i < count($lst)) {\n    if ($lst[$i] %\
    \ 2 != 0 && $lst[$i] > 0) {\n      $sum += $lst[$i] ** 2;\n    }\n    $i += 1;\n\
    \  }\n  return $sum;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5u2mmftz.php:30\n\
    Stack trace:\n#0 /tmp/tmp5u2mmftz.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp5u2mmftz.php\
    \ on line 30\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\tif (sizeof($lst) == 0) {\n\t\treturn 0;\n\t}\n\t$sum = 0;\n\tforeach ($lst\
    \ as $number) {\n\t\tif (is_int($number) && $number > 0) {\n\t\t\t$sum += $number;\n\
    \t\t}\n\t}\n\t$double = $sum * 2;\n\treturn $double;\n}\n\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6_omogrc.php:33\n\
    Stack trace:\n#0 /tmp/tmp6_omogrc.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp6_omogrc.php\
    \ on line 33\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $double_sum = 0;\n  for ($i = 0; $i < count($lst); $i += 1) {\n    if (is_int($lst[$i])\
    \ && $lst[$i] >= 0) {\n      if ($lst[$i] % 2 !== 0) {\n        $double_sum +=\
    \ pow($lst[$i], 2);\n      }\n    }\n  }\n  return $double_sum;\n}\n\nfunction\
    \ candidate(...$args) {\n    return double_the_difference(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz0gfyqmz.php:31\n\
    Stack trace:\n#0 /tmp/tmpz0gfyqmz.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpz0gfyqmz.php\
    \ on line 31\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t$doubleDifference = 0;\n\t$sumSquares = 0;\n\t$sum = 0;\n\tfor ($i = 0;\
    \ $i < count($lst); $i++) {\n\t\tif (is_int($lst[$i]) && $lst[$i] > 0) {\n\t\t\
    \tif ($lst[$i] % 2 != 0) {\n\t\t\t\t$sumSquares += $lst[$i] * $lst[$i];\n\t\t\t\
    }\n\t\t\t$sum += $lst[$i];\n\t\t}\n\t}\n\treturn ($sumSquares - $sum) * 2;\n}\n\
    \nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9d0t7rvb.php:34\n\
    Stack trace:\n#0 /tmp/tmp9d0t7rvb.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp9d0t7rvb.php\
    \ on line 34\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $odd = 0;\n    foreach ($lst as $num) {\n        if ($num % 2 != 0 &&\
    \ $num >= 0) {\n            $odd = $odd + $num;\n        }\n    }\n    return\
    \ $odd ** 2;\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxa54t2zc.php:29\n\
    Stack trace:\n#0 /tmp/tmpxa54t2zc.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpxa54t2zc.php\
    \ on line 29\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\tif (count($lst)==0) return 0;\n\t$odd=0;\n\t$even=0;\n\tforeach ($lst as\
    \ $num) {\n\t\tif (is_int($num) and $num>=0) {\n\t\t\tif ($num%2==0) {\n\t\t\t\
    \t$even+=pow($num,2);\n\t\t\t} else {\n\t\t\t\t$odd+=pow($num,2);\n\t\t\t}\n\t\
    \t}\n\t}\n\treturn $odd - $even;\n}\nif (double_the_difference(array(1, 3, 2,\
    \ 0)) == 10) {\n\techo \".\";\n} else {\n\techo \"F\";\n}\nif (double_the_difference(array(-1,\
    \ -2, 0)) == 0) {\n\techo \".\";\n} else {\n\techo \"F\";\n}\nif (double_the_difference(array(9,\
    \ -2)) == 81) {\n\techo \".\";\n} else {\n\techo \"F\";\n}\nif (double_the_difference(array(0))\
    \ == 0) {\n\techo \".\";\n} else {\n\techo \"F\";\n}\nif (double_the_difference(array())\
    \ == 0) {\n\techo \".\";\n} else {\n\techo \"F\";\n}\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "F....\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp15gigutv.php:59\n\
    Stack trace:\n#0 /tmp/tmp15gigutv.php(67): test()\n#1 {main}\n  thrown in /tmp/tmp15gigutv.php\
    \ on line 59\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  if (empty($lst)) {\n    return 0;\n  }\n  $answer = 0;\n  foreach ($lst\
    \ as $number) {\n    if (is_int($number) && $number > 0) {\n      if ($number\
    \ % 2 !== 0) {\n        $answer += pow($number, 2);\n      }\n    }\n  }\n  return\
    \ $answer * 2;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6g4fvcfv.php:33\n\
    Stack trace:\n#0 /tmp/tmp6g4fvcfv.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp6g4fvcfv.php\
    \ on line 33\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    if (count($lst) == 0) {\n        return 0;\n    }\n    $sum = 0;\n  \
    \  foreach ($lst as $x) {\n        if (is_int($x) && $x >= 0 && $x % 2 == 1) {\n\
    \            $sum += $x * $x;\n        }\n    }\n    return $sum * 2;\n}\nfunction\
    \ candidate(...$args) {\n    return double_the_difference(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpulmanupx.php:31\n\
    Stack trace:\n#0 /tmp/tmpulmanupx.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpulmanupx.php\
    \ on line 31\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t// your solution goes here\n\t$odds = [];\n\t$sum = 0;\n\t$sqsum = 0;\n\
    \t$arrsum = 0;\n\tforeach ($lst as $key => $value) {\n\t\tif (is_int($value) &&\
    \ $value > 0) {\n\t\t\tif ($value % 2 == 1) {\n\t\t\t\t$odds[] = $value;\n\t\t\
    \t}\n\t\t}\n\t}\n\tforeach ($odds as $key => $value) {\n\t\t$arrsum += $value;\n\
    \t}\n\t$sqsum = $arrsum * $arrsum;\n\treturn $sqsum;\n}\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_8lpnedm.php:38\n\
    Stack trace:\n#0 /tmp/tmp_8lpnedm.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp_8lpnedm.php\
    \ on line 38\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $result = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num > 0) {\n            $result += pow($num, 2);\n        }\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppguj4r4r.php:29\n\
    Stack trace:\n#0 /tmp/tmppguj4r4r.php(37): test()\n#1 {main}\n  thrown in /tmp/tmppguj4r4r.php\
    \ on line 29\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $odd = array_filter($lst, function($elem) {\n        return (is_int($elem)\
    \ && $elem % 2 !== 0 && $elem > 0);\n    });\n    $odd_squared = array_map(function($elem)\
    \ {\n        return pow($elem, 2);\n    }, $odd);\n    $sum = array_sum($odd_squared);\n\
    \    return $sum * 2;\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi2kwwvgx.php:30\n\
    Stack trace:\n#0 /tmp/tmpi2kwwvgx.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpi2kwwvgx.php\
    \ on line 30\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (!is_int($num) ||\
    \ $num < 0) {\n            continue;\n        }\n        if ($num % 2 != 0) {\n\
    \            $sum += $num**2;\n        }\n    }\n    return $sum;\n}\nfunction\
    \ candidate(...$args) {\n    return double_the_difference(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp443k7nju.php:31\n\
    Stack trace:\n#0 /tmp/tmp443k7nju.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp443k7nju.php\
    \ on line 31\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $s = 0;\n  foreach ($lst as $e) {\n    if (is_int($e) && $e >= 0) {\n \
    \     $s += $e * $e;\n    }\n  }\n  return $s;\n}\necho double_the_difference(array(1,\
    \ 3, 2, 0)) . \"\\n\";\necho double_the_difference(array(-1, -2, 0)) . \"\\n\"\
    ;\necho double_the_difference(array(9, -2)) . \"\\n\";\necho double_the_difference(array(0))\
    \ . \"\\n\";\necho double_the_difference(array()) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\n0\n81\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0luurd1_.php:33\n\
    Stack trace:\n#0 /tmp/tmp0luurd1_.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp0luurd1_.php\
    \ on line 33\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t$result = 0;\n\tforeach ($lst as $num) {\n\t\tif (is_int($num) && $num\
    \ > 0) {\n\t\t\tif ($num % 2 == 1) {\n\t\t\t\t$result += pow($num, 2);\n\t\t\t\
    }\n\t\t}\n\t}\n\treturn $result;\n}\n\n$a = array(1, 3, 2, 0);\n$b = array(-1,\
    \ -2, 0);\n$c = array(9, -2);\n$d = array(0);\n\n$a = double_the_difference($a);\n\
    $b = double_the_difference($b);\n$c = double_the_difference($c);\n$d = double_the_difference($d);\n\
    echo 'The sum of squares of the numbers in the array that are odd is: ' . $a .\
    \ \"\\n\";\necho 'The sum of squares of the numbers in the array that are odd\
    \ is: ' . $b . \"\\n\";\necho 'The sum of squares of the numbers in the array\
    \ that are odd is: ' . $c . \"\\n\";\necho 'The sum of squares of the numbers\
    \ in the array that are odd is: ' . $d . \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "The sum of squares of the numbers in the array that are odd is: 10\nThe\
    \ sum of squares of the numbers in the array that are odd is: 0\nThe sum of squares\
    \ of the numbers in the array that are odd is: 81\nThe sum of squares of the numbers\
    \ in the array that are odd is: 0\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp7meu0638.php:45\nStack trace:\n#0 /tmp/tmp7meu0638.php(53): test()\n\
    #1 {main}\n  thrown in /tmp/tmp7meu0638.php on line 45\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $k => $v) {\n        if ($v % 2 != 0\
    \ && is_int($v) && $v > 0) {\n            $sum += $v * $v;\n        }\n    }\n\
    \    return $sum;\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_n6qhltu.php:29\n\
    Stack trace:\n#0 /tmp/tmp_n6qhltu.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp_n6qhltu.php\
    \ on line 29\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    if (empty($lst)) return 0;\n    $odds = array_filter($lst, function($n)\
    \ {\n        return $n % 2 === 1;\n    });\n    $odds = array_map(function($n)\
    \ {\n        return $n ** 2;\n    }, $odds);\n    return array_sum($odds) * 2;\n\
    }\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9lnt6zym.php:30\n\
    Stack trace:\n#0 /tmp/tmp9lnt6zym.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp9lnt6zym.php\
    \ on line 30\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum_of_squares = 0;\n    $double_the_difference = 0;\n    $odd_numbers\
    \ = 0;\n    $even_numbers = 0;\n    $diffs = 0;\n    foreach ($lst as $num) {\n\
    \        if (is_int($num) && $num >= 0) {\n            if ($num % 2 == 0) {\n\
    \                $even_numbers += $num;\n            } else {\n              \
    \  $odd_numbers += $num;\n            }\n        }\n    }\n    $diffs = $odd_numbers\
    \ - $even_numbers;\n    $double_the_difference = $diffs * 2;\n    return $double_the_difference;\n\
    }\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8vqdmpgf.php:38\n\
    Stack trace:\n#0 /tmp/tmp8vqdmpgf.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp8vqdmpgf.php\
    \ on line 38\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t$sum = 0;\n\tfor ($i = 0; $i < count($lst); $i++) {\n\t\tif (is_int($lst[$i])\
    \ && $lst[$i] >= 0) {\n\t\t\tif ($lst[$i] % 2 == 1) {\n\t\t\t\t$sum += pow($lst[$i],\
    \ 2);\n\t\t\t}\n\t\t}\n\t}\n\treturn $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptvtcefsv.php:31\n\
    Stack trace:\n#0 /tmp/tmptvtcefsv.php(39): test()\n#1 {main}\n  thrown in /tmp/tmptvtcefsv.php\
    \ on line 31\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum * 2;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprn_i98af.php:28\n\
    Stack trace:\n#0 /tmp/tmprn_i98af.php(36): test()\n#1 {main}\n  thrown in /tmp/tmprn_i98af.php\
    \ on line 28\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $number) {\n        if (is_numeric($number)\
    \ && $number >= 0 && $number % 2 == 1) {\n            $sum += $number ** 2;\n\
    \        }\n    }\n    return $sum;\n}\nfunction candidate(...$args) {\n    return\
    \ double_the_difference(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5.0,\
    \ 4.0)) !== 25) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.1,\
    \ 0.2, 0.3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0,\
    \ -20.0, -30.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp47572e3d.php:28\n\
    Stack trace:\n#0 /tmp/tmp47572e3d.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp47572e3d.php\
    \ on line 28\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $odd_array = [];\n    foreach ($lst as $value) {\n        if (is_int($value)\
    \ && $value > 0 && $value % 2 == 1) {\n            array_push($odd_array, $value);\n\
    \        }\n    }\n    $odd_squared = [];\n    foreach ($odd_array as $value)\
    \ {\n        array_push($odd_squared, pow($value, 2));\n    }\n    $double_difference\
    \ = [];\n    for ($i = 0; $i < count($odd_squared) - 1; $i++) {\n        $value\
    \ = $odd_squared[$i] - $odd_squared[$i + 1];\n        array_push($double_difference,\
    \ abs($value) * 2);\n    }\n    return count($double_difference) == 0 ? 0 : array_sum($double_difference);\n\
    }\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg2odkkin.php:38\n\
    Stack trace:\n#0 /tmp/tmpg2odkkin.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpg2odkkin.php\
    \ on line 38\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $odds = array_filter($lst, function($n) {\n        return $n % 2 ===\
    \ 1 && $n > 0 && is_int($n);\n    });\n    return empty($odds) ? 0 : array_sum(array_map(function($n)\
    \ {\n        return $n * $n;\n    }, $odds)) * 2;\n}\n\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpod9dotp8.php:28\n\
    Stack trace:\n#0 /tmp/tmpod9dotp8.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpod9dotp8.php\
    \ on line 28\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $total = 0;\n    $num_positive = 0;\n    $num_negative = 0;\n    foreach\
    \ ($lst as $num) {\n        if (is_numeric($num) && $num > 0) {\n            $total\
    \ += $num;\n            $num_positive++;\n        } else if (is_numeric($num)\
    \ && $num < 0) {\n            $total += $num;\n            $num_negative++;\n\
    \        }\n    }\n    return ($num_positive - $num_negative) * 2;\n}\nfunction\
    \ candidate(...$args) {\n    return double_the_difference(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn0zpqk8b.php:34\n\
    Stack trace:\n#0 /tmp/tmpn0zpqk8b.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpn0zpqk8b.php\
    \ on line 34\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $total = 0;\n    foreach ($lst as $item) {\n        if (is_int($item)\
    \ && $item > 0) {\n            $total += $item * $item;\n        }\n    }\n  \
    \  return $total;\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsz033jir.php:29\n\
    Stack trace:\n#0 /tmp/tmpsz033jir.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpsz033jir.php\
    \ on line 29\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $newArr = [];\n    foreach ($lst as $num) {\n        if ($num > 0 &&\
    \ gettype($num) == \"integer\") {\n            array_push($newArr, pow($num, 2));\n\
    \        }\n    }\n    return array_sum($newArr);\n}\necho double_the_difference([1,\
    \ 3, 2, 0]) . PHP_EOL;\necho double_the_difference([-1, -2, 0]) . PHP_EOL;\necho\
    \ double_the_difference([9, -2]) . PHP_EOL;\necho double_the_difference([0]) .\
    \ PHP_EOL;\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "14\n0\n81\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpliwd21np.php:33\n\
    Stack trace:\n#0 /tmp/tmpliwd21np.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpliwd21np.php\
    \ on line 33\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $double_sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num)\
    \ && $num >= 0 && $num % 2 != 0) {\n            $double_sum += $num * $num;\n\
    \        }\n    }\n    return $double_sum;\n}\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp611xqnez.php:28\n\
    Stack trace:\n#0 /tmp/tmp611xqnez.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp611xqnez.php\
    \ on line 28\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    if (empty($lst))\n        return 0;\n    return array_reduce($lst, function($prev,\
    \ $curr) {\n        return $prev + ($curr % 2 == 1 ? pow($curr, 2) : 0);\n   \
    \ }, 0);\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyevu2ff5.php:26\n\
    Stack trace:\n#0 /tmp/tmpyevu2ff5.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpyevu2ff5.php\
    \ on line 26\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($lst[$i]\
    \ % 2 == 1 && $lst[$i] >= 0) {\n            $sum += $lst[$i] * $lst[$i];\n   \
    \     }\n    }\n    return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ double_the_difference(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5.0,\
    \ 4.0)) !== 25) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.1,\
    \ 0.2, 0.3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0,\
    \ -20.0, -30.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_j1ovfld.php:29\n\
    Stack trace:\n#0 /tmp/tmp_j1ovfld.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp_j1ovfld.php\
    \ on line 29\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num >= 0 && $num % 2 != 0) {\n            $sum += $num ** 2;\n        }\n \
    \   }\n    return $sum * 2;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnk6c6ggx.php:28\n\
    Stack trace:\n#0 /tmp/tmpnk6c6ggx.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpnk6c6ggx.php\
    \ on line 28\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t$total = 0;\n\tforeach ($lst as $val) {\n\t\tif (is_int($val) && $val >=\
    \ 0) {\n\t\t\tif ($val % 2 === 1) {\n\t\t\t\t$total += $val * $val;\n\t\t\t}\n\
    \t\t}\n\t}\n\treturn $total;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp35ajilp4.php:30\n\
    Stack trace:\n#0 /tmp/tmp35ajilp4.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp35ajilp4.php\
    \ on line 30\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $odd = array_filter($lst, function($x) { return $x % 2 == 1; });\n  \
    \  $total = array_reduce($odd, function($acc, $x) { return $acc + $x * $x; },\
    \ 0);\n    return $total * 2;\n}\n\necho double_the_difference(array(1, 3, 2,\
    \ 0)), \"\\n\";\necho double_the_difference(array(-1, -2, 0)), \"\\n\";\necho\
    \ double_the_difference(array(9, -2)), \"\\n\";\necho double_the_difference(array(0)),\
    \ \"\\n\";\necho double_the_difference(array()), \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "20\n0\n162\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnh2iavau.php:31\n\
    Stack trace:\n#0 /tmp/tmpnh2iavau.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpnh2iavau.php\
    \ on line 31\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    // Your code here\n    $sum = 0;\n    foreach ($lst as $num) {\n    \
    \    if (is_int($num) && $num > 0 && $num % 2 == 1) {\n            $sum += $num\
    \ * $num;\n        }\n    }\n    return $sum;\n}\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpukd87bhg.php:29\n\
    Stack trace:\n#0 /tmp/tmpukd87bhg.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpukd87bhg.php\
    \ on line 29\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $result = 0;\n    foreach ($lst as $num) {\n        if ($num % 2 == 1)\
    \ {\n            $result += $num * $num;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf72x0xy2.php:29\n\
    Stack trace:\n#0 /tmp/tmpf72x0xy2.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpf72x0xy2.php\
    \ on line 29\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $squares = 0;\n    foreach ($lst as $val) {\n        if (gettype($val)\
    \ == \"integer\" && $val > 0 && $val % 2 != 0) {\n            $squares += pow($val,\
    \ 2);\n        }\n    }\n    return $squares * 2;\n}\n\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_jtz5li0.php:29\n\
    Stack trace:\n#0 /tmp/tmp_jtz5li0.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp_jtz5li0.php\
    \ on line 29\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t$sum = 0;\n\tforeach ($lst as $v) {\n\t\tif (is_int($v) && $v > 0) {\n\t\
    \t\t$sum += pow($v, 2);\n\t\t}\n\t}\n\treturn $sum * 2;\n}\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7zyew67t.php:28\n\
    Stack trace:\n#0 /tmp/tmp7zyew67t.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp7zyew67t.php\
    \ on line 28\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $item) {\n        if (is_int($item) &&\
    \ $item > 0) {\n            $sum += $item ** 2;\n        }\n    }\n    return\
    \ $sum * 2;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf797x4sr.php:28\n\
    Stack trace:\n#0 /tmp/tmpf797x4sr.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpf797x4sr.php\
    \ on line 28\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $item) {\n        if (is_int($item) &&\
    \ $item > 0) {\n            $sum += pow($item, 2);\n        }\n    }\n    return\
    \ $sum * 2;\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw7w4vohi.php:29\n\
    Stack trace:\n#0 /tmp/tmpw7w4vohi.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpw7w4vohi.php\
    \ on line 29\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $output = 0;\n  for ($i = 0; $i < count($lst); $i++) {\n    if (is_int($lst[$i])\
    \ && $lst[$i] > 0) {\n      if ($lst[$i] % 2 == 1) {\n        $output += pow($lst[$i],\
    \ 2);\n      }\n    }\n  }\n  return $output;\n}\necho double_the_difference(array(1,\
    \ 3, 2, 0));\necho '<br>';\necho double_the_difference(array(-1, -2, 0));\necho\
    \ '<br>';\necho double_the_difference(array(9, -2));\necho '<br>';\necho double_the_difference(array(0));\n\
    echo '<br>';\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "10<br>0<br>81<br>0<br>\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp0vupuyy5.php:38\nStack trace:\n#0 /tmp/tmp0vupuyy5.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmp0vupuyy5.php on line 38\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t$nums = array_filter($lst, function($item) {\n\t\treturn is_int($item)\
    \ && $item > 0;\n\t});\n\t$sumOfSquares = array_reduce($nums, function($prev,\
    \ $curr) {\n\t\treturn $prev + $curr * $curr;\n\t}, 0);\n\treturn $sumOfSquares\
    \ * 2;\n}\necho double_the_difference(array(1, 3, 2, 0));\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "28\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp15uha1u3.php:29\n\
    Stack trace:\n#0 /tmp/tmp15uha1u3.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp15uha1u3.php\
    \ on line 29\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $difference = array_reduce($lst, function($acc, $x) {\n      if ($x >\
    \ 0) {\n        $acc += $x ** 2;\n      }\n      return $acc;\n    }, 0);\n  \
    \  return $difference;\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppel9yr0f.php:29\n\
    Stack trace:\n#0 /tmp/tmppel9yr0f.php(37): test()\n#1 {main}\n  thrown in /tmp/tmppel9yr0f.php\
    \ on line 29\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t$sum = 0;\n\tforeach ($lst as $item) {\n\t\tif ($item % 2 != 0 && $item\
    \ >= 0 && is_integer($item)) {\n\t\t\t$sum += $item ** 2;\n\t\t}\n\t}\n\treturn\
    \ $sum;\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3jgzp1ad.php:29\n\
    Stack trace:\n#0 /tmp/tmp3jgzp1ad.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp3jgzp1ad.php\
    \ on line 29\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t// Your code here\n\treturn $lst;\n}\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp76b1v4_s.php:22\n\
    Stack trace:\n#0 /tmp/tmp76b1v4_s.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp76b1v4_s.php\
    \ on line 22\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    if(empty($lst)) {\n        return 0;\n    }\n    $arr = array();\n  \
    \  foreach($lst as $k => $v) {\n        if($v % 2 != 0 && $v > 0 && is_int($v))\
    \ {\n            $arr[] = $v;\n        }\n    }\n    $sum = 0;\n    foreach($arr\
    \ as $k => $v) {\n        $sum += $v * $v;\n    }\n    return $sum * 2;\n}\necho\
    \ double_the_difference(array(1, 3, 2, 0)) . \"\\n\";\necho double_the_difference(array(-1,\
    \ -2, 0)) . \"\\n\";\necho double_the_difference(array(9, -2)) . \"\\n\";\necho\
    \ double_the_difference(array(0)) . \"\\n\";\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "20\n0\n162\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd0tpkym4.php:39\n\
    Stack trace:\n#0 /tmp/tmpd0tpkym4.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpd0tpkym4.php\
    \ on line 39\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\tif (empty($lst)) {\n\t\treturn 0;\n\t}\n\t$sum = 0;\n\tforeach ($lst as\
    \ $item) {\n\t\tif (is_int($item) && $item > 0 && $item % 2 == 1) {\n\t\t\t$sum\
    \ += $item * $item;\n\t\t}\n\t}\n\treturn $sum * 2;\n}\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5f262mpy.php:31\n\
    Stack trace:\n#0 /tmp/tmp5f262mpy.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp5f262mpy.php\
    \ on line 31\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $len = count($lst);\n    $result = 0;\n    for ($i = 0; $i < $len; $i++)\
    \ {\n        if ($lst[$i] % 2 != 0 && $lst[$i] > 0) {\n            $result +=\
    \ pow($lst[$i], 2);\n        }\n    }\n    return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkypcz1cp.php:29\n\
    Stack trace:\n#0 /tmp/tmpkypcz1cp.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpkypcz1cp.php\
    \ on line 29\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    if (empty($lst)) {\n        return 0;\n    }\n    $diff = 0;\n    foreach\
    \ ($lst as $item) {\n        if (is_int($item) && $item > 0) {\n            if\
    \ ($item % 2 != 0) {\n                $diff += pow($item, 2);\n            }\n\
    \        }\n    }\n    return $diff * 2;\n}\n\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1h3pi5_3.php:34\n\
    Stack trace:\n#0 /tmp/tmp1h3pi5_3.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp1h3pi5_3.php\
    \ on line 34\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t$len = count($lst);\n\t$oddList = [];\n\tif ($len == 0) {\n\t\treturn 0;\n\
    \t} else {\n\t\tfor ($i = 0; $i < $len; $i++) {\n\t\t\tif ($lst[$i] % 2 == 1)\
    \ {\n\t\t\t\tarray_push($oddList, $lst[$i]);\n\t\t\t}\n\t\t}\n\t\treturn array_sum($oddList);\n\
    \t}\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6c2fpkow.php:33\n\
    Stack trace:\n#0 /tmp/tmp6c2fpkow.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp6c2fpkow.php\
    \ on line 33\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    return 0;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0v6s0z_e.php:22\n\
    Stack trace:\n#0 /tmp/tmp0v6s0z_e.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp0v6s0z_e.php\
    \ on line 22\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $num = 0;\n    foreach ($lst as $i) {\n        if (!is_int($i) || $i\
    \ < 0) {\n            continue;\n        }\n        if ($i % 2 === 1) {\n    \
    \        $num += $i ** 2;\n        }\n    }\n    return $num * 2;\n}\n$lst = array(1,\
    \ 2, 3, -1, -2, 4, 5, 6, 7, 8, 9, 10);\necho double_the_difference($lst);\n\n\
    function candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "330\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6chct5z3.php:34\n\
    Stack trace:\n#0 /tmp/tmp6chct5z3.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp6chct5z3.php\
    \ on line 34\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  if (count($lst) == 0) {\n    return 0;\n  }\n  $sum = 0;\n  foreach ($lst\
    \ as $x) {\n    if (gettype($x) == \"integer\" && $x > 0) {\n      $sum += $x\
    \ * $x;\n    }\n  }\n  return $sum * 2;\n}\nfunction candidate(...$args) {\n \
    \   return double_the_difference(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe2egiyb8.php:31\n\
    Stack trace:\n#0 /tmp/tmpe2egiyb8.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpe2egiyb8.php\
    \ on line 31\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $res = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($lst[$i]\
    \ % 2 != 0 && is_int($lst[$i])) {\n            $res += $lst[$i] * $lst[$i];\n\
    \        }\n    }\n    return $res;\n}\nfunction candidate(...$args) {\n    return\
    \ double_the_difference(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5.0,\
    \ 4.0)) !== 25) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.1,\
    \ 0.2, 0.3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0,\
    \ -20.0, -30.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpczafmua5.php:28\n\
    Stack trace:\n#0 /tmp/tmpczafmua5.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpczafmua5.php\
    \ on line 28\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (($num > 0) && ($num%2))\
    \ {\n            $sum += $num*$num;\n        }\n    }\n    return $sum;\n}\n\n\
    function candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_bw9k8a_.php:29\n\
    Stack trace:\n#0 /tmp/tmp_bw9k8a_.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp_bw9k8a_.php\
    \ on line 29\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\tif (sizeof($lst) === 0) return 0;\n\t$sum = 0;\n\tforeach ($lst as $item)\
    \ {\n\t\tif (is_int($item) && $item > 0) {\n\t\t\t$sum += $item ** 2;\n\t\t}\n\
    \t}\n\treturn $sum * 2;\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7s9jzneq.php:29\n\
    Stack trace:\n#0 /tmp/tmp7s9jzneq.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp7s9jzneq.php\
    \ on line 29\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  return array_reduce($lst, function($sum, $item) {\n    if (gettype($item)\
    \ === 'integer' && $item > 0) {\n      $sum += $item * $item;\n    }\n    return\
    \ $sum;\n  }, 0);\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo_2lewfe.php:28\n\
    Stack trace:\n#0 /tmp/tmpo_2lewfe.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpo_2lewfe.php\
    \ on line 28\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    // your code here\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgfh8d6hs.php:22\n\
    Stack trace:\n#0 /tmp/tmpgfh8d6hs.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpgfh8d6hs.php\
    \ on line 22\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $arr = array();\n    $sum = 0;\n    if ($lst) {\n        foreach ($lst\
    \ as $val) {\n            if ($val % 2 != 0 && is_int($val) && $val > 0) {\n \
    \               $arr[] = $val;\n            }\n        }\n        foreach ($arr\
    \ as $val) {\n            $sum += $val * $val;\n        }\n    }\n    return $sum;\n\
    }\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphrbqupnd.php:34\n\
    Stack trace:\n#0 /tmp/tmphrbqupnd.php(42): test()\n#1 {main}\n  thrown in /tmp/tmphrbqupnd.php\
    \ on line 34\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $n) {\n        if (is_int($n) && $n >\
    \ 0) {\n            $sum += pow($n, 2);\n        }\n    }\n    return $sum * 2;\n\
    }\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7el35oe7.php:28\n\
    Stack trace:\n#0 /tmp/tmp7el35oe7.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp7el35oe7.php\
    \ on line 28\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $res = 0;\n    foreach ($lst as $value) {\n        if (is_int($value)\
    \ && $value % 2 != 0) {\n            $res += pow($value, 2);\n        }\n    }\n\
    \    return $res;\n}\n\n$test_cases = [\n    [[1, 3, 2, 0], 10],\n    [[-1, -2,\
    \ 0], 0],\n    [[9, -2], 81],\n    [[0], 0],\n    [[], 0],\n];\n\nforeach ($test_cases\
    \ as $case) {\n    $input = $case[0];\n    $expected = $case[1];\n    $result\
    \ = double_the_difference($input);\n    if ($expected != $result) {\n        echo\
    \ \"FAIL: Given input \" . implode($input, \", \") . \", expected $expected but\
    \ got $result\\n\";\n    } else {\n        echo \"SUCCESS\\n\";\n    }\n}\nfunction\
    \ candidate(...$args) {\n    return double_the_difference(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "SUCCESS\n\nFatal error: Uncaught TypeError: implode(): Argument #2 ($array)\
    \ must be of type ?array, string given in /tmp/tmp0g7e8ie7.php:36\nStack trace:\n\
    #0 /tmp/tmp0g7e8ie7.php(36): implode(Array, ', ')\n#1 {main}\n  thrown in /tmp/tmp0g7e8ie7.php\
    \ on line 36\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $newList = array();\n    foreach ($lst as $i) {\n        if (is_int($i)\
    \ && $i > 0) {\n            $newList[] = $i;\n        }\n    }\n    if (empty($newList))\
    \ {\n        return 0;\n    } else {\n        return array_sum($newList) * 2;\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4_5f2wv3.php:33\n\
    Stack trace:\n#0 /tmp/tmp4_5f2wv3.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp4_5f2wv3.php\
    \ on line 33\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $output = 0;\n    foreach ($lst as $item) {\n        if (is_int($item)\
    \ && $item % 2 == 1) {\n            $output += $item**2;\n        }\n    }\n \
    \   return $output;\n}\n\n$tests = [\n    [[1, 3, 2, 0], 10],\n    [[-1, -2, 0],\
    \ 0],\n    [[9, -2], 81],\n    [[0], 0],\n    [[], 0],\n];\n\nforeach ($tests\
    \ as $test) {\n    $result = double_the_difference($test[0]);\n    if ($result\
    \ == $test[1]) {\n        echo \"Correct\\n\";\n    } else {\n        echo \"\
    Incorrect\\n\";\n    }\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Correct\nCorrect\nCorrect\nCorrect\nCorrect\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp0t_wwaa4.php:45\nStack trace:\n#0 /tmp/tmp0t_wwaa4.php(53):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp0t_wwaa4.php on line 45\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $sum = 0;\n  foreach ($lst as $num) {\n    if (is_numeric($num) && $num\
    \ % 2 == 1) {\n      $sum += $num*$num;\n    }\n  }\n  return $sum;\n}\n\necho\
    \ double_the_difference(array(1, 3, 2, 0)) . \"\\n\";\necho double_the_difference(array(-1,\
    \ -2, 0)) . \"\\n\";\necho double_the_difference(array(9, -2)) . \"\\n\";\necho\
    \ double_the_difference(array(0)) . \"\\n\";\nfunction candidate(...$args) {\n\
    \    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "10\n0\n81\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl2tm4wto.php:33\n\
    Stack trace:\n#0 /tmp/tmpl2tm4wto.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpl2tm4wto.php\
    \ on line 33\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $a = 0;\n    foreach ($lst as $i) {\n        if (is_int($i) && $i > 0)\
    \ {\n            $a += $i * $i;\n        }\n    }\n    return $a * 2;\n}\n\nfunction\
    \ candidate(...$args) {\n    return double_the_difference(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptwhypaqj.php:29\n\
    Stack trace:\n#0 /tmp/tmptwhypaqj.php(37): test()\n#1 {main}\n  thrown in /tmp/tmptwhypaqj.php\
    \ on line 29\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  $sum = 0;\n  for ($i = 0; $i < count($lst); $i++) {\n    if (is_int($lst[$i])\
    \ && $lst[$i] > 0) {\n      if ($lst[$i] % 2 != 0) {\n        $sum += pow($lst[$i],\
    \ 2);\n      }\n    }\n  }\n  return $sum;\n}\n\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptkvgwzop.php:31\n\
    Stack trace:\n#0 /tmp/tmptkvgwzop.php(39): test()\n#1 {main}\n  thrown in /tmp/tmptkvgwzop.php\
    \ on line 31\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxw3vb9yh.php:21\n\
    Stack trace:\n#0 /tmp/tmpxw3vb9yh.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpxw3vb9yh.php\
    \ on line 21\n"
  timestamp: 1659977940
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  // Write your code here\n\n}\nfunction candidate(...$args) {\n    return\
    \ double_the_difference(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5.0,\
    \ 4.0)) !== 25) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.1,\
    \ 0.2, 0.3)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0,\
    \ -20.0, -30.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt33r_x82.php:22\n\
    Stack trace:\n#0 /tmp/tmpt33r_x82.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpt33r_x82.php\
    \ on line 22\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    // if (empty($lst)) {\n    //     return 0;\n    // }\n    // $newList\
    \ = [];\n    // foreach ($lst as $value) {\n    //     if ($value >= 0 && $value\
    \ % 2 == 1) {\n    //         $newList[] = $value * $value;\n    //     }\n  \
    \  // }\n    // $total = 0;\n    // foreach ($newList as $value) {\n    //   \
    \  $total += $value;\n    // }\n    // return $total * 2;\n    return array_sum(array_map(function($x)\
    \ { return $x * $x; }, array_filter($lst, function($x) { return $x % 2 == 1 &&\
    \ $x >= 0; }))) * 2;\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnhj8u84n.php:37\n\
    Stack trace:\n#0 /tmp/tmpnhj8u84n.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpnhj8u84n.php\
    \ on line 37\n"
  timestamp: 1659977940
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t$answer = 0;\n\tforeach ($lst as $value) {\n\t\tif (is_int($value) && $value\
    \ > 0) {\n\t\t\t$answer += pow($value, 2);\n\t\t}\n\t}\n\treturn $answer;\n}\n\
    function candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpohxwrv45.php:28\n\
    Stack trace:\n#0 /tmp/tmpohxwrv45.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpohxwrv45.php\
    \ on line 28\n"
  timestamp: 1659977940
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $res = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($lst[$i]\
    \ > 0 && is_int($lst[$i])) {\n            $res += ($lst[$i] ** 2);\n        }\n\
    \    }\n    return $res;\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjzfft4ma.php:29\n\
    Stack trace:\n#0 /tmp/tmpjzfft4ma.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpjzfft4ma.php\
    \ on line 29\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $x) {\n        if ($x > 0 && intval($x)\
    \ == $x) {\n            $sum += $x * $x;\n        }\n    }\n    return $sum *\
    \ 2;\n}\n\nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpathrh_c4.php:29\n\
    Stack trace:\n#0 /tmp/tmpathrh_c4.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpathrh_c4.php\
    \ on line 29\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    if (empty($lst)) {\n        return 0;\n    }\n    $sum = 0;\n    foreach\
    \ ($lst as $val) {\n        if (is_int($val) && $val > 0 && $val % 2 !== 0) {\n\
    \            $sum += $val**2;\n        }\n    }\n    return $sum * 2;\n}\nfunction\
    \ candidate(...$args) {\n    return double_the_difference(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxvlnpd1n.php:31\n\
    Stack trace:\n#0 /tmp/tmpxvlnpd1n.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpxvlnpd1n.php\
    \ on line 31\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $arr = [];\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($lst[$i]\
    \ % 2 == 1 and is_int($lst[$i])) {\n            array_push($arr, $lst[$i]);\n\
    \        }\n    }\n    return count($arr) == 0 ? 0 : array_sum($arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return double_the_difference(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpykw1e7uv.php:29\n\
    Stack trace:\n#0 /tmp/tmpykw1e7uv.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpykw1e7uv.php\
    \ on line 29\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n  return array_reduce($lst, function($carry, $item) {\n    if (!is_int($item)\
    \ || $item < 0) {\n      return $carry;\n    }\n    return $carry + $item ** 2;\n\
    \  }, 0);\n}\n$double_the_difference = function($lst) {\n  $lst = array_filter($lst,\
    \ function($item) {\n    return is_int($item) && $item >= 0;\n  });\n  return\
    \ array_reduce($lst, function($carry, $item) {\n    return $carry + $item ** 2;\n\
    \  }, 0);\n};\nassert(10 === double_the_difference([1, 3, 2, 0]));\nassert(0 ===\
    \ double_the_difference([-1, -2, 0]));\nassert(81 === double_the_difference([9,\
    \ -2]));\nassert(0 === double_the_difference([0]));\nassert(0 === double_the_difference([]));\n\
    \nfunction candidate(...$args) {\n    return double_the_difference(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ -2.0, 8.0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught AssertionError: assert(10 === double_the_difference([1,\
    \ 3, 2, 0])) in /tmp/tmp06dncjnd.php:29\nStack trace:\n#0 /tmp/tmp06dncjnd.php(29):\
    \ assert(false, 'assert(10 === d...')\n#1 {main}\n  thrown in /tmp/tmp06dncjnd.php\
    \ on line 29\n"
  timestamp: 1659977939
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n\t$lst = array_filter($lst, function($x) {\n\t\treturn is_numeric($x) &&\
    \ $x % 2 !== 0 && $x >= 0;\n\t});\n\t$lst = array_map(function($x) {\n\t\treturn\
    \ $x * $x;\n\t}, $lst);\n\treturn array_sum($lst);\n}\n\necho double_the_difference(array(1,\
    \ 3, 2, 0)) . \"\\n\";\necho double_the_difference(array(-1, -2, 0)) . \"\\n\"\
    ;\necho double_the_difference(array(9, -2)) . \"\\n\";\necho double_the_difference(array(0))\
    \ . \"\\n\";\necho double_the_difference(array()) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "10\n0\n81\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg53w6gis.php:34\n\
    Stack trace:\n#0 /tmp/tmpg53w6gis.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpg53w6gis.php\
    \ on line 34\n"
  timestamp: 1659977940
- exit_code: 255
  program: "<?php\n// Given an array of numbers, return the sum of squares of the\
    \ numbers\n// in the array that are odd. Ignore numbers that are negative or not\
    \ integers.\n// >>> double_the_difference(array(1, 3, 2, 0))\n// 10\n// >>> double_the_difference(array(-1,\
    \ -2, 0))\n// 0\n// >>> double_the_difference(array(9, -2))\n// 81\n// >>> double_the_difference(array(0))\n\
    // 0\n// If the input array is empty, return 0.\nfunction double_the_difference($lst)\
    \ {\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) &&\
    \ $num > 0) {\n            $sum += pow($num, 2);\n        }\n    }\n    return\
    \ $sum * 2;\n}\n\necho double_the_difference(array(1, 3, 2, 0));\necho \"\\n\"\
    ;\necho double_the_difference(array(-1, -2, 0));\necho \"\\n\";\necho double_the_difference(array(9,\
    \ -2));\necho \"\\n\";\necho double_the_difference(array(0));\necho \"\\n\";\n\
    echo double_the_difference(array());\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return double_the_difference(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0, -2.0, 8.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.2,\
    \ 3.0, 5.0)) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "28\n0\n162\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7io_hgqv.php:39\n\
    Stack trace:\n#0 /tmp/tmp7io_hgqv.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp7io_hgqv.php\
    \ on line 39\n"
  timestamp: 1659977940

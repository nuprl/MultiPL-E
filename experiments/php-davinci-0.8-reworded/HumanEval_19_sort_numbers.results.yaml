language: php
name: HumanEval_19_sort_numbers
results:
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n\t$words = explode(\" \", $numbers);\n\
    \tforeach ($words as $i => $word) {\n\t\tswitch ($word) {\n\t\t\tcase 'zero':\n\
    \t\t\t\t$numbers[$i] = 0;\n\t\t\t\tbreak;\n\t\t\tcase 'one':\n\t\t\t\t$numbers[$i]\
    \ = 1;\n\t\t\t\tbreak;\n\t\t\tcase 'two':\n\t\t\t\t$numbers[$i] = 2;\n\t\t\t\t\
    break;\n\t\t\tcase 'three':\n\t\t\t\t$numbers[$i] = 3;\n\t\t\t\tbreak;\n\t\t\t\
    case 'four':\n\t\t\t\t$numbers[$i] = 4;\n\t\t\t\tbreak;\n\t\t\tcase 'five':\n\t\
    \t\t\t$numbers[$i] = 5;\n\t\t\t\tbreak;\n\t\t\tcase 'six':\n\t\t\t\t$numbers[$i]\
    \ = 6;\n\t\t\t\tbreak;\n\t\t\tcase 'seven':\n\t\t\t\t$numbers[$i] = 7;\n\t\t\t\
    \tbreak;\n\t\t\tcase 'eight':\n\t\t\t\t$numbers[$i] = 8;\n\t\t\t\tbreak;\n\t\t\
    \tcase 'nine':\n\t\t\t\t$numbers[$i] = 9;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\tsort($numbers);\n\
    \tforeach ($numbers as $i => $number) {\n\t\tswitch ($number) {\n\t\t\tcase 0:\n\
    \t\t\t\t$numbers[$i] = 'zero';\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\t$numbers[$i]\
    \ = 'one';\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\t$numbers[$i] = 'two';\n\t\t\
    \t\tbreak;\n\t\t\tcase 3:\n\t\t\t\t$numbers[$i] = 'three';\n\t\t\t\tbreak;\n\t\
    \t\tcase 4:\n\t\t\t\t$numbers[$i] = '\nfunction candidate(...$args) {\n    return\
    \ sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"three\"\
    ) !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected string content "" in /tmp/tmpmwga4ei3.php
    on line 59

    '
  timestamp: 1659823903
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    foreach ($numbers as $key => $value) {\n        switch ($value)\
    \ {\n            case 'zero':\n                $numbers[$key] = 0;\n         \
    \       break;\n            case 'one':\n                $numbers[$key] = 1;\n\
    \                break;\n            case 'two':\n                $numbers[$key]\
    \ = 2;\n                break;\n            case 'three':\n                $numbers[$key]\
    \ = 3;\n                break;\n            case 'four':\n                $numbers[$key]\
    \ = 4;\n                break;\n            case 'five':\n                $numbers[$key]\
    \ = 5;\n                break;\n            case 'six':\n                $numbers[$key]\
    \ = 6;\n                break;\n            case 'seven':\n                $numbers[$key]\
    \ = 7;\n                break;\n            case 'eight':\n                $numbers[$key]\
    \ = 8;\n                break;\n            case 'nine':\n                $numbers[$key]\
    \ = 9;\n                break;\n        }\n    }\n    sort($numbers);\n    foreach\
    \ ($numbers as $key => $value) {\n        switch ($value) {\n            case\
    \ 0:\n                $numbers[$key] = 'zero';\n                break;\n     \
    \       case 1:\n                $numbers[$key] = 'one';\n                break;\n\
    \            case 2:\n                $numbers[$key] = 'two';\n              \
    \  break;\n            case 3:\n                $numbers[$key] = 'three';\n  \
    \              break;\n            case 4:\n                $numbers[$key] = 'four';\n\
    \                break;\n            case 5:\n                $numbers[$key] =\
    \ 'five';\n                break;\n            case 6:\n                $numbers[$key]\
    \ = 'six';\n                break;\n            case 7:\n                $numbers[$key]\
    \ = 'seven';\n                break;\n            case 8:\n                $numbers[$key]\
    \ = 'eight';\n                break;\n            case 9:\n                $numbers[$key]\
    \ = 'nine';\n                break;\n       \nfunction candidate(...$args) {\n\
    \    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three\") !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 45 in /tmp/tmpw3uq4lc8.php on line 89

    '
  timestamp: 1659823903
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $num_map = ['zero' => 0,\
    \ 'one' => 1, 'two' => 2, 'three' => 3, 'four' => 4, 'five' => 5, 'six' => 6,\
    \ 'seven' => 7, 'eight' => 8, 'nine' => 9];\n  $number_words = explode(' ', $numbers);\n\
    \  $number_ints = [];\n  $sorted_numbers = [];\n  foreach ($number_words as $word)\
    \ {\n    $number_ints[] = $num_map[$word];\n  }\n  asort($number_ints);\n  foreach\
    \ ($number_ints as $number => $key) {\n    $sorted_numbers[] = array_search($key,\
    \ $num_map);\n  }\n  return implode(' ', $sorted_numbers);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key \"\" in /tmp/tmpzaks136c.php on line 13\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzaks136c.php:27\nStack\
    \ trace:\n#0 /tmp/tmpzaks136c.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpzaks136c.php\
    \ on line 27\n"
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    $result = [];\n    foreach ($numbers as $num) {\n        switch($num)\
    \ {\n            case 'zero':\n                $result[] = 0;\n              \
    \  break;\n            case 'one':\n                $result[] = 1;\n         \
    \       break;\n            case 'two':\n                $result[] = 2;\n    \
    \            break;\n            case 'three':\n                $result[] = 3;\n\
    \                break;\n            case 'four':\n                $result[] =\
    \ 4;\n                break;\n            case 'five':\n                $result[]\
    \ = 5;\n                break;\n            case 'six':\n                $result[]\
    \ = 6;\n                break;\n            case 'seven':\n                $result[]\
    \ = 7;\n                break;\n            case 'eight':\n                $result[]\
    \ = 8;\n                break;\n            case 'nine':\n                $result[]\
    \ = 9;\n                break;\n        }\n    }\n    sort($result);\n    foreach\
    \ ($result as $key => $num) {\n        switch($num) {\n            case 0:\n \
    \               $result[$key] = 'zero';\n                break;\n            case\
    \ 1:\n                $result[$key] = 'one';\n                break;\n       \
    \     case 2:\n                $result[$key] = 'two';\n                break;\n\
    \            case 3:\n                $result[$key] = 'three';\n             \
    \   break;\n            case 4:\n                $result[$key] = 'four';\n   \
    \             break;\n            case 5:\n                $result[$key] = 'five';\n\
    \                break;\n            case 6:\n                $result[$key] =\
    \ 'six';\n                break;\n            case 7:\n                $result[$key]\
    \ = 'seven';\n                break;\n            case 8:\n                $result[$key]\
    \ = 'eight';\n                break;\n            case 9:\n                $result[$key]\
    \ = 'nine';\n                break;\n        }\n    }\n    return implode(\" \"\
    , $result);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823903
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n\t$nums = explode(\" \", $numbers);\n\
    \t$dict = array(\"zero\" => 0, \"one\" => 1, \"two\" => 2, \"three\" => 3, \"\
    four\" => 4, \"five\" => 5, \"six\" => 6, \"seven\" => 7, \"eight\" => 8, \"nine\"\
    \ => 9);\n\tsort($nums);\n\tforeach ($nums as $key => $value) {\n\t\t$nums[$key]\
    \ = $dict[$value];\n\t}\n\tsort($nums);\n\tforeach ($nums as $key => $value) {\n\
    \t\t$nums[$key] = array_search($value, $dict);\n\t}\n\treturn implode(\" \", $nums);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key \"\" in /tmp/tmp4i6szwe9.php on line 12\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4i6szwe9.php:26\nStack\
    \ trace:\n#0 /tmp/tmp4i6szwe9.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp4i6szwe9.php\
    \ on line 26\n"
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $values = explode(\" \"\
    , $numbers);\n    $nums_to_ints = array(\n        'zero' => 0,\n        'one'\
    \ => 1,\n        'two' => 2,\n        'three' => 3,\n        'four' => 4,\n  \
    \      'five' => 5,\n        'six' => 6,\n        'seven' => 7,\n        'eight'\
    \ => 8,\n        'nine' => 9\n    );\n    $ints_to_nums = array_flip($nums_to_ints);\n\
    \    $ints = array();\n    foreach ($values as $v) {\n        $ints[] = $nums_to_ints[$v];\n\
    \    }\n    sort($ints);\n    $strings = array();\n    foreach ($ints as $i) {\n\
    \        $strings[] = $ints_to_nums[$i];\n    }\n    return implode(\" \", $strings);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key "" in /tmp/tmpj4pnlz5s.php on line 24


    Warning: Undefined array key "" in /tmp/tmpj4pnlz5s.php on line 29

    '
  timestamp: 1659823903
- exit_code: 0
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n\tif(empty($numbers)) {\n\t\
    \treturn '';\n\t}\n\n\t$numberals = ['zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight', 'nine'];\n\t$num_array = explode(' ', $numbers);\n\t\
    $num_values = [];\n\tforeach($num_array as $number) {\n\t\t$num_values[] = array_search($number,\
    \ $numberals);\n\t}\n\tasort($num_values);\n\tforeach($num_values as $key => $value)\
    \ {\n\t\t$num_values[$key] = $numberals[$value];\n\t}\n\treturn implode(' ', $num_values);\n\
    }\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823903
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers_arr = explode(\"\
    \ \", $numbers);\n    $numbers_digit = array();\n    foreach ($numbers_arr as\
    \ $number) {\n        $numbers_digit[] = strlen($number);\n    }\n    sort($numbers_digit);\n\
    \    $numbers_sorted = array();\n    foreach ($numbers_digit as $digit) {\n  \
    \      foreach ($numbers_arr as $number) {\n            if (strlen($number) ==\
    \ $digit) {\n                $numbers_sorted[] = $number;\n                break;\n\
    \            }\n        }\n    }\n    return implode(\" \", $numbers_sorted);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvyle21ft.php:33\n\
    Stack trace:\n#0 /tmp/tmpvyle21ft.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpvyle21ft.php\
    \ on line 33\n"
  timestamp: 1659823903
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n\t$unsorted_numbers = explode(\"\
    \ \", $numbers);\n\t$sorted_numbers = array();\n\tfor ($i = 0; $i < count($unsorted_numbers);\
    \ $i++) {\n\t\t$unsorted_numbers[$i] = word_to_number($unsorted_numbers[$i]);\n\
    \t}\n\t//I am not a big fan of bubble sort, but I think it is the most efficient\
    \ way to do this\n\t//I might swap this out with a quick sort later\n\tfor ($i\
    \ = 0; $i < count($unsorted_numbers); $i++) {\n\t\tfor ($j = 0; $j < count($unsorted_numbers)\
    \ - 1; $j++) {\n\t\t\tif ($unsorted_numbers[$j] > $unsorted_numbers[$j + 1]) {\n\
    \t\t\t\t$temp = $unsorted_numbers[$j];\n\t\t\t\t$unsorted_numbers[$j] = $unsorted_numbers[$j\
    \ + 1];\n\t\t\t\t$unsorted_numbers[$j + 1] = $temp;\n\t\t\t}\n\t\t}\n\t}\n\tfor\
    \ ($i = 0; $i < count($unsorted_numbers); $i++) {\n\t\t$sorted_numbers[$i] = number_to_word($unsorted_numbers[$i]);\n\
    \t}\n\t$sorted_numbers = implode(\" \", $sorted_numbers);\n\treturn $sorted_numbers;\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function word_to_number()\
    \ in /tmp/tmpbl85yaj7.php:11\nStack trace:\n#0 /tmp/tmpbl85yaj7.php(32): sort_numbers('')\n\
    #1 /tmp/tmpbl85yaj7.php(36): candidate('')\n#2 /tmp/tmpbl85yaj7.php(43): test()\n\
    #3 {main}\n  thrown in /tmp/tmpbl85yaj7.php on line 11\n"
  timestamp: 1659823903
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $sort = [\"zero\" => 0, \"\
    one\" => 1, \"two\" => 2, \"three\" => 3, \"four\" => 4, \"five\" => 5, \"six\"\
    \ => 6, \"seven\" => 7, \"eight\" => 8, \"nine\" => 9];\n  $numbers = explode(\"\
    \ \", $numbers);\n  asort($numbers);\n  foreach ($numbers as $k => $v) {\n   \
    \ $numbers[$k] = array_search($v, $sort);\n  }\n  return implode(\" \", $numbers);\n\
    }\n\n$test1 = \"three one five\";\n$test2 = \"three one two\";\n$test3 = \"four\
    \ seven two three\";\n\necho sort_numbers($test1) . PHP_EOL;\necho sort_numbers($test2)\
    \ . PHP_EOL;\necho sort_numbers($test3) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "  \n  \n   \n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6j0my83h.php:30\n\
    Stack trace:\n#0 /tmp/tmp6j0my83h.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp6j0my83h.php\
    \ on line 30\n"
  timestamp: 1659823903
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n\t//explode our string into\
    \ an array of words\n\t$numbers_array = explode(\" \", $numbers);\n\t//map word\
    \ to number\n\t$numbers_array = array_map(function($word) {\n\t\tswitch ($word)\
    \ {\n\t\t\tcase 'zero':\n\t\t\t\treturn 0;\n\t\t\tcase 'one':\n\t\t\t\treturn\
    \ 1;\n\t\t\tcase 'two':\n\t\t\t\treturn 2;\n\t\t\tcase 'three':\n\t\t\t\treturn\
    \ 3;\n\t\t\tcase 'four':\n\t\t\t\treturn 4;\n\t\t\tcase 'five':\n\t\t\t\treturn\
    \ 5;\n\t\t\tcase 'six':\n\t\t\t\treturn 6;\n\t\t\tcase 'seven':\n\t\t\t\treturn\
    \ 7;\n\t\t\tcase 'eight':\n\t\t\t\treturn 8;\n\t\t\tcase 'nine':\n\t\t\t\treturn\
    \ 9;\n\t\t}\n\t}, $numbers_array);\n\t//sort array\n\tsort($numbers_array);\n\t\
    //map number to word\n\t$numbers_array = array_map(function($number) {\n\t\tswitch\
    \ ($number) {\n\t\t\tcase 0:\n\t\t\t\treturn 'zero';\n\t\t\tcase 1:\n\t\t\t\t\
    return 'one';\n\t\t\tcase 2:\n\t\t\t\treturn 'two';\n\t\t\tcase 3:\n\t\t\t\treturn\
    \ 'three';\n\t\t\tcase 4:\n\t\t\t\treturn 'four';\n\t\t\tcase 5:\n\t\t\t\treturn\
    \ 'five';\n\t\t\tcase 6:\n\t\t\t\treturn 'six';\n\t\t\tcase 7:\n\t\t\t\treturn\
    \ 'seven';\n\t\t\tcase 8:\n\t\t\t\treturn 'eight';\n\t\t\tcase 9:\n\t\t\t\treturn\
    \ 'nine';\n\t\t}\n\t}, $numbers_array);\n\t//implode our array back into a string\n\
    \treturn implode(\" \", $numbers_array);\n}\n\nif (sort_numbers(\"three one five\"\
    ) !== \"one three five\") {\n\techo \"Test #1 failed.\";\n} else {\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 68 in /tmp/tmpasr18j0h.php on line 81

    '
  timestamp: 1659823903
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $result = [];\n  $array =\
    \ explode(\" \", $numbers);\n  foreach ($array as $key => $value) {\n    $result[$value]\
    \ = number_convert($value);\n  }\n  asort($result);\n  return implode(\" \", array_keys($result));\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function number_convert()\
    \ in /tmp/tmpa5v_njn5.php:11\nStack trace:\n#0 /tmp/tmpa5v_njn5.php(18): sort_numbers('')\n\
    #1 /tmp/tmpa5v_njn5.php(22): candidate('')\n#2 /tmp/tmpa5v_njn5.php(29): test()\n\
    #3 {main}\n  thrown in /tmp/tmpa5v_njn5.php on line 11\n"
  timestamp: 1659823903
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n\t// your code here\n}\n\n\
    function candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_lh99n0q.php:16\n\
    Stack trace:\n#0 /tmp/tmp_lh99n0q.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp_lh99n0q.php\
    \ on line 16\n"
  timestamp: 1659823903
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    // TODO: your code here\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5e2ugiup.php:16\n\
    Stack trace:\n#0 /tmp/tmp5e2ugiup.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp5e2ugiup.php\
    \ on line 16\n"
  timestamp: 1659823903
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $array = explode(\" \", $numbers);\n\
    \  $sorted_array = array();\n  foreach ($array as $number) {\n    switch ($number)\
    \ {\n      case 'zero':\n        $sorted_array[] = 0;\n        break;\n      case\
    \ 'one':\n        $sorted_array[] = 1;\n        break;\n      case 'two':\n  \
    \      $sorted_array[] = 2;\n        break;\n      case 'three':\n        $sorted_array[]\
    \ = 3;\n        break;\n      case 'four':\n        $sorted_array[] = 4;\n   \
    \     break;\n      case 'five':\n        $sorted_array[] = 5;\n        break;\n\
    \      case 'six':\n        $sorted_array[] = 6;\n        break;\n      case 'seven':\n\
    \        $sorted_array[] = 7;\n        break;\n      case 'eight':\n        $sorted_array[]\
    \ = 8;\n        break;\n      case 'nine':\n        $sorted_array[] = 9;\n   \
    \     break;\n    }\n  }\n  sort($sorted_array);\n  $sorted_string = \"\";\n \
    \ foreach ($sorted_array as $number) {\n    switch ($number) {\n      case 0:\n\
    \        $sorted_string .= \"zero \";\n        break;\n      case 1:\n       \
    \ $sorted_string .= \"one \";\n        break;\n      case 2:\n        $sorted_string\
    \ .= \"two \";\n        break;\n      case 3:\n        $sorted_string .= \"three\
    \ \";\n        break;\n      case 4:\n        $sorted_string .= \"four \";\n \
    \       break;\n      case 5:\n        $sorted_string .= \"five \";\n        break;\n\
    \      case 6:\n        $sorted_string .= \"six \";\n        break;\n      case\
    \ 7:\n        $sorted_string .= \"seven \";\n        break;\n      case 8:\n \
    \       $sorted_string .= \"eight \";\n        break;\n      case 9:\n       \
    \ $sorted_string .= \"nine \";\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 47 in /tmp/tmpv6murn6a.php on line 89

    '
  timestamp: 1659823903
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $number_map = array(\n\
    \        'zero' => 0,\n        'one' => 1,\n        'two' => 2,\n        'three'\
    \ => 3,\n        'four' => 4,\n        'five' => 5,\n        'six' => 6,\n   \
    \     'seven' => 7,\n        'eight' => 8,\n        'nine' => 9\n    );\n    $numbers\
    \ = explode(' ', $numbers);\n    foreach ($numbers as $key => $number) {\n   \
    \     $numbers[$key] = $number_map[$number];\n    }\n    sort($numbers);\n   \
    \ foreach ($numbers as $key => $number) {\n        $numbers[$key] = array_search($number,\
    \ $number_map);\n    }\n    return implode(' ', $numbers);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key \"\" in /tmp/tmp9iftuc8h.php on line 22\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9iftuc8h.php:36\nStack\
    \ trace:\n#0 /tmp/tmp9iftuc8h.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp9iftuc8h.php\
    \ on line 36\n"
  timestamp: 1659823903
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $number_array = explode(\"\
    \ \", $numbers);\n    asort($number_array);\n    $number_string = implode(\" \"\
    , $number_array);\n    return $number_string;\n}\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp17437odd.php:20\n\
    Stack trace:\n#0 /tmp/tmp17437odd.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp17437odd.php\
    \ on line 20\n"
  timestamp: 1659823903
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n  $numbers_array = explode(\"\
    \ \", $numbers);\n  $digits = array(\"zero\", \"one\", \"two\", \"three\", \"\
    four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\");\n  foreach ($numbers_array\
    \ as $index => $number) {\n    $numbers_array[$index] = $digits[$number];\n  }\n\
    \  asort($numbers_array);\n  foreach ($numbers_array as $index => $number) {\n\
    \    $numbers_array[$index] = array_search($number, $digits);\n  }\n  return implode(\"\
    \ \", $numbers_array);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key \"\" in /tmp/tmp121sykq7.php on line 11\n\
    \nWarning: Undefined array key \"three\" in /tmp/tmp121sykq7.php on line 11\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp121sykq7.php:26\nStack\
    \ trace:\n#0 /tmp/tmp121sykq7.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp121sykq7.php\
    \ on line 26\n"
  timestamp: 1659823903
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2ytxour6.php:16\n\
    Stack trace:\n#0 /tmp/tmp2ytxour6.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp2ytxour6.php\
    \ on line 16\n"
  timestamp: 1659823903
- exit_code: 255
  program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers(\"three one five\")\n// \"one\
    \ three five\"\nfunction sort_numbers($numbers) {\n    $numbers = explode(\" \"\
    , $numbers);\n    sort($numbers);\n    return implode(\" \", $numbers);\n}\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2f1xs3zr.php:19\n\
    Stack trace:\n#0 /tmp/tmp2f1xs3zr.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp2f1xs3zr.php\
    \ on line 19\n"
  timestamp: 1659823903

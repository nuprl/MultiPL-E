name: HumanEval_94_skjkasdkd
language: php
prompt: "<?php\n// You are given an array of integers.\n// You need to find the largest\
  \ prime value and return the sum of its digits.\n// Examples:\n// >>> skjkasdkd(array(0,\
  \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3))\n// 10\n\
  // >>> skjkasdkd(array(1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1))\n\
  // 25\n// >>> skjkasdkd(array(1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
  \ 32, 30, 1, 9, 3))\n// 13\n// >>> skjkasdkd(array(0, 724, 32, 71, 99, 32, 6, 0,\
  \ 5, 91, 83, 0, 5, 6))\n// 11\n// >>> skjkasdkd(array(0, 81, 12, 3, 1, 21))\n//\
  \ 3\n// >>> skjkasdkd(array(0, 8, 1, 2, 1, 7))\n// 7\nfunction skjkasdkd($lst) {\n"
tests: "function candidate(...$args) {\n    return skjkasdkd(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(array(0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181,\
  \ 32, 4, 32, 3, 2, 32, 324, 4, 3)) !== 10) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(array(1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
  \ 5, 1)) !== 25) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
  \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3)) !== 13) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 724, 32, 71, 99,\
  \ 32, 6, 0, 5, 91, 83, 0, 5, 6)) !== 11) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(array(0, 81, 12, 3, 1, 21)) !== 3) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(0, 8, 1, 2, 1, 7)) !== 7) { throw new\
  \ Exception(\"Test failed!\"); }\n    if (candidate(array(8191)) !== 19) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(array(8191, 123456, 127,\
  \ 7)) !== 19) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(127,\
  \ 97, 8192)) !== 10) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["  $primes = [];\n  $sum = 0;\n  for ($i = 0; $i < count($lst); $i++)\
    \ {\n    if ($lst[$i] === 0 || $lst[$i] === 1) continue;\n    $prime = true;\n\
    \    for ($j = 2; $j < $lst[$i]; $j++) {\n      if ($lst[$i] % $j === 0) {\n \
    \       $prime = false;\n        break;\n      }\n    }\n    if ($prime) $primes[]\
    \ = $lst[$i];\n  }\n  $max = max($primes);\n  while ($max > 0) {\n    $sum +=\
    \ $max % 10;\n    $max = floor($max / 10);\n  }\n  return $sum;\n}\n", "\t$primes\
    \ = array();\n\tforeach ($lst as $num) {\n\t\t$is_prime = true;\n\t\tfor ($i =\
    \ 2; $i < $num; $i++) {\n\t\t\tif ($num % $i == 0) {\n\t\t\t\t$is_prime = false;\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ($is_prime) {\n\t\t\t$primes[] = $num;\n\
    \t\t}\n\t}\n\trsort($primes);\n\t$largest_prime = $primes[0];\n\t$digits = str_split($largest_prime);\n\
    \t$sum = 0;\n\tforeach ($digits as $digit) {\n\t\t$sum += $digit;\n\t}\n\treturn\
    \ $sum;\n}\necho skjkasdkd(array(0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32,\
    \ 4, 32, 3, 2, 32, 324, 4, 3)) . \"<br>\";\necho skjkasdkd(array(1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1)) . \"<br>\";\necho skjkasdkd(array(1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3)) . \"<br>\"\
    ;\necho skjkasdkd(array(0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6)) . \"\
    <br>\";\necho skjkasdkd(array(0, 81, 12, 3, 1, 21)) . \"<br>\";\necho skjkasdkd(array(0,\
    \ 8, 1, 2, 1, 7)) . \"<br>\";", "    // write your code here\n}", "\tif (count($lst)\
    \ == 0) return 0;\n\t$max = max($lst);\n\twhile (true) {\n\t\t$div = 2;\n\t\t\
    while ($div <= $max) {\n\t\t\tif ($max % $div == 0) break;\n\t\t\t$div++;\n\t\t\
    }\n\t\tif ($div == $max) break;\n\t\t$max--;\n\t}\n\treturn array_sum(str_split($max));\n\
    }\n", "    $max = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($lst[$i]\
    \ > $max) {\n            $max = $lst[$i];\n        }\n    }\n    $i = 2;\n   \
    \ while ($i < $max) {\n        $isPrime = true;\n        for ($j = 2; $j < $i;\
    \ $j++) {\n            if ($i % $j == 0) {\n                $isPrime = false;\n\
    \                break;\n            }\n        }\n        if ($isPrime) {\n \
    \           break;\n        }\n        $i++;\n    }\n    $sum = 0;\n    for ($j\
    \ = 0; $j < strlen($i); $j++) {\n        $sum += intval($i[$j]);\n    }\n    return\
    \ $sum;\n}", "  foreach ($lst as $value) {\n    if ($value == 2 || $value == 3\
    \ || $value == 5 || $value == 7) {\n      $prime[] = $value;\n    }\n    elseif\
    \ ($value % 2 != 0 && $value % 3 != 0 && $value % 5 != 0 && $value % 7 != 0) {\n\
    \      $prime[] = $value;\n    }\n  }\n  rsort($prime);\n  $string = implode('',\
    \ $prime);\n  $string = str_split($string);\n  $sum = array_sum($string);\n  return\
    \ $sum;\n}\n\nprint(skjkasdkd(array(0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32,\
    \ 4, 32, 3, 2, 32, 324, 4, 3)));\nprint('<br>');\nprint(skjkasdkd(array(1, 0,\
    \ 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1)));\nprint('<br>');\nprint(skjkasdkd(array(1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3)));\nprint('<br>');\n\
    print(skjkasdkd(array(0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6)));\nprint('<br>');\n\
    print(skjkasdkd(array(0, 81, 12, 3, 1, 21)));\nprint('<br>');\nprint(skjkasdkd(array(0,\
    \ 8, 1, 2, 1, 7)));\nprint('<br>');", "    // Your code here!\n}", "    $prime\
    \ = 0;\n    foreach ($lst as $value) {\n        if (isPrime($value)) {\n     \
    \       if ($value > $prime) {\n                $prime = $value;\n           \
    \ }\n        }\n    }\n    $sum = 0;\n    $arr = str_split($prime);\n    foreach\
    \ ($arr as $value) {\n        $sum += $value;\n    }\n    return $sum;\n}", " \
    \   $primes = [];\n    $largest = max($lst);\n    foreach ($lst as $x) {\n   \
    \     if (isPrime($x)) {\n            $primes[] = $x;\n        }\n    }\n    return\
    \ array_sum(str_split(max($primes)));\n}\n", "    $result = array_filter($lst,\
    \ 'is_prime');\n    $max = max($result);\n    $sum = 0;\n    while ($max >= 1)\
    \ {\n        $sum += $max % 10;\n        $max = floor($max / 10);\n    }\n   \
    \ return $sum;\n}\n", "    // Your code here\n}\n", "    $num = max($lst);\n \
    \   $primes = array();\n    for ($i = 2; $i <= $num; $i++) {\n        $isPrime\
    \ = true;\n        for ($j = 2; $j < $i; $j++) {\n            if ($i % $j == 0)\
    \ {\n                $isPrime = false;\n                break;\n            }\n\
    \        }\n        if ($isPrime) {\n            $primes[] = $i;\n        }\n\
    \    }\n    $sum = 0;\n    for ($i = 0; $i < strlen($primes[count($primes) - 1]);\
    \ $i++) {\n        $sum += intval($primes[count($primes) - 1][$i]);\n    }\n \
    \   return $sum;\n}\n\necho skjkasdkd(array(0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2,\
    \ 181, 32, 4, 32, 3, 2, 32, 324, 4, 3)) . \"\\n\";\necho skjkasdkd(array(1, 0,\
    \ 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1)) . \"\\n\";\necho skjkasdkd(array(1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3)) . \"\\n\";\n\
    echo skjkasdkd(array(0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6)) . \"\\\
    n\";\necho skjkasdkd(array(0, 81, 12, 3, 1, 21)) . \"\\n\";\necho skjkasdkd(array(0,\
    \ 8, 1, 2, 1, 7)) . \"\\n\";", "    $primes = getPrimes();\n    $max = 0;\n  \
    \  foreach ($lst as $val) {\n        if (isset($primes[$val]) && $val > $max)\
    \ {\n            $max = $val;\n        }\n    }\n    return array_sum(str_split((string)$max));\n\
    }\n", "    $primes = [];\n    for ($i = 0; $i < count($lst); $i++) {\n       \
    \ if ($lst[$i] % 2 != 0) {\n            if ($lst[$i] > 2) {\n                $primes[]\
    \ = $lst[$i];\n            }\n        }\n    }\n    print_r($primes);\n    $max\
    \ = max($primes);\n    $max = str_split($max);\n    $sum = 0;\n    for ($i = 0;\
    \ $i < count($max); $i++) {\n        $sum += $max[$i];\n    }\n    echo $sum;\n\
    }\nskjkasdkd(array(0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32,\
    \ 324, 4, 3));\nskjkasdkd(array(1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1));\nskjkasdkd(array(1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323,\
    \ 32, 30, 1, 9, 3));\nskjkasdkd(array(0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83,\
    \ 0, 5, 6));\nskjkasdkd(array(0, 81, 12, 3, 1, 21));\nskjkasdkd(array(0, 8, 1,\
    \ 2, 1, 7));", "\tfor ($i = 0; $i < count($lst); $i++) {\n\t\t$lst[$i] = calcPrime($lst[$i]);\n\
    \t}\n\t$lst = array_unique($lst);\n\trsort($lst);\n\treturn calcSum($lst[0]);\n\
    }", "  $max=0;\n  foreach($lst as $int){\n    if(isPrime($int) && $int>$max){\n\
    \      $max=$int;\n    }\n  }\n  $sum=0;\n  while($max>0){\n    $sum+=$max%10;\n\
    \    $max=(int)($max/10);\n  }\n  return $sum;\n}\n", "    //...your code...\n\
    }", "\t$max = 0;\n\tforeach ($lst as $value) {\n\t\tif ($value > $max) {\n\t\t\
    \t$max = $value;\n\t\t}\n\t}\n\tif ($max < 100) {\n\t\t$max = 100;\n\t}\n\t$primes\
    \ = array();\n\tfor ($i = 2; $i <= $max; $i++) {\n\t\tif (isPrime($i)) {\n\t\t\
    \t$primes[] = $i;\n\t\t}\n\t}\n\t$maxPrime = 0;\n\tforeach ($primes as $value)\
    \ {\n\t\tif ($value > $maxPrime) {\n\t\t\t$maxPrime = $value;\n\t\t}\n\t}\n\t\
    return sumDigits($maxPrime);\n}", "    // write your code here\n    $prime = [];\n\
    \    foreach ($lst as $key => $value) {\n        $check = 0;\n        for ($i=2;\
    \ $i <= $value/2; $i++) { \n            if ($value % $i == 0) {\n            \
    \    $check = 1;\n                break;\n            }\n        }\n        if\
    \ ($check == 0) {\n            $prime[] = $value;\n        }\n    }\n    $max\
    \ = max($prime);\n    $sum = 0;\n    while ($max != 0) {\n        $sum += $max\
    \ % 10;\n        $max = floor($max / 10);\n    }\n    return $sum;\n}", "}\n",
  "\t$lstPrimes = array();\n\tforeach ($lst as $item) {\n\t\tif (isPrime($item)) {\n\
    \t\t\t$lstPrimes[] = $item;\n\t\t}\n\t}\n\t$max = max($lstPrimes);\n\t$max = str_split($max);\n\
    \treturn array_sum($max);\n}\n", "    $max = 0;\n    foreach ($lst as $n) {\n\
    \        $k = skjkasdkd1($n);\n        if ($k > $max) $max = $k;\n    }\n    return\
    \ array_sum(str_split($max));\n}", "    $n = 0;\n    foreach ($lst as $num) {\n\
    \        $div = 2;\n        $isPrime = true;\n        while ($num > $div) {\n\
    \            if (($num % $div) == 0) {\n                $isPrime = false;\n  \
    \              break;\n            }\n            $div++;\n        }\n       \
    \ if ($isPrime && $num > $n) {\n            $n = $num;\n        }\n    }\n   \
    \ $sum = 0;\n    while ($n > 0) {\n        $sum += $n % 10;\n        $n = floor($n\
    \ / 10);\n    }\n    return $sum;\n}\n", "    // Write your code here\n    //\
    \ To print results to the standard output you can use print\n    // Example: print\
    \ \"Hello world!\";\n}", "  return array_sum(array_map(function($e) { return $e\
    \ % 10; }, array_filter($lst, function($e) {\n    if ($e < 2) return false;\n\
    \    $sq = sqrt($e);\n    for ($i = 2; $i <= $sq; $i++) {\n      if ($e % $i ==\
    \ 0) return false;\n    }\n    return true;\n  })));\n}\necho skjkasdkd(array(0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3)), \"\\\
    n\";\necho skjkasdkd(array(1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1)), \"\\n\";\necho skjkasdkd(array(1, 3, 1, 32, 5107, 34, 83278, 109, 163,\
    \ 23, 2323, 32, 30, 1, 9, 3)), \"\\n\";\necho skjkasdkd(array(0, 724, 32, 71,\
    \ 99, 32, 6, 0, 5, 91, 83, 0, 5, 6)), \"\\n\";\necho skjkasdkd(array(0, 81, 12,\
    \ 3, 1, 21)), \"\\n\";\necho skjkasdkd(array(0, 8, 1, 2, 1, 7)), \"\\n\";", " \
    \   $arr = array_count_values($lst);\n    for ($i = 0; $i < count($arr); $i++)\
    \ {\n        if ($arr[$i] > 1) {\n            unset($arr[$i]);\n        }\n  \
    \  }\n    return sum_digits(max($arr));\n}\n", "  $max = max($lst);\n  $primes\
    \ = [];\n  for ($i = 2; $i <= $max; $i++) {\n    if (isPrime($i)) {\n      $primes[]\
    \ = $i;\n    }\n  }\n  return sumDigits(max($primes));\n}\n", "  $max = 0;\n \
    \ foreach ($lst as $e) {\n    if ($e > $max) $max = $e;\n  }\n  if ($max < 10)\
    \ return $max;\n  $max_prime = $max;\n  for ($i = floor($max/2); $i > 0; $i--)\
    \ {\n    if ($max_prime % $i == 0) {\n      $max_prime = floor($max_prime / $i);\n\
    \      break;\n    }\n  }\n  $result = 0;\n  while ($max_prime > 0) {\n    $result\
    \ += $max_prime % 10;\n    $max_prime = floor($max_prime / 10);\n  }\n  return\
    \ $result;\n}\n\n$numbers = array(0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32,\
    \ 4, 32, 3, 2, 32, 324, 4, 3);\n$result = skjkasdkd($numbers);\necho $result;",
  "  if(is_array($lst)) {\n    rsort($lst);\n    foreach($lst as $v) {\n      if(is_prime($v))\
    \ {\n        $sum = 0;\n        foreach(str_split($v) as $v2) {\n          $sum\
    \ += $v2;\n        }\n        return $sum;\n      }\n    }\n  }\n  return false;\n\
    }", "\t$count = 0;\n\t$max = 0;\n\tfor ($i = 0; $i < count($lst); $i++) {\n\t\t\
    $number = $lst[$i];\n\t\t$count = 0;\n\t\tfor ($k = 1; $k <= $number; $k++) {\n\
    \t\t\tif ($number % $k == 0) {\n\t\t\t\t$count++;\n\t\t\t}\n\t\t}\n\t\tif ($count\
    \ == 2) {\n\t\t\tif ($number > $max) {\n\t\t\t\t$max = $number;\n\t\t\t}\n\t\t\
    }\n\t}\n\t$sum = 0;\n\twhile ($max != 0) {\n\t\t$sum += $max % 10;\n\t\t$max =\
    \ floor($max / 10);\n\t}\n\treturn $sum;\n}\nprint_r(skjkasdkd(array(0, 3, 2,\
    \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3)));", "$last=max($lst);\n\
    $res=0;\n\nfor($i=$last;$i>1;$i--){\n  if(isPrime($i)){\n  \n  $res=$i;\n  break;\n\
    \  }\n}\n\n$digits=$res;\n$total=0;\n\nwhile($digits>0){\n$total+=$digits%10;\n\
    $digits/=10;\n}\n\nreturn $total;\n}\n", "    $lst = array_unique($lst);\n   \
    \ $primes = [];\n    foreach ($lst as $item) {\n        if (prime($item)) {\n\
    \            $primes[] = $item;\n        }\n    }\n    $max = max($primes);\n\
    \    return array_sum(str_split($max));\n}\n", "  $prime = '';\n  $sum = 0;\n\
    \  for ($i = 0; $i < count($lst); $i++) {\n    if(isPrime($lst[$i])) {\n     \
    \ if ($lst[$i] > $prime) {\n        $prime = $lst[$i];\n      }\n    }\n  }\n\
    \  for ($i = 0; $i < strlen($prime); $i++) {\n    $sum += $prime[$i];\n  }\n \
    \ return $sum;\n}", "    $max = max($lst);\n    $res = 0;\n    for ($i = 2; $i\
    \ <= $max; $i++) {\n        if ($max % $i == 0) {\n            $max /= $i;\n \
    \           $res = $i;\n            $i = 1;\n        }\n    }\n    $sum = 0;\n\
    \    while ($res) {\n        $sum += $res % 10;\n        $res /= 10;\n    }\n\
    \    return $sum;\n}", "  $primes = [];\n  for ($i = 0; $i < sizeof($lst); $i++)\
    \ {\n    if (isPrime($lst[$i])) {\n      array_push($primes, $lst[$i]);\n    }\n\
    \  }\n  $max = max($primes);\n  $maxStr = strval($max);\n  $result = 0;\n  for\
    \ ($i = 0; $i < strlen($maxStr); $i++) {\n    $result += intval($maxStr[$i]);\n\
    \  }\n  return $result;\n}\n", "  $max=0;\n  foreach($lst as $num){\n    if($num>$max){\n\
    \      $max=$num;\n    }\n  }\n  while($max>1){\n    $flag=0;\n    for($i=2;$i<=(int)($max/2);$i++){\n\
    \      if($max%$i==0){\n        $flag=1;\n        break;\n      }\n    }\n   \
    \ if($flag==0){\n      break;\n    }\n    $max--;\n  }\n  $sum=0;\n  $sum+=$max%10;\n\
    \  $max=(int)($max/10);\n  $sum+=$max%10;\n  $max=(int)($max/10);\n  $sum+=$max%10;\n\
    \  return $sum;\n}", "\t$largestPrime = 0;\n\tforeach ($lst as $item) {\n\t\t\
    $prime = prime($item);\n\t\tif ($prime == True) {\n\t\t\tif ($item > $largestPrime)\
    \ {\n\t\t\t\t$largestPrime = $item;\n\t\t\t}\n\t\t}\n\t}\n\treturn array_sum(str_split($largestPrime));\n\
    }", "\t$prime = 0;\n\tforeach ($lst as $item) {\n\t\t$prime = is_prime($item)\
    \ ? $item : $prime;\n\t}\n\treturn array_sum(str_split($prime));\n}", "    $primes\
    \ = array();\n    $product = 1;\n    $answer = array();\n    $sum = 0;\n    foreach\
    \ ($lst as $i) {\n        $primes[$i] = true;\n    }\n    for ($i = 2; $i <= sqrt(max($lst));\
    \ $i++) {\n        if (isset($primes[$i])) {\n            for ($j = $i * $i; $j\
    \ <= max($lst); $j += $i) {\n                unset($primes[$j]);\n           \
    \ }\n        }\n    }\n    foreach ($primes as $key => $value) {\n        $product\
    \ *= $key;\n    }\n    $product = str_split($product);\n    foreach ($product\
    \ as $i) {\n        $sum += $i;\n    }\n    return $sum;\n}", "\t// your code\n\
    }", "  $primes = array();\n  for ($i = 0; $i < count($lst); $i++) {\n    if (isPrime($lst[$i]))\
    \ {\n      array_push($primes, $lst[$i]);\n    }\n  }\n  sort($primes);\n  return\
    \ sum(str_split(strval(end($primes))));\n}\n", "  $primeList = [2, 3, 5, 7];\n\
    \  $maxPrime = $primeList[0];\n  foreach ($lst as $value) {\n    if (in_array($value,\
    \ $primeList)) {\n      if ($value > $maxPrime) {\n        $maxPrime = $value;\n\
    \      }\n    } else {\n      $isPrime = true;\n      foreach ($primeList as $prime)\
    \ {\n        if ($value % $prime == 0) {\n          $isPrime = false;\n      \
    \    break;\n        }\n      }\n      if ($isPrime) {\n        $primeList[] =\
    \ $value;\n        if ($value > $maxPrime) {\n          $maxPrime = $value;\n\
    \        }\n      }\n    }\n  }\n  $maxPrimeString = strval($maxPrime);\n  $sum\
    \ = 0;\n  for ($i = 0; $i < strlen($maxPrimeString); $i++) {\n    $sum += intval($maxPrimeString[$i]);\n\
    \  }\n  return $sum;\n}\necho skjkasdkd([0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181,\
    \ 32, 4, 32, 3, 2, 32, 324, 4, 3]) . \"\\n\";\necho skjkasdkd([1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]) . \"\\n\";\necho skjkasdkd([1, 3,\
    \ 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]) . \"\\n\";\necho\
    \ skjkasdkd([0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]) . \"\\n\";\necho\
    \ skjkasdkd([0, 81, 12, 3, 1, 21]) . \"\\n\";\necho skjkasdkd([0, 8, 1, 2, 1,\
    \ 7]) . \"\\n\";", "  $primes = array();\n  foreach ($lst as $n) {\n    if (is_prime($n))\n\
    \      $primes[] = $n;\n  }\n  $largest = max($primes);\n  return digits_sum($largest);\n\
    }\n", "\t$sum = 0;\n\t$largestPrime = 0;\n\tfor ($i = 0; $i < count($lst); $i++)\
    \ {\n\t\tif (isPrime($lst[$i])) {\n\t\t\tif ($lst[$i] > $largestPrime) {\n\t\t\
    \t\t$largestPrime = $lst[$i];\n\t\t\t}\n\t\t}\n\t}\n\techo $largestPrime . \"\
    <br>\";\n\twhile ($largestPrime > 0) {\n\t\t$sum += $largestPrime % 10;\n\t\t\
    $largestPrime = floor($largestPrime / 10);\n\t}\n\treturn $sum;\n}\n", "  $primes\
    \ = [];\n  foreach ($lst as $n) {\n    if (isPrime($n)) {\n      $primes[] = $n;\n\
    \    }\n  }\n  if (!$primes) {\n    return 0;\n  }\n  $largest = max($primes);\n\
    \  $sum = 0;\n  while ($largest > 0) {\n    $sum += $largest % 10;\n    $largest\
    \ = (int)($largest / 10);\n  }\n  return $sum;\n}\n", "  $i = 0;\n  foreach ($lst\
    \ as $item) {\n    if ($item > $i) {\n      $i = $item;\n    }\n  }\n  while (true)\
    \ {\n    $prime = true;\n    if ($i % 2 == 0) {\n      $prime = false;\n    }\n\
    \    for ($j = 3; $j < $i / 2; $j = $j + 2) {\n      if ($i % $j == 0) {\n   \
    \     $prime = false;\n      }\n    }\n    if ($prime) {\n      break;\n    }\n\
    \    $i = $i - 1;\n  }\n  $sum = 0;\n  for ($k = 0; $k < strlen($i); $k++) {\n\
    \    $sum = $sum + intval($i[$k]);\n  }\n  return $sum;\n}\necho skjkasdkd(array(0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3)) . PHP_EOL;\n\
    echo skjkasdkd(array(1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1))\
    \ . PHP_EOL;\necho skjkasdkd(array(1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3)) . PHP_EOL;\necho skjkasdkd(array(0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6)) . PHP_EOL;\necho skjkasdkd(array(0, 81, 12, 3,\
    \ 1, 21)) . PHP_EOL;\necho skjkasdkd(array(0, 8, 1, 2, 1, 7)) . PHP_EOL;", " \
    \ $maxPrime = 0;\n  foreach ($lst as $item) {\n    if ($item >= $maxPrime && isPrime($item))\
    \ {\n      $maxPrime = $item;\n    }\n  }\n  $sum = 0;\n  while ($maxPrime > 0)\
    \ {\n    $sum += $maxPrime % 10;\n    $maxPrime = (int)($maxPrime / 10);\n  }\n\
    \  return $sum;\n}\n", "    $max = 0;\n    foreach ($lst as $k => $v) {\n    \
    \    if ($v > $max) {\n            $max = $v;\n        }\n    }\n    $primes =\
    \ [1];\n    $primes[] = 2;\n    $primes[] = 3;\n    $primes[] = 5;\n    $primes[]\
    \ = 7;\n    $primes[] = 11;\n    $primes[] = 13;\n    $primes[] = 17;\n    $primes[]\
    \ = 19;\n    $primes[] = 23;\n    $primes[] = 29;\n    $primes[] = 31;\n    $primes[]\
    \ = 37;\n    $primes[] = 41;\n    $primes[] = 43;\n    $primes[] = 47;\n    $primes[]\
    \ = 53;\n    $primes[] = 59;\n    $primes[] = 61;\n    $primes[] = 67;\n    $primes[]\
    \ = 71;\n    $primes[] = 73;\n    $primes[] = 79;\n    $primes[] = 83;\n    $primes[]\
    \ = 89;\n    $primes[] = 97;\n    $primes[] = 101;\n    $primes[] = 103;\n   \
    \ $primes[] = 107;\n    $primes[] = 109;\n    $primes[] = 113;\n    $primes[]\
    \ = 127;\n    $primes[] = 131;\n    $primes[] = 137;\n    $primes[] = 139;\n \
    \   $primes[] = 149;\n    $primes[] = 151;\n    $primes[] = 157;\n    $primes[]\
    \ = 163;\n    $primes[] = 167;\n    $primes[] = 173;\n    $primes[] = 179;\n \
    \   $primes[] = 181;\n    $primes[] = 191;\n    $primes[] = 193;\n    $primes[]\
    \ = 197;\n    $primes[] = 199;\n    $primes[] = 211;\n    $primes[] = 223;\n \
    \   $primes[] = 227;\n    $primes[] = 229;\n    $primes[] =", "\t$g = end($lst);\n\
    \tforeach($lst as $i) {\n\t\tif($i > $g) {\n\t\t\t$g = $i;\n\t\t}\n\t}\n\t\n\t\
    function is_prime($n) {\n\t\t$w = array();\n\t\tfor($i = 2; $i < $n; $i++) {\n\
    \t\t\tif($n % $i == 0) {\n\t\t\t\t$w[] = False;\n\t\t\t}\n\t\t}\n\t\tif(sizeof($w)\
    \ == 0) {\n\t\t\treturn True;\n\t\t} else {\n\t\t\treturn False;\n\t\t}\n\t}\n\
    \t\n\t$d = 0;\n\twhile($g > 0) {\n\t\t$d += $g % 10;\n\t\t$g = floor($g / 10);\n\
    \t}\n\tif(is_prime($d)) {\n\t\treturn $d;\n\t} else {\n\t\treturn skjkasdkd($lst);\n\
    \t}\n}", '}', "\t$primes = primeNumbers($lst);\n\tif(count($primes) == 0) return\
    \ 0;\n\t$largest = max($primes);\n\t$digits = str_split($largest);\n\treturn array_sum($digits);\n\
    }", "    $prime = 0;\n    $num = 0;\n    foreach ($lst as $key => $value) {\n\
    \        if (abs($value) >= 2) {\n            if ($value > $prime) {\n       \
    \         $prime = $value;\n            }\n        }\n    }\n    while ($prime\
    \ > 0) {\n        $num += $prime % 10;\n        $prime = floor($prime / 10);\n\
    \    }\n    return $num;\n}", "    $prime = null;\n    $largest = null;\n    $lst\
    \ = array_unique($lst);\n    foreach ($lst as $num) {\n        if ($num === 1)\
    \ {\n            continue;\n        } else if ($num === 2) {\n            $prime\
    \ = $num;\n        } else {\n            $prime = true;\n            for ($i =\
    \ 2; $i < $num; $i++) {\n                if ($num % $i === 0) {\n            \
    \        $prime = false;\n                    break;\n                }\n    \
    \        }\n        }\n        if ($prime) {\n            if ($num > $largest)\
    \ {\n                $largest = $num;\n            }\n        }\n    }\n    if\
    \ ($largest) {\n        $digits = str_split($largest);\n        return array_sum($digits);\n\
    \    } else {\n        return $largest;\n    }\n}\n", "    $lst = array_unique($lst);\n\
    \    $max = max($lst);\n    $func = \"function isPrime(n) {\n        if (n ===\
    \ 1) {\n            return false;\n        } else if (n === 2) {\n           \
    \ return true;\n        } else {\n            for (var x = 2; x < n; x++) {\n\
    \                if (n % x === 0) {\n                    return false;\n     \
    \           }\n            }\n            return true;\n        }\n    }\";\n\
    \    eval($func);\n    while ($max >= 0) {\n        if (isPrime($max)) {\n   \
    \         $res = str_split($max);\n            $sum = 0;\n            foreach\
    \ ($res as $val) {\n                $sum += $val;\n            }\n           \
    \ return $sum;\n        }\n        $max--;\n    }\n}", "    $primes = array();\n\
    \    $num = 0;\n    $len = 0;\n    $str_num = '';\n    $sum = 0;\n    foreach\
    \ ($lst as $num) {\n        if (is_prime($num)) {\n            array_push($primes,\
    \ $num);\n        }\n    }\n    if (count($primes) > 0) {\n        $num = max($primes);\n\
    \        $str_num = strval($num);\n        $len = strlen($str_num);\n        for\
    \ ($i = 0; $i < $len; $i++) {\n            $sum += intval($str_num[$i]);\n   \
    \     }\n    }\n    return $sum;\n}", "  return array_sum(str_split(max(array_filter($lst,\
    \ 'is_prime'))));\n}", "\t$largest = 0;\n\tforeach ($lst as $key => $value) {\n\
    \t\t$primes = array();\n\t\tfor ($i = 2; $i <= $value; $i++) {\n\t\t\t$count =\
    \ 0;\n\t\t\tfor ($j = 1; $j <= $i; $j++) {\n\t\t\t\tif ($i % $j == 0) {\n\t\t\t\
    \t\t$count++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ($count == 2) {\n\t\t\t\tarray_push($primes,\
    \ $i);\n\t\t\t}\n\t\t}\n\t\tif (max($primes) > $largest) {\n\t\t\t$largest = max($primes);\n\
    \t\t}\n\t}\n\t$digits = array();\n\twhile ($largest > 0) {\n\t\tarray_push($digits,\
    \ $largest % 10);\n\t\t$largest = floor($largest / 10);\n\t}\n\treturn array_sum($digits);\n\
    }", "\t$primes = [];\n\tforeach ($lst as $int) {\n\t\tif (isPrime($int)) {\n\t\
    \t\t$primes[] = $int;\n\t\t}\n\t}\n\t$largest = max($primes);\n\treturn array_sum(str_split((string)$largest));\n\
    }", "    // return max($lst);\n    $primes = array();\n    foreach ($lst as $value)\
    \ {\n        if (isPrime($value)) {\n            $primes[] = $value;\n       \
    \ }\n    }\n    $max_prime = max($primes);\n    $sum = 0;\n    for ($i = 0; $i\
    \ < strlen($max_prime); $i++) {\n        $sum += intval($max_prime[$i]);\n   \
    \ }\n    return $sum;\n}\n", "  $primes = find_primes_in_list($lst);\n  $largest_prime\
    \ = find_largest_prime($primes);\n  $sum_of_digits = find_sum_of_digits($largest_prime);\n\
    \  return $sum_of_digits;\n}", "    $arr = array_unique($lst);\n    $primes =\
    \ array();\n    for ($i = 0; $i < count($arr); $i++) {\n        if (gmp_prob_prime($arr[$i])\
    \ == 2) {\n            array_push($primes, $arr[$i]);\n        }\n    }\n    $result\
    \ = 0;\n    $sum = 0;\n    for ($i = 0; $i < count($primes); $i++) {\n       \
    \ if ($primes[$i] > $result) {\n            $result = $primes[$i];\n        }\n\
    \    }\n    while ($result > 0) {\n        $rem = $result % 10;\n        $sum\
    \ += $rem;\n        $result = (int)($result / 10);\n    }\n    return $sum;\n\
    }\n\necho skjkasdkd(array(0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32,\
    \ 3, 2, 32, 324, 4, 3));", "    $mx = max($lst);\n    $isPrime = function($num)\
    \ {\n        if ($num < 2) {\n            return false;\n        }\n        if\
    \ ($num == 2) {\n            return true;\n        }\n        if ($num % 2 ==\
    \ 0) {\n            return false;\n        }\n        for ($i = 3; $i <= ceil(sqrt($num));\
    \ $i = $i + 2) {\n            if ($num % $i == 0) {\n                return false;\n\
    \            }\n        }\n        return true;\n    };\n    for ($i = $mx; $i\
    \ > 0; $i--) {\n        if ($isPrime($i)) {\n            $sum = 0;\n         \
    \   for ($j = 0; $j < strlen($i); $j++) {\n                $sum += intval($i[$j]);\n\
    \            }\n            return $sum;\n        }\n    }\n}", "\tforeach ($lst\
    \ as $x) {\n\t\t$lst_prim[] = is_prime($x);\n\t}\n\t// var_dump($lst_prim);\n\t\
    foreach ($lst_prim as $key => $value) {\n\t\tif ($value == 1) {\n\t\t\t$a[] =\
    \ $lst[$key];\n\t\t}\n\t}\n\t$max = max($a);\n\t$x = array_sum(str_split($max));\n\
    \treturn $x;\n}\n", "    $prime_lst = [];\n    $prime_lst_str = [];\n    $prime_lst_sum\
    \ = [];\n    $prime_lst_sum_sorted = [];\n    $prime_lst_sorted = [];\n    $prime_lst_max\
    \ = [];\n    $prime_lst_sum_max = [];\n    foreach ($lst as $item) {\n       \
    \ if ($item > 1) {\n            if ($item == 2) {\n                $prime_lst[]\
    \ = $item;\n            } else {\n                $flag = true;\n            \
    \    for ($i = 2; $i < $item; $i++) {\n                    if ($item % $i == 0)\
    \ {\n                        $flag = false;\n                        break;\n\
    \                    }\n                }\n                if ($flag) {\n    \
    \                $prime_lst[] = $item;\n                }\n            }\n   \
    \     }\n    }\n    if (empty($prime_lst)) {\n        return 0;\n    } else {\n\
    \        foreach ($prime_lst as $item) {\n            $prime_lst_str[] = strval($item);\n\
    \        }\n        foreach ($prime_lst_str as $item) {\n            $prime_lst_sum[]\
    \ = array_sum(str_split($item));\n        }\n        $prime_lst_sum_sorted = $prime_lst_sum;\n\
    \        rsort($prime_lst_sum_sorted);\n        $prime_lst_max = array_unique($prime_lst_sum_sorted);\n\
    \        $prime_lst_sum_max = array_values($prime_lst_max);\n        $prime_lst_sorted\
    \ = array_unique($prime_lst_sum);\n        sort($prime_lst_sorted);\n        foreach\
    \ ($prime_lst_sorted as $item) {\n            if ($item == $prime_lst_sum_max[0])\
    \ {\n                return $item;\n            }\n        }\n    }\n}\n\nprint_r(skjkasdkd(array(0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5,", "  // BEGIN (write your solution here)\n  \n  $number\
    \ = max($lst);\n  $i = 2;\n  while ($i * $i <= $number) {\n      if ($number %\
    \ $i == 0) {\n          $number = $number / $i;\n      } else {\n          $i\
    \ = $i + 1;\n      }\n  }\n  $sum = 0;\n  while ($number > 0) {\n      $sum =\
    \ $sum + $number % 10;\n      $number = (int)($number / 10);\n  }\n  return $sum;\n\
    \  // END\n}", "    $largest_prime = 0;\n    $len = count($lst);\n    for ($i\
    \ = 0; $i < $len; $i++) {\n        if ($lst[$i] == 1) {\n            continue;\n\
    \        }\n        $prime = True;\n        for ($j = $i + 1; $j < $len; $j++)\
    \ {\n            if ($lst[$j] % $lst[$i] == 0) {\n                $prime = False;\n\
    \                break;\n            }\n        }\n        if ($prime && $lst[$i]\
    \ > $largest_prime) {\n            $largest_prime = $lst[$i];\n        }\n   \
    \ }\n    if ($largest_prime == 0) {\n        return 0;\n    }\n    $sum = 0;\n\
    \    while ($largest_prime > 0) {\n        $sum += $largest_prime % 10;\n    \
    \    $largest_prime = intval($largest_prime / 10);\n    }\n    return $sum;\n\
    }\n", "   $primes = [];\n   foreach($lst as $n) {\n       $isPrime = true;\n \
    \      for($i = 2; $i < $n; $i++) {\n           if ($n % $i == 0) {\n        \
    \       $isPrime = false;\n               break;\n           }\n       }\n   \
    \    if ($isPrime && $n > 0) {\n           $primes[] = $n;\n       }\n   }\n \
    \  $max = max($primes);\n   return array_sum(str_split($max));\n}\n", "\n}\n",
  "  // Write your code here\n  // To print results to the standard output you can\
    \ use print\n  // Example: print \"Hello world!\";\n  \n}\n", "    $max = max($lst);\n\
    \    for ($i = $max; $i > 1; $i--) {\n        $cnt = 0;\n        for ($j = 1;\
    \ $j <= $i; $j++) {\n            if ($i % $j == 0) {\n                $cnt++;\n\
    \            }\n        }\n        if ($cnt == 2) {\n            $num = $i;\n\
    \            break;\n        }\n    }\n    $sum = 0;\n    while ($num != 0) {\n\
    \        $sum += $num % 10;\n        $num = floor($num / 10);\n    }\n    return\
    \ $sum;\n}\n", "    function primes($n) {\n        for ($i = 2; $i <= sqrt($n);\
    \ $i++) {\n            if ($n % $i == 0) {\n                return false;\n  \
    \          }\n        }\n        return true;\n    }\n    $primes = array_filter($lst,\
    \ \"primes\");\n    $max = max($primes);\n    $result = 0;\n    while ($max) {\n\
    \        $result += $max % 10;\n        $max = floor($max / 10);\n    }\n    return\
    \ $result;\n}", "  $prime_list = primes_up_to(max($lst));\n  $prime_set = array_flip($prime_list);\n\
    \  $result = 0;\n  foreach ($lst as $number) {\n    if (isset($prime_set[$number]))\
    \ {\n      $result = $number;\n    }\n  }\n  return array_sum(str_split($result));\n\
    }\n", "    $maxNum = 0;\n    foreach ($lst as $i) {\n        if ($i > $maxNum)\
    \ $maxNum = $i;\n    }\n    $i = 2;\n    $prime = 2;\n    $isPrime = false;\n\
    \    while ($i <= $maxNum) {\n        $j = 2;\n        while ($j <= $i / 2) {\n\
    \            if ($i % $j == 0) {\n                $isPrime = false;\n        \
    \        break;\n            }\n            $isPrime = true;\n            $j +=\
    \ 1;\n        }\n        if ($isPrime && $i > $prime) $prime = $i;\n        $i\
    \ += 1;\n    }\n    $sum = 0;\n    while ($prime > 0) {\n        $sum += $prime\
    \ % 10;\n        $prime = floor($prime / 10);\n    }\n    return $sum;\n}", " \
    \   $max = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($lst[$i]\
    \ > $max) {\n            $max = $lst[$i];\n        }\n    }\n    while (!isPrime($max))\
    \ {\n        $max--;\n    }\n    $sum = 0;\n    while ($max > 0) {\n        $sum\
    \ += $max % 10;\n        $max = intval($max / 10);\n    }\n    return $sum;\n\
    }\n", "    $max_prime = -1;\n    foreach ($lst as $v) {\n        if (is_prime($v)\
    \ && $v > $max_prime) {\n            $max_prime = $v;\n        }\n    }\n    if\
    \ ($max_prime < 0) return 0;\n    return get_digit_sum($max_prime);\n}", "   \
    \ $prime_list = array();\n    $i = 0;\n    $max = $lst[0];\n    for ($i = 0; $i\
    \ < count($lst); $i++) {\n        if ($lst[$i] > $max) {\n            $max = $lst[$i];\n\
    \        }\n    }\n    // echo $max;\n    $prime_list = findPrimeNumbers($max);\n\
    \    $i = 0;\n    $max = 0;\n    for ($i = 0; $i < count($prime_list); $i++) {\n\
    \        if ($prime_list[$i] > $max) {\n            $max = $prime_list[$i];\n\
    \        }\n    }\n    return sumOfDigits($max);\n}", "  $prime = 0;\n  foreach\
    \ ($lst as $l) {\n    $is_prime = true;\n    for ($i = 2; $i < $l; $i++) {\n \
    \     if ($l % $i == 0) {\n        $is_prime = false;\n        break;\n      }\n\
    \    }\n    if ($is_prime && $l > $prime) {\n      $prime = $l;\n    }\n  }\n\
    \  $prime_lst = str_split($prime);\n  $sum = 0;\n  foreach ($prime_lst as $p)\
    \ {\n    $sum += $p;\n  }\n  return $sum;\n}\n\nskjkasdkd(array(0, 3, 2, 1, 3,\
    \ 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3));\nskjkasdkd(array(1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1));\nskjkasdkd(array(1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3));\nskjkasdkd(array(0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6));\nskjkasdkd(array(0, 81, 12,\
    \ 3, 1, 21));\nskjkasdkd(array(0, 8, 1, 2, 1, 7));\n", "  foreach ($lst as $i)\
    \ {\n    if ($i > 1) {\n      $factors = factor($i);\n      if ($factors == $i)\
    \ {\n        $primes[] = $i;\n      }\n    }\n  }\n  $max_prime = max($primes);\n\
    \  $digits = str_split((string)$max_prime);\n  return array_sum($digits);\n}\n",
  "  $prime_array = array();\n  foreach ($lst as $num) {\n    $num = getMaxPrime($num);\n\
    \    $prime_array[] = $num;\n  }\n  return sumDigits(max($prime_array));\n}\n",
  "    $answer = 0;\n    $prime = array();\n    $test = array();\n    foreach ($lst\
    \ as $value) {\n        $check = 0;\n        if($value % 2 != 0){\n          \
    \  $max = sqrt($value);\n            for($i = 3; $i <= $max; $i += 2){\n     \
    \           if($value % $i == 0){\n                    $check = 1;\n         \
    \           break;\n                }\n            }\n            if($check ==\
    \ 0){\n                array_push($prime, $value);\n            }\n        }\n\
    \    }\n    $max = max($prime);\n    while ($max != 0) {\n        $answer += $max\
    \ % 10;\n        $max = (int)($max / 10);\n    }\n    return $answer;\n}", " \
    \   $largest = 0;\n    foreach ($lst as $num) {\n        $primes = array();\n\
    \        for ($i = 2; $i <= $num; $i++) {\n            $primes[$i] = true;\n \
    \       }\n        for ($i = 2; $i * $i <= $num; $i++) {\n            if ($primes[$i])\
    \ {\n                for ($j = $i; $i * $j <= $num; $j++) {\n                \
    \    $primes[$i * $j] = false;\n                }\n            }\n        }\n\
    \        foreach ($primes as $prime => $bool) {\n            if ($bool && $prime\
    \ > $largest) {\n                $largest = $prime;\n            }\n        }\n\
    \    }\n    return array_sum(str_split($largest));\n}\necho skjkasdkd(array(0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3));\necho\
    \ skjkasdkd(array(1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1));\n\
    echo skjkasdkd(array(1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30,\
    \ 1, 9, 3));\necho skjkasdkd(array(0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0,\
    \ 5, 6));\necho skjkasdkd(array(0, 81, 12, 3, 1, 21));\necho skjkasdkd(array(0,\
    \ 8, 1, 2, 1, 7));", "  $max = max($lst);\n  if ($max == 1) {\n    return 1;\n\
    \  }\n  foreach ($lst as $key => $value) {\n    if (isPrime($value)) {\n     \
    \ $lst[$key] = $value;\n    } else {\n      $lst[$key] = 1;\n    }\n  }\n  $prime\
    \ = max($lst);\n  $sum = 0;\n  while ($prime > 0) {\n    $sum += $prime % 10;\n\
    \    $prime = floor($prime / 10);\n  }\n  return $sum;\n}", "}\n", "\t$l = count($lst);\n\
    \t$primes = [2, 3, 5, 7];\n\t$f = false;\n\tfor ($i = 0; $i < $l; $i++) {\n\t\t\
    if (!$f && $lst[$i] > 3) {\n\t\t\tfor ($j = 0; $j < $l; $j++) {\n\t\t\t\t$x =\
    \ $lst[$j];\n\t\t\t\tif ($x > 3) {\n\t\t\t\t\tfor ($k = 0; $k < 4; $k++) {\n\t\
    \t\t\t\t\tif ($x % $primes[$k] == 0) {\n\t\t\t\t\t\t\t$f = true;\n\t\t\t\t\t\t\
    \tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (!$f) {\n\t\t\t\t\t\t$lst[$j]\
    \ = 0;\n\t\t\t\t\t}\n\t\t\t\t\t$f = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\
    $max = 0;\n\tfor ($i = 0; $i < $l; $i++) {\n\t\tif ($lst[$i] > $max) {\n\t\t\t\
    $max = $lst[$i];\n\t\t}\n\t}\n\treturn array_sum(str_split($max));\n}\necho skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]) . \"\
    <br>\";\necho skjkasdkd([1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5,\
    \ 1]) . \"<br>\";\necho skjkasdkd([1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23,\
    \ 2323, 32, 30, 1, 9, 3]) . \"<br>\";\necho skjkasdkd([0, 724, 32, 71, 99", " \
    \   $max = 0;\n    foreach ($lst as $num) {\n        if (isPrime($num) && $num\
    \ > $max) {\n            $max = $num;\n        }\n    }\n    return sumDigits($max);\n\
    }\n", "    $count = count($lst);\n    if ($count == 0) {\n        return $count;\n\
    \    }\n    $max = 0;\n    for ($i = 0; $i < $count; $i++) {\n        if ($lst[$i]\
    \ > $max) {\n            $max = $lst[$i];\n        }\n    }\n    $res = [];\n\
    \    for ($i = 2; $i <= $max; $i++) {\n        $j = 2;\n        while ($i * $j\
    \ <= $max) {\n            $res[$i * $j] = false;\n            $j++;\n        }\n\
    \    }\n    $primes = [];\n    foreach ($res as $key => $value) {\n        if\
    \ ($key >= 2) {\n            $primes[] = $key;\n        }\n    }\n    $maxPrime\
    \ = 0;\n    foreach ($primes as $prime) {\n        if ($prime > $maxPrime) {\n\
    \            $maxPrime = $prime;\n        }\n    }\n    $n = $maxPrime;\n    $sum\
    \ = 0;\n    while ($n != 0) {\n        $remainder = $n % 10;\n        $sum +=\
    \ $remainder;\n        $n = floor($n / 10);\n    }\n    return $sum;\n}", "\t\
    $v = 0;\n\t$o = array();\n\tforeach ($lst as $l)\n\t\tfor ($i = 2; $i < $l; $i++)\n\
    \t\t\tif ($l % $i == 0)\n\t\t\t\tbreak;\n\t\t\telseif ($i == $l - 1)\n\t\t\t\t\
    $o[] = $l;\n\t$c = max($o);\n\twhile ($c > 0) {\n\t\t$v += $c % 10;\n\t\t$c /=\
    \ 10;\n\t}\n\treturn $v;\n}\necho skjkasdkd(array(0, 3, 2, 1, 3, 5, 7, 4, 5, 5,\
    \ 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3));", "\t$max = 0;\n\tforeach ($lst\
    \ as $v) {\n\t\t$x = is_prime($v);\n\t\tif ($x > $max) {\n\t\t\t$max = $x;\n\t\
    \t}\n\t}\n\t$arr = str_split($max);\n\treturn array_sum($arr);\n}\n", "\t$max\
    \ = 0;\n\tforeach ($lst as $number) {\n\t\t$primes = array_filter(prime($number),\
    \ function($a) {\n\t\t\treturn $a !== 2;\n\t\t});\n\t\tif (empty($primes)) {\n\
    \t\t\tcontinue;\n\t\t}\n\t\t$max = max($max, max($primes));\n\t}\n\treturn array_sum(array_map('intval',\
    \ str_split($max)));\n}\n", "    return 0;\n}", "  $largest = 0;\n  foreach ($lst\
    \ as $num) {\n    $num_primes = 0;\n    for ($j = 1; $j <= $num; $j++) {\n   \
    \   if ($num % $j == 0) {\n        $num_primes++;\n      }\n    }\n    if ($num_primes\
    \ == 2) {\n      if ($num > $largest) {\n        $largest = $num;\n      }\n \
    \   }\n  }\n  return array_sum(str_split($largest));\n}\n\nif (isset($_GET['list']))\
    \ {\n  $list = json_decode($_GET['list']);\n  echo(skjkasdkd($list));\n}", "\t\
    $n = $lst[0];\n\tif ($n == 0) return 0;\n\t$primes = array(2, 3, 5, 7);\n\tfor\
    \ ($i = 2; $i <= $n; $i++) {\n\t\tif ($i % 2 == 0) continue;\n\t\t$isPrime = True;\n\
    \t\tfor ($j = 0; $j < count($primes); $j++) {\n\t\t\tif ($i % $primes[$j] == 0)\
    \ {\n\t\t\t\t$isPrime = False;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ($isPrime)\
    \ array_push($primes, $i);\n\t}\n\t$sum = 0;\n\tfor ($i = 0; $i < count($primes);\
    \ $i++) {\n\t\t$sum += $primes[$i];\n\t}\n\treturn $sum;\n}", "\t$prime = null;\n\
    \tforeach ($lst as $num) {\n\t\tif (isPrime($num)) {\n\t\t\tif (empty($prime))\
    \ {\n\t\t\t\t$prime = $num;\n\t\t\t} else {\n\t\t\t\tif ($num > $prime) {\n\t\t\
    \t\t\t$prime = $num;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t$primeString = (string)$prime;\n\
    \t$primeStringArray = str_split($primeString);\n\treturn array_sum($primeStringArray);\n\
    }\n", "    $max = 0;\n    foreach ($lst as $n) {\n        if (isPrime($n) && $n\
    \ > $max) {\n            $max = $n;\n        }\n    }\n    $s = strval($max);\n\
    \    $s = str_split($s);\n    $result = 0;\n    foreach ($s as $n) {\n       \
    \ $result += intval($n);\n    }\n    return $result;\n}\n", $s = 0;, "  return\
    \ array_sum(array_map('intval', str_split(max(array_filter($lst, function($x)\
    \ {\n    for ($i = 2; $i < $x; $i++) {\n      if ($x % $i == 0) {\n        return\
    \ false;\n      }\n    }\n    return true;\n  })))));\n}\n", "    $max = max($lst);\n\
    \    $sum = 0;\n    while ($max > 0) {\n        $max = floor($max / 10);\n   \
    \     $sum++;\n    }\n    return $sum;\n}", "    $s = 0;\n    $l = 0;\n    foreach\
    \ ($lst as $n) {\n        if (isPrime($n) and $n > $l) {\n            $l = $n;\n\
    \        }\n    }\n    while ($l) {\n        $s += $l % 10;\n        $l /= 10;\n\
    \    }\n    return $s;\n}\n", "  $primes = array();\n  for ($i = 0; $i < count($lst);\
    \ $i++) {\n    $prime = true;\n    for ($j = 0; $j < count($lst); $j++) {\n  \
    \    if ($i != $j && $lst[$i] % $lst[$j] == 0) {\n        $prime = false;\n  \
    \      break;\n      }\n    }\n    if ($prime == true) {\n      array_push($primes,\
    \ $lst[$i]);\n    }\n  }\n  $largest = 0;\n  for ($i = 0; $i < count($primes);\
    \ $i++) {\n    if ($primes[$i] > $largest) {\n      $largest = $primes[$i];\n\
    \    }\n  }\n  $sum = 0;\n  while ($largest > 0) {\n    $sum += $largest % 10;\n\
    \    $largest = floor($largest / 10);\n  }\n  return $sum;\n}\n", "  $bigPrime\
    \ = 0;\n  foreach ($lst as $val) {\n    if (isPrime($val) && $val > $bigPrime)\
    \ {\n      $bigPrime = $val;\n    }\n  }\n  $sum = 0;\n  while ($bigPrime > 0)\
    \ {\n    $sum += $bigPrime % 10;\n    $bigPrime = floor($bigPrime / 10);\n  }\n\
    \  return $sum;\n}\n", "  //your code here\n}", "  $lst = array_unique($lst);\n\
    \  $largest = 0;\n  foreach ($lst as $num) {\n    if ($num == 1) {\n      continue;\n\
    \    }\n    $count = 0;\n    for ($i = 2; $i <= $num / 2; $i++) {\n      if ($num\
    \ % $i == 0) {\n        $count++;\n        break;\n      }\n    }\n    if ($count\
    \ == 0 && $num > $largest) {\n      $largest = $num;\n    }\n  }\n  $sum = 0;\n\
    \  while ($largest) {\n    $sum += $largest % 10;\n    $largest = floor($largest\
    \ / 10);\n  }\n  return $sum;\n}\nprint_r(skjkasdkd(array(0, 3, 2, 1, 3, 5, 7,\
    \ 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3)));\nprint_r(skjkasdkd(array(1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1)));\nprint_r(skjkasdkd(array(1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3)));\nprint_r(skjkasdkd(array(0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6)));\nprint_r(skjkasdkd(array(0,\
    \ 81, 12, 3, 1, 21)));\nprint_r(skjkasdkd(array(0, 8, 1, 2, 1, 7)));", "    if\
    \ (!is_array($lst)) return false;\n    $sum = 0;\n    $max_prime = 0;\n    foreach\
    \ ($lst as $value) {\n        if (is_prime($value)) {\n            $max_prime\
    \ = max($max_prime, $value);\n        }\n    }\n    while ($max_prime) {\n   \
    \     $sum += $max_prime % 10;\n        $max_prime = intval($max_prime / 10);\n\
    \    }\n    return $sum;\n}", "\t$largest = -1;\n\tforeach ($lst as $x) {\n\t\t\
    if ($x > $largest && isPrime($x)) {\n\t\t\t$largest = $x;\n\t\t}\n\t}\n\tif ($largest\
    \ != -1) {\n\t\t$sum = 0;\n\t\t$x = $largest;\n\t\twhile ($x != 0) {\n\t\t\t$sum\
    \ += $x % 10;\n\t\t\t$x = (int)($x / 10);\n\t\t}\n\t\treturn $sum;\n\t}\n\treturn\
    \ 0;\n}", '}', "    $primes = array();\n    $last_prime = 1;\n    foreach ($lst\
    \ as $num) {\n        if ($num == 1) {\n            continue;\n        }\n   \
    \     if ($num == 2) {\n            $primes[] = $num;\n            $last_prime\
    \ = $num;\n            continue;\n        }\n        if (is_prime($num)) {\n \
    \           $primes[] = $num;\n            $last_prime = $num;\n        }\n  \
    \  }\n    if ($last_prime > 1) {\n        return array_sum(str_split((string)$last_prime));\n\
    \    }\n    return 0;\n}\n", "  $arr = [];\n  foreach ($lst as $val) {\n    if\
    \ (isPrime($val)) $arr[] = $val;\n  }\n  return array_sum(str_split(max($arr)));\n\
    }", "\t$primes = [];\n\t$max = 0;\n\t$num = 0;\n\tforeach ($lst as $num) {\n\t\
    \tif ($num === 0) {\n\t\t\tcontinue;\n\t\t}\n\t\tif ($num == 1) {\n\t\t\t$primes[]\
    \ = 1;\n\t\t\tcontinue;\n\t\t}\n\t\t$isPrime = true;\n\t\tfor ($i = 2; $i < $num;\
    \ $i++) {\n\t\t\tif ($num % $i == 0) {\n\t\t\t\t$isPrime = false;\n\t\t\t\tbreak;\n\
    \t\t\t}\n\t\t}\n\t\tif ($isPrime) {\n\t\t\t$primes[] = $num;\n\t\t}\n\t}\n\tif\
    \ (empty($primes)) {\n\t\treturn 0;\n\t}\n\tsort($primes);\n\t$max = array_pop($primes);\n\
    \t$res = str_split($max);\n\treturn array_sum($res);\n}\n", "    $lst = array_diff($lst,\
    \ array(0));\n    sort($lst);\n    $lst = array_reverse($lst);\n    $prime_factor_list\
    \ = array();\n    $prime_factor_values = array();\n    foreach ($lst as $value)\
    \ {\n        $prime_factor_list[$value] = get_prime_factors($value);\n       \
    \ $prime_factor_values[$value] = array_values($prime_factor_list[$value]);\n \
    \   }\n    $prime_value = 0;\n    $lst_position = -1;\n    foreach ($prime_factor_values\
    \ as $key => $value) {\n        if (count($value) == 1) {\n            $prime_value\
    \ = $key;\n            $lst_position = array_search($key, $lst);\n           \
    \ break;\n        }\n    }\n    if ($prime_value == 0) {\n        foreach ($prime_factor_values\
    \ as $key => $value) {\n            if (count($value) == 2) {\n              \
    \  if (is_prime($value[0]) && is_prime($value[1])) {\n                    $prime_value\
    \ = $key;\n                    $lst_position = array_search($key, $lst);\n   \
    \                 break;\n                }\n            }\n        }\n    }\n\
    \    $prime_factor_sum = array_sum(array_map('intval', str_split($prime_value)));\n\
    \    return $prime_factor_sum;\n}\n", "    if (count($lst) == 0) return 0;\n \
    \   $res = 0;\n    $res2 = 0;\n    $cnt = 0;\n    for ($i = 0; $i < count($lst);\
    \ $i++) {\n        if ($lst[$i] == 0) {\n            $res2 = 1;\n            $cnt\
    \ = 0;\n        } else if ($lst[$i] == 1) {\n            $res2 = 1;\n        \
    \    $cnt++;\n        } else {\n            $res2 = $lst[$i];\n            for\
    \ ($n = 2; $n <= $lst[$i]; $n++) {\n                if ($lst[$i] % $n == 0) {\n\
    \                    $res2 = $lst[$i] / $n;\n                    $cnt++;\n   \
    \             }\n            }\n        }\n        if ($res2 > $res) {\n     \
    \       $res = $res2;\n        }\n    }\n    $res2 = 0;\n    for ($n = 0; $n <\
    \ strlen($res); $n++) {\n        $res2 += substr($res, $n, 1);\n    }\n    return\
    \ $res2;\n}", "    foreach ($lst as $v) {\n        if (isPrime($v)) {\n      \
    \      $prime = $v;\n        }\n    }\n    $prime = str_split($prime);\n    return\
    \ array_sum($prime);\n}", "    $largestPrime = 0;\n    $sumOfDigits = 0;\n   \
    \ for ($i = 0; $i < count($lst); $i++) {\n        $lst[$i] = intval($lst[$i]);\n\
    \        if (isPrime($lst[$i])) {\n            if ($lst[$i] > $largestPrime) {\n\
    \                $largestPrime = $lst[$i];\n            }\n        }\n    }\n\
    \    $sumOfDigits = getSumOfDigits($largestPrime);\n    return $sumOfDigits;\n\
    }\n", "  $prime_array = array();\n  foreach ($lst as $num) {\n    if (is_prime($num))\
    \ {\n      array_push($prime_array, $num);\n    }\n  }\n  $max_prime = max($prime_array);\n\
    \  $sum = 0;\n  while ($max_prime > 0) {\n    $sum += $max_prime % 10;\n    $max_prime\
    \ = intval($max_prime / 10);\n  }\n  return $sum;\n}\n", "  $prime_lst = find_prime($lst);\n\
    \  $max_prime = max($prime_lst);\n  $max_prime_digits = str_split($max_prime);\n\
    \  $sum = 0;\n  foreach ($max_prime_digits as $digit) {\n    $sum += $digit;\n\
    \  }\n  return $sum;\n}", "    $primes = [];\n    foreach($lst as $num) {\n  \
    \      if(isPrime($num)) {\n            $primes[] = $num;\n        }\n    }\n\
    \    $max = max($primes);\n    return array_sum(str_split($max));\n}\n", "   \
    \ $lst = array_unique($lst);\n    $biggest = 0;\n    foreach ($lst as $num) {\n\
    \        $prime = true;\n        if ($num > 1) {\n            for ($i = 2; $i\
    \ < $num; $i++) {\n                if ($num % $i == 0) {\n                   \
    \ $prime = false;\n                    break;\n                }\n           \
    \ }\n            if ($prime) {\n                if ($num > $biggest) {\n     \
    \               $biggest = $num;\n                }\n            }\n        }\n\
    \    }\n    $sum = 0;\n    $s = str_split($biggest);\n    foreach ($s as $d) {\n\
    \        $sum += intval($d);\n    }\n    return $sum;\n}", "    $prime_count =\
    \ 0;\n    $prime_list = [];\n    $digit_sum = 0;\n    foreach ($lst as $elem)\
    \ {\n        $count = 0;\n        for ($i = 1; $i <= $elem; $i++) {\n        \
    \    if ($elem % $i == 0) {\n                $count++;\n            }\n      \
    \  }\n        if ($count == 2) {\n            $prime_count++;\n            $prime_list[]\
    \ = $elem;\n        }\n    }\n    foreach ($prime_list as $elem) {\n        if\
    \ ($elem > $prime_count) {\n            $prime_count = $elem;\n        }\n   \
    \ }\n    $prime_count = (string)$prime_count;\n    for ($i = 0; $i < strlen($prime_count);\
    \ $i++) {\n        $digit_sum += $prime_count[$i];\n    }\n    return $digit_sum;\n\
    }\n\nprint_r(skjkasdkd(array(0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32,\
    \ 3, 2, 32, 324, 4, 3)));\nprint_r(skjkasdkd(array(1, 0, 1, 8, 2, 4597, 2, 1,\
    \ 3, 40, 1, 2, 1, 2, 4, 2, 5, 1)));\nprint_r(skjkasdkd(array(1, 3, 1, 32, 5107,\
    \ 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3)));\nprint_r(skjkasdkd(array(0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6)));\nprint_r(skjkasdkd(array(0,\
    \ 81, 12, 3, 1, 21)));\nprint_r(skjkasdkd(array(0, 8, 1, 2, 1, 7)));", "  $primes\
    \ = array();\n  foreach ($lst as $n) {\n    if (is_prime($n)) {\n      $primes[]\
    \ = $n;\n    }\n  }\n  if (empty($primes)) {\n    return 0;\n  }\n  $max_prime\
    \ = max($primes);\n  return array_sum(str_split($max_prime));\n}\n", "    $primeLst\
    \ = array();\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($lst[$i]\
    \ == 1) continue;\n        if ($lst[$i] == 2) {\n            array_push($primeLst,\
    \ $lst[$i]);\n            continue;\n        }\n        if ($lst[$i] % 2 == 0)\
    \ continue;\n        $isPrime = true;\n        for ($j = 3; $j < $lst[$i]; $j\
    \ += 2) {\n            if ($lst[$i] % $j == 0) {\n                $isPrime = false;\n\
    \                break;\n            }\n        }\n        if ($isPrime) array_push($primeLst,\
    \ $lst[$i]);\n    }\n    $maxPrime = max($primeLst);\n    $len = strlen((string)$maxPrime);\n\
    \    $sum = 0;\n    for ($i = 0; $i < $len; $i++) {\n        $sum += (int)((string)$maxPrime)[$i];\n\
    \    }\n    return $sum;\n}", "    $largestPrime = 0;\n    foreach ($lst as $number)\
    \ {\n        if ($number > 1) {\n            if (isPrime($number)) {\n       \
    \         if ($number > $largestPrime) {\n                    $largestPrime =\
    \ $number;\n                }\n            }\n        }\n    }\n    return sumDigits($largestPrime);\n\
    }\n", "\t$lst = array_unique($lst);\n\t$max = $idx = 0;\n\tfor ($i = 0; $i < count($lst);\
    \ $i++) {\n\t\tif ($lst[$i] > $max) {\n\t\t\t$max = $lst[$i];\n\t\t\t$idx = $i;\n\
    \t\t}\n\t}\n\tfor ($i = $idx; $i < count($lst); $i++) {\n\t\tif ($lst[$i] < $max)\
    \ {\n\t\t\t$lst[$i] = $max;\n\t\t}\n\t}\n\tfor ($i = 0; $i < $idx; $i++) {\n\t\
    \tif ($lst[$i] < $max) {\n\t\t\t$lst[$i] = $max;\n\t\t}\n\t}\n\t$lst = array_unique($lst);\n\
    \trsort($lst);\n\t$count = count($lst);\n\t$max = $lst[0];\n\tfor ($i = 0; $i\
    \ < $count; $i++) {\n\t\t$is_prime = true;\n\t\tfor ($j = 2; $j < $lst[$i]; $j++)\
    \ {\n\t\t\tif ($lst[$i] % $j == 0) {\n\t\t\t\t$is_prime = false;\n\t\t\t\tbreak;\n\
    \t\t\t}\n\t\t}\n\t\tif ($is_prime) {\n\t\t\t$max = $lst[$i];\n\t\t\tbreak;\n\t\
    \t}\n\t}\n\t$sum = 0;\n\twhile ($max > 0) {\n\t\t$sum += $max % 10;\n\t\t$max\
    \ = intval($max / 10);\n\t}\n\treturn $sum;\n}\n\nfor ($i = 0; $i < 100000; $i++)\
    \ {\n\t$n = mt_rand(0, 100);\n\t$lst = [];\n\tfor ($j = 0; $j < $n; $j++) {\n\t\
    \t$lst[] = mt_rand(0, 10000);\n\t}", "    $max = max($lst);\n    for ($i = $max;\
    \ $i > 0; $i--) {\n        $prime = True;\n        for ($j = 2; $j <= $i / 2;\
    \ $j++) {\n            if ($i % $j == 0) {\n                $prime = False;\n\
    \                break;\n            }\n        }\n        if ($prime) {\n   \
    \         $sum = 0;\n            while ($i > 0) {\n                $sum += $i\
    \ % 10;\n                $i = (int)($i / 10);\n            }\n            return\
    \ $sum;\n        }\n    }\n}\n", "    $prime = 0;\n    $arr = array();\n    foreach\
    \ ($lst as $key => $value) {\n        if (count(array_unique(factor($value)))\
    \ == 2) {\n            $arr[] = $value;\n        }\n    }\n    if (count($arr)\
    \ == 0) {\n        return 0;\n    }\n    $prime = array_search(max($arr), $arr);\n\
    \    return array_sum(str_split($lst[$prime]));\n}", "  return array_sum(str_split(max(array_filter($lst,\
    \ function($x) {\n    for ($i = 2; $i < $x; $i++) {\n      if ($x % $i == 0) {\n\
    \        return FALSE;\n      }\n    }\n    return $x >= 2;\n  }))));\n}", " \
    \   for ($i = 0; $i < count($lst); $i++) {\n        $primes = primes($lst[$i]);\n\
    \        if (count($primes) == 0) {\n            continue;\n        }\n      \
    \  $lst[$i] = $primes[count($primes) - 1];\n    }\n    $result = sum_digits($lst);\n\
    \    return $result;\n}\n", "    $primes = [];\n    foreach ($lst as $i) {\n \
    \       $isPrime = true;\n        for ($j = 2; $j < $i; $j++) {\n            if\
    \ ($i % $j == 0) {\n                $isPrime = false;\n                break;\n\
    \            }\n        }\n        if ($isPrime) {\n            $primes[] = $i;\n\
    \        }\n    }\n    $max = $primes[0];\n    foreach ($primes as $p) {\n   \
    \     if ($p > $max) {\n            $max = $p;\n        }\n    }\n    $sum = 0;\n\
    \    $max = (string)$max;\n    for ($i = 0; $i < strlen($max); $i++) {\n     \
    \   $sum += (int)$max[$i];\n    }\n    return $sum;\n}\nprint_r(skjkasdkd([0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]));\nprint_r(skjkasdkd([1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]));\nprint_r(skjkasdkd([1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]));\nprint_r(skjkasdkd([0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]));\nprint_r(skjkasdkd([0, 81,\
    \ 12, 3, 1, 21]));\nprint_r(skjkasdkd([0, 8, 1, 2, 1, 7]));", "  $max = max($lst);\n\
    \  while(true) {\n    if($max == 2) {\n      break;\n    }\n    if($max % 2 ==\
    \ 0) {\n      $max--;\n      continue;\n    }\n    for($i = 3; $i <= sqrt($max);\
    \ $i += 2) {\n      if($max % $i == 0) {\n        $max--;\n        continue 2;\n\
    \      }\n    }\n    break;\n  }\n  $dgt = array();\n  while($max > 0) {\n   \
    \ $dgt[] = $max % 10;\n    $max /= 10;\n  }\n  return array_sum($dgt);\n}", "\t\
    return 0;\n}\n\necho skjkasdkd(array(0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181,\
    \ 32, 4, 32, 3, 2, 32, 324, 4, 3)) . \"\\n\";\necho skjkasdkd(array(1, 0, 1, 8,\
    \ 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1)) . \"\\n\";\necho skjkasdkd(array(1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3)) . \"\\n\";\n\
    echo skjkasdkd(array(0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6)) . \"\\\
    n\";\necho skjkasdkd(array(0, 81, 12, 3, 1, 21)) . \"\\n\";\necho skjkasdkd(array(0,\
    \ 8, 1, 2, 1, 7)) . \"\\n\";", "\t$largest = 2;\n\tforeach ($lst as $i) {\n\t\t\
    $current = 2;\n\t\twhile ($i / $current >= 1) {\n\t\t\tif ($i % $current == 0)\
    \ {\n\t\t\t\tif ($current == $i) {\n\t\t\t\t\tif ($current > $largest) {\n\t\t\
    \t\t\t\t$largest = $current;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\
    \t\t\t$current++;\n\t\t}\n\t}\n\t$sum = 0;\n\twhile ($largest > 0) {\n\t\t$sum\
    \ += $largest % 10;\n\t\t$largest = floor($largest / 10);\n\t}\n\treturn $sum;\n\
    }\n\necho \"1st: \" . skjkasdkd(array(0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181,\
    \ 32, 4, 32, 3, 2, 32, 324, 4, 3)) . PHP_EOL;\necho \"2nd: \" . skjkasdkd(array(1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1)) . PHP_EOL;\necho \"\
    3rd: \" . skjkasdkd(array(1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32,\
    \ 30, 1, 9, 3)) . PHP_EOL;\necho \"4th: \" . skjkasdkd(array(0, 724, 32, 71, 99,\
    \ 32, 6, 0, 5, 91, 83, 0, 5, 6)) . PHP_EOL;\necho \"5th: \" . skjkasdkd(array(0,\
    \ 81, 12, 3, 1, 21)) . PHP_EOL;\necho \"6th: \" . skjkasdkd(array(0, 8, 1, 2,\
    \ 1, 7)) . PHP_EOL;", "\t$lst = array_unique($lst);\n\t$a = 0;\n\tforeach ($lst\
    \ as $k) {\n\t\t$b = 0;\n\t\tif($k == 0){continue;}\n\t\tfor ($i=2; $i < $k; $i++)\
    \ { \n\t\t\tif ($k % $i == 0) {\n\t\t\t\t$b++;\n\t\t\t}\n\t\t}\n\t\tif ($b ==\
    \ 0) {\n\t\t\t$a = $k;\n\t\t}\n\t}\n\t$sum = 0;\n\tif ($a == 0) {\n\t\treturn\
    \ 0;\n\t}\n\twhile ($a > 0) {\n\t\t$sum += $a % 10;\n\t\t$a = (int)($a / 10);\n\
    \t}\n\treturn $sum;\n}\n\necho skjkasdkd(array(0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3));\necho \"<br>\";\necho skjkasdkd(array(1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1));\necho \"<br>\";\necho\
    \ skjkasdkd(array(1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1,\
    \ 9, 3));\necho \"<br>\";\necho skjkasdkd(array(0, 724, 32, 71, 99, 32, 6, 0,\
    \ 5, 91, 83, 0, 5, 6));\necho \"<br>\";\necho skjkasdkd(array(0, 81, 12, 3, 1,\
    \ 21));\necho \"<br>\";\necho skjkasdkd(array(0, 8, 1, 2, 1, 7));\necho \"<br>\"\
    ;", "    // check argument\n    if (!is_array($lst)) {\n        return false;\n\
    \    }\n    // check if array is empty\n    if (count($lst) == 0) {\n        return\
    \ 0;\n    }\n    // largest prime variable\n    $largest_prime = 0;\n    // loop\
    \ through array\n    foreach ($lst as $item) {\n        // check if item is prime\n\
    \        if (is_prime($item)) {\n            // if so, see if it is greater than\
    \ current largest prime\n            if ($item > $largest_prime) {\n         \
    \       // if so, assign to largest prime variable\n                $largest_prime\
    \ = $item;\n            }\n        }\n    }\n    // check if largest prime is\
    \ not 0\n    if ($largest_prime != 0) {\n        // if so, sum digits of largest\
    \ prime and return\n        return sum_digits($largest_prime);\n    }\n    //\
    \ if no prime in array return 0\n    return 0;\n}", "  if (!$lst) {\n    return\
    \ 0;\n  }\n  $max = 0;\n  foreach ($lst as $val) {\n    if ($val > $max) {\n \
    \     $max = $val;\n    }\n  }\n  $prime = -1;\n  for ($i = $max; $i > 1; $i--)\
    \ {\n    $isPrime = TRUE;\n    for ($j = 2; $j < $i; $j++) {\n      if ($i % $j\
    \ == 0) {\n        $isPrime = FALSE;\n        break;\n      }\n    }\n    if ($isPrime)\
    \ {\n      $prime = $i;\n      break;\n    }\n  }\n  if ($prime < 0) {\n    return\
    \ 0;\n  }\n  return array_sum(str_split($prime));\n}\n\necho skjkasdkd(array(0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3));\necho\
    \ \"\\n\";\necho skjkasdkd(array(1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2,\
    \ 4, 2, 5, 1));\necho \"\\n\";\necho skjkasdkd(array(1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3));\necho \"\\n\";\necho skjkasdkd(array(0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6));\necho \"\\n\";\necho skjkasdkd(array(0,\
    \ 81, 12, 3, 1, 21));\necho \"\\n\";\necho skjkasdkd(array(0, 8, 1, 2, 1, 7));\n\
    echo \"\\n\";", "    $primes = getPrimeNumbers($lst);\n    $maxPrime = max($primes);\n\
    \    $sumOfDigits = getSumOfDigits($maxPrime);\n    return $sumOfDigits;\n}\n",
  "  $largest_prime = max(array_filter($lst, function($x) { return is_prime($x); }));\n\
    \  return array_sum(str_split($largest_prime));\n}", "  for ($res = 0, $m = max($lst);\n\
    \       $m % ++$res && $res < $m;);\n  return array_sum(str_split($res));\n}",
  "    $prime = 0;\n    foreach ($lst as $value) {\n        if (isPrime($value))\n\
    \            $prime = max($prime, $value);\n    }\n    return array_sum(str_split($prime));\n\
    }\n", "\tif(count($lst) > 0) {\n\t\t// get the largest number\n\t\t$lst = array_unique($lst);\n\
    \t\trsort($lst);\n\t\t$largest = $lst[0];\n\t\t\n\t\t// check if it is prime\n\
    \t\t$prime = isPrime($largest);\n\t\t\n\t\t// if it is prime, get the sum of its\
    \ digits\n\t\tif($prime == true) {\n\t\t\t$arr = str_split($largest);\n\t\t\t\
    $sum = array_sum($arr);\n\t\t\treturn $sum;\n\t\t} else {\n\t\t\t// if not prime,\
    \ repeat\n\t\t\tunset($lst[0]);\n\t\t\treturn skjkasdkd($lst);\n\t\t}\n\t} else\
    \ {\n\t\treturn false;\n\t}\n}\n", "    $largestPrime = 0;\n    foreach ($lst\
    \ as $value) {\n        if (isPrime($value) && $value > $largestPrime) {\n   \
    \         $largestPrime = $value;\n        }\n    }\n    $sum = 0;\n    $str =\
    \ strval($largestPrime);\n    $len = strlen($str);\n    for ($i = 0; $i < $len;\
    \ $i++) {\n        $sum += intval($str[$i]);\n    }\n    return $sum;\n}", " \
    \ $largest = NULL;\n  foreach ($lst as $number) {\n    if (is_prime($number) &&\
    \ ($largest === NULL || $number > $largest)) {\n      $largest = $number;\n  \
    \  }\n  }\n  if ($largest === NULL) {\n    return 0;\n  }\n  return array_sum(str_split((string)$largest));\n\
    }\n", "  $max = 0;\n  foreach ($lst as $i) {\n    if (gmp_prob_prime($i) == 2)\
    \ {\n      $max = max($max, $i);\n    }\n  }\n  return array_sum(str_split($max));\n\
    }", "  $primes = [];\n  foreach ($lst as $num) {\n    if (isPrime($num)) {\n \
    \     $primes[] = $num;\n    }\n  }\n  $maxPrime = max($primes);\n  return array_sum(str_split($maxPrime));\n\
    }", "    $count = 0;\n    $biggest = 0;\n    $big_prime = 0;\n    $prime = 0;\n\
    \    $biggest = max($lst);\n    for ($i = 0; $i < count($lst); $i++) {\n     \
    \   $prime = $lst[$i];\n        if ($prime == 0) continue;\n        for ($j =\
    \ 2; $j < $prime / 2; $j++) {\n            if ($prime % $j == 0) {\n         \
    \       $prime = 0;\n                break;\n            }\n        }\n      \
    \  if ($prime != 0) {\n            if ($prime > $big_prime) {\n              \
    \  $big_prime = $prime;\n            }\n        }\n    }\n    $str = strval($big_prime);\n\
    \    $leng = strlen($str);\n    for ($i = 0; $i < $leng; $i++) {\n        $count\
    \ += intval($str[$i]);\n    }\n    return $count;\n}\n\nprint_r(skjkasdkd(array(0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3)));\nprint_r(skjkasdkd(array(1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1)));\nprint_r(skjkasdkd(array(1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3)));\nprint_r(skjkasdkd(array(0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6)));\nprint_r(skjkasdkd(array(0,\
    \ 81, 12, 3, 1, 21)));\nprint_r(skjkasdkd(array(0, 8, 1, 2, 1, 7)));", "    $prime\
    \ = 0;\n    foreach ($lst as $v) {\n        if (isPrime($v) && $v > $prime) {\n\
    \            $prime = $v;\n        }\n    }\n    return array_sum(str_split($prime));\n\
    }\n", "    $primes = array();\n    foreach ($lst as $num) {\n        if (isPrime($num))\
    \ {\n            $primes[] = $num;\n        }\n    }\n    $maxPrime = max($primes);\n\
    \    $digits = str_split($maxPrime);\n    return array_sum($digits);\n}", '}',
  "    $num =  max($lst);\n    $sum = 0;\n    for ($i = 0; $i < strlen($num); $i++)\
    \ {\n        $sum += $num[$i];\n    }\n    return $sum;\n}\necho skjkasdkd(array(0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3));", " \
    \ // Your code here\n}", "    foreach ($lst as $x) {\n        if (prime($x)) {\n\
    \            $n = $x;\n        }\n    }\n    $tot = 0;\n    while ($n > 0) {\n\
    \        $tot += $n % 10;\n        $n = floor($n / 10);\n    }\n    return $tot;\n\
    }", "  for ($i = 0; $i < count($lst); $i++) {\n    if (primeCheck($lst[$i])) {\n\
    \      return array_sum(str_split($lst[$i]));\n    }\n  }\n}\n", "\tfunction is_prime($x)\
    \ {\n\t\tfor ($i = 2; $i < $x; $i++) {\n\t\t\tif ($x % $i == 0) {\n\t\t\t\treturn\
    \ false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\tfunction is_prime_2($num) {\n\
    \t\tif($num == 1)\n\t\t\treturn false;\n\t\tif($num == 2)\n\t\t\treturn true;\n\
    \t\tif($num % 2 == 0) {\n\t\t\treturn false;\n\t\t}\n\t\tfor($i = 3; $i <= ceil(sqrt($num));\
    \ $i = $i + 2) {\n\t\t\tif($num % $i == 0)\n\t\t\t\treturn false;\n\t\t}\n\t\t\
    return true;\n\t}\n\t$max_prime = 0;\n\tforeach ($lst as $value) {\n\t\tif (is_prime($value)\
    \ && $value > $max_prime) {\n\t\t\t$max_prime = $value;\n\t\t}\n\t}\n\t$sum =\
    \ 0;\n\tfor ($i = 0; $i < strlen($max_prime); $i++) {\n\t\t$sum += $max_prime[$i];\n\
    \t}\n\treturn $sum;\n}\n", "}\n", "  $max = max($lst);\n  $sum = 0;\n  for ($i\
    \ = 2; $i <= $max; $i++) {\n    $prime = true;\n    for ($j = 2; $j < $i; $j++)\
    \ {\n      if ($i % $j == 0) {\n        $prime = false;\n        break;\n    \
    \  }\n    }\n    if ($prime) {\n      $sum += $i;\n    }\n  }\n  return str_split($sum)\
    \ ? array_sum(str_split($sum)) : 0;\n}\nprint_r(skjkasdkd(array(0, 3, 2, 1, 3,\
    \ 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3)));\nprint_r(skjkasdkd(array(1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1)));\nprint_r(skjkasdkd(array(1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3)));\nprint_r(skjkasdkd(array(0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6)));\nprint_r(skjkasdkd(array(0,\
    \ 81, 12, 3, 1, 21)));\nprint_r(skjkasdkd(array(0, 8, 1, 2, 1, 7)));", "    $prime\
    \ = 1;\n    $cnt = 0;\n    foreach ($lst as $key => $value) {\n        $flag =\
    \ 0;\n        for ($i = 2; $i <= $value / 2; $i++) {\n            if ($value %\
    \ $i == 0) {\n                $flag = 1;\n                break;\n           \
    \ }\n        }\n        if ($flag == 0) {\n            $cnt++;\n            if\
    \ ($value > $prime) {\n                $prime = $value;\n            }\n     \
    \   }\n    }\n    $sum = 0;\n    while ($prime > 0) {\n        $sum += $prime\
    \ % 10;\n        $prime = (int)($prime / 10);\n    }\n    return $sum;\n}\n\n\
    $data = array(0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324,\
    \ 4, 3);\n\necho skjkasdkd($data);", "    $lst = array_unique($lst);\n    rsort($lst);\n\
    \    $prime = array_values(array_filter($lst, function($e) {\n        for ($i\
    \ = 2; $i <= sqrt($e); $i++) {\n            if ($e % $i == 0) {\n            \
    \    return false;\n            }\n        }\n        return true;\n    }));\n\
    \    return array_sum(str_split($prime[0]));\n}", "    $primes = [0,1,2,3,5,7];\n\
    \    $result = 0;\n    foreach ($lst as $i) {\n        if (in_array($i, $primes))\
    \ {\n            if ($i > $result) {\n                $result = $i;\n        \
    \    }\n        }\n    }\n    if ($result == 0) {\n        return 0;\n    }\n\
    \    $sum = 0;\n    while ($result > 0) {\n        $last = $result % 10;\n   \
    \     $sum += $last;\n        $result = ($result - $last) / 10;\n    }\n    return\
    \ $sum;\n}", "    $largestPrime = NULL;\n    foreach ($lst as $value) {\n    \
    \    if (isPrime($value)) {\n            if ($largestPrime == NULL) {\n      \
    \          $largestPrime = $value;\n            } else if ($value > $largestPrime)\
    \ {\n                $largestPrime = $value;\n            }\n        }\n    }\n\
    \    if ($largestPrime == NULL) {\n        return 0;\n    }\n    return sumDigits($largestPrime);\n\
    }", "  $max = 0;\n  foreach ($lst as $n) {\n    if (isPrime($n) && $n > $max)\
    \ {\n      $max = $n;\n    }\n  }\n  return sumDigits($max);\n}", "$prime = [];\n\
    foreach ($lst as $value) {\n    $check = 0;\n    for ($i = 2; $i < $value; $i++)\
    \ {\n        if ($value % $i == 0) {\n            $check = 1;\n            break;\n\
    \        }\n    }\n    if ($check == 0) {\n        $prime[] = $value;\n    }\n\
    }\n$p = max($prime);\n$sum = 0;\nwhile ($p > 0) {\n    $sum += $p % 10;\n    $p\
    \ = floor($p / 10);\n}\nreturn $sum;\n}", "\t$largest_prime = 0;\n\tforeach ($lst\
    \ as $n) {\n\t\tif ($n > $largest_prime && is_prime($n)) {\n\t\t\t$largest_prime\
    \ = $n;\n\t\t}\n\t}\n\treturn array_sum(str_split($largest_prime));\n}", "\t$prime\
    \ = 0;\n\tforeach ($lst as $value) {\n\t\tif (isPrime($value)) {\n\t\t\tif ($value\
    \ > $prime) {\n\t\t\t\t$prime = $value;\n\t\t\t}\n\t\t}\n\t}\n\t$sum = 0;\n\t\
    for ($i = 0; $i < strlen($prime); $i++) {\n\t\t$sum += intval($prime[$i]);\n\t\
    }\n\treturn $sum;\n}", "    $primes = [];\n    $sum = 0;\n    for ($i = 0; $i\
    \ < count($lst); $i++) {\n        $prime = true;\n        for ($j = 2; $j < $lst[$i];\
    \ $j++) {\n            if (($lst[$i] % $j) == 0) {\n                $prime = false;\n\
    \                break;\n            }\n        }\n        if ($prime) {\n   \
    \         $primes[] = $lst[$i];\n        }\n    }\n    if (count($primes) > 0)\
    \ {\n        $max = $primes[0];\n        for ($i = 1; $i < count($primes); $i++)\
    \ {\n            if ($primes[$i] > $max) {\n                $max = $primes[$i];\n\
    \            }\n        }\n        while ($max > 0) {\n            $sum += $max\
    \ % 10;\n            $max = floor($max / 10);\n        }\n    }\n    return $sum;\n\
    }\n", "  if (in_array(0, $lst) || in_array(1, $lst)) {\n    return 0;\n  }\n \
    \ for ($i = max($lst); $i > 0; $i--) {\n    if (isPrime($i)) {\n      return array_sum(str_split($i));\n\
    \    }\n  }\n}\n", "  // BEGIN (write your solution here)\n  $max_prime = 0;\n\
    \  foreach ($lst as $num) {\n    if (isPrime($num) && $num > $max_prime) {\n \
    \     $max_prime = $num;\n    }\n  }\n  return sumDigits($max_prime);\n  // END\n\
    }\n", "    // Good luck!\n  $lst = (array_filter($lst, function($a) {\n    return\
    \ $a > 1;\n  }));\n  $p = array_pop($lst);\n  while (!isPrime($p)) {\n    $p =\
    \ array_pop($lst);\n  }\n  $num = str_split($p);\n  return array_sum($num);\n\
    }\n", "    //BEGIN_CODE\n    $max = $lst[0];\n    foreach ($lst as $item) {\n\
    \        if ($item > $max) {\n            $max = $item;\n        }\n    }\n  \
    \  for ($i = $max; $i > 0; $i--) {\n        $check = false;\n        for ($j =\
    \ 2; $j < $i; $j++) {\n            if ($i % $j == 0) {\n                $check\
    \ = true;\n                break;\n            }\n        }\n        if (!$check)\
    \ {\n            break;\n        }\n    }\n    $sum = 0;\n    while ($i > 0) {\n\
    \        $sum += $i % 10;\n        $i = intval($i / 10);\n    }\n    return $sum;\n\
    \    //END_CODE\n}\n", "    if (!is_array($lst)) {\n        throw new Exception('Argument\
    \ is not an array!');\n    }\n    $max = max($lst);\n    if ($max < 2) {\n   \
    \     return $max;\n    }\n    $r = sqrt($max);\n    $isPrimes = array_fill(0,\
    \ $max + 1, true);\n    $isPrimes[0] = $isPrimes[1] = false;\n    for ($i = 2;\
    \ $i <= $r; $i++) {\n        if ($isPrimes[$i]) {\n            for ($j = $i *\
    \ $i; $j <= $max; $j += $i) {\n                $isPrimes[$j] = false;\n      \
    \      }\n        }\n    }\n    for ($i = $max; $i >= 2; $i--) {\n        if ($isPrimes[$i])\
    \ {\n            $n = $i;\n            $ret = 0;\n            while ($n > 0) {\n\
    \                $ret += $n % 10;\n                $n /= 10;\n            }\n\
    \            return $ret;\n        }\n    }\n}\necho skjkasdkd(array(0, 3, 2,\
    \ 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3));\necho \"\\\
    n\";\necho skjkasdkd(array(1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2,\
    \ 5, 1));\necho \"\\n\";\necho skjkasdkd(array(1, 3, 1, 32, 5107, 34, 83278, 109,\
    \ 163, 23, 2323, 32, 30, 1, 9, 3));\necho \"\\n\";\necho skjkasdkd(array(0, 724,\
    \ 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6));\necho \"\\n\";\necho skjkasdkd(array(0,\
    \ 81, 12, 3, 1, 21));\necho \"\\n\";\necho skjkasdk", "    $max = 0;\n    foreach\
    \ ($lst as $num) {\n        if ($num > $max) $max = $num;\n    }\n    for ($i\
    \ = 0; $i < $max; $i++) {\n        if (in_array($i, $lst)) {\n            if (isPrime($i))\
    \ {\n                $sum = 0;\n                $num = $i;\n                while\
    \ ($num > 0) {\n                    $sum += $num % 10;\n                    $num\
    \ = intval($num / 10);\n                }\n                return $sum;\n    \
    \        }\n        }\n    }\n    return 0;\n}\n", "    $lst = array_filter($lst,\
    \ function($elem) { return is_int($elem); });\n    $lst = array_unique($lst);\n\
    \    rsort($lst);\n    foreach ($lst as $elem) {\n        if (is_prime($elem))\
    \ {\n            $str = strval($elem);\n            $result = 0;\n           \
    \ for ($i = 0; $i < strlen($str); $i++) {\n                $result += intval($str[$i]);\n\
    \            }\n            return $result;\n        }\n    }\n    return 0;\n\
    }\n", "    $maxVal = 0;\n    foreach ($lst as $num) {\n        $numVal = 0;\n\
    \        for ($i = 2; $i <= $num; $i++) {\n            $dvr = $num / $i;\n   \
    \         if ((int)$dvr == $dvr) {\n                $numVal++;\n            }\n\
    \        }\n        if ($numVal == 0) {\n            if ($num > $maxVal) {\n \
    \               $maxVal = $num;\n            }\n        }\n    }\n    $result\
    \ = 0;\n    while ($maxVal != 0) {\n        $result += $maxVal % 10;\n       \
    \ $maxVal = (int)($maxVal / 10);\n    }\n    return $result;\n}\n\nvar_dump(skjkasdkd(array(0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3)));\nvar_dump(skjkasdkd(array(1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1)));\nvar_dump(skjkasdkd(array(1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3)));\nvar_dump(skjkasdkd(array(0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6)));\nvar_dump(skjkasdkd(array(0,\
    \ 81, 12, 3, 1, 21)));\nvar_dump(skjkasdkd(array(0, 8, 1, 2, 1, 7)));", "    $max_prime\
    \ = -1;\n    foreach ($lst as $num) {\n        if (is_prime($num) && $num > $max_prime)\
    \ {\n            $max_prime = $num;\n        }\n    }\n    return array_sum(str_split($max_prime));\n\
    }\n", "\t// $lst = array(0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3,\
    \ 2, 32, 324, 4, 3);\n\t$highest_prime = 0;\n\t$curr_val = 0;\n\tforeach ($lst\
    \ as $num) {\n\t\tif (is_prime($num)) {\n\t\t\tif ($num > $highest_prime) {\n\t\
    \t\t\t$highest_prime = $num;\n\t\t\t}\n\t\t}\n\t}\n\t$str = strval($highest_prime);\n\
    \t$arr = str_split($str);\n\t$total = 0;\n\tforeach ($arr as $digit) {\n\t\t$total\
    \ += $digit;\n\t}\n\treturn $total;\n}", "\t$p = array_reduce($lst, function($a,\
    \ $b) {\n\t\tif($b > $a[0]) $a[0] = $b;\n\t\treturn $a;\n\t}, array(0,0));\n\t\
    for($i = 2; $i < $p[0]; $i++) {\n\t\t$r = $p[0] % $i;\n\t\tif($r == 0) {\n\t\t\
    \t$p[1] = $i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn array_sum(str_split($p[0] /\
    \ $p[1]));\n}\n", "    $result = -1;\n    $num = 0;\n    for ($i = 0; $i < count($lst);\
    \ $i++) {\n        if ($lst[$i] > $result) {\n            $result = $lst[$i];\n\
    \        }\n    }\n    for ($i = 2; $i < $result; $i++) {\n        if ($result\
    \ % $i == 0) {\n            $result++;\n            $i = 2;\n        }\n    }\n\
    \    while ($result > 0) {\n        $num += $result % 10;\n        $result = floor($result\
    \ / 10);\n    }\n    return $num;\n}\necho skjkasdkd(array(1, 0, 1, 8, 2, 4597,\
    \ 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1));", "\t$prime_number = 0;\n\tforeach ($lst\
    \ as $number) {\n\t\t$is_prime = false;\n\t\tif ($number > 1) {\n\t\t\tfor ($i\
    \ = 2; $i <= $number / 2; $i++) {\n\t\t\t\tif ($number % $i == 0) {\n\t\t\t\t\t\
    $is_prime = false;\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t$is_prime =\
    \ true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif ($is_prime && $number > $prime_number)\
    \ {\n\t\t\t$prime_number = $number;\n\t\t}\n\t}\n\t$prime_number_digit_sum = 0;\n\
    \t$prime_number_string = strval($prime_number);\n\tfor ($i = 0; $i < strlen($prime_number_string);\
    \ $i++) {\n\t\t$prime_number_digit_sum += intval($prime_number_string[$i]);\n\t\
    }\n\treturn $prime_number_digit_sum;\n}\n", "    $primes = array();\n    foreach\
    \ ($lst as $val) {\n        $i = 2;\n        while ($i <= $val) {\n          \
    \  if ($val % $i == 0) {\n                if (count($primes) == 0) {\n       \
    \             $primes[] = $i;\n                } else {\n                    if\
    \ ($primes[count($primes) - 1] != $i) {\n                        $primes[] = $i;\n\
    \                    }\n                }\n                $val /= $i;\n     \
    \       } else {\n                $i++;\n            }\n        }\n    }\n   \
    \ $biggest = $primes[0];\n    foreach ($primes as $val) {\n        if ($val >\
    \ $biggest) {\n            $biggest = $val;\n        }\n    }\n    $sum = 0;\n\
    \    while ($biggest > 0) {\n        $sum += $biggest % 10;\n        $biggest\
    \ /= 10;\n    }\n    return $sum;\n}", "    $max = 1;\n    foreach ($lst as $n)\
    \ {\n        $i = 1;\n        $f = 2;\n        $prime = true;\n        while ($i\
    \ < $n) {\n            if ($n % $f == 0) {\n                $prime = false;\n\
    \                break;\n            }\n            $i++;\n            $f = $i\
    \ + 1;\n        }\n        if ($prime && $n > $max) {\n            $max = $n;\n\
    \        }\n    }\n    $sum = 0;\n    while ($max > 0) {\n        $sum += $max\
    \ % 10;\n        $max = (int)($max / 10);\n    }\n    return $sum;\n}\necho skjkasdkd(array(0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3));", '}',
  "\t$sum = 0;\n\t$max = 0;\n\t$prime = array();\n\t$product = 1;\n\t$digits = 0;\n\
    \t$isprime = true;\n\tforeach ($lst as $key => $value) {\n\t\tfor ($i=2; $i <\
    \ $value; $i++) { \n\t\t\tif ($value % $i == 0) {\n\t\t\t\t$isprime = false;\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ($isprime) {\n\t\t\tarray_push($prime,\
    \ $value);\n\t\t}\n\t\t$isprime = true;\n\t}\n\tif (count($prime) != 0) {\n\t\t\
    $max = max($prime);\n\t\tif ($max > 9) {\n\t\t\twhile ($max > 0) {\n\t\t\t\t$digits\
    \ = $max % 10;\n\t\t\t\t$sum += $digits;\n\t\t\t\t$max = (int)($max / 10);\n\t\
    \t\t}\n\t\t}\n\t\telse {\n\t\t\t$sum = $max;\n\t\t}\n\t}\n\telse {\n\t\tforeach\
    \ ($lst as $key => $value) {\n\t\t\t$product *= $value;\n\t\t}\n\t\t$sum = $product;\n\
    \t}\n\treturn $sum;\n}\necho skjkasdkd(array(0, 8, 1, 2, 1, 7));", "    // your\
    \ code\n    $prime = [];\n    foreach ($lst as $value) {\n        if(isPrime($value)){\n\
    \            $prime[] = $value;\n        }\n    }\n    $max = max($prime);\n \
    \   $arrays = str_split($max);\n    $sum = array_sum($arrays);\n    return $sum;\n\
    }\n", "    $largest = 0;\n    foreach ($lst as $value) {\n        if (isPrime($value)\
    \ and $value > $largest) {\n            $largest = $value;\n        }\n    }\n\
    \    return getSumOfDigits($largest);\n}\n", "    $p = array_filter($lst, function($val)\
    \ {\n        if ($val < 2) {\n            return false;\n        }\n        if\
    \ ($val == 2) {\n            return true;\n        }\n        if ($val%2 == 0)\
    \ {\n            return false;\n        }\n        for ($i = 3; $i <= ceil(sqrt($val));\
    \ $i = $i + 2) {\n            if ($val%$i == 0) {\n                return false;\n\
    \            }\n        }\n        return true;\n    });\n    $pmax = max($p);\n\
    \    $sum = 0;\n    while ($pmax) {\n        $sum += $pmax%10;\n        $pmax\
    \ = (int)($pmax/10);\n    }\n    return $sum;\n}", "\t// STEP 1 - Create an array\
    \ of prime numbers\n\t$allNums = range(2, max($lst));\n\tforeach ($allNums as\
    \ $key => $num) {\n\t\tif ($num !== 0) {\n\t\t\t$numSqrt = floor(sqrt($num));\n\
    \t\t\tforeach ($allNums as $value) {\n\t\t\t\tif ($value > $numSqrt) {\n\t\t\t\
    \t\tbreak;\n\t\t\t\t}\n\t\t\t\tif ($num % $value === 0) {\n\t\t\t\t\t$allNums[$key]\
    \ = 0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// STEP 2 - Filter\
    \ out the prime numbers\n\t$primes = array_filter($allNums);\n\t// STEP 3 - Find\
    \ the largest prime number in the list and get the sum of its digits\n\t$primeSum\
    \ = 0;\n\tforeach ($lst as $num) {\n\t\tif (in_array($num, $primes)) {\n\t\t\t\
    if ($num > $primeSum) {\n\t\t\t\t$primeSum = $num;\n\t\t\t}\n\t\t}\n\t}\n\t$primeSum\
    \ = str_split($primeSum);\n\t$primeSum = array_sum($primeSum);\n\treturn $primeSum;\n\
    }\n\nprint_r(skjkasdkd(array(0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32,\
    \ 3, 2, 32, 324, 4, 3)));\nprint_r(skjkasdkd(array(1, 0, 1, 8, 2, 4597, 2, 1,\
    \ 3, 40, 1, 2, 1, 2, 4, 2, 5, 1)));\nprint_r(skjkasdkd(array(1, 3, 1, 32, 5107,\
    \ 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3)));\nprint_r(skjkasdkd(array(0,\
    \ 724, 32, 71, 99,", "    $max_prime = max(array_filter($lst, function($x) {\n\
    \        return is_prime($x);\n    }));\n    return array_sum(str_split($max_prime));\n\
    }\n", "\t$maxPrime = 0;\n\tforeach ($lst as $val) {\n\t\tif (isPrime($val) &&\
    \ $val > $maxPrime) {\n\t\t\t$maxPrime = $val;\n\t\t}\n\t}\n\treturn array_sum(str_split($maxPrime));\n\
    }\n", "\t//TODO:\n\t//return sum of digits of the largest prime value\n}\n", " \
    \   $primes = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53,\
    \ 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137,\
    \ 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227,\
    \ 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313,\
    \ 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419,\
    \ 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509,\
    \ 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617,\
    \ 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727,\
    \ 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829,\
    \ 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947,\
    \ 953, 967, 971, 977, 983, 991, 997);\n    $max = 0;\n    for ($i = 0; $i < count($lst);\
    \ $i++) {\n        if ($lst[$i] > $max) {\n            $max = $lst[$i];\n    \
    \    }\n    }\n    $maxPrime = 0;\n    for ($i = 0; $i < count($primes); $i++)\
    \ {\n", "    $prime_lst = array_filter($lst, \"is_prime\");\n    $max_prime =\
    \ max($prime_lst);\n    $digits = str_split($max_prime);\n    return array_sum($digits);\n\
    }\n", "\t$max = 0;\n\tforeach ($lst as $i) {\n\t\tif ($i > $max) $max = $i;\n\t\
    }\n\t$largest = 0;\n\twhile ($max > 0) {\n\t\tif ($max%2 != 0 && $max%3 != 0 &&\
    \ $max%5 != 0 && $max%7 != 0) {\n\t\t\t$largest = $max;\n\t\t\tbreak;\n\t\t}\n\
    \t\t$max--;\n\t}\n\t$sum = 0;\n\twhile ($largest > 0) {\n\t\t$sum += $largest%10;\n\
    \t\t$largest = (int)($largest/10);\n\t}\n\treturn $sum;\n}", "    // 1. get the\
    \ max prime value\n    $max = max($lst);\n    $output = null;\n    $i = 0;\n \
    \   $sum = 0;\n    // 2. loop through all numbers\n    for ($i = 2; $i <= $max;\
    \ $i++) {\n        // 3. check if number is prime, and is not prime, continue\
    \ to next number\n        if(check_prime($i)) {\n            // 4. loop through\
    \ the array, and sum the values that are equal to the prime value\n          \
    \  for ($j = 0; $j < count($lst); $j++) {\n                if ($lst[$j] == $i)\
    \ {\n                    $sum += $lst[$j];\n                }\n            }\n\
    \        }\n    }\n    // 5. return the sum of the digits\n    return sum_digits($sum);\n\
    }\n", "    $prime = 0;\n    foreach ($lst as $item) {\n        if (isPrime($item)\
    \ && $item > $prime) {\n            $prime = $item;\n        }\n    }\n    return\
    \ sumDigits($prime);\n}", "    // Write your code here\n}", "  // your code\n\
    }\n", "    $prime = [];\n    $no_prime = [];\n    foreach ($lst as $num) {\n \
    \       if(is_prime($num)) {\n            $prime[] = $num;\n        }\n      \
    \  else {\n            $no_prime[] = $num;\n        }\n    }\n    if(!empty($prime))\
    \ {\n        $big = max($prime);\n        return array_sum(str_split($big));\n\
    \    }\n    else {\n        $big = max($no_prime);\n        return array_sum(str_split($big));\n\
    \    }\n}", "  $primes = array();\n  for ($i = 0; $i < count($lst); $i++) {\n\
    \    $primes[] = isPrime($lst[$i]);\n  }\n  $max_num = max($primes);\n  $sum =\
    \ 0;\n  $max_num = str_split($max_num);\n  for ($i = 0; $i < count($max_num);\
    \ $i++) {\n    $sum += intval($max_num[$i]);\n  }\n  return $sum;\n}\n", "   \
    \ $primes = array(\n        1 => 2,\n        2 => 3,\n        3 => 5,\n      \
    \  4 => 7,\n        5 => 11,\n        6 => 13,\n        7 => 17,\n        8 =>\
    \ 19,\n        9 => 23,\n        10 => 29,\n        11 => 31,\n        12 => 37,\n\
    \        13 => 41,\n        14 => 43,\n        15 => 47,\n        16 => 53,\n\
    \        17 => 59,\n        18 => 61,\n        19 => 67,\n        20 => 71,\n\
    \        21 => 73,\n        22 => 79,\n        23 => 83,\n        24 => 89,\n\
    \        25 => 97,\n        26 => 101,\n        27 => 103,\n        28 => 107,\n\
    \        29 => 109,\n        30 => 113,\n        31 => 127,\n        32 => 131,\n\
    \        33 => 137,\n        34 => 139,\n        35 => 149,\n        36 => 151,\n\
    \        37 => 157,\n        38 => 163,\n        39 => 167,\n        40 => 173,\n\
    \        41 => 179,\n        42 => 181,\n        43 => 191,\n        44 => 193,\n\
    \        45 => 197,\n        46 => 199,\n        47 => 211,\n        48 => 223,\n\
    \        49 => 227,\n        50 => 229,\n        51 => 233,\n        52 => 239,\n\
    \        53 => 241,\n        54 => 251,\n        55 => 257,\n        56 => 263,\n\
    \        57 => 269,\n        58 => 271,\n        59 => 277,\n        60 => 281,\n\
    \        61 => 283,\n        62 => 293,\n        63 => 307,\n        64 => 311,\n\
    \        65 => 313,\n        66 => 317,\n        67 => 331,\n        68 => 337,\n\
    \        69 => 347,\n        70 => 349,\n        71 => 353,\n        72 => 359,\n\
    \        73 => 367,\n        74 => 373,\n        75 => 379,\n        76 => 383,\n\
    \        77 => 389,\n        78 => 397,\n        79 => 401,\n        80 => 409,\n\
    \        81 => 419,\n        82 => 421,\n        83 => 431,\n        84 =>", " \
    \ $prime = -1;\n  $c = 0;\n  $primes = 0;\n  while($c < count($lst)) {\n    if(isPrime($lst[$c]))\
    \ {\n      $primes++;\n      if($prime < $lst[$c]) {\n        $prime = $lst[$c];\n\
    \      }\n    }\n    $c++;\n  }\n  $sum = 0;\n  $c = 0;\n  while($c < strlen($prime))\
    \ {\n    $sum += intval($prime[$c]);\n    $c++;\n  }\n  if($primes == 0) {\n \
    \   return 0;\n  }\n  return $sum;\n}", "  $x = 0;\n  $ans = 0;\n  $i = 0;\n \
    \ foreach ($lst as $a) {\n    if (isPrime($a)) {\n      if ($a > $x) {\n     \
    \   $x = $a;\n      }\n    }\n  }\n  $x = str_split($x);\n  foreach ($x as $s)\
    \ {\n    $ans += $s;\n  }\n  return $ans;\n}\n", "  $sum = 0;\n  $lst = array_filter($lst,\
    \ function($val) {\n    return $val > 1;\n  });\n  $largest = max($lst);\n  if\
    \ ($largest > 1) {\n    if (isPrime($largest)) {\n      $sum = array_sum(str_split($largest));\n\
    \    } else {\n      $sum = skjkasdkd(array_values(array_diff($lst, array($largest))));\n\
    \    }\n  }\n  return $sum;\n}\n", "   $result = 0;\n   $num = 0;\n   for ($i\
    \ = 0; $i < count($lst); $i++) {\n       if (isPrime($lst[$i])) {\n          \
    \ if ($lst[$i] > $num) {\n               $num = $lst[$i];\n           }\n    \
    \   }\n   }\n   if ($num > 0) {\n       $numArr = str_split($num);\n       for\
    \ ($i = 0; $i < count($numArr); $i++) {\n           $result += intval($numArr[$i]);\n\
    \       }\n   }\n   return $result;\n}", "    $sum = 0;\n    $max = max($lst);\n\
    \    $max_prime = is_prime($max);\n    $max_array = array_unique(str_split(strval($max_prime)));\n\
    \    return array_sum($max_array);\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

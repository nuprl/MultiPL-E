name: HumanEval_97_multiply
language: php
prompt: "<?php\n// Complete the function that takes two integers and returns \n//\
  \ the product of their unit digits.\n// Assume the input is always valid.\n// Examples:\n\
  // >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n// >>> multiply(2020,\
  \ 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a, $b) {\n"
tests: "function candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test\
  \ failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test\
  \ failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test\
  \ failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test\
  \ failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test\
  \ failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test\
  \ failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
  }\n\ntest();"
completions: ["    return ($a < 0 ? -$a : $a) % 10 * ($b < 0 ? -$b : $b) % 10;\n}",
  "    return ($a % 10) * ($b % 10);\n}\n\nprint_r(multiply(148, 412));\n", "    $product\
    \ = (($a % 10) * ($b % 10));\n    return $product;\n}", "    // Split the numbers\
    \ into an array\n    $splita = str_split($a);\n    $splitb = str_split($b);\n\
    \    // Reduce each array to the unit digit\n    $reduceda = array_reduce($splita,\
    \ function($carry, $item) {\n        return $carry += $item;\n    });\n    $reducedb\
    \ = array_reduce($splitb, function($carry, $item) {\n        return $carry +=\
    \ $item;\n    });\n    // Remove the negative sign\n    $reduceda = str_replace('-',\
    \ '', $reduceda);\n    $reducedb = str_replace('-', '', $reducedb);\n    // Multiply\
    \ the two numbers together and return the result\n    return $reduceda * $reducedb;\n\
    }", "    $last_digit_of_a = 0;\n    $last_digit_of_b = 0;\n    $result = 0;\n\
    \    $check_negativity = false;\n    if($a < 0){\n        $a = -1 * $a;\n    \
    \    $check_negativity = true;\n    }\n    if($b < 0){\n        $b = -1 * $b;\n\
    \        $check_negativity = true;\n    }\n    if($a < 10){\n        $last_digit_of_a\
    \ = $a;\n    }else{\n        $last_digit_of_a = substr($a, -1);\n    }\n    if($b\
    \ < 10){\n        $last_digit_of_b = $b;\n    }else{\n        $last_digit_of_b\
    \ = substr($b, -1);\n    }\n    $result = $last_digit_of_a * $last_digit_of_b;\n\
    \    if($check_negativity == true){\n        $result = -1 * $result;\n    }\n\
    \    return $result;\n}\n\nprint_r(multiply(14, -15));", "\treturn substr($a,\
    \ -1) * substr($b, -1);\n}\n$a = 148;\n$b = 412;\n$ret = multiply($a, $b);\necho\
    \ $ret;", "  return ($a % 10) * ($b % 10);\n}", "    return ($a % 10) * ($b %\
    \ 10);\n}\n", "  // your solution here\n}", "    $a = $a % 10;\n    $b = $b %\
    \ 10;\n    return $a * $b;\n}\n\necho multiply(19, 28);", "    return abs($a %\
    \ 10) * abs($b % 10);\n}", "    $first =  abs(str_split($a)[strlen($a)-1]);\n\
    \    $second = abs(str_split($b)[strlen($b)-1]);\n    return $first * $second;\n\
    \  }\n\n  echo multiply(148, 412);\n  echo '<br>';\n  echo multiply(19, 28);\n\
    \  echo '<br>';\n  echo multiply(2020, 1851);\n  echo '<br>';\n  echo multiply(14,\
    \ -15);", "    $a = (string) $a;\n    $b = (string) $b;\n    return intval($a[strlen($a)\
    \ - 1]) * intval($b[strlen($b) - 1]);\n}", "  // a*b = (a*b)/10 * 10 + a*b%10\n\
    \  return intval(strval($a * $b)[-1]);\n}\n", "    $a = substr($a, -1);\n    $b\
    \ = substr($b, -1);\n    return $a * $b;\n}", "  $a = abs($a);\n  $b = abs($b);\n\
    \  $a = $a % 10;\n  $b = $b % 10;\n  return $a * $b;\n}", "  //$aUnitDigit = $a\
    \ % 10;\n  //$bUnitDigit = $b % 10;\n  return ($a % 10) * ($b % 10);\n}\n\necho\
    \ multiply(14, -15);", "  return abs($a) % 10 * abs($b) % 10;\n}", "    return\
    \ abs($a % 10) * abs($b % 10);\n}\n\necho multiply(19, 28);", "    $r = 1;\n \
    \   $r *= substr($a, -1);\n    $r *= substr($b, -1);\n    return $r;\n}\necho\
    \ multiply(148, 412); // 16\necho \"<br>\";\necho multiply(19, 28); // 72\necho\
    \ \"<br>\";\necho multiply(2020, 1851); // 0\necho \"<br>\";\necho multiply(14,\
    \ -15); // 20\necho \"<br>\";", "    $arr = str_split($a, 1);\n    $arr2 = str_split($b,\
    \ 1);\n    $multiply = $arr[1] * $arr2[1];\n    return $multiply;\n}\n\necho multiply(148,\
    \ 412);", "  $a = str_split($a);\n  $b = str_split($b);\n  return $a[count($a)\
    \ - 1] * $b[count($b) - 1];\n}\n\n$a = multiply(148, 412);\n$b = multiply(19,\
    \ 28);\n$c = multiply(2020, 1851);\n$d = multiply(14, -15);\nvar_dump($a, $b,\
    \ $c, $d);", "  return ($a % 10) * ($b % 10);\n}\n\necho \"My answer:\\n\";\n\
    echo multiply(19, 28) . \"\\n\";\necho multiply(14, -15) . \"\\n\";\necho \"Other\
    \ answers:\\n\";\necho multiply(19, 28) . \"\\n\";\necho multiply(19, 28) . \"\
    \\n\";\necho multiply(19, 28) . \"\\n\";\necho multiply(19, 28) . \"\\n\";\necho\
    \ multiply(19, 28) . \"\\n\";\necho multiply(19, 28) . \"\\n\";\necho multiply(19,\
    \ 28) . \"\\n\";\necho multiply(19, 28) . \"\\n\";\necho multiply(19, 28) . \"\
    \\n\";\necho multiply(19, 28) . \"\\n\";\necho multiply(19, 28) . \"\\n\";\necho\
    \ multiply(19, 28) . \"\\n\";\necho multiply(19, 28) . \"\\n\";\necho multiply(19,\
    \ 28) . \"\\n\";\necho multiply(19, 28) . \"\\n\";\necho multiply(19, 28) . \"\
    \\n\";\necho multiply(19, 28) . \"\\n\";\necho multiply(19, 28) . \"\\n\";\necho\
    \ multiply(19, 28) . \"\\n\";\necho multiply(19, 28) . \"\\n\";\necho multiply(19,\
    \ 28) . \"\\n\";\necho multiply(19, 28) . \"\\n\";\necho multiply(19, 28) . \"\
    \\n\";\necho multiply(19, 28) . \"\\n\";\necho multiply(19, 28) . \"\\n\";\necho\
    \ multiply(19, 28) . \"\\n\";\necho multiply(19, 28) . \"\\n\";\necho multiply(19,\
    \ 28) . \"\\n\";\necho multiply(19, 28) . \"\\n\";\necho multiply(19, 28) . \"\
    \\n\";\necho multiply(19, 28) . \"\\n\";\necho multiply(19, 28) . \"\\n\";\necho\
    \ multiply(19, 28) . \"\\n\";\necho multiply(19, 28) . \"\\n\";\necho multiply(19,\
    \ 28) . \"\\n\";\necho multiply(19, 28) . \"\\n\";\necho multiply(19, 28) . \"\
    \\n\";\necho multiply(19, 28) . \"\\", "  return ($a % 10) * ($b % 10);\n}", " \
    \   $a %= 10;\n    $b %= 10;\n    return $a * $b;\n}\n\necho multiply(148, 412)\
    \ . \"<br>\";\necho multiply(19, 28) . \"<br>\";\necho multiply(2020, 1851) .\
    \ \"<br>\";\necho multiply(14, -15) . \"<br>\";", "    return $a * $b;\n  }\n\
    \  echo '$a = \"148\" $b = \"412\" <br>';\n  echo multiply(148, 412);\n  \n  echo\
    \ '<br>';\n  echo '$a = \"148\" $b = \"412\" <br>';\n  echo multiply(19, 28);\n\
    \  \n  echo '<br>';\n  echo '$a = \"148\" $b = \"412\" <br>';\n  echo multiply(2020,\
    \ 1851);\n  \n  echo '<br>';\n  echo '$a = \"148\" $b = \"412\" <br>';\n  echo\
    \ multiply(14, -15);", "\tif($a==0 || $b==0)\n\t\treturn 0;\n    $a = (string)$a;\n\
    \    $b = (string)$b;\n\treturn ($a[strlen($a)-1] * $b[strlen($b)-1]);\n}", " \
    \ return ($a % 10) * ($b % 10);\n}", "  //$product = ($a % 10) * ($b % 10);\n\
    \  //return $product;\n  return ($a % 10) * ($b % 10);\n}\n", "    $a = abs($a);\n\
    \    $b = abs($b);\n    $unit_a = $a % 10;\n    $unit_b = $b % 10;\n    return\
    \ $unit_a * $unit_b;\n}\necho multiply(148, 412);\necho \"<br>\";\necho multiply(19,\
    \ 28);\necho \"<br>\";\necho multiply(2020, 1851);\necho \"<br>\";\necho multiply(14,\
    \ -15);", "    return ($a % 10) * ($b % 10);\n}", "    return ($a%10) * ($b%10);\n\
    }\n", "  $a_unit = $a % 10;\n  $b_unit = $b % 10;\n  return $a_unit * $b_unit;\n\
    }", "  $unit_a = $a % 10;\n  $unit_b = $b % 10;\n  return $unit_a * $unit_b;\n\
    }\n\necho(multiply(14, -15));", "    return (($a % 10) * ($b % 10));\n}", "  \
    \  return abs($a % 10) * abs($b % 10);\n}", "  $a = abs($a);\n  $b = abs($b);\n\
    \  return ($a % 10) * ($b % 10);\n}", "\t$product = $a * $b;\n\t$unitDigit = substr($product,\
    \ -1);\n\treturn $unitDigit;\n}", "\treturn $a < 0 ? -($a % 10) * ($b % 10) :\
    \ ($a % 10) * ($b % 10);\n}", "    $a = abs($a);\n    $b = abs($b);\n    return\
    \ ($a % 10) * ($b % 10);\n}\n\n$fptr = fopen(getenv(\"OUTPUT_PATH\"), \"w\");\n\
    \n$stdin = fopen(\"php://stdin\", \"r\");\n\nfscanf($stdin, \"%d\\n\", $testCases);\n\
    \nfor ($testCase = 0; $testCase < $testCases; $testCase++) {\n    fscanf($stdin,\
    \ \"%[^\\n]\", $ab_temp);\n    $ab = explode(' ', $ab_temp);\n\n    $a = intval($ab[0]);\n\
    \n    $b = intval($ab[1]);\n\n    $result = multiply($a, $b);\n\n    fwrite($fptr,\
    \ $result . \"\\n\");\n}\n\nfclose($stdin);\nfclose($fptr);", "  // Your code\
    \ here\n}", "    return ($a % 10) * ($b % 10);\n}", "    $a = (int) $a;\n    $b\
    \ = (int) $b;\n    return ($a * $b) % 10;\n}", "    return (int) substr($a, -1)\
    \ * (int) substr($b, -1);\n}\n", "    $a = abs($a);\n    $b = abs($b);\n    $a_arr\
    \ = str_split($a);\n    $b_arr = str_split($b);\n    $a_last = end($a_arr);\n\
    \    $b_last = end($b_arr);\n    return $a_last * $b_last;\n}", "  $a = (string)$a;\n\
    \  $b = (string)$b;\n  return $a[strlen($a)-1] * $b[strlen($b)-1];\n}\necho multiply(148,\
    \ 412);\necho multiply(19, 28);\necho multiply(2020, 1851);\necho multiply(14,\
    \ -15);", "  $result = substr($a, -1) * substr($b, -1);\n  return $result;\n}\n",
  "    //   return abs($a % 10) * abs($b % 10);\n    return ($a % 10) * ($b % 10);\n\
    }\necho(multiply(14, -15));", "  return (abs($a)%10)*(abs($b)%10);\n}\necho multiply(14,\
    \ -15);", "  $val = ($a % 10) * ($b % 10);\n  return $val;\n}", "    return abs(abs($a)\
    \ % 10 * abs($b) % 10);\n}", "    return ($a % 10) * ($b % 10);\n}\n", "    //your\
    \ code here\n    $a_unit = substr($a, -1);\n    $b_unit = substr($b, -1);\n  \
    \  return $a_unit * $b_unit;\n}", "  $string_a = (string)$a;\n  $string_b = (string)$b;\n\
    \  $last_char_a = substr($string_a, -1);\n  $last_char_b = substr($string_b, -1);\n\
    \  return $last_char_a * $last_char_b;\n}\necho multiply(148, 412);\necho \"<br>\"\
    ;\necho multiply(19, 28);\necho \"<br>\";\necho multiply(2020, 1851);\necho \"\
    <br>\";\necho multiply(14, -15);", "  $a = abs($a);\n  $b = abs($b);\n  $prod\
    \ = ($a % 10) * ($b % 10);\n  return $prod;\n}\n", "    $a = abs($a);\n    $b\
    \ = abs($b);\n    return ($a % 10) * ($b % 10);\n}", "  $num = str_split($a.$b);\n\
    \  return $num[0] * $num[1];\n}\n\nprint(multiply(148, 412).PHP_EOL); // 16\n\
    print(multiply(19, 28).PHP_EOL); // 72\nprint(multiply(2020, 1851).PHP_EOL); //\
    \ 0\nprint(multiply(14, -15).PHP_EOL); // 20", "    return (abs($a)%10) * (abs($b)%10);\n\
    }\necho multiply(148, 412);", "  $units = abs($a % 10) * abs($b % 10);\n  return\
    \ $units;\n}\n", "    return ($a % 10) * ($b % 10);\n}\n\necho multiply(148, 412);",
  "    return (($a % 10) * ($b % 10));\n}\n", "  $a = abs($a % 10);\n  $b = abs($b\
    \ % 10);\n  return $a * $b;\n}\necho multiply(148, 412);\necho \"\\n\";\necho\
    \ multiply(19, 28);\necho \"\\n\";\necho multiply(2020, 1851);\necho \"\\n\";\n\
    echo multiply(14, -15);\necho \"\\n\";\n", "    $a = abs($a);\n    $b = abs($b);\n\
    \    return ($a%10) * ($b%10);\n}\n", "    $c = ($a % 10) * ($b % 10);\n    return\
    \ $c;\n}", "  return abs($a % 10) * abs($b % 10);\n}\n", "    return ($a % 10)\
    \ * ($b % 10);\n}\n\n$a = 148;\n$b = 412;\necho multiply($a, $b) . \"\\n\";",
  "  return $a % 10 * $b % 10;\n}\n\nprint multiply(148, 412);\nprint \"\\n\";\nprint\
    \ multiply(19, 28);\nprint \"\\n\";\nprint multiply(2020, 1851);\nprint \"\\n\"\
    ;\nprint multiply(14, -15);\nprint \"\\n\";\n", "  $a = $a % 10;\n  $b = $b %\
    \ 10;\n  return $a * $b;\n}\necho multiply(2, 3);\necho \"\\n\";\necho multiply(19,\
    \ 28);\necho \"\\n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14,\
    \ -15);\necho \"\\n\";\necho multiply(14, 150);\necho \"\\n\";\necho multiply(14,\
    \ 0);\necho \"\\n\";\n", "  // Your code here\n}\n", "\t$a = abs($a % 10);\n\t\
    $b = abs($b % 10);\n\treturn $a * $b;\n}\n\nprint multiply(148, 412) . \"\\n\"\
    ;\nprint multiply(19, 28) . \"\\n\";\nprint multiply(2020, 1851) . \"\\n\";\n\
    print multiply(14, -15) . \"\\n\";", "  $r = 0;\n  $a = $a % 10;\n  $b = $b %\
    \ 10;\n  $r = $a * $b;\n  return $r;\n}", "    $result = $a*$b;\n    $arr = str_split($result);\n\
    \    $digits = array_pop($arr);\n    return $digits;\n}", "    $num = (string)\
    \ $a . $b;\n    $num = str_split($num);\n    $result = 1;\n    foreach ($num as\
    \ $n) {\n        $result *= $n;\n    }\n    return $result % 10;\n}", "    $num1\
    \ = $a % 10;\n    $num2 = $b % 10;\n    return $num1 * $num2;\n}\n", "  $product\
    \ = ($a < 0 ? -($a) : $a) \n          * ($b < 0 ? -($b) : $b);\n  $product = str_split($product);\n\
    \  return (int)$product[count($product) - 1];\n}", "    return ($a % 10) * ($b\
    \ % 10);\n}", "  $numberA = $a % 10;\n  $numberB = $b % 10;\n  return $numberA\
    \ * $numberB;\n}", "    return substr($a, -1) * substr($b, -1);\n}\n", "    return\
    \ ($a%10)*($b%10);\n}\necho multiply(14, -15);", "  $a_arr = str_split($a);\n\
    \  $b_arr = str_split($b);\n  $a_unit = (int) $a_arr[count($a_arr) - 1];\n  $b_unit\
    \ = (int) $b_arr[count($b_arr) - 1];\n  return $a_unit * $b_unit;\n}\n\n$test\
    \ = multiply(148, 412);\nprint $test;", "    $arr = [];\n    $arr[0] = substr($a,\
    \ -1);\n    $arr[1] = substr($b, -1);\n    return $arr[0] * $arr[1];\n}\n\necho\
    \ multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\n\";\n\
    echo multiply(2020, 1851);\necho \"\\n\";\necho multiply(14, -15);\necho \"\\\
    n\";", "    $numbers = [$a, $b];\n    $result = [];\n    foreach ($numbers as\
    \ $number) {\n        $result[] = str_split(strval($number))[-1];\n    }\n   \
    \ return array_product($result);\n}", "\t$product = ($a % 10) * ($b % 10);\n\t\
    return $product;\n}\n\necho multiply(148, 412) . \"\\n\";\necho multiply(19, 28)\
    \ . \"\\n\";\necho multiply(2020, 1851) . \"\\n\";\necho multiply(14, -15) . \"\
    \\n\";", "    return ($a % 10) * ($b % 10);\n}\n", "    return $a % 10 * $b %\
    \ 10;\n}\n\necho multiply(148, 412) . \"\\n\";\necho multiply(19, 28) . \"\\n\"\
    ;\necho multiply(2020, 1851) . \"\\n\";\necho multiply(14, -15) . \"\\n\";", " \
    \   $a = str_split($a);\n    $b = str_split($b);\n    return $a[count($a) - 1]\
    \ * $b[count($b) - 1];\n}\n\nprint_r(multiply(14, -15));", "    $a = $a % 10;\n\
    \    $b = $b % 10;\n    return $a * $b;\n}", "\t$a = str_split($a);\n\t$b = str_split($b);\n\
    \treturn $a[count($a)-1] * $b[count($b)-1];\n}\n", "  $a = (string) $a;\n  $b\
    \ = (string) $b;\n  $a = substr($a, -1);\n  $b = substr($b, -1);\n  return $a\
    \ * $b;\n}\n", "  return ($a % 10) * ($b % 10);\n}\n\necho \">>>>>>>>>>>>>>>\\\
    n\";\n", "  return $a < 0 ? ($a * -1) * ($b % 10) : $a * ($b % 10);\n}\n\necho\
    \ '>>>>>' . multiply(2020, 1851) . '<br>';\necho '>>>>>' . multiply(19, 28) .\
    \ '<br>';\necho '>>>>>' . multiply(148, 412) . '<br>';\necho '>>>>>' . multiply(14,\
    \ -15) . '<br>';\necho '>>>>>' . multiply(107, -207) . '<br>';\n", "  return $a\
    \ % 10 * $b % 10;\n}\necho multiply(148, 412). \"\\n\";", "  return (abs($a) %\
    \ 10) * (abs($b) % 10);\n}", "    return (abs($a)%10) * (abs($b)%10);\n}\necho\
    \ multiply(148, 412);\necho \"<br>\";\necho multiply(19, 28);\necho \"<br>\";\n\
    echo multiply(2020, 1851);\necho \"<br>\";\necho multiply(14, -15);\necho \"<br>\"\
    ;", "    return ($a % 10) * ($b % 10);\n}\n\necho multiply(148, 412);", "  //\
    \ Your code here!\n}\n", "  $a = abs($a);\n  $b = abs($b);\n  return $a % 10 *\
    \ $b % 10;\n}\n\necho multiply(148, 412);", "  $a = $a % 10;\n  $b = $b % 10;\n\
    \  return $a * $b;\n}", "    $a = abs($a % 10);\n    $b = abs($b % 10);\n    return\
    \ $a * $b;\n}\n\necho multiply(148, 412) . \"\\n\";\necho multiply(19, 28) . \"\
    \\n\";\necho multiply(2020, 1851) . \"\\n\";\necho multiply(14, -15) . \"\\n\"\
    ;", "  return (($a % 10) * ($b % 10));\n}\n\necho multiply(148, 412);\necho \"\
    \\n\";\necho multiply(19, 28);\necho \"\\n\";\necho multiply(2020, 1851);\necho\
    \ \"\\n\";\necho multiply(14, -15);\necho \"\\n\";\n", "    $a = (string) $a;\n\
    \    $b = (string) $b;\n    $a = $a[strlen($a) - 1];\n    $b = $b[strlen($b) -\
    \ 1];\n    return $a * $b;\n}\n", "\treturn $a % 10 * $b % 10;\n}\n", "    //\
    \ Your code here\n}", "\treturn ($a%10) * ($b%10);\n}\necho multiply(148, 412);\n",
  "  $a = (string)$a;\n  $b = (string)$b;\n  return (int)$a[-1] * (int)$b[-1];\n}",
  "    $a = (int) $a;\n    $b = (int) $b;\n    return ($a - floor($a / 10) * 10) *\
    \ ($b - floor($b / 10) * 10);\n}\n\nprint_r(multiply(148, 412).PHP_EOL);\nprint_r(multiply(19,\
    \ 28).PHP_EOL);\nprint_r(multiply(2020, 1851).PHP_EOL);\nprint_r(multiply(14,\
    \ -15).PHP_EOL);", "    return (abs($a % 10) * abs($b % 10));\n}", "\t$a = abs($a);\n\
    \t$b = abs($b);\n\t$A = $a % 10;\n\t$B = $b % 10;\n\treturn $A * $B;\n}\nprint_r(multiply(148,\
    \ 412));", "\treturn (abs($a) % 10) * (abs($b) % 10);\n}", "  $product = ($a %\
    \ 10) * ($b % 10);\n  return $product;\n}", "  return $a * $b;\n}", "    $a =\
    \ abs($a);\n    $b = abs($b);\n    $product = $a % 10 * $b % 10;\n    return $product;\n\
    }\n\n$a = 148;\n$b = 412;\n$result = multiply($a, $b);\necho $result;", "    return\
    \ ($a * $b) % 10;\n}", "  return $a % 10 * $b % 10;\n}", "    return ($a % 10)\
    \ * ($b % 10);\n}\necho multiply(148, 412);\necho \"<br>\";\necho multiply(19,\
    \ 28);\necho \"<br>\";\necho multiply(2020, 1851);\necho \"<br>\";\necho multiply(14,\
    \ -15);", "  return $a % 10 * $b % 10;\n}", "  // Good luck!\n  $a = $a < 0 ?\
    \ $a * -1 : $a;\n  $b = $b < 0 ? $b * -1 : $b;\n  $c = ($a % 10) * ($b % 10);\n\
    \  return $c;\n}", "    $tmp = $a * $b;\n    $digs = explode('', $tmp);\n    $sum\
    \ = 0;\n    foreach ($digs as $digit) {\n        $sum += $digit;\n    }\n    return\
    \ $sum;\n}\n", "    $a = abs($a);\n    $b = abs($b);\n    $a_unit = $a % 10;\n\
    \    $b_unit = $b % 10;\n    return $a_unit * $b_unit;\n}\n", "    $a = abs($a);\n\
    \    $b = abs($b);\n    $a = str_split($a);\n    $b = str_split($b);\n    return\
    \ $a[1] * $b[1];\n  }\n  echo \"<pre>\";\n  print_r(multiply(148, 412));\n  echo\
    \ \"</pre>\";", "  $a = abs($a % 10);\n  $b = abs($b % 10);\n  return $a * $b;\n\
    }\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\\
    n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14, -15);\necho\
    \ \"\\n\";\n", "    $intA = str_split($a);\n    $intB = str_split($b);\n    $unitA\
    \ = end($intA);\n    $unitB = end($intB);\n    return $unitA * $unitB;\n}\n\n\
    echo multiply(148, 412) . \"\\n\";\necho multiply(19, 28) . \"\\n\";\necho multiply(2020,\
    \ 1851) . \"\\n\";\necho multiply(14, -15) . \"\\n\";", "  // multiply the units\
    \ of a and b\n  $a = substr((string)$a, -1);\n  $b = substr((string)$b, -1);\n\
    \  return $a * $b;\n}", "  $arr = [$a, $b];\n  for ($i = 0; $i < count($arr);\
    \ $i++) {\n    if ($arr[$i] < 0) {\n      $arr[$i] = substr($arr[$i], 1);\n  \
    \  }\n  }\n  $unit_a = substr($arr[0], -1);\n  $unit_b = substr($arr[1], -1);\n\
    \  return $unit_a * $unit_b;\n}\n\n$a = 148;\n$b = 412;\n$result = multiply($a,\
    \ $b);\necho $result;\n", "\treturn ($a % 10) * ($b % 10);\n}", "    $aa = $a\
    \ % 10;\n    $bb = $b % 10;\n    return $aa * $bb;\n}\necho multiply(19, 28);\n\
    echo \"\\n\";\necho multiply(14, -15);\necho \"\\n\";\n", "    // your code here\n\
    \    $str_a = (string)abs($a);\n    $str_b = (string)abs($b);\n    $a = (int)$str_a[strlen($str_a)-1];\n\
    \    $b = (int)$str_b[strlen($str_b)-1];\n    return $a * $b;\n}\n", "    return\
    \ str_split($a)[1] * str_split($b)[1];\n}\n", "  // ...\n}", "    $a = substr($a,\
    \ -1);\n    $b = substr($b, -1);\n    return $a * $b;\n}\necho multiply(148, 412);",
  "    $unit_a = $a % 10;\n    $unit_b = $b % 10;\n    return $unit_a * $unit_b;\n\
    }\n$a = 148;\n$b = 412;\n$result = multiply($a, $b);\necho $result;", "    return\
    \ abs($a % 10) * abs($b % 10);\n}\necho multiply(19, 28);", "    $a = abs($a);\n\
    \    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n}\n\nvar_dump(multiply(148,\
    \ 412));", "  // TODO: You can do it, puffin!\n  return $a % 10 * $b % 10;\n}\n\
    \nprint_r(multiply(148, 412).PHP_EOL);\nprint_r(multiply(19, 28).PHP_EOL);\nprint_r(multiply(2020,\
    \ 1851).PHP_EOL);\nprint_r(multiply(14, -15).PHP_EOL);", "  // your code here\n\
    \  $a = abs($a);\n  $b = abs($b);\n  return ($a%10) * ($b%10);\n}\necho multiply(148,\
    \ 412); // 16\necho multiply(19, 28); // 72\necho multiply(2020, 1851); // 0\n\
    echo multiply(14, -15); // 20", "    $result = 0;\n    while($a > 10) {\n    \
    \    $a = floor($a / 10);\n    }\n    while($b > 10) {\n        $b = floor($b\
    \ / 10);\n    }\n    $result = $a * $b;\n    return $result;\n}\n", "  return\
    \ (int)str_replace('-', '', str_split($a, 1)[0]) * (int)str_replace('-', '', str_split($b,\
    \ 1)[0]);\n}\n", "  $a = (int) strrev($a);\n  $b = (int) strrev($b);\n  return\
    \ $a * $b;\n}", "    $unit_a = $a % 10;\n    $unit_b = $b % 10;\n    return $unit_a\
    \ * $unit_b;\n}\n$result = multiply(148, 412);\necho $result;", "  $i = strlen($a)\
    \ - 1;\n  $j = strlen($b) - 1;\n  return (int) $a[$i] * (int) $b[$j];\n}", " \
    \ return ($a % 10) * ($b % 10);\n}", "  return ($a % 10) * ($b % 10);\n}\n", " \
    \ $pr1 = substr($a, -1);\n  $pr2 = substr($b, -1);\n  $res = $pr1 * $pr2;\n  return\
    \ $res;\n}\n\necho multiply(20, -15);\n", "  $a = $a % 10;\n  $b = $b % 10;\n\
    \  $result = $a * $b;\n  return $result;\n}", "    $a = abs($a);\n    $b = abs($b);\n\
    \    $res = ($a % 10) * ($b % 10);\n    return $res;\n}\necho multiply(1, 2);",
  "  $a = array_map('intval', str_split(abs($a)));\n  $b = array_map('intval', str_split(abs($b)));\n\
    \  return $a[count($a) - 1] * $b[count($b) - 1];\n}\n\necho multiply(148, 412);\n\
    echo \"<br>\";\necho multiply(19, 28);\necho \"<br>\";\necho multiply(2020, 1851);\n\
    echo \"<br>\";\necho multiply(14, -15);", "    return (abs($a)%10)*(abs($b)%10);\n\
    }", "\treturn ($a % 10) * ($b % 10);\n}\n", "  // your solution here\n}", "\t\
    $multiplication = (string) $a[strlen($a) - 1] * $b[strlen($b) - 1];\n    return\
    \ (int) $multiplication;\n}", "  $product = (abs($a) % 10) * (abs($b) % 10);\n\
    \  return $product;\n}\n", "    return $a % 10 * $b % 10;\n}", "    return abs($a\
    \ % 10) * abs($b % 10);\n}\n", "    $first = $a % 10;\n    $second = $b % 10;\n\
    \    return $first * $second;\n}\necho multiply(148, 412);", "  $a = abs($a);\n\
    \  $b = abs($b);\n  $a = $a % 10;\n  $b = $b % 10;\n  return $a * $b;\n}\nprint\
    \ multiply(3912, 3423);\nprint multiply(1, 2);\nprint multiply(8, 2);\nprint multiply(0,\
    \ 45);", "  $res = 1;\n  $tmp = [$a, $b];\n  foreach ($tmp as $n) {\n    $res\
    \ *= intval(strrev($n)) % 10;\n  }\n  return $res;\n}", "  $num = 0;\n  $num +=\
    \ intval($a % 10) * intval($b % 10);\n  return $num;\n}\n\necho multiply(14, -15);",
  "    return $a%10 * $b%10;\n}", "    return ($a % 10) * ($b % 10);\n}\n", "  //\
    \ your code here\n}\n\necho multiply(148, 412);", "    return abs(($a%10)*($b%10));\n\
    }\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\\
    n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14, -15);\necho\
    \ \"\\n\";", "    // Write your code here\n    $c = (string) $a;\n    $d = (string)\
    \ $b;\n    $c = $c[strlen($c)-1];\n    $d = $d[strlen($d)-1];\n    return $c *\
    \ $d;\n}\nprint_r(multiply(148, 412));", "  $a = str_split($a);\n  $b = str_split($b);\n\
    \  return array_product($a) * array_product($b);\n}", "    return (abs($a) % 10)\
    \ * (abs($b) % 10);\n}\n", "\t$arr = [\n\t\t$a % 10,\n\t\t$b % 10\n\t];\n\treturn\
    \ $arr[0] * $arr[1];\n}", "    return $a * $b % 10;\n}\necho multiply(148, 412);\n\
    echo multiply(19, 28);\necho multiply(2020, 1851);\necho multiply(14, -15);",
  "    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n}\necho\
    \ multiply(148, 412).PHP_EOL;\necho multiply(19, 28).PHP_EOL;\necho multiply(2020,\
    \ 1851).PHP_EOL;\necho multiply(14, -15).PHP_EOL;", "  return abs($a) % 10 * abs($b)\
    \ % 10;\n}", "    $i = $a % 10;\n    $j = $b % 10;\n    return $i * $j;\n}\n\n\
    echo \"testing multiply(148, 412)\\n\";\necho \"Answer is 16\\n\";\necho \"Result:\
    \ \" . multiply(148, 412) . \"\\n\";\necho \"testing multiply(19, 28)\\n\";\n\
    echo \"Answer is 72\\n\";\necho \"Result: \" . multiply(19, 28) . \"\\n\";\necho\
    \ \"testing multiply(2020, 1851)\\n\";\necho \"Answer is 0\\n\";\necho \"Result:\
    \ \" . multiply(2020, 1851) . \"\\n\";\necho \"testing multiply(14, -15)\\n\"\
    ;\necho \"Answer is 20\\n\";\necho \"Result: \" . multiply(14, -15) . \"\\n\";",
  "    // answer here\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n\
    }\n", "  return ($a%10) * ($b%10);\n}", "  $answer = ($a%10) * ($b%10);\n  return\
    \ $answer;\n}", "  return $a % 10 * $b % 10;\n}\n\necho multiply(148, 412);\n\
    echo '<br>';\necho multiply(19, 28);\necho '<br>';\necho multiply(2020, 1851);\n\
    echo '<br>';\necho multiply(14, -15);\necho '<br>';", "  $output = ($a%10) * ($b%10);\n\
    \  return $output;\n}\necho multiply(148, 412) . \"\\n\";\necho multiply(19, 28)\
    \ . \"\\n\";\necho multiply(2020, 1851) . \"\\n\";\necho multiply(14, -15) . \"\
    \\n\";", "    $first = $a % 10;\n    $second = $b % 10;\n    return $first * $second;\n\
    }", "  $unitA = substr($a, -1);\n  $unitB = substr($b, -1);\n  return $unitA *\
    \ $unitB;\n}", "    $a = (string) $a;\n    $b = (string) $b;\n    $a = $a[strlen($a)\
    \ - 1];\n    $b = $b[strlen($b) - 1];\n    return (int) $a * (int) $b;\n}", " \
    \ $a = (string)$a;\n  $b = (string)$b;\n  return (int)$a[strlen($a)-1] * (int)$b[strlen($b)-1];\n\
    }", "  return (abs($a) % 10) * (abs($b) % 10);\n}\necho multiply(148, 412) . PHP_EOL;\
    \ // 16\necho multiply(19, 28) . PHP_EOL; // 72\necho multiply(2020, 1851) . PHP_EOL;\
    \ // 0\necho multiply(14, -15) . PHP_EOL; // 20", "  $c = $a % 10;\n  $d = $b\
    \ % 10;\n  $result = $c * $d;\n  return $result;\n}\necho multiply(19, 28);",
  "  $a = abs($a);\n  $b = abs($b);\n  $a = $a % 10;\n  $b = $b % 10;\n  return $a\
    \ * $b;\n}\n", "    $a = ($a % 10);\n    $b = ($b % 10);\n    return $a * $b;\n\
    }\n", "  return (abs($a) % 10) * (abs($b) % 10);\n}", "    $a = abs($a);\n   \
    \ $b = abs($b);\n    return ($a%10) * ($b%10);\n}\n", "    return $a % 10 * $b\
    \ % 10;\n}", "    $a = abs($a % 10);\n    $b = abs($b % 10);\n    return $a *\
    \ $b;\n}\necho multiply(148, 412);\necho \"<br>\";\necho multiply(19, 28);\necho\
    \ \"<br>\";\necho multiply(2020, 1851);\necho \"<br>\";\necho multiply(14, -15);",
  "  // your code here\n  if ($a < 0) {\n    $a = abs($a);\n  }\n  if ($b < 0) {\n\
    \    $b = abs($b);\n  }\n  $a = $a % 10;\n  $b = $b % 10;\n  $result = $a * $b;\n\
    \  return $result;\n}\necho multiply(2020, 1851);", "    $a = abs($a);\n    $b\
    \ = abs($b);\n    return ($a%10) * ($b%10);\n}", "  $product = ($a % 10) * ($b\
    \ % 10);\n  return $product;\n}\n", "  $one_a = $a % 10;\n  $one_b = $b % 10;\n\
    \  return $one_a * $one_b;\n}\n\necho multiply(148, 412);\necho \"\\n\";\necho\
    \ multiply(19, 28);\necho \"\\n\";\necho multiply(2020, 1851);\necho \"\\n\";\n\
    echo multiply(14, -15);", "  return ($a % 10) * ($b % 10);\n}\n\necho multiply(148,\
    \ 412) . \"\\n\";\necho multiply(19, 28) . \"\\n\";\necho multiply(2020, 1851)\
    \ . \"\\n\";\necho multiply(14, -15) . \"\\n\";", "    //Get the unit digits of\
    \ both $a and $b\n    $unitDigitA = intval($a % 10);\n    $unitDigitB = intval($b\
    \ % 10);\n    return $unitDigitA * $unitDigitB;\n}\n\n$result = multiply(148,\
    \ 412);\necho $result;", "  $a = preg_replace('/[^0-9]/', '', $a);\n  $b = preg_replace('/[^0-9]/',\
    \ '', $b);\n  return $a * $b;\n}\nmultiply(148, 412);", "    return ($a % 10)\
    \ * ($b % 10);\n}\n\nvar_dump(multiply(3, 4));", "  return $a * $b % 10;\n}\n\
    $result = multiply(2020, 1851);\necho $result;", "  return (($a % 10) * ($b %\
    \ 10));\n}\n", "    $a = str_split($a);\n    $b = str_split($b);\n    return $a[count($a)\
    \ - 1] * $b[count($b) - 1];\n}\n", "    $unit = (abs($a) % 10) * (abs($b) % 10);\n\
    \    return $unit;\n}\n\nvar_dump(multiply(148, 412));\nvar_dump(multiply(19,\
    \ 28));\nvar_dump(multiply(2020, 1851));\nvar_dump(multiply(14, -15));", "   \
    \ return ($a * $b) % 10;\n}\n\necho multiply(148, 412) . \"\\n\";\necho multiply(19,\
    \ 28) . \"\\n\";\necho multiply(2020, 1851) . \"\\n\";\necho multiply(14, -15)\
    \ . \"\\n\";", "  $a = abs($a % 10);\n  $b = abs($b % 10);\n  return $a * $b;\n\
    }\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

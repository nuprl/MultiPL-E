language: php
name: HumanEval_97_multiply
results:
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return ($a < 0 ? -$a : $a) % 10 * ($b < 0 ? -$b : $b) % 10;\n}\n\
    function candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpls4w3zs6.php:22\n\
    Stack trace:\n#0 /tmp/tmpls4w3zs6.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpls4w3zs6.php\
    \ on line 22\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return ($a % 10) * ($b % 10);\n}\n\nprint_r(multiply(148, 412));\n\
    \nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6z27ehib.php:28\n\
    Stack trace:\n#0 /tmp/tmp6z27ehib.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp6z27ehib.php\
    \ on line 28\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $product = (($a % 10) * ($b % 10));\n    return $product;\n}\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpihtzpaxi.php:26\n\
    Stack trace:\n#0 /tmp/tmpihtzpaxi.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpihtzpaxi.php\
    \ on line 26\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    // Split the numbers into an array\n    $splita = str_split($a);\n\
    \    $splitb = str_split($b);\n    // Reduce each array to the unit digit\n  \
    \  $reduceda = array_reduce($splita, function($carry, $item) {\n        return\
    \ $carry += $item;\n    });\n    $reducedb = array_reduce($splitb, function($carry,\
    \ $item) {\n        return $carry += $item;\n    });\n    // Remove the negative\
    \ sign\n    $reduceda = str_replace('-', '', $reduceda);\n    $reducedb = str_replace('-',\
    \ '', $reducedb);\n    // Multiply the two numbers together and return the result\n\
    \    return $reduceda * $reducedb;\n}\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzglfikva.php:36\n\
    Stack trace:\n#0 /tmp/tmpzglfikva.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpzglfikva.php\
    \ on line 36\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $last_digit_of_a = 0;\n    $last_digit_of_b = 0;\n    $result = 0;\n\
    \    $check_negativity = false;\n    if($a < 0){\n        $a = -1 * $a;\n    \
    \    $check_negativity = true;\n    }\n    if($b < 0){\n        $b = -1 * $b;\n\
    \        $check_negativity = true;\n    }\n    if($a < 10){\n        $last_digit_of_a\
    \ = $a;\n    }else{\n        $last_digit_of_a = substr($a, -1);\n    }\n    if($b\
    \ < 10){\n        $last_digit_of_b = $b;\n    }else{\n        $last_digit_of_b\
    \ = substr($b, -1);\n    }\n    $result = $last_digit_of_a * $last_digit_of_b;\n\
    \    if($check_negativity == true){\n        $result = -1 * $result;\n    }\n\
    \    return $result;\n}\n\nprint_r(multiply(14, -15));\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-20\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9rgx2qo8.php:53\n\
    Stack trace:\n#0 /tmp/tmp9rgx2qo8.php(60): test()\n#1 {main}\n  thrown in /tmp/tmp9rgx2qo8.php\
    \ on line 53\n"
  timestamp: 1659822393
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n\treturn substr($a, -1) * substr($b, -1);\n}\n$a = 148;\n$b = 412;\n\
    $ret = multiply($a, $b);\necho $ret;\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16'
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  return ($a % 10) * ($b % 10);\n}\nfunction candidate(...$args) {\n\
    \    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmputwyoo_2.php:25\n\
    Stack trace:\n#0 /tmp/tmputwyoo_2.php(32): test()\n#1 {main}\n  thrown in /tmp/tmputwyoo_2.php\
    \ on line 25\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return ($a % 10) * ($b % 10);\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp38ezd8mf.php:26\n\
    Stack trace:\n#0 /tmp/tmp38ezd8mf.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp38ezd8mf.php\
    \ on line 26\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  // your solution here\n}\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4crz1kdb.php:22\n\
    Stack trace:\n#0 /tmp/tmp4crz1kdb.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp4crz1kdb.php\
    \ on line 22\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n}\n\necho\
    \ multiply(19, 28);\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "72\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu8f7yjx3.php:29\n\
    Stack trace:\n#0 /tmp/tmpu8f7yjx3.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpu8f7yjx3.php\
    \ on line 29\n"
  timestamp: 1659822393
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return abs($a % 10) * abs($b % 10);\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822393
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $first =  abs(str_split($a)[strlen($a)-1]);\n    $second = abs(str_split($b)[strlen($b)-1]);\n\
    \    return $first * $second;\n  }\n\n  echo multiply(148, 412);\n  echo '<br>';\n\
    \  echo multiply(19, 28);\n  echo '<br>';\n  echo multiply(2020, 1851);\n  echo\
    \ '<br>';\n  echo multiply(14, -15);\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 16<br>72<br>0<br>20
  timestamp: 1659822393
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = (string) $a;\n    $b = (string) $b;\n    return intval($a[strlen($a)\
    \ - 1]) * intval($b[strlen($b) - 1]);\n}\nfunction candidate(...$args) {\n   \
    \ return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  // a*b = (a*b)/10 * 10 + a*b%10\n  return intval(strval($a * $b)[-1]);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiir0c1xa.php:24\n\
    Stack trace:\n#0 /tmp/tmpiir0c1xa.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpiir0c1xa.php\
    \ on line 24\n"
  timestamp: 1659822393
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = substr($a, -1);\n    $b = substr($b, -1);\n    return $a * $b;\n\
    }\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822393
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $a = abs($a);\n  $b = abs($b);\n  $a = $a % 10;\n  $b = $b % 10;\n\
    \  return $a * $b;\n}\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  //$aUnitDigit = $a % 10;\n  //$bUnitDigit = $b % 10;\n  return ($a\
    \ % 10) * ($b % 10);\n}\n\necho multiply(14, -15);\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-20\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfv5h_3b1.php:29\n\
    Stack trace:\n#0 /tmp/tmpfv5h_3b1.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpfv5h_3b1.php\
    \ on line 29\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  return abs($a) % 10 * abs($b) % 10;\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvlm95v8j.php:22\n\
    Stack trace:\n#0 /tmp/tmpvlm95v8j.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpvlm95v8j.php\
    \ on line 22\n"
  timestamp: 1659822393
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return abs($a % 10) * abs($b % 10);\n}\n\necho multiply(19, 28);\n\
    function candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '72'
  timestamp: 1659822393
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $r = 1;\n    $r *= substr($a, -1);\n    $r *= substr($b, -1);\n \
    \   return $r;\n}\necho multiply(148, 412); // 16\necho \"<br>\";\necho multiply(19,\
    \ 28); // 72\necho \"<br>\";\necho multiply(2020, 1851); // 0\necho \"<br>\";\n\
    echo multiply(14, -15); // 20\necho \"<br>\";\nfunction candidate(...$args) {\n\
    \    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 16<br>72<br>0<br>20<br>
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $arr = str_split($a, 1);\n    $arr2 = str_split($b, 1);\n    $multiply\
    \ = $arr[1] * $arr2[1];\n    return $multiply;\n}\n\necho multiply(148, 412);\n\
    function candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "4\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpugesxg8r.php:27\n\
    Stack trace:\n#0 /tmp/tmpugesxg8r.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpugesxg8r.php\
    \ on line 27\n"
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $a = str_split($a);\n  $b = str_split($b);\n  return $a[count($a) -\
    \ 1] * $b[count($b) - 1];\n}\n\n$a = multiply(148, 412);\n$b = multiply(19, 28);\n\
    $c = multiply(2020, 1851);\n$d = multiply(14, -15);\nvar_dump($a, $b, $c, $d);\n\
    function candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'int(16)

    int(72)

    int(0)

    int(20)

    '
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  return ($a % 10) * ($b % 10);\n}\n\necho \"My answer:\\n\";\necho multiply(19,\
    \ 28) . \"\\n\";\necho multiply(14, -15) . \"\\n\";\necho \"Other answers:\\n\"\
    ;\necho multiply(19, 28) . \"\\n\";\necho multiply(19, 28) . \"\\n\";\necho multiply(19,\
    \ 28) . \"\\n\";\necho multiply(19, 28) . \"\\n\";\necho multiply(19, 28) . \"\
    \\n\";\necho multiply(19, 28) . \"\\n\";\necho multiply(19, 28) . \"\\n\";\necho\
    \ multiply(19, 28) . \"\\n\";\necho multiply(19, 28) . \"\\n\";\necho multiply(19,\
    \ 28) . \"\\n\";\necho multiply(19, 28) . \"\\n\";\necho multiply(19, 28) . \"\
    \\n\";\necho multiply(19, 28) . \"\\n\";\necho multiply(19, 28) . \"\\n\";\necho\
    \ multiply(19, 28) . \"\\n\";\necho multiply(19, 28) . \"\\n\";\necho multiply(19,\
    \ 28) . \"\\n\";\necho multiply(19, 28) . \"\\n\";\necho multiply(19, 28) . \"\
    \\n\";\necho multiply(19, 28) . \"\\n\";\necho multiply(19, 28) . \"\\n\";\necho\
    \ multiply(19, 28) . \"\\n\";\necho multiply(19, 28) . \"\\n\";\necho multiply(19,\
    \ 28) . \"\\n\";\necho multiply(19, 28) . \"\\n\";\necho multiply(19, 28) . \"\
    \\n\";\necho multiply(19, 28) . \"\\n\";\necho multiply(19, 28) . \"\\n\";\necho\
    \ multiply(19, 28) . \"\\n\";\necho multiply(19, 28) . \"\\n\";\necho multiply(19,\
    \ 28) . \"\\n\";\necho multiply(19, 28) . \"\\n\";\necho multiply(19, 28) . \"\
    \\n\";\necho multiply(19, 28) . \"\\n\";\necho multiply(19, 28) . \"\\n\";\necho\
    \ multiply(19, 28) . \"\\n\";\necho multiply(19, 28) . \"\\n\";\necho multiply(19,\
    \ 28) . \"\\\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "Test", expecting "," or ";"
    in /tmp/tmpob8ucuvk.php on line 65

    '
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  return ($a % 10) * ($b % 10);\n}\nfunction candidate(...$args) {\n\
    \    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmputwyoo_2.php:25\n\
    Stack trace:\n#0 /tmp/tmputwyoo_2.php(32): test()\n#1 {main}\n  thrown in /tmp/tmputwyoo_2.php\
    \ on line 25\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a %= 10;\n    $b %= 10;\n    return $a * $b;\n}\n\necho multiply(148,\
    \ 412) . \"<br>\";\necho multiply(19, 28) . \"<br>\";\necho multiply(2020, 1851)\
    \ . \"<br>\";\necho multiply(14, -15) . \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "16<br>72<br>0<br>-20<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpt3rjjhyb.php:32\nStack trace:\n#0 /tmp/tmpt3rjjhyb.php(39): test()\n\
    #1 {main}\n  thrown in /tmp/tmpt3rjjhyb.php on line 32\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return $a * $b;\n  }\n  echo '$a = \"148\" $b = \"412\" <br>';\n\
    \  echo multiply(148, 412);\n  \n  echo '<br>';\n  echo '$a = \"148\" $b = \"\
    412\" <br>';\n  echo multiply(19, 28);\n  \n  echo '<br>';\n  echo '$a = \"148\"\
    \ $b = \"412\" <br>';\n  echo multiply(2020, 1851);\n  \n  echo '<br>';\n  echo\
    \ '$a = \"148\" $b = \"412\" <br>';\n  echo multiply(14, -15);\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "$a = \"148\" $b = \"412\" <br>60976<br>$a = \"148\" $b = \"412\" <br>532<br>$a\
    \ = \"148\" $b = \"412\" <br>3739020<br>$a = \"148\" $b = \"412\" <br>-210\nFatal\
    \ error: Uncaught Exception: Test failed! in /tmp/tmpvb50xdai.php:36\nStack trace:\n\
    #0 /tmp/tmpvb50xdai.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpvb50xdai.php\
    \ on line 36\n"
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n\tif($a==0 || $b==0)\n\t\treturn 0;\n    $a = (string)$a;\n    $b = (string)$b;\n\
    \treturn ($a[strlen($a)-1] * $b[strlen($b)-1]);\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  return ($a % 10) * ($b % 10);\n}\nfunction candidate(...$args) {\n\
    \    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmputwyoo_2.php:25\n\
    Stack trace:\n#0 /tmp/tmputwyoo_2.php(32): test()\n#1 {main}\n  thrown in /tmp/tmputwyoo_2.php\
    \ on line 25\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  //$product = ($a % 10) * ($b % 10);\n  //return $product;\n  return\
    \ ($a % 10) * ($b % 10);\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_ybaq2bx.php:28\n\
    Stack trace:\n#0 /tmp/tmp_ybaq2bx.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp_ybaq2bx.php\
    \ on line 28\n"
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    $unit_a = $a % 10;\n    $unit_b\
    \ = $b % 10;\n    return $unit_a * $unit_b;\n}\necho multiply(148, 412);\necho\
    \ \"<br>\";\necho multiply(19, 28);\necho \"<br>\";\necho multiply(2020, 1851);\n\
    echo \"<br>\";\necho multiply(14, -15);\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 16<br>72<br>0<br>20
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return ($a % 10) * ($b % 10);\n}\nfunction candidate(...$args) {\n\
    \    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9bb4sext.php:25\n\
    Stack trace:\n#0 /tmp/tmp9bb4sext.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp9bb4sext.php\
    \ on line 25\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return ($a%10) * ($b%10);\n}\n\nfunction candidate(...$args) {\n\
    \    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaabu2wfr.php:26\n\
    Stack trace:\n#0 /tmp/tmpaabu2wfr.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpaabu2wfr.php\
    \ on line 26\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $a_unit = $a % 10;\n  $b_unit = $b % 10;\n  return $a_unit * $b_unit;\n\
    }\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk46bjjkk.php:27\n\
    Stack trace:\n#0 /tmp/tmpk46bjjkk.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpk46bjjkk.php\
    \ on line 27\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $unit_a = $a % 10;\n  $unit_b = $b % 10;\n  return $unit_a * $unit_b;\n\
    }\n\necho(multiply(14, -15));\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-20\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7_tpyzz8.php:29\n\
    Stack trace:\n#0 /tmp/tmp7_tpyzz8.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp7_tpyzz8.php\
    \ on line 29\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return (($a % 10) * ($b % 10));\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4onedw1q.php:25\n\
    Stack trace:\n#0 /tmp/tmp4onedw1q.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp4onedw1q.php\
    \ on line 25\n"
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return abs($a % 10) * abs($b % 10);\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822393
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $a = abs($a);\n  $b = abs($b);\n  return ($a % 10) * ($b % 10);\n}\n\
    function candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n\t$product = $a * $b;\n\t$unitDigit = substr($product, -1);\n\treturn\
    \ $unitDigit;\n}\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi6h3t1rt.php:24\n\
    Stack trace:\n#0 /tmp/tmpi6h3t1rt.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpi6h3t1rt.php\
    \ on line 24\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n\treturn $a < 0 ? -($a % 10) * ($b % 10) : ($a % 10) * ($b % 10);\n}\n\
    function candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr8y_r_ci.php:25\n\
    Stack trace:\n#0 /tmp/tmpr8y_r_ci.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpr8y_r_ci.php\
    \ on line 25\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\n$fptr = fopen(getenv(\"OUTPUT_PATH\"), \"w\");\n\n$stdin = fopen(\"php://stdin\"\
    , \"r\");\n\nfscanf($stdin, \"%d\\n\", $testCases);\n\nfor ($testCase = 0; $testCase\
    \ < $testCases; $testCase++) {\n    fscanf($stdin, \"%[^\\n]\", $ab_temp);\n \
    \   $ab = explode(' ', $ab_temp);\n\n    $a = intval($ab[0]);\n\n    $b = intval($ab[1]);\n\
    \n    $result = multiply($a, $b);\n\n    fwrite($fptr, $result . \"\\n\");\n}\n\
    \nfclose($stdin);\nfclose($fptr);\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught ValueError: Path cannot be empty in /tmp/tmpmsi2e6bk.php:20\n\
    Stack trace:\n#0 /tmp/tmpmsi2e6bk.php(20): fopen('', 'w')\n#1 {main}\n  thrown\
    \ in /tmp/tmpmsi2e6bk.php on line 20\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  // Your code here\n}\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqoinc74e.php:22\n\
    Stack trace:\n#0 /tmp/tmpqoinc74e.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpqoinc74e.php\
    \ on line 22\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return ($a % 10) * ($b % 10);\n}\nfunction candidate(...$args) {\n\
    \    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9bb4sext.php:25\n\
    Stack trace:\n#0 /tmp/tmp9bb4sext.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp9bb4sext.php\
    \ on line 25\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = (int) $a;\n    $b = (int) $b;\n    return ($a * $b) % 10;\n\
    }\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmff_od41.php:24\n\
    Stack trace:\n#0 /tmp/tmpmff_od41.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpmff_od41.php\
    \ on line 24\n"
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return (int) substr($a, -1) * (int) substr($b, -1);\n}\n\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    $a_arr = str_split($a);\n \
    \   $b_arr = str_split($b);\n    $a_last = end($a_arr);\n    $b_last = end($b_arr);\n\
    \    return $a_last * $b_last;\n}\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $a = (string)$a;\n  $b = (string)$b;\n  return $a[strlen($a)-1] * $b[strlen($b)-1];\n\
    }\necho multiply(148, 412);\necho multiply(19, 28);\necho multiply(2020, 1851);\n\
    echo multiply(14, -15);\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1672020'
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $result = substr($a, -1) * substr($b, -1);\n  return $result;\n}\n\n\
    function candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    //   return abs($a % 10) * abs($b % 10);\n    return ($a % 10) *\
    \ ($b % 10);\n}\necho(multiply(14, -15));\nfunction candidate(...$args) {\n  \
    \  return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-20\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjt6hrdq1.php:27\n\
    Stack trace:\n#0 /tmp/tmpjt6hrdq1.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpjt6hrdq1.php\
    \ on line 27\n"
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  return (abs($a)%10)*(abs($b)%10);\n}\necho multiply(14, -15);\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '20'
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $val = ($a % 10) * ($b % 10);\n  return $val;\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkmuv1x24.php:26\n\
    Stack trace:\n#0 /tmp/tmpkmuv1x24.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpkmuv1x24.php\
    \ on line 26\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return abs(abs($a) % 10 * abs($b) % 10);\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw1sm7sfr.php:22\n\
    Stack trace:\n#0 /tmp/tmpw1sm7sfr.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpw1sm7sfr.php\
    \ on line 22\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return ($a % 10) * ($b % 10);\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp38ezd8mf.php:26\n\
    Stack trace:\n#0 /tmp/tmp38ezd8mf.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp38ezd8mf.php\
    \ on line 26\n"
  timestamp: 1659822393
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    //your code here\n    $a_unit = substr($a, -1);\n    $b_unit = substr($b,\
    \ -1);\n    return $a_unit * $b_unit;\n}\nfunction candidate(...$args) {\n   \
    \ return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $string_a = (string)$a;\n  $string_b = (string)$b;\n  $last_char_a\
    \ = substr($string_a, -1);\n  $last_char_b = substr($string_b, -1);\n  return\
    \ $last_char_a * $last_char_b;\n}\necho multiply(148, 412);\necho \"<br>\";\n\
    echo multiply(19, 28);\necho \"<br>\";\necho multiply(2020, 1851);\necho \"<br>\"\
    ;\necho multiply(14, -15);\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 16<br>72<br>0<br>20
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $a = abs($a);\n  $b = abs($b);\n  $prod = ($a % 10) * ($b % 10);\n\
    \  return $prod;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $num = str_split($a.$b);\n  return $num[0] * $num[1];\n}\n\nprint(multiply(148,\
    \ 412).PHP_EOL); // 16\nprint(multiply(19, 28).PHP_EOL); // 72\nprint(multiply(2020,\
    \ 1851).PHP_EOL); // 0\nprint(multiply(14, -15).PHP_EOL); // 20\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "4\n9\n0\n4\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0h1q9_p5.php:28\n\
    Stack trace:\n#0 /tmp/tmp0h1q9_p5.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp0h1q9_p5.php\
    \ on line 28\n"
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return (abs($a)%10) * (abs($b)%10);\n}\necho multiply(148, 412);\n\
    function candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16'
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $units = abs($a % 10) * abs($b % 10);\n  return $units;\n}\n\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return ($a % 10) * ($b % 10);\n}\n\necho multiply(148, 412);\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpos36tfpd.php:27\n\
    Stack trace:\n#0 /tmp/tmpos36tfpd.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpos36tfpd.php\
    \ on line 27\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return (($a % 10) * ($b % 10));\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx0piexll.php:26\n\
    Stack trace:\n#0 /tmp/tmpx0piexll.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpx0piexll.php\
    \ on line 26\n"
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $a = abs($a % 10);\n  $b = abs($b % 10);\n  return $a * $b;\n}\necho\
    \ multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\n\";\n\
    echo multiply(2020, 1851);\necho \"\\n\";\necho multiply(14, -15);\necho \"\\\
    n\";\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a%10) * ($b%10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $c = ($a % 10) * ($b % 10);\n    return $c;\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1lytprxm.php:26\n\
    Stack trace:\n#0 /tmp/tmp1lytprxm.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp1lytprxm.php\
    \ on line 26\n"
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  return abs($a % 10) * abs($b % 10);\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return ($a % 10) * ($b % 10);\n}\n\n$a = 148;\n$b = 412;\necho multiply($a,\
    \ $b) . \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "16\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbou4hnkk.php:29\n\
    Stack trace:\n#0 /tmp/tmpbou4hnkk.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpbou4hnkk.php\
    \ on line 29\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  return $a % 10 * $b % 10;\n}\n\nprint multiply(148, 412);\nprint \"\
    \\n\";\nprint multiply(19, 28);\nprint \"\\n\";\nprint multiply(2020, 1851);\n\
    print \"\\n\";\nprint multiply(14, -15);\nprint \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6\n2\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzg9eye2z.php:32\n\
    Stack trace:\n#0 /tmp/tmpzg9eye2z.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpzg9eye2z.php\
    \ on line 32\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $a = $a % 10;\n  $b = $b % 10;\n  return $a * $b;\n}\necho multiply(2,\
    \ 3);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\n\";\necho multiply(2020,\
    \ 1851);\necho \"\\n\";\necho multiply(14, -15);\necho \"\\n\";\necho multiply(14,\
    \ 150);\necho \"\\n\";\necho multiply(14, 0);\necho \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6\n72\n0\n-20\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpoxhdibc4.php:40\nStack trace:\n#0 /tmp/tmpoxhdibc4.php(47): test()\n\
    #1 {main}\n  thrown in /tmp/tmpoxhdibc4.php on line 40\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprxqari2c.php:23\n\
    Stack trace:\n#0 /tmp/tmprxqari2c.php(33): test()\n#1 {main}\n  thrown in /tmp/tmprxqari2c.php\
    \ on line 23\n"
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n\t$a = abs($a % 10);\n\t$b = abs($b % 10);\n\treturn $a * $b;\n}\n\n\
    print multiply(148, 412) . \"\\n\";\nprint multiply(19, 28) . \"\\n\";\nprint\
    \ multiply(2020, 1851) . \"\\n\";\nprint multiply(14, -15) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $r = 0;\n  $a = $a % 10;\n  $b = $b % 10;\n  $r = $a * $b;\n  return\
    \ $r;\n}\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb4btagg4.php:29\n\
    Stack trace:\n#0 /tmp/tmpb4btagg4.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpb4btagg4.php\
    \ on line 29\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $result = $a*$b;\n    $arr = str_split($result);\n    $digits = array_pop($arr);\n\
    \    return $digits;\n}\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0qy5oud4.php:25\n\
    Stack trace:\n#0 /tmp/tmp0qy5oud4.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp0qy5oud4.php\
    \ on line 25\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $num = (string) $a . $b;\n    $num = str_split($num);\n    $result\
    \ = 1;\n    foreach ($num as $n) {\n        $result *= $n;\n    }\n    return\
    \ $result % 10;\n}\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6quancnb.php:28\n\
    Stack trace:\n#0 /tmp/tmp6quancnb.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp6quancnb.php\
    \ on line 28\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $num1 = $a % 10;\n    $num2 = $b % 10;\n    return $num1 * $num2;\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphd8mayqz.php:28\n\
    Stack trace:\n#0 /tmp/tmphd8mayqz.php(35): test()\n#1 {main}\n  thrown in /tmp/tmphd8mayqz.php\
    \ on line 28\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $product = ($a < 0 ? -($a) : $a) \n          * ($b < 0 ? -($b) : $b);\n\
    \  $product = str_split($product);\n  return (int)$product[count($product) - 1];\n\
    }\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaqxwgk08.php:25\n\
    Stack trace:\n#0 /tmp/tmpaqxwgk08.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpaqxwgk08.php\
    \ on line 25\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return ($a % 10) * ($b % 10);\n}\nfunction candidate(...$args) {\n\
    \    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9bb4sext.php:25\n\
    Stack trace:\n#0 /tmp/tmp9bb4sext.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp9bb4sext.php\
    \ on line 25\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $numberA = $a % 10;\n  $numberB = $b % 10;\n  return $numberA * $numberB;\n\
    }\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprw267vy1.php:27\n\
    Stack trace:\n#0 /tmp/tmprw267vy1.php(34): test()\n#1 {main}\n  thrown in /tmp/tmprw267vy1.php\
    \ on line 27\n"
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return substr($a, -1) * substr($b, -1);\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return ($a%10)*($b%10);\n}\necho multiply(14, -15);\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-20\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9g1vdxa5.php:26\n\
    Stack trace:\n#0 /tmp/tmp9g1vdxa5.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp9g1vdxa5.php\
    \ on line 26\n"
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $a_arr = str_split($a);\n  $b_arr = str_split($b);\n  $a_unit = (int)\
    \ $a_arr[count($a_arr) - 1];\n  $b_unit = (int) $b_arr[count($b_arr) - 1];\n \
    \ return $a_unit * $b_unit;\n}\n\n$test = multiply(148, 412);\nprint $test;\n\
    function candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16'
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $arr = [];\n    $arr[0] = substr($a, -1);\n    $arr[1] = substr($b,\
    \ -1);\n    return $arr[0] * $arr[1];\n}\n\necho multiply(148, 412);\necho \"\\\
    n\";\necho multiply(19, 28);\necho \"\\n\";\necho multiply(2020, 1851);\necho\
    \ \"\\n\";\necho multiply(14, -15);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $numbers = [$a, $b];\n    $result = [];\n    foreach ($numbers as\
    \ $number) {\n        $result[] = str_split(strval($number))[-1];\n    }\n   \
    \ return array_product($result);\n}\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key -1 in /tmp/tmpf5lkisai.php on line 18\n\n\
    Warning: Undefined array key -1 in /tmp/tmpf5lkisai.php on line 18\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpf5lkisai.php:27\nStack trace:\n\
    #0 /tmp/tmpf5lkisai.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpf5lkisai.php\
    \ on line 27\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n\t$product = ($a % 10) * ($b % 10);\n\treturn $product;\n}\n\necho multiply(148,\
    \ 412) . \"\\n\";\necho multiply(19, 28) . \"\\n\";\necho multiply(2020, 1851)\
    \ . \"\\n\";\necho multiply(14, -15) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "16\n72\n0\n-20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxi0tvj3n.php:31\n\
    Stack trace:\n#0 /tmp/tmpxi0tvj3n.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpxi0tvj3n.php\
    \ on line 31\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return ($a % 10) * ($b % 10);\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp38ezd8mf.php:26\n\
    Stack trace:\n#0 /tmp/tmp38ezd8mf.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp38ezd8mf.php\
    \ on line 26\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return $a % 10 * $b % 10;\n}\n\necho multiply(148, 412) . \"\\n\"\
    ;\necho multiply(19, 28) . \"\\n\";\necho multiply(2020, 1851) . \"\\n\";\necho\
    \ multiply(14, -15) . \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6\n2\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfui38zuf.php:27\n\
    Stack trace:\n#0 /tmp/tmpfui38zuf.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpfui38zuf.php\
    \ on line 27\n"
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = str_split($a);\n    $b = str_split($b);\n    return $a[count($a)\
    \ - 1] * $b[count($b) - 1];\n}\n\nprint_r(multiply(14, -15));\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '20'
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n}\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7dghf79m.php:27\n\
    Stack trace:\n#0 /tmp/tmp7dghf79m.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp7dghf79m.php\
    \ on line 27\n"
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n\t$a = str_split($a);\n\t$b = str_split($b);\n\treturn $a[count($a)-1]\
    \ * $b[count($b)-1];\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $a = (string) $a;\n  $b = (string) $b;\n  $a = substr($a, -1);\n  $b\
    \ = substr($b, -1);\n  return $a * $b;\n}\n\nfunction candidate(...$args) {\n\
    \    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  return ($a % 10) * ($b % 10);\n}\n\necho \">>>>>>>>>>>>>>>\\n\";\n\n\
    function candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: ">>>>>>>>>>>>>>>\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyuq5kpem.php:28\n\
    Stack trace:\n#0 /tmp/tmpyuq5kpem.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpyuq5kpem.php\
    \ on line 28\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  return $a < 0 ? ($a * -1) * ($b % 10) : $a * ($b % 10);\n}\n\necho\
    \ '>>>>>' . multiply(2020, 1851) . '<br>';\necho '>>>>>' . multiply(19, 28) .\
    \ '<br>';\necho '>>>>>' . multiply(148, 412) . '<br>';\necho '>>>>>' . multiply(14,\
    \ -15) . '<br>';\necho '>>>>>' . multiply(107, -207) . '<br>';\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: ">>>>>2020<br>>>>>>152<br>>>>>>296<br>>>>>>-70<br>>>>>>-749<br>\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpku8dzmb2.php:29\nStack trace:\n\
    #0 /tmp/tmpku8dzmb2.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpku8dzmb2.php\
    \ on line 29\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  return $a % 10 * $b % 10;\n}\necho multiply(148, 412). \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyx5zio9f.php:23\n\
    Stack trace:\n#0 /tmp/tmpyx5zio9f.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpyx5zio9f.php\
    \ on line 23\n"
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  return (abs($a) % 10) * (abs($b) % 10);\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return (abs($a)%10) * (abs($b)%10);\n}\necho multiply(148, 412);\n\
    echo \"<br>\";\necho multiply(19, 28);\necho \"<br>\";\necho multiply(2020, 1851);\n\
    echo \"<br>\";\necho multiply(14, -15);\necho \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 16<br>72<br>0<br>20<br>
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return ($a % 10) * ($b % 10);\n}\n\necho multiply(148, 412);\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpos36tfpd.php:27\n\
    Stack trace:\n#0 /tmp/tmpos36tfpd.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpos36tfpd.php\
    \ on line 27\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  // Your code here!\n}\n\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf52oooqs.php:23\n\
    Stack trace:\n#0 /tmp/tmpf52oooqs.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpf52oooqs.php\
    \ on line 23\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $a = abs($a);\n  $b = abs($b);\n  return $a % 10 * $b % 10;\n}\n\n\
    echo multiply(148, 412);\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8e1_ulle.php:26\n\
    Stack trace:\n#0 /tmp/tmp8e1_ulle.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp8e1_ulle.php\
    \ on line 26\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $a = $a % 10;\n  $b = $b % 10;\n  return $a * $b;\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_nw52kzb.php:27\n\
    Stack trace:\n#0 /tmp/tmp_nw52kzb.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp_nw52kzb.php\
    \ on line 27\n"
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a % 10);\n    $b = abs($b % 10);\n    return $a * $b;\n\
    }\n\necho multiply(148, 412) . \"\\n\";\necho multiply(19, 28) . \"\\n\";\necho\
    \ multiply(2020, 1851) . \"\\n\";\necho multiply(14, -15) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  return (($a % 10) * ($b % 10));\n}\n\necho multiply(148, 412);\necho\
    \ \"\\n\";\necho multiply(19, 28);\necho \"\\n\";\necho multiply(2020, 1851);\n\
    echo \"\\n\";\necho multiply(14, -15);\necho \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "16\n72\n0\n-20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmmjtx3nx.php:35\n\
    Stack trace:\n#0 /tmp/tmpmmjtx3nx.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpmmjtx3nx.php\
    \ on line 35\n"
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = (string) $a;\n    $b = (string) $b;\n    $a = $a[strlen($a)\
    \ - 1];\n    $b = $b[strlen($b) - 1];\n    return $a * $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n\treturn $a % 10 * $b % 10;\n}\n\nfunction candidate(...$args) {\n  \
    \  return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyqd81z83.php:23\n\
    Stack trace:\n#0 /tmp/tmpyqd81z83.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpyqd81z83.php\
    \ on line 23\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpulx2ojh1.php:22\n\
    Stack trace:\n#0 /tmp/tmpulx2ojh1.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpulx2ojh1.php\
    \ on line 22\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n\treturn ($a%10) * ($b%10);\n}\necho multiply(148, 412);\n\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc9tskq72.php:27\n\
    Stack trace:\n#0 /tmp/tmpc9tskq72.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpc9tskq72.php\
    \ on line 27\n"
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $a = (string)$a;\n  $b = (string)$b;\n  return (int)$a[-1] * (int)$b[-1];\n\
    }\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = (int) $a;\n    $b = (int) $b;\n    return ($a - floor($a / 10)\
    \ * 10) * ($b - floor($b / 10) * 10);\n}\n\nprint_r(multiply(148, 412).PHP_EOL);\n\
    print_r(multiply(19, 28).PHP_EOL);\nprint_r(multiply(2020, 1851).PHP_EOL);\nprint_r(multiply(14,\
    \ -15).PHP_EOL);\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "16\n72\n0\n20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvn4kfi52.php:29\n\
    Stack trace:\n#0 /tmp/tmpvn4kfi52.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpvn4kfi52.php\
    \ on line 29\n"
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return (abs($a % 10) * abs($b % 10));\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n\t$a = abs($a);\n\t$b = abs($b);\n\t$A = $a % 10;\n\t$B = $b % 10;\n\t\
    return $A * $B;\n}\nprint_r(multiply(148, 412));\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16'
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n\treturn (abs($a) % 10) * (abs($b) % 10);\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $product = ($a % 10) * ($b % 10);\n  return $product;\n}\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb305xdx3.php:26\n\
    Stack trace:\n#0 /tmp/tmpb305xdx3.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpb305xdx3.php\
    \ on line 26\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  return $a * $b;\n}\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp401ls6cm.php:22\n\
    Stack trace:\n#0 /tmp/tmp401ls6cm.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp401ls6cm.php\
    \ on line 22\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    $product = $a % 10 * $b % 10;\n\
    \    return $product;\n}\n\n$a = 148;\n$b = 412;\n$result = multiply($a, $b);\n\
    echo $result;\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp551gwyem.php:30\n\
    Stack trace:\n#0 /tmp/tmp551gwyem.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp551gwyem.php\
    \ on line 30\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return ($a * $b) % 10;\n}\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0dfrs82e.php:22\n\
    Stack trace:\n#0 /tmp/tmp0dfrs82e.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp0dfrs82e.php\
    \ on line 22\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  return $a % 10 * $b % 10;\n}\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpro6nuxe1.php:22\n\
    Stack trace:\n#0 /tmp/tmpro6nuxe1.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpro6nuxe1.php\
    \ on line 22\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return ($a % 10) * ($b % 10);\n}\necho multiply(148, 412);\necho\
    \ \"<br>\";\necho multiply(19, 28);\necho \"<br>\";\necho multiply(2020, 1851);\n\
    echo \"<br>\";\necho multiply(14, -15);\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "16<br>72<br>0<br>-20\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp7bqt1kd6.php:32\nStack trace:\n#0 /tmp/tmp7bqt1kd6.php(39): test()\n\
    #1 {main}\n  thrown in /tmp/tmp7bqt1kd6.php on line 32\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  return $a % 10 * $b % 10;\n}\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpro6nuxe1.php:22\n\
    Stack trace:\n#0 /tmp/tmpro6nuxe1.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpro6nuxe1.php\
    \ on line 22\n"
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  // Good luck!\n  $a = $a < 0 ? $a * -1 : $a;\n  $b = $b < 0 ? $b *\
    \ -1 : $b;\n  $c = ($a % 10) * ($b % 10);\n  return $c;\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $tmp = $a * $b;\n    $digs = explode('', $tmp);\n    $sum = 0;\n\
    \    foreach ($digs as $digit) {\n        $sum += $digit;\n    }\n    return $sum;\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught ValueError: explode(): Argument #1 ($separator)\
    \ cannot be empty in /tmp/tmpyvg5v1ci.php:16\nStack trace:\n#0 /tmp/tmpyvg5v1ci.php(16):\
    \ explode('', '60976')\n#1 /tmp/tmpyvg5v1ci.php(25): multiply(148, 412)\n#2 /tmp/tmpyvg5v1ci.php(29):\
    \ candidate(148, 412)\n#3 /tmp/tmpyvg5v1ci.php(39): test()\n#4 {main}\n  thrown\
    \ in /tmp/tmpyvg5v1ci.php on line 16\n"
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    $a_unit = $a % 10;\n    $b_unit\
    \ = $b % 10;\n    return $a_unit * $b_unit;\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    $a = str_split($a);\n    $b\
    \ = str_split($b);\n    return $a[1] * $b[1];\n  }\n  echo \"<pre>\";\n  print_r(multiply(148,\
    \ 412));\n  echo \"</pre>\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>4</pre>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1g17lzpj.php:29\n\
    Stack trace:\n#0 /tmp/tmp1g17lzpj.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp1g17lzpj.php\
    \ on line 29\n"
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $a = abs($a % 10);\n  $b = abs($b % 10);\n  return $a * $b;\n}\n\n\
    echo multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\n\"\
    ;\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14, -15);\necho \"\
    \\n\";\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $intA = str_split($a);\n    $intB = str_split($b);\n    $unitA =\
    \ end($intA);\n    $unitB = end($intB);\n    return $unitA * $unitB;\n}\n\necho\
    \ multiply(148, 412) . \"\\n\";\necho multiply(19, 28) . \"\\n\";\necho multiply(2020,\
    \ 1851) . \"\\n\";\necho multiply(14, -15) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  // multiply the units of a and b\n  $a = substr((string)$a, -1);\n\
    \  $b = substr((string)$b, -1);\n  return $a * $b;\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $arr = [$a, $b];\n  for ($i = 0; $i < count($arr); $i++) {\n    if\
    \ ($arr[$i] < 0) {\n      $arr[$i] = substr($arr[$i], 1);\n    }\n  }\n  $unit_a\
    \ = substr($arr[0], -1);\n  $unit_b = substr($arr[1], -1);\n  return $unit_a *\
    \ $unit_b;\n}\n\n$a = 148;\n$b = 412;\n$result = multiply($a, $b);\necho $result;\n\
    \nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16'
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n\treturn ($a % 10) * ($b % 10);\n}\nfunction candidate(...$args) {\n\
    \    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_e1c1kdi.php:25\n\
    Stack trace:\n#0 /tmp/tmp_e1c1kdi.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp_e1c1kdi.php\
    \ on line 25\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $aa = $a % 10;\n    $bb = $b % 10;\n    return $aa * $bb;\n}\necho\
    \ multiply(19, 28);\necho \"\\n\";\necho multiply(14, -15);\necho \"\\n\";\n\n\
    function candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "72\n-20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk_uuou3_.php:32\n\
    Stack trace:\n#0 /tmp/tmpk_uuou3_.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpk_uuou3_.php\
    \ on line 32\n"
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    // your code here\n    $str_a = (string)abs($a);\n    $str_b = (string)abs($b);\n\
    \    $a = (int)$str_a[strlen($str_a)-1];\n    $b = (int)$str_b[strlen($str_b)-1];\n\
    \    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return str_split($a)[1] * str_split($b)[1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp81ogf30b.php:23\n\
    Stack trace:\n#0 /tmp/tmp81ogf30b.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp81ogf30b.php\
    \ on line 23\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  // ...\n}\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps3x98neh.php:22\n\
    Stack trace:\n#0 /tmp/tmps3x98neh.php(32): test()\n#1 {main}\n  thrown in /tmp/tmps3x98neh.php\
    \ on line 22\n"
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = substr($a, -1);\n    $b = substr($b, -1);\n    return $a * $b;\n\
    }\necho multiply(148, 412);\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16'
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $unit_a = $a % 10;\n    $unit_b = $b % 10;\n    return $unit_a *\
    \ $unit_b;\n}\n$a = 148;\n$b = 412;\n$result = multiply($a, $b);\necho $result;\n\
    function candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwkm4yui7.php:31\n\
    Stack trace:\n#0 /tmp/tmpwkm4yui7.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpwkm4yui7.php\
    \ on line 31\n"
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return abs($a % 10) * abs($b % 10);\n}\necho multiply(19, 28);\n\
    function candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '72'
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\n\nvar_dump(multiply(148, 412));\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'int(16)

    '
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  // TODO: You can do it, puffin!\n  return $a % 10 * $b % 10;\n}\n\n\
    print_r(multiply(148, 412).PHP_EOL);\nprint_r(multiply(19, 28).PHP_EOL);\nprint_r(multiply(2020,\
    \ 1851).PHP_EOL);\nprint_r(multiply(14, -15).PHP_EOL);\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6\n2\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr7mesoou.php:28\n\
    Stack trace:\n#0 /tmp/tmpr7mesoou.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpr7mesoou.php\
    \ on line 28\n"
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  // your code here\n  $a = abs($a);\n  $b = abs($b);\n  return ($a%10)\
    \ * ($b%10);\n}\necho multiply(148, 412); // 16\necho multiply(19, 28); // 72\n\
    echo multiply(2020, 1851); // 0\necho multiply(14, -15); // 20\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1672020'
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $result = 0;\n    while($a > 10) {\n        $a = floor($a / 10);\n\
    \    }\n    while($b > 10) {\n        $b = floor($b / 10);\n    }\n    $result\
    \ = $a * $b;\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxs_y7ybp.php:31\n\
    Stack trace:\n#0 /tmp/tmpxs_y7ybp.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpxs_y7ybp.php\
    \ on line 31\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  return (int)str_replace('-', '', str_split($a, 1)[0]) * (int)str_replace('-',\
    \ '', str_split($b, 1)[0]);\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoiqgm8ex.php:23\n\
    Stack trace:\n#0 /tmp/tmpoiqgm8ex.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpoiqgm8ex.php\
    \ on line 23\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $a = (int) strrev($a);\n  $b = (int) strrev($b);\n  return $a * $b;\n\
    }\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0bulqx0j.php:24\n\
    Stack trace:\n#0 /tmp/tmp0bulqx0j.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp0bulqx0j.php\
    \ on line 24\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $unit_a = $a % 10;\n    $unit_b = $b % 10;\n    return $unit_a *\
    \ $unit_b;\n}\n$result = multiply(148, 412);\necho $result;\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkovt1mfa.php:29\n\
    Stack trace:\n#0 /tmp/tmpkovt1mfa.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpkovt1mfa.php\
    \ on line 29\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $i = strlen($a) - 1;\n  $j = strlen($b) - 1;\n  return (int) $a[$i]\
    \ * (int) $b[$j];\n}\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmppb06e6d9.php\
    \ on line 17\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmppb06e6d9.php on line 17\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmppb06e6d9.php:24\nStack trace:\n#0 /tmp/tmppb06e6d9.php(34): test()\n\
    #1 {main}\n  thrown in /tmp/tmppb06e6d9.php on line 24\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  return ($a % 10) * ($b % 10);\n}\nfunction candidate(...$args) {\n\
    \    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmputwyoo_2.php:25\n\
    Stack trace:\n#0 /tmp/tmputwyoo_2.php(32): test()\n#1 {main}\n  thrown in /tmp/tmputwyoo_2.php\
    \ on line 25\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  return ($a % 10) * ($b % 10);\n}\n\nfunction candidate(...$args) {\n\
    \    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjq2i29pr.php:26\n\
    Stack trace:\n#0 /tmp/tmpjq2i29pr.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpjq2i29pr.php\
    \ on line 26\n"
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $pr1 = substr($a, -1);\n  $pr2 = substr($b, -1);\n  $res = $pr1 * $pr2;\n\
    \  return $res;\n}\n\necho multiply(20, -15);\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0'
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $a = $a % 10;\n  $b = $b % 10;\n  $result = $a * $b;\n  return $result;\n\
    }\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8cn38yq_.php:28\n\
    Stack trace:\n#0 /tmp/tmp8cn38yq_.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp8cn38yq_.php\
    \ on line 28\n"
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    $res = ($a % 10) * ($b % 10);\n\
    \    return $res;\n}\necho multiply(1, 2);\nfunction candidate(...$args) {\n \
    \   return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '2'
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $a = array_map('intval', str_split(abs($a)));\n  $b = array_map('intval',\
    \ str_split(abs($b)));\n  return $a[count($a) - 1] * $b[count($b) - 1];\n}\n\n\
    echo multiply(148, 412);\necho \"<br>\";\necho multiply(19, 28);\necho \"<br>\"\
    ;\necho multiply(2020, 1851);\necho \"<br>\";\necho multiply(14, -15);\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: 16<br>72<br>0<br>20
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return (abs($a)%10)*(abs($b)%10);\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n\treturn ($a % 10) * ($b % 10);\n}\n\nfunction candidate(...$args) {\n\
    \    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq9q29m9i.php:26\n\
    Stack trace:\n#0 /tmp/tmpq9q29m9i.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpq9q29m9i.php\
    \ on line 26\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  // your solution here\n}\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4crz1kdb.php:22\n\
    Stack trace:\n#0 /tmp/tmp4crz1kdb.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp4crz1kdb.php\
    \ on line 22\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n\t$multiplication = (string) $a[strlen($a) - 1] * $b[strlen($b) - 1];\n\
    \    return (int) $multiplication;\n}\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmpxy5fbxu1.php\
    \ on line 15\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmpxy5fbxu1.php on line 15\n\nFatal error: Uncaught TypeError: Unsupported\
    \ operand types: string * null in /tmp/tmpxy5fbxu1.php:15\nStack trace:\n#0 /tmp/tmpxy5fbxu1.php(19):\
    \ multiply(148, 412)\n#1 /tmp/tmpxy5fbxu1.php(23): candidate(148, 412)\n#2 /tmp/tmpxy5fbxu1.php(33):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpxy5fbxu1.php on line 15\n"
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $product = (abs($a) % 10) * (abs($b) % 10);\n  return $product;\n}\n\
    \nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return $a % 10 * $b % 10;\n}\nfunction candidate(...$args) {\n  \
    \  return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppz3dt9hq.php:22\n\
    Stack trace:\n#0 /tmp/tmppz3dt9hq.php(32): test()\n#1 {main}\n  thrown in /tmp/tmppz3dt9hq.php\
    \ on line 22\n"
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return abs($a % 10) * abs($b % 10);\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $first = $a % 10;\n    $second = $b % 10;\n    return $first * $second;\n\
    }\necho multiply(148, 412);\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplumpiw67.php:28\n\
    Stack trace:\n#0 /tmp/tmplumpiw67.php(35): test()\n#1 {main}\n  thrown in /tmp/tmplumpiw67.php\
    \ on line 28\n"
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $a = abs($a);\n  $b = abs($b);\n  $a = $a % 10;\n  $b = $b % 10;\n\
    \  return $a * $b;\n}\nprint multiply(3912, 3423);\nprint multiply(1, 2);\nprint\
    \ multiply(8, 2);\nprint multiply(0, 45);\nfunction candidate(...$args) {\n  \
    \  return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '62160'
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $res = 1;\n  $tmp = [$a, $b];\n  foreach ($tmp as $n) {\n    $res *=\
    \ intval(strrev($n)) % 10;\n  }\n  return $res;\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8hjl9p57.php:27\n\
    Stack trace:\n#0 /tmp/tmp8hjl9p57.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp8hjl9p57.php\
    \ on line 27\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $num = 0;\n  $num += intval($a % 10) * intval($b % 10);\n  return $num;\n\
    }\n\necho multiply(14, -15);\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "-20\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4aqmzdcp.php:29\n\
    Stack trace:\n#0 /tmp/tmp4aqmzdcp.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp4aqmzdcp.php\
    \ on line 29\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return $a%10 * $b%10;\n}\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqdmck8jr.php:22\n\
    Stack trace:\n#0 /tmp/tmpqdmck8jr.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpqdmck8jr.php\
    \ on line 22\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return ($a % 10) * ($b % 10);\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp38ezd8mf.php:26\n\
    Stack trace:\n#0 /tmp/tmp38ezd8mf.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp38ezd8mf.php\
    \ on line 26\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  // your code here\n}\n\necho multiply(148, 412);\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfb0bd2y3.php:24\n\
    Stack trace:\n#0 /tmp/tmpfb0bd2y3.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpfb0bd2y3.php\
    \ on line 24\n"
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return abs(($a%10)*($b%10));\n}\n\necho multiply(148, 412);\necho\
    \ \"\\n\";\necho multiply(19, 28);\necho \"\\n\";\necho multiply(2020, 1851);\n\
    echo \"\\n\";\necho multiply(14, -15);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    // Write your code here\n    $c = (string) $a;\n    $d = (string)\
    \ $b;\n    $c = $c[strlen($c)-1];\n    $d = $d[strlen($d)-1];\n    return $c *\
    \ $d;\n}\nprint_r(multiply(148, 412));\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16'
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $a = str_split($a);\n  $b = str_split($b);\n  return array_product($a)\
    \ * array_product($b);\n}\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2i_2s7io.php:24\n\
    Stack trace:\n#0 /tmp/tmp2i_2s7io.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp2i_2s7io.php\
    \ on line 24\n"
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return (abs($a) % 10) * (abs($b) % 10);\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n\t$arr = [\n\t\t$a % 10,\n\t\t$b % 10\n\t];\n\treturn $arr[0] * $arr[1];\n\
    }\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpykzenm59.php:29\n\
    Stack trace:\n#0 /tmp/tmpykzenm59.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpykzenm59.php\
    \ on line 29\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return $a * $b % 10;\n}\necho multiply(148, 412);\necho multiply(19,\
    \ 28);\necho multiply(2020, 1851);\necho multiply(14, -15);\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6200\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv25v7wfk.php:26\n\
    Stack trace:\n#0 /tmp/tmpv25v7wfk.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpv25v7wfk.php\
    \ on line 26\n"
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a % 10) * ($b % 10);\n\
    }\necho multiply(148, 412).PHP_EOL;\necho multiply(19, 28).PHP_EOL;\necho multiply(2020,\
    \ 1851).PHP_EOL;\necho multiply(14, -15).PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  return abs($a) % 10 * abs($b) % 10;\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvlm95v8j.php:22\n\
    Stack trace:\n#0 /tmp/tmpvlm95v8j.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpvlm95v8j.php\
    \ on line 22\n"
  timestamp: 1659822393
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $i = $a % 10;\n    $j = $b % 10;\n    return $i * $j;\n}\n\necho\
    \ \"testing multiply(148, 412)\\n\";\necho \"Answer is 16\\n\";\necho \"Result:\
    \ \" . multiply(148, 412) . \"\\n\";\necho \"testing multiply(19, 28)\\n\";\n\
    echo \"Answer is 72\\n\";\necho \"Result: \" . multiply(19, 28) . \"\\n\";\necho\
    \ \"testing multiply(2020, 1851)\\n\";\necho \"Answer is 0\\n\";\necho \"Result:\
    \ \" . multiply(2020, 1851) . \"\\n\";\necho \"testing multiply(14, -15)\\n\"\
    ;\necho \"Answer is 20\\n\";\necho \"Result: \" . multiply(14, -15) . \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "testing multiply(148, 412)\nAnswer is 16\nResult: 16\ntesting multiply(19,\
    \ 28)\nAnswer is 72\nResult: 72\ntesting multiply(2020, 1851)\nAnswer is 0\nResult:\
    \ 0\ntesting multiply(14, -15)\nAnswer is 20\nResult: -20\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpz2zl5fzx.php:40\nStack trace:\n#0 /tmp/tmpz2zl5fzx.php(47):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpz2zl5fzx.php on line 40\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    // answer here\n    $a = $a % 10;\n    $b = $b % 10;\n    return\
    \ $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqzba2vlv.php:29\n\
    Stack trace:\n#0 /tmp/tmpqzba2vlv.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpqzba2vlv.php\
    \ on line 29\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  return ($a%10) * ($b%10);\n}\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg9tzjgl_.php:25\n\
    Stack trace:\n#0 /tmp/tmpg9tzjgl_.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpg9tzjgl_.php\
    \ on line 25\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $answer = ($a%10) * ($b%10);\n  return $answer;\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy9kghsbx.php:26\n\
    Stack trace:\n#0 /tmp/tmpy9kghsbx.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpy9kghsbx.php\
    \ on line 26\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  return $a % 10 * $b % 10;\n}\n\necho multiply(148, 412);\necho '<br>';\n\
    echo multiply(19, 28);\necho '<br>';\necho multiply(2020, 1851);\necho '<br>';\n\
    echo multiply(14, -15);\necho '<br>';\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6<br>2<br>0<br>0<br>\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp7tx37lzi.php:31\nStack trace:\n#0 /tmp/tmp7tx37lzi.php(41): test()\n\
    #1 {main}\n  thrown in /tmp/tmp7tx37lzi.php on line 31\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $output = ($a%10) * ($b%10);\n  return $output;\n}\necho multiply(148,\
    \ 412) . \"\\n\";\necho multiply(19, 28) . \"\\n\";\necho multiply(2020, 1851)\
    \ . \"\\n\";\necho multiply(14, -15) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "16\n72\n0\n-20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz4y46riz.php:30\n\
    Stack trace:\n#0 /tmp/tmpz4y46riz.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpz4y46riz.php\
    \ on line 30\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $first = $a % 10;\n    $second = $b % 10;\n    return $first * $second;\n\
    }\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa8opttkj.php:27\n\
    Stack trace:\n#0 /tmp/tmpa8opttkj.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpa8opttkj.php\
    \ on line 27\n"
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $unitA = substr($a, -1);\n  $unitB = substr($b, -1);\n  return $unitA\
    \ * $unitB;\n}\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = (string) $a;\n    $b = (string) $b;\n    $a = $a[strlen($a)\
    \ - 1];\n    $b = $b[strlen($b) - 1];\n    return (int) $a * (int) $b;\n}\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $a = (string)$a;\n  $b = (string)$b;\n  return (int)$a[strlen($a)-1]\
    \ * (int)$b[strlen($b)-1];\n}\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  return (abs($a) % 10) * (abs($b) % 10);\n}\necho multiply(148, 412)\
    \ . PHP_EOL; // 16\necho multiply(19, 28) . PHP_EOL; // 72\necho multiply(2020,\
    \ 1851) . PHP_EOL; // 0\necho multiply(14, -15) . PHP_EOL; // 20\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '16

    72

    0

    20

    '
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $c = $a % 10;\n  $d = $b % 10;\n  $result = $c * $d;\n  return $result;\n\
    }\necho multiply(19, 28);\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "72\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_mf6h08r.php:29\n\
    Stack trace:\n#0 /tmp/tmp_mf6h08r.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp_mf6h08r.php\
    \ on line 29\n"
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $a = abs($a);\n  $b = abs($b);\n  $a = $a % 10;\n  $b = $b % 10;\n\
    \  return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = ($a % 10);\n    $b = ($b % 10);\n    return $a * $b;\n}\n\n\
    function candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpozrojfr4.php:28\n\
    Stack trace:\n#0 /tmp/tmpozrojfr4.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpozrojfr4.php\
    \ on line 28\n"
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  return (abs($a) % 10) * (abs($b) % 10);\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a%10) * ($b%10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return $a % 10 * $b % 10;\n}\nfunction candidate(...$args) {\n  \
    \  return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppz3dt9hq.php:22\n\
    Stack trace:\n#0 /tmp/tmppz3dt9hq.php(32): test()\n#1 {main}\n  thrown in /tmp/tmppz3dt9hq.php\
    \ on line 22\n"
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a % 10);\n    $b = abs($b % 10);\n    return $a * $b;\n\
    }\necho multiply(148, 412);\necho \"<br>\";\necho multiply(19, 28);\necho \"<br>\"\
    ;\necho multiply(2020, 1851);\necho \"<br>\";\necho multiply(14, -15);\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: 16<br>72<br>0<br>20
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  // your code here\n  if ($a < 0) {\n    $a = abs($a);\n  }\n  if ($b\
    \ < 0) {\n    $b = abs($b);\n  }\n  $a = $a % 10;\n  $b = $b % 10;\n  $result\
    \ = $a * $b;\n  return $result;\n}\necho multiply(2020, 1851);\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '0'
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = abs($a);\n    $b = abs($b);\n    return ($a%10) * ($b%10);\n\
    }\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $product = ($a % 10) * ($b % 10);\n  return $product;\n}\n\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvgkf1yvs.php:27\n\
    Stack trace:\n#0 /tmp/tmpvgkf1yvs.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpvgkf1yvs.php\
    \ on line 27\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $one_a = $a % 10;\n  $one_b = $b % 10;\n  return $one_a * $one_b;\n\
    }\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\\
    n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14, -15);\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "16\n72\n0\n-20\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphq9mk72n.php:35\n\
    Stack trace:\n#0 /tmp/tmphq9mk72n.php(42): test()\n#1 {main}\n  thrown in /tmp/tmphq9mk72n.php\
    \ on line 35\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  return ($a % 10) * ($b % 10);\n}\n\necho multiply(148, 412) . \"\\\
    n\";\necho multiply(19, 28) . \"\\n\";\necho multiply(2020, 1851) . \"\\n\";\n\
    echo multiply(14, -15) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "16\n72\n0\n-20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbw8fwofj.php:30\n\
    Stack trace:\n#0 /tmp/tmpbw8fwofj.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpbw8fwofj.php\
    \ on line 30\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    //Get the unit digits of both $a and $b\n    $unitDigitA = intval($a\
    \ % 10);\n    $unitDigitB = intval($b % 10);\n    return $unitDigitA * $unitDigitB;\n\
    }\n\n$result = multiply(148, 412);\necho $result;\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "16\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr9a0bcn4.php:31\n\
    Stack trace:\n#0 /tmp/tmpr9a0bcn4.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpr9a0bcn4.php\
    \ on line 31\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $a = preg_replace('/[^0-9]/', '', $a);\n  $b = preg_replace('/[^0-9]/',\
    \ '', $b);\n  return $a * $b;\n}\nmultiply(148, 412);\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7en4eshj.php:25\n\
    Stack trace:\n#0 /tmp/tmp7en4eshj.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp7en4eshj.php\
    \ on line 25\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return ($a % 10) * ($b % 10);\n}\n\nvar_dump(multiply(3, 4));\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "int(12)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfmjh9ouh.php:27\n\
    Stack trace:\n#0 /tmp/tmpfmjh9ouh.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpfmjh9ouh.php\
    \ on line 27\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  return $a * $b % 10;\n}\n$result = multiply(2020, 1851);\necho $result;\n\
    function candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcy2yar6l.php:24\n\
    Stack trace:\n#0 /tmp/tmpcy2yar6l.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpcy2yar6l.php\
    \ on line 24\n"
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  return (($a % 10) * ($b % 10));\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4q6hr7ip.php:26\n\
    Stack trace:\n#0 /tmp/tmp4q6hr7ip.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp4q6hr7ip.php\
    \ on line 26\n"
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $a = str_split($a);\n    $b = str_split($b);\n    return $a[count($a)\
    \ - 1] * $b[count($b) - 1];\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    $unit = (abs($a) % 10) * (abs($b) % 10);\n    return $unit;\n}\n\n\
    var_dump(multiply(148, 412));\nvar_dump(multiply(19, 28));\nvar_dump(multiply(2020,\
    \ 1851));\nvar_dump(multiply(14, -15));\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'int(16)

    int(72)

    int(0)

    int(20)

    '
  timestamp: 1660028515
- exit_code: 255
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n    return ($a * $b) % 10;\n}\n\necho multiply(148, 412) . \"\\n\";\n\
    echo multiply(19, 28) . \"\\n\";\necho multiply(2020, 1851) . \"\\n\";\necho multiply(14,\
    \ -15) . \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "6\n2\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk84bqtip.php:27\n\
    Stack trace:\n#0 /tmp/tmpk84bqtip.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpk84bqtip.php\
    \ on line 27\n"
  timestamp: 1660028515
- exit_code: 0
  program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// >>> multiply(148, 412)\n// 16\n// >>> multiply(19, 28)\n// 72\n\
    // >>> multiply(2020, 1851)\n// 0\n// >>> multiply(14, -15)\n// 20\nfunction multiply($a,\
    \ $b) {\n  $a = abs($a % 10);\n  $b = abs($b % 10);\n  return $a * $b;\n}\n\n\
    function candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660028515
